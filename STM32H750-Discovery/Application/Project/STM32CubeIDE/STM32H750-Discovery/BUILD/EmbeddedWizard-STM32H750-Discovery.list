
EmbeddedWizard-STM32H750-Discovery.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  90000000  90000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .SectionEwResource 000046c8  90000298  90000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002b104  90004960  90004960  00014960  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00005c18  9002fa68  9002fa68  0003fa68  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000008  90035680  90035680  00045680  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .init_array   00000004  90035688  90035688  00045688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .fini_array   00000004  9003568c  9003568c  0004568c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .data         000000ac  20000000  90035690  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .bss          000039a4  200000ac  9003573c  000500ac  2**2
                  ALLOC
  9 ._user_heap_stack 00002200  20003a50  9003573c  00053a50  2**0
                  ALLOC
 10 .ARM.attributes 0000002e  00000000  00000000  000500ac  2**0
                  CONTENTS, READONLY
 11 .debug_info   0005ff9c  00000000  00000000  000500da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_abbrev 00009303  00000000  00000000  000b0076  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loc    0002a57b  00000000  00000000  000b9379  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002240  00000000  00000000  000e38f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00005790  00000000  00000000  000e5b38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00040767  00000000  00000000  000eb2c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00039ddf  00000000  00000000  0012ba2f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00195184  00000000  00000000  0016580e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000a0  00000000  00000000  002fa992  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000084b4  00000000  00000000  002faa34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .stab         000000cc  00000000  00000000  00302ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 22 .stabstr      000001b9  00000000  00000000  00302fb4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

90004960 <__do_global_dtors_aux>:
90004960:	b510      	push	{r4, lr}
90004962:	4c05      	ldr	r4, [pc, #20]	; (90004978 <__do_global_dtors_aux+0x18>)
90004964:	7823      	ldrb	r3, [r4, #0]
90004966:	b933      	cbnz	r3, 90004976 <__do_global_dtors_aux+0x16>
90004968:	4b04      	ldr	r3, [pc, #16]	; (9000497c <__do_global_dtors_aux+0x1c>)
9000496a:	b113      	cbz	r3, 90004972 <__do_global_dtors_aux+0x12>
9000496c:	4804      	ldr	r0, [pc, #16]	; (90004980 <__do_global_dtors_aux+0x20>)
9000496e:	f3af 8000 	nop.w
90004972:	2301      	movs	r3, #1
90004974:	7023      	strb	r3, [r4, #0]
90004976:	bd10      	pop	{r4, pc}
90004978:	200000ac 	.word	0x200000ac
9000497c:	00000000 	.word	0x00000000
90004980:	9002fa4c 	.word	0x9002fa4c

90004984 <frame_dummy>:
90004984:	b508      	push	{r3, lr}
90004986:	4b03      	ldr	r3, [pc, #12]	; (90004994 <frame_dummy+0x10>)
90004988:	b11b      	cbz	r3, 90004992 <frame_dummy+0xe>
9000498a:	4903      	ldr	r1, [pc, #12]	; (90004998 <frame_dummy+0x14>)
9000498c:	4803      	ldr	r0, [pc, #12]	; (9000499c <frame_dummy+0x18>)
9000498e:	f3af 8000 	nop.w
90004992:	bd08      	pop	{r3, pc}
90004994:	00000000 	.word	0x00000000
90004998:	200000b0 	.word	0x200000b0
9000499c:	9002fa4c 	.word	0x9002fa4c

900049a0 <EwCreateNativeSurface>:
900049a0:	fb01 f300 	mul.w	r3, r1, r0
900049a4:	b570      	push	{r4, r5, r6, lr}
900049a6:	009d      	lsls	r5, r3, #2
900049a8:	4604      	mov	r4, r0
900049aa:	460e      	mov	r6, r1
900049ac:	f105 0018 	add.w	r0, r5, #24
900049b0:	f015 f9d2 	bl	90019d58 <EwAllocVideo>
900049b4:	b1f0      	cbz	r0, 900049f4 <EwCreateNativeSurface+0x54>
900049b6:	f100 0318 	add.w	r3, r0, #24
900049ba:	4a0f      	ldr	r2, [pc, #60]	; (900049f8 <EwCreateNativeSurface+0x58>)
900049bc:	6083      	str	r3, [r0, #8]
900049be:	2300      	movs	r3, #0
900049c0:	e9c0 3304 	strd	r3, r3, [r0, #16]
900049c4:	6813      	ldr	r3, [r2, #0]
900049c6:	3318      	adds	r3, #24
900049c8:	442b      	add	r3, r5
900049ca:	e9c0 4600 	strd	r4, r6, [r0]
900049ce:	6013      	str	r3, [r2, #0]
900049d0:	00a4      	lsls	r4, r4, #2
900049d2:	4a0a      	ldr	r2, [pc, #40]	; (900049fc <EwCreateNativeSurface+0x5c>)
900049d4:	60c4      	str	r4, [r0, #12]
900049d6:	6811      	ldr	r1, [r2, #0]
900049d8:	428b      	cmp	r3, r1
900049da:	4909      	ldr	r1, [pc, #36]	; (90004a00 <EwCreateNativeSurface+0x60>)
900049dc:	bfc8      	it	gt
900049de:	6013      	strgt	r3, [r2, #0]
900049e0:	4a08      	ldr	r2, [pc, #32]	; (90004a04 <EwCreateNativeSurface+0x64>)
900049e2:	6809      	ldr	r1, [r1, #0]
900049e4:	6812      	ldr	r2, [r2, #0]
900049e6:	440a      	add	r2, r1
900049e8:	4413      	add	r3, r2
900049ea:	4a07      	ldr	r2, [pc, #28]	; (90004a08 <EwCreateNativeSurface+0x68>)
900049ec:	6811      	ldr	r1, [r2, #0]
900049ee:	428b      	cmp	r3, r1
900049f0:	bfc8      	it	gt
900049f2:	6013      	strgt	r3, [r2, #0]
900049f4:	bd70      	pop	{r4, r5, r6, pc}
900049f6:	bf00      	nop
900049f8:	200002bc 	.word	0x200002bc
900049fc:	200002d8 	.word	0x200002d8
90004a00:	200002b8 	.word	0x200002b8
90004a04:	200002ac 	.word	0x200002ac
90004a08:	200002c0 	.word	0x200002c0

90004a0c <EwCreateConstNativeSurface>:
90004a0c:	b570      	push	{r4, r5, r6, lr}
90004a0e:	4605      	mov	r5, r0
90004a10:	460e      	mov	r6, r1
90004a12:	4614      	mov	r4, r2
90004a14:	2a00      	cmp	r2, #0
90004a16:	d02c      	beq.n	90004a72 <EwCreateConstNativeSurface+0x66>
90004a18:	6810      	ldr	r0, [r2, #0]
90004a1a:	b348      	cbz	r0, 90004a70 <EwCreateConstNativeSurface+0x64>
90004a1c:	6853      	ldr	r3, [r2, #4]
90004a1e:	2b04      	cmp	r3, #4
90004a20:	d127      	bne.n	90004a72 <EwCreateConstNativeSurface+0x66>
90004a22:	6893      	ldr	r3, [r2, #8]
90004a24:	ebb3 0f85 	cmp.w	r3, r5, lsl #2
90004a28:	db23      	blt.n	90004a72 <EwCreateConstNativeSurface+0x66>
90004a2a:	2018      	movs	r0, #24
90004a2c:	f015 f994 	bl	90019d58 <EwAllocVideo>
90004a30:	b1f0      	cbz	r0, 90004a70 <EwCreateConstNativeSurface+0x64>
90004a32:	6823      	ldr	r3, [r4, #0]
90004a34:	2201      	movs	r2, #1
90004a36:	4910      	ldr	r1, [pc, #64]	; (90004a78 <EwCreateConstNativeSurface+0x6c>)
90004a38:	6083      	str	r3, [r0, #8]
90004a3a:	68a3      	ldr	r3, [r4, #8]
90004a3c:	60c3      	str	r3, [r0, #12]
90004a3e:	2300      	movs	r3, #0
90004a40:	e9c0 2304 	strd	r2, r3, [r0, #16]
90004a44:	680b      	ldr	r3, [r1, #0]
90004a46:	f103 0218 	add.w	r2, r3, #24
90004a4a:	4b0c      	ldr	r3, [pc, #48]	; (90004a7c <EwCreateConstNativeSurface+0x70>)
90004a4c:	e9c0 5600 	strd	r5, r6, [r0]
90004a50:	600a      	str	r2, [r1, #0]
90004a52:	6819      	ldr	r1, [r3, #0]
90004a54:	428a      	cmp	r2, r1
90004a56:	490a      	ldr	r1, [pc, #40]	; (90004a80 <EwCreateConstNativeSurface+0x74>)
90004a58:	bfc8      	it	gt
90004a5a:	601a      	strgt	r2, [r3, #0]
90004a5c:	4b09      	ldr	r3, [pc, #36]	; (90004a84 <EwCreateConstNativeSurface+0x78>)
90004a5e:	6809      	ldr	r1, [r1, #0]
90004a60:	681b      	ldr	r3, [r3, #0]
90004a62:	440b      	add	r3, r1
90004a64:	4413      	add	r3, r2
90004a66:	4a08      	ldr	r2, [pc, #32]	; (90004a88 <EwCreateConstNativeSurface+0x7c>)
90004a68:	6811      	ldr	r1, [r2, #0]
90004a6a:	428b      	cmp	r3, r1
90004a6c:	dd00      	ble.n	90004a70 <EwCreateConstNativeSurface+0x64>
90004a6e:	6013      	str	r3, [r2, #0]
90004a70:	bd70      	pop	{r4, r5, r6, pc}
90004a72:	2000      	movs	r0, #0
90004a74:	e7fc      	b.n	90004a70 <EwCreateConstNativeSurface+0x64>
90004a76:	bf00      	nop
90004a78:	200002bc 	.word	0x200002bc
90004a7c:	200002d8 	.word	0x200002d8
90004a80:	200002b8 	.word	0x200002b8
90004a84:	200002ac 	.word	0x200002ac
90004a88:	200002c0 	.word	0x200002c0

90004a8c <EwDestroyNativeSurface>:
90004a8c:	b410      	push	{r4}
90004a8e:	b160      	cbz	r0, 90004aaa <EwDestroyNativeSurface+0x1e>
90004a90:	6943      	ldr	r3, [r0, #20]
90004a92:	b953      	cbnz	r3, 90004aaa <EwDestroyNativeSurface+0x1e>
90004a94:	4908      	ldr	r1, [pc, #32]	; (90004ab8 <EwDestroyNativeSurface+0x2c>)
90004a96:	6903      	ldr	r3, [r0, #16]
90004a98:	680a      	ldr	r2, [r1, #0]
90004a9a:	b953      	cbnz	r3, 90004ab2 <EwDestroyNativeSurface+0x26>
90004a9c:	e9d0 3400 	ldrd	r3, r4, [r0]
90004aa0:	4363      	muls	r3, r4
90004aa2:	3306      	adds	r3, #6
90004aa4:	009b      	lsls	r3, r3, #2
90004aa6:	1ad3      	subs	r3, r2, r3
90004aa8:	600b      	str	r3, [r1, #0]
90004aaa:	f85d 4b04 	ldr.w	r4, [sp], #4
90004aae:	f015 ba47 	b.w	90019f40 <EwFreeVideo>
90004ab2:	2318      	movs	r3, #24
90004ab4:	e7f7      	b.n	90004aa6 <EwDestroyNativeSurface+0x1a>
90004ab6:	bf00      	nop
90004ab8:	200002bc 	.word	0x200002bc

90004abc <EwGetNativeSurfaceMemory>:
90004abc:	b530      	push	{r4, r5, lr}
90004abe:	e9dd 4303 	ldrd	r4, r3, [sp, #12]
90004ac2:	b10c      	cbz	r4, 90004ac8 <EwGetNativeSurfaceMemory+0xc>
90004ac4:	6904      	ldr	r4, [r0, #16]
90004ac6:	b984      	cbnz	r4, 90004aea <EwGetNativeSurfaceMemory+0x2e>
90004ac8:	68c5      	ldr	r5, [r0, #12]
90004aca:	008c      	lsls	r4, r1, #2
90004acc:	fb02 4105 	mla	r1, r2, r5, r4
90004ad0:	6882      	ldr	r2, [r0, #8]
90004ad2:	2001      	movs	r0, #1
90004ad4:	609d      	str	r5, [r3, #8]
90004ad6:	4411      	add	r1, r2
90004ad8:	2204      	movs	r2, #4
90004ada:	605a      	str	r2, [r3, #4]
90004adc:	2200      	movs	r2, #0
90004ade:	6019      	str	r1, [r3, #0]
90004ae0:	60da      	str	r2, [r3, #12]
90004ae2:	619a      	str	r2, [r3, #24]
90004ae4:	e9c3 2204 	strd	r2, r2, [r3, #16]
90004ae8:	bd30      	pop	{r4, r5, pc}
90004aea:	2000      	movs	r0, #0
90004aec:	e7fc      	b.n	90004ae8 <EwGetNativeSurfaceMemory+0x2c>

90004aee <EwGetNativeSurfaceMemSize>:
90004aee:	4348      	muls	r0, r1
90004af0:	3006      	adds	r0, #6
90004af2:	0080      	lsls	r0, r0, #2
90004af4:	4770      	bx	lr

90004af6 <EwCreateScreenSurface>:
90004af6:	fb01 f300 	mul.w	r3, r1, r0
90004afa:	b570      	push	{r4, r5, r6, lr}
90004afc:	005d      	lsls	r5, r3, #1
90004afe:	4604      	mov	r4, r0
90004b00:	460e      	mov	r6, r1
90004b02:	f105 0014 	add.w	r0, r5, #20
90004b06:	f015 f927 	bl	90019d58 <EwAllocVideo>
90004b0a:	b1e8      	cbz	r0, 90004b48 <EwCreateScreenSurface+0x52>
90004b0c:	f100 0314 	add.w	r3, r0, #20
90004b10:	4a0e      	ldr	r2, [pc, #56]	; (90004b4c <EwCreateScreenSurface+0x56>)
90004b12:	6083      	str	r3, [r0, #8]
90004b14:	2300      	movs	r3, #0
90004b16:	6103      	str	r3, [r0, #16]
90004b18:	6813      	ldr	r3, [r2, #0]
90004b1a:	3314      	adds	r3, #20
90004b1c:	442b      	add	r3, r5
90004b1e:	e9c0 4600 	strd	r4, r6, [r0]
90004b22:	6013      	str	r3, [r2, #0]
90004b24:	0064      	lsls	r4, r4, #1
90004b26:	4a0a      	ldr	r2, [pc, #40]	; (90004b50 <EwCreateScreenSurface+0x5a>)
90004b28:	60c4      	str	r4, [r0, #12]
90004b2a:	6811      	ldr	r1, [r2, #0]
90004b2c:	428b      	cmp	r3, r1
90004b2e:	4909      	ldr	r1, [pc, #36]	; (90004b54 <EwCreateScreenSurface+0x5e>)
90004b30:	bfc8      	it	gt
90004b32:	6013      	strgt	r3, [r2, #0]
90004b34:	4a08      	ldr	r2, [pc, #32]	; (90004b58 <EwCreateScreenSurface+0x62>)
90004b36:	6809      	ldr	r1, [r1, #0]
90004b38:	6812      	ldr	r2, [r2, #0]
90004b3a:	440a      	add	r2, r1
90004b3c:	4413      	add	r3, r2
90004b3e:	4a07      	ldr	r2, [pc, #28]	; (90004b5c <EwCreateScreenSurface+0x66>)
90004b40:	6811      	ldr	r1, [r2, #0]
90004b42:	428b      	cmp	r3, r1
90004b44:	bfc8      	it	gt
90004b46:	6013      	strgt	r3, [r2, #0]
90004b48:	bd70      	pop	{r4, r5, r6, pc}
90004b4a:	bf00      	nop
90004b4c:	200002bc 	.word	0x200002bc
90004b50:	200002d8 	.word	0x200002d8
90004b54:	200002b8 	.word	0x200002b8
90004b58:	200002ac 	.word	0x200002ac
90004b5c:	200002c0 	.word	0x200002c0

90004b60 <EwDestroyScreenSurface>:
90004b60:	b150      	cbz	r0, 90004b78 <EwDestroyScreenSurface+0x18>
90004b62:	6903      	ldr	r3, [r0, #16]
90004b64:	b943      	cbnz	r3, 90004b78 <EwDestroyScreenSurface+0x18>
90004b66:	4905      	ldr	r1, [pc, #20]	; (90004b7c <EwDestroyScreenSurface+0x1c>)
90004b68:	e9d0 3200 	ldrd	r3, r2, [r0]
90004b6c:	4353      	muls	r3, r2
90004b6e:	680a      	ldr	r2, [r1, #0]
90004b70:	330a      	adds	r3, #10
90004b72:	eba2 0343 	sub.w	r3, r2, r3, lsl #1
90004b76:	600b      	str	r3, [r1, #0]
90004b78:	f015 b9e2 	b.w	90019f40 <EwFreeVideo>
90004b7c:	200002bc 	.word	0x200002bc

90004b80 <EwGetScreenSurfaceMemory>:
90004b80:	b510      	push	{r4, lr}
90004b82:	0049      	lsls	r1, r1, #1
90004b84:	68c4      	ldr	r4, [r0, #12]
90004b86:	9b03      	ldr	r3, [sp, #12]
90004b88:	fb02 1104 	mla	r1, r2, r4, r1
90004b8c:	6882      	ldr	r2, [r0, #8]
90004b8e:	2001      	movs	r0, #1
90004b90:	609c      	str	r4, [r3, #8]
90004b92:	4411      	add	r1, r2
90004b94:	2202      	movs	r2, #2
90004b96:	605a      	str	r2, [r3, #4]
90004b98:	2200      	movs	r2, #0
90004b9a:	6019      	str	r1, [r3, #0]
90004b9c:	60da      	str	r2, [r3, #12]
90004b9e:	619a      	str	r2, [r3, #24]
90004ba0:	e9c3 2204 	strd	r2, r2, [r3, #16]
90004ba4:	bd10      	pop	{r4, pc}

90004ba6 <EwGetScreenSurfaceMemSize>:
90004ba6:	4348      	muls	r0, r1
90004ba8:	0040      	lsls	r0, r0, #1
90004baa:	4770      	bx	lr

90004bac <EwCreateConstRGB565Surface>:
90004bac:	b570      	push	{r4, r5, r6, lr}
90004bae:	4605      	mov	r5, r0
90004bb0:	460e      	mov	r6, r1
90004bb2:	4614      	mov	r4, r2
90004bb4:	b352      	cbz	r2, 90004c0c <EwCreateConstRGB565Surface+0x60>
90004bb6:	6810      	ldr	r0, [r2, #0]
90004bb8:	b338      	cbz	r0, 90004c0a <EwCreateConstRGB565Surface+0x5e>
90004bba:	6853      	ldr	r3, [r2, #4]
90004bbc:	2b02      	cmp	r3, #2
90004bbe:	d125      	bne.n	90004c0c <EwCreateConstRGB565Surface+0x60>
90004bc0:	6893      	ldr	r3, [r2, #8]
90004bc2:	ebb3 0f45 	cmp.w	r3, r5, lsl #1
90004bc6:	db21      	blt.n	90004c0c <EwCreateConstRGB565Surface+0x60>
90004bc8:	2014      	movs	r0, #20
90004bca:	f015 f8c5 	bl	90019d58 <EwAllocVideo>
90004bce:	b1e0      	cbz	r0, 90004c0a <EwCreateConstRGB565Surface+0x5e>
90004bd0:	6823      	ldr	r3, [r4, #0]
90004bd2:	490f      	ldr	r1, [pc, #60]	; (90004c10 <EwCreateConstRGB565Surface+0x64>)
90004bd4:	6083      	str	r3, [r0, #8]
90004bd6:	68a3      	ldr	r3, [r4, #8]
90004bd8:	60c3      	str	r3, [r0, #12]
90004bda:	2301      	movs	r3, #1
90004bdc:	6103      	str	r3, [r0, #16]
90004bde:	680b      	ldr	r3, [r1, #0]
90004be0:	f103 0214 	add.w	r2, r3, #20
90004be4:	4b0b      	ldr	r3, [pc, #44]	; (90004c14 <EwCreateConstRGB565Surface+0x68>)
90004be6:	e9c0 5600 	strd	r5, r6, [r0]
90004bea:	600a      	str	r2, [r1, #0]
90004bec:	6819      	ldr	r1, [r3, #0]
90004bee:	428a      	cmp	r2, r1
90004bf0:	4909      	ldr	r1, [pc, #36]	; (90004c18 <EwCreateConstRGB565Surface+0x6c>)
90004bf2:	bfc8      	it	gt
90004bf4:	601a      	strgt	r2, [r3, #0]
90004bf6:	4b09      	ldr	r3, [pc, #36]	; (90004c1c <EwCreateConstRGB565Surface+0x70>)
90004bf8:	6809      	ldr	r1, [r1, #0]
90004bfa:	681b      	ldr	r3, [r3, #0]
90004bfc:	440b      	add	r3, r1
90004bfe:	4413      	add	r3, r2
90004c00:	4a07      	ldr	r2, [pc, #28]	; (90004c20 <EwCreateConstRGB565Surface+0x74>)
90004c02:	6811      	ldr	r1, [r2, #0]
90004c04:	428b      	cmp	r3, r1
90004c06:	dd00      	ble.n	90004c0a <EwCreateConstRGB565Surface+0x5e>
90004c08:	6013      	str	r3, [r2, #0]
90004c0a:	bd70      	pop	{r4, r5, r6, pc}
90004c0c:	2000      	movs	r0, #0
90004c0e:	e7fc      	b.n	90004c0a <EwCreateConstRGB565Surface+0x5e>
90004c10:	200002bc 	.word	0x200002bc
90004c14:	200002d8 	.word	0x200002d8
90004c18:	200002b8 	.word	0x200002b8
90004c1c:	200002ac 	.word	0x200002ac
90004c20:	200002c0 	.word	0x200002c0

90004c24 <EwCreateRGB565Surface>:
90004c24:	fb01 f300 	mul.w	r3, r1, r0
90004c28:	b570      	push	{r4, r5, r6, lr}
90004c2a:	005d      	lsls	r5, r3, #1
90004c2c:	4604      	mov	r4, r0
90004c2e:	460e      	mov	r6, r1
90004c30:	f105 0014 	add.w	r0, r5, #20
90004c34:	f015 f890 	bl	90019d58 <EwAllocVideo>
90004c38:	b1e8      	cbz	r0, 90004c76 <EwCreateRGB565Surface+0x52>
90004c3a:	f100 0314 	add.w	r3, r0, #20
90004c3e:	4a0e      	ldr	r2, [pc, #56]	; (90004c78 <EwCreateRGB565Surface+0x54>)
90004c40:	6083      	str	r3, [r0, #8]
90004c42:	2300      	movs	r3, #0
90004c44:	6103      	str	r3, [r0, #16]
90004c46:	6813      	ldr	r3, [r2, #0]
90004c48:	3314      	adds	r3, #20
90004c4a:	442b      	add	r3, r5
90004c4c:	e9c0 4600 	strd	r4, r6, [r0]
90004c50:	6013      	str	r3, [r2, #0]
90004c52:	0064      	lsls	r4, r4, #1
90004c54:	4a09      	ldr	r2, [pc, #36]	; (90004c7c <EwCreateRGB565Surface+0x58>)
90004c56:	60c4      	str	r4, [r0, #12]
90004c58:	6811      	ldr	r1, [r2, #0]
90004c5a:	428b      	cmp	r3, r1
90004c5c:	4908      	ldr	r1, [pc, #32]	; (90004c80 <EwCreateRGB565Surface+0x5c>)
90004c5e:	bfc8      	it	gt
90004c60:	6013      	strgt	r3, [r2, #0]
90004c62:	4a08      	ldr	r2, [pc, #32]	; (90004c84 <EwCreateRGB565Surface+0x60>)
90004c64:	6809      	ldr	r1, [r1, #0]
90004c66:	6812      	ldr	r2, [r2, #0]
90004c68:	440a      	add	r2, r1
90004c6a:	4413      	add	r3, r2
90004c6c:	4a06      	ldr	r2, [pc, #24]	; (90004c88 <EwCreateRGB565Surface+0x64>)
90004c6e:	6811      	ldr	r1, [r2, #0]
90004c70:	428b      	cmp	r3, r1
90004c72:	bfc8      	it	gt
90004c74:	6013      	strgt	r3, [r2, #0]
90004c76:	bd70      	pop	{r4, r5, r6, pc}
90004c78:	200002bc 	.word	0x200002bc
90004c7c:	200002d8 	.word	0x200002d8
90004c80:	200002b8 	.word	0x200002b8
90004c84:	200002ac 	.word	0x200002ac
90004c88:	200002c0 	.word	0x200002c0

90004c8c <EwDestroyRGB565Surface>:
90004c8c:	b410      	push	{r4}
90004c8e:	b150      	cbz	r0, 90004ca6 <EwDestroyRGB565Surface+0x1a>
90004c90:	4908      	ldr	r1, [pc, #32]	; (90004cb4 <EwDestroyRGB565Surface+0x28>)
90004c92:	6903      	ldr	r3, [r0, #16]
90004c94:	680a      	ldr	r2, [r1, #0]
90004c96:	b953      	cbnz	r3, 90004cae <EwDestroyRGB565Surface+0x22>
90004c98:	e9d0 3400 	ldrd	r3, r4, [r0]
90004c9c:	4363      	muls	r3, r4
90004c9e:	330a      	adds	r3, #10
90004ca0:	005b      	lsls	r3, r3, #1
90004ca2:	1ad3      	subs	r3, r2, r3
90004ca4:	600b      	str	r3, [r1, #0]
90004ca6:	f85d 4b04 	ldr.w	r4, [sp], #4
90004caa:	f015 b949 	b.w	90019f40 <EwFreeVideo>
90004cae:	2314      	movs	r3, #20
90004cb0:	e7f7      	b.n	90004ca2 <EwDestroyRGB565Surface+0x16>
90004cb2:	bf00      	nop
90004cb4:	200002bc 	.word	0x200002bc

90004cb8 <EwGetRGB565SurfaceMemory>:
90004cb8:	b530      	push	{r4, r5, lr}
90004cba:	e9dd 4303 	ldrd	r4, r3, [sp, #12]
90004cbe:	b10c      	cbz	r4, 90004cc4 <EwGetRGB565SurfaceMemory+0xc>
90004cc0:	6904      	ldr	r4, [r0, #16]
90004cc2:	b984      	cbnz	r4, 90004ce6 <EwGetRGB565SurfaceMemory+0x2e>
90004cc4:	68c5      	ldr	r5, [r0, #12]
90004cc6:	004c      	lsls	r4, r1, #1
90004cc8:	fb02 4105 	mla	r1, r2, r5, r4
90004ccc:	6882      	ldr	r2, [r0, #8]
90004cce:	2001      	movs	r0, #1
90004cd0:	609d      	str	r5, [r3, #8]
90004cd2:	4411      	add	r1, r2
90004cd4:	2202      	movs	r2, #2
90004cd6:	605a      	str	r2, [r3, #4]
90004cd8:	2200      	movs	r2, #0
90004cda:	6019      	str	r1, [r3, #0]
90004cdc:	60da      	str	r2, [r3, #12]
90004cde:	619a      	str	r2, [r3, #24]
90004ce0:	e9c3 2204 	strd	r2, r2, [r3, #16]
90004ce4:	bd30      	pop	{r4, r5, pc}
90004ce6:	2000      	movs	r0, #0
90004ce8:	e7fc      	b.n	90004ce4 <EwGetRGB565SurfaceMemory+0x2c>

90004cea <EwGetRGB565SurfaceMemSize>:
90004cea:	4348      	muls	r0, r1
90004cec:	300a      	adds	r0, #10
90004cee:	0040      	lsls	r0, r0, #1
90004cf0:	4770      	bx	lr

90004cf2 <EwPackColor>:
90004cf2:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
90004cf6:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
90004cfa:	ea43 2001 	orr.w	r0, r3, r1, lsl #8
90004cfe:	4770      	bx	lr

90004d00 <EwPackClutEntry>:
90004d00:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
90004d04:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
90004d08:	ea41 4000 	orr.w	r0, r1, r0, lsl #16
90004d0c:	4770      	bx	lr

90004d0e <EwSetPixelSolid>:
90004d0e:	b510      	push	{r4, lr}
90004d10:	6884      	ldr	r4, [r0, #8]
90004d12:	6800      	ldr	r0, [r0, #0]
90004d14:	4362      	muls	r2, r4
90004d16:	691c      	ldr	r4, [r3, #16]
90004d18:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004d1c:	6818      	ldr	r0, [r3, #0]
90004d1e:	0b24      	lsrs	r4, r4, #12
90004d20:	0900      	lsrs	r0, r0, #4
90004d22:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90004d26:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90004d2a:	4320      	orrs	r0, r4
90004d2c:	6a1c      	ldr	r4, [r3, #32]
90004d2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004d30:	f3c4 5407 	ubfx	r4, r4, #20, #8
90004d34:	011b      	lsls	r3, r3, #4
90004d36:	4320      	orrs	r0, r4
90004d38:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
90004d3c:	4303      	orrs	r3, r0
90004d3e:	508b      	str	r3, [r1, r2]
90004d40:	bd10      	pop	{r4, pc}

90004d42 <EwSetPixelSolidBlend>:
90004d42:	b5f0      	push	{r4, r5, r6, r7, lr}
90004d44:	681c      	ldr	r4, [r3, #0]
90004d46:	0089      	lsls	r1, r1, #2
90004d48:	691d      	ldr	r5, [r3, #16]
90004d4a:	0924      	lsrs	r4, r4, #4
90004d4c:	6b1e      	ldr	r6, [r3, #48]	; 0x30
90004d4e:	0b2d      	lsrs	r5, r5, #12
90004d50:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
90004d54:	0136      	lsls	r6, r6, #4
90004d56:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90004d5a:	f006 467f 	and.w	r6, r6, #4278190080	; 0xff000000
90004d5e:	432c      	orrs	r4, r5
90004d60:	6a1d      	ldr	r5, [r3, #32]
90004d62:	f1b6 4f7f 	cmp.w	r6, #4278190080	; 0xff000000
90004d66:	f3c5 5507 	ubfx	r5, r5, #20, #8
90004d6a:	ea44 0405 	orr.w	r4, r4, r5
90004d6e:	ea4f 6516 	mov.w	r5, r6, lsr #24
90004d72:	ea44 0306 	orr.w	r3, r4, r6
90004d76:	6884      	ldr	r4, [r0, #8]
90004d78:	6800      	ldr	r0, [r0, #0]
90004d7a:	fb04 1202 	mla	r2, r4, r2, r1
90004d7e:	d003      	beq.n	90004d88 <EwSetPixelSolidBlend+0x46>
90004d80:	5886      	ldr	r6, [r0, r2]
90004d82:	0e34      	lsrs	r4, r6, #24
90004d84:	d102      	bne.n	90004d8c <EwSetPixelSolidBlend+0x4a>
90004d86:	b105      	cbz	r5, 90004d8a <EwSetPixelSolidBlend+0x48>
90004d88:	5083      	str	r3, [r0, r2]
90004d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90004d8c:	2d00      	cmp	r5, #0
90004d8e:	d0fc      	beq.n	90004d8a <EwSetPixelSolidBlend+0x48>
90004d90:	f1c5 01ff 	rsb	r1, r5, #255	; 0xff
90004d94:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
90004d98:	f3c6 2607 	ubfx	r6, r6, #8, #8
90004d9c:	fb04 1101 	mla	r1, r4, r1, r1
90004da0:	f003 14ff 	and.w	r4, r3, #16711935	; 0xff00ff
90004da4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90004da8:	0a09      	lsrs	r1, r1, #8
90004daa:	fb05 4404 	mla	r4, r5, r4, r4
90004dae:	fb05 3303 	mla	r3, r5, r3, r3
90004db2:	fb01 4407 	mla	r4, r1, r7, r4
90004db6:	fb01 3306 	mla	r3, r1, r6, r3
90004dba:	4429      	add	r1, r5
90004dbc:	0a24      	lsrs	r4, r4, #8
90004dbe:	29fe      	cmp	r1, #254	; 0xfe
90004dc0:	ea4f 2313 	mov.w	r3, r3, lsr #8
90004dc4:	d80a      	bhi.n	90004ddc <EwSetPixelSolidBlend+0x9a>
90004dc6:	4d0a      	ldr	r5, [pc, #40]	; (90004df0 <EwSetPixelSolidBlend+0xae>)
90004dc8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90004dcc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90004dd0:	f835 5011 	ldrh.w	r5, [r5, r1, lsl #1]
90004dd4:	436c      	muls	r4, r5
90004dd6:	436b      	muls	r3, r5
90004dd8:	0a24      	lsrs	r4, r4, #8
90004dda:	0a1b      	lsrs	r3, r3, #8
90004ddc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90004de0:	021b      	lsls	r3, r3, #8
90004de2:	ea44 6101 	orr.w	r1, r4, r1, lsl #24
90004de6:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90004dea:	430b      	orrs	r3, r1
90004dec:	e7cc      	b.n	90004d88 <EwSetPixelSolidBlend+0x46>
90004dee:	bf00      	nop
90004df0:	9002fa7c 	.word	0x9002fa7c

90004df4 <EwFillRowSolid>:
90004df4:	6813      	ldr	r3, [r2, #0]
90004df6:	b510      	push	{r4, lr}
90004df8:	6804      	ldr	r4, [r0, #0]
90004dfa:	091b      	lsrs	r3, r3, #4
90004dfc:	6910      	ldr	r0, [r2, #16]
90004dfe:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90004e02:	0b00      	lsrs	r0, r0, #12
90004e04:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90004e08:	4303      	orrs	r3, r0
90004e0a:	6a10      	ldr	r0, [r2, #32]
90004e0c:	6b12      	ldr	r2, [r2, #48]	; 0x30
90004e0e:	f3c0 5007 	ubfx	r0, r0, #20, #8
90004e12:	0112      	lsls	r2, r2, #4
90004e14:	4303      	orrs	r3, r0
90004e16:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
90004e1a:	4313      	orrs	r3, r2
90004e1c:	2900      	cmp	r1, #0
90004e1e:	dc00      	bgt.n	90004e22 <EwFillRowSolid+0x2e>
90004e20:	bd10      	pop	{r4, pc}
90004e22:	3901      	subs	r1, #1
90004e24:	f844 3b04 	str.w	r3, [r4], #4
90004e28:	e7f8      	b.n	90004e1c <EwFillRowSolid+0x28>

90004e2a <EwFillRowSolidBlend>:
90004e2a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90004e2e:	6813      	ldr	r3, [r2, #0]
90004e30:	6805      	ldr	r5, [r0, #0]
90004e32:	6910      	ldr	r0, [r2, #16]
90004e34:	091b      	lsrs	r3, r3, #4
90004e36:	6b16      	ldr	r6, [r2, #48]	; 0x30
90004e38:	0b00      	lsrs	r0, r0, #12
90004e3a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90004e3e:	0136      	lsls	r6, r6, #4
90004e40:	f8df 809c 	ldr.w	r8, [pc, #156]	; 90004ee0 <EwFillRowSolidBlend+0xb6>
90004e44:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90004e48:	f006 467f 	and.w	r6, r6, #4278190080	; 0xff000000
90004e4c:	4303      	orrs	r3, r0
90004e4e:	6a10      	ldr	r0, [r2, #32]
90004e50:	f3c0 5007 	ubfx	r0, r0, #20, #8
90004e54:	4303      	orrs	r3, r0
90004e56:	ea43 0e06 	orr.w	lr, r3, r6
90004e5a:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
90004e5e:	0e36      	lsrs	r6, r6, #24
90004e60:	f3c3 2307 	ubfx	r3, r3, #8, #8
90004e64:	f1c6 0cff 	rsb	ip, r6, #255	; 0xff
90004e68:	fb06 7707 	mla	r7, r6, r7, r7
90004e6c:	fb06 3303 	mla	r3, r6, r3, r3
90004e70:	2900      	cmp	r1, #0
90004e72:	dc01      	bgt.n	90004e78 <EwFillRowSolidBlend+0x4e>
90004e74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90004e78:	2eff      	cmp	r6, #255	; 0xff
90004e7a:	d003      	beq.n	90004e84 <EwFillRowSolidBlend+0x5a>
90004e7c:	682c      	ldr	r4, [r5, #0]
90004e7e:	0e22      	lsrs	r2, r4, #24
90004e80:	d105      	bne.n	90004e8e <EwFillRowSolidBlend+0x64>
90004e82:	b10e      	cbz	r6, 90004e88 <EwFillRowSolidBlend+0x5e>
90004e84:	f8c5 e000 	str.w	lr, [r5]
90004e88:	3504      	adds	r5, #4
90004e8a:	3901      	subs	r1, #1
90004e8c:	e7f0      	b.n	90004e70 <EwFillRowSolidBlend+0x46>
90004e8e:	2e00      	cmp	r6, #0
90004e90:	d0fa      	beq.n	90004e88 <EwFillRowSolidBlend+0x5e>
90004e92:	fb02 c20c 	mla	r2, r2, ip, ip
90004e96:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
90004e9a:	f3c4 2407 	ubfx	r4, r4, #8, #8
90004e9e:	0a12      	lsrs	r2, r2, #8
90004ea0:	fb02 7000 	mla	r0, r2, r0, r7
90004ea4:	fb02 3404 	mla	r4, r2, r4, r3
90004ea8:	4432      	add	r2, r6
90004eaa:	0a00      	lsrs	r0, r0, #8
90004eac:	2afe      	cmp	r2, #254	; 0xfe
90004eae:	ea4f 2414 	mov.w	r4, r4, lsr #8
90004eb2:	d80b      	bhi.n	90004ecc <EwFillRowSolidBlend+0xa2>
90004eb4:	f838 9012 	ldrh.w	r9, [r8, r2, lsl #1]
90004eb8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90004ebc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90004ec0:	fb09 f000 	mul.w	r0, r9, r0
90004ec4:	fb09 f404 	mul.w	r4, r9, r4
90004ec8:	0a00      	lsrs	r0, r0, #8
90004eca:	0a24      	lsrs	r4, r4, #8
90004ecc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90004ed0:	0224      	lsls	r4, r4, #8
90004ed2:	ea40 6202 	orr.w	r2, r0, r2, lsl #24
90004ed6:	f004 24ff 	and.w	r4, r4, #4278255360	; 0xff00ff00
90004eda:	4322      	orrs	r2, r4
90004edc:	602a      	str	r2, [r5, #0]
90004ede:	e7d3      	b.n	90004e88 <EwFillRowSolidBlend+0x5e>
90004ee0:	9002fa7c 	.word	0x9002fa7c

90004ee4 <EwFillRowGradient>:
90004ee4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90004ee8:	6b53      	ldr	r3, [r2, #52]	; 0x34
90004eea:	6806      	ldr	r6, [r0, #0]
90004eec:	6914      	ldr	r4, [r2, #16]
90004eee:	ea4f 1803 	mov.w	r8, r3, lsl #4
90004ef2:	6810      	ldr	r0, [r2, #0]
90004ef4:	6a15      	ldr	r5, [r2, #32]
90004ef6:	6857      	ldr	r7, [r2, #4]
90004ef8:	f8d2 c014 	ldr.w	ip, [r2, #20]
90004efc:	f8d2 e024 	ldr.w	lr, [r2, #36]	; 0x24
90004f00:	6b12      	ldr	r2, [r2, #48]	; 0x30
90004f02:	0112      	lsls	r2, r2, #4
90004f04:	2900      	cmp	r1, #0
90004f06:	dc01      	bgt.n	90004f0c <EwFillRowGradient+0x28>
90004f08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90004f0c:	0903      	lsrs	r3, r0, #4
90004f0e:	3901      	subs	r1, #1
90004f10:	ea4f 3914 	mov.w	r9, r4, lsr #12
90004f14:	4438      	add	r0, r7
90004f16:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90004f1a:	4464      	add	r4, ip
90004f1c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90004f20:	ea43 0309 	orr.w	r3, r3, r9
90004f24:	f002 497f 	and.w	r9, r2, #4278190080	; 0xff000000
90004f28:	4442      	add	r2, r8
90004f2a:	ea43 0309 	orr.w	r3, r3, r9
90004f2e:	f3c5 5907 	ubfx	r9, r5, #20, #8
90004f32:	4475      	add	r5, lr
90004f34:	ea43 0309 	orr.w	r3, r3, r9
90004f38:	f846 3b04 	str.w	r3, [r6], #4
90004f3c:	e7e2      	b.n	90004f04 <EwFillRowGradient+0x20>

90004f3e <EwFillRowGradientBlend>:
90004f3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004f42:	6853      	ldr	r3, [r2, #4]
90004f44:	b085      	sub	sp, #20
90004f46:	6b17      	ldr	r7, [r2, #48]	; 0x30
90004f48:	9301      	str	r3, [sp, #4]
90004f4a:	6953      	ldr	r3, [r2, #20]
90004f4c:	013f      	lsls	r7, r7, #4
90004f4e:	6806      	ldr	r6, [r0, #0]
90004f50:	9302      	str	r3, [sp, #8]
90004f52:	6a53      	ldr	r3, [r2, #36]	; 0x24
90004f54:	f8d2 c000 	ldr.w	ip, [r2]
90004f58:	9303      	str	r3, [sp, #12]
90004f5a:	6b53      	ldr	r3, [r2, #52]	; 0x34
90004f5c:	f8d2 e010 	ldr.w	lr, [r2, #16]
90004f60:	f8d2 8020 	ldr.w	r8, [r2, #32]
90004f64:	ea4f 1903 	mov.w	r9, r3, lsl #4
90004f68:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 9000501c <EwFillRowGradientBlend+0xde>
90004f6c:	2900      	cmp	r1, #0
90004f6e:	dc02      	bgt.n	90004f76 <EwFillRowGradientBlend+0x38>
90004f70:	b005      	add	sp, #20
90004f72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004f76:	ea4f 101c 	mov.w	r0, ip, lsr #4
90004f7a:	ea4f 331e 	mov.w	r3, lr, lsr #12
90004f7e:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90004f82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90004f86:	4318      	orrs	r0, r3
90004f88:	f007 437f 	and.w	r3, r7, #4278190080	; 0xff000000
90004f8c:	4318      	orrs	r0, r3
90004f8e:	f3c8 5307 	ubfx	r3, r8, #20, #8
90004f92:	4303      	orrs	r3, r0
90004f94:	0e00      	lsrs	r0, r0, #24
90004f96:	28ff      	cmp	r0, #255	; 0xff
90004f98:	d003      	beq.n	90004fa2 <EwFillRowGradientBlend+0x64>
90004f9a:	6835      	ldr	r5, [r6, #0]
90004f9c:	0e2a      	lsrs	r2, r5, #24
90004f9e:	d10b      	bne.n	90004fb8 <EwFillRowGradientBlend+0x7a>
90004fa0:	b100      	cbz	r0, 90004fa4 <EwFillRowGradientBlend+0x66>
90004fa2:	6033      	str	r3, [r6, #0]
90004fa4:	9b01      	ldr	r3, [sp, #4]
90004fa6:	3604      	adds	r6, #4
90004fa8:	3901      	subs	r1, #1
90004faa:	444f      	add	r7, r9
90004fac:	449c      	add	ip, r3
90004fae:	9b02      	ldr	r3, [sp, #8]
90004fb0:	449e      	add	lr, r3
90004fb2:	9b03      	ldr	r3, [sp, #12]
90004fb4:	4498      	add	r8, r3
90004fb6:	e7d9      	b.n	90004f6c <EwFillRowGradientBlend+0x2e>
90004fb8:	2800      	cmp	r0, #0
90004fba:	d0f3      	beq.n	90004fa4 <EwFillRowGradientBlend+0x66>
90004fbc:	f1c0 04ff 	rsb	r4, r0, #255	; 0xff
90004fc0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90004fc4:	f3c5 2507 	ubfx	r5, r5, #8, #8
90004fc8:	fb02 4404 	mla	r4, r2, r4, r4
90004fcc:	f003 12ff 	and.w	r2, r3, #16711935	; 0xff00ff
90004fd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90004fd4:	0a24      	lsrs	r4, r4, #8
90004fd6:	fb00 2202 	mla	r2, r0, r2, r2
90004fda:	fb00 3303 	mla	r3, r0, r3, r3
90004fde:	4420      	add	r0, r4
90004fe0:	fb04 220b 	mla	r2, r4, fp, r2
90004fe4:	fb04 3505 	mla	r5, r4, r5, r3
90004fe8:	28fe      	cmp	r0, #254	; 0xfe
90004fea:	ea4f 2212 	mov.w	r2, r2, lsr #8
90004fee:	ea4f 2515 	mov.w	r5, r5, lsr #8
90004ff2:	d809      	bhi.n	90005008 <EwFillRowGradientBlend+0xca>
90004ff4:	f83a 3010 	ldrh.w	r3, [sl, r0, lsl #1]
90004ff8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90004ffc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90005000:	435a      	muls	r2, r3
90005002:	435d      	muls	r5, r3
90005004:	0a12      	lsrs	r2, r2, #8
90005006:	0a2d      	lsrs	r5, r5, #8
90005008:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9000500c:	022d      	lsls	r5, r5, #8
9000500e:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
90005012:	f005 25ff 	and.w	r5, r5, #4278255360	; 0xff00ff00
90005016:	4328      	orrs	r0, r5
90005018:	6030      	str	r0, [r6, #0]
9000501a:	e7c3      	b.n	90004fa4 <EwFillRowGradientBlend+0x66>
9000501c:	9002fa7c 	.word	0x9002fa7c

90005020 <EwCopyNativeRow>:
90005020:	6803      	ldr	r3, [r0, #0]
90005022:	6809      	ldr	r1, [r1, #0]
90005024:	3b04      	subs	r3, #4
90005026:	2a00      	cmp	r2, #0
90005028:	dc00      	bgt.n	9000502c <EwCopyNativeRow+0xc>
9000502a:	4770      	bx	lr
9000502c:	f851 0b04 	ldr.w	r0, [r1], #4
90005030:	3a01      	subs	r2, #1
90005032:	f843 0f04 	str.w	r0, [r3, #4]!
90005036:	e7f6      	b.n	90005026 <EwCopyNativeRow+0x6>

90005038 <EwCopyNativeRowBlend>:
90005038:	b5f0      	push	{r4, r5, r6, r7, lr}
9000503a:	6804      	ldr	r4, [r0, #0]
9000503c:	680d      	ldr	r5, [r1, #0]
9000503e:	4e22      	ldr	r6, [pc, #136]	; (900050c8 <EwCopyNativeRowBlend+0x90>)
90005040:	2a00      	cmp	r2, #0
90005042:	dc00      	bgt.n	90005046 <EwCopyNativeRowBlend+0xe>
90005044:	bdf0      	pop	{r4, r5, r6, r7, pc}
90005046:	f855 1b04 	ldr.w	r1, [r5], #4
9000504a:	0e0f      	lsrs	r7, r1, #24
9000504c:	2fff      	cmp	r7, #255	; 0xff
9000504e:	d005      	beq.n	9000505c <EwCopyNativeRowBlend+0x24>
90005050:	f8d4 c000 	ldr.w	ip, [r4]
90005054:	ea5f 601c 	movs.w	r0, ip, lsr #24
90005058:	d104      	bne.n	90005064 <EwCopyNativeRowBlend+0x2c>
9000505a:	b107      	cbz	r7, 9000505e <EwCopyNativeRowBlend+0x26>
9000505c:	6021      	str	r1, [r4, #0]
9000505e:	3404      	adds	r4, #4
90005060:	3a01      	subs	r2, #1
90005062:	e7ed      	b.n	90005040 <EwCopyNativeRowBlend+0x8>
90005064:	2f00      	cmp	r7, #0
90005066:	d0fa      	beq.n	9000505e <EwCopyNativeRowBlend+0x26>
90005068:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9000506c:	f00c 1eff 	and.w	lr, ip, #16711935	; 0xff00ff
90005070:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90005074:	fb00 3303 	mla	r3, r0, r3, r3
90005078:	f001 10ff 	and.w	r0, r1, #16711935	; 0xff00ff
9000507c:	f3c1 2107 	ubfx	r1, r1, #8, #8
90005080:	0a1b      	lsrs	r3, r3, #8
90005082:	fb07 0000 	mla	r0, r7, r0, r0
90005086:	fb07 1101 	mla	r1, r7, r1, r1
9000508a:	fb03 000e 	mla	r0, r3, lr, r0
9000508e:	fb03 110c 	mla	r1, r3, ip, r1
90005092:	443b      	add	r3, r7
90005094:	0a00      	lsrs	r0, r0, #8
90005096:	2bfe      	cmp	r3, #254	; 0xfe
90005098:	ea4f 2111 	mov.w	r1, r1, lsr #8
9000509c:	d809      	bhi.n	900050b2 <EwCopyNativeRowBlend+0x7a>
9000509e:	f836 7013 	ldrh.w	r7, [r6, r3, lsl #1]
900050a2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900050a6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900050aa:	4378      	muls	r0, r7
900050ac:	4379      	muls	r1, r7
900050ae:	0a00      	lsrs	r0, r0, #8
900050b0:	0a09      	lsrs	r1, r1, #8
900050b2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900050b6:	0209      	lsls	r1, r1, #8
900050b8:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
900050bc:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
900050c0:	430b      	orrs	r3, r1
900050c2:	6023      	str	r3, [r4, #0]
900050c4:	e7cb      	b.n	9000505e <EwCopyNativeRowBlend+0x26>
900050c6:	bf00      	nop
900050c8:	9002fa7c 	.word	0x9002fa7c

900050cc <EwCopyNativeRowSolid>:
900050cc:	b530      	push	{r4, r5, lr}
900050ce:	680d      	ldr	r5, [r1, #0]
900050d0:	6b19      	ldr	r1, [r3, #48]	; 0x30
900050d2:	6804      	ldr	r4, [r0, #0]
900050d4:	1509      	asrs	r1, r1, #20
900050d6:	3101      	adds	r1, #1
900050d8:	2a00      	cmp	r2, #0
900050da:	dc00      	bgt.n	900050de <EwCopyNativeRowSolid+0x12>
900050dc:	bd30      	pop	{r4, r5, pc}
900050de:	f855 3b04 	ldr.w	r3, [r5], #4
900050e2:	3a01      	subs	r2, #1
900050e4:	0e18      	lsrs	r0, r3, #24
900050e6:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
900050ea:	4348      	muls	r0, r1
900050ec:	0a00      	lsrs	r0, r0, #8
900050ee:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
900050f2:	f844 3b04 	str.w	r3, [r4], #4
900050f6:	e7ef      	b.n	900050d8 <EwCopyNativeRowSolid+0xc>

900050f8 <EwCopyNativeRowSolidBlend>:
900050f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900050fc:	6804      	ldr	r4, [r0, #0]
900050fe:	6b18      	ldr	r0, [r3, #48]	; 0x30
90005100:	680d      	ldr	r5, [r1, #0]
90005102:	1500      	asrs	r0, r0, #20
90005104:	4e23      	ldr	r6, [pc, #140]	; (90005194 <EwCopyNativeRowSolidBlend+0x9c>)
90005106:	3001      	adds	r0, #1
90005108:	2a00      	cmp	r2, #0
9000510a:	dc01      	bgt.n	90005110 <EwCopyNativeRowSolidBlend+0x18>
9000510c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90005110:	f855 1b04 	ldr.w	r1, [r5], #4
90005114:	0e0f      	lsrs	r7, r1, #24
90005116:	d039      	beq.n	9000518c <EwCopyNativeRowSolidBlend+0x94>
90005118:	f8d4 e000 	ldr.w	lr, [r4]
9000511c:	fb07 0700 	mla	r7, r7, r0, r0
90005120:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
90005124:	f3c1 2107 	ubfx	r1, r1, #8, #8
90005128:	0a3f      	lsrs	r7, r7, #8
9000512a:	ea5f 681e 	movs.w	r8, lr, lsr #24
9000512e:	fb07 f303 	mul.w	r3, r7, r3
90005132:	fb07 f101 	mul.w	r1, r7, r1
90005136:	d00e      	beq.n	90005156 <EwCopyNativeRowSolidBlend+0x5e>
90005138:	f5c7 7c80 	rsb	ip, r7, #256	; 0x100
9000513c:	fb08 cc0c 	mla	ip, r8, ip, ip
90005140:	f00e 18ff 	and.w	r8, lr, #16711935	; 0xff00ff
90005144:	f3ce 2e07 	ubfx	lr, lr, #8, #8
90005148:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9000514c:	fb0c 3308 	mla	r3, ip, r8, r3
90005150:	4467      	add	r7, ip
90005152:	fb0c 110e 	mla	r1, ip, lr, r1
90005156:	0a1b      	lsrs	r3, r3, #8
90005158:	0a09      	lsrs	r1, r1, #8
9000515a:	b177      	cbz	r7, 9000517a <EwCopyNativeRowSolidBlend+0x82>
9000515c:	3f01      	subs	r7, #1
9000515e:	2ffe      	cmp	r7, #254	; 0xfe
90005160:	d80b      	bhi.n	9000517a <EwCopyNativeRowSolidBlend+0x82>
90005162:	f836 c017 	ldrh.w	ip, [r6, r7, lsl #1]
90005166:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000516a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9000516e:	fb0c f303 	mul.w	r3, ip, r3
90005172:	fb0c f101 	mul.w	r1, ip, r1
90005176:	0a1b      	lsrs	r3, r3, #8
90005178:	0a09      	lsrs	r1, r1, #8
9000517a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000517e:	0209      	lsls	r1, r1, #8
90005180:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90005184:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
90005188:	430b      	orrs	r3, r1
9000518a:	6023      	str	r3, [r4, #0]
9000518c:	3404      	adds	r4, #4
9000518e:	3a01      	subs	r2, #1
90005190:	e7ba      	b.n	90005108 <EwCopyNativeRowSolidBlend+0x10>
90005192:	bf00      	nop
90005194:	9002fa7c 	.word	0x9002fa7c

90005198 <EwCopyNativeRowGradient>:
90005198:	b5f0      	push	{r4, r5, r6, r7, lr}
9000519a:	6804      	ldr	r4, [r0, #0]
9000519c:	680d      	ldr	r5, [r1, #0]
9000519e:	e9d3 060c 	ldrd	r0, r6, [r3, #48]	; 0x30
900051a2:	2a00      	cmp	r2, #0
900051a4:	dc00      	bgt.n	900051a8 <EwCopyNativeRowGradient+0x10>
900051a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900051a8:	f855 3b04 	ldr.w	r3, [r5], #4
900051ac:	1507      	asrs	r7, r0, #20
900051ae:	3a01      	subs	r2, #1
900051b0:	4430      	add	r0, r6
900051b2:	0e19      	lsrs	r1, r3, #24
900051b4:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
900051b8:	fb07 1101 	mla	r1, r7, r1, r1
900051bc:	0a09      	lsrs	r1, r1, #8
900051be:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900051c2:	f844 3b04 	str.w	r3, [r4], #4
900051c6:	e7ec      	b.n	900051a2 <EwCopyNativeRowGradient+0xa>

900051c8 <EwCopyNativeRowGradientBlend>:
900051c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900051cc:	6800      	ldr	r0, [r0, #0]
900051ce:	680d      	ldr	r5, [r1, #0]
900051d0:	4f29      	ldr	r7, [pc, #164]	; (90005278 <EwCopyNativeRowGradientBlend+0xb0>)
900051d2:	e9d3 460c 	ldrd	r4, r6, [r3, #48]	; 0x30
900051d6:	2a00      	cmp	r2, #0
900051d8:	dc01      	bgt.n	900051de <EwCopyNativeRowGradientBlend+0x16>
900051da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900051de:	f855 1b04 	ldr.w	r1, [r5], #4
900051e2:	ea5f 6911 	movs.w	r9, r1, lsr #24
900051e6:	d042      	beq.n	9000526e <EwCopyNativeRowGradientBlend+0xa6>
900051e8:	ea4f 5c24 	mov.w	ip, r4, asr #20
900051ec:	f109 0e01 	add.w	lr, r9, #1
900051f0:	f8d0 8000 	ldr.w	r8, [r0]
900051f4:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
900051f8:	fb0c ee0e 	mla	lr, ip, lr, lr
900051fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
90005200:	ea5f 6918 	movs.w	r9, r8, lsr #24
90005204:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
90005208:	fb0c f303 	mul.w	r3, ip, r3
9000520c:	fb0c f101 	mul.w	r1, ip, r1
90005210:	d00e      	beq.n	90005230 <EwCopyNativeRowGradientBlend+0x68>
90005212:	f5cc 7e80 	rsb	lr, ip, #256	; 0x100
90005216:	fb09 ee0e 	mla	lr, r9, lr, lr
9000521a:	f008 19ff 	and.w	r9, r8, #16711935	; 0xff00ff
9000521e:	f3c8 2807 	ubfx	r8, r8, #8, #8
90005222:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90005226:	fb0e 3309 	mla	r3, lr, r9, r3
9000522a:	44f4      	add	ip, lr
9000522c:	fb0e 1108 	mla	r1, lr, r8, r1
90005230:	0a1b      	lsrs	r3, r3, #8
90005232:	0a09      	lsrs	r1, r1, #8
90005234:	f1bc 0f00 	cmp.w	ip, #0
90005238:	d010      	beq.n	9000525c <EwCopyNativeRowGradientBlend+0x94>
9000523a:	f10c 3cff 	add.w	ip, ip, #4294967295
9000523e:	f1bc 0ffe 	cmp.w	ip, #254	; 0xfe
90005242:	d80b      	bhi.n	9000525c <EwCopyNativeRowGradientBlend+0x94>
90005244:	f837 e01c 	ldrh.w	lr, [r7, ip, lsl #1]
90005248:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000524c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005250:	fb0e f303 	mul.w	r3, lr, r3
90005254:	fb0e f101 	mul.w	r1, lr, r1
90005258:	0a1b      	lsrs	r3, r3, #8
9000525a:	0a09      	lsrs	r1, r1, #8
9000525c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005260:	0209      	lsls	r1, r1, #8
90005262:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
90005266:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
9000526a:	430b      	orrs	r3, r1
9000526c:	6003      	str	r3, [r0, #0]
9000526e:	3004      	adds	r0, #4
90005270:	4434      	add	r4, r6
90005272:	3a01      	subs	r2, #1
90005274:	e7af      	b.n	900051d6 <EwCopyNativeRowGradientBlend+0xe>
90005276:	bf00      	nop
90005278:	9002fa7c 	.word	0x9002fa7c

9000527c <EwCopyIndex8Row>:
9000527c:	680b      	ldr	r3, [r1, #0]
9000527e:	6800      	ldr	r0, [r0, #0]
90005280:	441a      	add	r2, r3
90005282:	b510      	push	{r4, lr}
90005284:	698c      	ldr	r4, [r1, #24]
90005286:	1ad1      	subs	r1, r2, r3
90005288:	2900      	cmp	r1, #0
9000528a:	dc00      	bgt.n	9000528e <EwCopyIndex8Row+0x12>
9000528c:	bd10      	pop	{r4, pc}
9000528e:	f813 1b01 	ldrb.w	r1, [r3], #1
90005292:	f854 1021 	ldr.w	r1, [r4, r1, lsl #2]
90005296:	f840 1b04 	str.w	r1, [r0], #4
9000529a:	e7f4      	b.n	90005286 <EwCopyIndex8Row+0xa>

9000529c <EwCopyIndex8RowBlend>:
9000529c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900052a0:	680c      	ldr	r4, [r1, #0]
900052a2:	6800      	ldr	r0, [r0, #0]
900052a4:	698d      	ldr	r5, [r1, #24]
900052a6:	4422      	add	r2, r4
900052a8:	4e24      	ldr	r6, [pc, #144]	; (9000533c <EwCopyIndex8RowBlend+0xa0>)
900052aa:	1b13      	subs	r3, r2, r4
900052ac:	2b00      	cmp	r3, #0
900052ae:	dc01      	bgt.n	900052b4 <EwCopyIndex8RowBlend+0x18>
900052b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900052b4:	f814 3b01 	ldrb.w	r3, [r4], #1
900052b8:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900052bc:	0e1f      	lsrs	r7, r3, #24
900052be:	2fff      	cmp	r7, #255	; 0xff
900052c0:	d005      	beq.n	900052ce <EwCopyIndex8RowBlend+0x32>
900052c2:	f8d0 e000 	ldr.w	lr, [r0]
900052c6:	ea5f 611e 	movs.w	r1, lr, lsr #24
900052ca:	d103      	bne.n	900052d4 <EwCopyIndex8RowBlend+0x38>
900052cc:	b107      	cbz	r7, 900052d0 <EwCopyIndex8RowBlend+0x34>
900052ce:	6003      	str	r3, [r0, #0]
900052d0:	3004      	adds	r0, #4
900052d2:	e7ea      	b.n	900052aa <EwCopyIndex8RowBlend+0xe>
900052d4:	2f00      	cmp	r7, #0
900052d6:	d0fb      	beq.n	900052d0 <EwCopyIndex8RowBlend+0x34>
900052d8:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
900052dc:	f00e 18ff 	and.w	r8, lr, #16711935	; 0xff00ff
900052e0:	f3ce 2e07 	ubfx	lr, lr, #8, #8
900052e4:	fb01 cc0c 	mla	ip, r1, ip, ip
900052e8:	f003 11ff 	and.w	r1, r3, #16711935	; 0xff00ff
900052ec:	f3c3 2307 	ubfx	r3, r3, #8, #8
900052f0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900052f4:	fb07 1101 	mla	r1, r7, r1, r1
900052f8:	fb07 3303 	mla	r3, r7, r3, r3
900052fc:	4467      	add	r7, ip
900052fe:	fb0c 1108 	mla	r1, ip, r8, r1
90005302:	fb0c 330e 	mla	r3, ip, lr, r3
90005306:	2ffe      	cmp	r7, #254	; 0xfe
90005308:	ea4f 2111 	mov.w	r1, r1, lsr #8
9000530c:	ea4f 2313 	mov.w	r3, r3, lsr #8
90005310:	d80b      	bhi.n	9000532a <EwCopyIndex8RowBlend+0x8e>
90005312:	f836 e017 	ldrh.w	lr, [r6, r7, lsl #1]
90005316:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9000531a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000531e:	fb0e f101 	mul.w	r1, lr, r1
90005322:	fb0e f303 	mul.w	r3, lr, r3
90005326:	0a09      	lsrs	r1, r1, #8
90005328:	0a1b      	lsrs	r3, r3, #8
9000532a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9000532e:	021b      	lsls	r3, r3, #8
90005330:	ea41 6107 	orr.w	r1, r1, r7, lsl #24
90005334:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90005338:	430b      	orrs	r3, r1
9000533a:	e7c8      	b.n	900052ce <EwCopyIndex8RowBlend+0x32>
9000533c:	9002fa7c 	.word	0x9002fa7c

90005340 <EwCopyIndex8RowSolid>:
90005340:	b570      	push	{r4, r5, r6, lr}
90005342:	6805      	ldr	r5, [r0, #0]
90005344:	6b18      	ldr	r0, [r3, #48]	; 0x30
90005346:	680c      	ldr	r4, [r1, #0]
90005348:	1500      	asrs	r0, r0, #20
9000534a:	698e      	ldr	r6, [r1, #24]
9000534c:	4422      	add	r2, r4
9000534e:	3001      	adds	r0, #1
90005350:	1b13      	subs	r3, r2, r4
90005352:	2b00      	cmp	r3, #0
90005354:	dc00      	bgt.n	90005358 <EwCopyIndex8RowSolid+0x18>
90005356:	bd70      	pop	{r4, r5, r6, pc}
90005358:	f814 3b01 	ldrb.w	r3, [r4], #1
9000535c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90005360:	0e19      	lsrs	r1, r3, #24
90005362:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
90005366:	4341      	muls	r1, r0
90005368:	0a09      	lsrs	r1, r1, #8
9000536a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000536e:	f845 3b04 	str.w	r3, [r5], #4
90005372:	e7ed      	b.n	90005350 <EwCopyIndex8RowSolid+0x10>

90005374 <EwCopyIndex8RowSolidBlend>:
90005374:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90005378:	6805      	ldr	r5, [r0, #0]
9000537a:	6b18      	ldr	r0, [r3, #48]	; 0x30
9000537c:	680c      	ldr	r4, [r1, #0]
9000537e:	1500      	asrs	r0, r0, #20
90005380:	698e      	ldr	r6, [r1, #24]
90005382:	4422      	add	r2, r4
90005384:	4f27      	ldr	r7, [pc, #156]	; (90005424 <EwCopyIndex8RowSolidBlend+0xb0>)
90005386:	3001      	adds	r0, #1
90005388:	1b13      	subs	r3, r2, r4
9000538a:	2b00      	cmp	r3, #0
9000538c:	dc01      	bgt.n	90005392 <EwCopyIndex8RowSolidBlend+0x1e>
9000538e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90005392:	f814 3b01 	ldrb.w	r3, [r4], #1
90005396:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9000539a:	ea5f 6c11 	movs.w	ip, r1, lsr #24
9000539e:	d03e      	beq.n	9000541e <EwCopyIndex8RowSolidBlend+0xaa>
900053a0:	f8d5 8000 	ldr.w	r8, [r5]
900053a4:	fb0c 0c00 	mla	ip, ip, r0, r0
900053a8:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
900053ac:	f3c1 2107 	ubfx	r1, r1, #8, #8
900053b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900053b4:	ea5f 6918 	movs.w	r9, r8, lsr #24
900053b8:	fb0c f303 	mul.w	r3, ip, r3
900053bc:	fb0c f101 	mul.w	r1, ip, r1
900053c0:	d00e      	beq.n	900053e0 <EwCopyIndex8RowSolidBlend+0x6c>
900053c2:	f5cc 7e80 	rsb	lr, ip, #256	; 0x100
900053c6:	fb09 ee0e 	mla	lr, r9, lr, lr
900053ca:	f008 19ff 	and.w	r9, r8, #16711935	; 0xff00ff
900053ce:	f3c8 2807 	ubfx	r8, r8, #8, #8
900053d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900053d6:	fb0e 3309 	mla	r3, lr, r9, r3
900053da:	44f4      	add	ip, lr
900053dc:	fb0e 1108 	mla	r1, lr, r8, r1
900053e0:	0a1b      	lsrs	r3, r3, #8
900053e2:	0a09      	lsrs	r1, r1, #8
900053e4:	f1bc 0f00 	cmp.w	ip, #0
900053e8:	d010      	beq.n	9000540c <EwCopyIndex8RowSolidBlend+0x98>
900053ea:	f10c 3cff 	add.w	ip, ip, #4294967295
900053ee:	f1bc 0ffe 	cmp.w	ip, #254	; 0xfe
900053f2:	d80b      	bhi.n	9000540c <EwCopyIndex8RowSolidBlend+0x98>
900053f4:	f837 e01c 	ldrh.w	lr, [r7, ip, lsl #1]
900053f8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900053fc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005400:	fb0e f303 	mul.w	r3, lr, r3
90005404:	fb0e f101 	mul.w	r1, lr, r1
90005408:	0a1b      	lsrs	r3, r3, #8
9000540a:	0a09      	lsrs	r1, r1, #8
9000540c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005410:	0209      	lsls	r1, r1, #8
90005412:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
90005416:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
9000541a:	430b      	orrs	r3, r1
9000541c:	602b      	str	r3, [r5, #0]
9000541e:	3504      	adds	r5, #4
90005420:	e7b2      	b.n	90005388 <EwCopyIndex8RowSolidBlend+0x14>
90005422:	bf00      	nop
90005424:	9002fa7c 	.word	0x9002fa7c

90005428 <EwCopyIndex8RowGradient>:
90005428:	b5f0      	push	{r4, r5, r6, r7, lr}
9000542a:	6805      	ldr	r5, [r0, #0]
9000542c:	6808      	ldr	r0, [r1, #0]
9000542e:	698e      	ldr	r6, [r1, #24]
90005430:	4402      	add	r2, r0
90005432:	e9d3 470c 	ldrd	r4, r7, [r3, #48]	; 0x30
90005436:	1a13      	subs	r3, r2, r0
90005438:	2b00      	cmp	r3, #0
9000543a:	dc00      	bgt.n	9000543e <EwCopyIndex8RowGradient+0x16>
9000543c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000543e:	f810 3b01 	ldrb.w	r3, [r0], #1
90005442:	ea4f 5c24 	mov.w	ip, r4, asr #20
90005446:	443c      	add	r4, r7
90005448:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9000544c:	0e19      	lsrs	r1, r3, #24
9000544e:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
90005452:	fb0c 1101 	mla	r1, ip, r1, r1
90005456:	0a09      	lsrs	r1, r1, #8
90005458:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000545c:	f845 3b04 	str.w	r3, [r5], #4
90005460:	e7e9      	b.n	90005436 <EwCopyIndex8RowGradient+0xe>

90005462 <EwCopyIndex8RowGradientBlend>:
90005462:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005466:	6804      	ldr	r4, [r0, #0]
90005468:	6808      	ldr	r0, [r1, #0]
9000546a:	698e      	ldr	r6, [r1, #24]
9000546c:	4402      	add	r2, r0
9000546e:	f8df c0ac 	ldr.w	ip, [pc, #172]	; 9000551c <EwCopyIndex8RowGradientBlend+0xba>
90005472:	e9d3 570c 	ldrd	r5, r7, [r3, #48]	; 0x30
90005476:	1a13      	subs	r3, r2, r0
90005478:	2b00      	cmp	r3, #0
9000547a:	dc01      	bgt.n	90005480 <EwCopyIndex8RowGradientBlend+0x1e>
9000547c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90005480:	f810 3b01 	ldrb.w	r3, [r0], #1
90005484:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90005488:	ea5f 6a11 	movs.w	sl, r1, lsr #24
9000548c:	d042      	beq.n	90005514 <EwCopyIndex8RowGradientBlend+0xb2>
9000548e:	ea4f 5e25 	mov.w	lr, r5, asr #20
90005492:	f10a 0801 	add.w	r8, sl, #1
90005496:	f8d4 9000 	ldr.w	r9, [r4]
9000549a:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
9000549e:	fb0e 8808 	mla	r8, lr, r8, r8
900054a2:	f3c1 2107 	ubfx	r1, r1, #8, #8
900054a6:	ea5f 6a19 	movs.w	sl, r9, lsr #24
900054aa:	ea4f 2e18 	mov.w	lr, r8, lsr #8
900054ae:	fb0e f303 	mul.w	r3, lr, r3
900054b2:	fb0e f101 	mul.w	r1, lr, r1
900054b6:	d00e      	beq.n	900054d6 <EwCopyIndex8RowGradientBlend+0x74>
900054b8:	f5ce 7880 	rsb	r8, lr, #256	; 0x100
900054bc:	fb0a 8808 	mla	r8, sl, r8, r8
900054c0:	f009 1aff 	and.w	sl, r9, #16711935	; 0xff00ff
900054c4:	f3c9 2907 	ubfx	r9, r9, #8, #8
900054c8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900054cc:	fb08 330a 	mla	r3, r8, sl, r3
900054d0:	44c6      	add	lr, r8
900054d2:	fb08 1109 	mla	r1, r8, r9, r1
900054d6:	0a1b      	lsrs	r3, r3, #8
900054d8:	0a09      	lsrs	r1, r1, #8
900054da:	f1be 0f00 	cmp.w	lr, #0
900054de:	d010      	beq.n	90005502 <EwCopyIndex8RowGradientBlend+0xa0>
900054e0:	f10e 3eff 	add.w	lr, lr, #4294967295
900054e4:	f1be 0ffe 	cmp.w	lr, #254	; 0xfe
900054e8:	d80b      	bhi.n	90005502 <EwCopyIndex8RowGradientBlend+0xa0>
900054ea:	f83c 801e 	ldrh.w	r8, [ip, lr, lsl #1]
900054ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900054f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900054f6:	fb08 f303 	mul.w	r3, r8, r3
900054fa:	fb08 f101 	mul.w	r1, r8, r1
900054fe:	0a1b      	lsrs	r3, r3, #8
90005500:	0a09      	lsrs	r1, r1, #8
90005502:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005506:	0209      	lsls	r1, r1, #8
90005508:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000550c:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
90005510:	430b      	orrs	r3, r1
90005512:	6023      	str	r3, [r4, #0]
90005514:	3404      	adds	r4, #4
90005516:	443d      	add	r5, r7
90005518:	e7ad      	b.n	90005476 <EwCopyIndex8RowGradientBlend+0x14>
9000551a:	bf00      	nop
9000551c:	9002fa7c 	.word	0x9002fa7c

90005520 <EwCopyAlpha8RowSolid>:
90005520:	b570      	push	{r4, r5, r6, lr}
90005522:	6805      	ldr	r5, [r0, #0]
90005524:	691c      	ldr	r4, [r3, #16]
90005526:	6818      	ldr	r0, [r3, #0]
90005528:	0b24      	lsrs	r4, r4, #12
9000552a:	6809      	ldr	r1, [r1, #0]
9000552c:	0900      	lsrs	r0, r0, #4
9000552e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90005532:	440a      	add	r2, r1
90005534:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90005538:	4320      	orrs	r0, r4
9000553a:	6a1c      	ldr	r4, [r3, #32]
9000553c:	f3c4 5407 	ubfx	r4, r4, #20, #8
90005540:	4320      	orrs	r0, r4
90005542:	6b1c      	ldr	r4, [r3, #48]	; 0x30
90005544:	0124      	lsls	r4, r4, #4
90005546:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
9000554a:	ea40 0604 	orr.w	r6, r0, r4
9000554e:	0e24      	lsrs	r4, r4, #24
90005550:	1a53      	subs	r3, r2, r1
90005552:	2b00      	cmp	r3, #0
90005554:	dc00      	bgt.n	90005558 <EwCopyAlpha8RowSolid+0x38>
90005556:	bd70      	pop	{r4, r5, r6, pc}
90005558:	f811 3b01 	ldrb.w	r3, [r1], #1
9000555c:	b90b      	cbnz	r3, 90005562 <EwCopyAlpha8RowSolid+0x42>
9000555e:	602b      	str	r3, [r5, #0]
90005560:	e002      	b.n	90005568 <EwCopyAlpha8RowSolid+0x48>
90005562:	2bff      	cmp	r3, #255	; 0xff
90005564:	d102      	bne.n	9000556c <EwCopyAlpha8RowSolid+0x4c>
90005566:	602e      	str	r6, [r5, #0]
90005568:	3504      	adds	r5, #4
9000556a:	e7f1      	b.n	90005550 <EwCopyAlpha8RowSolid+0x30>
9000556c:	fb03 4304 	mla	r3, r3, r4, r4
90005570:	0a1b      	lsrs	r3, r3, #8
90005572:	ea40 6303 	orr.w	r3, r0, r3, lsl #24
90005576:	e7f2      	b.n	9000555e <EwCopyAlpha8RowSolid+0x3e>

90005578 <EwCopyAlpha8RowSolidBlend>:
90005578:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000557c:	691c      	ldr	r4, [r3, #16]
9000557e:	6807      	ldr	r7, [r0, #0]
90005580:	6818      	ldr	r0, [r3, #0]
90005582:	0b24      	lsrs	r4, r4, #12
90005584:	f8d1 c000 	ldr.w	ip, [r1]
90005588:	0900      	lsrs	r0, r0, #4
9000558a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9000558e:	eb0c 0802 	add.w	r8, ip, r2
90005592:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 90005650 <EwCopyAlpha8RowSolidBlend+0xd8>
90005596:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
9000559a:	4320      	orrs	r0, r4
9000559c:	6a1c      	ldr	r4, [r3, #32]
9000559e:	f3c4 5407 	ubfx	r4, r4, #20, #8
900055a2:	4320      	orrs	r0, r4
900055a4:	6b1c      	ldr	r4, [r3, #48]	; 0x30
900055a6:	0124      	lsls	r4, r4, #4
900055a8:	f3c0 2907 	ubfx	r9, r0, #8, #8
900055ac:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
900055b0:	ea40 0304 	orr.w	r3, r0, r4
900055b4:	0e24      	lsrs	r4, r4, #24
900055b6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900055ba:	f104 0e01 	add.w	lr, r4, #1
900055be:	9301      	str	r3, [sp, #4]
900055c0:	eba8 030c 	sub.w	r3, r8, ip
900055c4:	2b00      	cmp	r3, #0
900055c6:	dc02      	bgt.n	900055ce <EwCopyAlpha8RowSolidBlend+0x56>
900055c8:	b003      	add	sp, #12
900055ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900055ce:	f81c 2b01 	ldrb.w	r2, [ip], #1
900055d2:	b12a      	cbz	r2, 900055e0 <EwCopyAlpha8RowSolidBlend+0x68>
900055d4:	2aff      	cmp	r2, #255	; 0xff
900055d6:	d105      	bne.n	900055e4 <EwCopyAlpha8RowSolidBlend+0x6c>
900055d8:	2cff      	cmp	r4, #255	; 0xff
900055da:	d103      	bne.n	900055e4 <EwCopyAlpha8RowSolidBlend+0x6c>
900055dc:	9b01      	ldr	r3, [sp, #4]
900055de:	603b      	str	r3, [r7, #0]
900055e0:	3704      	adds	r7, #4
900055e2:	e7ed      	b.n	900055c0 <EwCopyAlpha8RowSolidBlend+0x48>
900055e4:	2c00      	cmp	r4, #0
900055e6:	d0fb      	beq.n	900055e0 <EwCopyAlpha8RowSolidBlend+0x68>
900055e8:	683e      	ldr	r6, [r7, #0]
900055ea:	fb02 e20e 	mla	r2, r2, lr, lr
900055ee:	ea5f 6b16 	movs.w	fp, r6, lsr #24
900055f2:	ea4f 2212 	mov.w	r2, r2, lsr #8
900055f6:	fb02 f300 	mul.w	r3, r2, r0
900055fa:	fb02 f109 	mul.w	r1, r2, r9
900055fe:	d00d      	beq.n	9000561c <EwCopyAlpha8RowSolidBlend+0xa4>
90005600:	f5c2 7580 	rsb	r5, r2, #256	; 0x100
90005604:	fb0b 5505 	mla	r5, fp, r5, r5
90005608:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
9000560c:	f3c6 2607 	ubfx	r6, r6, #8, #8
90005610:	0a2d      	lsrs	r5, r5, #8
90005612:	fb05 330b 	mla	r3, r5, fp, r3
90005616:	442a      	add	r2, r5
90005618:	fb05 1106 	mla	r1, r5, r6, r1
9000561c:	0a1b      	lsrs	r3, r3, #8
9000561e:	0a09      	lsrs	r1, r1, #8
90005620:	b162      	cbz	r2, 9000563c <EwCopyAlpha8RowSolidBlend+0xc4>
90005622:	3a01      	subs	r2, #1
90005624:	2afe      	cmp	r2, #254	; 0xfe
90005626:	d809      	bhi.n	9000563c <EwCopyAlpha8RowSolidBlend+0xc4>
90005628:	f83a 5012 	ldrh.w	r5, [sl, r2, lsl #1]
9000562c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005630:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005634:	436b      	muls	r3, r5
90005636:	4369      	muls	r1, r5
90005638:	0a1b      	lsrs	r3, r3, #8
9000563a:	0a09      	lsrs	r1, r1, #8
9000563c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005640:	0209      	lsls	r1, r1, #8
90005642:	ea43 6202 	orr.w	r2, r3, r2, lsl #24
90005646:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
9000564a:	430a      	orrs	r2, r1
9000564c:	603a      	str	r2, [r7, #0]
9000564e:	e7c7      	b.n	900055e0 <EwCopyAlpha8RowSolidBlend+0x68>
90005650:	9002fa7c 	.word	0x9002fa7c

90005654 <EwCopyAlpha8RowGradient>:
90005654:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005658:	f8d3 c004 	ldr.w	ip, [r3, #4]
9000565c:	6b5f      	ldr	r7, [r3, #52]	; 0x34
9000565e:	681c      	ldr	r4, [r3, #0]
90005660:	691d      	ldr	r5, [r3, #16]
90005662:	013f      	lsls	r7, r7, #4
90005664:	6a1e      	ldr	r6, [r3, #32]
90005666:	f8d3 e014 	ldr.w	lr, [r3, #20]
9000566a:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9000566e:	6809      	ldr	r1, [r1, #0]
90005670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90005672:	6800      	ldr	r0, [r0, #0]
90005674:	440a      	add	r2, r1
90005676:	ea4f 1903 	mov.w	r9, r3, lsl #4
9000567a:	1a53      	subs	r3, r2, r1
9000567c:	2b00      	cmp	r3, #0
9000567e:	dc01      	bgt.n	90005684 <EwCopyAlpha8RowGradient+0x30>
90005680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005684:	f811 bb01 	ldrb.w	fp, [r1], #1
90005688:	f1bb 0f00 	cmp.w	fp, #0
9000568c:	d025      	beq.n	900056da <EwCopyAlpha8RowGradient+0x86>
9000568e:	0923      	lsrs	r3, r4, #4
90005690:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
90005694:	ea4f 3a15 	mov.w	sl, r5, lsr #12
90005698:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
9000569c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900056a0:	ea43 030a 	orr.w	r3, r3, sl
900056a4:	f009 4a7f 	and.w	sl, r9, #4278190080	; 0xff000000
900056a8:	ea43 030a 	orr.w	r3, r3, sl
900056ac:	f3c6 5a07 	ubfx	sl, r6, #20, #8
900056b0:	ea43 030a 	orr.w	r3, r3, sl
900056b4:	bf1f      	itttt	ne
900056b6:	ea4f 6a13 	movne.w	sl, r3, lsr #24
900056ba:	f023 437f 	bicne.w	r3, r3, #4278190080	; 0xff000000
900056be:	fb0b aa0a 	mlane	sl, fp, sl, sl
900056c2:	ea4f 2a1a 	movne.w	sl, sl, lsr #8
900056c6:	bf18      	it	ne
900056c8:	ea43 630a 	orrne.w	r3, r3, sl, lsl #24
900056cc:	6003      	str	r3, [r0, #0]
900056ce:	4464      	add	r4, ip
900056d0:	4475      	add	r5, lr
900056d2:	4446      	add	r6, r8
900056d4:	3004      	adds	r0, #4
900056d6:	44b9      	add	r9, r7
900056d8:	e7cf      	b.n	9000567a <EwCopyAlpha8RowGradient+0x26>
900056da:	f8c0 b000 	str.w	fp, [r0]
900056de:	e7f6      	b.n	900056ce <EwCopyAlpha8RowGradient+0x7a>

900056e0 <EwCopyAlpha8RowGradientBlend>:
900056e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900056e4:	6805      	ldr	r5, [r0, #0]
900056e6:	b085      	sub	sp, #20
900056e8:	6858      	ldr	r0, [r3, #4]
900056ea:	6b1e      	ldr	r6, [r3, #48]	; 0x30
900056ec:	9001      	str	r0, [sp, #4]
900056ee:	6958      	ldr	r0, [r3, #20]
900056f0:	0136      	lsls	r6, r6, #4
900056f2:	680f      	ldr	r7, [r1, #0]
900056f4:	9002      	str	r0, [sp, #8]
900056f6:	6a58      	ldr	r0, [r3, #36]	; 0x24
900056f8:	eb07 0a02 	add.w	sl, r7, r2
900056fc:	f8d3 c000 	ldr.w	ip, [r3]
90005700:	9003      	str	r0, [sp, #12]
90005702:	6b58      	ldr	r0, [r3, #52]	; 0x34
90005704:	f8d3 e010 	ldr.w	lr, [r3, #16]
90005708:	f8d3 8020 	ldr.w	r8, [r3, #32]
9000570c:	ea4f 1900 	mov.w	r9, r0, lsl #4
90005710:	ebaa 0307 	sub.w	r3, sl, r7
90005714:	2b00      	cmp	r3, #0
90005716:	dc02      	bgt.n	9000571e <EwCopyAlpha8RowGradientBlend+0x3e>
90005718:	b005      	add	sp, #20
9000571a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000571e:	f817 3b01 	ldrb.w	r3, [r7], #1
90005722:	b1c3      	cbz	r3, 90005756 <EwCopyAlpha8RowGradientBlend+0x76>
90005724:	ea4f 101c 	mov.w	r0, ip, lsr #4
90005728:	2bff      	cmp	r3, #255	; 0xff
9000572a:	f400 027f 	and.w	r2, r0, #16711680	; 0xff0000
9000572e:	ea4f 301e 	mov.w	r0, lr, lsr #12
90005732:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90005736:	ea40 0002 	orr.w	r0, r0, r2
9000573a:	f006 427f 	and.w	r2, r6, #4278190080	; 0xff000000
9000573e:	ea40 0002 	orr.w	r0, r0, r2
90005742:	f3c8 5207 	ubfx	r2, r8, #20, #8
90005746:	ea42 0200 	orr.w	r2, r2, r0
9000574a:	ea4f 6010 	mov.w	r0, r0, lsr #24
9000574e:	d10b      	bne.n	90005768 <EwCopyAlpha8RowGradientBlend+0x88>
90005750:	28ff      	cmp	r0, #255	; 0xff
90005752:	d109      	bne.n	90005768 <EwCopyAlpha8RowGradientBlend+0x88>
90005754:	602a      	str	r2, [r5, #0]
90005756:	9b01      	ldr	r3, [sp, #4]
90005758:	3504      	adds	r5, #4
9000575a:	444e      	add	r6, r9
9000575c:	449c      	add	ip, r3
9000575e:	9b02      	ldr	r3, [sp, #8]
90005760:	449e      	add	lr, r3
90005762:	9b03      	ldr	r3, [sp, #12]
90005764:	4498      	add	r8, r3
90005766:	e7d3      	b.n	90005710 <EwCopyAlpha8RowGradientBlend+0x30>
90005768:	2800      	cmp	r0, #0
9000576a:	d0f4      	beq.n	90005756 <EwCopyAlpha8RowGradientBlend+0x76>
9000576c:	3001      	adds	r0, #1
9000576e:	682c      	ldr	r4, [r5, #0]
90005770:	f002 11ff 	and.w	r1, r2, #16711935	; 0xff00ff
90005774:	f3c2 2207 	ubfx	r2, r2, #8, #8
90005778:	fb03 0000 	mla	r0, r3, r0, r0
9000577c:	ea5f 6b14 	movs.w	fp, r4, lsr #24
90005780:	ea4f 2310 	mov.w	r3, r0, lsr #8
90005784:	fb03 f101 	mul.w	r1, r3, r1
90005788:	fb03 f202 	mul.w	r2, r3, r2
9000578c:	d00d      	beq.n	900057aa <EwCopyAlpha8RowGradientBlend+0xca>
9000578e:	f5c3 7080 	rsb	r0, r3, #256	; 0x100
90005792:	fb0b 0000 	mla	r0, fp, r0, r0
90005796:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9000579a:	f3c4 2407 	ubfx	r4, r4, #8, #8
9000579e:	0a00      	lsrs	r0, r0, #8
900057a0:	fb00 110b 	mla	r1, r0, fp, r1
900057a4:	4403      	add	r3, r0
900057a6:	fb00 2204 	mla	r2, r0, r4, r2
900057aa:	0a09      	lsrs	r1, r1, #8
900057ac:	0a12      	lsrs	r2, r2, #8
900057ae:	b16b      	cbz	r3, 900057cc <EwCopyAlpha8RowGradientBlend+0xec>
900057b0:	3b01      	subs	r3, #1
900057b2:	2bfe      	cmp	r3, #254	; 0xfe
900057b4:	d80a      	bhi.n	900057cc <EwCopyAlpha8RowGradientBlend+0xec>
900057b6:	480a      	ldr	r0, [pc, #40]	; (900057e0 <EwCopyAlpha8RowGradientBlend+0x100>)
900057b8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900057bc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900057c0:	f830 0013 	ldrh.w	r0, [r0, r3, lsl #1]
900057c4:	4341      	muls	r1, r0
900057c6:	4342      	muls	r2, r0
900057c8:	0a09      	lsrs	r1, r1, #8
900057ca:	0a12      	lsrs	r2, r2, #8
900057cc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900057d0:	0212      	lsls	r2, r2, #8
900057d2:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
900057d6:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
900057da:	4311      	orrs	r1, r2
900057dc:	6029      	str	r1, [r5, #0]
900057de:	e7ba      	b.n	90005756 <EwCopyAlpha8RowGradientBlend+0x76>
900057e0:	9002fa7c 	.word	0x9002fa7c

900057e4 <EwCopyRGB565Row>:
900057e4:	b5f0      	push	{r4, r5, r6, r7, lr}
900057e6:	6800      	ldr	r0, [r0, #0]
900057e8:	680c      	ldr	r4, [r1, #0]
900057ea:	2a00      	cmp	r2, #0
900057ec:	dc00      	bgt.n	900057f0 <EwCopyRGB565Row+0xc>
900057ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
900057f0:	f834 1b02 	ldrh.w	r1, [r4], #2
900057f4:	3a01      	subs	r2, #1
900057f6:	08cb      	lsrs	r3, r1, #3
900057f8:	0a0e      	lsrs	r6, r1, #8
900057fa:	f003 07fc 	and.w	r7, r3, #252	; 0xfc
900057fe:	00c9      	lsls	r1, r1, #3
90005800:	f3c3 1381 	ubfx	r3, r3, #6, #2
90005804:	f006 05f8 	and.w	r5, r6, #248	; 0xf8
90005808:	b2c9      	uxtb	r1, r1
9000580a:	433b      	orrs	r3, r7
9000580c:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
90005810:	ea43 1351 	orr.w	r3, r3, r1, lsr #5
90005814:	ea45 1156 	orr.w	r1, r5, r6, lsr #5
90005818:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000581c:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
90005820:	f840 3b04 	str.w	r3, [r0], #4
90005824:	e7e1      	b.n	900057ea <EwCopyRGB565Row+0x6>

90005826 <EwCopyRGB565RowSolid>:
90005826:	b5f0      	push	{r4, r5, r6, r7, lr}
90005828:	680d      	ldr	r5, [r1, #0]
9000582a:	6b19      	ldr	r1, [r3, #48]	; 0x30
9000582c:	6804      	ldr	r4, [r0, #0]
9000582e:	1509      	asrs	r1, r1, #20
90005830:	3101      	adds	r1, #1
90005832:	0609      	lsls	r1, r1, #24
90005834:	2a00      	cmp	r2, #0
90005836:	dc00      	bgt.n	9000583a <EwCopyRGB565RowSolid+0x14>
90005838:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000583a:	f835 3b02 	ldrh.w	r3, [r5], #2
9000583e:	b1b3      	cbz	r3, 9000586e <EwCopyRGB565RowSolid+0x48>
90005840:	ea4f 2c13 	mov.w	ip, r3, lsr #8
90005844:	08d8      	lsrs	r0, r3, #3
90005846:	00db      	lsls	r3, r3, #3
90005848:	f00c 06f8 	and.w	r6, ip, #248	; 0xf8
9000584c:	f000 07fc 	and.w	r7, r0, #252	; 0xfc
90005850:	f3c0 1081 	ubfx	r0, r0, #6, #2
90005854:	fa5f fe83 	uxtb.w	lr, r3
90005858:	f3c3 1342 	ubfx	r3, r3, #5, #3
9000585c:	ea46 165c 	orr.w	r6, r6, ip, lsr #5
90005860:	4338      	orrs	r0, r7
90005862:	ea43 030e 	orr.w	r3, r3, lr
90005866:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
9000586a:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000586e:	430b      	orrs	r3, r1
90005870:	3a01      	subs	r2, #1
90005872:	f844 3b04 	str.w	r3, [r4], #4
90005876:	e7dd      	b.n	90005834 <EwCopyRGB565RowSolid+0xe>

90005878 <EwCopyRGB565RowSolidBlend>:
90005878:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000587c:	6805      	ldr	r5, [r0, #0]
9000587e:	6b18      	ldr	r0, [r3, #48]	; 0x30
90005880:	680e      	ldr	r6, [r1, #0]
90005882:	1500      	asrs	r0, r0, #20
90005884:	4f2f      	ldr	r7, [pc, #188]	; (90005944 <EwCopyRGB565RowSolidBlend+0xcc>)
90005886:	1c44      	adds	r4, r0, #1
90005888:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
9000588c:	2a00      	cmp	r2, #0
9000588e:	dc01      	bgt.n	90005894 <EwCopyRGB565RowSolidBlend+0x1c>
90005890:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90005894:	f836 1b02 	ldrh.w	r1, [r6], #2
90005898:	0a0b      	lsrs	r3, r1, #8
9000589a:	ea4f 0cd1 	mov.w	ip, r1, lsr #3
9000589e:	00c9      	lsls	r1, r1, #3
900058a0:	f003 08f8 	and.w	r8, r3, #248	; 0xf8
900058a4:	f00c 0efc 	and.w	lr, ip, #252	; 0xfc
900058a8:	fa5f f981 	uxtb.w	r9, r1
900058ac:	f3c1 1142 	ubfx	r1, r1, #5, #3
900058b0:	ea48 1853 	orr.w	r8, r8, r3, lsr #5
900058b4:	ea41 0309 	orr.w	r3, r1, r9
900058b8:	f3cc 1181 	ubfx	r1, ip, #6, #2
900058bc:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
900058c0:	ea41 010e 	orr.w	r1, r1, lr
900058c4:	f8d5 e000 	ldr.w	lr, [r5]
900058c8:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
900058cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900058d0:	0a09      	lsrs	r1, r1, #8
900058d2:	4363      	muls	r3, r4
900058d4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900058d8:	fb01 fc04 	mul.w	ip, r1, r4
900058dc:	ea5f 611e 	movs.w	r1, lr, lsr #24
900058e0:	bf1d      	ittte	ne
900058e2:	fb01 0100 	mlane	r1, r1, r0, r0
900058e6:	f00e 18ff 	andne.w	r8, lr, #16711935	; 0xff00ff
900058ea:	f3ce 2e07 	ubfxne	lr, lr, #8, #8
900058ee:	4621      	moveq	r1, r4
900058f0:	bf1f      	itttt	ne
900058f2:	0a09      	lsrne	r1, r1, #8
900058f4:	fb01 3308 	mlane	r3, r1, r8, r3
900058f8:	fb01 cc0e 	mlane	ip, r1, lr, ip
900058fc:	1909      	addne	r1, r1, r4
900058fe:	0a1b      	lsrs	r3, r3, #8
90005900:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005904:	b179      	cbz	r1, 90005926 <EwCopyRGB565RowSolidBlend+0xae>
90005906:	3901      	subs	r1, #1
90005908:	29fe      	cmp	r1, #254	; 0xfe
9000590a:	d80c      	bhi.n	90005926 <EwCopyRGB565RowSolidBlend+0xae>
9000590c:	f837 e011 	ldrh.w	lr, [r7, r1, lsl #1]
90005910:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005914:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90005918:	fb0e f303 	mul.w	r3, lr, r3
9000591c:	fb0e fc0c 	mul.w	ip, lr, ip
90005920:	0a1b      	lsrs	r3, r3, #8
90005922:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005926:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000592a:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
9000592e:	3a01      	subs	r2, #1
90005930:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90005934:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
90005938:	ea43 030c 	orr.w	r3, r3, ip
9000593c:	f845 3b04 	str.w	r3, [r5], #4
90005940:	e7a4      	b.n	9000588c <EwCopyRGB565RowSolidBlend+0x14>
90005942:	bf00      	nop
90005944:	9002fa7c 	.word	0x9002fa7c

90005948 <EwCopyRGB565RowGradient>:
90005948:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000594c:	6804      	ldr	r4, [r0, #0]
9000594e:	680d      	ldr	r5, [r1, #0]
90005950:	e9d3 060c 	ldrd	r0, r6, [r3, #48]	; 0x30
90005954:	2a00      	cmp	r2, #0
90005956:	dc01      	bgt.n	9000595c <EwCopyRGB565RowGradient+0x14>
90005958:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000595c:	1503      	asrs	r3, r0, #20
9000595e:	1c5f      	adds	r7, r3, #1
90005960:	f835 3b02 	ldrh.w	r3, [r5], #2
90005964:	b1bb      	cbz	r3, 90005996 <EwCopyRGB565RowGradient+0x4e>
90005966:	ea4f 2813 	mov.w	r8, r3, lsr #8
9000596a:	08d9      	lsrs	r1, r3, #3
9000596c:	00db      	lsls	r3, r3, #3
9000596e:	f008 0ef8 	and.w	lr, r8, #248	; 0xf8
90005972:	f001 0cfc 	and.w	ip, r1, #252	; 0xfc
90005976:	f3c1 1181 	ubfx	r1, r1, #6, #2
9000597a:	fa5f f983 	uxtb.w	r9, r3
9000597e:	f3c3 1342 	ubfx	r3, r3, #5, #3
90005982:	ea4e 1e58 	orr.w	lr, lr, r8, lsr #5
90005986:	ea41 010c 	orr.w	r1, r1, ip
9000598a:	ea43 0309 	orr.w	r3, r3, r9
9000598e:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90005992:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90005996:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
9000599a:	4430      	add	r0, r6
9000599c:	3a01      	subs	r2, #1
9000599e:	f844 3b04 	str.w	r3, [r4], #4
900059a2:	e7d7      	b.n	90005954 <EwCopyRGB565RowGradient+0xc>

900059a4 <EwCopyRGB565RowGradientBlend>:
900059a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900059a8:	6800      	ldr	r0, [r0, #0]
900059aa:	680d      	ldr	r5, [r1, #0]
900059ac:	4f34      	ldr	r7, [pc, #208]	; (90005a80 <EwCopyRGB565RowGradientBlend+0xdc>)
900059ae:	e9d3 460c 	ldrd	r4, r6, [r3, #48]	; 0x30
900059b2:	2a00      	cmp	r2, #0
900059b4:	dc01      	bgt.n	900059ba <EwCopyRGB565RowGradientBlend+0x16>
900059b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900059ba:	f835 ab02 	ldrh.w	sl, [r5], #2
900059be:	ea4f 5924 	mov.w	r9, r4, asr #20
900059c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900059c6:	f109 0e01 	add.w	lr, r9, #1
900059ca:	ea4f 08da 	mov.w	r8, sl, lsr #3
900059ce:	f003 01f8 	and.w	r1, r3, #248	; 0xf8
900059d2:	ea4f 0aca 	mov.w	sl, sl, lsl #3
900059d6:	f008 0bfc 	and.w	fp, r8, #252	; 0xfc
900059da:	ea41 1353 	orr.w	r3, r1, r3, lsr #5
900059de:	f3ca 1142 	ubfx	r1, sl, #5, #3
900059e2:	fa5f fc8a 	uxtb.w	ip, sl
900059e6:	ea41 010c 	orr.w	r1, r1, ip
900059ea:	f3c8 1c81 	ubfx	ip, r8, #6, #2
900059ee:	f8d0 8000 	ldr.w	r8, [r0]
900059f2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
900059f6:	ea4c 0c0b 	orr.w	ip, ip, fp
900059fa:	ea41 2c0c 	orr.w	ip, r1, ip, lsl #8
900059fe:	f001 13ff 	and.w	r3, r1, #16711935	; 0xff00ff
90005a02:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005a06:	fb09 3303 	mla	r3, r9, r3, r3
90005a0a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90005a0e:	fb09 cc0c 	mla	ip, r9, ip, ip
90005a12:	ea5f 6918 	movs.w	r9, r8, lsr #24
90005a16:	d00d      	beq.n	90005a34 <EwCopyRGB565RowGradientBlend+0x90>
90005a18:	f5ce 7180 	rsb	r1, lr, #256	; 0x100
90005a1c:	fb09 1101 	mla	r1, r9, r1, r1
90005a20:	f008 19ff 	and.w	r9, r8, #16711935	; 0xff00ff
90005a24:	f3c8 2807 	ubfx	r8, r8, #8, #8
90005a28:	0a09      	lsrs	r1, r1, #8
90005a2a:	fb01 3309 	mla	r3, r1, r9, r3
90005a2e:	448e      	add	lr, r1
90005a30:	fb01 cc08 	mla	ip, r1, r8, ip
90005a34:	0a1b      	lsrs	r3, r3, #8
90005a36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005a3a:	f1be 0f00 	cmp.w	lr, #0
90005a3e:	d010      	beq.n	90005a62 <EwCopyRGB565RowGradientBlend+0xbe>
90005a40:	f10e 3eff 	add.w	lr, lr, #4294967295
90005a44:	f1be 0ffe 	cmp.w	lr, #254	; 0xfe
90005a48:	d80b      	bhi.n	90005a62 <EwCopyRGB565RowGradientBlend+0xbe>
90005a4a:	f837 101e 	ldrh.w	r1, [r7, lr, lsl #1]
90005a4e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005a52:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90005a56:	434b      	muls	r3, r1
90005a58:	fb01 fc0c 	mul.w	ip, r1, ip
90005a5c:	0a1b      	lsrs	r3, r3, #8
90005a5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005a62:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005a66:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
90005a6a:	4434      	add	r4, r6
90005a6c:	3a01      	subs	r2, #1
90005a6e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90005a72:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
90005a76:	ea43 030c 	orr.w	r3, r3, ip
90005a7a:	f840 3b04 	str.w	r3, [r0], #4
90005a7e:	e798      	b.n	900059b2 <EwCopyRGB565RowGradientBlend+0xe>
90005a80:	9002fa7c 	.word	0x9002fa7c

90005a84 <EwWarpNativeRow>:
90005a84:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
90005a88:	6804      	ldr	r4, [r0, #0]
90005a8a:	6888      	ldr	r0, [r1, #8]
90005a8c:	9e06      	ldr	r6, [sp, #24]
90005a8e:	680d      	ldr	r5, [r1, #0]
90005a90:	1080      	asrs	r0, r0, #2
90005a92:	2a00      	cmp	r2, #0
90005a94:	dc01      	bgt.n	90005a9a <EwWarpNativeRow+0x16>
90005a96:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
90005a9a:	1331      	asrs	r1, r6, #12
90005a9c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90005a9e:	3a01      	subs	r2, #1
90005aa0:	4379      	muls	r1, r7
90005aa2:	9f09      	ldr	r7, [sp, #36]	; 0x24
90005aa4:	ea4f 4921 	mov.w	r9, r1, asr #16
90005aa8:	1319      	asrs	r1, r3, #12
90005aaa:	4379      	muls	r1, r7
90005aac:	1409      	asrs	r1, r1, #16
90005aae:	fb00 1109 	mla	r1, r0, r9, r1
90005ab2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
90005ab6:	f844 1b04 	str.w	r1, [r4], #4
90005aba:	9907      	ldr	r1, [sp, #28]
90005abc:	440b      	add	r3, r1
90005abe:	9908      	ldr	r1, [sp, #32]
90005ac0:	440e      	add	r6, r1
90005ac2:	e7e6      	b.n	90005a92 <EwWarpNativeRow+0xe>

90005ac4 <EwWarpNativeRowFilter>:
90005ac4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ac8:	461d      	mov	r5, r3
90005aca:	6803      	ldr	r3, [r0, #0]
90005acc:	680f      	ldr	r7, [r1, #0]
90005ace:	4614      	mov	r4, r2
90005ad0:	9300      	str	r3, [sp, #0]
90005ad2:	688b      	ldr	r3, [r1, #8]
90005ad4:	109b      	asrs	r3, r3, #2
90005ad6:	9301      	str	r3, [sp, #4]
90005ad8:	3301      	adds	r3, #1
90005ada:	009e      	lsls	r6, r3, #2
90005adc:	2c00      	cmp	r4, #0
90005ade:	dc02      	bgt.n	90005ae6 <EwWarpNativeRowFilter+0x22>
90005ae0:	b003      	add	sp, #12
90005ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005ae6:	132b      	asrs	r3, r5, #12
90005ae8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90005aea:	3c01      	subs	r4, #1
90005aec:	4353      	muls	r3, r2
90005aee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90005af0:	1310      	asrs	r0, r2, #12
90005af2:	9a10      	ldr	r2, [sp, #64]	; 0x40
90005af4:	131b      	asrs	r3, r3, #12
90005af6:	4350      	muls	r0, r2
90005af8:	9a01      	ldr	r2, [sp, #4]
90005afa:	3b08      	subs	r3, #8
90005afc:	1300      	asrs	r0, r0, #12
90005afe:	ea4f 1c23 	mov.w	ip, r3, asr #4
90005b02:	f003 030f 	and.w	r3, r3, #15
90005b06:	3808      	subs	r0, #8
90005b08:	f1c3 0e10 	rsb	lr, r3, #16
90005b0c:	1101      	asrs	r1, r0, #4
90005b0e:	f000 000f 	and.w	r0, r0, #15
90005b12:	fb02 c201 	mla	r2, r2, r1, ip
90005b16:	f1c0 0810 	rsb	r8, r0, #16
90005b1a:	fb00 fe0e 	mul.w	lr, r0, lr
90005b1e:	eb07 0182 	add.w	r1, r7, r2, lsl #2
90005b22:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
90005b26:	fb03 f808 	mul.w	r8, r3, r8
90005b2a:	198a      	adds	r2, r1, r6
90005b2c:	4343      	muls	r3, r0
90005b2e:	6848      	ldr	r0, [r1, #4]
90005b30:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
90005b34:	f852 9c04 	ldr.w	r9, [r2, #-4]
90005b38:	ea4f 221a 	mov.w	r2, sl, lsr #8
90005b3c:	ebac 0c0e 	sub.w	ip, ip, lr
90005b40:	5989      	ldr	r1, [r1, r6]
90005b42:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90005b46:	0a02      	lsrs	r2, r0, #8
90005b48:	ebac 0c03 	sub.w	ip, ip, r3
90005b4c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005b50:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90005b54:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90005b58:	fb08 f000 	mul.w	r0, r8, r0
90005b5c:	fb08 f202 	mul.w	r2, r8, r2
90005b60:	fb0c 000a 	mla	r0, ip, sl, r0
90005b64:	fb0c 220b 	mla	r2, ip, fp, r2
90005b68:	ea4f 2b11 	mov.w	fp, r1, lsr #8
90005b6c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005b70:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005b74:	fb03 0001 	mla	r0, r3, r1, r0
90005b78:	fb03 220b 	mla	r2, r3, fp, r2
90005b7c:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90005b80:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90005b84:	9b00      	ldr	r3, [sp, #0]
90005b86:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005b8a:	fb0e 0009 	mla	r0, lr, r9, r0
90005b8e:	fb0e 220b 	mla	r2, lr, fp, r2
90005b92:	0a00      	lsrs	r0, r0, #8
90005b94:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90005b98:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005b9c:	4302      	orrs	r2, r0
90005b9e:	f843 2b04 	str.w	r2, [r3], #4
90005ba2:	9300      	str	r3, [sp, #0]
90005ba4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90005ba6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90005ba8:	441d      	add	r5, r3
90005baa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90005bac:	4413      	add	r3, r2
90005bae:	930c      	str	r3, [sp, #48]	; 0x30
90005bb0:	e794      	b.n	90005adc <EwWarpNativeRowFilter+0x18>

90005bb2 <EwWarpNativeRowBlend>:
90005bb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005bb6:	680f      	ldr	r7, [r1, #0]
90005bb8:	6889      	ldr	r1, [r1, #8]
90005bba:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
90005bbe:	6806      	ldr	r6, [r0, #0]
90005bc0:	ea4f 0ea1 	mov.w	lr, r1, asr #2
90005bc4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 90005c7c <EwWarpNativeRowBlend+0xca>
90005bc8:	2a00      	cmp	r2, #0
90005bca:	dc01      	bgt.n	90005bd0 <EwWarpNativeRowBlend+0x1e>
90005bcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005bd0:	980d      	ldr	r0, [sp, #52]	; 0x34
90005bd2:	ea4f 312a 	mov.w	r1, sl, asr #12
90005bd6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90005bd8:	4341      	muls	r1, r0
90005bda:	1408      	asrs	r0, r1, #16
90005bdc:	1319      	asrs	r1, r3, #12
90005bde:	4361      	muls	r1, r4
90005be0:	1409      	asrs	r1, r1, #16
90005be2:	fb0e 1100 	mla	r1, lr, r0, r1
90005be6:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90005bea:	0e0c      	lsrs	r4, r1, #24
90005bec:	2cff      	cmp	r4, #255	; 0xff
90005bee:	d005      	beq.n	90005bfc <EwWarpNativeRowBlend+0x4a>
90005bf0:	f8d6 c000 	ldr.w	ip, [r6]
90005bf4:	ea5f 601c 	movs.w	r0, ip, lsr #24
90005bf8:	d108      	bne.n	90005c0c <EwWarpNativeRowBlend+0x5a>
90005bfa:	b104      	cbz	r4, 90005bfe <EwWarpNativeRowBlend+0x4c>
90005bfc:	6031      	str	r1, [r6, #0]
90005bfe:	990a      	ldr	r1, [sp, #40]	; 0x28
90005c00:	3604      	adds	r6, #4
90005c02:	3a01      	subs	r2, #1
90005c04:	440b      	add	r3, r1
90005c06:	990b      	ldr	r1, [sp, #44]	; 0x2c
90005c08:	448a      	add	sl, r1
90005c0a:	e7dd      	b.n	90005bc8 <EwWarpNativeRowBlend+0x16>
90005c0c:	2c00      	cmp	r4, #0
90005c0e:	d0f6      	beq.n	90005bfe <EwWarpNativeRowBlend+0x4c>
90005c10:	f1c4 05ff 	rsb	r5, r4, #255	; 0xff
90005c14:	f00c 19ff 	and.w	r9, ip, #16711935	; 0xff00ff
90005c18:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90005c1c:	fb00 5505 	mla	r5, r0, r5, r5
90005c20:	f001 10ff 	and.w	r0, r1, #16711935	; 0xff00ff
90005c24:	f3c1 2107 	ubfx	r1, r1, #8, #8
90005c28:	0a2d      	lsrs	r5, r5, #8
90005c2a:	fb04 0000 	mla	r0, r4, r0, r0
90005c2e:	fb04 1101 	mla	r1, r4, r1, r1
90005c32:	442c      	add	r4, r5
90005c34:	fb05 0009 	mla	r0, r5, r9, r0
90005c38:	fb05 1c0c 	mla	ip, r5, ip, r1
90005c3c:	2cfe      	cmp	r4, #254	; 0xfe
90005c3e:	ea4f 2010 	mov.w	r0, r0, lsr #8
90005c42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005c46:	d80c      	bhi.n	90005c62 <EwWarpNativeRowBlend+0xb0>
90005c48:	f838 b014 	ldrh.w	fp, [r8, r4, lsl #1]
90005c4c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005c50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90005c54:	fb0b f000 	mul.w	r0, fp, r0
90005c58:	fb0b fc0c 	mul.w	ip, fp, ip
90005c5c:	0a00      	lsrs	r0, r0, #8
90005c5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90005c62:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005c66:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
90005c6a:	ea40 6404 	orr.w	r4, r0, r4, lsl #24
90005c6e:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
90005c72:	ea44 040c 	orr.w	r4, r4, ip
90005c76:	6034      	str	r4, [r6, #0]
90005c78:	e7c1      	b.n	90005bfe <EwWarpNativeRowBlend+0x4c>
90005c7a:	bf00      	nop
90005c7c:	9002fa7c 	.word	0x9002fa7c

90005c80 <EwWarpNativeRowFilterBlend>:
90005c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005c84:	461e      	mov	r6, r3
90005c86:	688b      	ldr	r3, [r1, #8]
90005c88:	b085      	sub	sp, #20
90005c8a:	6805      	ldr	r5, [r0, #0]
90005c8c:	109b      	asrs	r3, r3, #2
90005c8e:	680f      	ldr	r7, [r1, #0]
90005c90:	9303      	str	r3, [sp, #12]
90005c92:	3301      	adds	r3, #1
90005c94:	009b      	lsls	r3, r3, #2
90005c96:	e9cd 2301 	strd	r2, r3, [sp, #4]
90005c9a:	9b01      	ldr	r3, [sp, #4]
90005c9c:	2b00      	cmp	r3, #0
90005c9e:	dc02      	bgt.n	90005ca6 <EwWarpNativeRowFilterBlend+0x26>
90005ca0:	b005      	add	sp, #20
90005ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005ca6:	9b11      	ldr	r3, [sp, #68]	; 0x44
90005ca8:	1331      	asrs	r1, r6, #12
90005caa:	9c03      	ldr	r4, [sp, #12]
90005cac:	4359      	muls	r1, r3
90005cae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005cb0:	1318      	asrs	r0, r3, #12
90005cb2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90005cb4:	1309      	asrs	r1, r1, #12
90005cb6:	4358      	muls	r0, r3
90005cb8:	3908      	subs	r1, #8
90005cba:	1300      	asrs	r0, r0, #12
90005cbc:	110a      	asrs	r2, r1, #4
90005cbe:	f001 010f 	and.w	r1, r1, #15
90005cc2:	3808      	subs	r0, #8
90005cc4:	f1c1 0e10 	rsb	lr, r1, #16
90005cc8:	1103      	asrs	r3, r0, #4
90005cca:	f000 000f 	and.w	r0, r0, #15
90005cce:	fb04 2203 	mla	r2, r4, r3, r2
90005cd2:	f1c0 0810 	rsb	r8, r0, #16
90005cd6:	fb00 fe0e 	mul.w	lr, r0, lr
90005cda:	9c02      	ldr	r4, [sp, #8]
90005cdc:	eb07 0382 	add.w	r3, r7, r2, lsl #2
90005ce0:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
90005ce4:	9a02      	ldr	r2, [sp, #8]
90005ce6:	fb01 f808 	mul.w	r8, r1, r8
90005cea:	4341      	muls	r1, r0
90005cec:	6858      	ldr	r0, [r3, #4]
90005cee:	189a      	adds	r2, r3, r2
90005cf0:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
90005cf4:	591b      	ldr	r3, [r3, r4]
90005cf6:	f852 9c04 	ldr.w	r9, [r2, #-4]
90005cfa:	ea4f 221a 	mov.w	r2, sl, lsr #8
90005cfe:	ebac 0c0e 	sub.w	ip, ip, lr
90005d02:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90005d06:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90005d0a:	0a02      	lsrs	r2, r0, #8
90005d0c:	ebac 0c01 	sub.w	ip, ip, r1
90005d10:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005d14:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90005d18:	fb08 f000 	mul.w	r0, r8, r0
90005d1c:	fb08 f202 	mul.w	r2, r8, r2
90005d20:	fb0c 000a 	mla	r0, ip, sl, r0
90005d24:	fb0c 220b 	mla	r2, ip, fp, r2
90005d28:	ea4f 2b13 	mov.w	fp, r3, lsr #8
90005d2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005d30:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005d34:	fb01 0003 	mla	r0, r1, r3, r0
90005d38:	fb01 220b 	mla	r2, r1, fp, r2
90005d3c:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90005d40:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90005d44:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005d48:	fb0e 0309 	mla	r3, lr, r9, r0
90005d4c:	fb0e 220b 	mla	r2, lr, fp, r2
90005d50:	0a1b      	lsrs	r3, r3, #8
90005d52:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90005d56:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90005d5a:	4313      	orrs	r3, r2
90005d5c:	0e12      	lsrs	r2, r2, #24
90005d5e:	2aff      	cmp	r2, #255	; 0xff
90005d60:	d003      	beq.n	90005d6a <EwWarpNativeRowFilterBlend+0xea>
90005d62:	6828      	ldr	r0, [r5, #0]
90005d64:	0e01      	lsrs	r1, r0, #24
90005d66:	d10c      	bne.n	90005d82 <EwWarpNativeRowFilterBlend+0x102>
90005d68:	b102      	cbz	r2, 90005d6c <EwWarpNativeRowFilterBlend+0xec>
90005d6a:	602b      	str	r3, [r5, #0]
90005d6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90005d6e:	3504      	adds	r5, #4
90005d70:	9a10      	ldr	r2, [sp, #64]	; 0x40
90005d72:	441e      	add	r6, r3
90005d74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90005d76:	4413      	add	r3, r2
90005d78:	930e      	str	r3, [sp, #56]	; 0x38
90005d7a:	9b01      	ldr	r3, [sp, #4]
90005d7c:	3b01      	subs	r3, #1
90005d7e:	9301      	str	r3, [sp, #4]
90005d80:	e78b      	b.n	90005c9a <EwWarpNativeRowFilterBlend+0x1a>
90005d82:	2a00      	cmp	r2, #0
90005d84:	d0f2      	beq.n	90005d6c <EwWarpNativeRowFilterBlend+0xec>
90005d86:	f1c2 0bff 	rsb	fp, r2, #255	; 0xff
90005d8a:	f000 1cff 	and.w	ip, r0, #16711935	; 0xff00ff
90005d8e:	f3c0 2007 	ubfx	r0, r0, #8, #8
90005d92:	fb01 bb0b 	mla	fp, r1, fp, fp
90005d96:	f003 11ff 	and.w	r1, r3, #16711935	; 0xff00ff
90005d9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90005d9e:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
90005da2:	fb02 1101 	mla	r1, r2, r1, r1
90005da6:	fb02 3303 	mla	r3, r2, r3, r3
90005daa:	445a      	add	r2, fp
90005dac:	fb0b 110c 	mla	r1, fp, ip, r1
90005db0:	fb0b 3000 	mla	r0, fp, r0, r3
90005db4:	2afe      	cmp	r2, #254	; 0xfe
90005db6:	ea4f 2111 	mov.w	r1, r1, lsr #8
90005dba:	ea4f 2010 	mov.w	r0, r0, lsr #8
90005dbe:	d80c      	bhi.n	90005dda <EwWarpNativeRowFilterBlend+0x15a>
90005dc0:	4b0b      	ldr	r3, [pc, #44]	; (90005df0 <EwWarpNativeRowFilterBlend+0x170>)
90005dc2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005dc6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90005dca:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
90005dce:	fb0e f101 	mul.w	r1, lr, r1
90005dd2:	fb0e f000 	mul.w	r0, lr, r0
90005dd6:	0a09      	lsrs	r1, r1, #8
90005dd8:	0a00      	lsrs	r0, r0, #8
90005dda:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005dde:	0200      	lsls	r0, r0, #8
90005de0:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
90005de4:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
90005de8:	4302      	orrs	r2, r0
90005dea:	602a      	str	r2, [r5, #0]
90005dec:	e7be      	b.n	90005d6c <EwWarpNativeRowFilterBlend+0xec>
90005dee:	bf00      	nop
90005df0:	9002fa7c 	.word	0x9002fa7c

90005df4 <EwWarpNativeRowGradient>:
90005df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005df8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90005dfa:	6806      	ldr	r6, [r0, #0]
90005dfc:	6b27      	ldr	r7, [r4, #48]	; 0x30
90005dfe:	f8d1 b000 	ldr.w	fp, [r1]
90005e02:	153f      	asrs	r7, r7, #20
90005e04:	6889      	ldr	r1, [r1, #8]
90005e06:	6d20      	ldr	r0, [r4, #80]	; 0x50
90005e08:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
90005e0c:	ea4f 0aa1 	mov.w	sl, r1, asr #2
90005e10:	3701      	adds	r7, #1
90005e12:	b940      	cbnz	r0, 90005e26 <EwWarpNativeRowGradient+0x32>
90005e14:	6d60      	ldr	r0, [r4, #84]	; 0x54
90005e16:	fab0 f080 	clz	r0, r0
90005e1a:	0940      	lsrs	r0, r0, #5
90005e1c:	4611      	mov	r1, r2
90005e1e:	2900      	cmp	r1, #0
90005e20:	dc03      	bgt.n	90005e2a <EwWarpNativeRowGradient+0x36>
90005e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005e26:	2000      	movs	r0, #0
90005e28:	e7f8      	b.n	90005e1c <EwWarpNativeRowGradient+0x28>
90005e2a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90005e2c:	131a      	asrs	r2, r3, #12
90005e2e:	ea4f 3829 	mov.w	r8, r9, asr #12
90005e32:	436a      	muls	r2, r5
90005e34:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90005e36:	fb05 f808 	mul.w	r8, r5, r8
90005e3a:	ea4f 4c22 	mov.w	ip, r2, asr #16
90005e3e:	ea4f 4828 	mov.w	r8, r8, asr #16
90005e42:	fb08 f50a 	mul.w	r5, r8, sl
90005e46:	eb05 4222 	add.w	r2, r5, r2, asr #16
90005e4a:	f85b 5022 	ldr.w	r5, [fp, r2, lsl #2]
90005e4e:	bb20      	cbnz	r0, 90005e9a <EwWarpNativeRowGradient+0xa6>
90005e50:	6d27      	ldr	r7, [r4, #80]	; 0x50
90005e52:	6b22      	ldr	r2, [r4, #48]	; 0x30
90005e54:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
90005e58:	b16f      	cbz	r7, 90005e76 <EwWarpNativeRowGradient+0x82>
90005e5a:	f1b8 0f00 	cmp.w	r8, #0
90005e5e:	d002      	beq.n	90005e66 <EwWarpNativeRowGradient+0x72>
90005e60:	6b67      	ldr	r7, [r4, #52]	; 0x34
90005e62:	fb07 2208 	mla	r2, r7, r8, r2
90005e66:	6d67      	ldr	r7, [r4, #84]	; 0x54
90005e68:	b12f      	cbz	r7, 90005e76 <EwWarpNativeRowGradient+0x82>
90005e6a:	f1b8 0f00 	cmp.w	r8, #0
90005e6e:	d002      	beq.n	90005e76 <EwWarpNativeRowGradient+0x82>
90005e70:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90005e72:	fb07 ee08 	mla	lr, r7, r8, lr
90005e76:	6d67      	ldr	r7, [r4, #84]	; 0x54
90005e78:	b167      	cbz	r7, 90005e94 <EwWarpNativeRowGradient+0xa0>
90005e7a:	f1bc 0f00 	cmp.w	ip, #0
90005e7e:	d009      	beq.n	90005e94 <EwWarpNativeRowGradient+0xa0>
90005e80:	1517      	asrs	r7, r2, #20
90005e82:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90005e86:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
90005e8a:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90005e8c:	fb07 fe0e 	mul.w	lr, r7, lr
90005e90:	fb0c 220e 	mla	r2, ip, lr, r2
90005e94:	f3c2 5207 	ubfx	r2, r2, #20, #8
90005e98:	1c57      	adds	r7, r2, #1
90005e9a:	0e2a      	lsrs	r2, r5, #24
90005e9c:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
90005ea0:	3901      	subs	r1, #1
90005ea2:	437a      	muls	r2, r7
90005ea4:	0a12      	lsrs	r2, r2, #8
90005ea6:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
90005eaa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90005eac:	4413      	add	r3, r2
90005eae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90005eb0:	f846 5b04 	str.w	r5, [r6], #4
90005eb4:	4491      	add	r9, r2
90005eb6:	e7b2      	b.n	90005e1e <EwWarpNativeRowGradient+0x2a>

90005eb8 <EwWarpNativeRowFilterGradient>:
90005eb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005ebc:	6800      	ldr	r0, [r0, #0]
90005ebe:	b087      	sub	sp, #28
90005ec0:	9d15      	ldr	r5, [sp, #84]	; 0x54
90005ec2:	9002      	str	r0, [sp, #8]
90005ec4:	6808      	ldr	r0, [r1, #0]
90005ec6:	6889      	ldr	r1, [r1, #8]
90005ec8:	9004      	str	r0, [sp, #16]
90005eca:	1089      	asrs	r1, r1, #2
90005ecc:	6b28      	ldr	r0, [r5, #48]	; 0x30
90005ece:	9301      	str	r3, [sp, #4]
90005ed0:	1500      	asrs	r0, r0, #20
90005ed2:	9105      	str	r1, [sp, #20]
90005ed4:	6d29      	ldr	r1, [r5, #80]	; 0x50
90005ed6:	3001      	adds	r0, #1
90005ed8:	b971      	cbnz	r1, 90005ef8 <EwWarpNativeRowFilterGradient+0x40>
90005eda:	6d6f      	ldr	r7, [r5, #84]	; 0x54
90005edc:	fab7 f787 	clz	r7, r7
90005ee0:	097f      	lsrs	r7, r7, #5
90005ee2:	9905      	ldr	r1, [sp, #20]
90005ee4:	9200      	str	r2, [sp, #0]
90005ee6:	3101      	adds	r1, #1
90005ee8:	0089      	lsls	r1, r1, #2
90005eea:	9103      	str	r1, [sp, #12]
90005eec:	9b00      	ldr	r3, [sp, #0]
90005eee:	2b00      	cmp	r3, #0
90005ef0:	dc04      	bgt.n	90005efc <EwWarpNativeRowFilterGradient+0x44>
90005ef2:	b007      	add	sp, #28
90005ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005ef8:	2700      	movs	r7, #0
90005efa:	e7f2      	b.n	90005ee2 <EwWarpNativeRowFilterGradient+0x2a>
90005efc:	9910      	ldr	r1, [sp, #64]	; 0x40
90005efe:	9b01      	ldr	r3, [sp, #4]
90005f00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90005f02:	ea4f 3e21 	mov.w	lr, r1, asr #12
90005f06:	131e      	asrs	r6, r3, #12
90005f08:	9914      	ldr	r1, [sp, #80]	; 0x50
90005f0a:	4356      	muls	r6, r2
90005f0c:	fb01 fe0e 	mul.w	lr, r1, lr
90005f10:	1332      	asrs	r2, r6, #12
90005f12:	ea4f 312e 	mov.w	r1, lr, asr #12
90005f16:	bb0f      	cbnz	r7, 90005f5c <EwWarpNativeRowFilterGradient+0xa4>
90005f18:	6d2c      	ldr	r4, [r5, #80]	; 0x50
90005f1a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90005f1c:	f8d5 c038 	ldr.w	ip, [r5, #56]	; 0x38
90005f20:	b15c      	cbz	r4, 90005f3a <EwWarpNativeRowFilterGradient+0x82>
90005f22:	ea5f 442e 	movs.w	r4, lr, asr #16
90005f26:	d002      	beq.n	90005f2e <EwWarpNativeRowFilterGradient+0x76>
90005f28:	6b6b      	ldr	r3, [r5, #52]	; 0x34
90005f2a:	fb03 0004 	mla	r0, r3, r4, r0
90005f2e:	6d6b      	ldr	r3, [r5, #84]	; 0x54
90005f30:	b11b      	cbz	r3, 90005f3a <EwWarpNativeRowFilterGradient+0x82>
90005f32:	b114      	cbz	r4, 90005f3a <EwWarpNativeRowFilterGradient+0x82>
90005f34:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90005f36:	fb03 cc04 	mla	ip, r3, r4, ip
90005f3a:	6d6c      	ldr	r4, [r5, #84]	; 0x54
90005f3c:	b15c      	cbz	r4, 90005f56 <EwWarpNativeRowFilterGradient+0x9e>
90005f3e:	1436      	asrs	r6, r6, #16
90005f40:	d009      	beq.n	90005f56 <EwWarpNativeRowFilterGradient+0x9e>
90005f42:	1504      	asrs	r4, r0, #20
90005f44:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90005f48:	ebc4 5c2c 	rsb	ip, r4, ip, asr #20
90005f4c:	6cac      	ldr	r4, [r5, #72]	; 0x48
90005f4e:	fb04 fc0c 	mul.w	ip, r4, ip
90005f52:	fb06 000c 	mla	r0, r6, ip, r0
90005f56:	f3c0 5007 	ubfx	r0, r0, #20, #8
90005f5a:	3001      	adds	r0, #1
90005f5c:	f1a2 0408 	sub.w	r4, r2, #8
90005f60:	3908      	subs	r1, #8
90005f62:	9b05      	ldr	r3, [sp, #20]
90005f64:	110a      	asrs	r2, r1, #4
90005f66:	f001 010f 	and.w	r1, r1, #15
90005f6a:	1126      	asrs	r6, r4, #4
90005f6c:	f004 040f 	and.w	r4, r4, #15
90005f70:	f1c1 0810 	rsb	r8, r1, #16
90005f74:	fb03 6602 	mla	r6, r3, r2, r6
90005f78:	9b04      	ldr	r3, [sp, #16]
90005f7a:	fb04 f808 	mul.w	r8, r4, r8
90005f7e:	f1c4 0e10 	rsb	lr, r4, #16
90005f82:	eb03 0c86 	add.w	ip, r3, r6, lsl #2
90005f86:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
90005f8a:	9b03      	ldr	r3, [sp, #12]
90005f8c:	fb01 fe0e 	mul.w	lr, r1, lr
90005f90:	f8dc 6004 	ldr.w	r6, [ip, #4]
90005f94:	434c      	muls	r4, r1
90005f96:	eb0c 0203 	add.w	r2, ip, r3
90005f9a:	f85c 1003 	ldr.w	r1, [ip, r3]
90005f9e:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
90005fa2:	9b02      	ldr	r3, [sp, #8]
90005fa4:	f852 9c04 	ldr.w	r9, [r2, #-4]
90005fa8:	ea4f 221a 	mov.w	r2, sl, lsr #8
90005fac:	ebac 0c0e 	sub.w	ip, ip, lr
90005fb0:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90005fb4:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90005fb8:	0a32      	lsrs	r2, r6, #8
90005fba:	ebac 0c04 	sub.w	ip, ip, r4
90005fbe:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
90005fc2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90005fc6:	fb08 f606 	mul.w	r6, r8, r6
90005fca:	fb08 f202 	mul.w	r2, r8, r2
90005fce:	fb0c 660a 	mla	r6, ip, sl, r6
90005fd2:	fb0c 220b 	mla	r2, ip, fp, r2
90005fd6:	ea4f 2b11 	mov.w	fp, r1, lsr #8
90005fda:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90005fde:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005fe2:	fb04 6601 	mla	r6, r4, r1, r6
90005fe6:	fb04 220b 	mla	r2, r4, fp, r2
90005fea:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90005fee:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90005ff2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90005ff6:	fb0e 6109 	mla	r1, lr, r9, r6
90005ffa:	fb0e 220b 	mla	r2, lr, fp, r2
90005ffe:	0a09      	lsrs	r1, r1, #8
90006000:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90006004:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90006008:	4311      	orrs	r1, r2
9000600a:	0e12      	lsrs	r2, r2, #24
9000600c:	4342      	muls	r2, r0
9000600e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
90006012:	0a12      	lsrs	r2, r2, #8
90006014:	ea41 6102 	orr.w	r1, r1, r2, lsl #24
90006018:	9a01      	ldr	r2, [sp, #4]
9000601a:	f843 1b04 	str.w	r1, [r3], #4
9000601e:	9302      	str	r3, [sp, #8]
90006020:	9b11      	ldr	r3, [sp, #68]	; 0x44
90006022:	441a      	add	r2, r3
90006024:	9b10      	ldr	r3, [sp, #64]	; 0x40
90006026:	9201      	str	r2, [sp, #4]
90006028:	9a12      	ldr	r2, [sp, #72]	; 0x48
9000602a:	4413      	add	r3, r2
9000602c:	9310      	str	r3, [sp, #64]	; 0x40
9000602e:	9b00      	ldr	r3, [sp, #0]
90006030:	3b01      	subs	r3, #1
90006032:	9300      	str	r3, [sp, #0]
90006034:	e75a      	b.n	90005eec <EwWarpNativeRowFilterGradient+0x34>

90006036 <EwWarpNativeRowGradientBlend>:
90006036:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000603a:	9c11      	ldr	r4, [sp, #68]	; 0x44
9000603c:	6806      	ldr	r6, [r0, #0]
9000603e:	6808      	ldr	r0, [r1, #0]
90006040:	6889      	ldr	r1, [r1, #8]
90006042:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
90006046:	ea4f 09a1 	mov.w	r9, r1, asr #2
9000604a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000604c:	9300      	str	r3, [sp, #0]
9000604e:	1509      	asrs	r1, r1, #20
90006050:	9001      	str	r0, [sp, #4]
90006052:	f101 0e01 	add.w	lr, r1, #1
90006056:	6d21      	ldr	r1, [r4, #80]	; 0x50
90006058:	b949      	cbnz	r1, 9000606e <EwWarpNativeRowGradientBlend+0x38>
9000605a:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000605c:	fab5 f585 	clz	r5, r5
90006060:	096d      	lsrs	r5, r5, #5
90006062:	4610      	mov	r0, r2
90006064:	2800      	cmp	r0, #0
90006066:	dc04      	bgt.n	90006072 <EwWarpNativeRowGradientBlend+0x3c>
90006068:	b003      	add	sp, #12
9000606a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000606e:	2500      	movs	r5, #0
90006070:	e7f7      	b.n	90006062 <EwWarpNativeRowGradientBlend+0x2c>
90006072:	9b00      	ldr	r3, [sp, #0]
90006074:	ea4f 382a 	mov.w	r8, sl, asr #12
90006078:	990f      	ldr	r1, [sp, #60]	; 0x3c
9000607a:	131a      	asrs	r2, r3, #12
9000607c:	434a      	muls	r2, r1
9000607e:	9910      	ldr	r1, [sp, #64]	; 0x40
90006080:	fb01 f808 	mul.w	r8, r1, r8
90006084:	ea4f 4c22 	mov.w	ip, r2, asr #16
90006088:	ea4f 4728 	mov.w	r7, r8, asr #16
9000608c:	fb07 f109 	mul.w	r1, r7, r9
90006090:	eb01 4222 	add.w	r2, r1, r2, asr #16
90006094:	9901      	ldr	r1, [sp, #4]
90006096:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000609a:	bb0d      	cbnz	r5, 900060e0 <EwWarpNativeRowGradientBlend+0xaa>
9000609c:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000609e:	6b21      	ldr	r1, [r4, #48]	; 0x30
900060a0:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
900060a4:	b14b      	cbz	r3, 900060ba <EwWarpNativeRowGradientBlend+0x84>
900060a6:	b117      	cbz	r7, 900060ae <EwWarpNativeRowGradientBlend+0x78>
900060a8:	6b63      	ldr	r3, [r4, #52]	; 0x34
900060aa:	fb03 1107 	mla	r1, r3, r7, r1
900060ae:	6d63      	ldr	r3, [r4, #84]	; 0x54
900060b0:	b11b      	cbz	r3, 900060ba <EwWarpNativeRowGradientBlend+0x84>
900060b2:	b117      	cbz	r7, 900060ba <EwWarpNativeRowGradientBlend+0x84>
900060b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900060b6:	fb03 ee07 	mla	lr, r3, r7, lr
900060ba:	6d67      	ldr	r7, [r4, #84]	; 0x54
900060bc:	b167      	cbz	r7, 900060d8 <EwWarpNativeRowGradientBlend+0xa2>
900060be:	f1bc 0f00 	cmp.w	ip, #0
900060c2:	d009      	beq.n	900060d8 <EwWarpNativeRowGradientBlend+0xa2>
900060c4:	150f      	asrs	r7, r1, #20
900060c6:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
900060ca:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
900060ce:	6ca7      	ldr	r7, [r4, #72]	; 0x48
900060d0:	fb07 fe0e 	mul.w	lr, r7, lr
900060d4:	fb0c 110e 	mla	r1, ip, lr, r1
900060d8:	f3c1 5107 	ubfx	r1, r1, #20, #8
900060dc:	f101 0e01 	add.w	lr, r1, #1
900060e0:	0e11      	lsrs	r1, r2, #24
900060e2:	d03a      	beq.n	9000615a <EwWarpNativeRowGradientBlend+0x124>
900060e4:	f8d6 8000 	ldr.w	r8, [r6]
900060e8:	fb01 e10e 	mla	r1, r1, lr, lr
900060ec:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
900060f0:	f3c2 2207 	ubfx	r2, r2, #8, #8
900060f4:	0a09      	lsrs	r1, r1, #8
900060f6:	ea5f 6b18 	movs.w	fp, r8, lsr #24
900060fa:	fb01 f707 	mul.w	r7, r1, r7
900060fe:	fb01 f202 	mul.w	r2, r1, r2
90006102:	d00e      	beq.n	90006122 <EwWarpNativeRowGradientBlend+0xec>
90006104:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90006108:	fb0b cc0c 	mla	ip, fp, ip, ip
9000610c:	f008 1bff 	and.w	fp, r8, #16711935	; 0xff00ff
90006110:	f3c8 2807 	ubfx	r8, r8, #8, #8
90006114:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90006118:	fb0c 770b 	mla	r7, ip, fp, r7
9000611c:	4461      	add	r1, ip
9000611e:	fb0c 2208 	mla	r2, ip, r8, r2
90006122:	0a3f      	lsrs	r7, r7, #8
90006124:	0a12      	lsrs	r2, r2, #8
90006126:	b179      	cbz	r1, 90006148 <EwWarpNativeRowGradientBlend+0x112>
90006128:	3901      	subs	r1, #1
9000612a:	29fe      	cmp	r1, #254	; 0xfe
9000612c:	d80c      	bhi.n	90006148 <EwWarpNativeRowGradientBlend+0x112>
9000612e:	4b0f      	ldr	r3, [pc, #60]	; (9000616c <EwWarpNativeRowGradientBlend+0x136>)
90006130:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90006134:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006138:	f833 c011 	ldrh.w	ip, [r3, r1, lsl #1]
9000613c:	fb0c f707 	mul.w	r7, ip, r7
90006140:	fb0c f202 	mul.w	r2, ip, r2
90006144:	0a3f      	lsrs	r7, r7, #8
90006146:	0a12      	lsrs	r2, r2, #8
90006148:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9000614c:	0212      	lsls	r2, r2, #8
9000614e:	ea47 6701 	orr.w	r7, r7, r1, lsl #24
90006152:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90006156:	4317      	orrs	r7, r2
90006158:	6037      	str	r7, [r6, #0]
9000615a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000615c:	3604      	adds	r6, #4
9000615e:	9a00      	ldr	r2, [sp, #0]
90006160:	3801      	subs	r0, #1
90006162:	441a      	add	r2, r3
90006164:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90006166:	9200      	str	r2, [sp, #0]
90006168:	449a      	add	sl, r3
9000616a:	e77b      	b.n	90006064 <EwWarpNativeRowGradientBlend+0x2e>
9000616c:	9002fa7c 	.word	0x9002fa7c

90006170 <EwWarpNativeRowFilterGradientBlend>:
90006170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006174:	b087      	sub	sp, #28
90006176:	f8d0 8000 	ldr.w	r8, [r0]
9000617a:	9302      	str	r3, [sp, #8]
9000617c:	680b      	ldr	r3, [r1, #0]
9000617e:	9c15      	ldr	r4, [sp, #84]	; 0x54
90006180:	9304      	str	r3, [sp, #16]
90006182:	688b      	ldr	r3, [r1, #8]
90006184:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006186:	109b      	asrs	r3, r3, #2
90006188:	1509      	asrs	r1, r1, #20
9000618a:	9305      	str	r3, [sp, #20]
9000618c:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000618e:	3101      	adds	r1, #1
90006190:	b973      	cbnz	r3, 900061b0 <EwWarpNativeRowFilterGradientBlend+0x40>
90006192:	6d66      	ldr	r6, [r4, #84]	; 0x54
90006194:	fab6 f686 	clz	r6, r6
90006198:	0976      	lsrs	r6, r6, #5
9000619a:	9b05      	ldr	r3, [sp, #20]
9000619c:	9201      	str	r2, [sp, #4]
9000619e:	3301      	adds	r3, #1
900061a0:	009b      	lsls	r3, r3, #2
900061a2:	9303      	str	r3, [sp, #12]
900061a4:	9b01      	ldr	r3, [sp, #4]
900061a6:	2b00      	cmp	r3, #0
900061a8:	dc04      	bgt.n	900061b4 <EwWarpNativeRowFilterGradientBlend+0x44>
900061aa:	b007      	add	sp, #28
900061ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900061b0:	2600      	movs	r6, #0
900061b2:	e7f2      	b.n	9000619a <EwWarpNativeRowFilterGradientBlend+0x2a>
900061b4:	9b02      	ldr	r3, [sp, #8]
900061b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
900061b8:	131d      	asrs	r5, r3, #12
900061ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900061bc:	ea4f 3c22 	mov.w	ip, r2, asr #12
900061c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
900061c2:	435d      	muls	r5, r3
900061c4:	fb02 fc0c 	mul.w	ip, r2, ip
900061c8:	ea4f 3e25 	mov.w	lr, r5, asr #12
900061cc:	ea4f 322c 	mov.w	r2, ip, asr #12
900061d0:	b9fe      	cbnz	r6, 90006212 <EwWarpNativeRowFilterGradientBlend+0xa2>
900061d2:	6d20      	ldr	r0, [r4, #80]	; 0x50
900061d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
900061d6:	6ba7      	ldr	r7, [r4, #56]	; 0x38
900061d8:	b158      	cbz	r0, 900061f2 <EwWarpNativeRowFilterGradientBlend+0x82>
900061da:	ea5f 402c 	movs.w	r0, ip, asr #16
900061de:	d002      	beq.n	900061e6 <EwWarpNativeRowFilterGradientBlend+0x76>
900061e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
900061e2:	fb03 1100 	mla	r1, r3, r0, r1
900061e6:	6d63      	ldr	r3, [r4, #84]	; 0x54
900061e8:	b11b      	cbz	r3, 900061f2 <EwWarpNativeRowFilterGradientBlend+0x82>
900061ea:	b110      	cbz	r0, 900061f2 <EwWarpNativeRowFilterGradientBlend+0x82>
900061ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900061ee:	fb03 7700 	mla	r7, r3, r0, r7
900061f2:	6d60      	ldr	r0, [r4, #84]	; 0x54
900061f4:	b150      	cbz	r0, 9000620c <EwWarpNativeRowFilterGradientBlend+0x9c>
900061f6:	142d      	asrs	r5, r5, #16
900061f8:	d008      	beq.n	9000620c <EwWarpNativeRowFilterGradientBlend+0x9c>
900061fa:	1508      	asrs	r0, r1, #20
900061fc:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90006200:	ebc0 5727 	rsb	r7, r0, r7, asr #20
90006204:	6ca0      	ldr	r0, [r4, #72]	; 0x48
90006206:	4347      	muls	r7, r0
90006208:	fb05 1107 	mla	r1, r5, r7, r1
9000620c:	f3c1 5107 	ubfx	r1, r1, #20, #8
90006210:	3101      	adds	r1, #1
90006212:	f1ae 0008 	sub.w	r0, lr, #8
90006216:	3a08      	subs	r2, #8
90006218:	9f05      	ldr	r7, [sp, #20]
9000621a:	1113      	asrs	r3, r2, #4
9000621c:	f002 020f 	and.w	r2, r2, #15
90006220:	1105      	asrs	r5, r0, #4
90006222:	f000 000f 	and.w	r0, r0, #15
90006226:	f1c2 0e10 	rsb	lr, r2, #16
9000622a:	fb07 5503 	mla	r5, r7, r3, r5
9000622e:	9b04      	ldr	r3, [sp, #16]
90006230:	f1c0 0c10 	rsb	ip, r0, #16
90006234:	fb00 fe0e 	mul.w	lr, r0, lr
90006238:	eb03 0785 	add.w	r7, r3, r5, lsl #2
9000623c:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
90006240:	9b03      	ldr	r3, [sp, #12]
90006242:	fb02 fc0c 	mul.w	ip, r2, ip
90006246:	4350      	muls	r0, r2
90006248:	687d      	ldr	r5, [r7, #4]
9000624a:	18fa      	adds	r2, r7, r3
9000624c:	58fb      	ldr	r3, [r7, r3]
9000624e:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
90006252:	f852 9c04 	ldr.w	r9, [r2, #-4]
90006256:	ea4f 221a 	mov.w	r2, sl, lsr #8
9000625a:	eba7 070c 	sub.w	r7, r7, ip
9000625e:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90006262:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90006266:	0a2a      	lsrs	r2, r5, #8
90006268:	1a3f      	subs	r7, r7, r0
9000626a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9000626e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006272:	fb0e f505 	mul.w	r5, lr, r5
90006276:	fb0e f202 	mul.w	r2, lr, r2
9000627a:	fb07 550a 	mla	r5, r7, sl, r5
9000627e:	fb07 220b 	mla	r2, r7, fp, r2
90006282:	ea4f 2b13 	mov.w	fp, r3, lsr #8
90006286:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000628a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9000628e:	fb00 5503 	mla	r5, r0, r3, r5
90006292:	fb00 220b 	mla	r2, r0, fp, r2
90006296:	ea4f 2b19 	mov.w	fp, r9, lsr #8
9000629a:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
9000629e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900062a2:	fb0c 5309 	mla	r3, ip, r9, r5
900062a6:	fb0c 220b 	mla	r2, ip, fp, r2
900062aa:	0a1b      	lsrs	r3, r3, #8
900062ac:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
900062b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900062b4:	4313      	orrs	r3, r2
900062b6:	0e12      	lsrs	r2, r2, #24
900062b8:	d038      	beq.n	9000632c <EwWarpNativeRowFilterGradientBlend+0x1bc>
900062ba:	f8d8 7000 	ldr.w	r7, [r8]
900062be:	fb02 1201 	mla	r2, r2, r1, r1
900062c2:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
900062c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900062ca:	0a12      	lsrs	r2, r2, #8
900062cc:	ea5f 6c17 	movs.w	ip, r7, lsr #24
900062d0:	fb02 f000 	mul.w	r0, r2, r0
900062d4:	fb02 f303 	mul.w	r3, r2, r3
900062d8:	d00d      	beq.n	900062f6 <EwWarpNativeRowFilterGradientBlend+0x186>
900062da:	f5c2 7580 	rsb	r5, r2, #256	; 0x100
900062de:	fb0c 5505 	mla	r5, ip, r5, r5
900062e2:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900062e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
900062ea:	0a2d      	lsrs	r5, r5, #8
900062ec:	fb05 000c 	mla	r0, r5, ip, r0
900062f0:	442a      	add	r2, r5
900062f2:	fb05 3307 	mla	r3, r5, r7, r3
900062f6:	0a00      	lsrs	r0, r0, #8
900062f8:	0a1b      	lsrs	r3, r3, #8
900062fa:	b16a      	cbz	r2, 90006318 <EwWarpNativeRowFilterGradientBlend+0x1a8>
900062fc:	3a01      	subs	r2, #1
900062fe:	2afe      	cmp	r2, #254	; 0xfe
90006300:	d80a      	bhi.n	90006318 <EwWarpNativeRowFilterGradientBlend+0x1a8>
90006302:	4d11      	ldr	r5, [pc, #68]	; (90006348 <EwWarpNativeRowFilterGradientBlend+0x1d8>)
90006304:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90006308:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000630c:	f835 5012 	ldrh.w	r5, [r5, r2, lsl #1]
90006310:	4368      	muls	r0, r5
90006312:	436b      	muls	r3, r5
90006314:	0a00      	lsrs	r0, r0, #8
90006316:	0a1b      	lsrs	r3, r3, #8
90006318:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9000631c:	021b      	lsls	r3, r3, #8
9000631e:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
90006322:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90006326:	4318      	orrs	r0, r3
90006328:	f8c8 0000 	str.w	r0, [r8]
9000632c:	9b02      	ldr	r3, [sp, #8]
9000632e:	f108 0804 	add.w	r8, r8, #4
90006332:	9a11      	ldr	r2, [sp, #68]	; 0x44
90006334:	4413      	add	r3, r2
90006336:	9a12      	ldr	r2, [sp, #72]	; 0x48
90006338:	9302      	str	r3, [sp, #8]
9000633a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000633c:	4413      	add	r3, r2
9000633e:	9310      	str	r3, [sp, #64]	; 0x40
90006340:	9b01      	ldr	r3, [sp, #4]
90006342:	3b01      	subs	r3, #1
90006344:	9301      	str	r3, [sp, #4]
90006346:	e72d      	b.n	900061a4 <EwWarpNativeRowFilterGradientBlend+0x34>
90006348:	9002fa7c 	.word	0x9002fa7c

9000634c <EwWarpIndex8Row>:
9000634c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000634e:	f8dd c014 	ldr.w	ip, [sp, #20]
90006352:	6804      	ldr	r4, [r0, #0]
90006354:	680d      	ldr	r5, [r1, #0]
90006356:	698e      	ldr	r6, [r1, #24]
90006358:	688f      	ldr	r7, [r1, #8]
9000635a:	2a00      	cmp	r2, #0
9000635c:	dc00      	bgt.n	90006360 <EwWarpIndex8Row+0x14>
9000635e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90006360:	ea4f 312c 	mov.w	r1, ip, asr #12
90006364:	9809      	ldr	r0, [sp, #36]	; 0x24
90006366:	3a01      	subs	r2, #1
90006368:	4341      	muls	r1, r0
9000636a:	1318      	asrs	r0, r3, #12
9000636c:	ea4f 4e21 	mov.w	lr, r1, asr #16
90006370:	9908      	ldr	r1, [sp, #32]
90006372:	4348      	muls	r0, r1
90006374:	fb07 510e 	mla	r1, r7, lr, r5
90006378:	1400      	asrs	r0, r0, #16
9000637a:	5c09      	ldrb	r1, [r1, r0]
9000637c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90006380:	f844 1b04 	str.w	r1, [r4], #4
90006384:	9906      	ldr	r1, [sp, #24]
90006386:	440b      	add	r3, r1
90006388:	9907      	ldr	r1, [sp, #28]
9000638a:	448c      	add	ip, r1
9000638c:	e7e5      	b.n	9000635a <EwWarpIndex8Row+0xe>

9000638e <EwWarpIndex8RowFilter>:
9000638e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006392:	461d      	mov	r5, r3
90006394:	b085      	sub	sp, #20
90006396:	6803      	ldr	r3, [r0, #0]
90006398:	680e      	ldr	r6, [r1, #0]
9000639a:	9301      	str	r3, [sp, #4]
9000639c:	688b      	ldr	r3, [r1, #8]
9000639e:	698f      	ldr	r7, [r1, #24]
900063a0:	9302      	str	r3, [sp, #8]
900063a2:	3301      	adds	r3, #1
900063a4:	9200      	str	r2, [sp, #0]
900063a6:	9303      	str	r3, [sp, #12]
900063a8:	9b00      	ldr	r3, [sp, #0]
900063aa:	2b00      	cmp	r3, #0
900063ac:	dc02      	bgt.n	900063b4 <EwWarpIndex8RowFilter+0x26>
900063ae:	b005      	add	sp, #20
900063b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900063b4:	132b      	asrs	r3, r5, #12
900063b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
900063b8:	9c02      	ldr	r4, [sp, #8]
900063ba:	4353      	muls	r3, r2
900063bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900063be:	1310      	asrs	r0, r2, #12
900063c0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900063c2:	131b      	asrs	r3, r3, #12
900063c4:	4350      	muls	r0, r2
900063c6:	3b08      	subs	r3, #8
900063c8:	1300      	asrs	r0, r0, #12
900063ca:	111a      	asrs	r2, r3, #4
900063cc:	f003 030f 	and.w	r3, r3, #15
900063d0:	3808      	subs	r0, #8
900063d2:	f1c3 0e10 	rsb	lr, r3, #16
900063d6:	1101      	asrs	r1, r0, #4
900063d8:	f000 000f 	and.w	r0, r0, #15
900063dc:	fb04 2201 	mla	r2, r4, r1, r2
900063e0:	f1c0 0810 	rsb	r8, r0, #16
900063e4:	fb00 fe0e 	mul.w	lr, r0, lr
900063e8:	9c03      	ldr	r4, [sp, #12]
900063ea:	18b1      	adds	r1, r6, r2
900063ec:	5cb2      	ldrb	r2, [r6, r2]
900063ee:	fb03 f808 	mul.w	r8, r3, r8
900063f2:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
900063f6:	4343      	muls	r3, r0
900063f8:	784a      	ldrb	r2, [r1, #1]
900063fa:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
900063fe:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
90006402:	ebac 0c0e 	sub.w	ip, ip, lr
90006406:	9a03      	ldr	r2, [sp, #12]
90006408:	ebac 0c03 	sub.w	ip, ip, r3
9000640c:	188a      	adds	r2, r1, r2
9000640e:	5d09      	ldrb	r1, [r1, r4]
90006410:	f812 2c01 	ldrb.w	r2, [r2, #-1]
90006414:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
90006418:	f857 9022 	ldr.w	r9, [r7, r2, lsl #2]
9000641c:	ea4f 221a 	mov.w	r2, sl, lsr #8
90006420:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90006424:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90006428:	0a02      	lsrs	r2, r0, #8
9000642a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9000642e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006432:	fb08 f000 	mul.w	r0, r8, r0
90006436:	fb08 f202 	mul.w	r2, r8, r2
9000643a:	fb0c 000a 	mla	r0, ip, sl, r0
9000643e:	fb0c 220b 	mla	r2, ip, fp, r2
90006442:	ea4f 2b11 	mov.w	fp, r1, lsr #8
90006446:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9000644a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9000644e:	fb03 0001 	mla	r0, r3, r1, r0
90006452:	fb03 220b 	mla	r2, r3, fp, r2
90006456:	ea4f 2b19 	mov.w	fp, r9, lsr #8
9000645a:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
9000645e:	9b01      	ldr	r3, [sp, #4]
90006460:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90006464:	fb0e 0009 	mla	r0, lr, r9, r0
90006468:	fb0e 220b 	mla	r2, lr, fp, r2
9000646c:	0a00      	lsrs	r0, r0, #8
9000646e:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90006472:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90006476:	4302      	orrs	r2, r0
90006478:	f843 2b04 	str.w	r2, [r3], #4
9000647c:	9301      	str	r3, [sp, #4]
9000647e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90006480:	9a10      	ldr	r2, [sp, #64]	; 0x40
90006482:	441d      	add	r5, r3
90006484:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90006486:	4413      	add	r3, r2
90006488:	930e      	str	r3, [sp, #56]	; 0x38
9000648a:	9b00      	ldr	r3, [sp, #0]
9000648c:	3b01      	subs	r3, #1
9000648e:	9300      	str	r3, [sp, #0]
90006490:	e78a      	b.n	900063a8 <EwWarpIndex8RowFilter+0x1a>

90006492 <EwWarpIndex8RowBlend>:
90006492:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006496:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
9000649a:	680f      	ldr	r7, [r1, #0]
9000649c:	f8d1 e018 	ldr.w	lr, [r1, #24]
900064a0:	6806      	ldr	r6, [r0, #0]
900064a2:	6889      	ldr	r1, [r1, #8]
900064a4:	f8df 80bc 	ldr.w	r8, [pc, #188]	; 90006564 <EwWarpIndex8RowBlend+0xd2>
900064a8:	9101      	str	r1, [sp, #4]
900064aa:	2a00      	cmp	r2, #0
900064ac:	dc02      	bgt.n	900064b4 <EwWarpIndex8RowBlend+0x22>
900064ae:	b003      	add	sp, #12
900064b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900064b4:	9810      	ldr	r0, [sp, #64]	; 0x40
900064b6:	ea4f 312a 	mov.w	r1, sl, asr #12
900064ba:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900064bc:	4341      	muls	r1, r0
900064be:	1318      	asrs	r0, r3, #12
900064c0:	1409      	asrs	r1, r1, #16
900064c2:	4360      	muls	r0, r4
900064c4:	9c01      	ldr	r4, [sp, #4]
900064c6:	1400      	asrs	r0, r0, #16
900064c8:	fb04 7101 	mla	r1, r4, r1, r7
900064cc:	5c09      	ldrb	r1, [r1, r0]
900064ce:	f85e 1021 	ldr.w	r1, [lr, r1, lsl #2]
900064d2:	0e0c      	lsrs	r4, r1, #24
900064d4:	2cff      	cmp	r4, #255	; 0xff
900064d6:	d005      	beq.n	900064e4 <EwWarpIndex8RowBlend+0x52>
900064d8:	f8d6 c000 	ldr.w	ip, [r6]
900064dc:	ea5f 601c 	movs.w	r0, ip, lsr #24
900064e0:	d108      	bne.n	900064f4 <EwWarpIndex8RowBlend+0x62>
900064e2:	b104      	cbz	r4, 900064e6 <EwWarpIndex8RowBlend+0x54>
900064e4:	6031      	str	r1, [r6, #0]
900064e6:	990d      	ldr	r1, [sp, #52]	; 0x34
900064e8:	3604      	adds	r6, #4
900064ea:	3a01      	subs	r2, #1
900064ec:	440b      	add	r3, r1
900064ee:	990e      	ldr	r1, [sp, #56]	; 0x38
900064f0:	448a      	add	sl, r1
900064f2:	e7da      	b.n	900064aa <EwWarpIndex8RowBlend+0x18>
900064f4:	2c00      	cmp	r4, #0
900064f6:	d0f6      	beq.n	900064e6 <EwWarpIndex8RowBlend+0x54>
900064f8:	f1c4 05ff 	rsb	r5, r4, #255	; 0xff
900064fc:	f00c 19ff 	and.w	r9, ip, #16711935	; 0xff00ff
90006500:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90006504:	fb00 5505 	mla	r5, r0, r5, r5
90006508:	f001 10ff 	and.w	r0, r1, #16711935	; 0xff00ff
9000650c:	f3c1 2107 	ubfx	r1, r1, #8, #8
90006510:	0a2d      	lsrs	r5, r5, #8
90006512:	fb04 0000 	mla	r0, r4, r0, r0
90006516:	fb04 1101 	mla	r1, r4, r1, r1
9000651a:	442c      	add	r4, r5
9000651c:	fb05 0009 	mla	r0, r5, r9, r0
90006520:	fb05 1c0c 	mla	ip, r5, ip, r1
90006524:	2cfe      	cmp	r4, #254	; 0xfe
90006526:	ea4f 2010 	mov.w	r0, r0, lsr #8
9000652a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9000652e:	d80c      	bhi.n	9000654a <EwWarpIndex8RowBlend+0xb8>
90006530:	f838 b014 	ldrh.w	fp, [r8, r4, lsl #1]
90006534:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90006538:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9000653c:	fb0b f000 	mul.w	r0, fp, r0
90006540:	fb0b fc0c 	mul.w	ip, fp, ip
90006544:	0a00      	lsrs	r0, r0, #8
90006546:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9000654a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9000654e:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
90006552:	ea40 6404 	orr.w	r4, r0, r4, lsl #24
90006556:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
9000655a:	ea44 040c 	orr.w	r4, r4, ip
9000655e:	6034      	str	r4, [r6, #0]
90006560:	e7c1      	b.n	900064e6 <EwWarpIndex8RowBlend+0x54>
90006562:	bf00      	nop
90006564:	9002fa7c 	.word	0x9002fa7c

90006568 <EwWarpIndex8RowFilterBlend>:
90006568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000656c:	461e      	mov	r6, r3
9000656e:	b085      	sub	sp, #20
90006570:	680b      	ldr	r3, [r1, #0]
90006572:	6805      	ldr	r5, [r0, #0]
90006574:	9301      	str	r3, [sp, #4]
90006576:	688b      	ldr	r3, [r1, #8]
90006578:	698f      	ldr	r7, [r1, #24]
9000657a:	9302      	str	r3, [sp, #8]
9000657c:	3301      	adds	r3, #1
9000657e:	9200      	str	r2, [sp, #0]
90006580:	9303      	str	r3, [sp, #12]
90006582:	9b00      	ldr	r3, [sp, #0]
90006584:	2b00      	cmp	r3, #0
90006586:	dc02      	bgt.n	9000658e <EwWarpIndex8RowFilterBlend+0x26>
90006588:	b005      	add	sp, #20
9000658a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000658e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90006590:	1331      	asrs	r1, r6, #12
90006592:	9c02      	ldr	r4, [sp, #8]
90006594:	4359      	muls	r1, r3
90006596:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90006598:	1318      	asrs	r0, r3, #12
9000659a:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000659c:	1309      	asrs	r1, r1, #12
9000659e:	4358      	muls	r0, r3
900065a0:	3908      	subs	r1, #8
900065a2:	1300      	asrs	r0, r0, #12
900065a4:	110a      	asrs	r2, r1, #4
900065a6:	f001 010f 	and.w	r1, r1, #15
900065aa:	3808      	subs	r0, #8
900065ac:	f1c1 0e10 	rsb	lr, r1, #16
900065b0:	1103      	asrs	r3, r0, #4
900065b2:	f000 000f 	and.w	r0, r0, #15
900065b6:	f1c0 0810 	rsb	r8, r0, #16
900065ba:	fb04 2203 	mla	r2, r4, r3, r2
900065be:	fb00 fe0e 	mul.w	lr, r0, lr
900065c2:	9b01      	ldr	r3, [sp, #4]
900065c4:	fb01 f808 	mul.w	r8, r1, r8
900065c8:	9c03      	ldr	r4, [sp, #12]
900065ca:	4341      	muls	r1, r0
900065cc:	9801      	ldr	r0, [sp, #4]
900065ce:	4413      	add	r3, r2
900065d0:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
900065d4:	5c82      	ldrb	r2, [r0, r2]
900065d6:	ebac 0c0e 	sub.w	ip, ip, lr
900065da:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
900065de:	785a      	ldrb	r2, [r3, #1]
900065e0:	ebac 0c01 	sub.w	ip, ip, r1
900065e4:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
900065e8:	9a03      	ldr	r2, [sp, #12]
900065ea:	189a      	adds	r2, r3, r2
900065ec:	5d1b      	ldrb	r3, [r3, r4]
900065ee:	f812 2c01 	ldrb.w	r2, [r2, #-1]
900065f2:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
900065f6:	f857 9022 	ldr.w	r9, [r7, r2, lsl #2]
900065fa:	ea4f 221a 	mov.w	r2, sl, lsr #8
900065fe:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90006602:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90006606:	0a02      	lsrs	r2, r0, #8
90006608:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
9000660c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006610:	fb08 f000 	mul.w	r0, r8, r0
90006614:	fb08 f202 	mul.w	r2, r8, r2
90006618:	fb0c 000a 	mla	r0, ip, sl, r0
9000661c:	fb0c 220b 	mla	r2, ip, fp, r2
90006620:	ea4f 2b13 	mov.w	fp, r3, lsr #8
90006624:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90006628:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9000662c:	fb01 0003 	mla	r0, r1, r3, r0
90006630:	fb01 220b 	mla	r2, r1, fp, r2
90006634:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90006638:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
9000663c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90006640:	fb0e 0309 	mla	r3, lr, r9, r0
90006644:	fb0e 220b 	mla	r2, lr, fp, r2
90006648:	0a1b      	lsrs	r3, r3, #8
9000664a:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
9000664e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90006652:	4313      	orrs	r3, r2
90006654:	0e12      	lsrs	r2, r2, #24
90006656:	2aff      	cmp	r2, #255	; 0xff
90006658:	d003      	beq.n	90006662 <EwWarpIndex8RowFilterBlend+0xfa>
9000665a:	6828      	ldr	r0, [r5, #0]
9000665c:	0e01      	lsrs	r1, r0, #24
9000665e:	d10c      	bne.n	9000667a <EwWarpIndex8RowFilterBlend+0x112>
90006660:	b102      	cbz	r2, 90006664 <EwWarpIndex8RowFilterBlend+0xfc>
90006662:	602b      	str	r3, [r5, #0]
90006664:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90006666:	3504      	adds	r5, #4
90006668:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000666a:	441e      	add	r6, r3
9000666c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000666e:	4413      	add	r3, r2
90006670:	930e      	str	r3, [sp, #56]	; 0x38
90006672:	9b00      	ldr	r3, [sp, #0]
90006674:	3b01      	subs	r3, #1
90006676:	9300      	str	r3, [sp, #0]
90006678:	e783      	b.n	90006582 <EwWarpIndex8RowFilterBlend+0x1a>
9000667a:	2a00      	cmp	r2, #0
9000667c:	d0f2      	beq.n	90006664 <EwWarpIndex8RowFilterBlend+0xfc>
9000667e:	f1c2 0bff 	rsb	fp, r2, #255	; 0xff
90006682:	f000 1cff 	and.w	ip, r0, #16711935	; 0xff00ff
90006686:	f3c0 2007 	ubfx	r0, r0, #8, #8
9000668a:	fb01 bb0b 	mla	fp, r1, fp, fp
9000668e:	f003 11ff 	and.w	r1, r3, #16711935	; 0xff00ff
90006692:	f3c3 2307 	ubfx	r3, r3, #8, #8
90006696:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
9000669a:	fb02 1101 	mla	r1, r2, r1, r1
9000669e:	fb02 3303 	mla	r3, r2, r3, r3
900066a2:	445a      	add	r2, fp
900066a4:	fb0b 110c 	mla	r1, fp, ip, r1
900066a8:	fb0b 3000 	mla	r0, fp, r0, r3
900066ac:	2afe      	cmp	r2, #254	; 0xfe
900066ae:	ea4f 2111 	mov.w	r1, r1, lsr #8
900066b2:	ea4f 2010 	mov.w	r0, r0, lsr #8
900066b6:	d80c      	bhi.n	900066d2 <EwWarpIndex8RowFilterBlend+0x16a>
900066b8:	4b0b      	ldr	r3, [pc, #44]	; (900066e8 <EwWarpIndex8RowFilterBlend+0x180>)
900066ba:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900066be:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900066c2:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
900066c6:	fb0e f101 	mul.w	r1, lr, r1
900066ca:	fb0e f000 	mul.w	r0, lr, r0
900066ce:	0a09      	lsrs	r1, r1, #8
900066d0:	0a00      	lsrs	r0, r0, #8
900066d2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900066d6:	0200      	lsls	r0, r0, #8
900066d8:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
900066dc:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
900066e0:	4302      	orrs	r2, r0
900066e2:	602a      	str	r2, [r5, #0]
900066e4:	e7be      	b.n	90006664 <EwWarpIndex8RowFilterBlend+0xfc>
900066e6:	bf00      	nop
900066e8:	9002fa7c 	.word	0x9002fa7c

900066ec <EwWarpIndex8RowGradient>:
900066ec:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900066f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
900066f2:	460d      	mov	r5, r1
900066f4:	6806      	ldr	r6, [r0, #0]
900066f6:	6b27      	ldr	r7, [r4, #48]	; 0x30
900066f8:	6809      	ldr	r1, [r1, #0]
900066fa:	153f      	asrs	r7, r7, #20
900066fc:	6d20      	ldr	r0, [r4, #80]	; 0x50
900066fe:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90006702:	f8d5 b018 	ldr.w	fp, [r5, #24]
90006706:	3701      	adds	r7, #1
90006708:	f8d5 a008 	ldr.w	sl, [r5, #8]
9000670c:	9101      	str	r1, [sp, #4]
9000670e:	b948      	cbnz	r0, 90006724 <EwWarpIndex8RowGradient+0x38>
90006710:	6d60      	ldr	r0, [r4, #84]	; 0x54
90006712:	fab0 f080 	clz	r0, r0
90006716:	0940      	lsrs	r0, r0, #5
90006718:	4611      	mov	r1, r2
9000671a:	2900      	cmp	r1, #0
9000671c:	dc04      	bgt.n	90006728 <EwWarpIndex8RowGradient+0x3c>
9000671e:	b003      	add	sp, #12
90006720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006724:	2000      	movs	r0, #0
90006726:	e7f7      	b.n	90006718 <EwWarpIndex8RowGradient+0x2c>
90006728:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9000672a:	131a      	asrs	r2, r3, #12
9000672c:	ea4f 3829 	mov.w	r8, r9, asr #12
90006730:	436a      	muls	r2, r5
90006732:	9d10      	ldr	r5, [sp, #64]	; 0x40
90006734:	fb05 f808 	mul.w	r8, r5, r8
90006738:	9d01      	ldr	r5, [sp, #4]
9000673a:	ea4f 4c22 	mov.w	ip, r2, asr #16
9000673e:	ea4f 4828 	mov.w	r8, r8, asr #16
90006742:	eb05 4222 	add.w	r2, r5, r2, asr #16
90006746:	fb08 fe0a 	mul.w	lr, r8, sl
9000674a:	f812 200e 	ldrb.w	r2, [r2, lr]
9000674e:	f85b 5022 	ldr.w	r5, [fp, r2, lsl #2]
90006752:	bb20      	cbnz	r0, 9000679e <EwWarpIndex8RowGradient+0xb2>
90006754:	6d27      	ldr	r7, [r4, #80]	; 0x50
90006756:	6b22      	ldr	r2, [r4, #48]	; 0x30
90006758:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
9000675c:	b16f      	cbz	r7, 9000677a <EwWarpIndex8RowGradient+0x8e>
9000675e:	f1b8 0f00 	cmp.w	r8, #0
90006762:	d002      	beq.n	9000676a <EwWarpIndex8RowGradient+0x7e>
90006764:	6b67      	ldr	r7, [r4, #52]	; 0x34
90006766:	fb07 2208 	mla	r2, r7, r8, r2
9000676a:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000676c:	b12f      	cbz	r7, 9000677a <EwWarpIndex8RowGradient+0x8e>
9000676e:	f1b8 0f00 	cmp.w	r8, #0
90006772:	d002      	beq.n	9000677a <EwWarpIndex8RowGradient+0x8e>
90006774:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90006776:	fb07 ee08 	mla	lr, r7, r8, lr
9000677a:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000677c:	b167      	cbz	r7, 90006798 <EwWarpIndex8RowGradient+0xac>
9000677e:	f1bc 0f00 	cmp.w	ip, #0
90006782:	d009      	beq.n	90006798 <EwWarpIndex8RowGradient+0xac>
90006784:	1517      	asrs	r7, r2, #20
90006786:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
9000678a:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
9000678e:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90006790:	fb07 fe0e 	mul.w	lr, r7, lr
90006794:	fb0c 220e 	mla	r2, ip, lr, r2
90006798:	f3c2 5207 	ubfx	r2, r2, #20, #8
9000679c:	1c57      	adds	r7, r2, #1
9000679e:	0e2a      	lsrs	r2, r5, #24
900067a0:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
900067a4:	3901      	subs	r1, #1
900067a6:	437a      	muls	r2, r7
900067a8:	0a12      	lsrs	r2, r2, #8
900067aa:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
900067ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900067b0:	4413      	add	r3, r2
900067b2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900067b4:	f846 5b04 	str.w	r5, [r6], #4
900067b8:	4491      	add	r9, r2
900067ba:	e7ae      	b.n	9000671a <EwWarpIndex8RowGradient+0x2e>

900067bc <EwWarpIndex8RowFilterGradient>:
900067bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900067c0:	b087      	sub	sp, #28
900067c2:	f8d1 8018 	ldr.w	r8, [r1, #24]
900067c6:	9301      	str	r3, [sp, #4]
900067c8:	6803      	ldr	r3, [r0, #0]
900067ca:	9c15      	ldr	r4, [sp, #84]	; 0x54
900067cc:	9302      	str	r3, [sp, #8]
900067ce:	680b      	ldr	r3, [r1, #0]
900067d0:	9303      	str	r3, [sp, #12]
900067d2:	688b      	ldr	r3, [r1, #8]
900067d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
900067d6:	9304      	str	r3, [sp, #16]
900067d8:	1509      	asrs	r1, r1, #20
900067da:	6d23      	ldr	r3, [r4, #80]	; 0x50
900067dc:	3101      	adds	r1, #1
900067de:	b96b      	cbnz	r3, 900067fc <EwWarpIndex8RowFilterGradient+0x40>
900067e0:	6d66      	ldr	r6, [r4, #84]	; 0x54
900067e2:	fab6 f686 	clz	r6, r6
900067e6:	0976      	lsrs	r6, r6, #5
900067e8:	9b04      	ldr	r3, [sp, #16]
900067ea:	9200      	str	r2, [sp, #0]
900067ec:	3301      	adds	r3, #1
900067ee:	9305      	str	r3, [sp, #20]
900067f0:	9b00      	ldr	r3, [sp, #0]
900067f2:	2b00      	cmp	r3, #0
900067f4:	dc04      	bgt.n	90006800 <EwWarpIndex8RowFilterGradient+0x44>
900067f6:	b007      	add	sp, #28
900067f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900067fc:	2600      	movs	r6, #0
900067fe:	e7f3      	b.n	900067e8 <EwWarpIndex8RowFilterGradient+0x2c>
90006800:	9b01      	ldr	r3, [sp, #4]
90006802:	9a10      	ldr	r2, [sp, #64]	; 0x40
90006804:	131d      	asrs	r5, r3, #12
90006806:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90006808:	ea4f 3c22 	mov.w	ip, r2, asr #12
9000680c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9000680e:	435d      	muls	r5, r3
90006810:	fb02 fc0c 	mul.w	ip, r2, ip
90006814:	ea4f 3e25 	mov.w	lr, r5, asr #12
90006818:	ea4f 322c 	mov.w	r2, ip, asr #12
9000681c:	b9fe      	cbnz	r6, 9000685e <EwWarpIndex8RowFilterGradient+0xa2>
9000681e:	6d20      	ldr	r0, [r4, #80]	; 0x50
90006820:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006822:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90006824:	b158      	cbz	r0, 9000683e <EwWarpIndex8RowFilterGradient+0x82>
90006826:	ea5f 402c 	movs.w	r0, ip, asr #16
9000682a:	d002      	beq.n	90006832 <EwWarpIndex8RowFilterGradient+0x76>
9000682c:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000682e:	fb03 1100 	mla	r1, r3, r0, r1
90006832:	6d63      	ldr	r3, [r4, #84]	; 0x54
90006834:	b11b      	cbz	r3, 9000683e <EwWarpIndex8RowFilterGradient+0x82>
90006836:	b110      	cbz	r0, 9000683e <EwWarpIndex8RowFilterGradient+0x82>
90006838:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000683a:	fb03 7700 	mla	r7, r3, r0, r7
9000683e:	6d60      	ldr	r0, [r4, #84]	; 0x54
90006840:	b150      	cbz	r0, 90006858 <EwWarpIndex8RowFilterGradient+0x9c>
90006842:	142d      	asrs	r5, r5, #16
90006844:	d008      	beq.n	90006858 <EwWarpIndex8RowFilterGradient+0x9c>
90006846:	1508      	asrs	r0, r1, #20
90006848:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9000684c:	ebc0 5727 	rsb	r7, r0, r7, asr #20
90006850:	6ca0      	ldr	r0, [r4, #72]	; 0x48
90006852:	4347      	muls	r7, r0
90006854:	fb05 1107 	mla	r1, r5, r7, r1
90006858:	f3c1 5107 	ubfx	r1, r1, #20, #8
9000685c:	3101      	adds	r1, #1
9000685e:	f1ae 0008 	sub.w	r0, lr, #8
90006862:	3a08      	subs	r2, #8
90006864:	9f04      	ldr	r7, [sp, #16]
90006866:	1113      	asrs	r3, r2, #4
90006868:	f002 020f 	and.w	r2, r2, #15
9000686c:	1105      	asrs	r5, r0, #4
9000686e:	f000 000f 	and.w	r0, r0, #15
90006872:	f1c2 0e10 	rsb	lr, r2, #16
90006876:	fb07 5503 	mla	r5, r7, r3, r5
9000687a:	9b03      	ldr	r3, [sp, #12]
9000687c:	f1c0 0c10 	rsb	ip, r0, #16
90006880:	fb00 fe0e 	mul.w	lr, r0, lr
90006884:	195f      	adds	r7, r3, r5
90006886:	5d5b      	ldrb	r3, [r3, r5]
90006888:	fb02 fc0c 	mul.w	ip, r2, ip
9000688c:	f858 a023 	ldr.w	sl, [r8, r3, lsl #2]
90006890:	4350      	muls	r0, r2
90006892:	787b      	ldrb	r3, [r7, #1]
90006894:	9a05      	ldr	r2, [sp, #20]
90006896:	f858 5023 	ldr.w	r5, [r8, r3, lsl #2]
9000689a:	9b05      	ldr	r3, [sp, #20]
9000689c:	5cba      	ldrb	r2, [r7, r2]
9000689e:	18fb      	adds	r3, r7, r3
900068a0:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
900068a4:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
900068a8:	f813 3c01 	ldrb.w	r3, [r3, #-1]
900068ac:	eba7 070c 	sub.w	r7, r7, ip
900068b0:	f858 9023 	ldr.w	r9, [r8, r3, lsl #2]
900068b4:	ea4f 231a 	mov.w	r3, sl, lsr #8
900068b8:	1a3f      	subs	r7, r7, r0
900068ba:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
900068be:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
900068c2:	0a2b      	lsrs	r3, r5, #8
900068c4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900068c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900068cc:	fb0e f505 	mul.w	r5, lr, r5
900068d0:	fb0e f303 	mul.w	r3, lr, r3
900068d4:	fb07 550a 	mla	r5, r7, sl, r5
900068d8:	fb07 330b 	mla	r3, r7, fp, r3
900068dc:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900068e0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900068e4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900068e8:	fb00 5502 	mla	r5, r0, r2, r5
900068ec:	fb00 330b 	mla	r3, r0, fp, r3
900068f0:	ea4f 2b19 	mov.w	fp, r9, lsr #8
900068f4:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
900068f8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900068fc:	fb0c 5209 	mla	r2, ip, r9, r5
90006900:	fb0c 330b 	mla	r3, ip, fp, r3
90006904:	0a12      	lsrs	r2, r2, #8
90006906:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
9000690a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9000690e:	431a      	orrs	r2, r3
90006910:	0e1b      	lsrs	r3, r3, #24
90006912:	434b      	muls	r3, r1
90006914:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
90006918:	0a1b      	lsrs	r3, r3, #8
9000691a:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
9000691e:	9b02      	ldr	r3, [sp, #8]
90006920:	f843 2b04 	str.w	r2, [r3], #4
90006924:	9a11      	ldr	r2, [sp, #68]	; 0x44
90006926:	9302      	str	r3, [sp, #8]
90006928:	9b01      	ldr	r3, [sp, #4]
9000692a:	4413      	add	r3, r2
9000692c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9000692e:	9301      	str	r3, [sp, #4]
90006930:	9b10      	ldr	r3, [sp, #64]	; 0x40
90006932:	4413      	add	r3, r2
90006934:	9310      	str	r3, [sp, #64]	; 0x40
90006936:	9b00      	ldr	r3, [sp, #0]
90006938:	3b01      	subs	r3, #1
9000693a:	9300      	str	r3, [sp, #0]
9000693c:	e758      	b.n	900067f0 <EwWarpIndex8RowFilterGradient+0x34>

9000693e <EwWarpIndex8RowGradientBlend>:
9000693e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006942:	6806      	ldr	r6, [r0, #0]
90006944:	b085      	sub	sp, #20
90006946:	6808      	ldr	r0, [r1, #0]
90006948:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9000694a:	9001      	str	r0, [sp, #4]
9000694c:	6988      	ldr	r0, [r1, #24]
9000694e:	6889      	ldr	r1, [r1, #8]
90006950:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
90006954:	9103      	str	r1, [sp, #12]
90006956:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006958:	9300      	str	r3, [sp, #0]
9000695a:	1509      	asrs	r1, r1, #20
9000695c:	9002      	str	r0, [sp, #8]
9000695e:	f101 0e01 	add.w	lr, r1, #1
90006962:	6d21      	ldr	r1, [r4, #80]	; 0x50
90006964:	b959      	cbnz	r1, 9000697e <EwWarpIndex8RowGradientBlend+0x40>
90006966:	6d65      	ldr	r5, [r4, #84]	; 0x54
90006968:	fab5 f585 	clz	r5, r5
9000696c:	096d      	lsrs	r5, r5, #5
9000696e:	4610      	mov	r0, r2
90006970:	f8df 910c 	ldr.w	r9, [pc, #268]	; 90006a80 <EwWarpIndex8RowGradientBlend+0x142>
90006974:	2800      	cmp	r0, #0
90006976:	dc04      	bgt.n	90006982 <EwWarpIndex8RowGradientBlend+0x44>
90006978:	b005      	add	sp, #20
9000697a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000697e:	2500      	movs	r5, #0
90006980:	e7f5      	b.n	9000696e <EwWarpIndex8RowGradientBlend+0x30>
90006982:	9b00      	ldr	r3, [sp, #0]
90006984:	ea4f 382a 	mov.w	r8, sl, asr #12
90006988:	9911      	ldr	r1, [sp, #68]	; 0x44
9000698a:	131a      	asrs	r2, r3, #12
9000698c:	9b01      	ldr	r3, [sp, #4]
9000698e:	434a      	muls	r2, r1
90006990:	9912      	ldr	r1, [sp, #72]	; 0x48
90006992:	fb01 f808 	mul.w	r8, r1, r8
90006996:	9903      	ldr	r1, [sp, #12]
90006998:	ea4f 4c22 	mov.w	ip, r2, asr #16
9000699c:	ea4f 4728 	mov.w	r7, r8, asr #16
900069a0:	eb03 4222 	add.w	r2, r3, r2, asr #16
900069a4:	9b02      	ldr	r3, [sp, #8]
900069a6:	4379      	muls	r1, r7
900069a8:	5c52      	ldrb	r2, [r2, r1]
900069aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
900069ae:	bb0d      	cbnz	r5, 900069f4 <EwWarpIndex8RowGradientBlend+0xb6>
900069b0:	6d23      	ldr	r3, [r4, #80]	; 0x50
900069b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
900069b4:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
900069b8:	b14b      	cbz	r3, 900069ce <EwWarpIndex8RowGradientBlend+0x90>
900069ba:	b117      	cbz	r7, 900069c2 <EwWarpIndex8RowGradientBlend+0x84>
900069bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
900069be:	fb03 1107 	mla	r1, r3, r7, r1
900069c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
900069c4:	b11b      	cbz	r3, 900069ce <EwWarpIndex8RowGradientBlend+0x90>
900069c6:	b117      	cbz	r7, 900069ce <EwWarpIndex8RowGradientBlend+0x90>
900069c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
900069ca:	fb03 ee07 	mla	lr, r3, r7, lr
900069ce:	6d67      	ldr	r7, [r4, #84]	; 0x54
900069d0:	b167      	cbz	r7, 900069ec <EwWarpIndex8RowGradientBlend+0xae>
900069d2:	f1bc 0f00 	cmp.w	ip, #0
900069d6:	d009      	beq.n	900069ec <EwWarpIndex8RowGradientBlend+0xae>
900069d8:	150f      	asrs	r7, r1, #20
900069da:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
900069de:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
900069e2:	6ca7      	ldr	r7, [r4, #72]	; 0x48
900069e4:	fb07 fe0e 	mul.w	lr, r7, lr
900069e8:	fb0c 110e 	mla	r1, ip, lr, r1
900069ec:	f3c1 5107 	ubfx	r1, r1, #20, #8
900069f0:	f101 0e01 	add.w	lr, r1, #1
900069f4:	0e11      	lsrs	r1, r2, #24
900069f6:	d039      	beq.n	90006a6c <EwWarpIndex8RowGradientBlend+0x12e>
900069f8:	f8d6 8000 	ldr.w	r8, [r6]
900069fc:	fb01 e10e 	mla	r1, r1, lr, lr
90006a00:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
90006a04:	f3c2 2207 	ubfx	r2, r2, #8, #8
90006a08:	0a09      	lsrs	r1, r1, #8
90006a0a:	ea5f 6b18 	movs.w	fp, r8, lsr #24
90006a0e:	fb01 f707 	mul.w	r7, r1, r7
90006a12:	fb01 f202 	mul.w	r2, r1, r2
90006a16:	d00e      	beq.n	90006a36 <EwWarpIndex8RowGradientBlend+0xf8>
90006a18:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90006a1c:	fb0b cc0c 	mla	ip, fp, ip, ip
90006a20:	f008 1bff 	and.w	fp, r8, #16711935	; 0xff00ff
90006a24:	f3c8 2807 	ubfx	r8, r8, #8, #8
90006a28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90006a2c:	fb0c 770b 	mla	r7, ip, fp, r7
90006a30:	4461      	add	r1, ip
90006a32:	fb0c 2208 	mla	r2, ip, r8, r2
90006a36:	0a3f      	lsrs	r7, r7, #8
90006a38:	0a12      	lsrs	r2, r2, #8
90006a3a:	b171      	cbz	r1, 90006a5a <EwWarpIndex8RowGradientBlend+0x11c>
90006a3c:	3901      	subs	r1, #1
90006a3e:	29fe      	cmp	r1, #254	; 0xfe
90006a40:	d80b      	bhi.n	90006a5a <EwWarpIndex8RowGradientBlend+0x11c>
90006a42:	f839 c011 	ldrh.w	ip, [r9, r1, lsl #1]
90006a46:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90006a4a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006a4e:	fb0c f707 	mul.w	r7, ip, r7
90006a52:	fb0c f202 	mul.w	r2, ip, r2
90006a56:	0a3f      	lsrs	r7, r7, #8
90006a58:	0a12      	lsrs	r2, r2, #8
90006a5a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90006a5e:	0212      	lsls	r2, r2, #8
90006a60:	ea47 6701 	orr.w	r7, r7, r1, lsl #24
90006a64:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90006a68:	4317      	orrs	r7, r2
90006a6a:	6037      	str	r7, [r6, #0]
90006a6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90006a6e:	3604      	adds	r6, #4
90006a70:	9a00      	ldr	r2, [sp, #0]
90006a72:	3801      	subs	r0, #1
90006a74:	441a      	add	r2, r3
90006a76:	9b10      	ldr	r3, [sp, #64]	; 0x40
90006a78:	9200      	str	r2, [sp, #0]
90006a7a:	449a      	add	sl, r3
90006a7c:	e77a      	b.n	90006974 <EwWarpIndex8RowGradientBlend+0x36>
90006a7e:	bf00      	nop
90006a80:	9002fa7c 	.word	0x9002fa7c

90006a84 <EwWarpIndex8RowFilterGradientBlend>:
90006a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006a88:	b087      	sub	sp, #28
90006a8a:	f8d1 8018 	ldr.w	r8, [r1, #24]
90006a8e:	9302      	str	r3, [sp, #8]
90006a90:	6803      	ldr	r3, [r0, #0]
90006a92:	9c15      	ldr	r4, [sp, #84]	; 0x54
90006a94:	9300      	str	r3, [sp, #0]
90006a96:	680b      	ldr	r3, [r1, #0]
90006a98:	9303      	str	r3, [sp, #12]
90006a9a:	688b      	ldr	r3, [r1, #8]
90006a9c:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006a9e:	9304      	str	r3, [sp, #16]
90006aa0:	1509      	asrs	r1, r1, #20
90006aa2:	6d23      	ldr	r3, [r4, #80]	; 0x50
90006aa4:	3101      	adds	r1, #1
90006aa6:	b96b      	cbnz	r3, 90006ac4 <EwWarpIndex8RowFilterGradientBlend+0x40>
90006aa8:	6d66      	ldr	r6, [r4, #84]	; 0x54
90006aaa:	fab6 f686 	clz	r6, r6
90006aae:	0976      	lsrs	r6, r6, #5
90006ab0:	9b04      	ldr	r3, [sp, #16]
90006ab2:	9201      	str	r2, [sp, #4]
90006ab4:	3301      	adds	r3, #1
90006ab6:	9305      	str	r3, [sp, #20]
90006ab8:	9b01      	ldr	r3, [sp, #4]
90006aba:	2b00      	cmp	r3, #0
90006abc:	dc04      	bgt.n	90006ac8 <EwWarpIndex8RowFilterGradientBlend+0x44>
90006abe:	b007      	add	sp, #28
90006ac0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006ac4:	2600      	movs	r6, #0
90006ac6:	e7f3      	b.n	90006ab0 <EwWarpIndex8RowFilterGradientBlend+0x2c>
90006ac8:	9b02      	ldr	r3, [sp, #8]
90006aca:	9a10      	ldr	r2, [sp, #64]	; 0x40
90006acc:	131d      	asrs	r5, r3, #12
90006ace:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90006ad0:	ea4f 3c22 	mov.w	ip, r2, asr #12
90006ad4:	9a14      	ldr	r2, [sp, #80]	; 0x50
90006ad6:	435d      	muls	r5, r3
90006ad8:	fb02 fc0c 	mul.w	ip, r2, ip
90006adc:	ea4f 3e25 	mov.w	lr, r5, asr #12
90006ae0:	ea4f 322c 	mov.w	r2, ip, asr #12
90006ae4:	b9fe      	cbnz	r6, 90006b26 <EwWarpIndex8RowFilterGradientBlend+0xa2>
90006ae6:	6d20      	ldr	r0, [r4, #80]	; 0x50
90006ae8:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006aea:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90006aec:	b158      	cbz	r0, 90006b06 <EwWarpIndex8RowFilterGradientBlend+0x82>
90006aee:	ea5f 402c 	movs.w	r0, ip, asr #16
90006af2:	d002      	beq.n	90006afa <EwWarpIndex8RowFilterGradientBlend+0x76>
90006af4:	6b63      	ldr	r3, [r4, #52]	; 0x34
90006af6:	fb03 1100 	mla	r1, r3, r0, r1
90006afa:	6d63      	ldr	r3, [r4, #84]	; 0x54
90006afc:	b11b      	cbz	r3, 90006b06 <EwWarpIndex8RowFilterGradientBlend+0x82>
90006afe:	b110      	cbz	r0, 90006b06 <EwWarpIndex8RowFilterGradientBlend+0x82>
90006b00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90006b02:	fb03 7700 	mla	r7, r3, r0, r7
90006b06:	6d60      	ldr	r0, [r4, #84]	; 0x54
90006b08:	b150      	cbz	r0, 90006b20 <EwWarpIndex8RowFilterGradientBlend+0x9c>
90006b0a:	142d      	asrs	r5, r5, #16
90006b0c:	d008      	beq.n	90006b20 <EwWarpIndex8RowFilterGradientBlend+0x9c>
90006b0e:	1508      	asrs	r0, r1, #20
90006b10:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90006b14:	ebc0 5727 	rsb	r7, r0, r7, asr #20
90006b18:	6ca0      	ldr	r0, [r4, #72]	; 0x48
90006b1a:	4347      	muls	r7, r0
90006b1c:	fb05 1107 	mla	r1, r5, r7, r1
90006b20:	f3c1 5107 	ubfx	r1, r1, #20, #8
90006b24:	3101      	adds	r1, #1
90006b26:	f1ae 0008 	sub.w	r0, lr, #8
90006b2a:	3a08      	subs	r2, #8
90006b2c:	9f04      	ldr	r7, [sp, #16]
90006b2e:	1113      	asrs	r3, r2, #4
90006b30:	f002 020f 	and.w	r2, r2, #15
90006b34:	1105      	asrs	r5, r0, #4
90006b36:	f000 000f 	and.w	r0, r0, #15
90006b3a:	f1c2 0e10 	rsb	lr, r2, #16
90006b3e:	fb07 5503 	mla	r5, r7, r3, r5
90006b42:	9b03      	ldr	r3, [sp, #12]
90006b44:	f1c0 0c10 	rsb	ip, r0, #16
90006b48:	fb00 fe0e 	mul.w	lr, r0, lr
90006b4c:	195f      	adds	r7, r3, r5
90006b4e:	5d5b      	ldrb	r3, [r3, r5]
90006b50:	fb02 fc0c 	mul.w	ip, r2, ip
90006b54:	f858 a023 	ldr.w	sl, [r8, r3, lsl #2]
90006b58:	4350      	muls	r0, r2
90006b5a:	787b      	ldrb	r3, [r7, #1]
90006b5c:	f858 5023 	ldr.w	r5, [r8, r3, lsl #2]
90006b60:	9b05      	ldr	r3, [sp, #20]
90006b62:	18fa      	adds	r2, r7, r3
90006b64:	5cfb      	ldrb	r3, [r7, r3]
90006b66:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
90006b6a:	f812 2c01 	ldrb.w	r2, [r2, #-1]
90006b6e:	eba7 070c 	sub.w	r7, r7, ip
90006b72:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90006b76:	f858 9022 	ldr.w	r9, [r8, r2, lsl #2]
90006b7a:	ea4f 221a 	mov.w	r2, sl, lsr #8
90006b7e:	1a3f      	subs	r7, r7, r0
90006b80:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90006b84:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
90006b88:	0a2a      	lsrs	r2, r5, #8
90006b8a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90006b8e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90006b92:	fb0e f505 	mul.w	r5, lr, r5
90006b96:	fb0e f202 	mul.w	r2, lr, r2
90006b9a:	fb07 550a 	mla	r5, r7, sl, r5
90006b9e:	fb07 220b 	mla	r2, r7, fp, r2
90006ba2:	ea4f 2b13 	mov.w	fp, r3, lsr #8
90006ba6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90006baa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90006bae:	fb00 5503 	mla	r5, r0, r3, r5
90006bb2:	fb00 220b 	mla	r2, r0, fp, r2
90006bb6:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90006bba:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90006bbe:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90006bc2:	fb0c 5309 	mla	r3, ip, r9, r5
90006bc6:	fb0c 220b 	mla	r2, ip, fp, r2
90006bca:	0a1b      	lsrs	r3, r3, #8
90006bcc:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90006bd0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90006bd4:	4313      	orrs	r3, r2
90006bd6:	0e12      	lsrs	r2, r2, #24
90006bd8:	d038      	beq.n	90006c4c <EwWarpIndex8RowFilterGradientBlend+0x1c8>
90006bda:	9800      	ldr	r0, [sp, #0]
90006bdc:	fb02 1201 	mla	r2, r2, r1, r1
90006be0:	6807      	ldr	r7, [r0, #0]
90006be2:	0a12      	lsrs	r2, r2, #8
90006be4:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
90006be8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90006bec:	ea5f 6c17 	movs.w	ip, r7, lsr #24
90006bf0:	fb02 f000 	mul.w	r0, r2, r0
90006bf4:	fb02 f303 	mul.w	r3, r2, r3
90006bf8:	d00d      	beq.n	90006c16 <EwWarpIndex8RowFilterGradientBlend+0x192>
90006bfa:	f5c2 7580 	rsb	r5, r2, #256	; 0x100
90006bfe:	fb0c 5505 	mla	r5, ip, r5, r5
90006c02:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
90006c06:	f3c7 2707 	ubfx	r7, r7, #8, #8
90006c0a:	0a2d      	lsrs	r5, r5, #8
90006c0c:	fb05 000c 	mla	r0, r5, ip, r0
90006c10:	442a      	add	r2, r5
90006c12:	fb05 3307 	mla	r3, r5, r7, r3
90006c16:	0a00      	lsrs	r0, r0, #8
90006c18:	0a1b      	lsrs	r3, r3, #8
90006c1a:	b16a      	cbz	r2, 90006c38 <EwWarpIndex8RowFilterGradientBlend+0x1b4>
90006c1c:	3a01      	subs	r2, #1
90006c1e:	2afe      	cmp	r2, #254	; 0xfe
90006c20:	d80a      	bhi.n	90006c38 <EwWarpIndex8RowFilterGradientBlend+0x1b4>
90006c22:	4d12      	ldr	r5, [pc, #72]	; (90006c6c <EwWarpIndex8RowFilterGradientBlend+0x1e8>)
90006c24:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90006c28:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90006c2c:	f835 5012 	ldrh.w	r5, [r5, r2, lsl #1]
90006c30:	4368      	muls	r0, r5
90006c32:	436b      	muls	r3, r5
90006c34:	0a00      	lsrs	r0, r0, #8
90006c36:	0a1b      	lsrs	r3, r3, #8
90006c38:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90006c3c:	021b      	lsls	r3, r3, #8
90006c3e:	ea40 6002 	orr.w	r0, r0, r2, lsl #24
90006c42:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90006c46:	4318      	orrs	r0, r3
90006c48:	9b00      	ldr	r3, [sp, #0]
90006c4a:	6018      	str	r0, [r3, #0]
90006c4c:	9b02      	ldr	r3, [sp, #8]
90006c4e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90006c50:	4413      	add	r3, r2
90006c52:	9a12      	ldr	r2, [sp, #72]	; 0x48
90006c54:	9302      	str	r3, [sp, #8]
90006c56:	9b10      	ldr	r3, [sp, #64]	; 0x40
90006c58:	4413      	add	r3, r2
90006c5a:	9310      	str	r3, [sp, #64]	; 0x40
90006c5c:	9b00      	ldr	r3, [sp, #0]
90006c5e:	3304      	adds	r3, #4
90006c60:	9300      	str	r3, [sp, #0]
90006c62:	9b01      	ldr	r3, [sp, #4]
90006c64:	3b01      	subs	r3, #1
90006c66:	9301      	str	r3, [sp, #4]
90006c68:	e726      	b.n	90006ab8 <EwWarpIndex8RowFilterGradientBlend+0x34>
90006c6a:	bf00      	nop
90006c6c:	9002fa7c 	.word	0x9002fa7c

90006c70 <EwWarpAlpha8RowGradient>:
90006c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006c74:	469e      	mov	lr, r3
90006c76:	b087      	sub	sp, #28
90006c78:	680b      	ldr	r3, [r1, #0]
90006c7a:	9c15      	ldr	r4, [sp, #84]	; 0x54
90006c7c:	9304      	str	r3, [sp, #16]
90006c7e:	688b      	ldr	r3, [r1, #8]
90006c80:	f8d0 9000 	ldr.w	r9, [r0]
90006c84:	9305      	str	r3, [sp, #20]
90006c86:	6d23      	ldr	r3, [r4, #80]	; 0x50
90006c88:	b9eb      	cbnz	r3, 90006cc6 <EwWarpAlpha8RowGradient+0x56>
90006c8a:	6d63      	ldr	r3, [r4, #84]	; 0x54
90006c8c:	fab3 fb83 	clz	fp, r3
90006c90:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90006c94:	6823      	ldr	r3, [r4, #0]
90006c96:	4694      	mov	ip, r2
90006c98:	6a21      	ldr	r1, [r4, #32]
90006c9a:	091b      	lsrs	r3, r3, #4
90006c9c:	f3c1 5107 	ubfx	r1, r1, #20, #8
90006ca0:	f403 007f 	and.w	r0, r3, #16711680	; 0xff0000
90006ca4:	6923      	ldr	r3, [r4, #16]
90006ca6:	0b1b      	lsrs	r3, r3, #12
90006ca8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90006cac:	4303      	orrs	r3, r0
90006cae:	430b      	orrs	r3, r1
90006cb0:	6b21      	ldr	r1, [r4, #48]	; 0x30
90006cb2:	0109      	lsls	r1, r1, #4
90006cb4:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
90006cb8:	4319      	orrs	r1, r3
90006cba:	f1bc 0f00 	cmp.w	ip, #0
90006cbe:	dc05      	bgt.n	90006ccc <EwWarpAlpha8RowGradient+0x5c>
90006cc0:	b007      	add	sp, #28
90006cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006cc6:	f04f 0b00 	mov.w	fp, #0
90006cca:	e7e3      	b.n	90006c94 <EwWarpAlpha8RowGradient+0x24>
90006ccc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90006cce:	ea4f 332e 	mov.w	r3, lr, asr #12
90006cd2:	9814      	ldr	r0, [sp, #80]	; 0x50
90006cd4:	4353      	muls	r3, r2
90006cd6:	9d04      	ldr	r5, [sp, #16]
90006cd8:	141a      	asrs	r2, r3, #16
90006cda:	eb05 4323 	add.w	r3, r5, r3, asr #16
90006cde:	9203      	str	r2, [sp, #12]
90006ce0:	9a10      	ldr	r2, [sp, #64]	; 0x40
90006ce2:	1312      	asrs	r2, r2, #12
90006ce4:	4342      	muls	r2, r0
90006ce6:	9805      	ldr	r0, [sp, #20]
90006ce8:	1412      	asrs	r2, r2, #16
90006cea:	4350      	muls	r0, r2
90006cec:	f813 a000 	ldrb.w	sl, [r3, r0]
90006cf0:	f1bb 0f00 	cmp.w	fp, #0
90006cf4:	d165      	bne.n	90006dc2 <EwWarpAlpha8RowGradient+0x152>
90006cf6:	68a6      	ldr	r6, [r4, #8]
90006cf8:	6820      	ldr	r0, [r4, #0]
90006cfa:	9600      	str	r6, [sp, #0]
90006cfc:	69a6      	ldr	r6, [r4, #24]
90006cfe:	6921      	ldr	r1, [r4, #16]
90006d00:	9601      	str	r6, [sp, #4]
90006d02:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90006d04:	6a23      	ldr	r3, [r4, #32]
90006d06:	9602      	str	r6, [sp, #8]
90006d08:	6d26      	ldr	r6, [r4, #80]	; 0x50
90006d0a:	6b25      	ldr	r5, [r4, #48]	; 0x30
90006d0c:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90006d10:	b31e      	cbz	r6, 90006d5a <EwWarpAlpha8RowGradient+0xea>
90006d12:	b15a      	cbz	r2, 90006d2c <EwWarpAlpha8RowGradient+0xbc>
90006d14:	6866      	ldr	r6, [r4, #4]
90006d16:	fb06 0002 	mla	r0, r6, r2, r0
90006d1a:	6966      	ldr	r6, [r4, #20]
90006d1c:	fb06 1102 	mla	r1, r6, r2, r1
90006d20:	6a66      	ldr	r6, [r4, #36]	; 0x24
90006d22:	fb06 3302 	mla	r3, r6, r2, r3
90006d26:	6b66      	ldr	r6, [r4, #52]	; 0x34
90006d28:	fb06 5502 	mla	r5, r6, r2, r5
90006d2c:	6d66      	ldr	r6, [r4, #84]	; 0x54
90006d2e:	b1a6      	cbz	r6, 90006d5a <EwWarpAlpha8RowGradient+0xea>
90006d30:	b19a      	cbz	r2, 90006d5a <EwWarpAlpha8RowGradient+0xea>
90006d32:	9f00      	ldr	r7, [sp, #0]
90006d34:	68e6      	ldr	r6, [r4, #12]
90006d36:	fb06 7602 	mla	r6, r6, r2, r7
90006d3a:	9600      	str	r6, [sp, #0]
90006d3c:	9e01      	ldr	r6, [sp, #4]
90006d3e:	4637      	mov	r7, r6
90006d40:	69e6      	ldr	r6, [r4, #28]
90006d42:	fb06 7602 	mla	r6, r6, r2, r7
90006d46:	9601      	str	r6, [sp, #4]
90006d48:	9e02      	ldr	r6, [sp, #8]
90006d4a:	4637      	mov	r7, r6
90006d4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90006d4e:	fb06 7602 	mla	r6, r6, r2, r7
90006d52:	9602      	str	r6, [sp, #8]
90006d54:	6be6      	ldr	r6, [r4, #60]	; 0x3c
90006d56:	fb06 8802 	mla	r8, r6, r2, r8
90006d5a:	6d62      	ldr	r2, [r4, #84]	; 0x54
90006d5c:	b31a      	cbz	r2, 90006da6 <EwWarpAlpha8RowGradient+0x136>
90006d5e:	9a03      	ldr	r2, [sp, #12]
90006d60:	b30a      	cbz	r2, 90006da6 <EwWarpAlpha8RowGradient+0x136>
90006d62:	9e03      	ldr	r6, [sp, #12]
90006d64:	1507      	asrs	r7, r0, #20
90006d66:	6ca2      	ldr	r2, [r4, #72]	; 0x48
90006d68:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90006d6c:	4372      	muls	r2, r6
90006d6e:	9e00      	ldr	r6, [sp, #0]
90006d70:	ebc7 5626 	rsb	r6, r7, r6, asr #20
90006d74:	9f01      	ldr	r7, [sp, #4]
90006d76:	fb02 0006 	mla	r0, r2, r6, r0
90006d7a:	150e      	asrs	r6, r1, #20
90006d7c:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90006d80:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90006d84:	9f02      	ldr	r7, [sp, #8]
90006d86:	fb02 1106 	mla	r1, r2, r6, r1
90006d8a:	151e      	asrs	r6, r3, #20
90006d8c:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90006d90:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90006d94:	fb02 3306 	mla	r3, r2, r6, r3
90006d98:	152e      	asrs	r6, r5, #20
90006d9a:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90006d9e:	ebc6 5628 	rsb	r6, r6, r8, asr #20
90006da2:	fb02 5506 	mla	r5, r2, r6, r5
90006da6:	0900      	lsrs	r0, r0, #4
90006da8:	f3c3 5307 	ubfx	r3, r3, #20, #8
90006dac:	0b09      	lsrs	r1, r1, #12
90006dae:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90006db2:	012d      	lsls	r5, r5, #4
90006db4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90006db8:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90006dbc:	4301      	orrs	r1, r0
90006dbe:	4319      	orrs	r1, r3
90006dc0:	4329      	orrs	r1, r5
90006dc2:	f1ba 0f00 	cmp.w	sl, #0
90006dc6:	d10c      	bne.n	90006de2 <EwWarpAlpha8RowGradient+0x172>
90006dc8:	f8c9 a000 	str.w	sl, [r9]
90006dcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
90006dce:	f109 0904 	add.w	r9, r9, #4
90006dd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
90006dd4:	f10c 3cff 	add.w	ip, ip, #4294967295
90006dd8:	449e      	add	lr, r3
90006dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
90006ddc:	4413      	add	r3, r2
90006dde:	9310      	str	r3, [sp, #64]	; 0x40
90006de0:	e76b      	b.n	90006cba <EwWarpAlpha8RowGradient+0x4a>
90006de2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90006de6:	bf17      	itett	ne
90006de8:	0e0b      	lsrne	r3, r1, #24
90006dea:	f8c9 1000 	streq.w	r1, [r9]
90006dee:	fb0a 3303 	mlane	r3, sl, r3, r3
90006df2:	f021 4a7f 	bicne.w	sl, r1, #4278190080	; 0xff000000
90006df6:	bf1e      	ittt	ne
90006df8:	0a1b      	lsrne	r3, r3, #8
90006dfa:	ea4a 6303 	orrne.w	r3, sl, r3, lsl #24
90006dfe:	f8c9 3000 	strne.w	r3, [r9]
90006e02:	e7e3      	b.n	90006dcc <EwWarpAlpha8RowGradient+0x15c>

90006e04 <EwWarpAlpha8RowFilterGradient>:
90006e04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006e08:	b089      	sub	sp, #36	; 0x24
90006e0a:	f8d0 a000 	ldr.w	sl, [r0]
90006e0e:	9302      	str	r3, [sp, #8]
90006e10:	680b      	ldr	r3, [r1, #0]
90006e12:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90006e14:	9303      	str	r3, [sp, #12]
90006e16:	688b      	ldr	r3, [r1, #8]
90006e18:	9304      	str	r3, [sp, #16]
90006e1a:	6d23      	ldr	r3, [r4, #80]	; 0x50
90006e1c:	bb03      	cbnz	r3, 90006e60 <EwWarpAlpha8RowFilterGradient+0x5c>
90006e1e:	6d63      	ldr	r3, [r4, #84]	; 0x54
90006e20:	fab3 fb83 	clz	fp, r3
90006e24:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90006e28:	6823      	ldr	r3, [r4, #0]
90006e2a:	4690      	mov	r8, r2
90006e2c:	6921      	ldr	r1, [r4, #16]
90006e2e:	091b      	lsrs	r3, r3, #4
90006e30:	6a20      	ldr	r0, [r4, #32]
90006e32:	9a04      	ldr	r2, [sp, #16]
90006e34:	f403 057f 	and.w	r5, r3, #16711680	; 0xff0000
90006e38:	0b0b      	lsrs	r3, r1, #12
90006e3a:	f3c0 5007 	ubfx	r0, r0, #20, #8
90006e3e:	3201      	adds	r2, #1
90006e40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90006e44:	9205      	str	r2, [sp, #20]
90006e46:	432b      	orrs	r3, r5
90006e48:	4303      	orrs	r3, r0
90006e4a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90006e4c:	0100      	lsls	r0, r0, #4
90006e4e:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
90006e52:	4303      	orrs	r3, r0
90006e54:	f1b8 0f00 	cmp.w	r8, #0
90006e58:	dc05      	bgt.n	90006e66 <EwWarpAlpha8RowFilterGradient+0x62>
90006e5a:	b009      	add	sp, #36	; 0x24
90006e5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006e60:	f04f 0b00 	mov.w	fp, #0
90006e64:	e7e0      	b.n	90006e28 <EwWarpAlpha8RowFilterGradient+0x24>
90006e66:	9a02      	ldr	r2, [sp, #8]
90006e68:	9916      	ldr	r1, [sp, #88]	; 0x58
90006e6a:	ea4f 3922 	mov.w	r9, r2, asr #12
90006e6e:	9a15      	ldr	r2, [sp, #84]	; 0x54
90006e70:	fb02 f909 	mul.w	r9, r2, r9
90006e74:	ea4f 3229 	mov.w	r2, r9, asr #12
90006e78:	9206      	str	r2, [sp, #24]
90006e7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
90006e7c:	1312      	asrs	r2, r2, #12
90006e7e:	434a      	muls	r2, r1
90006e80:	1311      	asrs	r1, r2, #12
90006e82:	9107      	str	r1, [sp, #28]
90006e84:	f1bb 0f00 	cmp.w	fp, #0
90006e88:	d162      	bne.n	90006f50 <EwWarpAlpha8RowFilterGradient+0x14c>
90006e8a:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90006e8c:	68a6      	ldr	r6, [r4, #8]
90006e8e:	9701      	str	r7, [sp, #4]
90006e90:	6d27      	ldr	r7, [r4, #80]	; 0x50
90006e92:	6820      	ldr	r0, [r4, #0]
90006e94:	6921      	ldr	r1, [r4, #16]
90006e96:	6a23      	ldr	r3, [r4, #32]
90006e98:	6b25      	ldr	r5, [r4, #48]	; 0x30
90006e9a:	f8d4 c018 	ldr.w	ip, [r4, #24]
90006e9e:	f8d4 e028 	ldr.w	lr, [r4, #40]	; 0x28
90006ea2:	9600      	str	r6, [sp, #0]
90006ea4:	b307      	cbz	r7, 90006ee8 <EwWarpAlpha8RowFilterGradient+0xe4>
90006ea6:	1412      	asrs	r2, r2, #16
90006ea8:	d00b      	beq.n	90006ec2 <EwWarpAlpha8RowFilterGradient+0xbe>
90006eaa:	6867      	ldr	r7, [r4, #4]
90006eac:	fb07 0002 	mla	r0, r7, r2, r0
90006eb0:	6967      	ldr	r7, [r4, #20]
90006eb2:	fb07 1102 	mla	r1, r7, r2, r1
90006eb6:	6a67      	ldr	r7, [r4, #36]	; 0x24
90006eb8:	fb07 3302 	mla	r3, r7, r2, r3
90006ebc:	6b67      	ldr	r7, [r4, #52]	; 0x34
90006ebe:	fb07 5502 	mla	r5, r7, r2, r5
90006ec2:	6d67      	ldr	r7, [r4, #84]	; 0x54
90006ec4:	b187      	cbz	r7, 90006ee8 <EwWarpAlpha8RowFilterGradient+0xe4>
90006ec6:	b17a      	cbz	r2, 90006ee8 <EwWarpAlpha8RowFilterGradient+0xe4>
90006ec8:	68e7      	ldr	r7, [r4, #12]
90006eca:	9e00      	ldr	r6, [sp, #0]
90006ecc:	fb07 6602 	mla	r6, r7, r2, r6
90006ed0:	69e7      	ldr	r7, [r4, #28]
90006ed2:	fb07 cc02 	mla	ip, r7, r2, ip
90006ed6:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90006ed8:	9600      	str	r6, [sp, #0]
90006eda:	fb07 ee02 	mla	lr, r7, r2, lr
90006ede:	6be6      	ldr	r6, [r4, #60]	; 0x3c
90006ee0:	9f01      	ldr	r7, [sp, #4]
90006ee2:	fb06 7202 	mla	r2, r6, r2, r7
90006ee6:	9201      	str	r2, [sp, #4]
90006ee8:	6d62      	ldr	r2, [r4, #84]	; 0x54
90006eea:	b31a      	cbz	r2, 90006f34 <EwWarpAlpha8RowFilterGradient+0x130>
90006eec:	ea5f 4929 	movs.w	r9, r9, asr #16
90006ef0:	d020      	beq.n	90006f34 <EwWarpAlpha8RowFilterGradient+0x130>
90006ef2:	1507      	asrs	r7, r0, #20
90006ef4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
90006ef6:	9e00      	ldr	r6, [sp, #0]
90006ef8:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90006efc:	fb02 f209 	mul.w	r2, r2, r9
90006f00:	ebc7 5626 	rsb	r6, r7, r6, asr #20
90006f04:	9f01      	ldr	r7, [sp, #4]
90006f06:	fb02 0006 	mla	r0, r2, r6, r0
90006f0a:	150e      	asrs	r6, r1, #20
90006f0c:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90006f10:	ebc6 562c 	rsb	r6, r6, ip, asr #20
90006f14:	fb02 1106 	mla	r1, r2, r6, r1
90006f18:	151e      	asrs	r6, r3, #20
90006f1a:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90006f1e:	ebc6 562e 	rsb	r6, r6, lr, asr #20
90006f22:	fb02 3306 	mla	r3, r2, r6, r3
90006f26:	152e      	asrs	r6, r5, #20
90006f28:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90006f2c:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90006f30:	fb02 5506 	mla	r5, r2, r6, r5
90006f34:	0900      	lsrs	r0, r0, #4
90006f36:	f3c3 5307 	ubfx	r3, r3, #20, #8
90006f3a:	0b09      	lsrs	r1, r1, #12
90006f3c:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90006f40:	012d      	lsls	r5, r5, #4
90006f42:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90006f46:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90006f4a:	4308      	orrs	r0, r1
90006f4c:	4303      	orrs	r3, r0
90006f4e:	432b      	orrs	r3, r5
90006f50:	9907      	ldr	r1, [sp, #28]
90006f52:	9a06      	ldr	r2, [sp, #24]
90006f54:	f1a1 0008 	sub.w	r0, r1, #8
90006f58:	9e04      	ldr	r6, [sp, #16]
90006f5a:	3a08      	subs	r2, #8
90006f5c:	1105      	asrs	r5, r0, #4
90006f5e:	f000 000f 	and.w	r0, r0, #15
90006f62:	1111      	asrs	r1, r2, #4
90006f64:	f002 020f 	and.w	r2, r2, #15
90006f68:	fb06 1105 	mla	r1, r6, r5, r1
90006f6c:	9d03      	ldr	r5, [sp, #12]
90006f6e:	f1c0 0610 	rsb	r6, r0, #16
90006f72:	186f      	adds	r7, r5, r1
90006f74:	f1c2 0510 	rsb	r5, r2, #16
90006f78:	4356      	muls	r6, r2
90006f7a:	4345      	muls	r5, r0
90006f7c:	4342      	muls	r2, r0
90006f7e:	9805      	ldr	r0, [sp, #20]
90006f80:	eb07 0c00 	add.w	ip, r7, r0
90006f84:	f5c6 7080 	rsb	r0, r6, #256	; 0x100
90006f88:	1b40      	subs	r0, r0, r5
90006f8a:	eba0 0902 	sub.w	r9, r0, r2
90006f8e:	9803      	ldr	r0, [sp, #12]
90006f90:	f810 e001 	ldrb.w	lr, [r0, r1]
90006f94:	7879      	ldrb	r1, [r7, #1]
90006f96:	9805      	ldr	r0, [sp, #20]
90006f98:	4371      	muls	r1, r6
90006f9a:	5c3e      	ldrb	r6, [r7, r0]
90006f9c:	fb0e 1109 	mla	r1, lr, r9, r1
90006fa0:	fb02 1106 	mla	r1, r2, r6, r1
90006fa4:	f81c 6c01 	ldrb.w	r6, [ip, #-1]
90006fa8:	fb05 1606 	mla	r6, r5, r6, r1
90006fac:	0a36      	lsrs	r6, r6, #8
90006fae:	d102      	bne.n	90006fb6 <EwWarpAlpha8RowFilterGradient+0x1b2>
90006fb0:	f8ca 6000 	str.w	r6, [sl]
90006fb4:	e003      	b.n	90006fbe <EwWarpAlpha8RowFilterGradient+0x1ba>
90006fb6:	2eff      	cmp	r6, #255	; 0xff
90006fb8:	d10e      	bne.n	90006fd8 <EwWarpAlpha8RowFilterGradient+0x1d4>
90006fba:	f8ca 3000 	str.w	r3, [sl]
90006fbe:	9a02      	ldr	r2, [sp, #8]
90006fc0:	f10a 0a04 	add.w	sl, sl, #4
90006fc4:	9913      	ldr	r1, [sp, #76]	; 0x4c
90006fc6:	f108 38ff 	add.w	r8, r8, #4294967295
90006fca:	440a      	add	r2, r1
90006fcc:	9914      	ldr	r1, [sp, #80]	; 0x50
90006fce:	9202      	str	r2, [sp, #8]
90006fd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
90006fd2:	440a      	add	r2, r1
90006fd4:	9212      	str	r2, [sp, #72]	; 0x48
90006fd6:	e73d      	b.n	90006e54 <EwWarpAlpha8RowFilterGradient+0x50>
90006fd8:	0e19      	lsrs	r1, r3, #24
90006fda:	fb06 1601 	mla	r6, r6, r1, r1
90006fde:	f023 417f 	bic.w	r1, r3, #4278190080	; 0xff000000
90006fe2:	0a36      	lsrs	r6, r6, #8
90006fe4:	ea41 6606 	orr.w	r6, r1, r6, lsl #24
90006fe8:	e7e2      	b.n	90006fb0 <EwWarpAlpha8RowFilterGradient+0x1ac>

90006fea <EwWarpAlpha8RowGradientBlend>:
90006fea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006fee:	469e      	mov	lr, r3
90006ff0:	b087      	sub	sp, #28
90006ff2:	680b      	ldr	r3, [r1, #0]
90006ff4:	9c15      	ldr	r4, [sp, #84]	; 0x54
90006ff6:	9304      	str	r3, [sp, #16]
90006ff8:	688b      	ldr	r3, [r1, #8]
90006ffa:	f8d0 b000 	ldr.w	fp, [r0]
90006ffe:	9305      	str	r3, [sp, #20]
90007000:	6d23      	ldr	r3, [r4, #80]	; 0x50
90007002:	b9eb      	cbnz	r3, 90007040 <EwWarpAlpha8RowGradientBlend+0x56>
90007004:	6d63      	ldr	r3, [r4, #84]	; 0x54
90007006:	fab3 f983 	clz	r9, r3
9000700a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9000700e:	6823      	ldr	r3, [r4, #0]
90007010:	4694      	mov	ip, r2
90007012:	6921      	ldr	r1, [r4, #16]
90007014:	091b      	lsrs	r3, r3, #4
90007016:	6a20      	ldr	r0, [r4, #32]
90007018:	f403 057f 	and.w	r5, r3, #16711680	; 0xff0000
9000701c:	0b0b      	lsrs	r3, r1, #12
9000701e:	f3c0 5007 	ubfx	r0, r0, #20, #8
90007022:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90007026:	432b      	orrs	r3, r5
90007028:	4303      	orrs	r3, r0
9000702a:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000702c:	0100      	lsls	r0, r0, #4
9000702e:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
90007032:	4303      	orrs	r3, r0
90007034:	f1bc 0f00 	cmp.w	ip, #0
90007038:	dc05      	bgt.n	90007046 <EwWarpAlpha8RowGradientBlend+0x5c>
9000703a:	b007      	add	sp, #28
9000703c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007040:	f04f 0900 	mov.w	r9, #0
90007044:	e7e3      	b.n	9000700e <EwWarpAlpha8RowGradientBlend+0x24>
90007046:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90007048:	ea4f 312e 	mov.w	r1, lr, asr #12
9000704c:	9814      	ldr	r0, [sp, #80]	; 0x50
9000704e:	4351      	muls	r1, r2
90007050:	9d04      	ldr	r5, [sp, #16]
90007052:	140a      	asrs	r2, r1, #16
90007054:	eb05 4121 	add.w	r1, r5, r1, asr #16
90007058:	9203      	str	r2, [sp, #12]
9000705a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000705c:	1312      	asrs	r2, r2, #12
9000705e:	4342      	muls	r2, r0
90007060:	9805      	ldr	r0, [sp, #20]
90007062:	1412      	asrs	r2, r2, #16
90007064:	4350      	muls	r0, r2
90007066:	f811 a000 	ldrb.w	sl, [r1, r0]
9000706a:	f1b9 0f00 	cmp.w	r9, #0
9000706e:	d165      	bne.n	9000713c <EwWarpAlpha8RowGradientBlend+0x152>
90007070:	68a6      	ldr	r6, [r4, #8]
90007072:	6820      	ldr	r0, [r4, #0]
90007074:	9600      	str	r6, [sp, #0]
90007076:	69a6      	ldr	r6, [r4, #24]
90007078:	6921      	ldr	r1, [r4, #16]
9000707a:	9601      	str	r6, [sp, #4]
9000707c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9000707e:	6a23      	ldr	r3, [r4, #32]
90007080:	9602      	str	r6, [sp, #8]
90007082:	6d26      	ldr	r6, [r4, #80]	; 0x50
90007084:	6b25      	ldr	r5, [r4, #48]	; 0x30
90007086:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
9000708a:	b31e      	cbz	r6, 900070d4 <EwWarpAlpha8RowGradientBlend+0xea>
9000708c:	b15a      	cbz	r2, 900070a6 <EwWarpAlpha8RowGradientBlend+0xbc>
9000708e:	6866      	ldr	r6, [r4, #4]
90007090:	fb06 0002 	mla	r0, r6, r2, r0
90007094:	6966      	ldr	r6, [r4, #20]
90007096:	fb06 1102 	mla	r1, r6, r2, r1
9000709a:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000709c:	fb06 3302 	mla	r3, r6, r2, r3
900070a0:	6b66      	ldr	r6, [r4, #52]	; 0x34
900070a2:	fb06 5502 	mla	r5, r6, r2, r5
900070a6:	6d66      	ldr	r6, [r4, #84]	; 0x54
900070a8:	b1a6      	cbz	r6, 900070d4 <EwWarpAlpha8RowGradientBlend+0xea>
900070aa:	b19a      	cbz	r2, 900070d4 <EwWarpAlpha8RowGradientBlend+0xea>
900070ac:	9f00      	ldr	r7, [sp, #0]
900070ae:	68e6      	ldr	r6, [r4, #12]
900070b0:	fb06 7602 	mla	r6, r6, r2, r7
900070b4:	9600      	str	r6, [sp, #0]
900070b6:	9e01      	ldr	r6, [sp, #4]
900070b8:	4637      	mov	r7, r6
900070ba:	69e6      	ldr	r6, [r4, #28]
900070bc:	fb06 7602 	mla	r6, r6, r2, r7
900070c0:	9601      	str	r6, [sp, #4]
900070c2:	9e02      	ldr	r6, [sp, #8]
900070c4:	4637      	mov	r7, r6
900070c6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
900070c8:	fb06 7602 	mla	r6, r6, r2, r7
900070cc:	9602      	str	r6, [sp, #8]
900070ce:	6be6      	ldr	r6, [r4, #60]	; 0x3c
900070d0:	fb06 8802 	mla	r8, r6, r2, r8
900070d4:	6d62      	ldr	r2, [r4, #84]	; 0x54
900070d6:	b31a      	cbz	r2, 90007120 <EwWarpAlpha8RowGradientBlend+0x136>
900070d8:	9a03      	ldr	r2, [sp, #12]
900070da:	b30a      	cbz	r2, 90007120 <EwWarpAlpha8RowGradientBlend+0x136>
900070dc:	9e03      	ldr	r6, [sp, #12]
900070de:	1507      	asrs	r7, r0, #20
900070e0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
900070e2:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
900070e6:	4372      	muls	r2, r6
900070e8:	9e00      	ldr	r6, [sp, #0]
900070ea:	ebc7 5626 	rsb	r6, r7, r6, asr #20
900070ee:	9f01      	ldr	r7, [sp, #4]
900070f0:	fb02 0006 	mla	r0, r2, r6, r0
900070f4:	150e      	asrs	r6, r1, #20
900070f6:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
900070fa:	ebc6 5627 	rsb	r6, r6, r7, asr #20
900070fe:	9f02      	ldr	r7, [sp, #8]
90007100:	fb02 1106 	mla	r1, r2, r6, r1
90007104:	151e      	asrs	r6, r3, #20
90007106:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
9000710a:	ebc6 5627 	rsb	r6, r6, r7, asr #20
9000710e:	fb02 3306 	mla	r3, r2, r6, r3
90007112:	152e      	asrs	r6, r5, #20
90007114:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90007118:	ebc6 5628 	rsb	r6, r6, r8, asr #20
9000711c:	fb02 5506 	mla	r5, r2, r6, r5
90007120:	0900      	lsrs	r0, r0, #4
90007122:	f3c3 5307 	ubfx	r3, r3, #20, #8
90007126:	0b09      	lsrs	r1, r1, #12
90007128:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
9000712c:	012d      	lsls	r5, r5, #4
9000712e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90007132:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90007136:	4308      	orrs	r0, r1
90007138:	4303      	orrs	r3, r0
9000713a:	432b      	orrs	r3, r5
9000713c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
90007140:	ea4f 6113 	mov.w	r1, r3, lsr #24
90007144:	d10e      	bne.n	90007164 <EwWarpAlpha8RowGradientBlend+0x17a>
90007146:	29ff      	cmp	r1, #255	; 0xff
90007148:	d10f      	bne.n	9000716a <EwWarpAlpha8RowGradientBlend+0x180>
9000714a:	f8cb 3000 	str.w	r3, [fp]
9000714e:	9a11      	ldr	r2, [sp, #68]	; 0x44
90007150:	f10b 0b04 	add.w	fp, fp, #4
90007154:	9912      	ldr	r1, [sp, #72]	; 0x48
90007156:	f10c 3cff 	add.w	ip, ip, #4294967295
9000715a:	4496      	add	lr, r2
9000715c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000715e:	440a      	add	r2, r1
90007160:	9210      	str	r2, [sp, #64]	; 0x40
90007162:	e767      	b.n	90007034 <EwWarpAlpha8RowGradientBlend+0x4a>
90007164:	f1ba 0f00 	cmp.w	sl, #0
90007168:	d0f1      	beq.n	9000714e <EwWarpAlpha8RowGradientBlend+0x164>
9000716a:	2900      	cmp	r1, #0
9000716c:	d0ef      	beq.n	9000714e <EwWarpAlpha8RowGradientBlend+0x164>
9000716e:	3101      	adds	r1, #1
90007170:	f8db 6000 	ldr.w	r6, [fp]
90007174:	f003 12ff 	and.w	r2, r3, #16711935	; 0xff00ff
90007178:	f3c3 2007 	ubfx	r0, r3, #8, #8
9000717c:	fb0a 1101 	mla	r1, sl, r1, r1
90007180:	0e37      	lsrs	r7, r6, #24
90007182:	ea4f 2111 	mov.w	r1, r1, lsr #8
90007186:	fb01 f202 	mul.w	r2, r1, r2
9000718a:	fb01 f000 	mul.w	r0, r1, r0
9000718e:	d00d      	beq.n	900071ac <EwWarpAlpha8RowGradientBlend+0x1c2>
90007190:	f5c1 7580 	rsb	r5, r1, #256	; 0x100
90007194:	fb07 5505 	mla	r5, r7, r5, r5
90007198:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
9000719c:	f3c6 2607 	ubfx	r6, r6, #8, #8
900071a0:	0a2d      	lsrs	r5, r5, #8
900071a2:	fb05 2207 	mla	r2, r5, r7, r2
900071a6:	4429      	add	r1, r5
900071a8:	fb05 0006 	mla	r0, r5, r6, r0
900071ac:	0a12      	lsrs	r2, r2, #8
900071ae:	0a00      	lsrs	r0, r0, #8
900071b0:	b169      	cbz	r1, 900071ce <EwWarpAlpha8RowGradientBlend+0x1e4>
900071b2:	3901      	subs	r1, #1
900071b4:	29fe      	cmp	r1, #254	; 0xfe
900071b6:	d80a      	bhi.n	900071ce <EwWarpAlpha8RowGradientBlend+0x1e4>
900071b8:	4d0a      	ldr	r5, [pc, #40]	; (900071e4 <EwWarpAlpha8RowGradientBlend+0x1fa>)
900071ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900071be:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900071c2:	f835 5011 	ldrh.w	r5, [r5, r1, lsl #1]
900071c6:	436a      	muls	r2, r5
900071c8:	4368      	muls	r0, r5
900071ca:	0a12      	lsrs	r2, r2, #8
900071cc:	0a00      	lsrs	r0, r0, #8
900071ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900071d2:	0200      	lsls	r0, r0, #8
900071d4:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
900071d8:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
900071dc:	4302      	orrs	r2, r0
900071de:	f8cb 2000 	str.w	r2, [fp]
900071e2:	e7b4      	b.n	9000714e <EwWarpAlpha8RowGradientBlend+0x164>
900071e4:	9002fa7c 	.word	0x9002fa7c

900071e8 <EwWarpAlpha8RowFilterGradientBlend>:
900071e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900071ec:	b089      	sub	sp, #36	; 0x24
900071ee:	f8d0 a000 	ldr.w	sl, [r0]
900071f2:	9302      	str	r3, [sp, #8]
900071f4:	680b      	ldr	r3, [r1, #0]
900071f6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900071f8:	9303      	str	r3, [sp, #12]
900071fa:	688b      	ldr	r3, [r1, #8]
900071fc:	9304      	str	r3, [sp, #16]
900071fe:	6d23      	ldr	r3, [r4, #80]	; 0x50
90007200:	bb03      	cbnz	r3, 90007244 <EwWarpAlpha8RowFilterGradientBlend+0x5c>
90007202:	6d63      	ldr	r3, [r4, #84]	; 0x54
90007204:	fab3 fb83 	clz	fp, r3
90007208:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9000720c:	6823      	ldr	r3, [r4, #0]
9000720e:	4690      	mov	r8, r2
90007210:	6921      	ldr	r1, [r4, #16]
90007212:	091b      	lsrs	r3, r3, #4
90007214:	6a20      	ldr	r0, [r4, #32]
90007216:	9a04      	ldr	r2, [sp, #16]
90007218:	f403 057f 	and.w	r5, r3, #16711680	; 0xff0000
9000721c:	0b0b      	lsrs	r3, r1, #12
9000721e:	f3c0 5007 	ubfx	r0, r0, #20, #8
90007222:	3201      	adds	r2, #1
90007224:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90007228:	9205      	str	r2, [sp, #20]
9000722a:	432b      	orrs	r3, r5
9000722c:	4303      	orrs	r3, r0
9000722e:	6b20      	ldr	r0, [r4, #48]	; 0x30
90007230:	0100      	lsls	r0, r0, #4
90007232:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
90007236:	4303      	orrs	r3, r0
90007238:	f1b8 0f00 	cmp.w	r8, #0
9000723c:	dc05      	bgt.n	9000724a <EwWarpAlpha8RowFilterGradientBlend+0x62>
9000723e:	b009      	add	sp, #36	; 0x24
90007240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007244:	f04f 0b00 	mov.w	fp, #0
90007248:	e7e0      	b.n	9000720c <EwWarpAlpha8RowFilterGradientBlend+0x24>
9000724a:	9a02      	ldr	r2, [sp, #8]
9000724c:	9916      	ldr	r1, [sp, #88]	; 0x58
9000724e:	ea4f 3922 	mov.w	r9, r2, asr #12
90007252:	9a15      	ldr	r2, [sp, #84]	; 0x54
90007254:	fb02 f909 	mul.w	r9, r2, r9
90007258:	ea4f 3229 	mov.w	r2, r9, asr #12
9000725c:	9206      	str	r2, [sp, #24]
9000725e:	9a12      	ldr	r2, [sp, #72]	; 0x48
90007260:	1312      	asrs	r2, r2, #12
90007262:	434a      	muls	r2, r1
90007264:	1311      	asrs	r1, r2, #12
90007266:	9107      	str	r1, [sp, #28]
90007268:	f1bb 0f00 	cmp.w	fp, #0
9000726c:	d162      	bne.n	90007334 <EwWarpAlpha8RowFilterGradientBlend+0x14c>
9000726e:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90007270:	68a6      	ldr	r6, [r4, #8]
90007272:	9701      	str	r7, [sp, #4]
90007274:	6d27      	ldr	r7, [r4, #80]	; 0x50
90007276:	6820      	ldr	r0, [r4, #0]
90007278:	6921      	ldr	r1, [r4, #16]
9000727a:	6a23      	ldr	r3, [r4, #32]
9000727c:	6b25      	ldr	r5, [r4, #48]	; 0x30
9000727e:	f8d4 c018 	ldr.w	ip, [r4, #24]
90007282:	f8d4 e028 	ldr.w	lr, [r4, #40]	; 0x28
90007286:	9600      	str	r6, [sp, #0]
90007288:	b307      	cbz	r7, 900072cc <EwWarpAlpha8RowFilterGradientBlend+0xe4>
9000728a:	1412      	asrs	r2, r2, #16
9000728c:	d00b      	beq.n	900072a6 <EwWarpAlpha8RowFilterGradientBlend+0xbe>
9000728e:	6867      	ldr	r7, [r4, #4]
90007290:	fb07 0002 	mla	r0, r7, r2, r0
90007294:	6967      	ldr	r7, [r4, #20]
90007296:	fb07 1102 	mla	r1, r7, r2, r1
9000729a:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000729c:	fb07 3302 	mla	r3, r7, r2, r3
900072a0:	6b67      	ldr	r7, [r4, #52]	; 0x34
900072a2:	fb07 5502 	mla	r5, r7, r2, r5
900072a6:	6d67      	ldr	r7, [r4, #84]	; 0x54
900072a8:	b187      	cbz	r7, 900072cc <EwWarpAlpha8RowFilterGradientBlend+0xe4>
900072aa:	b17a      	cbz	r2, 900072cc <EwWarpAlpha8RowFilterGradientBlend+0xe4>
900072ac:	68e7      	ldr	r7, [r4, #12]
900072ae:	9e00      	ldr	r6, [sp, #0]
900072b0:	fb07 6602 	mla	r6, r7, r2, r6
900072b4:	69e7      	ldr	r7, [r4, #28]
900072b6:	fb07 cc02 	mla	ip, r7, r2, ip
900072ba:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
900072bc:	9600      	str	r6, [sp, #0]
900072be:	fb07 ee02 	mla	lr, r7, r2, lr
900072c2:	6be6      	ldr	r6, [r4, #60]	; 0x3c
900072c4:	9f01      	ldr	r7, [sp, #4]
900072c6:	fb06 7202 	mla	r2, r6, r2, r7
900072ca:	9201      	str	r2, [sp, #4]
900072cc:	6d62      	ldr	r2, [r4, #84]	; 0x54
900072ce:	b31a      	cbz	r2, 90007318 <EwWarpAlpha8RowFilterGradientBlend+0x130>
900072d0:	ea5f 4929 	movs.w	r9, r9, asr #16
900072d4:	d020      	beq.n	90007318 <EwWarpAlpha8RowFilterGradientBlend+0x130>
900072d6:	1507      	asrs	r7, r0, #20
900072d8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
900072da:	9e00      	ldr	r6, [sp, #0]
900072dc:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
900072e0:	fb02 f209 	mul.w	r2, r2, r9
900072e4:	ebc7 5626 	rsb	r6, r7, r6, asr #20
900072e8:	9f01      	ldr	r7, [sp, #4]
900072ea:	fb02 0006 	mla	r0, r2, r6, r0
900072ee:	150e      	asrs	r6, r1, #20
900072f0:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
900072f4:	ebc6 562c 	rsb	r6, r6, ip, asr #20
900072f8:	fb02 1106 	mla	r1, r2, r6, r1
900072fc:	151e      	asrs	r6, r3, #20
900072fe:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90007302:	ebc6 562e 	rsb	r6, r6, lr, asr #20
90007306:	fb02 3306 	mla	r3, r2, r6, r3
9000730a:	152e      	asrs	r6, r5, #20
9000730c:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90007310:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90007314:	fb02 5506 	mla	r5, r2, r6, r5
90007318:	0900      	lsrs	r0, r0, #4
9000731a:	f3c3 5307 	ubfx	r3, r3, #20, #8
9000731e:	0b09      	lsrs	r1, r1, #12
90007320:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90007324:	012d      	lsls	r5, r5, #4
90007326:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9000732a:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
9000732e:	4308      	orrs	r0, r1
90007330:	4303      	orrs	r3, r0
90007332:	432b      	orrs	r3, r5
90007334:	9907      	ldr	r1, [sp, #28]
90007336:	9a06      	ldr	r2, [sp, #24]
90007338:	f1a1 0008 	sub.w	r0, r1, #8
9000733c:	9e04      	ldr	r6, [sp, #16]
9000733e:	3a08      	subs	r2, #8
90007340:	1105      	asrs	r5, r0, #4
90007342:	f000 000f 	and.w	r0, r0, #15
90007346:	1111      	asrs	r1, r2, #4
90007348:	f002 020f 	and.w	r2, r2, #15
9000734c:	fb06 1105 	mla	r1, r6, r5, r1
90007350:	9d03      	ldr	r5, [sp, #12]
90007352:	f1c0 0610 	rsb	r6, r0, #16
90007356:	186f      	adds	r7, r5, r1
90007358:	f1c2 0510 	rsb	r5, r2, #16
9000735c:	4356      	muls	r6, r2
9000735e:	4345      	muls	r5, r0
90007360:	4342      	muls	r2, r0
90007362:	9805      	ldr	r0, [sp, #20]
90007364:	eb07 0c00 	add.w	ip, r7, r0
90007368:	f5c6 7080 	rsb	r0, r6, #256	; 0x100
9000736c:	1b40      	subs	r0, r0, r5
9000736e:	eba0 0902 	sub.w	r9, r0, r2
90007372:	9803      	ldr	r0, [sp, #12]
90007374:	f810 e001 	ldrb.w	lr, [r0, r1]
90007378:	7879      	ldrb	r1, [r7, #1]
9000737a:	9805      	ldr	r0, [sp, #20]
9000737c:	4371      	muls	r1, r6
9000737e:	5c38      	ldrb	r0, [r7, r0]
90007380:	fb0e 1109 	mla	r1, lr, r9, r1
90007384:	fb02 1100 	mla	r1, r2, r0, r1
90007388:	f81c 0c01 	ldrb.w	r0, [ip, #-1]
9000738c:	fb05 1000 	mla	r0, r5, r0, r1
90007390:	0e1d      	lsrs	r5, r3, #24
90007392:	0a00      	lsrs	r0, r0, #8
90007394:	28ff      	cmp	r0, #255	; 0xff
90007396:	d110      	bne.n	900073ba <EwWarpAlpha8RowFilterGradientBlend+0x1d2>
90007398:	2dff      	cmp	r5, #255	; 0xff
9000739a:	d110      	bne.n	900073be <EwWarpAlpha8RowFilterGradientBlend+0x1d6>
9000739c:	f8ca 3000 	str.w	r3, [sl]
900073a0:	9a02      	ldr	r2, [sp, #8]
900073a2:	f10a 0a04 	add.w	sl, sl, #4
900073a6:	9913      	ldr	r1, [sp, #76]	; 0x4c
900073a8:	f108 38ff 	add.w	r8, r8, #4294967295
900073ac:	440a      	add	r2, r1
900073ae:	9914      	ldr	r1, [sp, #80]	; 0x50
900073b0:	9202      	str	r2, [sp, #8]
900073b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
900073b4:	440a      	add	r2, r1
900073b6:	9212      	str	r2, [sp, #72]	; 0x48
900073b8:	e73e      	b.n	90007238 <EwWarpAlpha8RowFilterGradientBlend+0x50>
900073ba:	2800      	cmp	r0, #0
900073bc:	d0f0      	beq.n	900073a0 <EwWarpAlpha8RowFilterGradientBlend+0x1b8>
900073be:	2d00      	cmp	r5, #0
900073c0:	d0ee      	beq.n	900073a0 <EwWarpAlpha8RowFilterGradientBlend+0x1b8>
900073c2:	3501      	adds	r5, #1
900073c4:	f8da 7000 	ldr.w	r7, [sl]
900073c8:	f003 12ff 	and.w	r2, r3, #16711935	; 0xff00ff
900073cc:	f3c3 2107 	ubfx	r1, r3, #8, #8
900073d0:	fb00 5505 	mla	r5, r0, r5, r5
900073d4:	0e3e      	lsrs	r6, r7, #24
900073d6:	ea4f 2515 	mov.w	r5, r5, lsr #8
900073da:	fb05 f202 	mul.w	r2, r5, r2
900073de:	fb05 f101 	mul.w	r1, r5, r1
900073e2:	d00d      	beq.n	90007400 <EwWarpAlpha8RowFilterGradientBlend+0x218>
900073e4:	f5c5 7080 	rsb	r0, r5, #256	; 0x100
900073e8:	fb06 0000 	mla	r0, r6, r0, r0
900073ec:	f007 16ff 	and.w	r6, r7, #16711935	; 0xff00ff
900073f0:	f3c7 2707 	ubfx	r7, r7, #8, #8
900073f4:	0a00      	lsrs	r0, r0, #8
900073f6:	fb00 2206 	mla	r2, r0, r6, r2
900073fa:	4405      	add	r5, r0
900073fc:	fb00 1107 	mla	r1, r0, r7, r1
90007400:	0a12      	lsrs	r2, r2, #8
90007402:	0a09      	lsrs	r1, r1, #8
90007404:	b16d      	cbz	r5, 90007422 <EwWarpAlpha8RowFilterGradientBlend+0x23a>
90007406:	3d01      	subs	r5, #1
90007408:	2dfe      	cmp	r5, #254	; 0xfe
9000740a:	d80a      	bhi.n	90007422 <EwWarpAlpha8RowFilterGradientBlend+0x23a>
9000740c:	480a      	ldr	r0, [pc, #40]	; (90007438 <EwWarpAlpha8RowFilterGradientBlend+0x250>)
9000740e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90007412:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90007416:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9000741a:	4342      	muls	r2, r0
9000741c:	4341      	muls	r1, r0
9000741e:	0a12      	lsrs	r2, r2, #8
90007420:	0a09      	lsrs	r1, r1, #8
90007422:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90007426:	0209      	lsls	r1, r1, #8
90007428:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
9000742c:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
90007430:	430a      	orrs	r2, r1
90007432:	f8ca 2000 	str.w	r2, [sl]
90007436:	e7b3      	b.n	900073a0 <EwWarpAlpha8RowFilterGradientBlend+0x1b8>
90007438:	9002fa7c 	.word	0x9002fa7c

9000743c <EwWarpRGB565Row>:
9000743c:	e92d 4df0 	stmdb	sp!, {r4, r5, r6, r7, r8, sl, fp, lr}
90007440:	680d      	ldr	r5, [r1, #0]
90007442:	6889      	ldr	r1, [r1, #8]
90007444:	9e08      	ldr	r6, [sp, #32]
90007446:	6804      	ldr	r4, [r0, #0]
90007448:	ea4f 0c61 	mov.w	ip, r1, asr #1
9000744c:	2a00      	cmp	r2, #0
9000744e:	dc01      	bgt.n	90007454 <EwWarpRGB565Row+0x18>
90007450:	e8bd 8df0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
90007454:	1331      	asrs	r1, r6, #12
90007456:	980c      	ldr	r0, [sp, #48]	; 0x30
90007458:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9000745a:	3a01      	subs	r2, #1
9000745c:	4341      	muls	r1, r0
9000745e:	1408      	asrs	r0, r1, #16
90007460:	1319      	asrs	r1, r3, #12
90007462:	4379      	muls	r1, r7
90007464:	1409      	asrs	r1, r1, #16
90007466:	fb0c 1100 	mla	r1, ip, r0, r1
9000746a:	f835 0011 	ldrh.w	r0, [r5, r1, lsl #1]
9000746e:	08c1      	lsrs	r1, r0, #3
90007470:	ea4f 2a10 	mov.w	sl, r0, lsr #8
90007474:	f001 0bfc 	and.w	fp, r1, #252	; 0xfc
90007478:	00c0      	lsls	r0, r0, #3
9000747a:	f3c1 1181 	ubfx	r1, r1, #6, #2
9000747e:	f00a 08f8 	and.w	r8, sl, #248	; 0xf8
90007482:	b2c0      	uxtb	r0, r0
90007484:	ea41 010b 	orr.w	r1, r1, fp
90007488:	ea48 1a5a 	orr.w	sl, r8, sl, lsr #5
9000748c:	ea40 2101 	orr.w	r1, r0, r1, lsl #8
90007490:	ea41 1050 	orr.w	r0, r1, r0, lsr #5
90007494:	9909      	ldr	r1, [sp, #36]	; 0x24
90007496:	ea40 400a 	orr.w	r0, r0, sl, lsl #16
9000749a:	440b      	add	r3, r1
9000749c:	990a      	ldr	r1, [sp, #40]	; 0x28
9000749e:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
900074a2:	440e      	add	r6, r1
900074a4:	f844 0b04 	str.w	r0, [r4], #4
900074a8:	e7d0      	b.n	9000744c <EwWarpRGB565Row+0x10>

900074aa <EwWarpRGB565RowFilter>:
900074aa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900074ae:	461d      	mov	r5, r3
900074b0:	6803      	ldr	r3, [r0, #0]
900074b2:	680f      	ldr	r7, [r1, #0]
900074b4:	4614      	mov	r4, r2
900074b6:	9300      	str	r3, [sp, #0]
900074b8:	688b      	ldr	r3, [r1, #8]
900074ba:	105b      	asrs	r3, r3, #1
900074bc:	9301      	str	r3, [sp, #4]
900074be:	3301      	adds	r3, #1
900074c0:	005e      	lsls	r6, r3, #1
900074c2:	2c00      	cmp	r4, #0
900074c4:	dc02      	bgt.n	900074cc <EwWarpRGB565RowFilter+0x22>
900074c6:	b003      	add	sp, #12
900074c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900074cc:	132a      	asrs	r2, r5, #12
900074ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900074d0:	3c01      	subs	r4, #1
900074d2:	435a      	muls	r2, r3
900074d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900074d6:	1318      	asrs	r0, r3, #12
900074d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
900074da:	1312      	asrs	r2, r2, #12
900074dc:	4358      	muls	r0, r3
900074de:	9b01      	ldr	r3, [sp, #4]
900074e0:	3a08      	subs	r2, #8
900074e2:	1300      	asrs	r0, r0, #12
900074e4:	1111      	asrs	r1, r2, #4
900074e6:	f3c2 0242 	ubfx	r2, r2, #1, #3
900074ea:	3808      	subs	r0, #8
900074ec:	f1c2 0e08 	rsb	lr, r2, #8
900074f0:	ea4f 1c20 	mov.w	ip, r0, asr #4
900074f4:	f3c0 0042 	ubfx	r0, r0, #1, #3
900074f8:	fb03 110c 	mla	r1, r3, ip, r1
900074fc:	f1c0 0808 	rsb	r8, r0, #8
90007500:	fb00 fe0e 	mul.w	lr, r0, lr
90007504:	fb02 f808 	mul.w	r8, r2, r8
90007508:	eb07 0341 	add.w	r3, r7, r1, lsl #1
9000750c:	4342      	muls	r2, r0
9000750e:	f837 a011 	ldrh.w	sl, [r7, r1, lsl #1]
90007512:	8858      	ldrh	r0, [r3, #2]
90007514:	1999      	adds	r1, r3, r6
90007516:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
9000751a:	5b9b      	ldrh	r3, [r3, r6]
9000751c:	f831 9c02 	ldrh.w	r9, [r1, #-2]
90007520:	f420 61fc 	bic.w	r1, r0, #2016	; 0x7e0
90007524:	ebac 0c0e 	sub.w	ip, ip, lr
90007528:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000752c:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
90007530:	fb08 f101 	mul.w	r1, r8, r1
90007534:	ebac 0c02 	sub.w	ip, ip, r2
90007538:	fb08 f000 	mul.w	r0, r8, r0
9000753c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90007540:	fb0c 110b 	mla	r1, ip, fp, r1
90007544:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90007548:	fb0c 000a 	mla	r0, ip, sl, r0
9000754c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007550:	fb02 110b 	mla	r1, r2, fp, r1
90007554:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
90007558:	fb02 0003 	mla	r0, r2, r3, r0
9000755c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90007560:	fb0e 110b 	mla	r1, lr, fp, r1
90007564:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90007568:	fb0e 0009 	mla	r0, lr, r9, r0
9000756c:	9b00      	ldr	r3, [sp, #0]
9000756e:	ea0b 1191 	and.w	r1, fp, r1, lsr #6
90007572:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90007574:	ea4f 2e50 	mov.w	lr, r0, lsr #9
90007578:	ea4f 08c1 	mov.w	r8, r1, lsl #3
9000757c:	f00e 0bfc 	and.w	fp, lr, #252	; 0xfc
90007580:	f3ce 1e81 	ubfx	lr, lr, #6, #2
90007584:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
90007588:	ea4e 0e0b 	orr.w	lr, lr, fp
9000758c:	ea4f 3b51 	mov.w	fp, r1, lsr #13
90007590:	ea48 2e0e 	orr.w	lr, r8, lr, lsl #8
90007594:	ea4b 2111 	orr.w	r1, fp, r1, lsr #8
90007598:	ea4e 1858 	orr.w	r8, lr, r8, lsr #5
9000759c:	ea48 4801 	orr.w	r8, r8, r1, lsl #16
900075a0:	f048 417f 	orr.w	r1, r8, #4278190080	; 0xff000000
900075a4:	f843 1b04 	str.w	r1, [r3], #4
900075a8:	9300      	str	r3, [sp, #0]
900075aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900075ac:	441d      	add	r5, r3
900075ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900075b0:	4413      	add	r3, r2
900075b2:	930c      	str	r3, [sp, #48]	; 0x30
900075b4:	e785      	b.n	900074c2 <EwWarpRGB565RowFilter+0x18>

900075b6 <EwWarpRGB565RowGradient>:
900075b6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900075ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
900075bc:	6806      	ldr	r6, [r0, #0]
900075be:	6808      	ldr	r0, [r1, #0]
900075c0:	6889      	ldr	r1, [r1, #8]
900075c2:	6d25      	ldr	r5, [r4, #80]	; 0x50
900075c4:	ea4f 0a61 	mov.w	sl, r1, asr #1
900075c8:	6b21      	ldr	r1, [r4, #48]	; 0x30
900075ca:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900075ce:	1509      	asrs	r1, r1, #20
900075d0:	9001      	str	r0, [sp, #4]
900075d2:	3101      	adds	r1, #1
900075d4:	b94d      	cbnz	r5, 900075ea <EwWarpRGB565RowGradient+0x34>
900075d6:	6d65      	ldr	r5, [r4, #84]	; 0x54
900075d8:	fab5 f585 	clz	r5, r5
900075dc:	096d      	lsrs	r5, r5, #5
900075de:	4610      	mov	r0, r2
900075e0:	2800      	cmp	r0, #0
900075e2:	dc04      	bgt.n	900075ee <EwWarpRGB565RowGradient+0x38>
900075e4:	b003      	add	sp, #12
900075e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900075ea:	2500      	movs	r5, #0
900075ec:	e7f7      	b.n	900075de <EwWarpRGB565RowGradient+0x28>
900075ee:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900075f0:	131a      	asrs	r2, r3, #12
900075f2:	ea4f 3829 	mov.w	r8, r9, asr #12
900075f6:	437a      	muls	r2, r7
900075f8:	9f10      	ldr	r7, [sp, #64]	; 0x40
900075fa:	fb07 f808 	mul.w	r8, r7, r8
900075fe:	ea4f 4c22 	mov.w	ip, r2, asr #16
90007602:	ea4f 4828 	mov.w	r8, r8, asr #16
90007606:	fb08 f70a 	mul.w	r7, r8, sl
9000760a:	eb07 4222 	add.w	r2, r7, r2, asr #16
9000760e:	9f01      	ldr	r7, [sp, #4]
90007610:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90007614:	bb25      	cbnz	r5, 90007660 <EwWarpRGB565RowGradient+0xaa>
90007616:	6d27      	ldr	r7, [r4, #80]	; 0x50
90007618:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000761a:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
9000761e:	b16f      	cbz	r7, 9000763c <EwWarpRGB565RowGradient+0x86>
90007620:	f1b8 0f00 	cmp.w	r8, #0
90007624:	d002      	beq.n	9000762c <EwWarpRGB565RowGradient+0x76>
90007626:	6b67      	ldr	r7, [r4, #52]	; 0x34
90007628:	fb07 1108 	mla	r1, r7, r8, r1
9000762c:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000762e:	b12f      	cbz	r7, 9000763c <EwWarpRGB565RowGradient+0x86>
90007630:	f1b8 0f00 	cmp.w	r8, #0
90007634:	d002      	beq.n	9000763c <EwWarpRGB565RowGradient+0x86>
90007636:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90007638:	fb07 ee08 	mla	lr, r7, r8, lr
9000763c:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000763e:	b167      	cbz	r7, 9000765a <EwWarpRGB565RowGradient+0xa4>
90007640:	f1bc 0f00 	cmp.w	ip, #0
90007644:	d009      	beq.n	9000765a <EwWarpRGB565RowGradient+0xa4>
90007646:	150f      	asrs	r7, r1, #20
90007648:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9000764c:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
90007650:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90007652:	fb07 fe0e 	mul.w	lr, r7, lr
90007656:	fb0c 110e 	mla	r1, ip, lr, r1
9000765a:	f3c1 5107 	ubfx	r1, r1, #20, #8
9000765e:	3101      	adds	r1, #1
90007660:	b1ca      	cbz	r2, 90007696 <EwWarpRGB565RowGradient+0xe0>
90007662:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90007666:	08d7      	lsrs	r7, r2, #3
90007668:	00d2      	lsls	r2, r2, #3
9000766a:	f00c 08f8 	and.w	r8, ip, #248	; 0xf8
9000766e:	f3cc 1c42 	ubfx	ip, ip, #5, #3
90007672:	f007 0efc 	and.w	lr, r7, #252	; 0xfc
90007676:	fa5f fb82 	uxtb.w	fp, r2
9000767a:	f3c2 1242 	ubfx	r2, r2, #5, #3
9000767e:	ea4c 0c08 	orr.w	ip, ip, r8
90007682:	f3c7 1781 	ubfx	r7, r7, #6, #2
90007686:	ea42 020b 	orr.w	r2, r2, fp
9000768a:	ea47 070e 	orr.w	r7, r7, lr
9000768e:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
90007692:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90007696:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
9000769a:	3801      	subs	r0, #1
9000769c:	f846 2b04 	str.w	r2, [r6], #4
900076a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900076a2:	4413      	add	r3, r2
900076a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900076a6:	4491      	add	r9, r2
900076a8:	e79a      	b.n	900075e0 <EwWarpRGB565RowGradient+0x2a>

900076aa <EwWarpRGB565RowFilterGradient>:
900076aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900076ae:	6800      	ldr	r0, [r0, #0]
900076b0:	b087      	sub	sp, #28
900076b2:	9002      	str	r0, [sp, #8]
900076b4:	6808      	ldr	r0, [r1, #0]
900076b6:	6889      	ldr	r1, [r1, #8]
900076b8:	9d15      	ldr	r5, [sp, #84]	; 0x54
900076ba:	1049      	asrs	r1, r1, #1
900076bc:	9004      	str	r0, [sp, #16]
900076be:	6d28      	ldr	r0, [r5, #80]	; 0x50
900076c0:	9105      	str	r1, [sp, #20]
900076c2:	6b29      	ldr	r1, [r5, #48]	; 0x30
900076c4:	9301      	str	r3, [sp, #4]
900076c6:	1509      	asrs	r1, r1, #20
900076c8:	3101      	adds	r1, #1
900076ca:	b970      	cbnz	r0, 900076ea <EwWarpRGB565RowFilterGradient+0x40>
900076cc:	6d6f      	ldr	r7, [r5, #84]	; 0x54
900076ce:	fab7 f787 	clz	r7, r7
900076d2:	097f      	lsrs	r7, r7, #5
900076d4:	9805      	ldr	r0, [sp, #20]
900076d6:	9200      	str	r2, [sp, #0]
900076d8:	3001      	adds	r0, #1
900076da:	0040      	lsls	r0, r0, #1
900076dc:	9003      	str	r0, [sp, #12]
900076de:	9b00      	ldr	r3, [sp, #0]
900076e0:	2b00      	cmp	r3, #0
900076e2:	dc04      	bgt.n	900076ee <EwWarpRGB565RowFilterGradient+0x44>
900076e4:	b007      	add	sp, #28
900076e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900076ea:	2700      	movs	r7, #0
900076ec:	e7f2      	b.n	900076d4 <EwWarpRGB565RowFilterGradient+0x2a>
900076ee:	9810      	ldr	r0, [sp, #64]	; 0x40
900076f0:	9b01      	ldr	r3, [sp, #4]
900076f2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900076f4:	ea4f 3e20 	mov.w	lr, r0, asr #12
900076f8:	131e      	asrs	r6, r3, #12
900076fa:	9814      	ldr	r0, [sp, #80]	; 0x50
900076fc:	4356      	muls	r6, r2
900076fe:	fb00 fe0e 	mul.w	lr, r0, lr
90007702:	1332      	asrs	r2, r6, #12
90007704:	ea4f 302e 	mov.w	r0, lr, asr #12
90007708:	bb0f      	cbnz	r7, 9000774e <EwWarpRGB565RowFilterGradient+0xa4>
9000770a:	6d2c      	ldr	r4, [r5, #80]	; 0x50
9000770c:	6b29      	ldr	r1, [r5, #48]	; 0x30
9000770e:	f8d5 c038 	ldr.w	ip, [r5, #56]	; 0x38
90007712:	b15c      	cbz	r4, 9000772c <EwWarpRGB565RowFilterGradient+0x82>
90007714:	ea5f 442e 	movs.w	r4, lr, asr #16
90007718:	d002      	beq.n	90007720 <EwWarpRGB565RowFilterGradient+0x76>
9000771a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
9000771c:	fb03 1104 	mla	r1, r3, r4, r1
90007720:	6d6b      	ldr	r3, [r5, #84]	; 0x54
90007722:	b11b      	cbz	r3, 9000772c <EwWarpRGB565RowFilterGradient+0x82>
90007724:	b114      	cbz	r4, 9000772c <EwWarpRGB565RowFilterGradient+0x82>
90007726:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90007728:	fb03 cc04 	mla	ip, r3, r4, ip
9000772c:	6d6c      	ldr	r4, [r5, #84]	; 0x54
9000772e:	b15c      	cbz	r4, 90007748 <EwWarpRGB565RowFilterGradient+0x9e>
90007730:	1436      	asrs	r6, r6, #16
90007732:	d009      	beq.n	90007748 <EwWarpRGB565RowFilterGradient+0x9e>
90007734:	150c      	asrs	r4, r1, #20
90007736:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9000773a:	ebc4 5c2c 	rsb	ip, r4, ip, asr #20
9000773e:	6cac      	ldr	r4, [r5, #72]	; 0x48
90007740:	fb04 fc0c 	mul.w	ip, r4, ip
90007744:	fb06 110c 	mla	r1, r6, ip, r1
90007748:	f3c1 5107 	ubfx	r1, r1, #20, #8
9000774c:	3101      	adds	r1, #1
9000774e:	f1a2 0408 	sub.w	r4, r2, #8
90007752:	3808      	subs	r0, #8
90007754:	9b05      	ldr	r3, [sp, #20]
90007756:	1102      	asrs	r2, r0, #4
90007758:	f3c0 0042 	ubfx	r0, r0, #1, #3
9000775c:	1126      	asrs	r6, r4, #4
9000775e:	f3c4 0442 	ubfx	r4, r4, #1, #3
90007762:	f1c0 0808 	rsb	r8, r0, #8
90007766:	fb03 6602 	mla	r6, r3, r2, r6
9000776a:	9b04      	ldr	r3, [sp, #16]
9000776c:	fb04 f808 	mul.w	r8, r4, r8
90007770:	f1c4 0e08 	rsb	lr, r4, #8
90007774:	eb03 0c46 	add.w	ip, r3, r6, lsl #1
90007778:	f833 a016 	ldrh.w	sl, [r3, r6, lsl #1]
9000777c:	9b03      	ldr	r3, [sp, #12]
9000777e:	fb00 fe0e 	mul.w	lr, r0, lr
90007782:	4344      	muls	r4, r0
90007784:	f8bc 6002 	ldrh.w	r6, [ip, #2]
90007788:	eb0c 0003 	add.w	r0, ip, r3
9000778c:	f83c 2003 	ldrh.w	r2, [ip, r3]
90007790:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
90007794:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
90007798:	f830 9c02 	ldrh.w	r9, [r0, #-2]
9000779c:	f426 60fc 	bic.w	r0, r6, #2016	; 0x7e0
900077a0:	ebac 0c0e 	sub.w	ip, ip, lr
900077a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
900077a8:	fb08 f000 	mul.w	r0, r8, r0
900077ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900077b0:	ebac 0c04 	sub.w	ip, ip, r4
900077b4:	fb08 f606 	mul.w	r6, r8, r6
900077b8:	f64f 031f 	movw	r3, #63519	; 0xf81f
900077bc:	fb0c 000b 	mla	r0, ip, fp, r0
900077c0:	f422 6bfc 	bic.w	fp, r2, #2016	; 0x7e0
900077c4:	fb0c 660a 	mla	r6, ip, sl, r6
900077c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900077cc:	fb04 000b 	mla	r0, r4, fp, r0
900077d0:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
900077d4:	fb04 6602 	mla	r6, r4, r2, r6
900077d8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900077dc:	fb0e 000b 	mla	r0, lr, fp, r0
900077e0:	fb0e 6e09 	mla	lr, lr, r9, r6
900077e4:	ea03 1090 	and.w	r0, r3, r0, lsr #6
900077e8:	ea4f 1e9e 	mov.w	lr, lr, lsr #6
900077ec:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900077f0:	ea50 000e 	orrs.w	r0, r0, lr
900077f4:	d016      	beq.n	90007824 <EwWarpRGB565RowFilterGradient+0x17a>
900077f6:	0a06      	lsrs	r6, r0, #8
900077f8:	08c2      	lsrs	r2, r0, #3
900077fa:	00c0      	lsls	r0, r0, #3
900077fc:	f006 04f8 	and.w	r4, r6, #248	; 0xf8
90007800:	f002 0cfc 	and.w	ip, r2, #252	; 0xfc
90007804:	f3c2 1281 	ubfx	r2, r2, #6, #2
90007808:	fa5f fe80 	uxtb.w	lr, r0
9000780c:	f3c0 1042 	ubfx	r0, r0, #5, #3
90007810:	ea44 1456 	orr.w	r4, r4, r6, lsr #5
90007814:	ea42 020c 	orr.w	r2, r2, ip
90007818:	ea40 000e 	orr.w	r0, r0, lr
9000781c:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
90007820:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
90007824:	9b02      	ldr	r3, [sp, #8]
90007826:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
9000782a:	9a01      	ldr	r2, [sp, #4]
9000782c:	f843 0b04 	str.w	r0, [r3], #4
90007830:	9302      	str	r3, [sp, #8]
90007832:	9b11      	ldr	r3, [sp, #68]	; 0x44
90007834:	441a      	add	r2, r3
90007836:	9b10      	ldr	r3, [sp, #64]	; 0x40
90007838:	9201      	str	r2, [sp, #4]
9000783a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9000783c:	4413      	add	r3, r2
9000783e:	9310      	str	r3, [sp, #64]	; 0x40
90007840:	9b00      	ldr	r3, [sp, #0]
90007842:	3b01      	subs	r3, #1
90007844:	9300      	str	r3, [sp, #0]
90007846:	e74a      	b.n	900076de <EwWarpRGB565RowFilterGradient+0x34>

90007848 <EwWarpRGB565RowGradientBlend>:
90007848:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000784c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9000784e:	6806      	ldr	r6, [r0, #0]
90007850:	6808      	ldr	r0, [r1, #0]
90007852:	6889      	ldr	r1, [r1, #8]
90007854:	6d25      	ldr	r5, [r4, #80]	; 0x50
90007856:	ea4f 0961 	mov.w	r9, r1, asr #1
9000785a:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000785c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
90007860:	1509      	asrs	r1, r1, #20
90007862:	9300      	str	r3, [sp, #0]
90007864:	9001      	str	r0, [sp, #4]
90007866:	3101      	adds	r1, #1
90007868:	b94d      	cbnz	r5, 9000787e <EwWarpRGB565RowGradientBlend+0x36>
9000786a:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000786c:	fab5 f585 	clz	r5, r5
90007870:	096d      	lsrs	r5, r5, #5
90007872:	4610      	mov	r0, r2
90007874:	2800      	cmp	r0, #0
90007876:	dc04      	bgt.n	90007882 <EwWarpRGB565RowGradientBlend+0x3a>
90007878:	b003      	add	sp, #12
9000787a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000787e:	2500      	movs	r5, #0
90007880:	e7f7      	b.n	90007872 <EwWarpRGB565RowGradientBlend+0x2a>
90007882:	9b00      	ldr	r3, [sp, #0]
90007884:	ea4f 382a 	mov.w	r8, sl, asr #12
90007888:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9000788a:	131a      	asrs	r2, r3, #12
9000788c:	437a      	muls	r2, r7
9000788e:	9f10      	ldr	r7, [sp, #64]	; 0x40
90007890:	fb07 f808 	mul.w	r8, r7, r8
90007894:	ea4f 4c22 	mov.w	ip, r2, asr #16
90007898:	ea4f 4828 	mov.w	r8, r8, asr #16
9000789c:	fb08 f709 	mul.w	r7, r8, r9
900078a0:	eb07 4222 	add.w	r2, r7, r2, asr #16
900078a4:	9f01      	ldr	r7, [sp, #4]
900078a6:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
900078aa:	bb25      	cbnz	r5, 900078f6 <EwWarpRGB565RowGradientBlend+0xae>
900078ac:	6d27      	ldr	r7, [r4, #80]	; 0x50
900078ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
900078b0:	f8d4 e038 	ldr.w	lr, [r4, #56]	; 0x38
900078b4:	b16f      	cbz	r7, 900078d2 <EwWarpRGB565RowGradientBlend+0x8a>
900078b6:	f1b8 0f00 	cmp.w	r8, #0
900078ba:	d002      	beq.n	900078c2 <EwWarpRGB565RowGradientBlend+0x7a>
900078bc:	6b67      	ldr	r7, [r4, #52]	; 0x34
900078be:	fb07 1108 	mla	r1, r7, r8, r1
900078c2:	6d67      	ldr	r7, [r4, #84]	; 0x54
900078c4:	b12f      	cbz	r7, 900078d2 <EwWarpRGB565RowGradientBlend+0x8a>
900078c6:	f1b8 0f00 	cmp.w	r8, #0
900078ca:	d002      	beq.n	900078d2 <EwWarpRGB565RowGradientBlend+0x8a>
900078cc:	6be7      	ldr	r7, [r4, #60]	; 0x3c
900078ce:	fb07 ee08 	mla	lr, r7, r8, lr
900078d2:	6d67      	ldr	r7, [r4, #84]	; 0x54
900078d4:	b167      	cbz	r7, 900078f0 <EwWarpRGB565RowGradientBlend+0xa8>
900078d6:	f1bc 0f00 	cmp.w	ip, #0
900078da:	d009      	beq.n	900078f0 <EwWarpRGB565RowGradientBlend+0xa8>
900078dc:	150f      	asrs	r7, r1, #20
900078de:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
900078e2:	ebc7 5e2e 	rsb	lr, r7, lr, asr #20
900078e6:	6ca7      	ldr	r7, [r4, #72]	; 0x48
900078e8:	fb07 fe0e 	mul.w	lr, r7, lr
900078ec:	fb0c 110e 	mla	r1, ip, lr, r1
900078f0:	f3c1 5107 	ubfx	r1, r1, #20, #8
900078f4:	3101      	adds	r1, #1
900078f6:	ea4f 2e12 	mov.w	lr, r2, lsr #8
900078fa:	08d7      	lsrs	r7, r2, #3
900078fc:	00d2      	lsls	r2, r2, #3
900078fe:	f00e 0cf8 	and.w	ip, lr, #248	; 0xf8
90007902:	f007 08fc 	and.w	r8, r7, #252	; 0xfc
90007906:	f3c7 1781 	ubfx	r7, r7, #6, #2
9000790a:	fa5f fb82 	uxtb.w	fp, r2
9000790e:	f3c2 1242 	ubfx	r2, r2, #5, #3
90007912:	ea4c 1c5e 	orr.w	ip, ip, lr, lsr #5
90007916:	ea47 0708 	orr.w	r7, r7, r8
9000791a:	ea42 020b 	orr.w	r2, r2, fp
9000791e:	f8d6 8000 	ldr.w	r8, [r6]
90007922:	ea42 4c0c 	orr.w	ip, r2, ip, lsl #16
90007926:	ea4c 2e07 	orr.w	lr, ip, r7, lsl #8
9000792a:	f00c 17ff 	and.w	r7, ip, #16711935	; 0xff00ff
9000792e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
90007932:	434f      	muls	r7, r1
90007934:	ea5f 6e18 	movs.w	lr, r8, lsr #24
90007938:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9000793c:	fb0c fc01 	mul.w	ip, ip, r1
90007940:	d036      	beq.n	900079b0 <EwWarpRGB565RowGradientBlend+0x168>
90007942:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
90007946:	fb0e 2202 	mla	r2, lr, r2, r2
9000794a:	f008 1eff 	and.w	lr, r8, #16711935	; 0xff00ff
9000794e:	f3c8 2807 	ubfx	r8, r8, #8, #8
90007952:	0a12      	lsrs	r2, r2, #8
90007954:	fb02 770e 	mla	r7, r2, lr, r7
90007958:	fb02 cc08 	mla	ip, r2, r8, ip
9000795c:	440a      	add	r2, r1
9000795e:	0a3f      	lsrs	r7, r7, #8
90007960:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90007964:	b182      	cbz	r2, 90007988 <EwWarpRGB565RowGradientBlend+0x140>
90007966:	3a01      	subs	r2, #1
90007968:	2afe      	cmp	r2, #254	; 0xfe
9000796a:	d80d      	bhi.n	90007988 <EwWarpRGB565RowGradientBlend+0x140>
9000796c:	4b11      	ldr	r3, [pc, #68]	; (900079b4 <EwWarpRGB565RowGradientBlend+0x16c>)
9000796e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90007972:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90007976:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
9000797a:	fb0e f707 	mul.w	r7, lr, r7
9000797e:	fb0e fc0c 	mul.w	ip, lr, ip
90007982:	0a3f      	lsrs	r7, r7, #8
90007984:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90007988:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9000798c:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
90007990:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90007992:	3801      	subs	r0, #1
90007994:	ea47 6702 	orr.w	r7, r7, r2, lsl #24
90007998:	f00c 2cff 	and.w	ip, ip, #4278255360	; 0xff00ff00
9000799c:	9a00      	ldr	r2, [sp, #0]
9000799e:	ea47 070c 	orr.w	r7, r7, ip
900079a2:	441a      	add	r2, r3
900079a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900079a6:	f846 7b04 	str.w	r7, [r6], #4
900079aa:	449a      	add	sl, r3
900079ac:	9200      	str	r2, [sp, #0]
900079ae:	e761      	b.n	90007874 <EwWarpRGB565RowGradientBlend+0x2c>
900079b0:	460a      	mov	r2, r1
900079b2:	e7d4      	b.n	9000795e <EwWarpRGB565RowGradientBlend+0x116>
900079b4:	9002fa7c 	.word	0x9002fa7c

900079b8 <EwWarpRGB565RowFilterGradientBlend>:
900079b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900079bc:	b087      	sub	sp, #28
900079be:	9302      	str	r3, [sp, #8]
900079c0:	6803      	ldr	r3, [r0, #0]
900079c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
900079c4:	9300      	str	r3, [sp, #0]
900079c6:	680b      	ldr	r3, [r1, #0]
900079c8:	9304      	str	r3, [sp, #16]
900079ca:	688b      	ldr	r3, [r1, #8]
900079cc:	6b21      	ldr	r1, [r4, #48]	; 0x30
900079ce:	105b      	asrs	r3, r3, #1
900079d0:	1509      	asrs	r1, r1, #20
900079d2:	9305      	str	r3, [sp, #20]
900079d4:	6d23      	ldr	r3, [r4, #80]	; 0x50
900079d6:	3101      	adds	r1, #1
900079d8:	b973      	cbnz	r3, 900079f8 <EwWarpRGB565RowFilterGradientBlend+0x40>
900079da:	6d67      	ldr	r7, [r4, #84]	; 0x54
900079dc:	fab7 f787 	clz	r7, r7
900079e0:	097f      	lsrs	r7, r7, #5
900079e2:	9b05      	ldr	r3, [sp, #20]
900079e4:	9201      	str	r2, [sp, #4]
900079e6:	3301      	adds	r3, #1
900079e8:	005b      	lsls	r3, r3, #1
900079ea:	9303      	str	r3, [sp, #12]
900079ec:	9b01      	ldr	r3, [sp, #4]
900079ee:	2b00      	cmp	r3, #0
900079f0:	dc04      	bgt.n	900079fc <EwWarpRGB565RowFilterGradientBlend+0x44>
900079f2:	b007      	add	sp, #28
900079f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900079f8:	2700      	movs	r7, #0
900079fa:	e7f2      	b.n	900079e2 <EwWarpRGB565RowFilterGradientBlend+0x2a>
900079fc:	9b02      	ldr	r3, [sp, #8]
900079fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
90007a00:	131d      	asrs	r5, r3, #12
90007a02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90007a04:	ea4f 3e22 	mov.w	lr, r2, asr #12
90007a08:	9a14      	ldr	r2, [sp, #80]	; 0x50
90007a0a:	435d      	muls	r5, r3
90007a0c:	fb02 fe0e 	mul.w	lr, r2, lr
90007a10:	132b      	asrs	r3, r5, #12
90007a12:	ea4f 322e 	mov.w	r2, lr, asr #12
90007a16:	bb0f      	cbnz	r7, 90007a5c <EwWarpRGB565RowFilterGradientBlend+0xa4>
90007a18:	6d20      	ldr	r0, [r4, #80]	; 0x50
90007a1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
90007a1c:	f8d4 c038 	ldr.w	ip, [r4, #56]	; 0x38
90007a20:	b158      	cbz	r0, 90007a3a <EwWarpRGB565RowFilterGradientBlend+0x82>
90007a22:	ea5f 402e 	movs.w	r0, lr, asr #16
90007a26:	d002      	beq.n	90007a2e <EwWarpRGB565RowFilterGradientBlend+0x76>
90007a28:	6b66      	ldr	r6, [r4, #52]	; 0x34
90007a2a:	fb06 1100 	mla	r1, r6, r0, r1
90007a2e:	6d66      	ldr	r6, [r4, #84]	; 0x54
90007a30:	b11e      	cbz	r6, 90007a3a <EwWarpRGB565RowFilterGradientBlend+0x82>
90007a32:	b110      	cbz	r0, 90007a3a <EwWarpRGB565RowFilterGradientBlend+0x82>
90007a34:	6be6      	ldr	r6, [r4, #60]	; 0x3c
90007a36:	fb06 cc00 	mla	ip, r6, r0, ip
90007a3a:	6d60      	ldr	r0, [r4, #84]	; 0x54
90007a3c:	b158      	cbz	r0, 90007a56 <EwWarpRGB565RowFilterGradientBlend+0x9e>
90007a3e:	142d      	asrs	r5, r5, #16
90007a40:	d009      	beq.n	90007a56 <EwWarpRGB565RowFilterGradientBlend+0x9e>
90007a42:	1508      	asrs	r0, r1, #20
90007a44:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90007a48:	ebc0 5c2c 	rsb	ip, r0, ip, asr #20
90007a4c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
90007a4e:	fb00 fc0c 	mul.w	ip, r0, ip
90007a52:	fb05 110c 	mla	r1, r5, ip, r1
90007a56:	f3c1 5107 	ubfx	r1, r1, #20, #8
90007a5a:	3101      	adds	r1, #1
90007a5c:	f1a3 0008 	sub.w	r0, r3, #8
90007a60:	3a08      	subs	r2, #8
90007a62:	9e05      	ldr	r6, [sp, #20]
90007a64:	1113      	asrs	r3, r2, #4
90007a66:	f3c2 0242 	ubfx	r2, r2, #1, #3
90007a6a:	1105      	asrs	r5, r0, #4
90007a6c:	f3c0 0042 	ubfx	r0, r0, #1, #3
90007a70:	f1c2 0808 	rsb	r8, r2, #8
90007a74:	fb06 5503 	mla	r5, r6, r3, r5
90007a78:	9b04      	ldr	r3, [sp, #16]
90007a7a:	fb00 f808 	mul.w	r8, r0, r8
90007a7e:	f1c0 0e08 	rsb	lr, r0, #8
90007a82:	eb03 0c45 	add.w	ip, r3, r5, lsl #1
90007a86:	f833 a015 	ldrh.w	sl, [r3, r5, lsl #1]
90007a8a:	9b03      	ldr	r3, [sp, #12]
90007a8c:	fb02 fe0e 	mul.w	lr, r2, lr
90007a90:	4350      	muls	r0, r2
90007a92:	f8bc 5002 	ldrh.w	r5, [ip, #2]
90007a96:	eb0c 0203 	add.w	r2, ip, r3
90007a9a:	f83c 3003 	ldrh.w	r3, [ip, r3]
90007a9e:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
90007aa2:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
90007aa6:	f832 9c02 	ldrh.w	r9, [r2, #-2]
90007aaa:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90007aae:	ebac 0c0e 	sub.w	ip, ip, lr
90007ab2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90007ab6:	fb08 f202 	mul.w	r2, r8, r2
90007aba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90007abe:	ebac 0c00 	sub.w	ip, ip, r0
90007ac2:	fb08 f505 	mul.w	r5, r8, r5
90007ac6:	f64f 061f 	movw	r6, #63519	; 0xf81f
90007aca:	fb0c 220b 	mla	r2, ip, fp, r2
90007ace:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
90007ad2:	fb0c 550a 	mla	r5, ip, sl, r5
90007ad6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007ada:	fb00 220b 	mla	r2, r0, fp, r2
90007ade:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
90007ae2:	fb00 5503 	mla	r5, r0, r3, r5
90007ae6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90007aea:	fb0e 220b 	mla	r2, lr, fp, r2
90007aee:	fb0e 5509 	mla	r5, lr, r9, r5
90007af2:	ea06 1292 	and.w	r2, r6, r2, lsr #6
90007af6:	ea4f 2e55 	mov.w	lr, r5, lsr #9
90007afa:	00d3      	lsls	r3, r2, #3
90007afc:	ea4f 3b52 	mov.w	fp, r2, lsr #13
90007b00:	f00e 08fc 	and.w	r8, lr, #252	; 0xfc
90007b04:	f003 00f8 	and.w	r0, r3, #248	; 0xf8
90007b08:	f3c3 1342 	ubfx	r3, r3, #5, #3
90007b0c:	ea4b 2b12 	orr.w	fp, fp, r2, lsr #8
90007b10:	f3ce 1e81 	ubfx	lr, lr, #6, #2
90007b14:	4303      	orrs	r3, r0
90007b16:	ea4e 0e08 	orr.w	lr, lr, r8
90007b1a:	ea43 4b0b 	orr.w	fp, r3, fp, lsl #16
90007b1e:	9b00      	ldr	r3, [sp, #0]
90007b20:	ea4b 200e 	orr.w	r0, fp, lr, lsl #8
90007b24:	681d      	ldr	r5, [r3, #0]
90007b26:	f00b 12ff 	and.w	r2, fp, #16711935	; 0xff00ff
90007b2a:	0a00      	lsrs	r0, r0, #8
90007b2c:	ea5f 6c15 	movs.w	ip, r5, lsr #24
90007b30:	fb01 f202 	mul.w	r2, r1, r2
90007b34:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90007b38:	fb01 f000 	mul.w	r0, r1, r0
90007b3c:	d036      	beq.n	90007bac <EwWarpRGB565RowFilterGradientBlend+0x1f4>
90007b3e:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
90007b42:	fb0c 3303 	mla	r3, ip, r3, r3
90007b46:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90007b4a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90007b4e:	0a1b      	lsrs	r3, r3, #8
90007b50:	fb03 220c 	mla	r2, r3, ip, r2
90007b54:	fb03 0005 	mla	r0, r3, r5, r0
90007b58:	440b      	add	r3, r1
90007b5a:	0a12      	lsrs	r2, r2, #8
90007b5c:	0a00      	lsrs	r0, r0, #8
90007b5e:	b16b      	cbz	r3, 90007b7c <EwWarpRGB565RowFilterGradientBlend+0x1c4>
90007b60:	3b01      	subs	r3, #1
90007b62:	2bfe      	cmp	r3, #254	; 0xfe
90007b64:	d80a      	bhi.n	90007b7c <EwWarpRGB565RowFilterGradientBlend+0x1c4>
90007b66:	4d12      	ldr	r5, [pc, #72]	; (90007bb0 <EwWarpRGB565RowFilterGradientBlend+0x1f8>)
90007b68:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90007b6c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90007b70:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
90007b74:	436a      	muls	r2, r5
90007b76:	4368      	muls	r0, r5
90007b78:	0a12      	lsrs	r2, r2, #8
90007b7a:	0a00      	lsrs	r0, r0, #8
90007b7c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90007b80:	0200      	lsls	r0, r0, #8
90007b82:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
90007b86:	f000 20ff 	and.w	r0, r0, #4278255360	; 0xff00ff00
90007b8a:	9b00      	ldr	r3, [sp, #0]
90007b8c:	4302      	orrs	r2, r0
90007b8e:	f843 2b04 	str.w	r2, [r3], #4
90007b92:	9a11      	ldr	r2, [sp, #68]	; 0x44
90007b94:	9300      	str	r3, [sp, #0]
90007b96:	9b02      	ldr	r3, [sp, #8]
90007b98:	4413      	add	r3, r2
90007b9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
90007b9c:	9302      	str	r3, [sp, #8]
90007b9e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90007ba0:	4413      	add	r3, r2
90007ba2:	9310      	str	r3, [sp, #64]	; 0x40
90007ba4:	9b01      	ldr	r3, [sp, #4]
90007ba6:	3b01      	subs	r3, #1
90007ba8:	9301      	str	r3, [sp, #4]
90007baa:	e71f      	b.n	900079ec <EwWarpRGB565RowFilterGradientBlend+0x34>
90007bac:	460b      	mov	r3, r1
90007bae:	e7d4      	b.n	90007b5a <EwWarpRGB565RowFilterGradientBlend+0x1a2>
90007bb0:	9002fa7c 	.word	0x9002fa7c

90007bb4 <EwScreenSetPixelSolid>:
90007bb4:	b530      	push	{r4, r5, lr}
90007bb6:	681c      	ldr	r4, [r3, #0]
90007bb8:	0049      	lsls	r1, r1, #1
90007bba:	691d      	ldr	r5, [r3, #16]
90007bbc:	0924      	lsrs	r4, r4, #4
90007bbe:	0b2d      	lsrs	r5, r5, #12
90007bc0:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
90007bc4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90007bc8:	432c      	orrs	r4, r5
90007bca:	6a1d      	ldr	r5, [r3, #32]
90007bcc:	f3c5 5507 	ubfx	r5, r5, #20, #8
90007bd0:	432c      	orrs	r4, r5
90007bd2:	6b1d      	ldr	r5, [r3, #48]	; 0x30
90007bd4:	012d      	lsls	r5, r5, #4
90007bd6:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90007bda:	ea44 0305 	orr.w	r3, r4, r5
90007bde:	6884      	ldr	r4, [r0, #8]
90007be0:	0ead      	lsrs	r5, r5, #26
90007be2:	6800      	ldr	r0, [r0, #0]
90007be4:	fb04 1202 	mla	r2, r4, r2, r1
90007be8:	d015      	beq.n	90007c16 <EwScreenSetPixelSolid+0x62>
90007bea:	0a19      	lsrs	r1, r3, #8
90007bec:	f3c3 04c4 	ubfx	r4, r3, #3, #5
90007bf0:	095b      	lsrs	r3, r3, #5
90007bf2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90007bf6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007bfa:	4321      	orrs	r1, r4
90007bfc:	fb05 3303 	mla	r3, r5, r3, r3
90007c00:	fb05 1101 	mla	r1, r5, r1, r1
90007c04:	099b      	lsrs	r3, r3, #6
90007c06:	0989      	lsrs	r1, r1, #6
90007c08:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007c0c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90007c10:	ea41 0503 	orr.w	r5, r1, r3
90007c14:	b2ad      	uxth	r5, r5
90007c16:	5285      	strh	r5, [r0, r2]
90007c18:	bd30      	pop	{r4, r5, pc}

90007c1a <EwScreenSetPixelSolidBlend>:
90007c1a:	b5f0      	push	{r4, r5, r6, r7, lr}
90007c1c:	681c      	ldr	r4, [r3, #0]
90007c1e:	691d      	ldr	r5, [r3, #16]
90007c20:	0924      	lsrs	r4, r4, #4
90007c22:	0b2d      	lsrs	r5, r5, #12
90007c24:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
90007c28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90007c2c:	432c      	orrs	r4, r5
90007c2e:	6a1d      	ldr	r5, [r3, #32]
90007c30:	f3c5 5507 	ubfx	r5, r5, #20, #8
90007c34:	432c      	orrs	r4, r5
90007c36:	6b1d      	ldr	r5, [r3, #48]	; 0x30
90007c38:	012d      	lsls	r5, r5, #4
90007c3a:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90007c3e:	ea44 0305 	orr.w	r3, r4, r5
90007c42:	0eac      	lsrs	r4, r5, #26
90007c44:	d02a      	beq.n	90007c9c <EwScreenSetPixelSolidBlend+0x82>
90007c46:	6885      	ldr	r5, [r0, #8]
90007c48:	0049      	lsls	r1, r1, #1
90007c4a:	2c3f      	cmp	r4, #63	; 0x3f
90007c4c:	6800      	ldr	r0, [r0, #0]
90007c4e:	fb05 1102 	mla	r1, r5, r2, r1
90007c52:	ea4f 2213 	mov.w	r2, r3, lsr #8
90007c56:	f3c3 05c4 	ubfx	r5, r3, #3, #5
90007c5a:	ea4f 1353 	mov.w	r3, r3, lsr #5
90007c5e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90007c62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007c66:	ea42 0205 	orr.w	r2, r2, r5
90007c6a:	d015      	beq.n	90007c98 <EwScreenSetPixelSolidBlend+0x7e>
90007c6c:	5a45      	ldrh	r5, [r0, r1]
90007c6e:	f1c4 063f 	rsb	r6, r4, #63	; 0x3f
90007c72:	fb04 3303 	mla	r3, r4, r3, r3
90007c76:	f425 67fc 	bic.w	r7, r5, #2016	; 0x7e0
90007c7a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90007c7e:	fb04 2202 	mla	r2, r4, r2, r2
90007c82:	f64f 041f 	movw	r4, #63519	; 0xf81f
90007c86:	fb06 3305 	mla	r3, r6, r5, r3
90007c8a:	fb06 2207 	mla	r2, r6, r7, r2
90007c8e:	099b      	lsrs	r3, r3, #6
90007c90:	ea04 1292 	and.w	r2, r4, r2, lsr #6
90007c94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007c98:	4313      	orrs	r3, r2
90007c9a:	5243      	strh	r3, [r0, r1]
90007c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

90007c9e <EwScreenFillRowSolid>:
90007c9e:	6813      	ldr	r3, [r2, #0]
90007ca0:	b530      	push	{r4, r5, lr}
90007ca2:	6914      	ldr	r4, [r2, #16]
90007ca4:	091b      	lsrs	r3, r3, #4
90007ca6:	0b24      	lsrs	r4, r4, #12
90007ca8:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90007cac:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90007cb0:	4323      	orrs	r3, r4
90007cb2:	6a14      	ldr	r4, [r2, #32]
90007cb4:	6b12      	ldr	r2, [r2, #48]	; 0x30
90007cb6:	f3c4 5407 	ubfx	r4, r4, #20, #8
90007cba:	0112      	lsls	r2, r2, #4
90007cbc:	4323      	orrs	r3, r4
90007cbe:	6804      	ldr	r4, [r0, #0]
90007cc0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
90007cc4:	4313      	orrs	r3, r2
90007cc6:	0e92      	lsrs	r2, r2, #26
90007cc8:	d014      	beq.n	90007cf4 <EwScreenFillRowSolid+0x56>
90007cca:	0a18      	lsrs	r0, r3, #8
90007ccc:	f3c3 05c4 	ubfx	r5, r3, #3, #5
90007cd0:	095b      	lsrs	r3, r3, #5
90007cd2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90007cd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007cda:	4328      	orrs	r0, r5
90007cdc:	fb02 3303 	mla	r3, r2, r3, r3
90007ce0:	fb02 0000 	mla	r0, r2, r0, r0
90007ce4:	099b      	lsrs	r3, r3, #6
90007ce6:	0980      	lsrs	r0, r0, #6
90007ce8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007cec:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90007cf0:	4303      	orrs	r3, r0
90007cf2:	b29a      	uxth	r2, r3
90007cf4:	07a0      	lsls	r0, r4, #30
90007cf6:	d004      	beq.n	90007d02 <EwScreenFillRowSolid+0x64>
90007cf8:	2900      	cmp	r1, #0
90007cfa:	dd0a      	ble.n	90007d12 <EwScreenFillRowSolid+0x74>
90007cfc:	3901      	subs	r1, #1
90007cfe:	f824 2b02 	strh.w	r2, [r4], #2
90007d02:	2900      	cmp	r1, #0
90007d04:	dd05      	ble.n	90007d12 <EwScreenFillRowSolid+0x74>
90007d06:	07cb      	lsls	r3, r1, #31
90007d08:	bf44      	itt	mi
90007d0a:	f101 31ff 	addmi.w	r1, r1, #4294967295
90007d0e:	f824 2011 	strhmi.w	r2, [r4, r1, lsl #1]
90007d12:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
90007d16:	1049      	asrs	r1, r1, #1
90007d18:	2900      	cmp	r1, #0
90007d1a:	dc00      	bgt.n	90007d1e <EwScreenFillRowSolid+0x80>
90007d1c:	bd30      	pop	{r4, r5, pc}
90007d1e:	3901      	subs	r1, #1
90007d20:	f844 2b04 	str.w	r2, [r4], #4
90007d24:	e7f8      	b.n	90007d18 <EwScreenFillRowSolid+0x7a>

90007d26 <EwScreenFillRowSolidBlend>:
90007d26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007d2a:	6813      	ldr	r3, [r2, #0]
90007d2c:	f64f 0e1f 	movw	lr, #63519	; 0xf81f
90007d30:	6804      	ldr	r4, [r0, #0]
90007d32:	6910      	ldr	r0, [r2, #16]
90007d34:	091b      	lsrs	r3, r3, #4
90007d36:	0b00      	lsrs	r0, r0, #12
90007d38:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90007d3c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90007d40:	4303      	orrs	r3, r0
90007d42:	6a10      	ldr	r0, [r2, #32]
90007d44:	6b12      	ldr	r2, [r2, #48]	; 0x30
90007d46:	f3c0 5007 	ubfx	r0, r0, #20, #8
90007d4a:	0112      	lsls	r2, r2, #4
90007d4c:	4303      	orrs	r3, r0
90007d4e:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
90007d52:	4313      	orrs	r3, r2
90007d54:	0e92      	lsrs	r2, r2, #26
90007d56:	0a1d      	lsrs	r5, r3, #8
90007d58:	f3c3 00c4 	ubfx	r0, r3, #3, #5
90007d5c:	095b      	lsrs	r3, r3, #5
90007d5e:	f1c2 063f 	rsb	r6, r2, #63	; 0x3f
90007d62:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90007d66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007d6a:	4305      	orrs	r5, r0
90007d6c:	fb02 3c03 	mla	ip, r2, r3, r3
90007d70:	fb02 5705 	mla	r7, r2, r5, r5
90007d74:	2900      	cmp	r1, #0
90007d76:	dc01      	bgt.n	90007d7c <EwScreenFillRowSolidBlend+0x56>
90007d78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90007d7c:	b192      	cbz	r2, 90007da4 <EwScreenFillRowSolidBlend+0x7e>
90007d7e:	2a3f      	cmp	r2, #63	; 0x3f
90007d80:	d013      	beq.n	90007daa <EwScreenFillRowSolidBlend+0x84>
90007d82:	8820      	ldrh	r0, [r4, #0]
90007d84:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
90007d88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90007d8c:	fb06 c000 	mla	r0, r6, r0, ip
90007d90:	fb06 7808 	mla	r8, r6, r8, r7
90007d94:	0980      	lsrs	r0, r0, #6
90007d96:	ea0e 1898 	and.w	r8, lr, r8, lsr #6
90007d9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90007d9e:	ea48 0000 	orr.w	r0, r8, r0
90007da2:	8020      	strh	r0, [r4, #0]
90007da4:	3402      	adds	r4, #2
90007da6:	3901      	subs	r1, #1
90007da8:	e7e4      	b.n	90007d74 <EwScreenFillRowSolidBlend+0x4e>
90007daa:	4618      	mov	r0, r3
90007dac:	46a8      	mov	r8, r5
90007dae:	e7f6      	b.n	90007d9e <EwScreenFillRowSolidBlend+0x78>

90007db0 <EwScreenFillRowGradient>:
90007db0:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007db2:	f8d2 c014 	ldr.w	ip, [r2, #20]
90007db6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007dba:	ea4f 1803 	mov.w	r8, r3, lsl #4
90007dbe:	6b13      	ldr	r3, [r2, #48]	; 0x30
90007dc0:	6806      	ldr	r6, [r0, #0]
90007dc2:	6914      	ldr	r4, [r2, #16]
90007dc4:	ea4f 1903 	mov.w	r9, r3, lsl #4
90007dc8:	6810      	ldr	r0, [r2, #0]
90007dca:	6a15      	ldr	r5, [r2, #32]
90007dcc:	6857      	ldr	r7, [r2, #4]
90007dce:	f8d2 e024 	ldr.w	lr, [r2, #36]	; 0x24
90007dd2:	2900      	cmp	r1, #0
90007dd4:	dc01      	bgt.n	90007dda <EwScreenFillRowGradient+0x2a>
90007dd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007dda:	0903      	lsrs	r3, r0, #4
90007ddc:	f3c5 5a07 	ubfx	sl, r5, #20, #8
90007de0:	0b22      	lsrs	r2, r4, #12
90007de2:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90007de6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90007dea:	4313      	orrs	r3, r2
90007dec:	f009 427f 	and.w	r2, r9, #4278190080	; 0xff000000
90007df0:	4313      	orrs	r3, r2
90007df2:	ea43 0a0a 	orr.w	sl, r3, sl
90007df6:	0e9b      	lsrs	r3, r3, #26
90007df8:	d017      	beq.n	90007e2a <EwScreenFillRowGradient+0x7a>
90007dfa:	ea4f 221a 	mov.w	r2, sl, lsr #8
90007dfe:	f3ca 0bc4 	ubfx	fp, sl, #3, #5
90007e02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90007e06:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90007e0a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90007e0e:	ea42 020b 	orr.w	r2, r2, fp
90007e12:	fb03 2202 	mla	r2, r3, r2, r2
90007e16:	fb03 a30a 	mla	r3, r3, sl, sl
90007e1a:	0992      	lsrs	r2, r2, #6
90007e1c:	099b      	lsrs	r3, r3, #6
90007e1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90007e22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007e26:	4313      	orrs	r3, r2
90007e28:	b29b      	uxth	r3, r3
90007e2a:	4438      	add	r0, r7
90007e2c:	4464      	add	r4, ip
90007e2e:	4475      	add	r5, lr
90007e30:	3901      	subs	r1, #1
90007e32:	44c1      	add	r9, r8
90007e34:	f826 3b02 	strh.w	r3, [r6], #2
90007e38:	e7cb      	b.n	90007dd2 <EwScreenFillRowGradient+0x22>

90007e3a <EwScreenFillRowGradientBlend>:
90007e3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007e3e:	6853      	ldr	r3, [r2, #4]
90007e40:	b085      	sub	sp, #20
90007e42:	6b14      	ldr	r4, [r2, #48]	; 0x30
90007e44:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
90007e48:	9301      	str	r3, [sp, #4]
90007e4a:	6953      	ldr	r3, [r2, #20]
90007e4c:	0124      	lsls	r4, r4, #4
90007e4e:	6805      	ldr	r5, [r0, #0]
90007e50:	9302      	str	r3, [sp, #8]
90007e52:	6a53      	ldr	r3, [r2, #36]	; 0x24
90007e54:	6817      	ldr	r7, [r2, #0]
90007e56:	9303      	str	r3, [sp, #12]
90007e58:	6b53      	ldr	r3, [r2, #52]	; 0x34
90007e5a:	f8d2 c010 	ldr.w	ip, [r2, #16]
90007e5e:	f8d2 e020 	ldr.w	lr, [r2, #32]
90007e62:	ea4f 1803 	mov.w	r8, r3, lsl #4
90007e66:	2900      	cmp	r1, #0
90007e68:	dc02      	bgt.n	90007e70 <EwScreenFillRowGradientBlend+0x36>
90007e6a:	b005      	add	sp, #20
90007e6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90007e70:	093b      	lsrs	r3, r7, #4
90007e72:	f3ce 5007 	ubfx	r0, lr, #20, #8
90007e76:	ea4f 321c 	mov.w	r2, ip, lsr #12
90007e7a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
90007e7e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90007e82:	4313      	orrs	r3, r2
90007e84:	f004 427f 	and.w	r2, r4, #4278190080	; 0xff000000
90007e88:	4313      	orrs	r3, r2
90007e8a:	4318      	orrs	r0, r3
90007e8c:	0e9b      	lsrs	r3, r3, #26
90007e8e:	d022      	beq.n	90007ed6 <EwScreenFillRowGradientBlend+0x9c>
90007e90:	0a02      	lsrs	r2, r0, #8
90007e92:	f3c0 06c4 	ubfx	r6, r0, #3, #5
90007e96:	2b3f      	cmp	r3, #63	; 0x3f
90007e98:	ea4f 1050 	mov.w	r0, r0, lsr #5
90007e9c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90007ea0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90007ea4:	ea42 0206 	orr.w	r2, r2, r6
90007ea8:	d013      	beq.n	90007ed2 <EwScreenFillRowGradientBlend+0x98>
90007eaa:	882e      	ldrh	r6, [r5, #0]
90007eac:	f1c3 093f 	rsb	r9, r3, #63	; 0x3f
90007eb0:	fb03 0000 	mla	r0, r3, r0, r0
90007eb4:	f426 6bfc 	bic.w	fp, r6, #2016	; 0x7e0
90007eb8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90007ebc:	fb03 2202 	mla	r2, r3, r2, r2
90007ec0:	fb09 0006 	mla	r0, r9, r6, r0
90007ec4:	fb09 220b 	mla	r2, r9, fp, r2
90007ec8:	0980      	lsrs	r0, r0, #6
90007eca:	ea0a 1292 	and.w	r2, sl, r2, lsr #6
90007ece:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90007ed2:	4302      	orrs	r2, r0
90007ed4:	802a      	strh	r2, [r5, #0]
90007ed6:	9b01      	ldr	r3, [sp, #4]
90007ed8:	3502      	adds	r5, #2
90007eda:	3901      	subs	r1, #1
90007edc:	4444      	add	r4, r8
90007ede:	441f      	add	r7, r3
90007ee0:	9b02      	ldr	r3, [sp, #8]
90007ee2:	449c      	add	ip, r3
90007ee4:	9b03      	ldr	r3, [sp, #12]
90007ee6:	449e      	add	lr, r3
90007ee8:	e7bd      	b.n	90007e66 <EwScreenFillRowGradientBlend+0x2c>

90007eea <EwScreenCopyNativeRow>:
90007eea:	b570      	push	{r4, r5, r6, lr}
90007eec:	6800      	ldr	r0, [r0, #0]
90007eee:	680c      	ldr	r4, [r1, #0]
90007ef0:	2a00      	cmp	r2, #0
90007ef2:	dc00      	bgt.n	90007ef6 <EwScreenCopyNativeRow+0xc>
90007ef4:	bd70      	pop	{r4, r5, r6, pc}
90007ef6:	f854 3b04 	ldr.w	r3, [r4], #4
90007efa:	0e9d      	lsrs	r5, r3, #26
90007efc:	d018      	beq.n	90007f30 <EwScreenCopyNativeRow+0x46>
90007efe:	0a19      	lsrs	r1, r3, #8
90007f00:	f3c3 06c4 	ubfx	r6, r3, #3, #5
90007f04:	095b      	lsrs	r3, r3, #5
90007f06:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90007f0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007f0e:	4331      	orrs	r1, r6
90007f10:	fb05 3303 	mla	r3, r5, r3, r3
90007f14:	fb05 1101 	mla	r1, r5, r1, r1
90007f18:	099b      	lsrs	r3, r3, #6
90007f1a:	0989      	lsrs	r1, r1, #6
90007f1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007f20:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90007f24:	430b      	orrs	r3, r1
90007f26:	b29b      	uxth	r3, r3
90007f28:	3a01      	subs	r2, #1
90007f2a:	f820 3b02 	strh.w	r3, [r0], #2
90007f2e:	e7df      	b.n	90007ef0 <EwScreenCopyNativeRow+0x6>
90007f30:	462b      	mov	r3, r5
90007f32:	e7f9      	b.n	90007f28 <EwScreenCopyNativeRow+0x3e>

90007f34 <EwScreenCopyNativeRowBlend>:
90007f34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007f38:	6800      	ldr	r0, [r0, #0]
90007f3a:	f64f 061f 	movw	r6, #63519	; 0xf81f
90007f3e:	680c      	ldr	r4, [r1, #0]
90007f40:	4d17      	ldr	r5, [pc, #92]	; (90007fa0 <EwScreenCopyNativeRowBlend+0x6c>)
90007f42:	2a00      	cmp	r2, #0
90007f44:	dc01      	bgt.n	90007f4a <EwScreenCopyNativeRowBlend+0x16>
90007f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90007f4a:	f854 3b04 	ldr.w	r3, [r4], #4
90007f4e:	0e9f      	lsrs	r7, r3, #26
90007f50:	d022      	beq.n	90007f98 <EwScreenCopyNativeRowBlend+0x64>
90007f52:	0a19      	lsrs	r1, r3, #8
90007f54:	f3c3 0cc4 	ubfx	ip, r3, #3, #5
90007f58:	2f3f      	cmp	r7, #63	; 0x3f
90007f5a:	ea4f 1353 	mov.w	r3, r3, lsr #5
90007f5e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90007f62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007f66:	ea41 010c 	orr.w	r1, r1, ip
90007f6a:	d013      	beq.n	90007f94 <EwScreenCopyNativeRowBlend+0x60>
90007f6c:	f8b0 c000 	ldrh.w	ip, [r0]
90007f70:	f1c7 0e3f 	rsb	lr, r7, #63	; 0x3f
90007f74:	fb07 1101 	mla	r1, r7, r1, r1
90007f78:	f42c 68fc 	bic.w	r8, ip, #2016	; 0x7e0
90007f7c:	fb07 3303 	mla	r3, r7, r3, r3
90007f80:	ea0c 0c05 	and.w	ip, ip, r5
90007f84:	fb0e 1108 	mla	r1, lr, r8, r1
90007f88:	fb0e 330c 	mla	r3, lr, ip, r3
90007f8c:	ea06 1191 	and.w	r1, r6, r1, lsr #6
90007f90:	ea05 1393 	and.w	r3, r5, r3, lsr #6
90007f94:	430b      	orrs	r3, r1
90007f96:	8003      	strh	r3, [r0, #0]
90007f98:	3002      	adds	r0, #2
90007f9a:	3a01      	subs	r2, #1
90007f9c:	e7d1      	b.n	90007f42 <EwScreenCopyNativeRowBlend+0xe>
90007f9e:	bf00      	nop
90007fa0:	00fc07e0 	.word	0x00fc07e0

90007fa4 <EwScreenCopyNativeRowSolid>:
90007fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
90007fa6:	6804      	ldr	r4, [r0, #0]
90007fa8:	6b18      	ldr	r0, [r3, #48]	; 0x30
90007faa:	680d      	ldr	r5, [r1, #0]
90007fac:	1580      	asrs	r0, r0, #22
90007fae:	3001      	adds	r0, #1
90007fb0:	2a00      	cmp	r2, #0
90007fb2:	dc00      	bgt.n	90007fb6 <EwScreenCopyNativeRowSolid+0x12>
90007fb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
90007fb6:	f855 3b04 	ldr.w	r3, [r5], #4
90007fba:	0e1e      	lsrs	r6, r3, #24
90007fbc:	fb06 0600 	mla	r6, r6, r0, r0
90007fc0:	0a36      	lsrs	r6, r6, #8
90007fc2:	d016      	beq.n	90007ff2 <EwScreenCopyNativeRowSolid+0x4e>
90007fc4:	0a19      	lsrs	r1, r3, #8
90007fc6:	f3c3 07c4 	ubfx	r7, r3, #3, #5
90007fca:	095b      	lsrs	r3, r3, #5
90007fcc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90007fd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007fd4:	4339      	orrs	r1, r7
90007fd6:	4373      	muls	r3, r6
90007fd8:	4371      	muls	r1, r6
90007fda:	099b      	lsrs	r3, r3, #6
90007fdc:	0989      	lsrs	r1, r1, #6
90007fde:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90007fe2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90007fe6:	430b      	orrs	r3, r1
90007fe8:	b29b      	uxth	r3, r3
90007fea:	3a01      	subs	r2, #1
90007fec:	f824 3b02 	strh.w	r3, [r4], #2
90007ff0:	e7de      	b.n	90007fb0 <EwScreenCopyNativeRowSolid+0xc>
90007ff2:	4633      	mov	r3, r6
90007ff4:	e7f9      	b.n	90007fea <EwScreenCopyNativeRowSolid+0x46>

90007ff6 <EwScreenCopyNativeRowSolidBlend>:
90007ff6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90007ffa:	6804      	ldr	r4, [r0, #0]
90007ffc:	f64f 071f 	movw	r7, #63519	; 0xf81f
90008000:	6b18      	ldr	r0, [r3, #48]	; 0x30
90008002:	680d      	ldr	r5, [r1, #0]
90008004:	1580      	asrs	r0, r0, #22
90008006:	4e18      	ldr	r6, [pc, #96]	; (90008068 <EwScreenCopyNativeRowSolidBlend+0x72>)
90008008:	3001      	adds	r0, #1
9000800a:	2a00      	cmp	r2, #0
9000800c:	dc01      	bgt.n	90008012 <EwScreenCopyNativeRowSolidBlend+0x1c>
9000800e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008012:	f855 3b04 	ldr.w	r3, [r5], #4
90008016:	ea5f 6c93 	movs.w	ip, r3, lsr #26
9000801a:	d021      	beq.n	90008060 <EwScreenCopyNativeRowSolidBlend+0x6a>
9000801c:	0a19      	lsrs	r1, r3, #8
9000801e:	f3c3 09c4 	ubfx	r9, r3, #3, #5
90008022:	fb0c 0c00 	mla	ip, ip, r0, r0
90008026:	095b      	lsrs	r3, r3, #5
90008028:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9000802c:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
90008030:	f403 6efc 	and.w	lr, r3, #2016	; 0x7e0
90008034:	8823      	ldrh	r3, [r4, #0]
90008036:	ea41 0909 	orr.w	r9, r1, r9
9000803a:	f1cc 0840 	rsb	r8, ip, #64	; 0x40
9000803e:	f423 61fc 	bic.w	r1, r3, #2016	; 0x7e0
90008042:	4033      	ands	r3, r6
90008044:	fb08 f101 	mul.w	r1, r8, r1
90008048:	fb08 f303 	mul.w	r3, r8, r3
9000804c:	fb0c 1109 	mla	r1, ip, r9, r1
90008050:	fb0c 330e 	mla	r3, ip, lr, r3
90008054:	ea07 1191 	and.w	r1, r7, r1, lsr #6
90008058:	ea06 1393 	and.w	r3, r6, r3, lsr #6
9000805c:	430b      	orrs	r3, r1
9000805e:	8023      	strh	r3, [r4, #0]
90008060:	3402      	adds	r4, #2
90008062:	3a01      	subs	r2, #1
90008064:	e7d1      	b.n	9000800a <EwScreenCopyNativeRowSolidBlend+0x14>
90008066:	bf00      	nop
90008068:	00fc07e0 	.word	0x00fc07e0

9000806c <EwScreenCopyNativeRowGradient>:
9000806c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000806e:	6805      	ldr	r5, [r0, #0]
90008070:	680e      	ldr	r6, [r1, #0]
90008072:	e9d3 470c 	ldrd	r4, r7, [r3, #48]	; 0x30
90008076:	2a00      	cmp	r2, #0
90008078:	dc00      	bgt.n	9000807c <EwScreenCopyNativeRowGradient+0x10>
9000807a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000807c:	f856 1b04 	ldr.w	r1, [r6], #4
90008080:	15a3      	asrs	r3, r4, #22
90008082:	0e08      	lsrs	r0, r1, #24
90008084:	3301      	adds	r3, #1
90008086:	fb00 3303 	mla	r3, r0, r3, r3
9000808a:	0a1b      	lsrs	r3, r3, #8
9000808c:	d013      	beq.n	900080b6 <EwScreenCopyNativeRowGradient+0x4a>
9000808e:	0a08      	lsrs	r0, r1, #8
90008090:	f3c1 0cc4 	ubfx	ip, r1, #3, #5
90008094:	0949      	lsrs	r1, r1, #5
90008096:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9000809a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000809e:	ea40 000c 	orr.w	r0, r0, ip
900080a2:	4358      	muls	r0, r3
900080a4:	434b      	muls	r3, r1
900080a6:	0980      	lsrs	r0, r0, #6
900080a8:	099b      	lsrs	r3, r3, #6
900080aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900080ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900080b2:	4303      	orrs	r3, r0
900080b4:	b29b      	uxth	r3, r3
900080b6:	443c      	add	r4, r7
900080b8:	3a01      	subs	r2, #1
900080ba:	f825 3b02 	strh.w	r3, [r5], #2
900080be:	e7da      	b.n	90008076 <EwScreenCopyNativeRowGradient+0xa>

900080c0 <EwScreenCopyNativeRowGradientBlend>:
900080c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900080c4:	6800      	ldr	r0, [r0, #0]
900080c6:	f64f 0c1f 	movw	ip, #63519	; 0xf81f
900080ca:	680d      	ldr	r5, [r1, #0]
900080cc:	4e1b      	ldr	r6, [pc, #108]	; (9000813c <EwScreenCopyNativeRowGradientBlend+0x7c>)
900080ce:	e9d3 470c 	ldrd	r4, r7, [r3, #48]	; 0x30
900080d2:	2a00      	cmp	r2, #0
900080d4:	dc01      	bgt.n	900080da <EwScreenCopyNativeRowGradientBlend+0x1a>
900080d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900080da:	f855 3b04 	ldr.w	r3, [r5], #4
900080de:	ea5f 6a93 	movs.w	sl, r3, lsr #26
900080e2:	d026      	beq.n	90008132 <EwScreenCopyNativeRowGradientBlend+0x72>
900080e4:	ea4f 2913 	mov.w	r9, r3, lsr #8
900080e8:	f3c3 01c4 	ubfx	r1, r3, #3, #5
900080ec:	f10a 0e01 	add.w	lr, sl, #1
900080f0:	095b      	lsrs	r3, r3, #5
900080f2:	f409 4978 	and.w	r9, r9, #63488	; 0xf800
900080f6:	f403 68fc 	and.w	r8, r3, #2016	; 0x7e0
900080fa:	8803      	ldrh	r3, [r0, #0]
900080fc:	ea49 0901 	orr.w	r9, r9, r1
90008100:	15a1      	asrs	r1, r4, #22
90008102:	f423 6afc 	bic.w	sl, r3, #2016	; 0x7e0
90008106:	4033      	ands	r3, r6
90008108:	fb01 ee0e 	mla	lr, r1, lr, lr
9000810c:	ea4f 119e 	mov.w	r1, lr, lsr #6
90008110:	f1c1 0e40 	rsb	lr, r1, #64	; 0x40
90008114:	fb0e fa0a 	mul.w	sl, lr, sl
90008118:	fb0e f303 	mul.w	r3, lr, r3
9000811c:	fb01 a909 	mla	r9, r1, r9, sl
90008120:	fb01 3308 	mla	r3, r1, r8, r3
90008124:	ea0c 1999 	and.w	r9, ip, r9, lsr #6
90008128:	ea06 1393 	and.w	r3, r6, r3, lsr #6
9000812c:	ea49 0303 	orr.w	r3, r9, r3
90008130:	8003      	strh	r3, [r0, #0]
90008132:	443c      	add	r4, r7
90008134:	3002      	adds	r0, #2
90008136:	3a01      	subs	r2, #1
90008138:	e7cb      	b.n	900080d2 <EwScreenCopyNativeRowGradientBlend+0x12>
9000813a:	bf00      	nop
9000813c:	00fc07e0 	.word	0x00fc07e0

90008140 <EwScreenCopyIndex8Row>:
90008140:	b5f0      	push	{r4, r5, r6, r7, lr}
90008142:	6804      	ldr	r4, [r0, #0]
90008144:	6808      	ldr	r0, [r1, #0]
90008146:	698d      	ldr	r5, [r1, #24]
90008148:	4402      	add	r2, r0
9000814a:	1a13      	subs	r3, r2, r0
9000814c:	2b00      	cmp	r3, #0
9000814e:	dc00      	bgt.n	90008152 <EwScreenCopyIndex8Row+0x12>
90008150:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008152:	f810 3b01 	ldrb.w	r3, [r0], #1
90008156:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
9000815a:	0e9e      	lsrs	r6, r3, #26
9000815c:	d017      	beq.n	9000818e <EwScreenCopyIndex8Row+0x4e>
9000815e:	0a19      	lsrs	r1, r3, #8
90008160:	f3c3 07c4 	ubfx	r7, r3, #3, #5
90008164:	095b      	lsrs	r3, r3, #5
90008166:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9000816a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9000816e:	4339      	orrs	r1, r7
90008170:	fb06 3303 	mla	r3, r6, r3, r3
90008174:	fb06 1101 	mla	r1, r6, r1, r1
90008178:	099b      	lsrs	r3, r3, #6
9000817a:	0989      	lsrs	r1, r1, #6
9000817c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008180:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90008184:	430b      	orrs	r3, r1
90008186:	b29b      	uxth	r3, r3
90008188:	f824 3b02 	strh.w	r3, [r4], #2
9000818c:	e7dd      	b.n	9000814a <EwScreenCopyIndex8Row+0xa>
9000818e:	4633      	mov	r3, r6
90008190:	e7fa      	b.n	90008188 <EwScreenCopyIndex8Row+0x48>

90008192 <EwScreenCopyIndex8RowBlend>:
90008192:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90008196:	6804      	ldr	r4, [r0, #0]
90008198:	f64f 061f 	movw	r6, #63519	; 0xf81f
9000819c:	6808      	ldr	r0, [r1, #0]
9000819e:	698d      	ldr	r5, [r1, #24]
900081a0:	4402      	add	r2, r0
900081a2:	1a13      	subs	r3, r2, r0
900081a4:	2b00      	cmp	r3, #0
900081a6:	dc01      	bgt.n	900081ac <EwScreenCopyIndex8RowBlend+0x1a>
900081a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900081ac:	f810 3b01 	ldrb.w	r3, [r0], #1
900081b0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900081b4:	0e9f      	lsrs	r7, r3, #26
900081b6:	d023      	beq.n	90008200 <EwScreenCopyIndex8RowBlend+0x6e>
900081b8:	0a19      	lsrs	r1, r3, #8
900081ba:	f3c3 0cc4 	ubfx	ip, r3, #3, #5
900081be:	2f3f      	cmp	r7, #63	; 0x3f
900081c0:	ea4f 1353 	mov.w	r3, r3, lsr #5
900081c4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900081c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900081cc:	ea41 010c 	orr.w	r1, r1, ip
900081d0:	d014      	beq.n	900081fc <EwScreenCopyIndex8RowBlend+0x6a>
900081d2:	f8b4 c000 	ldrh.w	ip, [r4]
900081d6:	f1c7 0e3f 	rsb	lr, r7, #63	; 0x3f
900081da:	fb07 3303 	mla	r3, r7, r3, r3
900081de:	f42c 68fc 	bic.w	r8, ip, #2016	; 0x7e0
900081e2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900081e6:	fb07 1101 	mla	r1, r7, r1, r1
900081ea:	fb0e 330c 	mla	r3, lr, ip, r3
900081ee:	fb0e 1108 	mla	r1, lr, r8, r1
900081f2:	099b      	lsrs	r3, r3, #6
900081f4:	ea06 1191 	and.w	r1, r6, r1, lsr #6
900081f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900081fc:	430b      	orrs	r3, r1
900081fe:	8023      	strh	r3, [r4, #0]
90008200:	3402      	adds	r4, #2
90008202:	e7ce      	b.n	900081a2 <EwScreenCopyIndex8RowBlend+0x10>

90008204 <EwScreenCopyIndex8RowSolid>:
90008204:	b5f0      	push	{r4, r5, r6, r7, lr}
90008206:	6805      	ldr	r5, [r0, #0]
90008208:	6b18      	ldr	r0, [r3, #48]	; 0x30
9000820a:	680c      	ldr	r4, [r1, #0]
9000820c:	1580      	asrs	r0, r0, #22
9000820e:	698e      	ldr	r6, [r1, #24]
90008210:	4422      	add	r2, r4
90008212:	3001      	adds	r0, #1
90008214:	1b13      	subs	r3, r2, r4
90008216:	2b00      	cmp	r3, #0
90008218:	dc00      	bgt.n	9000821c <EwScreenCopyIndex8RowSolid+0x18>
9000821a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000821c:	f814 3b01 	ldrb.w	r3, [r4], #1
90008220:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90008224:	0e1f      	lsrs	r7, r3, #24
90008226:	fb07 0700 	mla	r7, r7, r0, r0
9000822a:	0a3f      	lsrs	r7, r7, #8
9000822c:	d016      	beq.n	9000825c <EwScreenCopyIndex8RowSolid+0x58>
9000822e:	0a19      	lsrs	r1, r3, #8
90008230:	f3c3 0cc4 	ubfx	ip, r3, #3, #5
90008234:	095b      	lsrs	r3, r3, #5
90008236:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9000823a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9000823e:	ea41 010c 	orr.w	r1, r1, ip
90008242:	437b      	muls	r3, r7
90008244:	4379      	muls	r1, r7
90008246:	099b      	lsrs	r3, r3, #6
90008248:	0989      	lsrs	r1, r1, #6
9000824a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9000824e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90008252:	430b      	orrs	r3, r1
90008254:	b29b      	uxth	r3, r3
90008256:	f825 3b02 	strh.w	r3, [r5], #2
9000825a:	e7db      	b.n	90008214 <EwScreenCopyIndex8RowSolid+0x10>
9000825c:	463b      	mov	r3, r7
9000825e:	e7fa      	b.n	90008256 <EwScreenCopyIndex8RowSolid+0x52>

90008260 <EwScreenCopyIndex8RowSolidBlend>:
90008260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008264:	6804      	ldr	r4, [r0, #0]
90008266:	f64f 071f 	movw	r7, #63519	; 0xf81f
9000826a:	6b18      	ldr	r0, [r3, #48]	; 0x30
9000826c:	698e      	ldr	r6, [r1, #24]
9000826e:	1580      	asrs	r0, r0, #22
90008270:	6809      	ldr	r1, [r1, #0]
90008272:	4d1a      	ldr	r5, [pc, #104]	; (900082dc <EwScreenCopyIndex8RowSolidBlend+0x7c>)
90008274:	3001      	adds	r0, #1
90008276:	440a      	add	r2, r1
90008278:	1a53      	subs	r3, r2, r1
9000827a:	2b00      	cmp	r3, #0
9000827c:	dc01      	bgt.n	90008282 <EwScreenCopyIndex8RowSolidBlend+0x22>
9000827e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008282:	f811 3b01 	ldrb.w	r3, [r1], #1
90008286:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9000828a:	ea5f 6893 	movs.w	r8, r3, lsr #26
9000828e:	d023      	beq.n	900082d8 <EwScreenCopyIndex8RowSolidBlend+0x78>
90008290:	ea4f 2c13 	mov.w	ip, r3, lsr #8
90008294:	f3c3 09c4 	ubfx	r9, r3, #3, #5
90008298:	fb08 0800 	mla	r8, r8, r0, r0
9000829c:	095b      	lsrs	r3, r3, #5
9000829e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900082a2:	ea4f 1898 	mov.w	r8, r8, lsr #6
900082a6:	f403 6efc 	and.w	lr, r3, #2016	; 0x7e0
900082aa:	8823      	ldrh	r3, [r4, #0]
900082ac:	ea4c 0909 	orr.w	r9, ip, r9
900082b0:	f1c8 0a40 	rsb	sl, r8, #64	; 0x40
900082b4:	f423 6cfc 	bic.w	ip, r3, #2016	; 0x7e0
900082b8:	402b      	ands	r3, r5
900082ba:	fb0a fc0c 	mul.w	ip, sl, ip
900082be:	fb0a f303 	mul.w	r3, sl, r3
900082c2:	fb08 cc09 	mla	ip, r8, r9, ip
900082c6:	fb08 330e 	mla	r3, r8, lr, r3
900082ca:	ea07 1c9c 	and.w	ip, r7, ip, lsr #6
900082ce:	ea05 1393 	and.w	r3, r5, r3, lsr #6
900082d2:	ea4c 0303 	orr.w	r3, ip, r3
900082d6:	8023      	strh	r3, [r4, #0]
900082d8:	3402      	adds	r4, #2
900082da:	e7cd      	b.n	90008278 <EwScreenCopyIndex8RowSolidBlend+0x18>
900082dc:	00fc07e0 	.word	0x00fc07e0

900082e0 <EwScreenCopyIndex8RowGradient>:
900082e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900082e2:	6805      	ldr	r5, [r0, #0]
900082e4:	6808      	ldr	r0, [r1, #0]
900082e6:	698e      	ldr	r6, [r1, #24]
900082e8:	4402      	add	r2, r0
900082ea:	e9d3 470c 	ldrd	r4, r7, [r3, #48]	; 0x30
900082ee:	1a13      	subs	r3, r2, r0
900082f0:	2b00      	cmp	r3, #0
900082f2:	dc00      	bgt.n	900082f6 <EwScreenCopyIndex8RowGradient+0x16>
900082f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
900082f6:	f810 3b01 	ldrb.w	r3, [r0], #1
900082fa:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900082fe:	15a3      	asrs	r3, r4, #22
90008300:	ea4f 6c11 	mov.w	ip, r1, lsr #24
90008304:	3301      	adds	r3, #1
90008306:	fb0c 3303 	mla	r3, ip, r3, r3
9000830a:	0a1b      	lsrs	r3, r3, #8
9000830c:	d017      	beq.n	9000833e <EwScreenCopyIndex8RowGradient+0x5e>
9000830e:	ea4f 2c11 	mov.w	ip, r1, lsr #8
90008312:	f3c1 0ec4 	ubfx	lr, r1, #3, #5
90008316:	0949      	lsrs	r1, r1, #5
90008318:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9000831c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90008320:	ea4c 0c0e 	orr.w	ip, ip, lr
90008324:	fb0c fc03 	mul.w	ip, ip, r3
90008328:	434b      	muls	r3, r1
9000832a:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
9000832e:	099b      	lsrs	r3, r3, #6
90008330:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90008334:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008338:	ea4c 0303 	orr.w	r3, ip, r3
9000833c:	b29b      	uxth	r3, r3
9000833e:	443c      	add	r4, r7
90008340:	f825 3b02 	strh.w	r3, [r5], #2
90008344:	e7d3      	b.n	900082ee <EwScreenCopyIndex8RowGradient+0xe>

90008346 <EwScreenCopyIndex8RowGradientBlend>:
90008346:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000834a:	6804      	ldr	r4, [r0, #0]
9000834c:	f64f 0e1f 	movw	lr, #63519	; 0xf81f
90008350:	6808      	ldr	r0, [r1, #0]
90008352:	698f      	ldr	r7, [r1, #24]
90008354:	4402      	add	r2, r0
90008356:	4e1c      	ldr	r6, [pc, #112]	; (900083c8 <EwScreenCopyIndex8RowGradientBlend+0x82>)
90008358:	e9d3 5c0c 	ldrd	r5, ip, [r3, #48]	; 0x30
9000835c:	1a13      	subs	r3, r2, r0
9000835e:	2b00      	cmp	r3, #0
90008360:	dc01      	bgt.n	90008366 <EwScreenCopyIndex8RowGradientBlend+0x20>
90008362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008366:	f810 3b01 	ldrb.w	r3, [r0], #1
9000836a:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
9000836e:	ea5f 6a93 	movs.w	sl, r3, lsr #26
90008372:	d026      	beq.n	900083c2 <EwScreenCopyIndex8RowGradientBlend+0x7c>
90008374:	ea4f 2813 	mov.w	r8, r3, lsr #8
90008378:	f3c3 0bc4 	ubfx	fp, r3, #3, #5
9000837c:	15a9      	asrs	r1, r5, #22
9000837e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
90008382:	095b      	lsrs	r3, r3, #5
90008384:	ea48 0b0b 	orr.w	fp, r8, fp
90008388:	f10a 0801 	add.w	r8, sl, #1
9000838c:	f403 69fc 	and.w	r9, r3, #2016	; 0x7e0
90008390:	8823      	ldrh	r3, [r4, #0]
90008392:	fb01 8808 	mla	r8, r1, r8, r8
90008396:	ea4f 1198 	mov.w	r1, r8, lsr #6
9000839a:	f423 68fc 	bic.w	r8, r3, #2016	; 0x7e0
9000839e:	4033      	ands	r3, r6
900083a0:	f1c1 0a40 	rsb	sl, r1, #64	; 0x40
900083a4:	fb0a f808 	mul.w	r8, sl, r8
900083a8:	fb0a f303 	mul.w	r3, sl, r3
900083ac:	fb01 880b 	mla	r8, r1, fp, r8
900083b0:	fb01 3309 	mla	r3, r1, r9, r3
900083b4:	ea0e 1898 	and.w	r8, lr, r8, lsr #6
900083b8:	ea06 1393 	and.w	r3, r6, r3, lsr #6
900083bc:	ea48 0303 	orr.w	r3, r8, r3
900083c0:	8023      	strh	r3, [r4, #0]
900083c2:	4465      	add	r5, ip
900083c4:	3402      	adds	r4, #2
900083c6:	e7c9      	b.n	9000835c <EwScreenCopyIndex8RowGradientBlend+0x16>
900083c8:	00fc07e0 	.word	0x00fc07e0

900083cc <EwScreenCopyAlpha8RowSolid>:
900083cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900083d0:	691c      	ldr	r4, [r3, #16]
900083d2:	f64f 0c1f 	movw	ip, #63519	; 0xf81f
900083d6:	6805      	ldr	r5, [r0, #0]
900083d8:	6818      	ldr	r0, [r3, #0]
900083da:	0b24      	lsrs	r4, r4, #12
900083dc:	f8df e078 	ldr.w	lr, [pc, #120]	; 90008458 <EwScreenCopyAlpha8RowSolid+0x8c>
900083e0:	0900      	lsrs	r0, r0, #4
900083e2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900083e6:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
900083ea:	4320      	orrs	r0, r4
900083ec:	6a1c      	ldr	r4, [r3, #32]
900083ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900083f0:	f3c4 5407 	ubfx	r4, r4, #20, #8
900083f4:	011b      	lsls	r3, r3, #4
900083f6:	4320      	orrs	r0, r4
900083f8:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
900083fc:	4303      	orrs	r3, r0
900083fe:	0a18      	lsrs	r0, r3, #8
90008400:	f3c3 04c4 	ubfx	r4, r3, #3, #5
90008404:	095e      	lsrs	r6, r3, #5
90008406:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9000840a:	0e9b      	lsrs	r3, r3, #26
9000840c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90008410:	4320      	orrs	r0, r4
90008412:	680c      	ldr	r4, [r1, #0]
90008414:	1c5f      	adds	r7, r3, #1
90008416:	4422      	add	r2, r4
90008418:	1b11      	subs	r1, r2, r4
9000841a:	2900      	cmp	r1, #0
9000841c:	dc01      	bgt.n	90008422 <EwScreenCopyAlpha8RowSolid+0x56>
9000841e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90008422:	f814 1b01 	ldrb.w	r1, [r4], #1
90008426:	0889      	lsrs	r1, r1, #2
90008428:	d102      	bne.n	90008430 <EwScreenCopyAlpha8RowSolid+0x64>
9000842a:	8029      	strh	r1, [r5, #0]
9000842c:	3502      	adds	r5, #2
9000842e:	e7f3      	b.n	90008418 <EwScreenCopyAlpha8RowSolid+0x4c>
90008430:	293f      	cmp	r1, #63	; 0x3f
90008432:	d101      	bne.n	90008438 <EwScreenCopyAlpha8RowSolid+0x6c>
90008434:	2b3f      	cmp	r3, #63	; 0x3f
90008436:	d00c      	beq.n	90008452 <EwScreenCopyAlpha8RowSolid+0x86>
90008438:	fb01 7107 	mla	r1, r1, r7, r7
9000843c:	0989      	lsrs	r1, r1, #6
9000843e:	fb01 f800 	mul.w	r8, r1, r0
90008442:	4371      	muls	r1, r6
90008444:	ea0c 1898 	and.w	r8, ip, r8, lsr #6
90008448:	ea0e 1191 	and.w	r1, lr, r1, lsr #6
9000844c:	ea48 0101 	orr.w	r1, r8, r1
90008450:	e7eb      	b.n	9000842a <EwScreenCopyAlpha8RowSolid+0x5e>
90008452:	4631      	mov	r1, r6
90008454:	4680      	mov	r8, r0
90008456:	e7f9      	b.n	9000844c <EwScreenCopyAlpha8RowSolid+0x80>
90008458:	00fc07e0 	.word	0x00fc07e0

9000845c <EwScreenCopyAlpha8RowSolidBlend>:
9000845c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008460:	691c      	ldr	r4, [r3, #16]
90008462:	f64f 091f 	movw	r9, #63519	; 0xf81f
90008466:	6805      	ldr	r5, [r0, #0]
90008468:	6818      	ldr	r0, [r3, #0]
9000846a:	0b24      	lsrs	r4, r4, #12
9000846c:	f8d1 c000 	ldr.w	ip, [r1]
90008470:	0900      	lsrs	r0, r0, #4
90008472:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90008476:	eb0c 0802 	add.w	r8, ip, r2
9000847a:	4a23      	ldr	r2, [pc, #140]	; (90008508 <EwScreenCopyAlpha8RowSolidBlend+0xac>)
9000847c:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90008480:	4320      	orrs	r0, r4
90008482:	6a1c      	ldr	r4, [r3, #32]
90008484:	f3c4 5407 	ubfx	r4, r4, #20, #8
90008488:	4320      	orrs	r0, r4
9000848a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
9000848c:	0124      	lsls	r4, r4, #4
9000848e:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90008492:	ea40 0304 	orr.w	r3, r0, r4
90008496:	0ea4      	lsrs	r4, r4, #26
90008498:	0a1f      	lsrs	r7, r3, #8
9000849a:	f3c3 00c4 	ubfx	r0, r3, #3, #5
9000849e:	095b      	lsrs	r3, r3, #5
900084a0:	f104 0e01 	add.w	lr, r4, #1
900084a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900084a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900084ac:	4307      	orrs	r7, r0
900084ae:	eba8 010c 	sub.w	r1, r8, ip
900084b2:	2900      	cmp	r1, #0
900084b4:	dc01      	bgt.n	900084ba <EwScreenCopyAlpha8RowSolidBlend+0x5e>
900084b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900084ba:	f81c 1b01 	ldrb.w	r1, [ip], #1
900084be:	0889      	lsrs	r1, r1, #2
900084c0:	d01d      	beq.n	900084fe <EwScreenCopyAlpha8RowSolidBlend+0xa2>
900084c2:	b1e4      	cbz	r4, 900084fe <EwScreenCopyAlpha8RowSolidBlend+0xa2>
900084c4:	293f      	cmp	r1, #63	; 0x3f
900084c6:	d101      	bne.n	900084cc <EwScreenCopyAlpha8RowSolidBlend+0x70>
900084c8:	2c3f      	cmp	r4, #63	; 0x3f
900084ca:	d01a      	beq.n	90008502 <EwScreenCopyAlpha8RowSolidBlend+0xa6>
900084cc:	fb01 e10e 	mla	r1, r1, lr, lr
900084d0:	8828      	ldrh	r0, [r5, #0]
900084d2:	ea4f 1a91 	mov.w	sl, r1, lsr #6
900084d6:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
900084da:	ea00 0102 	and.w	r1, r0, r2
900084de:	f1ca 0b40 	rsb	fp, sl, #64	; 0x40
900084e2:	fb0b f606 	mul.w	r6, fp, r6
900084e6:	fb0b f101 	mul.w	r1, fp, r1
900084ea:	fb0a 6607 	mla	r6, sl, r7, r6
900084ee:	fb0a 1103 	mla	r1, sl, r3, r1
900084f2:	ea09 1696 	and.w	r6, r9, r6, lsr #6
900084f6:	ea02 1191 	and.w	r1, r2, r1, lsr #6
900084fa:	4331      	orrs	r1, r6
900084fc:	8029      	strh	r1, [r5, #0]
900084fe:	3502      	adds	r5, #2
90008500:	e7d5      	b.n	900084ae <EwScreenCopyAlpha8RowSolidBlend+0x52>
90008502:	4619      	mov	r1, r3
90008504:	463e      	mov	r6, r7
90008506:	e7f8      	b.n	900084fa <EwScreenCopyAlpha8RowSolidBlend+0x9e>
90008508:	00fc07e0 	.word	0x00fc07e0

9000850c <EwScreenCopyAlpha8RowGradient>:
9000850c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008510:	6806      	ldr	r6, [r0, #0]
90008512:	b085      	sub	sp, #20
90008514:	6858      	ldr	r0, [r3, #4]
90008516:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
9000851a:	680d      	ldr	r5, [r1, #0]
9000851c:	9001      	str	r0, [sp, #4]
9000851e:	6958      	ldr	r0, [r3, #20]
90008520:	eb05 0902 	add.w	r9, r5, r2
90008524:	681f      	ldr	r7, [r3, #0]
90008526:	9002      	str	r0, [sp, #8]
90008528:	6a58      	ldr	r0, [r3, #36]	; 0x24
9000852a:	f8d3 c010 	ldr.w	ip, [r3, #16]
9000852e:	9003      	str	r0, [sp, #12]
90008530:	6b58      	ldr	r0, [r3, #52]	; 0x34
90008532:	f8d3 e020 	ldr.w	lr, [r3, #32]
90008536:	ea4f 1800 	mov.w	r8, r0, lsl #4
9000853a:	6b18      	ldr	r0, [r3, #48]	; 0x30
9000853c:	f8df b08c 	ldr.w	fp, [pc, #140]	; 900085cc <EwScreenCopyAlpha8RowGradient+0xc0>
90008540:	0100      	lsls	r0, r0, #4
90008542:	eba9 0305 	sub.w	r3, r9, r5
90008546:	2b00      	cmp	r3, #0
90008548:	dc02      	bgt.n	90008550 <EwScreenCopyAlpha8RowGradient+0x44>
9000854a:	b005      	add	sp, #20
9000854c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008550:	f815 3b01 	ldrb.w	r3, [r5], #1
90008554:	b1cb      	cbz	r3, 9000858a <EwScreenCopyAlpha8RowGradient+0x7e>
90008556:	093a      	lsrs	r2, r7, #4
90008558:	f402 017f 	and.w	r1, r2, #16711680	; 0xff0000
9000855c:	ea4f 321c 	mov.w	r2, ip, lsr #12
90008560:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90008564:	430a      	orrs	r2, r1
90008566:	f000 417f 	and.w	r1, r0, #4278190080	; 0xff000000
9000856a:	430a      	orrs	r2, r1
9000856c:	f3ce 5107 	ubfx	r1, lr, #20, #8
90008570:	430a      	orrs	r2, r1
90008572:	089b      	lsrs	r3, r3, #2
90008574:	d10b      	bne.n	9000858e <EwScreenCopyAlpha8RowGradient+0x82>
90008576:	8033      	strh	r3, [r6, #0]
90008578:	9b01      	ldr	r3, [sp, #4]
9000857a:	3602      	adds	r6, #2
9000857c:	4440      	add	r0, r8
9000857e:	441f      	add	r7, r3
90008580:	9b02      	ldr	r3, [sp, #8]
90008582:	449c      	add	ip, r3
90008584:	9b03      	ldr	r3, [sp, #12]
90008586:	449e      	add	lr, r3
90008588:	e7db      	b.n	90008542 <EwScreenCopyAlpha8RowGradient+0x36>
9000858a:	461a      	mov	r2, r3
9000858c:	e7f1      	b.n	90008572 <EwScreenCopyAlpha8RowGradient+0x66>
9000858e:	0a11      	lsrs	r1, r2, #8
90008590:	f3c2 04c4 	ubfx	r4, r2, #3, #5
90008594:	2b3f      	cmp	r3, #63	; 0x3f
90008596:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9000859a:	ea41 0104 	orr.w	r1, r1, r4
9000859e:	ea4f 1452 	mov.w	r4, r2, lsr #5
900085a2:	ea4f 6292 	mov.w	r2, r2, lsr #26
900085a6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900085aa:	d101      	bne.n	900085b0 <EwScreenCopyAlpha8RowGradient+0xa4>
900085ac:	2a3f      	cmp	r2, #63	; 0x3f
900085ae:	d009      	beq.n	900085c4 <EwScreenCopyAlpha8RowGradient+0xb8>
900085b0:	3301      	adds	r3, #1
900085b2:	fb02 3303 	mla	r3, r2, r3, r3
900085b6:	099b      	lsrs	r3, r3, #6
900085b8:	4359      	muls	r1, r3
900085ba:	435c      	muls	r4, r3
900085bc:	ea0a 1191 	and.w	r1, sl, r1, lsr #6
900085c0:	ea0b 1494 	and.w	r4, fp, r4, lsr #6
900085c4:	4321      	orrs	r1, r4
900085c6:	8031      	strh	r1, [r6, #0]
900085c8:	e7d6      	b.n	90008578 <EwScreenCopyAlpha8RowGradient+0x6c>
900085ca:	bf00      	nop
900085cc:	00fc07e0 	.word	0x00fc07e0

900085d0 <EwScreenCopyAlpha8RowGradientBlend>:
900085d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900085d4:	6807      	ldr	r7, [r0, #0]
900085d6:	b087      	sub	sp, #28
900085d8:	6858      	ldr	r0, [r3, #4]
900085da:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
900085de:	6b1c      	ldr	r4, [r3, #48]	; 0x30
900085e0:	9001      	str	r0, [sp, #4]
900085e2:	6958      	ldr	r0, [r3, #20]
900085e4:	0124      	lsls	r4, r4, #4
900085e6:	680e      	ldr	r6, [r1, #0]
900085e8:	9002      	str	r0, [sp, #8]
900085ea:	6a58      	ldr	r0, [r3, #36]	; 0x24
900085ec:	f8d3 c000 	ldr.w	ip, [r3]
900085f0:	9003      	str	r0, [sp, #12]
900085f2:	6b58      	ldr	r0, [r3, #52]	; 0x34
900085f4:	f8d3 e010 	ldr.w	lr, [r3, #16]
900085f8:	f8d3 8020 	ldr.w	r8, [r3, #32]
900085fc:	0100      	lsls	r0, r0, #4
900085fe:	18b3      	adds	r3, r6, r2
90008600:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 900086b0 <EwScreenCopyAlpha8RowGradientBlend+0xe0>
90008604:	9004      	str	r0, [sp, #16]
90008606:	9305      	str	r3, [sp, #20]
90008608:	9b05      	ldr	r3, [sp, #20]
9000860a:	1b9b      	subs	r3, r3, r6
9000860c:	2b00      	cmp	r3, #0
9000860e:	dc02      	bgt.n	90008616 <EwScreenCopyAlpha8RowGradientBlend+0x46>
90008610:	b007      	add	sp, #28
90008612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008616:	f816 5b01 	ldrb.w	r5, [r6], #1
9000861a:	2d00      	cmp	r5, #0
9000861c:	d046      	beq.n	900086ac <EwScreenCopyAlpha8RowGradientBlend+0xdc>
9000861e:	ea4f 131c 	mov.w	r3, ip, lsr #4
90008622:	f403 027f 	and.w	r2, r3, #16711680	; 0xff0000
90008626:	ea4f 331e 	mov.w	r3, lr, lsr #12
9000862a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9000862e:	4313      	orrs	r3, r2
90008630:	f004 427f 	and.w	r2, r4, #4278190080	; 0xff000000
90008634:	4313      	orrs	r3, r2
90008636:	f3c8 5207 	ubfx	r2, r8, #20, #8
9000863a:	4313      	orrs	r3, r2
9000863c:	08ad      	lsrs	r5, r5, #2
9000863e:	d02b      	beq.n	90008698 <EwScreenCopyAlpha8RowGradientBlend+0xc8>
90008640:	ea5f 6a93 	movs.w	sl, r3, lsr #26
90008644:	d028      	beq.n	90008698 <EwScreenCopyAlpha8RowGradientBlend+0xc8>
90008646:	0a19      	lsrs	r1, r3, #8
90008648:	f3c3 02c4 	ubfx	r2, r3, #3, #5
9000864c:	2d3f      	cmp	r5, #63	; 0x3f
9000864e:	ea4f 1353 	mov.w	r3, r3, lsr #5
90008652:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90008656:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9000865a:	ea41 0102 	orr.w	r1, r1, r2
9000865e:	d102      	bne.n	90008666 <EwScreenCopyAlpha8RowGradientBlend+0x96>
90008660:	f1ba 0f3f 	cmp.w	sl, #63	; 0x3f
90008664:	d016      	beq.n	90008694 <EwScreenCopyAlpha8RowGradientBlend+0xc4>
90008666:	3501      	adds	r5, #1
90008668:	8838      	ldrh	r0, [r7, #0]
9000866a:	fb0a 5505 	mla	r5, sl, r5, r5
9000866e:	09aa      	lsrs	r2, r5, #6
90008670:	f420 65fc 	bic.w	r5, r0, #2016	; 0x7e0
90008674:	ea00 0009 	and.w	r0, r0, r9
90008678:	f1c2 0a40 	rsb	sl, r2, #64	; 0x40
9000867c:	fb0a f505 	mul.w	r5, sl, r5
90008680:	fb0a f000 	mul.w	r0, sl, r0
90008684:	fb02 5101 	mla	r1, r2, r1, r5
90008688:	fb02 0003 	mla	r0, r2, r3, r0
9000868c:	ea0b 1191 	and.w	r1, fp, r1, lsr #6
90008690:	ea09 1390 	and.w	r3, r9, r0, lsr #6
90008694:	430b      	orrs	r3, r1
90008696:	803b      	strh	r3, [r7, #0]
90008698:	9b01      	ldr	r3, [sp, #4]
9000869a:	3702      	adds	r7, #2
9000869c:	449c      	add	ip, r3
9000869e:	9b02      	ldr	r3, [sp, #8]
900086a0:	449e      	add	lr, r3
900086a2:	9b03      	ldr	r3, [sp, #12]
900086a4:	4498      	add	r8, r3
900086a6:	9b04      	ldr	r3, [sp, #16]
900086a8:	441c      	add	r4, r3
900086aa:	e7ad      	b.n	90008608 <EwScreenCopyAlpha8RowGradientBlend+0x38>
900086ac:	462b      	mov	r3, r5
900086ae:	e7c5      	b.n	9000863c <EwScreenCopyAlpha8RowGradientBlend+0x6c>
900086b0:	00fc07e0 	.word	0x00fc07e0

900086b4 <EwScreenCopyRGB565Row>:
900086b4:	6803      	ldr	r3, [r0, #0]
900086b6:	6809      	ldr	r1, [r1, #0]
900086b8:	3b02      	subs	r3, #2
900086ba:	2a00      	cmp	r2, #0
900086bc:	dc00      	bgt.n	900086c0 <EwScreenCopyRGB565Row+0xc>
900086be:	4770      	bx	lr
900086c0:	f831 0b02 	ldrh.w	r0, [r1], #2
900086c4:	3a01      	subs	r2, #1
900086c6:	f823 0f02 	strh.w	r0, [r3, #2]!
900086ca:	e7f6      	b.n	900086ba <EwScreenCopyRGB565Row+0x6>

900086cc <EwScreenCopyRGB565RowSolid>:
900086cc:	b570      	push	{r4, r5, r6, lr}
900086ce:	680d      	ldr	r5, [r1, #0]
900086d0:	f64f 061f 	movw	r6, #63519	; 0xf81f
900086d4:	6b19      	ldr	r1, [r3, #48]	; 0x30
900086d6:	6804      	ldr	r4, [r0, #0]
900086d8:	1589      	asrs	r1, r1, #22
900086da:	3101      	adds	r1, #1
900086dc:	2a00      	cmp	r2, #0
900086de:	dc00      	bgt.n	900086e2 <EwScreenCopyRGB565RowSolid+0x16>
900086e0:	bd70      	pop	{r4, r5, r6, pc}
900086e2:	f835 3b02 	ldrh.w	r3, [r5], #2
900086e6:	b15b      	cbz	r3, 90008700 <EwScreenCopyRGB565RowSolid+0x34>
900086e8:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
900086ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900086f0:	434b      	muls	r3, r1
900086f2:	4348      	muls	r0, r1
900086f4:	099b      	lsrs	r3, r3, #6
900086f6:	ea06 1090 	and.w	r0, r6, r0, lsr #6
900086fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900086fe:	4303      	orrs	r3, r0
90008700:	3a01      	subs	r2, #1
90008702:	f824 3b02 	strh.w	r3, [r4], #2
90008706:	e7e9      	b.n	900086dc <EwScreenCopyRGB565RowSolid+0x10>

90008708 <EwScreenCopyRGB565RowSolidBlend>:
90008708:	b5f0      	push	{r4, r5, r6, r7, lr}
9000870a:	6804      	ldr	r4, [r0, #0]
9000870c:	f64f 071f 	movw	r7, #63519	; 0xf81f
90008710:	6b18      	ldr	r0, [r3, #48]	; 0x30
90008712:	680d      	ldr	r5, [r1, #0]
90008714:	1580      	asrs	r0, r0, #22
90008716:	1c46      	adds	r6, r0, #1
90008718:	f1c0 003f 	rsb	r0, r0, #63	; 0x3f
9000871c:	2a00      	cmp	r2, #0
9000871e:	dc00      	bgt.n	90008722 <EwScreenCopyRGB565RowSolidBlend+0x1a>
90008720:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008722:	8823      	ldrh	r3, [r4, #0]
90008724:	3a01      	subs	r2, #1
90008726:	f835 cb02 	ldrh.w	ip, [r5], #2
9000872a:	f423 61fc 	bic.w	r1, r3, #2016	; 0x7e0
9000872e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008732:	f42c 6efc 	bic.w	lr, ip, #2016	; 0x7e0
90008736:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9000873a:	4343      	muls	r3, r0
9000873c:	4341      	muls	r1, r0
9000873e:	fb06 330c 	mla	r3, r6, ip, r3
90008742:	fb06 110e 	mla	r1, r6, lr, r1
90008746:	099b      	lsrs	r3, r3, #6
90008748:	ea07 1191 	and.w	r1, r7, r1, lsr #6
9000874c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008750:	430b      	orrs	r3, r1
90008752:	f824 3b02 	strh.w	r3, [r4], #2
90008756:	e7e1      	b.n	9000871c <EwScreenCopyRGB565RowSolidBlend+0x14>

90008758 <EwScreenCopyRGB565RowGradient>:
90008758:	b5f0      	push	{r4, r5, r6, r7, lr}
9000875a:	f64f 0c1f 	movw	ip, #63519	; 0xf81f
9000875e:	6805      	ldr	r5, [r0, #0]
90008760:	680e      	ldr	r6, [r1, #0]
90008762:	e9d3 470c 	ldrd	r4, r7, [r3, #48]	; 0x30
90008766:	2a00      	cmp	r2, #0
90008768:	dc00      	bgt.n	9000876c <EwScreenCopyRGB565RowGradient+0x14>
9000876a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000876c:	f836 3b02 	ldrh.w	r3, [r6], #2
90008770:	b17b      	cbz	r3, 90008792 <EwScreenCopyRGB565RowGradient+0x3a>
90008772:	ea4f 5ea4 	mov.w	lr, r4, asr #22
90008776:	f403 61fc 	and.w	r1, r3, #2016	; 0x7e0
9000877a:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
9000877e:	fb0e 1301 	mla	r3, lr, r1, r1
90008782:	fb0e 0000 	mla	r0, lr, r0, r0
90008786:	099b      	lsrs	r3, r3, #6
90008788:	ea0c 1090 	and.w	r0, ip, r0, lsr #6
9000878c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008790:	4303      	orrs	r3, r0
90008792:	443c      	add	r4, r7
90008794:	3a01      	subs	r2, #1
90008796:	f825 3b02 	strh.w	r3, [r5], #2
9000879a:	e7e4      	b.n	90008766 <EwScreenCopyRGB565RowGradient+0xe>

9000879c <EwScreenCopyRGB565RowGradientBlend>:
9000879c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900087a0:	6800      	ldr	r0, [r0, #0]
900087a2:	f64f 071f 	movw	r7, #63519	; 0xf81f
900087a6:	680d      	ldr	r5, [r1, #0]
900087a8:	e9d3 460c 	ldrd	r4, r6, [r3, #48]	; 0x30
900087ac:	2a00      	cmp	r2, #0
900087ae:	dc01      	bgt.n	900087b4 <EwScreenCopyRGB565RowGradientBlend+0x18>
900087b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900087b4:	f835 3b02 	ldrh.w	r3, [r5], #2
900087b8:	ea4f 58a4 	mov.w	r8, r4, asr #22
900087bc:	f8b0 c000 	ldrh.w	ip, [r0]
900087c0:	4434      	add	r4, r6
900087c2:	f423 61fc 	bic.w	r1, r3, #2016	; 0x7e0
900087c6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900087ca:	f1c8 0e3f 	rsb	lr, r8, #63	; 0x3f
900087ce:	f42c 69fc 	bic.w	r9, ip, #2016	; 0x7e0
900087d2:	fb08 3303 	mla	r3, r8, r3, r3
900087d6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900087da:	fb08 1101 	mla	r1, r8, r1, r1
900087de:	3a01      	subs	r2, #1
900087e0:	fb0e 330c 	mla	r3, lr, ip, r3
900087e4:	fb0e 1109 	mla	r1, lr, r9, r1
900087e8:	099b      	lsrs	r3, r3, #6
900087ea:	ea07 1191 	and.w	r1, r7, r1, lsr #6
900087ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900087f2:	430b      	orrs	r3, r1
900087f4:	f820 3b02 	strh.w	r3, [r0], #2
900087f8:	e7d8      	b.n	900087ac <EwScreenCopyRGB565RowGradientBlend+0x10>

900087fa <EwScreenWarpNativeRow>:
900087fa:	e92d 4cf0 	stmdb	sp!, {r4, r5, r6, r7, sl, fp, lr}
900087fe:	680d      	ldr	r5, [r1, #0]
90008800:	6889      	ldr	r1, [r1, #8]
90008802:	9e07      	ldr	r6, [sp, #28]
90008804:	6804      	ldr	r4, [r0, #0]
90008806:	ea4f 0ca1 	mov.w	ip, r1, asr #2
9000880a:	2a00      	cmp	r2, #0
9000880c:	dc01      	bgt.n	90008812 <EwScreenWarpNativeRow+0x18>
9000880e:	e8bd 8cf0 	ldmia.w	sp!, {r4, r5, r6, r7, sl, fp, pc}
90008812:	980b      	ldr	r0, [sp, #44]	; 0x2c
90008814:	1331      	asrs	r1, r6, #12
90008816:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90008818:	4341      	muls	r1, r0
9000881a:	1408      	asrs	r0, r1, #16
9000881c:	1319      	asrs	r1, r3, #12
9000881e:	4379      	muls	r1, r7
90008820:	1409      	asrs	r1, r1, #16
90008822:	fb0c 1100 	mla	r1, ip, r0, r1
90008826:	f855 0021 	ldr.w	r0, [r5, r1, lsl #2]
9000882a:	ea5f 6b90 	movs.w	fp, r0, lsr #26
9000882e:	d020      	beq.n	90008872 <EwScreenWarpNativeRow+0x78>
90008830:	ea4f 2a10 	mov.w	sl, r0, lsr #8
90008834:	f3c0 01c4 	ubfx	r1, r0, #3, #5
90008838:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9000883c:	ea4a 0a01 	orr.w	sl, sl, r1
90008840:	0941      	lsrs	r1, r0, #5
90008842:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90008846:	fb0b aa0a 	mla	sl, fp, sl, sl
9000884a:	fb0b 1101 	mla	r1, fp, r1, r1
9000884e:	ea4f 1a9a 	mov.w	sl, sl, lsr #6
90008852:	0989      	lsrs	r1, r1, #6
90008854:	f42a 6afc 	bic.w	sl, sl, #2016	; 0x7e0
90008858:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000885c:	ea4a 0101 	orr.w	r1, sl, r1
90008860:	b289      	uxth	r1, r1
90008862:	f824 1b02 	strh.w	r1, [r4], #2
90008866:	3a01      	subs	r2, #1
90008868:	9908      	ldr	r1, [sp, #32]
9000886a:	440b      	add	r3, r1
9000886c:	9909      	ldr	r1, [sp, #36]	; 0x24
9000886e:	440e      	add	r6, r1
90008870:	e7cb      	b.n	9000880a <EwScreenWarpNativeRow+0x10>
90008872:	4659      	mov	r1, fp
90008874:	e7f5      	b.n	90008862 <EwScreenWarpNativeRow+0x68>

90008876 <EwScreenWarpNativeRowFilter>:
90008876:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000887a:	461d      	mov	r5, r3
9000887c:	6803      	ldr	r3, [r0, #0]
9000887e:	680f      	ldr	r7, [r1, #0]
90008880:	4614      	mov	r4, r2
90008882:	9300      	str	r3, [sp, #0]
90008884:	688b      	ldr	r3, [r1, #8]
90008886:	109b      	asrs	r3, r3, #2
90008888:	9301      	str	r3, [sp, #4]
9000888a:	3301      	adds	r3, #1
9000888c:	009e      	lsls	r6, r3, #2
9000888e:	2c00      	cmp	r4, #0
90008890:	dc02      	bgt.n	90008898 <EwScreenWarpNativeRowFilter+0x22>
90008892:	b003      	add	sp, #12
90008894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008898:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000889a:	1329      	asrs	r1, r5, #12
9000889c:	4359      	muls	r1, r3
9000889e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900088a0:	1318      	asrs	r0, r3, #12
900088a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900088a4:	1309      	asrs	r1, r1, #12
900088a6:	4358      	muls	r0, r3
900088a8:	9b01      	ldr	r3, [sp, #4]
900088aa:	3908      	subs	r1, #8
900088ac:	1300      	asrs	r0, r0, #12
900088ae:	110a      	asrs	r2, r1, #4
900088b0:	f001 010f 	and.w	r1, r1, #15
900088b4:	3808      	subs	r0, #8
900088b6:	f1c1 0e10 	rsb	lr, r1, #16
900088ba:	ea4f 1c20 	mov.w	ip, r0, asr #4
900088be:	f000 000f 	and.w	r0, r0, #15
900088c2:	fb03 220c 	mla	r2, r3, ip, r2
900088c6:	f1c0 0810 	rsb	r8, r0, #16
900088ca:	fb00 fe0e 	mul.w	lr, r0, lr
900088ce:	eb07 0382 	add.w	r3, r7, r2, lsl #2
900088d2:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
900088d6:	fb01 f808 	mul.w	r8, r1, r8
900088da:	199a      	adds	r2, r3, r6
900088dc:	4341      	muls	r1, r0
900088de:	6858      	ldr	r0, [r3, #4]
900088e0:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
900088e4:	f852 9c04 	ldr.w	r9, [r2, #-4]
900088e8:	ea4f 221a 	mov.w	r2, sl, lsr #8
900088ec:	ebac 0c0e 	sub.w	ip, ip, lr
900088f0:	599b      	ldr	r3, [r3, r6]
900088f2:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
900088f6:	0a02      	lsrs	r2, r0, #8
900088f8:	ebac 0c01 	sub.w	ip, ip, r1
900088fc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90008900:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90008904:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90008908:	fb08 f000 	mul.w	r0, r8, r0
9000890c:	fb08 f202 	mul.w	r2, r8, r2
90008910:	fb0c 000a 	mla	r0, ip, sl, r0
90008914:	fb0c 220b 	mla	r2, ip, fp, r2
90008918:	ea4f 2b13 	mov.w	fp, r3, lsr #8
9000891c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90008920:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008924:	fb01 0003 	mla	r0, r1, r3, r0
90008928:	fb01 220b 	mla	r2, r1, fp, r2
9000892c:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90008930:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90008934:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008938:	fb0e 220b 	mla	r2, lr, fp, r2
9000893c:	fb0e 0e09 	mla	lr, lr, r9, r0
90008940:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90008944:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90008948:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9000894c:	ea42 0e0e 	orr.w	lr, r2, lr
90008950:	0e92      	lsrs	r2, r2, #26
90008952:	d016      	beq.n	90008982 <EwScreenWarpNativeRowFilter+0x10c>
90008954:	ea4f 211e 	mov.w	r1, lr, lsr #8
90008958:	f3ce 03c4 	ubfx	r3, lr, #3, #5
9000895c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90008960:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90008964:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90008968:	430b      	orrs	r3, r1
9000896a:	fb02 3303 	mla	r3, r2, r3, r3
9000896e:	fb02 e20e 	mla	r2, r2, lr, lr
90008972:	099b      	lsrs	r3, r3, #6
90008974:	0992      	lsrs	r2, r2, #6
90008976:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9000897a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9000897e:	431a      	orrs	r2, r3
90008980:	b292      	uxth	r2, r2
90008982:	9b00      	ldr	r3, [sp, #0]
90008984:	3c01      	subs	r4, #1
90008986:	f823 2b02 	strh.w	r2, [r3], #2
9000898a:	9300      	str	r3, [sp, #0]
9000898c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000898e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90008990:	441d      	add	r5, r3
90008992:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90008994:	4413      	add	r3, r2
90008996:	930c      	str	r3, [sp, #48]	; 0x30
90008998:	e779      	b.n	9000888e <EwScreenWarpNativeRowFilter+0x18>

9000899a <EwScreenWarpNativeRowBlend>:
9000899a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000899e:	688f      	ldr	r7, [r1, #8]
900089a0:	f64f 091f 	movw	r9, #63519	; 0xf81f
900089a4:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900089a8:	6805      	ldr	r5, [r0, #0]
900089aa:	10bf      	asrs	r7, r7, #2
900089ac:	680e      	ldr	r6, [r1, #0]
900089ae:	2a00      	cmp	r2, #0
900089b0:	dc01      	bgt.n	900089b6 <EwScreenWarpNativeRowBlend+0x1c>
900089b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900089b6:	980d      	ldr	r0, [sp, #52]	; 0x34
900089b8:	ea4f 312b 	mov.w	r1, fp, asr #12
900089bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900089be:	4341      	muls	r1, r0
900089c0:	1408      	asrs	r0, r1, #16
900089c2:	1319      	asrs	r1, r3, #12
900089c4:	4361      	muls	r1, r4
900089c6:	1409      	asrs	r1, r1, #16
900089c8:	fb07 1100 	mla	r1, r7, r0, r1
900089cc:	f856 0021 	ldr.w	r0, [r6, r1, lsl #2]
900089d0:	0e84      	lsrs	r4, r0, #26
900089d2:	d023      	beq.n	90008a1c <EwScreenWarpNativeRowBlend+0x82>
900089d4:	0a01      	lsrs	r1, r0, #8
900089d6:	f3c0 0ec4 	ubfx	lr, r0, #3, #5
900089da:	2c3f      	cmp	r4, #63	; 0x3f
900089dc:	ea4f 1050 	mov.w	r0, r0, lsr #5
900089e0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900089e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900089e8:	ea41 010e 	orr.w	r1, r1, lr
900089ec:	d014      	beq.n	90008a18 <EwScreenWarpNativeRowBlend+0x7e>
900089ee:	f8b5 e000 	ldrh.w	lr, [r5]
900089f2:	f1c4 083f 	rsb	r8, r4, #63	; 0x3f
900089f6:	fb04 0000 	mla	r0, r4, r0, r0
900089fa:	f42e 6afc 	bic.w	sl, lr, #2016	; 0x7e0
900089fe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90008a02:	fb04 1101 	mla	r1, r4, r1, r1
90008a06:	fb08 000e 	mla	r0, r8, lr, r0
90008a0a:	fb08 110a 	mla	r1, r8, sl, r1
90008a0e:	0980      	lsrs	r0, r0, #6
90008a10:	ea09 1191 	and.w	r1, r9, r1, lsr #6
90008a14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90008a18:	4301      	orrs	r1, r0
90008a1a:	8029      	strh	r1, [r5, #0]
90008a1c:	990a      	ldr	r1, [sp, #40]	; 0x28
90008a1e:	3502      	adds	r5, #2
90008a20:	3a01      	subs	r2, #1
90008a22:	440b      	add	r3, r1
90008a24:	990b      	ldr	r1, [sp, #44]	; 0x2c
90008a26:	448b      	add	fp, r1
90008a28:	e7c1      	b.n	900089ae <EwScreenWarpNativeRowBlend+0x14>

90008a2a <EwScreenWarpNativeRowFilterBlend>:
90008a2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008a2e:	461e      	mov	r6, r3
90008a30:	688b      	ldr	r3, [r1, #8]
90008a32:	b085      	sub	sp, #20
90008a34:	6805      	ldr	r5, [r0, #0]
90008a36:	109b      	asrs	r3, r3, #2
90008a38:	680f      	ldr	r7, [r1, #0]
90008a3a:	9303      	str	r3, [sp, #12]
90008a3c:	3301      	adds	r3, #1
90008a3e:	009b      	lsls	r3, r3, #2
90008a40:	e9cd 2301 	strd	r2, r3, [sp, #4]
90008a44:	9b01      	ldr	r3, [sp, #4]
90008a46:	2b00      	cmp	r3, #0
90008a48:	dc02      	bgt.n	90008a50 <EwScreenWarpNativeRowFilterBlend+0x26>
90008a4a:	b005      	add	sp, #20
90008a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008a50:	9b11      	ldr	r3, [sp, #68]	; 0x44
90008a52:	1331      	asrs	r1, r6, #12
90008a54:	9c03      	ldr	r4, [sp, #12]
90008a56:	4359      	muls	r1, r3
90008a58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90008a5a:	1318      	asrs	r0, r3, #12
90008a5c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90008a5e:	1309      	asrs	r1, r1, #12
90008a60:	4358      	muls	r0, r3
90008a62:	3908      	subs	r1, #8
90008a64:	1300      	asrs	r0, r0, #12
90008a66:	110b      	asrs	r3, r1, #4
90008a68:	f001 010f 	and.w	r1, r1, #15
90008a6c:	3808      	subs	r0, #8
90008a6e:	f1c1 0e10 	rsb	lr, r1, #16
90008a72:	1102      	asrs	r2, r0, #4
90008a74:	f000 000f 	and.w	r0, r0, #15
90008a78:	fb04 3302 	mla	r3, r4, r2, r3
90008a7c:	f1c0 0810 	rsb	r8, r0, #16
90008a80:	fb00 fe0e 	mul.w	lr, r0, lr
90008a84:	9c02      	ldr	r4, [sp, #8]
90008a86:	eb07 0283 	add.w	r2, r7, r3, lsl #2
90008a8a:	f857 a023 	ldr.w	sl, [r7, r3, lsl #2]
90008a8e:	9b02      	ldr	r3, [sp, #8]
90008a90:	fb01 f808 	mul.w	r8, r1, r8
90008a94:	4341      	muls	r1, r0
90008a96:	6850      	ldr	r0, [r2, #4]
90008a98:	18d3      	adds	r3, r2, r3
90008a9a:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
90008a9e:	5912      	ldr	r2, [r2, r4]
90008aa0:	f853 9c04 	ldr.w	r9, [r3, #-4]
90008aa4:	ea4f 231a 	mov.w	r3, sl, lsr #8
90008aa8:	ebac 0c0e 	sub.w	ip, ip, lr
90008aac:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90008ab0:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
90008ab4:	0a03      	lsrs	r3, r0, #8
90008ab6:	ebac 0c01 	sub.w	ip, ip, r1
90008aba:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90008abe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90008ac2:	fb08 f000 	mul.w	r0, r8, r0
90008ac6:	fb08 f303 	mul.w	r3, r8, r3
90008aca:	fb0c 000a 	mla	r0, ip, sl, r0
90008ace:	fb0c 330b 	mla	r3, ip, fp, r3
90008ad2:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90008ad6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90008ada:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008ade:	fb01 0002 	mla	r0, r1, r2, r0
90008ae2:	fb01 330b 	mla	r3, r1, fp, r3
90008ae6:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90008aea:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90008aee:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008af2:	fb0e 0209 	mla	r2, lr, r9, r0
90008af6:	fb0e 330b 	mla	r3, lr, fp, r3
90008afa:	0a12      	lsrs	r2, r2, #8
90008afc:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90008b00:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90008b04:	431a      	orrs	r2, r3
90008b06:	0e9b      	lsrs	r3, r3, #26
90008b08:	d024      	beq.n	90008b54 <EwScreenWarpNativeRowFilterBlend+0x12a>
90008b0a:	0a11      	lsrs	r1, r2, #8
90008b0c:	f3c2 00c4 	ubfx	r0, r2, #3, #5
90008b10:	2b3f      	cmp	r3, #63	; 0x3f
90008b12:	ea4f 1252 	mov.w	r2, r2, lsr #5
90008b16:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90008b1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90008b1e:	ea41 0100 	orr.w	r1, r1, r0
90008b22:	d015      	beq.n	90008b50 <EwScreenWarpNativeRowFilterBlend+0x126>
90008b24:	8828      	ldrh	r0, [r5, #0]
90008b26:	f1c3 0c3f 	rsb	ip, r3, #63	; 0x3f
90008b2a:	fb03 1101 	mla	r1, r3, r1, r1
90008b2e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90008b32:	fb03 2302 	mla	r3, r3, r2, r2
90008b36:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90008b3a:	fb0c 110e 	mla	r1, ip, lr, r1
90008b3e:	fb0c 3200 	mla	r2, ip, r0, r3
90008b42:	f64f 031f 	movw	r3, #63519	; 0xf81f
90008b46:	0992      	lsrs	r2, r2, #6
90008b48:	ea03 1191 	and.w	r1, r3, r1, lsr #6
90008b4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90008b50:	430a      	orrs	r2, r1
90008b52:	802a      	strh	r2, [r5, #0]
90008b54:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90008b56:	3502      	adds	r5, #2
90008b58:	9a10      	ldr	r2, [sp, #64]	; 0x40
90008b5a:	441e      	add	r6, r3
90008b5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90008b5e:	4413      	add	r3, r2
90008b60:	930e      	str	r3, [sp, #56]	; 0x38
90008b62:	9b01      	ldr	r3, [sp, #4]
90008b64:	3b01      	subs	r3, #1
90008b66:	9301      	str	r3, [sp, #4]
90008b68:	e76c      	b.n	90008a44 <EwScreenWarpNativeRowFilterBlend+0x1a>

90008b6a <EwScreenWarpNativeRowGradient>:
90008b6a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008b6e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90008b70:	f8d0 c000 	ldr.w	ip, [r0]
90008b74:	6b26      	ldr	r6, [r4, #48]	; 0x30
90008b76:	6808      	ldr	r0, [r1, #0]
90008b78:	15b7      	asrs	r7, r6, #22
90008b7a:	6889      	ldr	r1, [r1, #8]
90008b7c:	f8d4 a050 	ldr.w	sl, [r4, #80]	; 0x50
90008b80:	ea4f 0ba1 	mov.w	fp, r1, asr #2
90008b84:	3701      	adds	r7, #1
90008b86:	9001      	str	r0, [sp, #4]
90008b88:	f1ba 0f00 	cmp.w	sl, #0
90008b8c:	d109      	bne.n	90008ba2 <EwScreenWarpNativeRowGradient+0x38>
90008b8e:	6d65      	ldr	r5, [r4, #84]	; 0x54
90008b90:	fab5 f585 	clz	r5, r5
90008b94:	096d      	lsrs	r5, r5, #5
90008b96:	4610      	mov	r0, r2
90008b98:	2800      	cmp	r0, #0
90008b9a:	dc04      	bgt.n	90008ba6 <EwScreenWarpNativeRowGradient+0x3c>
90008b9c:	b003      	add	sp, #12
90008b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008ba2:	2500      	movs	r5, #0
90008ba4:	e7f7      	b.n	90008b96 <EwScreenWarpNativeRowGradient+0x2c>
90008ba6:	990f      	ldr	r1, [sp, #60]	; 0x3c
90008ba8:	131a      	asrs	r2, r3, #12
90008baa:	434a      	muls	r2, r1
90008bac:	990c      	ldr	r1, [sp, #48]	; 0x30
90008bae:	ea4f 3921 	mov.w	r9, r1, asr #12
90008bb2:	9910      	ldr	r1, [sp, #64]	; 0x40
90008bb4:	ea4f 4e22 	mov.w	lr, r2, asr #16
90008bb8:	fb01 f909 	mul.w	r9, r1, r9
90008bbc:	ea4f 4929 	mov.w	r9, r9, asr #16
90008bc0:	fb09 f10b 	mul.w	r1, r9, fp
90008bc4:	eb01 4222 	add.w	r2, r1, r2, asr #16
90008bc8:	9901      	ldr	r1, [sp, #4]
90008bca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90008bce:	bb25      	cbnz	r5, 90008c1a <EwScreenWarpNativeRowGradient+0xb0>
90008bd0:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90008bd4:	f1ba 0f00 	cmp.w	sl, #0
90008bd8:	d046      	beq.n	90008c68 <EwScreenWarpNativeRowGradient+0xfe>
90008bda:	f1b9 0f00 	cmp.w	r9, #0
90008bde:	d045      	beq.n	90008c6c <EwScreenWarpNativeRowGradient+0x102>
90008be0:	6b62      	ldr	r2, [r4, #52]	; 0x34
90008be2:	fb02 6209 	mla	r2, r2, r9, r6
90008be6:	6d67      	ldr	r7, [r4, #84]	; 0x54
90008be8:	b12f      	cbz	r7, 90008bf6 <EwScreenWarpNativeRowGradient+0x8c>
90008bea:	f1b9 0f00 	cmp.w	r9, #0
90008bee:	d002      	beq.n	90008bf6 <EwScreenWarpNativeRowGradient+0x8c>
90008bf0:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90008bf2:	fb07 8809 	mla	r8, r7, r9, r8
90008bf6:	6d67      	ldr	r7, [r4, #84]	; 0x54
90008bf8:	b167      	cbz	r7, 90008c14 <EwScreenWarpNativeRowGradient+0xaa>
90008bfa:	f1be 0f00 	cmp.w	lr, #0
90008bfe:	d009      	beq.n	90008c14 <EwScreenWarpNativeRowGradient+0xaa>
90008c00:	1517      	asrs	r7, r2, #20
90008c02:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90008c06:	ebc7 5828 	rsb	r8, r7, r8, asr #20
90008c0a:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90008c0c:	fb07 f808 	mul.w	r8, r7, r8
90008c10:	fb0e 2208 	mla	r2, lr, r8, r2
90008c14:	f3c2 5285 	ubfx	r2, r2, #22, #6
90008c18:	1c57      	adds	r7, r2, #1
90008c1a:	0e0a      	lsrs	r2, r1, #24
90008c1c:	fb02 7207 	mla	r2, r2, r7, r7
90008c20:	0a12      	lsrs	r2, r2, #8
90008c22:	d017      	beq.n	90008c54 <EwScreenWarpNativeRowGradient+0xea>
90008c24:	ea4f 2811 	mov.w	r8, r1, lsr #8
90008c28:	f3c1 0ec4 	ubfx	lr, r1, #3, #5
90008c2c:	0949      	lsrs	r1, r1, #5
90008c2e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
90008c32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90008c36:	ea48 0e0e 	orr.w	lr, r8, lr
90008c3a:	fb0e fe02 	mul.w	lr, lr, r2
90008c3e:	434a      	muls	r2, r1
90008c40:	ea4f 1e9e 	mov.w	lr, lr, lsr #6
90008c44:	0992      	lsrs	r2, r2, #6
90008c46:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90008c4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90008c4e:	ea4e 0202 	orr.w	r2, lr, r2
90008c52:	b292      	uxth	r2, r2
90008c54:	f82c 2b02 	strh.w	r2, [ip], #2
90008c58:	3801      	subs	r0, #1
90008c5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90008c5c:	990e      	ldr	r1, [sp, #56]	; 0x38
90008c5e:	4413      	add	r3, r2
90008c60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90008c62:	440a      	add	r2, r1
90008c64:	920c      	str	r2, [sp, #48]	; 0x30
90008c66:	e797      	b.n	90008b98 <EwScreenWarpNativeRowGradient+0x2e>
90008c68:	4632      	mov	r2, r6
90008c6a:	e7c4      	b.n	90008bf6 <EwScreenWarpNativeRowGradient+0x8c>
90008c6c:	4632      	mov	r2, r6
90008c6e:	e7ba      	b.n	90008be6 <EwScreenWarpNativeRowGradient+0x7c>

90008c70 <EwScreenWarpNativeRowFilterGradient>:
90008c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008c74:	b089      	sub	sp, #36	; 0x24
90008c76:	9302      	str	r3, [sp, #8]
90008c78:	6803      	ldr	r3, [r0, #0]
90008c7a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90008c7c:	9304      	str	r3, [sp, #16]
90008c7e:	680b      	ldr	r3, [r1, #0]
90008c80:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
90008c84:	9306      	str	r3, [sp, #24]
90008c86:	688b      	ldr	r3, [r1, #8]
90008c88:	ea4f 51a8 	mov.w	r1, r8, asr #22
90008c8c:	109b      	asrs	r3, r3, #2
90008c8e:	3101      	adds	r1, #1
90008c90:	9307      	str	r3, [sp, #28]
90008c92:	6d23      	ldr	r3, [r4, #80]	; 0x50
90008c94:	9303      	str	r3, [sp, #12]
90008c96:	b973      	cbnz	r3, 90008cb6 <EwScreenWarpNativeRowFilterGradient+0x46>
90008c98:	6d66      	ldr	r6, [r4, #84]	; 0x54
90008c9a:	fab6 f686 	clz	r6, r6
90008c9e:	0976      	lsrs	r6, r6, #5
90008ca0:	9b07      	ldr	r3, [sp, #28]
90008ca2:	9201      	str	r2, [sp, #4]
90008ca4:	3301      	adds	r3, #1
90008ca6:	009b      	lsls	r3, r3, #2
90008ca8:	9305      	str	r3, [sp, #20]
90008caa:	9b01      	ldr	r3, [sp, #4]
90008cac:	2b00      	cmp	r3, #0
90008cae:	dc04      	bgt.n	90008cba <EwScreenWarpNativeRowFilterGradient+0x4a>
90008cb0:	b009      	add	sp, #36	; 0x24
90008cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008cb6:	2600      	movs	r6, #0
90008cb8:	e7f2      	b.n	90008ca0 <EwScreenWarpNativeRowFilterGradient+0x30>
90008cba:	9b02      	ldr	r3, [sp, #8]
90008cbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
90008cbe:	1318      	asrs	r0, r3, #12
90008cc0:	9b15      	ldr	r3, [sp, #84]	; 0x54
90008cc2:	ea4f 3c22 	mov.w	ip, r2, asr #12
90008cc6:	9a16      	ldr	r2, [sp, #88]	; 0x58
90008cc8:	4358      	muls	r0, r3
90008cca:	fb02 fc0c 	mul.w	ip, r2, ip
90008cce:	ea4f 3e20 	mov.w	lr, r0, asr #12
90008cd2:	ea4f 352c 	mov.w	r5, ip, asr #12
90008cd6:	bb0e      	cbnz	r6, 90008d1c <EwScreenWarpNativeRowFilterGradient+0xac>
90008cd8:	9a03      	ldr	r2, [sp, #12]
90008cda:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90008cdc:	2a00      	cmp	r2, #0
90008cde:	f000 809d 	beq.w	90008e1c <EwScreenWarpNativeRowFilterGradient+0x1ac>
90008ce2:	ea5f 422c 	movs.w	r2, ip, asr #16
90008ce6:	f000 809b 	beq.w	90008e20 <EwScreenWarpNativeRowFilterGradient+0x1b0>
90008cea:	6b61      	ldr	r1, [r4, #52]	; 0x34
90008cec:	fb01 8102 	mla	r1, r1, r2, r8
90008cf0:	6d63      	ldr	r3, [r4, #84]	; 0x54
90008cf2:	b11b      	cbz	r3, 90008cfc <EwScreenWarpNativeRowFilterGradient+0x8c>
90008cf4:	b112      	cbz	r2, 90008cfc <EwScreenWarpNativeRowFilterGradient+0x8c>
90008cf6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90008cf8:	fb03 7702 	mla	r7, r3, r2, r7
90008cfc:	6d62      	ldr	r2, [r4, #84]	; 0x54
90008cfe:	b152      	cbz	r2, 90008d16 <EwScreenWarpNativeRowFilterGradient+0xa6>
90008d00:	1400      	asrs	r0, r0, #16
90008d02:	d008      	beq.n	90008d16 <EwScreenWarpNativeRowFilterGradient+0xa6>
90008d04:	150a      	asrs	r2, r1, #20
90008d06:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90008d0a:	ebc2 5727 	rsb	r7, r2, r7, asr #20
90008d0e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
90008d10:	4357      	muls	r7, r2
90008d12:	fb00 1107 	mla	r1, r0, r7, r1
90008d16:	f3c1 5185 	ubfx	r1, r1, #22, #6
90008d1a:	3101      	adds	r1, #1
90008d1c:	f1ae 0008 	sub.w	r0, lr, #8
90008d20:	3d08      	subs	r5, #8
90008d22:	9a07      	ldr	r2, [sp, #28]
90008d24:	112b      	asrs	r3, r5, #4
90008d26:	f005 050f 	and.w	r5, r5, #15
90008d2a:	1107      	asrs	r7, r0, #4
90008d2c:	f000 000f 	and.w	r0, r0, #15
90008d30:	f1c5 0e10 	rsb	lr, r5, #16
90008d34:	fb02 7703 	mla	r7, r2, r3, r7
90008d38:	9b06      	ldr	r3, [sp, #24]
90008d3a:	f1c0 0c10 	rsb	ip, r0, #16
90008d3e:	fb00 fe0e 	mul.w	lr, r0, lr
90008d42:	eb03 0287 	add.w	r2, r3, r7, lsl #2
90008d46:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
90008d4a:	9b05      	ldr	r3, [sp, #20]
90008d4c:	fb05 fc0c 	mul.w	ip, r5, ip
90008d50:	4368      	muls	r0, r5
90008d52:	9f05      	ldr	r7, [sp, #20]
90008d54:	18d3      	adds	r3, r2, r3
90008d56:	6855      	ldr	r5, [r2, #4]
90008d58:	59d2      	ldr	r2, [r2, r7]
90008d5a:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
90008d5e:	f853 9c04 	ldr.w	r9, [r3, #-4]
90008d62:	ea4f 231a 	mov.w	r3, sl, lsr #8
90008d66:	eba7 070c 	sub.w	r7, r7, ip
90008d6a:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90008d6e:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
90008d72:	0a2b      	lsrs	r3, r5, #8
90008d74:	1a3f      	subs	r7, r7, r0
90008d76:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90008d7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90008d7e:	fb0e f505 	mul.w	r5, lr, r5
90008d82:	fb0e f303 	mul.w	r3, lr, r3
90008d86:	fb07 550a 	mla	r5, r7, sl, r5
90008d8a:	fb07 330b 	mla	r3, r7, fp, r3
90008d8e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90008d92:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90008d96:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008d9a:	fb00 5502 	mla	r5, r0, r2, r5
90008d9e:	fb00 330b 	mla	r3, r0, fp, r3
90008da2:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90008da6:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90008daa:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90008dae:	fb0c 330b 	mla	r3, ip, fp, r3
90008db2:	fb0c 5c09 	mla	ip, ip, r9, r5
90008db6:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90008dba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90008dbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90008dc2:	ea43 0c0c 	orr.w	ip, r3, ip
90008dc6:	0e1b      	lsrs	r3, r3, #24
90008dc8:	fb03 1301 	mla	r3, r3, r1, r1
90008dcc:	0a1b      	lsrs	r3, r3, #8
90008dce:	d015      	beq.n	90008dfc <EwScreenWarpNativeRowFilterGradient+0x18c>
90008dd0:	ea4f 201c 	mov.w	r0, ip, lsr #8
90008dd4:	f3cc 02c4 	ubfx	r2, ip, #3, #5
90008dd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90008ddc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90008de0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90008de4:	4302      	orrs	r2, r0
90008de6:	435a      	muls	r2, r3
90008de8:	fb0c f303 	mul.w	r3, ip, r3
90008dec:	0992      	lsrs	r2, r2, #6
90008dee:	099b      	lsrs	r3, r3, #6
90008df0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90008df4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90008df8:	4313      	orrs	r3, r2
90008dfa:	b29b      	uxth	r3, r3
90008dfc:	9a04      	ldr	r2, [sp, #16]
90008dfe:	f822 3b02 	strh.w	r3, [r2], #2
90008e02:	9b02      	ldr	r3, [sp, #8]
90008e04:	9204      	str	r2, [sp, #16]
90008e06:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90008e08:	4413      	add	r3, r2
90008e0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
90008e0c:	9302      	str	r3, [sp, #8]
90008e0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90008e10:	4413      	add	r3, r2
90008e12:	9312      	str	r3, [sp, #72]	; 0x48
90008e14:	9b01      	ldr	r3, [sp, #4]
90008e16:	3b01      	subs	r3, #1
90008e18:	9301      	str	r3, [sp, #4]
90008e1a:	e746      	b.n	90008caa <EwScreenWarpNativeRowFilterGradient+0x3a>
90008e1c:	4641      	mov	r1, r8
90008e1e:	e76d      	b.n	90008cfc <EwScreenWarpNativeRowFilterGradient+0x8c>
90008e20:	4641      	mov	r1, r8
90008e22:	e765      	b.n	90008cf0 <EwScreenWarpNativeRowFilterGradient+0x80>

90008e24 <EwScreenWarpNativeRowGradientBlend>:
90008e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008e28:	b085      	sub	sp, #20
90008e2a:	f8d0 c000 	ldr.w	ip, [r0]
90008e2e:	6808      	ldr	r0, [r1, #0]
90008e30:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90008e32:	6889      	ldr	r1, [r1, #8]
90008e34:	6b26      	ldr	r6, [r4, #48]	; 0x30
90008e36:	1089      	asrs	r1, r1, #2
90008e38:	f8d4 a050 	ldr.w	sl, [r4, #80]	; 0x50
90008e3c:	ea4f 58a6 	mov.w	r8, r6, asr #22
90008e40:	9301      	str	r3, [sp, #4]
90008e42:	9002      	str	r0, [sp, #8]
90008e44:	f108 0801 	add.w	r8, r8, #1
90008e48:	9103      	str	r1, [sp, #12]
90008e4a:	f1ba 0f00 	cmp.w	sl, #0
90008e4e:	d109      	bne.n	90008e64 <EwScreenWarpNativeRowGradientBlend+0x40>
90008e50:	6d65      	ldr	r5, [r4, #84]	; 0x54
90008e52:	fab5 f585 	clz	r5, r5
90008e56:	096d      	lsrs	r5, r5, #5
90008e58:	4610      	mov	r0, r2
90008e5a:	2800      	cmp	r0, #0
90008e5c:	dc04      	bgt.n	90008e68 <EwScreenWarpNativeRowGradientBlend+0x44>
90008e5e:	b005      	add	sp, #20
90008e60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008e64:	2500      	movs	r5, #0
90008e66:	e7f7      	b.n	90008e58 <EwScreenWarpNativeRowGradientBlend+0x34>
90008e68:	9b01      	ldr	r3, [sp, #4]
90008e6a:	9911      	ldr	r1, [sp, #68]	; 0x44
90008e6c:	131a      	asrs	r2, r3, #12
90008e6e:	434a      	muls	r2, r1
90008e70:	990e      	ldr	r1, [sp, #56]	; 0x38
90008e72:	ea4f 3921 	mov.w	r9, r1, asr #12
90008e76:	9912      	ldr	r1, [sp, #72]	; 0x48
90008e78:	ea4f 4e22 	mov.w	lr, r2, asr #16
90008e7c:	fb01 f909 	mul.w	r9, r1, r9
90008e80:	9903      	ldr	r1, [sp, #12]
90008e82:	ea4f 4729 	mov.w	r7, r9, asr #16
90008e86:	4379      	muls	r1, r7
90008e88:	eb01 4222 	add.w	r2, r1, r2, asr #16
90008e8c:	9902      	ldr	r1, [sp, #8]
90008e8e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90008e92:	bb15      	cbnz	r5, 90008eda <EwScreenWarpNativeRowGradientBlend+0xb6>
90008e94:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90008e98:	f1ba 0f00 	cmp.w	sl, #0
90008e9c:	d054      	beq.n	90008f48 <EwScreenWarpNativeRowGradientBlend+0x124>
90008e9e:	2f00      	cmp	r7, #0
90008ea0:	d054      	beq.n	90008f4c <EwScreenWarpNativeRowGradientBlend+0x128>
90008ea2:	6b62      	ldr	r2, [r4, #52]	; 0x34
90008ea4:	fb02 6207 	mla	r2, r2, r7, r6
90008ea8:	6d63      	ldr	r3, [r4, #84]	; 0x54
90008eaa:	b11b      	cbz	r3, 90008eb4 <EwScreenWarpNativeRowGradientBlend+0x90>
90008eac:	b117      	cbz	r7, 90008eb4 <EwScreenWarpNativeRowGradientBlend+0x90>
90008eae:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90008eb0:	fb03 8807 	mla	r8, r3, r7, r8
90008eb4:	6d67      	ldr	r7, [r4, #84]	; 0x54
90008eb6:	b167      	cbz	r7, 90008ed2 <EwScreenWarpNativeRowGradientBlend+0xae>
90008eb8:	f1be 0f00 	cmp.w	lr, #0
90008ebc:	d009      	beq.n	90008ed2 <EwScreenWarpNativeRowGradientBlend+0xae>
90008ebe:	1517      	asrs	r7, r2, #20
90008ec0:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90008ec4:	ebc7 5828 	rsb	r8, r7, r8, asr #20
90008ec8:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90008eca:	fb07 f808 	mul.w	r8, r7, r8
90008ece:	fb0e 2208 	mla	r2, lr, r8, r2
90008ed2:	f3c2 5285 	ubfx	r2, r2, #22, #6
90008ed6:	f102 0801 	add.w	r8, r2, #1
90008eda:	0e8a      	lsrs	r2, r1, #26
90008edc:	d028      	beq.n	90008f30 <EwScreenWarpNativeRowGradientBlend+0x10c>
90008ede:	ea4f 2911 	mov.w	r9, r1, lsr #8
90008ee2:	f3c1 07c4 	ubfx	r7, r1, #3, #5
90008ee6:	fb02 8208 	mla	r2, r2, r8, r8
90008eea:	0949      	lsrs	r1, r1, #5
90008eec:	f409 4978 	and.w	r9, r9, #63488	; 0xf800
90008ef0:	f64f 031f 	movw	r3, #63519	; 0xf81f
90008ef4:	0992      	lsrs	r2, r2, #6
90008ef6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90008efa:	ea49 0907 	orr.w	r9, r9, r7
90008efe:	f8bc 7000 	ldrh.w	r7, [ip]
90008f02:	f1c2 0b40 	rsb	fp, r2, #64	; 0x40
90008f06:	f427 6efc 	bic.w	lr, r7, #2016	; 0x7e0
90008f0a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90008f0e:	fb0b f707 	mul.w	r7, fp, r7
90008f12:	fb0b fe0e 	mul.w	lr, fp, lr
90008f16:	fb02 7701 	mla	r7, r2, r1, r7
90008f1a:	fb02 ee09 	mla	lr, r2, r9, lr
90008f1e:	09bf      	lsrs	r7, r7, #6
90008f20:	ea03 1e9e 	and.w	lr, r3, lr, lsr #6
90008f24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90008f28:	ea4e 0e07 	orr.w	lr, lr, r7
90008f2c:	f8ac e000 	strh.w	lr, [ip]
90008f30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90008f32:	f10c 0c02 	add.w	ip, ip, #2
90008f36:	9a01      	ldr	r2, [sp, #4]
90008f38:	3801      	subs	r0, #1
90008f3a:	441a      	add	r2, r3
90008f3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90008f3e:	9201      	str	r2, [sp, #4]
90008f40:	9a10      	ldr	r2, [sp, #64]	; 0x40
90008f42:	4413      	add	r3, r2
90008f44:	930e      	str	r3, [sp, #56]	; 0x38
90008f46:	e788      	b.n	90008e5a <EwScreenWarpNativeRowGradientBlend+0x36>
90008f48:	4632      	mov	r2, r6
90008f4a:	e7b3      	b.n	90008eb4 <EwScreenWarpNativeRowGradientBlend+0x90>
90008f4c:	4632      	mov	r2, r6
90008f4e:	e7ab      	b.n	90008ea8 <EwScreenWarpNativeRowGradientBlend+0x84>

90008f50 <EwScreenWarpNativeRowFilterGradientBlend>:
90008f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008f54:	b089      	sub	sp, #36	; 0x24
90008f56:	9303      	str	r3, [sp, #12]
90008f58:	6803      	ldr	r3, [r0, #0]
90008f5a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90008f5c:	9301      	str	r3, [sp, #4]
90008f5e:	680b      	ldr	r3, [r1, #0]
90008f60:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
90008f64:	9306      	str	r3, [sp, #24]
90008f66:	688b      	ldr	r3, [r1, #8]
90008f68:	ea4f 51a8 	mov.w	r1, r8, asr #22
90008f6c:	109b      	asrs	r3, r3, #2
90008f6e:	3101      	adds	r1, #1
90008f70:	9307      	str	r3, [sp, #28]
90008f72:	6d23      	ldr	r3, [r4, #80]	; 0x50
90008f74:	9304      	str	r3, [sp, #16]
90008f76:	b973      	cbnz	r3, 90008f96 <EwScreenWarpNativeRowFilterGradientBlend+0x46>
90008f78:	6d66      	ldr	r6, [r4, #84]	; 0x54
90008f7a:	fab6 f686 	clz	r6, r6
90008f7e:	0976      	lsrs	r6, r6, #5
90008f80:	9b07      	ldr	r3, [sp, #28]
90008f82:	9202      	str	r2, [sp, #8]
90008f84:	3301      	adds	r3, #1
90008f86:	009b      	lsls	r3, r3, #2
90008f88:	9305      	str	r3, [sp, #20]
90008f8a:	9b02      	ldr	r3, [sp, #8]
90008f8c:	2b00      	cmp	r3, #0
90008f8e:	dc04      	bgt.n	90008f9a <EwScreenWarpNativeRowFilterGradientBlend+0x4a>
90008f90:	b009      	add	sp, #36	; 0x24
90008f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90008f96:	2600      	movs	r6, #0
90008f98:	e7f2      	b.n	90008f80 <EwScreenWarpNativeRowFilterGradientBlend+0x30>
90008f9a:	9b03      	ldr	r3, [sp, #12]
90008f9c:	9a12      	ldr	r2, [sp, #72]	; 0x48
90008f9e:	1318      	asrs	r0, r3, #12
90008fa0:	9b15      	ldr	r3, [sp, #84]	; 0x54
90008fa2:	ea4f 3c22 	mov.w	ip, r2, asr #12
90008fa6:	9a16      	ldr	r2, [sp, #88]	; 0x58
90008fa8:	4358      	muls	r0, r3
90008faa:	fb02 fc0c 	mul.w	ip, r2, ip
90008fae:	ea4f 3e20 	mov.w	lr, r0, asr #12
90008fb2:	ea4f 352c 	mov.w	r5, ip, asr #12
90008fb6:	bb0e      	cbnz	r6, 90008ffc <EwScreenWarpNativeRowFilterGradientBlend+0xac>
90008fb8:	9a04      	ldr	r2, [sp, #16]
90008fba:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90008fbc:	2a00      	cmp	r2, #0
90008fbe:	f000 80a7 	beq.w	90009110 <EwScreenWarpNativeRowFilterGradientBlend+0x1c0>
90008fc2:	ea5f 422c 	movs.w	r2, ip, asr #16
90008fc6:	f000 80a5 	beq.w	90009114 <EwScreenWarpNativeRowFilterGradientBlend+0x1c4>
90008fca:	6b61      	ldr	r1, [r4, #52]	; 0x34
90008fcc:	fb01 8102 	mla	r1, r1, r2, r8
90008fd0:	6d63      	ldr	r3, [r4, #84]	; 0x54
90008fd2:	b11b      	cbz	r3, 90008fdc <EwScreenWarpNativeRowFilterGradientBlend+0x8c>
90008fd4:	b112      	cbz	r2, 90008fdc <EwScreenWarpNativeRowFilterGradientBlend+0x8c>
90008fd6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90008fd8:	fb03 7702 	mla	r7, r3, r2, r7
90008fdc:	6d62      	ldr	r2, [r4, #84]	; 0x54
90008fde:	b152      	cbz	r2, 90008ff6 <EwScreenWarpNativeRowFilterGradientBlend+0xa6>
90008fe0:	1400      	asrs	r0, r0, #16
90008fe2:	d008      	beq.n	90008ff6 <EwScreenWarpNativeRowFilterGradientBlend+0xa6>
90008fe4:	150a      	asrs	r2, r1, #20
90008fe6:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90008fea:	ebc2 5727 	rsb	r7, r2, r7, asr #20
90008fee:	6ca2      	ldr	r2, [r4, #72]	; 0x48
90008ff0:	4357      	muls	r7, r2
90008ff2:	fb00 1107 	mla	r1, r0, r7, r1
90008ff6:	f3c1 5185 	ubfx	r1, r1, #22, #6
90008ffa:	3101      	adds	r1, #1
90008ffc:	f1ae 0008 	sub.w	r0, lr, #8
90009000:	3d08      	subs	r5, #8
90009002:	9a07      	ldr	r2, [sp, #28]
90009004:	112b      	asrs	r3, r5, #4
90009006:	f005 050f 	and.w	r5, r5, #15
9000900a:	1107      	asrs	r7, r0, #4
9000900c:	f000 000f 	and.w	r0, r0, #15
90009010:	f1c5 0e10 	rsb	lr, r5, #16
90009014:	fb02 7703 	mla	r7, r2, r3, r7
90009018:	9b06      	ldr	r3, [sp, #24]
9000901a:	f1c0 0c10 	rsb	ip, r0, #16
9000901e:	fb00 fe0e 	mul.w	lr, r0, lr
90009022:	eb03 0287 	add.w	r2, r3, r7, lsl #2
90009026:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
9000902a:	9b05      	ldr	r3, [sp, #20]
9000902c:	fb05 fc0c 	mul.w	ip, r5, ip
90009030:	4368      	muls	r0, r5
90009032:	9f05      	ldr	r7, [sp, #20]
90009034:	18d3      	adds	r3, r2, r3
90009036:	6855      	ldr	r5, [r2, #4]
90009038:	59d2      	ldr	r2, [r2, r7]
9000903a:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
9000903e:	f853 9c04 	ldr.w	r9, [r3, #-4]
90009042:	ea4f 231a 	mov.w	r3, sl, lsr #8
90009046:	eba7 070c 	sub.w	r7, r7, ip
9000904a:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
9000904e:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
90009052:	0a2b      	lsrs	r3, r5, #8
90009054:	1a3f      	subs	r7, r7, r0
90009056:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9000905a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000905e:	fb0e f505 	mul.w	r5, lr, r5
90009062:	fb0e f303 	mul.w	r3, lr, r3
90009066:	fb07 550a 	mla	r5, r7, sl, r5
9000906a:	fb07 330b 	mla	r3, r7, fp, r3
9000906e:	ea4f 2b12 	mov.w	fp, r2, lsr #8
90009072:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90009076:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9000907a:	fb00 5502 	mla	r5, r0, r2, r5
9000907e:	fb00 330b 	mla	r3, r0, fp, r3
90009082:	ea4f 2b19 	mov.w	fp, r9, lsr #8
90009086:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
9000908a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9000908e:	fb0c 5209 	mla	r2, ip, r9, r5
90009092:	fb0c 330b 	mla	r3, ip, fp, r3
90009096:	0a12      	lsrs	r2, r2, #8
90009098:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
9000909c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900090a0:	431a      	orrs	r2, r3
900090a2:	0e9b      	lsrs	r3, r3, #26
900090a4:	d025      	beq.n	900090f2 <EwScreenWarpNativeRowFilterGradientBlend+0x1a2>
900090a6:	0a17      	lsrs	r7, r2, #8
900090a8:	f3c2 00c4 	ubfx	r0, r2, #3, #5
900090ac:	fb03 1301 	mla	r3, r3, r1, r1
900090b0:	0952      	lsrs	r2, r2, #5
900090b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900090b6:	099b      	lsrs	r3, r3, #6
900090b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900090bc:	4307      	orrs	r7, r0
900090be:	9801      	ldr	r0, [sp, #4]
900090c0:	f1c3 0c40 	rsb	ip, r3, #64	; 0x40
900090c4:	8800      	ldrh	r0, [r0, #0]
900090c6:	f420 65fc 	bic.w	r5, r0, #2016	; 0x7e0
900090ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900090ce:	fb0c f000 	mul.w	r0, ip, r0
900090d2:	fb0c f505 	mul.w	r5, ip, r5
900090d6:	fb03 0002 	mla	r0, r3, r2, r0
900090da:	fb03 5507 	mla	r5, r3, r7, r5
900090de:	f64f 031f 	movw	r3, #63519	; 0xf81f
900090e2:	0980      	lsrs	r0, r0, #6
900090e4:	ea03 1595 	and.w	r5, r3, r5, lsr #6
900090e8:	9b01      	ldr	r3, [sp, #4]
900090ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900090ee:	4305      	orrs	r5, r0
900090f0:	801d      	strh	r5, [r3, #0]
900090f2:	9b03      	ldr	r3, [sp, #12]
900090f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900090f6:	4413      	add	r3, r2
900090f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900090fa:	9303      	str	r3, [sp, #12]
900090fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
900090fe:	4413      	add	r3, r2
90009100:	9312      	str	r3, [sp, #72]	; 0x48
90009102:	9b01      	ldr	r3, [sp, #4]
90009104:	3302      	adds	r3, #2
90009106:	9301      	str	r3, [sp, #4]
90009108:	9b02      	ldr	r3, [sp, #8]
9000910a:	3b01      	subs	r3, #1
9000910c:	9302      	str	r3, [sp, #8]
9000910e:	e73c      	b.n	90008f8a <EwScreenWarpNativeRowFilterGradientBlend+0x3a>
90009110:	4641      	mov	r1, r8
90009112:	e763      	b.n	90008fdc <EwScreenWarpNativeRowFilterGradientBlend+0x8c>
90009114:	4641      	mov	r1, r8
90009116:	e75b      	b.n	90008fd0 <EwScreenWarpNativeRowFilterGradientBlend+0x80>

90009118 <EwScreenWarpIndex8Row>:
90009118:	e92d 44f0 	stmdb	sp!, {r4, r5, r6, r7, sl, lr}
9000911c:	f8dd c018 	ldr.w	ip, [sp, #24]
90009120:	6805      	ldr	r5, [r0, #0]
90009122:	680e      	ldr	r6, [r1, #0]
90009124:	698f      	ldr	r7, [r1, #24]
90009126:	f8d1 a008 	ldr.w	sl, [r1, #8]
9000912a:	2a00      	cmp	r2, #0
9000912c:	dc01      	bgt.n	90009132 <EwScreenWarpIndex8Row+0x1a>
9000912e:	e8bd 84f0 	ldmia.w	sp!, {r4, r5, r6, r7, sl, pc}
90009132:	980a      	ldr	r0, [sp, #40]	; 0x28
90009134:	ea4f 312c 	mov.w	r1, ip, asr #12
90009138:	9c09      	ldr	r4, [sp, #36]	; 0x24
9000913a:	4341      	muls	r1, r0
9000913c:	1318      	asrs	r0, r3, #12
9000913e:	1409      	asrs	r1, r1, #16
90009140:	4360      	muls	r0, r4
90009142:	fb0a 6101 	mla	r1, sl, r1, r6
90009146:	1400      	asrs	r0, r0, #16
90009148:	5c09      	ldrb	r1, [r1, r0]
9000914a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9000914e:	0e8c      	lsrs	r4, r1, #26
90009150:	d016      	beq.n	90009180 <EwScreenWarpIndex8Row+0x68>
90009152:	ea4f 2e11 	mov.w	lr, r1, lsr #8
90009156:	f3c1 00c4 	ubfx	r0, r1, #3, #5
9000915a:	0949      	lsrs	r1, r1, #5
9000915c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
90009160:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90009164:	ea4e 0000 	orr.w	r0, lr, r0
90009168:	fb04 0000 	mla	r0, r4, r0, r0
9000916c:	fb04 1401 	mla	r4, r4, r1, r1
90009170:	0980      	lsrs	r0, r0, #6
90009172:	09a4      	lsrs	r4, r4, #6
90009174:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90009178:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9000917c:	4304      	orrs	r4, r0
9000917e:	b2a4      	uxth	r4, r4
90009180:	9907      	ldr	r1, [sp, #28]
90009182:	3a01      	subs	r2, #1
90009184:	f825 4b02 	strh.w	r4, [r5], #2
90009188:	440b      	add	r3, r1
9000918a:	9908      	ldr	r1, [sp, #32]
9000918c:	448c      	add	ip, r1
9000918e:	e7cc      	b.n	9000912a <EwScreenWarpIndex8Row+0x12>

90009190 <EwScreenWarpIndex8RowFilter>:
90009190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009194:	461d      	mov	r5, r3
90009196:	b085      	sub	sp, #20
90009198:	6803      	ldr	r3, [r0, #0]
9000919a:	680e      	ldr	r6, [r1, #0]
9000919c:	9301      	str	r3, [sp, #4]
9000919e:	688b      	ldr	r3, [r1, #8]
900091a0:	698f      	ldr	r7, [r1, #24]
900091a2:	9302      	str	r3, [sp, #8]
900091a4:	3301      	adds	r3, #1
900091a6:	9200      	str	r2, [sp, #0]
900091a8:	9303      	str	r3, [sp, #12]
900091aa:	9b00      	ldr	r3, [sp, #0]
900091ac:	2b00      	cmp	r3, #0
900091ae:	dc02      	bgt.n	900091b6 <EwScreenWarpIndex8RowFilter+0x26>
900091b0:	b005      	add	sp, #20
900091b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900091b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900091b8:	1329      	asrs	r1, r5, #12
900091ba:	9c02      	ldr	r4, [sp, #8]
900091bc:	4359      	muls	r1, r3
900091be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900091c0:	1318      	asrs	r0, r3, #12
900091c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
900091c4:	1309      	asrs	r1, r1, #12
900091c6:	4358      	muls	r0, r3
900091c8:	3908      	subs	r1, #8
900091ca:	1300      	asrs	r0, r0, #12
900091cc:	110a      	asrs	r2, r1, #4
900091ce:	f001 010f 	and.w	r1, r1, #15
900091d2:	3808      	subs	r0, #8
900091d4:	f1c1 0e10 	rsb	lr, r1, #16
900091d8:	1103      	asrs	r3, r0, #4
900091da:	f000 000f 	and.w	r0, r0, #15
900091de:	fb04 2203 	mla	r2, r4, r3, r2
900091e2:	f1c0 0810 	rsb	r8, r0, #16
900091e6:	fb00 fe0e 	mul.w	lr, r0, lr
900091ea:	9c03      	ldr	r4, [sp, #12]
900091ec:	18b3      	adds	r3, r6, r2
900091ee:	5cb2      	ldrb	r2, [r6, r2]
900091f0:	fb01 f808 	mul.w	r8, r1, r8
900091f4:	f857 a022 	ldr.w	sl, [r7, r2, lsl #2]
900091f8:	4341      	muls	r1, r0
900091fa:	785a      	ldrb	r2, [r3, #1]
900091fc:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
90009200:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
90009204:	ebac 0c0e 	sub.w	ip, ip, lr
90009208:	9a03      	ldr	r2, [sp, #12]
9000920a:	ebac 0c01 	sub.w	ip, ip, r1
9000920e:	189a      	adds	r2, r3, r2
90009210:	5d1b      	ldrb	r3, [r3, r4]
90009212:	f812 2c01 	ldrb.w	r2, [r2, #-1]
90009216:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
9000921a:	f857 9022 	ldr.w	r9, [r7, r2, lsl #2]
9000921e:	ea4f 221a 	mov.w	r2, sl, lsr #8
90009222:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
90009226:	f002 1bff 	and.w	fp, r2, #16711935	; 0xff00ff
9000922a:	0a02      	lsrs	r2, r0, #8
9000922c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90009230:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90009234:	fb08 f000 	mul.w	r0, r8, r0
90009238:	fb08 f202 	mul.w	r2, r8, r2
9000923c:	fb0c 000a 	mla	r0, ip, sl, r0
90009240:	fb0c 220b 	mla	r2, ip, fp, r2
90009244:	ea4f 2b13 	mov.w	fp, r3, lsr #8
90009248:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9000924c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90009250:	fb01 0003 	mla	r0, r1, r3, r0
90009254:	fb01 220b 	mla	r2, r1, fp, r2
90009258:	ea4f 2b19 	mov.w	fp, r9, lsr #8
9000925c:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90009260:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90009264:	fb0e 220b 	mla	r2, lr, fp, r2
90009268:	fb0e 0e09 	mla	lr, lr, r9, r0
9000926c:	f002 22ff 	and.w	r2, r2, #4278255360	; 0xff00ff00
90009270:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90009274:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90009278:	ea42 0e0e 	orr.w	lr, r2, lr
9000927c:	0e92      	lsrs	r2, r2, #26
9000927e:	d016      	beq.n	900092ae <EwScreenWarpIndex8RowFilter+0x11e>
90009280:	ea4f 211e 	mov.w	r1, lr, lsr #8
90009284:	f3ce 03c4 	ubfx	r3, lr, #3, #5
90009288:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000928c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90009290:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90009294:	430b      	orrs	r3, r1
90009296:	fb02 3303 	mla	r3, r2, r3, r3
9000929a:	fb02 e20e 	mla	r2, r2, lr, lr
9000929e:	099b      	lsrs	r3, r3, #6
900092a0:	0992      	lsrs	r2, r2, #6
900092a2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900092a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900092aa:	431a      	orrs	r2, r3
900092ac:	b292      	uxth	r2, r2
900092ae:	9b01      	ldr	r3, [sp, #4]
900092b0:	f823 2b02 	strh.w	r2, [r3], #2
900092b4:	9301      	str	r3, [sp, #4]
900092b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900092b8:	9a10      	ldr	r2, [sp, #64]	; 0x40
900092ba:	441d      	add	r5, r3
900092bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900092be:	4413      	add	r3, r2
900092c0:	930e      	str	r3, [sp, #56]	; 0x38
900092c2:	9b00      	ldr	r3, [sp, #0]
900092c4:	3b01      	subs	r3, #1
900092c6:	9300      	str	r3, [sp, #0]
900092c8:	e76f      	b.n	900091aa <EwScreenWarpIndex8RowFilter+0x1a>

900092ca <EwScreenWarpIndex8RowBlend>:
900092ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900092ce:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900092d2:	f64f 091f 	movw	r9, #63519	; 0xf81f
900092d6:	6805      	ldr	r5, [r0, #0]
900092d8:	680e      	ldr	r6, [r1, #0]
900092da:	698f      	ldr	r7, [r1, #24]
900092dc:	f8d1 c008 	ldr.w	ip, [r1, #8]
900092e0:	2a00      	cmp	r2, #0
900092e2:	dc01      	bgt.n	900092e8 <EwScreenWarpIndex8RowBlend+0x1e>
900092e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900092e8:	980d      	ldr	r0, [sp, #52]	; 0x34
900092ea:	ea4f 312b 	mov.w	r1, fp, asr #12
900092ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900092f0:	4341      	muls	r1, r0
900092f2:	1318      	asrs	r0, r3, #12
900092f4:	1409      	asrs	r1, r1, #16
900092f6:	4360      	muls	r0, r4
900092f8:	fb0c 6101 	mla	r1, ip, r1, r6
900092fc:	1400      	asrs	r0, r0, #16
900092fe:	5c09      	ldrb	r1, [r1, r0]
90009300:	f857 0021 	ldr.w	r0, [r7, r1, lsl #2]
90009304:	0e84      	lsrs	r4, r0, #26
90009306:	d023      	beq.n	90009350 <EwScreenWarpIndex8RowBlend+0x86>
90009308:	0a01      	lsrs	r1, r0, #8
9000930a:	f3c0 0ec4 	ubfx	lr, r0, #3, #5
9000930e:	2c3f      	cmp	r4, #63	; 0x3f
90009310:	ea4f 1050 	mov.w	r0, r0, lsr #5
90009314:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90009318:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000931c:	ea41 010e 	orr.w	r1, r1, lr
90009320:	d014      	beq.n	9000934c <EwScreenWarpIndex8RowBlend+0x82>
90009322:	f8b5 e000 	ldrh.w	lr, [r5]
90009326:	f1c4 083f 	rsb	r8, r4, #63	; 0x3f
9000932a:	fb04 0000 	mla	r0, r4, r0, r0
9000932e:	f42e 6afc 	bic.w	sl, lr, #2016	; 0x7e0
90009332:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90009336:	fb04 1101 	mla	r1, r4, r1, r1
9000933a:	fb08 000e 	mla	r0, r8, lr, r0
9000933e:	fb08 110a 	mla	r1, r8, sl, r1
90009342:	0980      	lsrs	r0, r0, #6
90009344:	ea09 1191 	and.w	r1, r9, r1, lsr #6
90009348:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000934c:	4301      	orrs	r1, r0
9000934e:	8029      	strh	r1, [r5, #0]
90009350:	990a      	ldr	r1, [sp, #40]	; 0x28
90009352:	3502      	adds	r5, #2
90009354:	3a01      	subs	r2, #1
90009356:	440b      	add	r3, r1
90009358:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000935a:	448b      	add	fp, r1
9000935c:	e7c0      	b.n	900092e0 <EwScreenWarpIndex8RowBlend+0x16>

9000935e <EwScreenWarpIndex8RowFilterBlend>:
9000935e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009362:	461e      	mov	r6, r3
90009364:	b085      	sub	sp, #20
90009366:	680b      	ldr	r3, [r1, #0]
90009368:	6805      	ldr	r5, [r0, #0]
9000936a:	9301      	str	r3, [sp, #4]
9000936c:	688b      	ldr	r3, [r1, #8]
9000936e:	698f      	ldr	r7, [r1, #24]
90009370:	9302      	str	r3, [sp, #8]
90009372:	3301      	adds	r3, #1
90009374:	9200      	str	r2, [sp, #0]
90009376:	9303      	str	r3, [sp, #12]
90009378:	9b00      	ldr	r3, [sp, #0]
9000937a:	2b00      	cmp	r3, #0
9000937c:	dc02      	bgt.n	90009384 <EwScreenWarpIndex8RowFilterBlend+0x26>
9000937e:	b005      	add	sp, #20
90009380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009384:	9b11      	ldr	r3, [sp, #68]	; 0x44
90009386:	1331      	asrs	r1, r6, #12
90009388:	9c02      	ldr	r4, [sp, #8]
9000938a:	4359      	muls	r1, r3
9000938c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000938e:	1318      	asrs	r0, r3, #12
90009390:	9b12      	ldr	r3, [sp, #72]	; 0x48
90009392:	1309      	asrs	r1, r1, #12
90009394:	4358      	muls	r0, r3
90009396:	3908      	subs	r1, #8
90009398:	1300      	asrs	r0, r0, #12
9000939a:	110b      	asrs	r3, r1, #4
9000939c:	f001 010f 	and.w	r1, r1, #15
900093a0:	3808      	subs	r0, #8
900093a2:	f1c1 0e10 	rsb	lr, r1, #16
900093a6:	1102      	asrs	r2, r0, #4
900093a8:	f000 000f 	and.w	r0, r0, #15
900093ac:	f1c0 0810 	rsb	r8, r0, #16
900093b0:	fb04 3302 	mla	r3, r4, r2, r3
900093b4:	fb00 fe0e 	mul.w	lr, r0, lr
900093b8:	9a01      	ldr	r2, [sp, #4]
900093ba:	fb01 f808 	mul.w	r8, r1, r8
900093be:	9c03      	ldr	r4, [sp, #12]
900093c0:	4341      	muls	r1, r0
900093c2:	9801      	ldr	r0, [sp, #4]
900093c4:	441a      	add	r2, r3
900093c6:	f5c8 7c80 	rsb	ip, r8, #256	; 0x100
900093ca:	5cc3      	ldrb	r3, [r0, r3]
900093cc:	ebac 0c0e 	sub.w	ip, ip, lr
900093d0:	f857 a023 	ldr.w	sl, [r7, r3, lsl #2]
900093d4:	7853      	ldrb	r3, [r2, #1]
900093d6:	ebac 0c01 	sub.w	ip, ip, r1
900093da:	f857 0023 	ldr.w	r0, [r7, r3, lsl #2]
900093de:	9b03      	ldr	r3, [sp, #12]
900093e0:	18d3      	adds	r3, r2, r3
900093e2:	5d12      	ldrb	r2, [r2, r4]
900093e4:	f813 3c01 	ldrb.w	r3, [r3, #-1]
900093e8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
900093ec:	f857 9023 	ldr.w	r9, [r7, r3, lsl #2]
900093f0:	ea4f 231a 	mov.w	r3, sl, lsr #8
900093f4:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
900093f8:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
900093fc:	0a03      	lsrs	r3, r0, #8
900093fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90009402:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90009406:	fb08 f000 	mul.w	r0, r8, r0
9000940a:	fb08 f303 	mul.w	r3, r8, r3
9000940e:	fb0c 000a 	mla	r0, ip, sl, r0
90009412:	fb0c 330b 	mla	r3, ip, fp, r3
90009416:	ea4f 2b12 	mov.w	fp, r2, lsr #8
9000941a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9000941e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90009422:	fb01 0002 	mla	r0, r1, r2, r0
90009426:	fb01 330b 	mla	r3, r1, fp, r3
9000942a:	ea4f 2b19 	mov.w	fp, r9, lsr #8
9000942e:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90009432:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90009436:	fb0e 0209 	mla	r2, lr, r9, r0
9000943a:	fb0e 330b 	mla	r3, lr, fp, r3
9000943e:	0a12      	lsrs	r2, r2, #8
90009440:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90009444:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90009448:	431a      	orrs	r2, r3
9000944a:	0e9b      	lsrs	r3, r3, #26
9000944c:	d024      	beq.n	90009498 <EwScreenWarpIndex8RowFilterBlend+0x13a>
9000944e:	0a11      	lsrs	r1, r2, #8
90009450:	f3c2 00c4 	ubfx	r0, r2, #3, #5
90009454:	2b3f      	cmp	r3, #63	; 0x3f
90009456:	ea4f 1252 	mov.w	r2, r2, lsr #5
9000945a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9000945e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90009462:	ea41 0100 	orr.w	r1, r1, r0
90009466:	d015      	beq.n	90009494 <EwScreenWarpIndex8RowFilterBlend+0x136>
90009468:	8828      	ldrh	r0, [r5, #0]
9000946a:	f1c3 0c3f 	rsb	ip, r3, #63	; 0x3f
9000946e:	fb03 1101 	mla	r1, r3, r1, r1
90009472:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90009476:	fb03 2302 	mla	r3, r3, r2, r2
9000947a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000947e:	fb0c 110e 	mla	r1, ip, lr, r1
90009482:	fb0c 3200 	mla	r2, ip, r0, r3
90009486:	f64f 031f 	movw	r3, #63519	; 0xf81f
9000948a:	0992      	lsrs	r2, r2, #6
9000948c:	ea03 1191 	and.w	r1, r3, r1, lsr #6
90009490:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90009494:	430a      	orrs	r2, r1
90009496:	802a      	strh	r2, [r5, #0]
90009498:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000949a:	3502      	adds	r5, #2
9000949c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000949e:	441e      	add	r6, r3
900094a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900094a2:	4413      	add	r3, r2
900094a4:	930e      	str	r3, [sp, #56]	; 0x38
900094a6:	9b00      	ldr	r3, [sp, #0]
900094a8:	3b01      	subs	r3, #1
900094aa:	9300      	str	r3, [sp, #0]
900094ac:	e764      	b.n	90009378 <EwScreenWarpIndex8RowFilterBlend+0x1a>

900094ae <EwScreenWarpIndex8RowGradient>:
900094ae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900094b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900094b4:	f8d0 a000 	ldr.w	sl, [r0]
900094b8:	6b26      	ldr	r6, [r4, #48]	; 0x30
900094ba:	6808      	ldr	r0, [r1, #0]
900094bc:	15b7      	asrs	r7, r6, #22
900094be:	f8d4 c050 	ldr.w	ip, [r4, #80]	; 0x50
900094c2:	9000      	str	r0, [sp, #0]
900094c4:	6988      	ldr	r0, [r1, #24]
900094c6:	3701      	adds	r7, #1
900094c8:	f8d1 b008 	ldr.w	fp, [r1, #8]
900094cc:	9001      	str	r0, [sp, #4]
900094ce:	f1bc 0f00 	cmp.w	ip, #0
900094d2:	d109      	bne.n	900094e8 <EwScreenWarpIndex8RowGradient+0x3a>
900094d4:	6d65      	ldr	r5, [r4, #84]	; 0x54
900094d6:	fab5 f585 	clz	r5, r5
900094da:	096d      	lsrs	r5, r5, #5
900094dc:	4610      	mov	r0, r2
900094de:	2800      	cmp	r0, #0
900094e0:	dc04      	bgt.n	900094ec <EwScreenWarpIndex8RowGradient+0x3e>
900094e2:	b003      	add	sp, #12
900094e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900094e8:	2500      	movs	r5, #0
900094ea:	e7f7      	b.n	900094dc <EwScreenWarpIndex8RowGradient+0x2e>
900094ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
900094ee:	131a      	asrs	r2, r3, #12
900094f0:	434a      	muls	r2, r1
900094f2:	990c      	ldr	r1, [sp, #48]	; 0x30
900094f4:	ea4f 3921 	mov.w	r9, r1, asr #12
900094f8:	9910      	ldr	r1, [sp, #64]	; 0x40
900094fa:	ea4f 4e22 	mov.w	lr, r2, asr #16
900094fe:	fb01 f909 	mul.w	r9, r1, r9
90009502:	9900      	ldr	r1, [sp, #0]
90009504:	ea4f 4929 	mov.w	r9, r9, asr #16
90009508:	eb01 4222 	add.w	r2, r1, r2, asr #16
9000950c:	9901      	ldr	r1, [sp, #4]
9000950e:	fb09 f80b 	mul.w	r8, r9, fp
90009512:	f812 2008 	ldrb.w	r2, [r2, r8]
90009516:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
9000951a:	bb25      	cbnz	r5, 90009566 <EwScreenWarpIndex8RowGradient+0xb8>
9000951c:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90009520:	f1bc 0f00 	cmp.w	ip, #0
90009524:	d046      	beq.n	900095b4 <EwScreenWarpIndex8RowGradient+0x106>
90009526:	f1b9 0f00 	cmp.w	r9, #0
9000952a:	d045      	beq.n	900095b8 <EwScreenWarpIndex8RowGradient+0x10a>
9000952c:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000952e:	fb02 6209 	mla	r2, r2, r9, r6
90009532:	6d67      	ldr	r7, [r4, #84]	; 0x54
90009534:	b12f      	cbz	r7, 90009542 <EwScreenWarpIndex8RowGradient+0x94>
90009536:	f1b9 0f00 	cmp.w	r9, #0
9000953a:	d002      	beq.n	90009542 <EwScreenWarpIndex8RowGradient+0x94>
9000953c:	6be7      	ldr	r7, [r4, #60]	; 0x3c
9000953e:	fb07 8809 	mla	r8, r7, r9, r8
90009542:	6d67      	ldr	r7, [r4, #84]	; 0x54
90009544:	b167      	cbz	r7, 90009560 <EwScreenWarpIndex8RowGradient+0xb2>
90009546:	f1be 0f00 	cmp.w	lr, #0
9000954a:	d009      	beq.n	90009560 <EwScreenWarpIndex8RowGradient+0xb2>
9000954c:	1517      	asrs	r7, r2, #20
9000954e:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90009552:	ebc7 5828 	rsb	r8, r7, r8, asr #20
90009556:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90009558:	fb07 f808 	mul.w	r8, r7, r8
9000955c:	fb0e 2208 	mla	r2, lr, r8, r2
90009560:	f3c2 5285 	ubfx	r2, r2, #22, #6
90009564:	1c57      	adds	r7, r2, #1
90009566:	0e0a      	lsrs	r2, r1, #24
90009568:	fb02 7207 	mla	r2, r2, r7, r7
9000956c:	0a12      	lsrs	r2, r2, #8
9000956e:	d017      	beq.n	900095a0 <EwScreenWarpIndex8RowGradient+0xf2>
90009570:	ea4f 2811 	mov.w	r8, r1, lsr #8
90009574:	f3c1 0ec4 	ubfx	lr, r1, #3, #5
90009578:	0949      	lsrs	r1, r1, #5
9000957a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9000957e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90009582:	ea48 0e0e 	orr.w	lr, r8, lr
90009586:	fb0e fe02 	mul.w	lr, lr, r2
9000958a:	434a      	muls	r2, r1
9000958c:	ea4f 1e9e 	mov.w	lr, lr, lsr #6
90009590:	0992      	lsrs	r2, r2, #6
90009592:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90009596:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9000959a:	ea4e 0202 	orr.w	r2, lr, r2
9000959e:	b292      	uxth	r2, r2
900095a0:	f82a 2b02 	strh.w	r2, [sl], #2
900095a4:	3801      	subs	r0, #1
900095a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900095a8:	990e      	ldr	r1, [sp, #56]	; 0x38
900095aa:	4413      	add	r3, r2
900095ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900095ae:	440a      	add	r2, r1
900095b0:	920c      	str	r2, [sp, #48]	; 0x30
900095b2:	e794      	b.n	900094de <EwScreenWarpIndex8RowGradient+0x30>
900095b4:	4632      	mov	r2, r6
900095b6:	e7c4      	b.n	90009542 <EwScreenWarpIndex8RowGradient+0x94>
900095b8:	4632      	mov	r2, r6
900095ba:	e7ba      	b.n	90009532 <EwScreenWarpIndex8RowGradient+0x84>

900095bc <EwScreenWarpIndex8RowFilterGradient>:
900095bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900095c0:	b089      	sub	sp, #36	; 0x24
900095c2:	f8d1 8018 	ldr.w	r8, [r1, #24]
900095c6:	9302      	str	r3, [sp, #8]
900095c8:	6803      	ldr	r3, [r0, #0]
900095ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900095cc:	9304      	str	r3, [sp, #16]
900095ce:	680b      	ldr	r3, [r1, #0]
900095d0:	9305      	str	r3, [sp, #20]
900095d2:	688b      	ldr	r3, [r1, #8]
900095d4:	9306      	str	r3, [sp, #24]
900095d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
900095d8:	1599      	asrs	r1, r3, #22
900095da:	9300      	str	r3, [sp, #0]
900095dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
900095de:	3101      	adds	r1, #1
900095e0:	9303      	str	r3, [sp, #12]
900095e2:	b96b      	cbnz	r3, 90009600 <EwScreenWarpIndex8RowFilterGradient+0x44>
900095e4:	6d66      	ldr	r6, [r4, #84]	; 0x54
900095e6:	fab6 f686 	clz	r6, r6
900095ea:	0976      	lsrs	r6, r6, #5
900095ec:	9b06      	ldr	r3, [sp, #24]
900095ee:	9201      	str	r2, [sp, #4]
900095f0:	3301      	adds	r3, #1
900095f2:	9307      	str	r3, [sp, #28]
900095f4:	9b01      	ldr	r3, [sp, #4]
900095f6:	2b00      	cmp	r3, #0
900095f8:	dc04      	bgt.n	90009604 <EwScreenWarpIndex8RowFilterGradient+0x48>
900095fa:	b009      	add	sp, #36	; 0x24
900095fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009600:	2600      	movs	r6, #0
90009602:	e7f3      	b.n	900095ec <EwScreenWarpIndex8RowFilterGradient+0x30>
90009604:	9b02      	ldr	r3, [sp, #8]
90009606:	9a12      	ldr	r2, [sp, #72]	; 0x48
90009608:	1318      	asrs	r0, r3, #12
9000960a:	9b15      	ldr	r3, [sp, #84]	; 0x54
9000960c:	ea4f 3c22 	mov.w	ip, r2, asr #12
90009610:	9a16      	ldr	r2, [sp, #88]	; 0x58
90009612:	4358      	muls	r0, r3
90009614:	fb02 fc0c 	mul.w	ip, r2, ip
90009618:	ea4f 3e20 	mov.w	lr, r0, asr #12
9000961c:	ea4f 352c 	mov.w	r5, ip, asr #12
90009620:	bb16      	cbnz	r6, 90009668 <EwScreenWarpIndex8RowFilterGradient+0xac>
90009622:	9a03      	ldr	r2, [sp, #12]
90009624:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90009626:	2a00      	cmp	r2, #0
90009628:	f000 80a4 	beq.w	90009774 <EwScreenWarpIndex8RowFilterGradient+0x1b8>
9000962c:	ea5f 422c 	movs.w	r2, ip, asr #16
90009630:	f000 80a2 	beq.w	90009778 <EwScreenWarpIndex8RowFilterGradient+0x1bc>
90009634:	6b61      	ldr	r1, [r4, #52]	; 0x34
90009636:	9b00      	ldr	r3, [sp, #0]
90009638:	fb01 3102 	mla	r1, r1, r2, r3
9000963c:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000963e:	b11b      	cbz	r3, 90009648 <EwScreenWarpIndex8RowFilterGradient+0x8c>
90009640:	b112      	cbz	r2, 90009648 <EwScreenWarpIndex8RowFilterGradient+0x8c>
90009642:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90009644:	fb03 7702 	mla	r7, r3, r2, r7
90009648:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000964a:	b152      	cbz	r2, 90009662 <EwScreenWarpIndex8RowFilterGradient+0xa6>
9000964c:	1400      	asrs	r0, r0, #16
9000964e:	d008      	beq.n	90009662 <EwScreenWarpIndex8RowFilterGradient+0xa6>
90009650:	150a      	asrs	r2, r1, #20
90009652:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90009656:	ebc2 5727 	rsb	r7, r2, r7, asr #20
9000965a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
9000965c:	4357      	muls	r7, r2
9000965e:	fb00 1107 	mla	r1, r0, r7, r1
90009662:	f3c1 5185 	ubfx	r1, r1, #22, #6
90009666:	3101      	adds	r1, #1
90009668:	f1ae 0008 	sub.w	r0, lr, #8
9000966c:	3d08      	subs	r5, #8
9000966e:	9a06      	ldr	r2, [sp, #24]
90009670:	112b      	asrs	r3, r5, #4
90009672:	f005 050f 	and.w	r5, r5, #15
90009676:	1107      	asrs	r7, r0, #4
90009678:	f000 000f 	and.w	r0, r0, #15
9000967c:	f1c5 0e10 	rsb	lr, r5, #16
90009680:	fb02 7703 	mla	r7, r2, r3, r7
90009684:	9b05      	ldr	r3, [sp, #20]
90009686:	f1c0 0c10 	rsb	ip, r0, #16
9000968a:	fb00 fe0e 	mul.w	lr, r0, lr
9000968e:	19da      	adds	r2, r3, r7
90009690:	5ddb      	ldrb	r3, [r3, r7]
90009692:	fb05 fc0c 	mul.w	ip, r5, ip
90009696:	9f07      	ldr	r7, [sp, #28]
90009698:	f858 a023 	ldr.w	sl, [r8, r3, lsl #2]
9000969c:	4368      	muls	r0, r5
9000969e:	7853      	ldrb	r3, [r2, #1]
900096a0:	f858 5023 	ldr.w	r5, [r8, r3, lsl #2]
900096a4:	9b07      	ldr	r3, [sp, #28]
900096a6:	18d3      	adds	r3, r2, r3
900096a8:	5dd2      	ldrb	r2, [r2, r7]
900096aa:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
900096ae:	f813 3c01 	ldrb.w	r3, [r3, #-1]
900096b2:	eba7 070c 	sub.w	r7, r7, ip
900096b6:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
900096ba:	f858 9023 	ldr.w	r9, [r8, r3, lsl #2]
900096be:	ea4f 231a 	mov.w	r3, sl, lsr #8
900096c2:	1a3f      	subs	r7, r7, r0
900096c4:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
900096c8:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
900096cc:	0a2b      	lsrs	r3, r5, #8
900096ce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900096d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900096d6:	fb0e f505 	mul.w	r5, lr, r5
900096da:	fb0e f303 	mul.w	r3, lr, r3
900096de:	fb07 550a 	mla	r5, r7, sl, r5
900096e2:	fb07 330b 	mla	r3, r7, fp, r3
900096e6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900096ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900096ee:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900096f2:	fb00 5502 	mla	r5, r0, r2, r5
900096f6:	fb00 330b 	mla	r3, r0, fp, r3
900096fa:	ea4f 2b19 	mov.w	fp, r9, lsr #8
900096fe:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
90009702:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90009706:	fb0c 330b 	mla	r3, ip, fp, r3
9000970a:	fb0c 5c09 	mla	ip, ip, r9, r5
9000970e:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90009712:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90009716:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9000971a:	ea43 0c0c 	orr.w	ip, r3, ip
9000971e:	0e1b      	lsrs	r3, r3, #24
90009720:	fb03 1301 	mla	r3, r3, r1, r1
90009724:	0a1b      	lsrs	r3, r3, #8
90009726:	d015      	beq.n	90009754 <EwScreenWarpIndex8RowFilterGradient+0x198>
90009728:	ea4f 201c 	mov.w	r0, ip, lsr #8
9000972c:	f3cc 02c4 	ubfx	r2, ip, #3, #5
90009730:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90009734:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90009738:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
9000973c:	4302      	orrs	r2, r0
9000973e:	435a      	muls	r2, r3
90009740:	fb0c f303 	mul.w	r3, ip, r3
90009744:	0992      	lsrs	r2, r2, #6
90009746:	099b      	lsrs	r3, r3, #6
90009748:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9000974c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90009750:	4313      	orrs	r3, r2
90009752:	b29b      	uxth	r3, r3
90009754:	9a04      	ldr	r2, [sp, #16]
90009756:	f822 3b02 	strh.w	r3, [r2], #2
9000975a:	9b02      	ldr	r3, [sp, #8]
9000975c:	9204      	str	r2, [sp, #16]
9000975e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90009760:	4413      	add	r3, r2
90009762:	9a14      	ldr	r2, [sp, #80]	; 0x50
90009764:	9302      	str	r3, [sp, #8]
90009766:	9b12      	ldr	r3, [sp, #72]	; 0x48
90009768:	4413      	add	r3, r2
9000976a:	9312      	str	r3, [sp, #72]	; 0x48
9000976c:	9b01      	ldr	r3, [sp, #4]
9000976e:	3b01      	subs	r3, #1
90009770:	9301      	str	r3, [sp, #4]
90009772:	e73f      	b.n	900095f4 <EwScreenWarpIndex8RowFilterGradient+0x38>
90009774:	9900      	ldr	r1, [sp, #0]
90009776:	e767      	b.n	90009648 <EwScreenWarpIndex8RowFilterGradient+0x8c>
90009778:	9900      	ldr	r1, [sp, #0]
9000977a:	e75f      	b.n	9000963c <EwScreenWarpIndex8RowFilterGradient+0x80>

9000977c <EwScreenWarpIndex8RowGradientBlend>:
9000977c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009780:	b085      	sub	sp, #20
90009782:	f8d0 c000 	ldr.w	ip, [r0]
90009786:	6808      	ldr	r0, [r1, #0]
90009788:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9000978a:	9001      	str	r0, [sp, #4]
9000978c:	6b26      	ldr	r6, [r4, #48]	; 0x30
9000978e:	6988      	ldr	r0, [r1, #24]
90009790:	ea4f 58a6 	mov.w	r8, r6, asr #22
90009794:	6889      	ldr	r1, [r1, #8]
90009796:	f8d4 a050 	ldr.w	sl, [r4, #80]	; 0x50
9000979a:	f108 0801 	add.w	r8, r8, #1
9000979e:	9300      	str	r3, [sp, #0]
900097a0:	9002      	str	r0, [sp, #8]
900097a2:	9103      	str	r1, [sp, #12]
900097a4:	f1ba 0f00 	cmp.w	sl, #0
900097a8:	d109      	bne.n	900097be <EwScreenWarpIndex8RowGradientBlend+0x42>
900097aa:	6d65      	ldr	r5, [r4, #84]	; 0x54
900097ac:	fab5 f585 	clz	r5, r5
900097b0:	096d      	lsrs	r5, r5, #5
900097b2:	4610      	mov	r0, r2
900097b4:	2800      	cmp	r0, #0
900097b6:	dc04      	bgt.n	900097c2 <EwScreenWarpIndex8RowGradientBlend+0x46>
900097b8:	b005      	add	sp, #20
900097ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900097be:	2500      	movs	r5, #0
900097c0:	e7f7      	b.n	900097b2 <EwScreenWarpIndex8RowGradientBlend+0x36>
900097c2:	9b00      	ldr	r3, [sp, #0]
900097c4:	9911      	ldr	r1, [sp, #68]	; 0x44
900097c6:	131a      	asrs	r2, r3, #12
900097c8:	9b01      	ldr	r3, [sp, #4]
900097ca:	434a      	muls	r2, r1
900097cc:	990e      	ldr	r1, [sp, #56]	; 0x38
900097ce:	ea4f 3921 	mov.w	r9, r1, asr #12
900097d2:	9912      	ldr	r1, [sp, #72]	; 0x48
900097d4:	ea4f 4e22 	mov.w	lr, r2, asr #16
900097d8:	fb01 f909 	mul.w	r9, r1, r9
900097dc:	9903      	ldr	r1, [sp, #12]
900097de:	eb03 4222 	add.w	r2, r3, r2, asr #16
900097e2:	9b02      	ldr	r3, [sp, #8]
900097e4:	ea4f 4729 	mov.w	r7, r9, asr #16
900097e8:	4379      	muls	r1, r7
900097ea:	5c52      	ldrb	r2, [r2, r1]
900097ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900097f0:	bb15      	cbnz	r5, 90009838 <EwScreenWarpIndex8RowGradientBlend+0xbc>
900097f2:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
900097f6:	f1ba 0f00 	cmp.w	sl, #0
900097fa:	d054      	beq.n	900098a6 <EwScreenWarpIndex8RowGradientBlend+0x12a>
900097fc:	2f00      	cmp	r7, #0
900097fe:	d054      	beq.n	900098aa <EwScreenWarpIndex8RowGradientBlend+0x12e>
90009800:	6b62      	ldr	r2, [r4, #52]	; 0x34
90009802:	fb02 6207 	mla	r2, r2, r7, r6
90009806:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009808:	b11b      	cbz	r3, 90009812 <EwScreenWarpIndex8RowGradientBlend+0x96>
9000980a:	b117      	cbz	r7, 90009812 <EwScreenWarpIndex8RowGradientBlend+0x96>
9000980c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000980e:	fb03 8807 	mla	r8, r3, r7, r8
90009812:	6d67      	ldr	r7, [r4, #84]	; 0x54
90009814:	b167      	cbz	r7, 90009830 <EwScreenWarpIndex8RowGradientBlend+0xb4>
90009816:	f1be 0f00 	cmp.w	lr, #0
9000981a:	d009      	beq.n	90009830 <EwScreenWarpIndex8RowGradientBlend+0xb4>
9000981c:	1517      	asrs	r7, r2, #20
9000981e:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90009822:	ebc7 5828 	rsb	r8, r7, r8, asr #20
90009826:	6ca7      	ldr	r7, [r4, #72]	; 0x48
90009828:	fb07 f808 	mul.w	r8, r7, r8
9000982c:	fb0e 2208 	mla	r2, lr, r8, r2
90009830:	f3c2 5285 	ubfx	r2, r2, #22, #6
90009834:	f102 0801 	add.w	r8, r2, #1
90009838:	0e8a      	lsrs	r2, r1, #26
9000983a:	d028      	beq.n	9000988e <EwScreenWarpIndex8RowGradientBlend+0x112>
9000983c:	ea4f 2911 	mov.w	r9, r1, lsr #8
90009840:	f3c1 07c4 	ubfx	r7, r1, #3, #5
90009844:	fb02 8208 	mla	r2, r2, r8, r8
90009848:	0949      	lsrs	r1, r1, #5
9000984a:	f409 4978 	and.w	r9, r9, #63488	; 0xf800
9000984e:	f64f 031f 	movw	r3, #63519	; 0xf81f
90009852:	0992      	lsrs	r2, r2, #6
90009854:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90009858:	ea49 0907 	orr.w	r9, r9, r7
9000985c:	f8bc 7000 	ldrh.w	r7, [ip]
90009860:	f1c2 0b40 	rsb	fp, r2, #64	; 0x40
90009864:	f427 6efc 	bic.w	lr, r7, #2016	; 0x7e0
90009868:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9000986c:	fb0b f707 	mul.w	r7, fp, r7
90009870:	fb0b fe0e 	mul.w	lr, fp, lr
90009874:	fb02 7701 	mla	r7, r2, r1, r7
90009878:	fb02 ee09 	mla	lr, r2, r9, lr
9000987c:	09bf      	lsrs	r7, r7, #6
9000987e:	ea03 1e9e 	and.w	lr, r3, lr, lsr #6
90009882:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90009886:	ea4e 0e07 	orr.w	lr, lr, r7
9000988a:	f8ac e000 	strh.w	lr, [ip]
9000988e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90009890:	f10c 0c02 	add.w	ip, ip, #2
90009894:	9a00      	ldr	r2, [sp, #0]
90009896:	3801      	subs	r0, #1
90009898:	441a      	add	r2, r3
9000989a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000989c:	9200      	str	r2, [sp, #0]
9000989e:	9a10      	ldr	r2, [sp, #64]	; 0x40
900098a0:	4413      	add	r3, r2
900098a2:	930e      	str	r3, [sp, #56]	; 0x38
900098a4:	e786      	b.n	900097b4 <EwScreenWarpIndex8RowGradientBlend+0x38>
900098a6:	4632      	mov	r2, r6
900098a8:	e7b3      	b.n	90009812 <EwScreenWarpIndex8RowGradientBlend+0x96>
900098aa:	4632      	mov	r2, r6
900098ac:	e7ab      	b.n	90009806 <EwScreenWarpIndex8RowGradientBlend+0x8a>

900098ae <EwScreenWarpIndex8RowFilterGradientBlend>:
900098ae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900098b2:	b089      	sub	sp, #36	; 0x24
900098b4:	f8d1 8018 	ldr.w	r8, [r1, #24]
900098b8:	9303      	str	r3, [sp, #12]
900098ba:	6803      	ldr	r3, [r0, #0]
900098bc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900098be:	9301      	str	r3, [sp, #4]
900098c0:	680b      	ldr	r3, [r1, #0]
900098c2:	9305      	str	r3, [sp, #20]
900098c4:	688b      	ldr	r3, [r1, #8]
900098c6:	9306      	str	r3, [sp, #24]
900098c8:	6b23      	ldr	r3, [r4, #48]	; 0x30
900098ca:	1599      	asrs	r1, r3, #22
900098cc:	9300      	str	r3, [sp, #0]
900098ce:	6d23      	ldr	r3, [r4, #80]	; 0x50
900098d0:	3101      	adds	r1, #1
900098d2:	9304      	str	r3, [sp, #16]
900098d4:	b96b      	cbnz	r3, 900098f2 <EwScreenWarpIndex8RowFilterGradientBlend+0x44>
900098d6:	6d66      	ldr	r6, [r4, #84]	; 0x54
900098d8:	fab6 f686 	clz	r6, r6
900098dc:	0976      	lsrs	r6, r6, #5
900098de:	9b06      	ldr	r3, [sp, #24]
900098e0:	9202      	str	r2, [sp, #8]
900098e2:	3301      	adds	r3, #1
900098e4:	9307      	str	r3, [sp, #28]
900098e6:	9b02      	ldr	r3, [sp, #8]
900098e8:	2b00      	cmp	r3, #0
900098ea:	dc04      	bgt.n	900098f6 <EwScreenWarpIndex8RowFilterGradientBlend+0x48>
900098ec:	b009      	add	sp, #36	; 0x24
900098ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900098f2:	2600      	movs	r6, #0
900098f4:	e7f3      	b.n	900098de <EwScreenWarpIndex8RowFilterGradientBlend+0x30>
900098f6:	9b03      	ldr	r3, [sp, #12]
900098f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
900098fa:	1318      	asrs	r0, r3, #12
900098fc:	9b15      	ldr	r3, [sp, #84]	; 0x54
900098fe:	ea4f 3c22 	mov.w	ip, r2, asr #12
90009902:	9a16      	ldr	r2, [sp, #88]	; 0x58
90009904:	4358      	muls	r0, r3
90009906:	fb02 fc0c 	mul.w	ip, r2, ip
9000990a:	ea4f 3e20 	mov.w	lr, r0, asr #12
9000990e:	ea4f 352c 	mov.w	r5, ip, asr #12
90009912:	bb16      	cbnz	r6, 9000995a <EwScreenWarpIndex8RowFilterGradientBlend+0xac>
90009914:	9a04      	ldr	r2, [sp, #16]
90009916:	6ba7      	ldr	r7, [r4, #56]	; 0x38
90009918:	2a00      	cmp	r2, #0
9000991a:	f000 80ae 	beq.w	90009a7a <EwScreenWarpIndex8RowFilterGradientBlend+0x1cc>
9000991e:	ea5f 422c 	movs.w	r2, ip, asr #16
90009922:	f000 80ac 	beq.w	90009a7e <EwScreenWarpIndex8RowFilterGradientBlend+0x1d0>
90009926:	6b61      	ldr	r1, [r4, #52]	; 0x34
90009928:	9b00      	ldr	r3, [sp, #0]
9000992a:	fb01 3102 	mla	r1, r1, r2, r3
9000992e:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009930:	b11b      	cbz	r3, 9000993a <EwScreenWarpIndex8RowFilterGradientBlend+0x8c>
90009932:	b112      	cbz	r2, 9000993a <EwScreenWarpIndex8RowFilterGradientBlend+0x8c>
90009934:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90009936:	fb03 7702 	mla	r7, r3, r2, r7
9000993a:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000993c:	b152      	cbz	r2, 90009954 <EwScreenWarpIndex8RowFilterGradientBlend+0xa6>
9000993e:	1400      	asrs	r0, r0, #16
90009940:	d008      	beq.n	90009954 <EwScreenWarpIndex8RowFilterGradientBlend+0xa6>
90009942:	150a      	asrs	r2, r1, #20
90009944:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90009948:	ebc2 5727 	rsb	r7, r2, r7, asr #20
9000994c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
9000994e:	4357      	muls	r7, r2
90009950:	fb00 1107 	mla	r1, r0, r7, r1
90009954:	f3c1 5185 	ubfx	r1, r1, #22, #6
90009958:	3101      	adds	r1, #1
9000995a:	f1ae 0008 	sub.w	r0, lr, #8
9000995e:	3d08      	subs	r5, #8
90009960:	9a06      	ldr	r2, [sp, #24]
90009962:	112b      	asrs	r3, r5, #4
90009964:	f005 050f 	and.w	r5, r5, #15
90009968:	1107      	asrs	r7, r0, #4
9000996a:	f000 000f 	and.w	r0, r0, #15
9000996e:	f1c5 0e10 	rsb	lr, r5, #16
90009972:	fb02 7703 	mla	r7, r2, r3, r7
90009976:	9b05      	ldr	r3, [sp, #20]
90009978:	f1c0 0c10 	rsb	ip, r0, #16
9000997c:	fb00 fe0e 	mul.w	lr, r0, lr
90009980:	19da      	adds	r2, r3, r7
90009982:	5ddb      	ldrb	r3, [r3, r7]
90009984:	fb05 fc0c 	mul.w	ip, r5, ip
90009988:	9f07      	ldr	r7, [sp, #28]
9000998a:	f858 a023 	ldr.w	sl, [r8, r3, lsl #2]
9000998e:	4368      	muls	r0, r5
90009990:	7853      	ldrb	r3, [r2, #1]
90009992:	f858 5023 	ldr.w	r5, [r8, r3, lsl #2]
90009996:	9b07      	ldr	r3, [sp, #28]
90009998:	18d3      	adds	r3, r2, r3
9000999a:	5dd2      	ldrb	r2, [r2, r7]
9000999c:	f5ce 7780 	rsb	r7, lr, #256	; 0x100
900099a0:	f813 3c01 	ldrb.w	r3, [r3, #-1]
900099a4:	eba7 070c 	sub.w	r7, r7, ip
900099a8:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
900099ac:	f858 9023 	ldr.w	r9, [r8, r3, lsl #2]
900099b0:	ea4f 231a 	mov.w	r3, sl, lsr #8
900099b4:	1a3f      	subs	r7, r7, r0
900099b6:	f00a 1aff 	and.w	sl, sl, #16711935	; 0xff00ff
900099ba:	f003 1bff 	and.w	fp, r3, #16711935	; 0xff00ff
900099be:	0a2b      	lsrs	r3, r5, #8
900099c0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900099c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900099c8:	fb0e f505 	mul.w	r5, lr, r5
900099cc:	fb0e f303 	mul.w	r3, lr, r3
900099d0:	fb07 550a 	mla	r5, r7, sl, r5
900099d4:	fb07 330b 	mla	r3, r7, fp, r3
900099d8:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900099dc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900099e0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900099e4:	fb00 5502 	mla	r5, r0, r2, r5
900099e8:	fb00 330b 	mla	r3, r0, fp, r3
900099ec:	ea4f 2b19 	mov.w	fp, r9, lsr #8
900099f0:	f009 19ff 	and.w	r9, r9, #16711935	; 0xff00ff
900099f4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900099f8:	fb0c 5209 	mla	r2, ip, r9, r5
900099fc:	fb0c 330b 	mla	r3, ip, fp, r3
90009a00:	0a12      	lsrs	r2, r2, #8
90009a02:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
90009a06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90009a0a:	431a      	orrs	r2, r3
90009a0c:	0e9b      	lsrs	r3, r3, #26
90009a0e:	d025      	beq.n	90009a5c <EwScreenWarpIndex8RowFilterGradientBlend+0x1ae>
90009a10:	0a17      	lsrs	r7, r2, #8
90009a12:	f3c2 00c4 	ubfx	r0, r2, #3, #5
90009a16:	fb03 1301 	mla	r3, r3, r1, r1
90009a1a:	0952      	lsrs	r2, r2, #5
90009a1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90009a20:	099b      	lsrs	r3, r3, #6
90009a22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90009a26:	4307      	orrs	r7, r0
90009a28:	9801      	ldr	r0, [sp, #4]
90009a2a:	f1c3 0c40 	rsb	ip, r3, #64	; 0x40
90009a2e:	8800      	ldrh	r0, [r0, #0]
90009a30:	f420 65fc 	bic.w	r5, r0, #2016	; 0x7e0
90009a34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90009a38:	fb0c f000 	mul.w	r0, ip, r0
90009a3c:	fb0c f505 	mul.w	r5, ip, r5
90009a40:	fb03 0002 	mla	r0, r3, r2, r0
90009a44:	fb03 5507 	mla	r5, r3, r7, r5
90009a48:	f64f 031f 	movw	r3, #63519	; 0xf81f
90009a4c:	0980      	lsrs	r0, r0, #6
90009a4e:	ea03 1595 	and.w	r5, r3, r5, lsr #6
90009a52:	9b01      	ldr	r3, [sp, #4]
90009a54:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90009a58:	4305      	orrs	r5, r0
90009a5a:	801d      	strh	r5, [r3, #0]
90009a5c:	9b03      	ldr	r3, [sp, #12]
90009a5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90009a60:	4413      	add	r3, r2
90009a62:	9a14      	ldr	r2, [sp, #80]	; 0x50
90009a64:	9303      	str	r3, [sp, #12]
90009a66:	9b12      	ldr	r3, [sp, #72]	; 0x48
90009a68:	4413      	add	r3, r2
90009a6a:	9312      	str	r3, [sp, #72]	; 0x48
90009a6c:	9b01      	ldr	r3, [sp, #4]
90009a6e:	3302      	adds	r3, #2
90009a70:	9301      	str	r3, [sp, #4]
90009a72:	9b02      	ldr	r3, [sp, #8]
90009a74:	3b01      	subs	r3, #1
90009a76:	9302      	str	r3, [sp, #8]
90009a78:	e735      	b.n	900098e6 <EwScreenWarpIndex8RowFilterGradientBlend+0x38>
90009a7a:	9900      	ldr	r1, [sp, #0]
90009a7c:	e75d      	b.n	9000993a <EwScreenWarpIndex8RowFilterGradientBlend+0x8c>
90009a7e:	9900      	ldr	r1, [sp, #0]
90009a80:	e755      	b.n	9000992e <EwScreenWarpIndex8RowFilterGradientBlend+0x80>

90009a82 <EwScreenWarpAlpha8RowGradient>:
90009a82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009a86:	b08d      	sub	sp, #52	; 0x34
90009a88:	f8d0 c000 	ldr.w	ip, [r0]
90009a8c:	9306      	str	r3, [sp, #24]
90009a8e:	680b      	ldr	r3, [r1, #0]
90009a90:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
90009a92:	9309      	str	r3, [sp, #36]	; 0x24
90009a94:	688b      	ldr	r3, [r1, #8]
90009a96:	930a      	str	r3, [sp, #40]	; 0x28
90009a98:	6d23      	ldr	r3, [r4, #80]	; 0x50
90009a9a:	9307      	str	r3, [sp, #28]
90009a9c:	bb1b      	cbnz	r3, 90009ae6 <EwScreenWarpAlpha8RowGradient+0x64>
90009a9e:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009aa0:	fab3 fe83 	clz	lr, r3
90009aa4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90009aa8:	6823      	ldr	r3, [r4, #0]
90009aaa:	4690      	mov	r8, r2
90009aac:	f8d4 9010 	ldr.w	r9, [r4, #16]
90009ab0:	9301      	str	r3, [sp, #4]
90009ab2:	091b      	lsrs	r3, r3, #4
90009ab4:	f8d4 b020 	ldr.w	fp, [r4, #32]
90009ab8:	f403 017f 	and.w	r1, r3, #16711680	; 0xff0000
90009abc:	ea4f 3319 	mov.w	r3, r9, lsr #12
90009ac0:	f3cb 5507 	ubfx	r5, fp, #20, #8
90009ac4:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
90009ac8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90009acc:	430b      	orrs	r3, r1
90009ace:	432b      	orrs	r3, r5
90009ad0:	ea4f 150a 	mov.w	r5, sl, lsl #4
90009ad4:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009ad8:	432b      	orrs	r3, r5
90009ada:	f1b8 0f00 	cmp.w	r8, #0
90009ade:	dc05      	bgt.n	90009aec <EwScreenWarpAlpha8RowGradient+0x6a>
90009ae0:	b00d      	add	sp, #52	; 0x34
90009ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009ae6:	f04f 0e00 	mov.w	lr, #0
90009aea:	e7dd      	b.n	90009aa8 <EwScreenWarpAlpha8RowGradient+0x26>
90009aec:	9a06      	ldr	r2, [sp, #24]
90009aee:	9919      	ldr	r1, [sp, #100]	; 0x64
90009af0:	1312      	asrs	r2, r2, #12
90009af2:	981a      	ldr	r0, [sp, #104]	; 0x68
90009af4:	9d09      	ldr	r5, [sp, #36]	; 0x24
90009af6:	434a      	muls	r2, r1
90009af8:	1411      	asrs	r1, r2, #16
90009afa:	eb05 4222 	add.w	r2, r5, r2, asr #16
90009afe:	9108      	str	r1, [sp, #32]
90009b00:	9916      	ldr	r1, [sp, #88]	; 0x58
90009b02:	1309      	asrs	r1, r1, #12
90009b04:	4341      	muls	r1, r0
90009b06:	980a      	ldr	r0, [sp, #40]	; 0x28
90009b08:	1409      	asrs	r1, r1, #16
90009b0a:	4348      	muls	r0, r1
90009b0c:	5c12      	ldrb	r2, [r2, r0]
90009b0e:	920b      	str	r2, [sp, #44]	; 0x2c
90009b10:	f1be 0f00 	cmp.w	lr, #0
90009b14:	d16a      	bne.n	90009bec <EwScreenWarpAlpha8RowGradient+0x16a>
90009b16:	68a3      	ldr	r3, [r4, #8]
90009b18:	9302      	str	r3, [sp, #8]
90009b1a:	69a3      	ldr	r3, [r4, #24]
90009b1c:	9303      	str	r3, [sp, #12]
90009b1e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009b20:	9304      	str	r3, [sp, #16]
90009b22:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90009b24:	9305      	str	r3, [sp, #20]
90009b26:	9b07      	ldr	r3, [sp, #28]
90009b28:	2b00      	cmp	r3, #0
90009b2a:	d071      	beq.n	90009c10 <EwScreenWarpAlpha8RowGradient+0x18e>
90009b2c:	2900      	cmp	r1, #0
90009b2e:	f000 8096 	beq.w	90009c5e <EwScreenWarpAlpha8RowGradient+0x1dc>
90009b32:	9b01      	ldr	r3, [sp, #4]
90009b34:	6860      	ldr	r0, [r4, #4]
90009b36:	6962      	ldr	r2, [r4, #20]
90009b38:	fb00 3001 	mla	r0, r0, r1, r3
90009b3c:	6b65      	ldr	r5, [r4, #52]	; 0x34
90009b3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009b40:	fb02 9201 	mla	r2, r2, r1, r9
90009b44:	fb05 a501 	mla	r5, r5, r1, sl
90009b48:	fb03 b301 	mla	r3, r3, r1, fp
90009b4c:	6d67      	ldr	r7, [r4, #84]	; 0x54
90009b4e:	b1bf      	cbz	r7, 90009b80 <EwScreenWarpAlpha8RowGradient+0xfe>
90009b50:	b1b1      	cbz	r1, 90009b80 <EwScreenWarpAlpha8RowGradient+0xfe>
90009b52:	68e7      	ldr	r7, [r4, #12]
90009b54:	9e02      	ldr	r6, [sp, #8]
90009b56:	fb07 6601 	mla	r6, r7, r1, r6
90009b5a:	9f03      	ldr	r7, [sp, #12]
90009b5c:	9602      	str	r6, [sp, #8]
90009b5e:	463e      	mov	r6, r7
90009b60:	69e7      	ldr	r7, [r4, #28]
90009b62:	fb07 6701 	mla	r7, r7, r1, r6
90009b66:	9703      	str	r7, [sp, #12]
90009b68:	9f04      	ldr	r7, [sp, #16]
90009b6a:	463e      	mov	r6, r7
90009b6c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90009b6e:	fb07 6701 	mla	r7, r7, r1, r6
90009b72:	9704      	str	r7, [sp, #16]
90009b74:	9f05      	ldr	r7, [sp, #20]
90009b76:	463e      	mov	r6, r7
90009b78:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90009b7a:	fb07 6101 	mla	r1, r7, r1, r6
90009b7e:	9105      	str	r1, [sp, #20]
90009b80:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009b82:	b329      	cbz	r1, 90009bd0 <EwScreenWarpAlpha8RowGradient+0x14e>
90009b84:	9908      	ldr	r1, [sp, #32]
90009b86:	b319      	cbz	r1, 90009bd0 <EwScreenWarpAlpha8RowGradient+0x14e>
90009b88:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90009b8a:	9f08      	ldr	r7, [sp, #32]
90009b8c:	9e02      	ldr	r6, [sp, #8]
90009b8e:	434f      	muls	r7, r1
90009b90:	4639      	mov	r1, r7
90009b92:	1507      	asrs	r7, r0, #20
90009b94:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90009b98:	ebc7 5626 	rsb	r6, r7, r6, asr #20
90009b9c:	9f03      	ldr	r7, [sp, #12]
90009b9e:	fb01 0006 	mla	r0, r1, r6, r0
90009ba2:	1516      	asrs	r6, r2, #20
90009ba4:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90009ba8:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009bac:	9f04      	ldr	r7, [sp, #16]
90009bae:	fb01 2206 	mla	r2, r1, r6, r2
90009bb2:	151e      	asrs	r6, r3, #20
90009bb4:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90009bb8:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009bbc:	9f05      	ldr	r7, [sp, #20]
90009bbe:	fb01 3306 	mla	r3, r1, r6, r3
90009bc2:	152e      	asrs	r6, r5, #20
90009bc4:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90009bc8:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009bcc:	fb01 5506 	mla	r5, r1, r6, r5
90009bd0:	0900      	lsrs	r0, r0, #4
90009bd2:	f3c3 5307 	ubfx	r3, r3, #20, #8
90009bd6:	0b12      	lsrs	r2, r2, #12
90009bd8:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90009bdc:	012d      	lsls	r5, r5, #4
90009bde:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90009be2:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009be6:	4310      	orrs	r0, r2
90009be8:	4303      	orrs	r3, r0
90009bea:	432b      	orrs	r3, r5
90009bec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90009bee:	0892      	lsrs	r2, r2, #2
90009bf0:	d113      	bne.n	90009c1a <EwScreenWarpAlpha8RowGradient+0x198>
90009bf2:	f8ac 2000 	strh.w	r2, [ip]
90009bf6:	9a06      	ldr	r2, [sp, #24]
90009bf8:	f10c 0c02 	add.w	ip, ip, #2
90009bfc:	9917      	ldr	r1, [sp, #92]	; 0x5c
90009bfe:	f108 38ff 	add.w	r8, r8, #4294967295
90009c02:	440a      	add	r2, r1
90009c04:	9918      	ldr	r1, [sp, #96]	; 0x60
90009c06:	9206      	str	r2, [sp, #24]
90009c08:	9a16      	ldr	r2, [sp, #88]	; 0x58
90009c0a:	440a      	add	r2, r1
90009c0c:	9216      	str	r2, [sp, #88]	; 0x58
90009c0e:	e764      	b.n	90009ada <EwScreenWarpAlpha8RowGradient+0x58>
90009c10:	4655      	mov	r5, sl
90009c12:	465b      	mov	r3, fp
90009c14:	464a      	mov	r2, r9
90009c16:	9801      	ldr	r0, [sp, #4]
90009c18:	e7b2      	b.n	90009b80 <EwScreenWarpAlpha8RowGradient+0xfe>
90009c1a:	0a19      	lsrs	r1, r3, #8
90009c1c:	f3c3 00c4 	ubfx	r0, r3, #3, #5
90009c20:	2a3f      	cmp	r2, #63	; 0x3f
90009c22:	ea4f 6593 	mov.w	r5, r3, lsr #26
90009c26:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90009c2a:	ea41 0100 	orr.w	r1, r1, r0
90009c2e:	ea4f 1053 	mov.w	r0, r3, lsr #5
90009c32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90009c36:	d101      	bne.n	90009c3c <EwScreenWarpAlpha8RowGradient+0x1ba>
90009c38:	2d3f      	cmp	r5, #63	; 0x3f
90009c3a:	d00c      	beq.n	90009c56 <EwScreenWarpAlpha8RowGradient+0x1d4>
90009c3c:	3201      	adds	r2, #1
90009c3e:	fb05 2202 	mla	r2, r5, r2, r2
90009c42:	f64f 051f 	movw	r5, #63519	; 0xf81f
90009c46:	0992      	lsrs	r2, r2, #6
90009c48:	4350      	muls	r0, r2
90009c4a:	4351      	muls	r1, r2
90009c4c:	0980      	lsrs	r0, r0, #6
90009c4e:	ea05 1191 	and.w	r1, r5, r1, lsr #6
90009c52:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90009c56:	4301      	orrs	r1, r0
90009c58:	f8ac 1000 	strh.w	r1, [ip]
90009c5c:	e7cb      	b.n	90009bf6 <EwScreenWarpAlpha8RowGradient+0x174>
90009c5e:	4655      	mov	r5, sl
90009c60:	465b      	mov	r3, fp
90009c62:	464a      	mov	r2, r9
90009c64:	9801      	ldr	r0, [sp, #4]
90009c66:	e771      	b.n	90009b4c <EwScreenWarpAlpha8RowGradient+0xca>

90009c68 <EwScreenWarpAlpha8RowFilterGradient>:
90009c68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009c6c:	b08d      	sub	sp, #52	; 0x34
90009c6e:	9305      	str	r3, [sp, #20]
90009c70:	6803      	ldr	r3, [r0, #0]
90009c72:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
90009c74:	9302      	str	r3, [sp, #8]
90009c76:	680b      	ldr	r3, [r1, #0]
90009c78:	9307      	str	r3, [sp, #28]
90009c7a:	688b      	ldr	r3, [r1, #8]
90009c7c:	9308      	str	r3, [sp, #32]
90009c7e:	6d23      	ldr	r3, [r4, #80]	; 0x50
90009c80:	9306      	str	r3, [sp, #24]
90009c82:	bb3b      	cbnz	r3, 90009cd4 <EwScreenWarpAlpha8RowFilterGradient+0x6c>
90009c84:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009c86:	fab3 f383 	clz	r3, r3
90009c8a:	095b      	lsrs	r3, r3, #5
90009c8c:	9303      	str	r3, [sp, #12]
90009c8e:	6823      	ldr	r3, [r4, #0]
90009c90:	f8d4 b020 	ldr.w	fp, [r4, #32]
90009c94:	9300      	str	r3, [sp, #0]
90009c96:	6923      	ldr	r3, [r4, #16]
90009c98:	f3cb 5507 	ubfx	r5, fp, #20, #8
90009c9c:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
90009ca0:	9301      	str	r3, [sp, #4]
90009ca2:	9b00      	ldr	r3, [sp, #0]
90009ca4:	9204      	str	r2, [sp, #16]
90009ca6:	091b      	lsrs	r3, r3, #4
90009ca8:	9a08      	ldr	r2, [sp, #32]
90009caa:	f403 017f 	and.w	r1, r3, #16711680	; 0xff0000
90009cae:	9b01      	ldr	r3, [sp, #4]
90009cb0:	3201      	adds	r2, #1
90009cb2:	0b1b      	lsrs	r3, r3, #12
90009cb4:	9209      	str	r2, [sp, #36]	; 0x24
90009cb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90009cba:	430b      	orrs	r3, r1
90009cbc:	432b      	orrs	r3, r5
90009cbe:	ea4f 150a 	mov.w	r5, sl, lsl #4
90009cc2:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009cc6:	432b      	orrs	r3, r5
90009cc8:	9a04      	ldr	r2, [sp, #16]
90009cca:	2a00      	cmp	r2, #0
90009ccc:	dc04      	bgt.n	90009cd8 <EwScreenWarpAlpha8RowFilterGradient+0x70>
90009cce:	b00d      	add	sp, #52	; 0x34
90009cd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009cd4:	2300      	movs	r3, #0
90009cd6:	e7d9      	b.n	90009c8c <EwScreenWarpAlpha8RowFilterGradient+0x24>
90009cd8:	9a05      	ldr	r2, [sp, #20]
90009cda:	ea4f 3922 	mov.w	r9, r2, asr #12
90009cde:	9a19      	ldr	r2, [sp, #100]	; 0x64
90009ce0:	fb02 f909 	mul.w	r9, r2, r9
90009ce4:	ea4f 3229 	mov.w	r2, r9, asr #12
90009ce8:	920a      	str	r2, [sp, #40]	; 0x28
90009cea:	9a16      	ldr	r2, [sp, #88]	; 0x58
90009cec:	1311      	asrs	r1, r2, #12
90009cee:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90009cf0:	4351      	muls	r1, r2
90009cf2:	130a      	asrs	r2, r1, #12
90009cf4:	920b      	str	r2, [sp, #44]	; 0x2c
90009cf6:	9a03      	ldr	r2, [sp, #12]
90009cf8:	2a00      	cmp	r2, #0
90009cfa:	d15c      	bne.n	90009db6 <EwScreenWarpAlpha8RowFilterGradient+0x14e>
90009cfc:	9b06      	ldr	r3, [sp, #24]
90009cfe:	68a6      	ldr	r6, [r4, #8]
90009d00:	f8d4 c018 	ldr.w	ip, [r4, #24]
90009d04:	f8d4 e028 	ldr.w	lr, [r4, #40]	; 0x28
90009d08:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
90009d0c:	2b00      	cmp	r3, #0
90009d0e:	f000 8093 	beq.w	90009e38 <EwScreenWarpAlpha8RowFilterGradient+0x1d0>
90009d12:	1409      	asrs	r1, r1, #16
90009d14:	f000 80ba 	beq.w	90009e8c <EwScreenWarpAlpha8RowFilterGradient+0x224>
90009d18:	9b00      	ldr	r3, [sp, #0]
90009d1a:	6860      	ldr	r0, [r4, #4]
90009d1c:	6962      	ldr	r2, [r4, #20]
90009d1e:	fb00 3001 	mla	r0, r0, r1, r3
90009d22:	9b01      	ldr	r3, [sp, #4]
90009d24:	6b65      	ldr	r5, [r4, #52]	; 0x34
90009d26:	fb02 3201 	mla	r2, r2, r1, r3
90009d2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009d2c:	fb05 a501 	mla	r5, r5, r1, sl
90009d30:	fb03 b301 	mla	r3, r3, r1, fp
90009d34:	6d67      	ldr	r7, [r4, #84]	; 0x54
90009d36:	b167      	cbz	r7, 90009d52 <EwScreenWarpAlpha8RowFilterGradient+0xea>
90009d38:	b159      	cbz	r1, 90009d52 <EwScreenWarpAlpha8RowFilterGradient+0xea>
90009d3a:	68e7      	ldr	r7, [r4, #12]
90009d3c:	fb07 6601 	mla	r6, r7, r1, r6
90009d40:	69e7      	ldr	r7, [r4, #28]
90009d42:	fb07 cc01 	mla	ip, r7, r1, ip
90009d46:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90009d48:	fb07 ee01 	mla	lr, r7, r1, lr
90009d4c:	6be7      	ldr	r7, [r4, #60]	; 0x3c
90009d4e:	fb07 8801 	mla	r8, r7, r1, r8
90009d52:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009d54:	b309      	cbz	r1, 90009d9a <EwScreenWarpAlpha8RowFilterGradient+0x132>
90009d56:	ea5f 4929 	movs.w	r9, r9, asr #16
90009d5a:	d01e      	beq.n	90009d9a <EwScreenWarpAlpha8RowFilterGradient+0x132>
90009d5c:	1507      	asrs	r7, r0, #20
90009d5e:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90009d60:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90009d64:	fb01 f109 	mul.w	r1, r1, r9
90009d68:	ebc7 5626 	rsb	r6, r7, r6, asr #20
90009d6c:	fb01 0006 	mla	r0, r1, r6, r0
90009d70:	1516      	asrs	r6, r2, #20
90009d72:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90009d76:	ebc6 562c 	rsb	r6, r6, ip, asr #20
90009d7a:	fb01 2206 	mla	r2, r1, r6, r2
90009d7e:	151e      	asrs	r6, r3, #20
90009d80:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90009d84:	ebc6 562e 	rsb	r6, r6, lr, asr #20
90009d88:	fb01 3306 	mla	r3, r1, r6, r3
90009d8c:	152e      	asrs	r6, r5, #20
90009d8e:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90009d92:	ebc6 5628 	rsb	r6, r6, r8, asr #20
90009d96:	fb01 5506 	mla	r5, r1, r6, r5
90009d9a:	0900      	lsrs	r0, r0, #4
90009d9c:	f3c3 5307 	ubfx	r3, r3, #20, #8
90009da0:	0b12      	lsrs	r2, r2, #12
90009da2:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90009da6:	012d      	lsls	r5, r5, #4
90009da8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90009dac:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009db0:	4310      	orrs	r0, r2
90009db2:	4303      	orrs	r3, r0
90009db4:	432b      	orrs	r3, r5
90009db6:	990b      	ldr	r1, [sp, #44]	; 0x2c
90009db8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90009dba:	f1a1 0008 	sub.w	r0, r1, #8
90009dbe:	9e08      	ldr	r6, [sp, #32]
90009dc0:	3a08      	subs	r2, #8
90009dc2:	1105      	asrs	r5, r0, #4
90009dc4:	f000 000f 	and.w	r0, r0, #15
90009dc8:	1111      	asrs	r1, r2, #4
90009dca:	f002 020f 	and.w	r2, r2, #15
90009dce:	fb06 1105 	mla	r1, r6, r5, r1
90009dd2:	9d07      	ldr	r5, [sp, #28]
90009dd4:	f1c0 0610 	rsb	r6, r0, #16
90009dd8:	186f      	adds	r7, r5, r1
90009dda:	f1c2 0510 	rsb	r5, r2, #16
90009dde:	4356      	muls	r6, r2
90009de0:	4345      	muls	r5, r0
90009de2:	4342      	muls	r2, r0
90009de4:	9809      	ldr	r0, [sp, #36]	; 0x24
90009de6:	eb07 0c00 	add.w	ip, r7, r0
90009dea:	f5c6 7080 	rsb	r0, r6, #256	; 0x100
90009dee:	1b40      	subs	r0, r0, r5
90009df0:	eba0 0802 	sub.w	r8, r0, r2
90009df4:	9807      	ldr	r0, [sp, #28]
90009df6:	f810 e001 	ldrb.w	lr, [r0, r1]
90009dfa:	7879      	ldrb	r1, [r7, #1]
90009dfc:	9809      	ldr	r0, [sp, #36]	; 0x24
90009dfe:	4371      	muls	r1, r6
90009e00:	5c3e      	ldrb	r6, [r7, r0]
90009e02:	fb0e 1108 	mla	r1, lr, r8, r1
90009e06:	fb02 1106 	mla	r1, r2, r6, r1
90009e0a:	f81c 6c01 	ldrb.w	r6, [ip, #-1]
90009e0e:	fb05 1106 	mla	r1, r5, r6, r1
90009e12:	0a8d      	lsrs	r5, r1, #10
90009e14:	d115      	bne.n	90009e42 <EwScreenWarpAlpha8RowFilterGradient+0x1da>
90009e16:	9a02      	ldr	r2, [sp, #8]
90009e18:	8015      	strh	r5, [r2, #0]
90009e1a:	9a05      	ldr	r2, [sp, #20]
90009e1c:	9917      	ldr	r1, [sp, #92]	; 0x5c
90009e1e:	440a      	add	r2, r1
90009e20:	9918      	ldr	r1, [sp, #96]	; 0x60
90009e22:	9205      	str	r2, [sp, #20]
90009e24:	9a16      	ldr	r2, [sp, #88]	; 0x58
90009e26:	440a      	add	r2, r1
90009e28:	9216      	str	r2, [sp, #88]	; 0x58
90009e2a:	9a02      	ldr	r2, [sp, #8]
90009e2c:	3202      	adds	r2, #2
90009e2e:	9202      	str	r2, [sp, #8]
90009e30:	9a04      	ldr	r2, [sp, #16]
90009e32:	3a01      	subs	r2, #1
90009e34:	9204      	str	r2, [sp, #16]
90009e36:	e747      	b.n	90009cc8 <EwScreenWarpAlpha8RowFilterGradient+0x60>
90009e38:	4655      	mov	r5, sl
90009e3a:	465b      	mov	r3, fp
90009e3c:	e9dd 0200 	ldrd	r0, r2, [sp]
90009e40:	e787      	b.n	90009d52 <EwScreenWarpAlpha8RowFilterGradient+0xea>
90009e42:	0a1f      	lsrs	r7, r3, #8
90009e44:	f3c3 02c4 	ubfx	r2, r3, #3, #5
90009e48:	ea4f 1c53 	mov.w	ip, r3, lsr #5
90009e4c:	2d3e      	cmp	r5, #62	; 0x3e
90009e4e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90009e52:	ea4f 6893 	mov.w	r8, r3, lsr #26
90009e56:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90009e5a:	ea47 0702 	orr.w	r7, r7, r2
90009e5e:	d901      	bls.n	90009e64 <EwScreenWarpAlpha8RowFilterGradient+0x1fc>
90009e60:	4545      	cmp	r5, r8
90009e62:	d00e      	beq.n	90009e82 <EwScreenWarpAlpha8RowFilterGradient+0x21a>
90009e64:	3501      	adds	r5, #1
90009e66:	f64f 021f 	movw	r2, #63519	; 0xf81f
90009e6a:	fb08 5505 	mla	r5, r8, r5, r5
90009e6e:	09ad      	lsrs	r5, r5, #6
90009e70:	fb05 fc0c 	mul.w	ip, r5, ip
90009e74:	436f      	muls	r7, r5
90009e76:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
90009e7a:	ea02 1797 	and.w	r7, r2, r7, lsr #6
90009e7e:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90009e82:	ea47 070c 	orr.w	r7, r7, ip
90009e86:	9a02      	ldr	r2, [sp, #8]
90009e88:	8017      	strh	r7, [r2, #0]
90009e8a:	e7c6      	b.n	90009e1a <EwScreenWarpAlpha8RowFilterGradient+0x1b2>
90009e8c:	4655      	mov	r5, sl
90009e8e:	465b      	mov	r3, fp
90009e90:	e9dd 0200 	ldrd	r0, r2, [sp]
90009e94:	e74e      	b.n	90009d34 <EwScreenWarpAlpha8RowFilterGradient+0xcc>

90009e96 <EwScreenWarpAlpha8RowGradientBlend>:
90009e96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90009e9a:	b08d      	sub	sp, #52	; 0x34
90009e9c:	f8d0 e000 	ldr.w	lr, [r0]
90009ea0:	9306      	str	r3, [sp, #24]
90009ea2:	680b      	ldr	r3, [r1, #0]
90009ea4:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
90009ea6:	9309      	str	r3, [sp, #36]	; 0x24
90009ea8:	688b      	ldr	r3, [r1, #8]
90009eaa:	930a      	str	r3, [sp, #40]	; 0x28
90009eac:	6d23      	ldr	r3, [r4, #80]	; 0x50
90009eae:	9307      	str	r3, [sp, #28]
90009eb0:	bb23      	cbnz	r3, 90009efc <EwScreenWarpAlpha8RowGradientBlend+0x66>
90009eb2:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009eb4:	fab3 f883 	clz	r8, r3
90009eb8:	ea4f 1858 	mov.w	r8, r8, lsr #5
90009ebc:	f8d4 9000 	ldr.w	r9, [r4]
90009ec0:	f8d4 c010 	ldr.w	ip, [r4, #16]
90009ec4:	ea4f 1319 	mov.w	r3, r9, lsr #4
90009ec8:	f8d4 b020 	ldr.w	fp, [r4, #32]
90009ecc:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
90009ed0:	f403 017f 	and.w	r1, r3, #16711680	; 0xff0000
90009ed4:	ea4f 331c 	mov.w	r3, ip, lsr #12
90009ed8:	f3cb 5507 	ubfx	r5, fp, #20, #8
90009edc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90009ee0:	430b      	orrs	r3, r1
90009ee2:	432b      	orrs	r3, r5
90009ee4:	ea4f 150a 	mov.w	r5, sl, lsl #4
90009ee8:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009eec:	432b      	orrs	r3, r5
90009eee:	9205      	str	r2, [sp, #20]
90009ef0:	9a05      	ldr	r2, [sp, #20]
90009ef2:	2a00      	cmp	r2, #0
90009ef4:	dc05      	bgt.n	90009f02 <EwScreenWarpAlpha8RowGradientBlend+0x6c>
90009ef6:	b00d      	add	sp, #52	; 0x34
90009ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90009efc:	f04f 0800 	mov.w	r8, #0
90009f00:	e7dc      	b.n	90009ebc <EwScreenWarpAlpha8RowGradientBlend+0x26>
90009f02:	9a06      	ldr	r2, [sp, #24]
90009f04:	9919      	ldr	r1, [sp, #100]	; 0x64
90009f06:	1312      	asrs	r2, r2, #12
90009f08:	981a      	ldr	r0, [sp, #104]	; 0x68
90009f0a:	9d09      	ldr	r5, [sp, #36]	; 0x24
90009f0c:	434a      	muls	r2, r1
90009f0e:	1411      	asrs	r1, r2, #16
90009f10:	eb05 4222 	add.w	r2, r5, r2, asr #16
90009f14:	9108      	str	r1, [sp, #32]
90009f16:	9916      	ldr	r1, [sp, #88]	; 0x58
90009f18:	1309      	asrs	r1, r1, #12
90009f1a:	4341      	muls	r1, r0
90009f1c:	980a      	ldr	r0, [sp, #40]	; 0x28
90009f1e:	1409      	asrs	r1, r1, #16
90009f20:	4348      	muls	r0, r1
90009f22:	5c12      	ldrb	r2, [r2, r0]
90009f24:	920b      	str	r2, [sp, #44]	; 0x2c
90009f26:	f1b8 0f00 	cmp.w	r8, #0
90009f2a:	d169      	bne.n	9000a000 <EwScreenWarpAlpha8RowGradientBlend+0x16a>
90009f2c:	68a3      	ldr	r3, [r4, #8]
90009f2e:	9301      	str	r3, [sp, #4]
90009f30:	69a3      	ldr	r3, [r4, #24]
90009f32:	9302      	str	r3, [sp, #8]
90009f34:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009f36:	9303      	str	r3, [sp, #12]
90009f38:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90009f3a:	9304      	str	r3, [sp, #16]
90009f3c:	9b07      	ldr	r3, [sp, #28]
90009f3e:	2b00      	cmp	r3, #0
90009f40:	f000 809a 	beq.w	9000a078 <EwScreenWarpAlpha8RowGradientBlend+0x1e2>
90009f44:	2900      	cmp	r1, #0
90009f46:	f000 809c 	beq.w	9000a082 <EwScreenWarpAlpha8RowGradientBlend+0x1ec>
90009f4a:	6860      	ldr	r0, [r4, #4]
90009f4c:	6962      	ldr	r2, [r4, #20]
90009f4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009f50:	fb00 9001 	mla	r0, r0, r1, r9
90009f54:	6b65      	ldr	r5, [r4, #52]	; 0x34
90009f56:	fb02 c201 	mla	r2, r2, r1, ip
90009f5a:	fb03 b301 	mla	r3, r3, r1, fp
90009f5e:	fb05 a501 	mla	r5, r5, r1, sl
90009f62:	6d66      	ldr	r6, [r4, #84]	; 0x54
90009f64:	b1b6      	cbz	r6, 90009f94 <EwScreenWarpAlpha8RowGradientBlend+0xfe>
90009f66:	b1a9      	cbz	r1, 90009f94 <EwScreenWarpAlpha8RowGradientBlend+0xfe>
90009f68:	9f01      	ldr	r7, [sp, #4]
90009f6a:	68e6      	ldr	r6, [r4, #12]
90009f6c:	fb06 7601 	mla	r6, r6, r1, r7
90009f70:	9f02      	ldr	r7, [sp, #8]
90009f72:	9601      	str	r6, [sp, #4]
90009f74:	69e6      	ldr	r6, [r4, #28]
90009f76:	fb06 7601 	mla	r6, r6, r1, r7
90009f7a:	9602      	str	r6, [sp, #8]
90009f7c:	9e03      	ldr	r6, [sp, #12]
90009f7e:	4637      	mov	r7, r6
90009f80:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009f82:	fb06 7601 	mla	r6, r6, r1, r7
90009f86:	9603      	str	r6, [sp, #12]
90009f88:	9e04      	ldr	r6, [sp, #16]
90009f8a:	4637      	mov	r7, r6
90009f8c:	6be6      	ldr	r6, [r4, #60]	; 0x3c
90009f8e:	fb06 7101 	mla	r1, r6, r1, r7
90009f92:	9104      	str	r1, [sp, #16]
90009f94:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009f96:	b329      	cbz	r1, 90009fe4 <EwScreenWarpAlpha8RowGradientBlend+0x14e>
90009f98:	9908      	ldr	r1, [sp, #32]
90009f9a:	b319      	cbz	r1, 90009fe4 <EwScreenWarpAlpha8RowGradientBlend+0x14e>
90009f9c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
90009f9e:	9e08      	ldr	r6, [sp, #32]
90009fa0:	9f01      	ldr	r7, [sp, #4]
90009fa2:	434e      	muls	r6, r1
90009fa4:	4631      	mov	r1, r6
90009fa6:	1506      	asrs	r6, r0, #20
90009fa8:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
90009fac:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009fb0:	9f02      	ldr	r7, [sp, #8]
90009fb2:	fb01 0006 	mla	r0, r1, r6, r0
90009fb6:	1516      	asrs	r6, r2, #20
90009fb8:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90009fbc:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009fc0:	9f03      	ldr	r7, [sp, #12]
90009fc2:	fb01 2206 	mla	r2, r1, r6, r2
90009fc6:	151e      	asrs	r6, r3, #20
90009fc8:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90009fcc:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009fd0:	9f04      	ldr	r7, [sp, #16]
90009fd2:	fb01 3306 	mla	r3, r1, r6, r3
90009fd6:	152e      	asrs	r6, r5, #20
90009fd8:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
90009fdc:	ebc6 5627 	rsb	r6, r6, r7, asr #20
90009fe0:	fb01 5506 	mla	r5, r1, r6, r5
90009fe4:	0900      	lsrs	r0, r0, #4
90009fe6:	f3c3 5307 	ubfx	r3, r3, #20, #8
90009fea:	0b12      	lsrs	r2, r2, #12
90009fec:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
90009ff0:	012d      	lsls	r5, r5, #4
90009ff2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90009ff6:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
90009ffa:	4310      	orrs	r0, r2
90009ffc:	4303      	orrs	r3, r0
90009ffe:	432b      	orrs	r3, r5
9000a000:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000a002:	0892      	lsrs	r2, r2, #2
9000a004:	d02b      	beq.n	9000a05e <EwScreenWarpAlpha8RowGradientBlend+0x1c8>
9000a006:	0e9e      	lsrs	r6, r3, #26
9000a008:	d029      	beq.n	9000a05e <EwScreenWarpAlpha8RowGradientBlend+0x1c8>
9000a00a:	0a18      	lsrs	r0, r3, #8
9000a00c:	f3c3 01c4 	ubfx	r1, r3, #3, #5
9000a010:	095d      	lsrs	r5, r3, #5
9000a012:	2a3f      	cmp	r2, #63	; 0x3f
9000a014:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9000a018:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9000a01c:	ea40 0001 	orr.w	r0, r0, r1
9000a020:	d101      	bne.n	9000a026 <EwScreenWarpAlpha8RowGradientBlend+0x190>
9000a022:	2e3f      	cmp	r6, #63	; 0x3f
9000a024:	d018      	beq.n	9000a058 <EwScreenWarpAlpha8RowGradientBlend+0x1c2>
9000a026:	3201      	adds	r2, #1
9000a028:	f8be 1000 	ldrh.w	r1, [lr]
9000a02c:	fb06 2202 	mla	r2, r6, r2, r2
9000a030:	f421 66fc 	bic.w	r6, r1, #2016	; 0x7e0
9000a034:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000a038:	0992      	lsrs	r2, r2, #6
9000a03a:	f1c2 0740 	rsb	r7, r2, #64	; 0x40
9000a03e:	4379      	muls	r1, r7
9000a040:	437e      	muls	r6, r7
9000a042:	fb02 1505 	mla	r5, r2, r5, r1
9000a046:	fb02 6000 	mla	r0, r2, r0, r6
9000a04a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9000a04e:	09ad      	lsrs	r5, r5, #6
9000a050:	ea06 1090 	and.w	r0, r6, r0, lsr #6
9000a054:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9000a058:	4328      	orrs	r0, r5
9000a05a:	f8ae 0000 	strh.w	r0, [lr]
9000a05e:	9a06      	ldr	r2, [sp, #24]
9000a060:	f10e 0e02 	add.w	lr, lr, #2
9000a064:	9917      	ldr	r1, [sp, #92]	; 0x5c
9000a066:	440a      	add	r2, r1
9000a068:	9918      	ldr	r1, [sp, #96]	; 0x60
9000a06a:	9206      	str	r2, [sp, #24]
9000a06c:	9a16      	ldr	r2, [sp, #88]	; 0x58
9000a06e:	440a      	add	r2, r1
9000a070:	9216      	str	r2, [sp, #88]	; 0x58
9000a072:	9a05      	ldr	r2, [sp, #20]
9000a074:	3a01      	subs	r2, #1
9000a076:	e73a      	b.n	90009eee <EwScreenWarpAlpha8RowGradientBlend+0x58>
9000a078:	4655      	mov	r5, sl
9000a07a:	465b      	mov	r3, fp
9000a07c:	4662      	mov	r2, ip
9000a07e:	4648      	mov	r0, r9
9000a080:	e788      	b.n	90009f94 <EwScreenWarpAlpha8RowGradientBlend+0xfe>
9000a082:	4655      	mov	r5, sl
9000a084:	465b      	mov	r3, fp
9000a086:	4662      	mov	r2, ip
9000a088:	4648      	mov	r0, r9
9000a08a:	e76a      	b.n	90009f62 <EwScreenWarpAlpha8RowGradientBlend+0xcc>

9000a08c <EwScreenWarpAlpha8RowFilterGradientBlend>:
9000a08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a090:	b08d      	sub	sp, #52	; 0x34
9000a092:	9305      	str	r3, [sp, #20]
9000a094:	6803      	ldr	r3, [r0, #0]
9000a096:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
9000a098:	9302      	str	r3, [sp, #8]
9000a09a:	680b      	ldr	r3, [r1, #0]
9000a09c:	9307      	str	r3, [sp, #28]
9000a09e:	688b      	ldr	r3, [r1, #8]
9000a0a0:	9308      	str	r3, [sp, #32]
9000a0a2:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000a0a4:	9306      	str	r3, [sp, #24]
9000a0a6:	bb3b      	cbnz	r3, 9000a0f8 <EwScreenWarpAlpha8RowFilterGradientBlend+0x6c>
9000a0a8:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a0aa:	fab3 f383 	clz	r3, r3
9000a0ae:	095b      	lsrs	r3, r3, #5
9000a0b0:	9303      	str	r3, [sp, #12]
9000a0b2:	6823      	ldr	r3, [r4, #0]
9000a0b4:	f8d4 b020 	ldr.w	fp, [r4, #32]
9000a0b8:	9300      	str	r3, [sp, #0]
9000a0ba:	6923      	ldr	r3, [r4, #16]
9000a0bc:	f3cb 5507 	ubfx	r5, fp, #20, #8
9000a0c0:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
9000a0c4:	9301      	str	r3, [sp, #4]
9000a0c6:	9b00      	ldr	r3, [sp, #0]
9000a0c8:	9204      	str	r2, [sp, #16]
9000a0ca:	091b      	lsrs	r3, r3, #4
9000a0cc:	9a08      	ldr	r2, [sp, #32]
9000a0ce:	f403 017f 	and.w	r1, r3, #16711680	; 0xff0000
9000a0d2:	9b01      	ldr	r3, [sp, #4]
9000a0d4:	3201      	adds	r2, #1
9000a0d6:	0b1b      	lsrs	r3, r3, #12
9000a0d8:	9209      	str	r2, [sp, #36]	; 0x24
9000a0da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9000a0de:	430b      	orrs	r3, r1
9000a0e0:	432b      	orrs	r3, r5
9000a0e2:	ea4f 150a 	mov.w	r5, sl, lsl #4
9000a0e6:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
9000a0ea:	432b      	orrs	r3, r5
9000a0ec:	9a04      	ldr	r2, [sp, #16]
9000a0ee:	2a00      	cmp	r2, #0
9000a0f0:	dc04      	bgt.n	9000a0fc <EwScreenWarpAlpha8RowFilterGradientBlend+0x70>
9000a0f2:	b00d      	add	sp, #52	; 0x34
9000a0f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a0f8:	2300      	movs	r3, #0
9000a0fa:	e7d9      	b.n	9000a0b0 <EwScreenWarpAlpha8RowFilterGradientBlend+0x24>
9000a0fc:	9a05      	ldr	r2, [sp, #20]
9000a0fe:	ea4f 3922 	mov.w	r9, r2, asr #12
9000a102:	9a19      	ldr	r2, [sp, #100]	; 0x64
9000a104:	fb02 f909 	mul.w	r9, r2, r9
9000a108:	ea4f 3229 	mov.w	r2, r9, asr #12
9000a10c:	920a      	str	r2, [sp, #40]	; 0x28
9000a10e:	9a16      	ldr	r2, [sp, #88]	; 0x58
9000a110:	1311      	asrs	r1, r2, #12
9000a112:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9000a114:	4351      	muls	r1, r2
9000a116:	130a      	asrs	r2, r1, #12
9000a118:	920b      	str	r2, [sp, #44]	; 0x2c
9000a11a:	9a03      	ldr	r2, [sp, #12]
9000a11c:	2a00      	cmp	r2, #0
9000a11e:	d15c      	bne.n	9000a1da <EwScreenWarpAlpha8RowFilterGradientBlend+0x14e>
9000a120:	9b06      	ldr	r3, [sp, #24]
9000a122:	68a6      	ldr	r6, [r4, #8]
9000a124:	f8d4 c018 	ldr.w	ip, [r4, #24]
9000a128:	f8d4 e028 	ldr.w	lr, [r4, #40]	; 0x28
9000a12c:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
9000a130:	2b00      	cmp	r3, #0
9000a132:	f000 80c2 	beq.w	9000a2ba <EwScreenWarpAlpha8RowFilterGradientBlend+0x22e>
9000a136:	1409      	asrs	r1, r1, #16
9000a138:	f000 80c4 	beq.w	9000a2c4 <EwScreenWarpAlpha8RowFilterGradientBlend+0x238>
9000a13c:	9b00      	ldr	r3, [sp, #0]
9000a13e:	6860      	ldr	r0, [r4, #4]
9000a140:	6962      	ldr	r2, [r4, #20]
9000a142:	fb00 3001 	mla	r0, r0, r1, r3
9000a146:	9b01      	ldr	r3, [sp, #4]
9000a148:	6b65      	ldr	r5, [r4, #52]	; 0x34
9000a14a:	fb02 3201 	mla	r2, r2, r1, r3
9000a14e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a150:	fb05 a501 	mla	r5, r5, r1, sl
9000a154:	fb03 b301 	mla	r3, r3, r1, fp
9000a158:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a15a:	b167      	cbz	r7, 9000a176 <EwScreenWarpAlpha8RowFilterGradientBlend+0xea>
9000a15c:	b159      	cbz	r1, 9000a176 <EwScreenWarpAlpha8RowFilterGradientBlend+0xea>
9000a15e:	68e7      	ldr	r7, [r4, #12]
9000a160:	fb07 6601 	mla	r6, r7, r1, r6
9000a164:	69e7      	ldr	r7, [r4, #28]
9000a166:	fb07 cc01 	mla	ip, r7, r1, ip
9000a16a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9000a16c:	fb07 ee01 	mla	lr, r7, r1, lr
9000a170:	6be7      	ldr	r7, [r4, #60]	; 0x3c
9000a172:	fb07 8801 	mla	r8, r7, r1, r8
9000a176:	6d61      	ldr	r1, [r4, #84]	; 0x54
9000a178:	b309      	cbz	r1, 9000a1be <EwScreenWarpAlpha8RowFilterGradientBlend+0x132>
9000a17a:	ea5f 4929 	movs.w	r9, r9, asr #16
9000a17e:	d01e      	beq.n	9000a1be <EwScreenWarpAlpha8RowFilterGradientBlend+0x132>
9000a180:	1507      	asrs	r7, r0, #20
9000a182:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000a184:	f000 607f 	and.w	r0, r0, #267386880	; 0xff00000
9000a188:	fb01 f109 	mul.w	r1, r1, r9
9000a18c:	ebc7 5626 	rsb	r6, r7, r6, asr #20
9000a190:	fb01 0006 	mla	r0, r1, r6, r0
9000a194:	1516      	asrs	r6, r2, #20
9000a196:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
9000a19a:	ebc6 562c 	rsb	r6, r6, ip, asr #20
9000a19e:	fb01 2206 	mla	r2, r1, r6, r2
9000a1a2:	151e      	asrs	r6, r3, #20
9000a1a4:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
9000a1a8:	ebc6 562e 	rsb	r6, r6, lr, asr #20
9000a1ac:	fb01 3306 	mla	r3, r1, r6, r3
9000a1b0:	152e      	asrs	r6, r5, #20
9000a1b2:	f005 657f 	and.w	r5, r5, #267386880	; 0xff00000
9000a1b6:	ebc6 5628 	rsb	r6, r6, r8, asr #20
9000a1ba:	fb01 5506 	mla	r5, r1, r6, r5
9000a1be:	0900      	lsrs	r0, r0, #4
9000a1c0:	f3c3 5307 	ubfx	r3, r3, #20, #8
9000a1c4:	0b12      	lsrs	r2, r2, #12
9000a1c6:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
9000a1ca:	012d      	lsls	r5, r5, #4
9000a1cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9000a1d0:	f005 457f 	and.w	r5, r5, #4278190080	; 0xff000000
9000a1d4:	4310      	orrs	r0, r2
9000a1d6:	4303      	orrs	r3, r0
9000a1d8:	432b      	orrs	r3, r5
9000a1da:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000a1dc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000a1de:	f1a1 0008 	sub.w	r0, r1, #8
9000a1e2:	9e08      	ldr	r6, [sp, #32]
9000a1e4:	3a08      	subs	r2, #8
9000a1e6:	1105      	asrs	r5, r0, #4
9000a1e8:	f000 000f 	and.w	r0, r0, #15
9000a1ec:	1111      	asrs	r1, r2, #4
9000a1ee:	f002 020f 	and.w	r2, r2, #15
9000a1f2:	fb06 1105 	mla	r1, r6, r5, r1
9000a1f6:	9d07      	ldr	r5, [sp, #28]
9000a1f8:	f1c0 0610 	rsb	r6, r0, #16
9000a1fc:	186f      	adds	r7, r5, r1
9000a1fe:	f1c2 0510 	rsb	r5, r2, #16
9000a202:	4356      	muls	r6, r2
9000a204:	4345      	muls	r5, r0
9000a206:	4342      	muls	r2, r0
9000a208:	9809      	ldr	r0, [sp, #36]	; 0x24
9000a20a:	eb07 0c00 	add.w	ip, r7, r0
9000a20e:	f5c6 7080 	rsb	r0, r6, #256	; 0x100
9000a212:	1b40      	subs	r0, r0, r5
9000a214:	eba0 0802 	sub.w	r8, r0, r2
9000a218:	9807      	ldr	r0, [sp, #28]
9000a21a:	f810 e001 	ldrb.w	lr, [r0, r1]
9000a21e:	7879      	ldrb	r1, [r7, #1]
9000a220:	9809      	ldr	r0, [sp, #36]	; 0x24
9000a222:	4371      	muls	r1, r6
9000a224:	5c3e      	ldrb	r6, [r7, r0]
9000a226:	fb0e 1108 	mla	r1, lr, r8, r1
9000a22a:	fb02 1106 	mla	r1, r2, r6, r1
9000a22e:	f81c 2c01 	ldrb.w	r2, [ip, #-1]
9000a232:	fb05 1502 	mla	r5, r5, r2, r1
9000a236:	0aad      	lsrs	r5, r5, #10
9000a238:	d030      	beq.n	9000a29c <EwScreenWarpAlpha8RowFilterGradientBlend+0x210>
9000a23a:	0e9e      	lsrs	r6, r3, #26
9000a23c:	d02e      	beq.n	9000a29c <EwScreenWarpAlpha8RowFilterGradientBlend+0x210>
9000a23e:	ea4f 2c13 	mov.w	ip, r3, lsr #8
9000a242:	f3c3 02c4 	ubfx	r2, r3, #3, #5
9000a246:	ea4f 1853 	mov.w	r8, r3, lsr #5
9000a24a:	2d3e      	cmp	r5, #62	; 0x3e
9000a24c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9000a250:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9000a254:	ea4c 0c02 	orr.w	ip, ip, r2
9000a258:	d901      	bls.n	9000a25e <EwScreenWarpAlpha8RowFilterGradientBlend+0x1d2>
9000a25a:	42b5      	cmp	r5, r6
9000a25c:	d019      	beq.n	9000a292 <EwScreenWarpAlpha8RowFilterGradientBlend+0x206>
9000a25e:	3501      	adds	r5, #1
9000a260:	9a02      	ldr	r2, [sp, #8]
9000a262:	fb06 5505 	mla	r5, r6, r5, r5
9000a266:	8817      	ldrh	r7, [r2, #0]
9000a268:	09aa      	lsrs	r2, r5, #6
9000a26a:	f427 61fc 	bic.w	r1, r7, #2016	; 0x7e0
9000a26e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9000a272:	f1c2 0040 	rsb	r0, r2, #64	; 0x40
9000a276:	4347      	muls	r7, r0
9000a278:	4341      	muls	r1, r0
9000a27a:	fb02 7808 	mla	r8, r2, r8, r7
9000a27e:	fb02 1c0c 	mla	ip, r2, ip, r1
9000a282:	f64f 011f 	movw	r1, #63519	; 0xf81f
9000a286:	ea4f 1898 	mov.w	r8, r8, lsr #6
9000a28a:	ea01 1c9c 	and.w	ip, r1, ip, lsr #6
9000a28e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9000a292:	ea4c 0c08 	orr.w	ip, ip, r8
9000a296:	9a02      	ldr	r2, [sp, #8]
9000a298:	f8a2 c000 	strh.w	ip, [r2]
9000a29c:	9a05      	ldr	r2, [sp, #20]
9000a29e:	9917      	ldr	r1, [sp, #92]	; 0x5c
9000a2a0:	440a      	add	r2, r1
9000a2a2:	9918      	ldr	r1, [sp, #96]	; 0x60
9000a2a4:	9205      	str	r2, [sp, #20]
9000a2a6:	9a16      	ldr	r2, [sp, #88]	; 0x58
9000a2a8:	440a      	add	r2, r1
9000a2aa:	9216      	str	r2, [sp, #88]	; 0x58
9000a2ac:	9a02      	ldr	r2, [sp, #8]
9000a2ae:	3202      	adds	r2, #2
9000a2b0:	9202      	str	r2, [sp, #8]
9000a2b2:	9a04      	ldr	r2, [sp, #16]
9000a2b4:	3a01      	subs	r2, #1
9000a2b6:	9204      	str	r2, [sp, #16]
9000a2b8:	e718      	b.n	9000a0ec <EwScreenWarpAlpha8RowFilterGradientBlend+0x60>
9000a2ba:	4655      	mov	r5, sl
9000a2bc:	465b      	mov	r3, fp
9000a2be:	e9dd 0200 	ldrd	r0, r2, [sp]
9000a2c2:	e758      	b.n	9000a176 <EwScreenWarpAlpha8RowFilterGradientBlend+0xea>
9000a2c4:	4655      	mov	r5, sl
9000a2c6:	465b      	mov	r3, fp
9000a2c8:	e9dd 0200 	ldrd	r0, r2, [sp]
9000a2cc:	e744      	b.n	9000a158 <EwScreenWarpAlpha8RowFilterGradientBlend+0xcc>

9000a2ce <EwScreenWarpRGB565Row>:
9000a2ce:	e92d 42f0 	stmdb	sp!, {r4, r5, r6, r7, r9, lr}
9000a2d2:	6804      	ldr	r4, [r0, #0]
9000a2d4:	6888      	ldr	r0, [r1, #8]
9000a2d6:	9e06      	ldr	r6, [sp, #24]
9000a2d8:	680d      	ldr	r5, [r1, #0]
9000a2da:	1040      	asrs	r0, r0, #1
9000a2dc:	2a00      	cmp	r2, #0
9000a2de:	dc01      	bgt.n	9000a2e4 <EwScreenWarpRGB565Row+0x16>
9000a2e0:	e8bd 82f0 	ldmia.w	sp!, {r4, r5, r6, r7, r9, pc}
9000a2e4:	1331      	asrs	r1, r6, #12
9000a2e6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9000a2e8:	3a01      	subs	r2, #1
9000a2ea:	4379      	muls	r1, r7
9000a2ec:	9f09      	ldr	r7, [sp, #36]	; 0x24
9000a2ee:	ea4f 4921 	mov.w	r9, r1, asr #16
9000a2f2:	1319      	asrs	r1, r3, #12
9000a2f4:	4379      	muls	r1, r7
9000a2f6:	1409      	asrs	r1, r1, #16
9000a2f8:	fb00 1109 	mla	r1, r0, r9, r1
9000a2fc:	f835 1011 	ldrh.w	r1, [r5, r1, lsl #1]
9000a300:	f824 1b02 	strh.w	r1, [r4], #2
9000a304:	9907      	ldr	r1, [sp, #28]
9000a306:	440b      	add	r3, r1
9000a308:	9908      	ldr	r1, [sp, #32]
9000a30a:	440e      	add	r6, r1
9000a30c:	e7e6      	b.n	9000a2dc <EwScreenWarpRGB565Row+0xe>

9000a30e <EwScreenWarpRGB565RowFilter>:
9000a30e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a312:	461d      	mov	r5, r3
9000a314:	6803      	ldr	r3, [r0, #0]
9000a316:	680f      	ldr	r7, [r1, #0]
9000a318:	4614      	mov	r4, r2
9000a31a:	9300      	str	r3, [sp, #0]
9000a31c:	688b      	ldr	r3, [r1, #8]
9000a31e:	105b      	asrs	r3, r3, #1
9000a320:	9301      	str	r3, [sp, #4]
9000a322:	3301      	adds	r3, #1
9000a324:	005e      	lsls	r6, r3, #1
9000a326:	2c00      	cmp	r4, #0
9000a328:	dc02      	bgt.n	9000a330 <EwScreenWarpRGB565RowFilter+0x22>
9000a32a:	b003      	add	sp, #12
9000a32c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a330:	132b      	asrs	r3, r5, #12
9000a332:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9000a334:	3c01      	subs	r4, #1
9000a336:	4353      	muls	r3, r2
9000a338:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000a33a:	1310      	asrs	r0, r2, #12
9000a33c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000a33e:	131b      	asrs	r3, r3, #12
9000a340:	4350      	muls	r0, r2
9000a342:	9a01      	ldr	r2, [sp, #4]
9000a344:	3b08      	subs	r3, #8
9000a346:	1300      	asrs	r0, r0, #12
9000a348:	ea4f 1c23 	mov.w	ip, r3, asr #4
9000a34c:	f3c3 0342 	ubfx	r3, r3, #1, #3
9000a350:	3808      	subs	r0, #8
9000a352:	f1c3 0e08 	rsb	lr, r3, #8
9000a356:	1101      	asrs	r1, r0, #4
9000a358:	f3c0 0042 	ubfx	r0, r0, #1, #3
9000a35c:	fb02 c201 	mla	r2, r2, r1, ip
9000a360:	f1c0 0808 	rsb	r8, r0, #8
9000a364:	fb00 fe0e 	mul.w	lr, r0, lr
9000a368:	fb03 f808 	mul.w	r8, r3, r8
9000a36c:	eb07 0142 	add.w	r1, r7, r2, lsl #1
9000a370:	4343      	muls	r3, r0
9000a372:	f837 a012 	ldrh.w	sl, [r7, r2, lsl #1]
9000a376:	8848      	ldrh	r0, [r1, #2]
9000a378:	198a      	adds	r2, r1, r6
9000a37a:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
9000a37e:	5b89      	ldrh	r1, [r1, r6]
9000a380:	f832 9c02 	ldrh.w	r9, [r2, #-2]
9000a384:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
9000a388:	ebac 0c0e 	sub.w	ip, ip, lr
9000a38c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000a390:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
9000a394:	fb08 f202 	mul.w	r2, r8, r2
9000a398:	ebac 0c03 	sub.w	ip, ip, r3
9000a39c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9000a3a0:	fb08 f000 	mul.w	r0, r8, r0
9000a3a4:	fb0c 220b 	mla	r2, ip, fp, r2
9000a3a8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
9000a3ac:	fb0c 000a 	mla	r0, ip, sl, r0
9000a3b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000a3b4:	fb03 220b 	mla	r2, r3, fp, r2
9000a3b8:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
9000a3bc:	fb03 0001 	mla	r0, r3, r1, r0
9000a3c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9000a3c4:	fb0e 220b 	mla	r2, lr, fp, r2
9000a3c8:	9b00      	ldr	r3, [sp, #0]
9000a3ca:	fb0e 0009 	mla	r0, lr, r9, r0
9000a3ce:	0992      	lsrs	r2, r2, #6
9000a3d0:	0980      	lsrs	r0, r0, #6
9000a3d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9000a3d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9000a3da:	4310      	orrs	r0, r2
9000a3dc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9000a3de:	f823 0b02 	strh.w	r0, [r3], #2
9000a3e2:	9300      	str	r3, [sp, #0]
9000a3e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000a3e6:	441d      	add	r5, r3
9000a3e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000a3ea:	4413      	add	r3, r2
9000a3ec:	930c      	str	r3, [sp, #48]	; 0x30
9000a3ee:	e79a      	b.n	9000a326 <EwScreenWarpRGB565RowFilter+0x18>

9000a3f0 <EwScreenWarpRGB565RowGradient>:
9000a3f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a3f4:	9c11      	ldr	r4, [sp, #68]	; 0x44
9000a3f6:	f8d0 a000 	ldr.w	sl, [r0]
9000a3fa:	6b26      	ldr	r6, [r4, #48]	; 0x30
9000a3fc:	6808      	ldr	r0, [r1, #0]
9000a3fe:	6889      	ldr	r1, [r1, #8]
9000a400:	15b7      	asrs	r7, r6, #22
9000a402:	f8d4 c050 	ldr.w	ip, [r4, #80]	; 0x50
9000a406:	1049      	asrs	r1, r1, #1
9000a408:	3701      	adds	r7, #1
9000a40a:	9000      	str	r0, [sp, #0]
9000a40c:	9101      	str	r1, [sp, #4]
9000a40e:	f1bc 0f00 	cmp.w	ip, #0
9000a412:	d10b      	bne.n	9000a42c <EwScreenWarpRGB565RowGradient+0x3c>
9000a414:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000a416:	fab5 f585 	clz	r5, r5
9000a41a:	096d      	lsrs	r5, r5, #5
9000a41c:	4610      	mov	r0, r2
9000a41e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9000a422:	2800      	cmp	r0, #0
9000a424:	dc04      	bgt.n	9000a430 <EwScreenWarpRGB565RowGradient+0x40>
9000a426:	b003      	add	sp, #12
9000a428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a42c:	2500      	movs	r5, #0
9000a42e:	e7f5      	b.n	9000a41c <EwScreenWarpRGB565RowGradient+0x2c>
9000a430:	990f      	ldr	r1, [sp, #60]	; 0x3c
9000a432:	131a      	asrs	r2, r3, #12
9000a434:	434a      	muls	r2, r1
9000a436:	990c      	ldr	r1, [sp, #48]	; 0x30
9000a438:	ea4f 3921 	mov.w	r9, r1, asr #12
9000a43c:	9910      	ldr	r1, [sp, #64]	; 0x40
9000a43e:	ea4f 4e22 	mov.w	lr, r2, asr #16
9000a442:	fb01 f909 	mul.w	r9, r1, r9
9000a446:	9901      	ldr	r1, [sp, #4]
9000a448:	ea4f 4929 	mov.w	r9, r9, asr #16
9000a44c:	fb09 f101 	mul.w	r1, r9, r1
9000a450:	eb01 4222 	add.w	r2, r1, r2, asr #16
9000a454:	9900      	ldr	r1, [sp, #0]
9000a456:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
9000a45a:	bb25      	cbnz	r5, 9000a4a6 <EwScreenWarpRGB565RowGradient+0xb6>
9000a45c:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
9000a460:	f1bc 0f00 	cmp.w	ip, #0
9000a464:	d036      	beq.n	9000a4d4 <EwScreenWarpRGB565RowGradient+0xe4>
9000a466:	f1b9 0f00 	cmp.w	r9, #0
9000a46a:	d035      	beq.n	9000a4d8 <EwScreenWarpRGB565RowGradient+0xe8>
9000a46c:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000a46e:	fb02 6209 	mla	r2, r2, r9, r6
9000a472:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a474:	b12f      	cbz	r7, 9000a482 <EwScreenWarpRGB565RowGradient+0x92>
9000a476:	f1b9 0f00 	cmp.w	r9, #0
9000a47a:	d002      	beq.n	9000a482 <EwScreenWarpRGB565RowGradient+0x92>
9000a47c:	6be7      	ldr	r7, [r4, #60]	; 0x3c
9000a47e:	fb07 8809 	mla	r8, r7, r9, r8
9000a482:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a484:	b167      	cbz	r7, 9000a4a0 <EwScreenWarpRGB565RowGradient+0xb0>
9000a486:	f1be 0f00 	cmp.w	lr, #0
9000a48a:	d009      	beq.n	9000a4a0 <EwScreenWarpRGB565RowGradient+0xb0>
9000a48c:	1517      	asrs	r7, r2, #20
9000a48e:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
9000a492:	ebc7 5828 	rsb	r8, r7, r8, asr #20
9000a496:	6ca7      	ldr	r7, [r4, #72]	; 0x48
9000a498:	fb07 f808 	mul.w	r8, r7, r8
9000a49c:	fb0e 2208 	mla	r2, lr, r8, r2
9000a4a0:	f3c2 5285 	ubfx	r2, r2, #22, #6
9000a4a4:	1c57      	adds	r7, r2, #1
9000a4a6:	b159      	cbz	r1, 9000a4c0 <EwScreenWarpRGB565RowGradient+0xd0>
9000a4a8:	f421 62fc 	bic.w	r2, r1, #2016	; 0x7e0
9000a4ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000a4b0:	4379      	muls	r1, r7
9000a4b2:	437a      	muls	r2, r7
9000a4b4:	0989      	lsrs	r1, r1, #6
9000a4b6:	ea0b 1292 	and.w	r2, fp, r2, lsr #6
9000a4ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9000a4be:	4311      	orrs	r1, r2
9000a4c0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000a4c2:	3801      	subs	r0, #1
9000a4c4:	f82a 1b02 	strh.w	r1, [sl], #2
9000a4c8:	4413      	add	r3, r2
9000a4ca:	990e      	ldr	r1, [sp, #56]	; 0x38
9000a4cc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000a4ce:	440a      	add	r2, r1
9000a4d0:	920c      	str	r2, [sp, #48]	; 0x30
9000a4d2:	e7a6      	b.n	9000a422 <EwScreenWarpRGB565RowGradient+0x32>
9000a4d4:	4632      	mov	r2, r6
9000a4d6:	e7d4      	b.n	9000a482 <EwScreenWarpRGB565RowGradient+0x92>
9000a4d8:	4632      	mov	r2, r6
9000a4da:	e7ca      	b.n	9000a472 <EwScreenWarpRGB565RowGradient+0x82>

9000a4dc <EwScreenWarpRGB565RowFilterGradient>:
9000a4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a4e0:	b089      	sub	sp, #36	; 0x24
9000a4e2:	9302      	str	r3, [sp, #8]
9000a4e4:	6803      	ldr	r3, [r0, #0]
9000a4e6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9000a4e8:	9304      	str	r3, [sp, #16]
9000a4ea:	680b      	ldr	r3, [r1, #0]
9000a4ec:	9305      	str	r3, [sp, #20]
9000a4ee:	688b      	ldr	r3, [r1, #8]
9000a4f0:	105b      	asrs	r3, r3, #1
9000a4f2:	9306      	str	r3, [sp, #24]
9000a4f4:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000a4f6:	1599      	asrs	r1, r3, #22
9000a4f8:	9300      	str	r3, [sp, #0]
9000a4fa:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000a4fc:	3101      	adds	r1, #1
9000a4fe:	9303      	str	r3, [sp, #12]
9000a500:	b97b      	cbnz	r3, 9000a522 <EwScreenWarpRGB565RowFilterGradient+0x46>
9000a502:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a504:	fab7 f787 	clz	r7, r7
9000a508:	097f      	lsrs	r7, r7, #5
9000a50a:	9b06      	ldr	r3, [sp, #24]
9000a50c:	4e58      	ldr	r6, [pc, #352]	; (9000a670 <EwScreenWarpRGB565RowFilterGradient+0x194>)
9000a50e:	3301      	adds	r3, #1
9000a510:	9201      	str	r2, [sp, #4]
9000a512:	005b      	lsls	r3, r3, #1
9000a514:	9307      	str	r3, [sp, #28]
9000a516:	9b01      	ldr	r3, [sp, #4]
9000a518:	2b00      	cmp	r3, #0
9000a51a:	dc04      	bgt.n	9000a526 <EwScreenWarpRGB565RowFilterGradient+0x4a>
9000a51c:	b009      	add	sp, #36	; 0x24
9000a51e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a522:	2700      	movs	r7, #0
9000a524:	e7f1      	b.n	9000a50a <EwScreenWarpRGB565RowFilterGradient+0x2e>
9000a526:	9b02      	ldr	r3, [sp, #8]
9000a528:	9a12      	ldr	r2, [sp, #72]	; 0x48
9000a52a:	1318      	asrs	r0, r3, #12
9000a52c:	9b15      	ldr	r3, [sp, #84]	; 0x54
9000a52e:	ea4f 3e22 	mov.w	lr, r2, asr #12
9000a532:	9a16      	ldr	r2, [sp, #88]	; 0x58
9000a534:	4358      	muls	r0, r3
9000a536:	fb02 fe0e 	mul.w	lr, r2, lr
9000a53a:	ea4f 3820 	mov.w	r8, r0, asr #12
9000a53e:	ea4f 352e 	mov.w	r5, lr, asr #12
9000a542:	bb27      	cbnz	r7, 9000a58e <EwScreenWarpRGB565RowFilterGradient+0xb2>
9000a544:	9a03      	ldr	r2, [sp, #12]
9000a546:	f8d4 c038 	ldr.w	ip, [r4, #56]	; 0x38
9000a54a:	2a00      	cmp	r2, #0
9000a54c:	f000 808b 	beq.w	9000a666 <EwScreenWarpRGB565RowFilterGradient+0x18a>
9000a550:	ea5f 422e 	movs.w	r2, lr, asr #16
9000a554:	f000 8089 	beq.w	9000a66a <EwScreenWarpRGB565RowFilterGradient+0x18e>
9000a558:	6b61      	ldr	r1, [r4, #52]	; 0x34
9000a55a:	9b00      	ldr	r3, [sp, #0]
9000a55c:	fb01 3102 	mla	r1, r1, r2, r3
9000a560:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a562:	b11b      	cbz	r3, 9000a56c <EwScreenWarpRGB565RowFilterGradient+0x90>
9000a564:	b112      	cbz	r2, 9000a56c <EwScreenWarpRGB565RowFilterGradient+0x90>
9000a566:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000a568:	fb03 cc02 	mla	ip, r3, r2, ip
9000a56c:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a56e:	b15a      	cbz	r2, 9000a588 <EwScreenWarpRGB565RowFilterGradient+0xac>
9000a570:	1400      	asrs	r0, r0, #16
9000a572:	d009      	beq.n	9000a588 <EwScreenWarpRGB565RowFilterGradient+0xac>
9000a574:	150a      	asrs	r2, r1, #20
9000a576:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9000a57a:	ebc2 5c2c 	rsb	ip, r2, ip, asr #20
9000a57e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
9000a580:	fb02 fc0c 	mul.w	ip, r2, ip
9000a584:	fb00 110c 	mla	r1, r0, ip, r1
9000a588:	f3c1 5185 	ubfx	r1, r1, #22, #6
9000a58c:	3101      	adds	r1, #1
9000a58e:	f1a8 0008 	sub.w	r0, r8, #8
9000a592:	3d08      	subs	r5, #8
9000a594:	9b06      	ldr	r3, [sp, #24]
9000a596:	ea4f 1c25 	mov.w	ip, r5, asr #4
9000a59a:	f3c5 0542 	ubfx	r5, r5, #1, #3
9000a59e:	1102      	asrs	r2, r0, #4
9000a5a0:	f3c0 0042 	ubfx	r0, r0, #1, #3
9000a5a4:	f1c5 0808 	rsb	r8, r5, #8
9000a5a8:	fb03 220c 	mla	r2, r3, ip, r2
9000a5ac:	9b05      	ldr	r3, [sp, #20]
9000a5ae:	fb00 f808 	mul.w	r8, r0, r8
9000a5b2:	f1c0 0e08 	rsb	lr, r0, #8
9000a5b6:	eb03 0c42 	add.w	ip, r3, r2, lsl #1
9000a5ba:	f833 a012 	ldrh.w	sl, [r3, r2, lsl #1]
9000a5be:	9b07      	ldr	r3, [sp, #28]
9000a5c0:	fb05 fe0e 	mul.w	lr, r5, lr
9000a5c4:	4368      	muls	r0, r5
9000a5c6:	f8bc 5002 	ldrh.w	r5, [ip, #2]
9000a5ca:	eb0c 0203 	add.w	r2, ip, r3
9000a5ce:	f83c 3003 	ldrh.w	r3, [ip, r3]
9000a5d2:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
9000a5d6:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
9000a5da:	f832 9c02 	ldrh.w	r9, [r2, #-2]
9000a5de:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
9000a5e2:	ebac 0c0e 	sub.w	ip, ip, lr
9000a5e6:	4035      	ands	r5, r6
9000a5e8:	fb08 f202 	mul.w	r2, r8, r2
9000a5ec:	ea0a 0a06 	and.w	sl, sl, r6
9000a5f0:	ebac 0c00 	sub.w	ip, ip, r0
9000a5f4:	fb08 f505 	mul.w	r5, r8, r5
9000a5f8:	fb0c 220b 	mla	r2, ip, fp, r2
9000a5fc:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9000a600:	fb0c 550a 	mla	r5, ip, sl, r5
9000a604:	4033      	ands	r3, r6
9000a606:	fb00 220b 	mla	r2, r0, fp, r2
9000a60a:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
9000a60e:	fb00 5503 	mla	r5, r0, r3, r5
9000a612:	ea09 0906 	and.w	r9, r9, r6
9000a616:	fb0e 220b 	mla	r2, lr, fp, r2
9000a61a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9000a61e:	fb0e 5509 	mla	r5, lr, r9, r5
9000a622:	ea0b 1292 	and.w	r2, fp, r2, lsr #6
9000a626:	ea06 1595 	and.w	r5, r6, r5, lsr #6
9000a62a:	432a      	orrs	r2, r5
9000a62c:	d00b      	beq.n	9000a646 <EwScreenWarpRGB565RowFilterGradient+0x16a>
9000a62e:	ea02 0c0b 	and.w	ip, r2, fp
9000a632:	4032      	ands	r2, r6
9000a634:	fb0c fc01 	mul.w	ip, ip, r1
9000a638:	434a      	muls	r2, r1
9000a63a:	ea0b 1c9c 	and.w	ip, fp, ip, lsr #6
9000a63e:	ea06 1292 	and.w	r2, r6, r2, lsr #6
9000a642:	ea4c 0202 	orr.w	r2, ip, r2
9000a646:	9b04      	ldr	r3, [sp, #16]
9000a648:	f823 2b02 	strh.w	r2, [r3], #2
9000a64c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9000a64e:	9304      	str	r3, [sp, #16]
9000a650:	9b02      	ldr	r3, [sp, #8]
9000a652:	4413      	add	r3, r2
9000a654:	9a14      	ldr	r2, [sp, #80]	; 0x50
9000a656:	9302      	str	r3, [sp, #8]
9000a658:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000a65a:	4413      	add	r3, r2
9000a65c:	9312      	str	r3, [sp, #72]	; 0x48
9000a65e:	9b01      	ldr	r3, [sp, #4]
9000a660:	3b01      	subs	r3, #1
9000a662:	9301      	str	r3, [sp, #4]
9000a664:	e757      	b.n	9000a516 <EwScreenWarpRGB565RowFilterGradient+0x3a>
9000a666:	9900      	ldr	r1, [sp, #0]
9000a668:	e780      	b.n	9000a56c <EwScreenWarpRGB565RowFilterGradient+0x90>
9000a66a:	9900      	ldr	r1, [sp, #0]
9000a66c:	e778      	b.n	9000a560 <EwScreenWarpRGB565RowFilterGradient+0x84>
9000a66e:	bf00      	nop
9000a670:	00fc07e0 	.word	0x00fc07e0

9000a674 <EwScreenWarpRGB565RowGradientBlend>:
9000a674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a678:	b085      	sub	sp, #20
9000a67a:	460d      	mov	r5, r1
9000a67c:	6809      	ldr	r1, [r1, #0]
9000a67e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9000a680:	9102      	str	r1, [sp, #8]
9000a682:	68a9      	ldr	r1, [r5, #8]
9000a684:	6b25      	ldr	r5, [r4, #48]	; 0x30
9000a686:	1049      	asrs	r1, r1, #1
9000a688:	f8d4 a050 	ldr.w	sl, [r4, #80]	; 0x50
9000a68c:	ea4f 58a5 	mov.w	r8, r5, asr #22
9000a690:	f8d0 c000 	ldr.w	ip, [r0]
9000a694:	9301      	str	r3, [sp, #4]
9000a696:	f108 0801 	add.w	r8, r8, #1
9000a69a:	9103      	str	r1, [sp, #12]
9000a69c:	f1ba 0f00 	cmp.w	sl, #0
9000a6a0:	d10b      	bne.n	9000a6ba <EwScreenWarpRGB565RowGradientBlend+0x46>
9000a6a2:	6d60      	ldr	r0, [r4, #84]	; 0x54
9000a6a4:	fab0 f080 	clz	r0, r0
9000a6a8:	0940      	lsrs	r0, r0, #5
9000a6aa:	4611      	mov	r1, r2
9000a6ac:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9000a6b0:	2900      	cmp	r1, #0
9000a6b2:	dc04      	bgt.n	9000a6be <EwScreenWarpRGB565RowGradientBlend+0x4a>
9000a6b4:	b005      	add	sp, #20
9000a6b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a6ba:	2000      	movs	r0, #0
9000a6bc:	e7f5      	b.n	9000a6aa <EwScreenWarpRGB565RowGradientBlend+0x36>
9000a6be:	9b01      	ldr	r3, [sp, #4]
9000a6c0:	9e11      	ldr	r6, [sp, #68]	; 0x44
9000a6c2:	131a      	asrs	r2, r3, #12
9000a6c4:	4372      	muls	r2, r6
9000a6c6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
9000a6c8:	ea4f 3926 	mov.w	r9, r6, asr #12
9000a6cc:	9e12      	ldr	r6, [sp, #72]	; 0x48
9000a6ce:	ea4f 4e22 	mov.w	lr, r2, asr #16
9000a6d2:	fb06 f909 	mul.w	r9, r6, r9
9000a6d6:	9e03      	ldr	r6, [sp, #12]
9000a6d8:	ea4f 4729 	mov.w	r7, r9, asr #16
9000a6dc:	437e      	muls	r6, r7
9000a6de:	eb06 4222 	add.w	r2, r6, r2, asr #16
9000a6e2:	9e02      	ldr	r6, [sp, #8]
9000a6e4:	f836 6012 	ldrh.w	r6, [r6, r2, lsl #1]
9000a6e8:	bb10      	cbnz	r0, 9000a730 <EwScreenWarpRGB565RowGradientBlend+0xbc>
9000a6ea:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
9000a6ee:	f1ba 0f00 	cmp.w	sl, #0
9000a6f2:	d043      	beq.n	9000a77c <EwScreenWarpRGB565RowGradientBlend+0x108>
9000a6f4:	2f00      	cmp	r7, #0
9000a6f6:	d043      	beq.n	9000a780 <EwScreenWarpRGB565RowGradientBlend+0x10c>
9000a6f8:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000a6fa:	fb02 5207 	mla	r2, r2, r7, r5
9000a6fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a700:	b11b      	cbz	r3, 9000a70a <EwScreenWarpRGB565RowGradientBlend+0x96>
9000a702:	b117      	cbz	r7, 9000a70a <EwScreenWarpRGB565RowGradientBlend+0x96>
9000a704:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000a706:	fb03 8807 	mla	r8, r3, r7, r8
9000a70a:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a70c:	b167      	cbz	r7, 9000a728 <EwScreenWarpRGB565RowGradientBlend+0xb4>
9000a70e:	f1be 0f00 	cmp.w	lr, #0
9000a712:	d009      	beq.n	9000a728 <EwScreenWarpRGB565RowGradientBlend+0xb4>
9000a714:	1517      	asrs	r7, r2, #20
9000a716:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
9000a71a:	ebc7 5828 	rsb	r8, r7, r8, asr #20
9000a71e:	6ca7      	ldr	r7, [r4, #72]	; 0x48
9000a720:	fb07 f808 	mul.w	r8, r7, r8
9000a724:	fb0e 2208 	mla	r2, lr, r8, r2
9000a728:	f3c2 5285 	ubfx	r2, r2, #22, #6
9000a72c:	f102 0801 	add.w	r8, r2, #1
9000a730:	f8bc 7000 	ldrh.w	r7, [ip]
9000a734:	f1c8 0240 	rsb	r2, r8, #64	; 0x40
9000a738:	f426 69fc 	bic.w	r9, r6, #2016	; 0x7e0
9000a73c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9000a740:	f427 6efc 	bic.w	lr, r7, #2016	; 0x7e0
9000a744:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9000a748:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000a74a:	3901      	subs	r1, #1
9000a74c:	4357      	muls	r7, r2
9000a74e:	fb02 fe0e 	mul.w	lr, r2, lr
9000a752:	9a01      	ldr	r2, [sp, #4]
9000a754:	fb08 7706 	mla	r7, r8, r6, r7
9000a758:	441a      	add	r2, r3
9000a75a:	fb08 ee09 	mla	lr, r8, r9, lr
9000a75e:	09bf      	lsrs	r7, r7, #6
9000a760:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000a762:	ea0b 1e9e 	and.w	lr, fp, lr, lsr #6
9000a766:	9201      	str	r2, [sp, #4]
9000a768:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9000a76c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000a76e:	ea4e 0e07 	orr.w	lr, lr, r7
9000a772:	4413      	add	r3, r2
9000a774:	f82c eb02 	strh.w	lr, [ip], #2
9000a778:	930e      	str	r3, [sp, #56]	; 0x38
9000a77a:	e799      	b.n	9000a6b0 <EwScreenWarpRGB565RowGradientBlend+0x3c>
9000a77c:	462a      	mov	r2, r5
9000a77e:	e7c4      	b.n	9000a70a <EwScreenWarpRGB565RowGradientBlend+0x96>
9000a780:	462a      	mov	r2, r5
9000a782:	e7bc      	b.n	9000a6fe <EwScreenWarpRGB565RowGradientBlend+0x8a>

9000a784 <EwScreenWarpRGB565RowFilterGradientBlend>:
9000a784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000a788:	b089      	sub	sp, #36	; 0x24
9000a78a:	9303      	str	r3, [sp, #12]
9000a78c:	6803      	ldr	r3, [r0, #0]
9000a78e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9000a790:	9301      	str	r3, [sp, #4]
9000a792:	680b      	ldr	r3, [r1, #0]
9000a794:	9305      	str	r3, [sp, #20]
9000a796:	688b      	ldr	r3, [r1, #8]
9000a798:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000a79a:	105b      	asrs	r3, r3, #1
9000a79c:	9104      	str	r1, [sp, #16]
9000a79e:	9306      	str	r3, [sp, #24]
9000a7a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000a7a2:	9300      	str	r3, [sp, #0]
9000a7a4:	159b      	asrs	r3, r3, #22
9000a7a6:	3301      	adds	r3, #1
9000a7a8:	b979      	cbnz	r1, 9000a7ca <EwScreenWarpRGB565RowFilterGradientBlend+0x46>
9000a7aa:	6d67      	ldr	r7, [r4, #84]	; 0x54
9000a7ac:	fab7 f787 	clz	r7, r7
9000a7b0:	097f      	lsrs	r7, r7, #5
9000a7b2:	9906      	ldr	r1, [sp, #24]
9000a7b4:	4d5e      	ldr	r5, [pc, #376]	; (9000a930 <EwScreenWarpRGB565RowFilterGradientBlend+0x1ac>)
9000a7b6:	3101      	adds	r1, #1
9000a7b8:	9202      	str	r2, [sp, #8]
9000a7ba:	0049      	lsls	r1, r1, #1
9000a7bc:	9107      	str	r1, [sp, #28]
9000a7be:	9a02      	ldr	r2, [sp, #8]
9000a7c0:	2a00      	cmp	r2, #0
9000a7c2:	dc04      	bgt.n	9000a7ce <EwScreenWarpRGB565RowFilterGradientBlend+0x4a>
9000a7c4:	b009      	add	sp, #36	; 0x24
9000a7c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000a7ca:	2700      	movs	r7, #0
9000a7cc:	e7f1      	b.n	9000a7b2 <EwScreenWarpRGB565RowFilterGradientBlend+0x2e>
9000a7ce:	9a03      	ldr	r2, [sp, #12]
9000a7d0:	9812      	ldr	r0, [sp, #72]	; 0x48
9000a7d2:	1311      	asrs	r1, r2, #12
9000a7d4:	9a15      	ldr	r2, [sp, #84]	; 0x54
9000a7d6:	ea4f 3e20 	mov.w	lr, r0, asr #12
9000a7da:	9816      	ldr	r0, [sp, #88]	; 0x58
9000a7dc:	4351      	muls	r1, r2
9000a7de:	fb00 fe0e 	mul.w	lr, r0, lr
9000a7e2:	ea4f 3821 	mov.w	r8, r1, asr #12
9000a7e6:	ea4f 362e 	mov.w	r6, lr, asr #12
9000a7ea:	bb27      	cbnz	r7, 9000a836 <EwScreenWarpRGB565RowFilterGradientBlend+0xb2>
9000a7ec:	9b04      	ldr	r3, [sp, #16]
9000a7ee:	f8d4 c038 	ldr.w	ip, [r4, #56]	; 0x38
9000a7f2:	2b00      	cmp	r3, #0
9000a7f4:	f000 8097 	beq.w	9000a926 <EwScreenWarpRGB565RowFilterGradientBlend+0x1a2>
9000a7f8:	ea5f 402e 	movs.w	r0, lr, asr #16
9000a7fc:	f000 8095 	beq.w	9000a92a <EwScreenWarpRGB565RowFilterGradientBlend+0x1a6>
9000a800:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000a802:	9a00      	ldr	r2, [sp, #0]
9000a804:	fb03 2300 	mla	r3, r3, r0, r2
9000a808:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a80a:	b11a      	cbz	r2, 9000a814 <EwScreenWarpRGB565RowFilterGradientBlend+0x90>
9000a80c:	b110      	cbz	r0, 9000a814 <EwScreenWarpRGB565RowFilterGradientBlend+0x90>
9000a80e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000a810:	fb02 cc00 	mla	ip, r2, r0, ip
9000a814:	6d60      	ldr	r0, [r4, #84]	; 0x54
9000a816:	b158      	cbz	r0, 9000a830 <EwScreenWarpRGB565RowFilterGradientBlend+0xac>
9000a818:	1409      	asrs	r1, r1, #16
9000a81a:	d009      	beq.n	9000a830 <EwScreenWarpRGB565RowFilterGradientBlend+0xac>
9000a81c:	1518      	asrs	r0, r3, #20
9000a81e:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
9000a822:	ebc0 5c2c 	rsb	ip, r0, ip, asr #20
9000a826:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000a828:	fb00 fc0c 	mul.w	ip, r0, ip
9000a82c:	fb01 330c 	mla	r3, r1, ip, r3
9000a830:	f3c3 5385 	ubfx	r3, r3, #22, #6
9000a834:	3301      	adds	r3, #1
9000a836:	f1a8 0108 	sub.w	r1, r8, #8
9000a83a:	3e08      	subs	r6, #8
9000a83c:	9a06      	ldr	r2, [sp, #24]
9000a83e:	ea4f 1c26 	mov.w	ip, r6, asr #4
9000a842:	f3c6 0642 	ubfx	r6, r6, #1, #3
9000a846:	1108      	asrs	r0, r1, #4
9000a848:	f3c1 0142 	ubfx	r1, r1, #1, #3
9000a84c:	f1c6 0808 	rsb	r8, r6, #8
9000a850:	fb02 000c 	mla	r0, r2, ip, r0
9000a854:	9a05      	ldr	r2, [sp, #20]
9000a856:	fb01 f808 	mul.w	r8, r1, r8
9000a85a:	f1c1 0e08 	rsb	lr, r1, #8
9000a85e:	eb02 0c40 	add.w	ip, r2, r0, lsl #1
9000a862:	f832 a010 	ldrh.w	sl, [r2, r0, lsl #1]
9000a866:	9a07      	ldr	r2, [sp, #28]
9000a868:	4371      	muls	r1, r6
9000a86a:	fb06 fe0e 	mul.w	lr, r6, lr
9000a86e:	f8bc 6002 	ldrh.w	r6, [ip, #2]
9000a872:	eb0c 0002 	add.w	r0, ip, r2
9000a876:	f83c 2002 	ldrh.w	r2, [ip, r2]
9000a87a:	f1c8 0c40 	rsb	ip, r8, #64	; 0x40
9000a87e:	f42a 6bfc 	bic.w	fp, sl, #2016	; 0x7e0
9000a882:	f830 9c02 	ldrh.w	r9, [r0, #-2]
9000a886:	f426 60fc 	bic.w	r0, r6, #2016	; 0x7e0
9000a88a:	ebac 0c0e 	sub.w	ip, ip, lr
9000a88e:	402e      	ands	r6, r5
9000a890:	fb08 f000 	mul.w	r0, r8, r0
9000a894:	ea0a 0a05 	and.w	sl, sl, r5
9000a898:	ebac 0c01 	sub.w	ip, ip, r1
9000a89c:	fb08 f606 	mul.w	r6, r8, r6
9000a8a0:	f1c3 0840 	rsb	r8, r3, #64	; 0x40
9000a8a4:	fb0c 000b 	mla	r0, ip, fp, r0
9000a8a8:	f422 6bfc 	bic.w	fp, r2, #2016	; 0x7e0
9000a8ac:	fb0c 660a 	mla	r6, ip, sl, r6
9000a8b0:	402a      	ands	r2, r5
9000a8b2:	fb01 000b 	mla	r0, r1, fp, r0
9000a8b6:	f429 6bfc 	bic.w	fp, r9, #2016	; 0x7e0
9000a8ba:	fb01 6602 	mla	r6, r1, r2, r6
9000a8be:	ea09 0905 	and.w	r9, r9, r5
9000a8c2:	9a01      	ldr	r2, [sp, #4]
9000a8c4:	fb0e 000b 	mla	r0, lr, fp, r0
9000a8c8:	fb0e 6609 	mla	r6, lr, r9, r6
9000a8cc:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9000a8d0:	f8b2 c000 	ldrh.w	ip, [r2]
9000a8d4:	ea0b 1090 	and.w	r0, fp, r0, lsr #6
9000a8d8:	ea05 1696 	and.w	r6, r5, r6, lsr #6
9000a8dc:	f42c 62fc 	bic.w	r2, ip, #2016	; 0x7e0
9000a8e0:	ea0c 0c05 	and.w	ip, ip, r5
9000a8e4:	4330      	orrs	r0, r6
9000a8e6:	fb08 f202 	mul.w	r2, r8, r2
9000a8ea:	fb08 fc0c 	mul.w	ip, r8, ip
9000a8ee:	ea00 010b 	and.w	r1, r0, fp
9000a8f2:	4028      	ands	r0, r5
9000a8f4:	fb03 2201 	mla	r2, r3, r1, r2
9000a8f8:	9913      	ldr	r1, [sp, #76]	; 0x4c
9000a8fa:	fb03 c000 	mla	r0, r3, r0, ip
9000a8fe:	ea0b 1292 	and.w	r2, fp, r2, lsr #6
9000a902:	ea05 1090 	and.w	r0, r5, r0, lsr #6
9000a906:	4310      	orrs	r0, r2
9000a908:	9a01      	ldr	r2, [sp, #4]
9000a90a:	f822 0b02 	strh.w	r0, [r2], #2
9000a90e:	9201      	str	r2, [sp, #4]
9000a910:	9a03      	ldr	r2, [sp, #12]
9000a912:	440a      	add	r2, r1
9000a914:	9914      	ldr	r1, [sp, #80]	; 0x50
9000a916:	9203      	str	r2, [sp, #12]
9000a918:	9a12      	ldr	r2, [sp, #72]	; 0x48
9000a91a:	440a      	add	r2, r1
9000a91c:	9212      	str	r2, [sp, #72]	; 0x48
9000a91e:	9a02      	ldr	r2, [sp, #8]
9000a920:	3a01      	subs	r2, #1
9000a922:	9202      	str	r2, [sp, #8]
9000a924:	e74b      	b.n	9000a7be <EwScreenWarpRGB565RowFilterGradientBlend+0x3a>
9000a926:	9b00      	ldr	r3, [sp, #0]
9000a928:	e774      	b.n	9000a814 <EwScreenWarpRGB565RowFilterGradientBlend+0x90>
9000a92a:	9b00      	ldr	r3, [sp, #0]
9000a92c:	e76c      	b.n	9000a808 <EwScreenWarpRGB565RowFilterGradientBlend+0x84>
9000a92e:	bf00      	nop
9000a930:	00fc07e0 	.word	0x00fc07e0

9000a934 <EwWarpNativeRowSolid>:
9000a934:	f7fb ba5e 	b.w	90005df4 <EwWarpNativeRowGradient>

9000a938 <EwWarpNativeRowSolidBlend>:
9000a938:	f7fb bb7d 	b.w	90006036 <EwWarpNativeRowGradientBlend>

9000a93c <EwWarpNativeRowFilterSolid>:
9000a93c:	f7fb babc 	b.w	90005eb8 <EwWarpNativeRowFilterGradient>

9000a940 <EwWarpNativeRowFilterSolidBlend>:
9000a940:	f7fb bc16 	b.w	90006170 <EwWarpNativeRowFilterGradientBlend>

9000a944 <EwWarpIndex8RowSolid>:
9000a944:	f7fb bed2 	b.w	900066ec <EwWarpIndex8RowGradient>

9000a948 <EwWarpIndex8RowSolidBlend>:
9000a948:	f7fb bff9 	b.w	9000693e <EwWarpIndex8RowGradientBlend>

9000a94c <EwWarpIndex8RowFilterSolid>:
9000a94c:	f7fb bf36 	b.w	900067bc <EwWarpIndex8RowFilterGradient>

9000a950 <EwWarpIndex8RowFilterSolidBlend>:
9000a950:	f7fc b898 	b.w	90006a84 <EwWarpIndex8RowFilterGradientBlend>

9000a954 <EwWarpAlpha8RowSolid>:
9000a954:	f7fc b98c 	b.w	90006c70 <EwWarpAlpha8RowGradient>

9000a958 <EwWarpAlpha8RowSolidBlend>:
9000a958:	f7fc bb47 	b.w	90006fea <EwWarpAlpha8RowGradientBlend>

9000a95c <EwWarpAlpha8RowFilterSolid>:
9000a95c:	f7fc ba52 	b.w	90006e04 <EwWarpAlpha8RowFilterGradient>

9000a960 <EwWarpAlpha8RowFilterSolidBlend>:
9000a960:	f7fc bc42 	b.w	900071e8 <EwWarpAlpha8RowFilterGradientBlend>

9000a964 <EwWarpRGB565RowSolid>:
9000a964:	f7fc be27 	b.w	900075b6 <EwWarpRGB565RowGradient>

9000a968 <EwWarpRGB565RowSolidBlend>:
9000a968:	f7fc bf6e 	b.w	90007848 <EwWarpRGB565RowGradientBlend>

9000a96c <EwWarpRGB565RowFilterSolid>:
9000a96c:	f7fc be9d 	b.w	900076aa <EwWarpRGB565RowFilterGradient>

9000a970 <EwWarpRGB565RowFilterSolidBlend>:
9000a970:	f7fd b822 	b.w	900079b8 <EwWarpRGB565RowFilterGradientBlend>

9000a974 <EwScreenWarpNativeRowSolid>:
9000a974:	f7fe b8f9 	b.w	90008b6a <EwScreenWarpNativeRowGradient>

9000a978 <EwScreenWarpNativeRowSolidBlend>:
9000a978:	f7fe ba54 	b.w	90008e24 <EwScreenWarpNativeRowGradientBlend>

9000a97c <EwScreenWarpNativeRowFilterSolid>:
9000a97c:	f7fe b978 	b.w	90008c70 <EwScreenWarpNativeRowFilterGradient>

9000a980 <EwScreenWarpNativeRowFilterSolidBlend>:
9000a980:	f7fe bae6 	b.w	90008f50 <EwScreenWarpNativeRowFilterGradientBlend>

9000a984 <EwScreenWarpIndex8RowSolid>:
9000a984:	f7fe bd93 	b.w	900094ae <EwScreenWarpIndex8RowGradient>

9000a988 <EwScreenWarpIndex8RowSolidBlend>:
9000a988:	f7fe bef8 	b.w	9000977c <EwScreenWarpIndex8RowGradientBlend>

9000a98c <EwScreenWarpIndex8RowFilterSolid>:
9000a98c:	f7fe be16 	b.w	900095bc <EwScreenWarpIndex8RowFilterGradient>

9000a990 <EwScreenWarpIndex8RowFilterSolidBlend>:
9000a990:	f7fe bf8d 	b.w	900098ae <EwScreenWarpIndex8RowFilterGradientBlend>

9000a994 <EwScreenWarpAlpha8RowSolid>:
9000a994:	f7ff b875 	b.w	90009a82 <EwScreenWarpAlpha8RowGradient>

9000a998 <EwScreenWarpAlpha8RowSolidBlend>:
9000a998:	f7ff ba7d 	b.w	90009e96 <EwScreenWarpAlpha8RowGradientBlend>

9000a99c <EwScreenWarpAlpha8RowFilterSolid>:
9000a99c:	f7ff b964 	b.w	90009c68 <EwScreenWarpAlpha8RowFilterGradient>

9000a9a0 <EwScreenWarpAlpha8RowFilterSolidBlend>:
9000a9a0:	f7ff bb74 	b.w	9000a08c <EwScreenWarpAlpha8RowFilterGradientBlend>

9000a9a4 <EwScreenWarpRGB565RowSolid>:
9000a9a4:	f7ff bd24 	b.w	9000a3f0 <EwScreenWarpRGB565RowGradient>

9000a9a8 <EwScreenWarpRGB565RowSolidBlend>:
9000a9a8:	f7ff be64 	b.w	9000a674 <EwScreenWarpRGB565RowGradientBlend>

9000a9ac <EwScreenWarpRGB565RowFilterSolid>:
9000a9ac:	f7ff bd96 	b.w	9000a4dc <EwScreenWarpRGB565RowFilterGradient>

9000a9b0 <EwScreenWarpRGB565RowFilterSolidBlend>:
9000a9b0:	f7ff bee8 	b.w	9000a784 <EwScreenWarpRGB565RowFilterGradientBlend>
9000a9b4:	2390      	movs	r3, #144	; 0x90
9000a9b6:	4359      	muls	r1, r3
9000a9b8:	b530      	push	{r4, r5, lr}
9000a9ba:	1a09      	subs	r1, r1, r0
9000a9bc:	18c4      	adds	r4, r0, r3
9000a9be:	4d0b      	ldr	r5, [pc, #44]	; (9000a9ec <EwScreenWarpRGB565RowFilterSolidBlend+0x3c>)
9000a9c0:	1843      	adds	r3, r0, r1
9000a9c2:	2b00      	cmp	r3, #0
9000a9c4:	ea4f 0263 	mov.w	r2, r3, asr #1
9000a9c8:	f003 0301 	and.w	r3, r3, #1
9000a9cc:	5caa      	ldrb	r2, [r5, r2]
9000a9ce:	bfb8      	it	lt
9000a9d0:	425b      	neglt	r3, r3
9000a9d2:	009b      	lsls	r3, r3, #2
9000a9d4:	fa42 f303 	asr.w	r3, r2, r3
9000a9d8:	f003 030f 	and.w	r3, r3, #15
9000a9dc:	ea43 1303 	orr.w	r3, r3, r3, lsl #4
9000a9e0:	f800 3b01 	strb.w	r3, [r0], #1
9000a9e4:	42a0      	cmp	r0, r4
9000a9e6:	d1eb      	bne.n	9000a9c0 <EwScreenWarpRGB565RowFilterSolidBlend+0x10>
9000a9e8:	bd30      	pop	{r4, r5, pc}
9000a9ea:	bf00      	nop
9000a9ec:	9002fc80 	.word	0x9002fc80
9000a9f0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9000a9f4:	4607      	mov	r7, r0
9000a9f6:	4688      	mov	r8, r1
9000a9f8:	460d      	mov	r5, r1
9000a9fa:	b2c0      	uxtb	r0, r0
9000a9fc:	f3c7 2e07 	ubfx	lr, r7, #8, #8
9000aa00:	f3c7 4c07 	ubfx	ip, r7, #16, #8
9000aa04:	f3c1 2607 	ubfx	r6, r1, #8, #8
9000aa08:	fa5f f488 	uxtb.w	r4, r8
9000aa0c:	f3c1 4107 	ubfx	r1, r1, #16, #8
9000aa10:	0e2d      	lsrs	r5, r5, #24
9000aa12:	1a24      	subs	r4, r4, r0
9000aa14:	eba6 060e 	sub.w	r6, r6, lr
9000aa18:	eba1 010c 	sub.w	r1, r1, ip
9000aa1c:	eba5 6517 	sub.w	r5, r5, r7, lsr #24
9000aa20:	4356      	muls	r6, r2
9000aa22:	4351      	muls	r1, r2
9000aa24:	4355      	muls	r5, r2
9000aa26:	4362      	muls	r2, r4
9000aa28:	fb96 f6f3 	sdiv	r6, r6, r3
9000aa2c:	fb91 f1f3 	sdiv	r1, r1, r3
9000aa30:	fb95 f5f3 	sdiv	r5, r5, r3
9000aa34:	fb92 f3f3 	sdiv	r3, r2, r3
9000aa38:	4403      	add	r3, r0
9000aa3a:	4476      	add	r6, lr
9000aa3c:	2000      	movs	r0, #0
9000aa3e:	4461      	add	r1, ip
9000aa40:	b2db      	uxtb	r3, r3
9000aa42:	b2f6      	uxtb	r6, r6
9000aa44:	f363 0007 	bfi	r0, r3, #0, #8
9000aa48:	eb05 6517 	add.w	r5, r5, r7, lsr #24
9000aa4c:	b2c9      	uxtb	r1, r1
9000aa4e:	f366 200f 	bfi	r0, r6, #8, #8
9000aa52:	b2ed      	uxtb	r5, r5
9000aa54:	f361 4017 	bfi	r0, r1, #16, #8
9000aa58:	f365 601f 	bfi	r0, r5, #24, #8
9000aa5c:	b004      	add	sp, #16
9000aa5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000aa62:	edd0 7a07 	vldr	s15, [r0, #28]
9000aa66:	302c      	adds	r0, #44	; 0x2c
9000aa68:	eeb0 7a67 	vmov.f32	s14, s15
9000aa6c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000aa6e:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000aa72:	f8dd c014 	ldr.w	ip, [sp, #20]
9000aa76:	f850 5c28 	ldr.w	r5, [r0, #-40]
9000aa7a:	ee17 4a10 	vmov	r4, s14
9000aa7e:	ed10 7a03 	vldr	s14, [r0, #-12]
9000aa82:	eef0 6a47 	vmov.f32	s13, s14
9000aa86:	4414      	add	r4, r2
9000aa88:	604c      	str	r4, [r1, #4]
9000aa8a:	f101 040c 	add.w	r4, r1, #12
9000aa8e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000aa92:	ee16 6a90 	vmov	r6, s13
9000aa96:	fb0c 3606 	mla	r6, ip, r6, r3
9000aa9a:	608e      	str	r6, [r1, #8]
9000aa9c:	2d00      	cmp	r5, #0
9000aa9e:	dc19      	bgt.n	9000aad4 <EwScreenWarpRGB565RowFilterSolidBlend+0x124>
9000aaa0:	684a      	ldr	r2, [r1, #4]
9000aaa2:	f854 3c08 	ldr.w	r3, [r4, #-8]
9000aaa6:	4293      	cmp	r3, r2
9000aaa8:	d104      	bne.n	9000aab4 <EwScreenWarpRGB565RowFilterSolidBlend+0x104>
9000aaaa:	f854 0c04 	ldr.w	r0, [r4, #-4]
9000aaae:	688b      	ldr	r3, [r1, #8]
9000aab0:	4298      	cmp	r0, r3
9000aab2:	d005      	beq.n	9000aac0 <EwScreenWarpRGB565RowFilterSolidBlend+0x110>
9000aab4:	4623      	mov	r3, r4
9000aab6:	f843 2b08 	str.w	r2, [r3], #8
9000aaba:	688a      	ldr	r2, [r1, #8]
9000aabc:	6062      	str	r2, [r4, #4]
9000aabe:	461c      	mov	r4, r3
9000aac0:	1a63      	subs	r3, r4, r1
9000aac2:	2b10      	cmp	r3, #16
9000aac4:	dd04      	ble.n	9000aad0 <EwScreenWarpRGB565RowFilterSolidBlend+0x120>
9000aac6:	109b      	asrs	r3, r3, #2
9000aac8:	3b03      	subs	r3, #3
9000aaca:	105b      	asrs	r3, r3, #1
9000aacc:	600b      	str	r3, [r1, #0]
9000aace:	4621      	mov	r1, r4
9000aad0:	4608      	mov	r0, r1
9000aad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000aad4:	ed50 6a02 	vldr	s13, [r0, #-8]
9000aad8:	ed10 6a01 	vldr	s12, [r0, #-4]
9000aadc:	eef4 6a67 	vcmp.f32	s13, s15
9000aae0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000aae4:	d104      	bne.n	9000aaf0 <EwScreenWarpRGB565RowFilterSolidBlend+0x140>
9000aae6:	eeb4 6a47 	vcmp.f32	s12, s14
9000aaea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000aaee:	d017      	beq.n	9000ab20 <EwScreenWarpRGB565RowFilterSolidBlend+0x170>
9000aaf0:	eef0 7a66 	vmov.f32	s15, s13
9000aaf4:	4626      	mov	r6, r4
9000aaf6:	eeb0 7a46 	vmov.f32	s14, s12
9000aafa:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000aafe:	ee17 7a90 	vmov	r7, s15
9000ab02:	eef0 7a46 	vmov.f32	s15, s12
9000ab06:	4417      	add	r7, r2
9000ab08:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000ab0c:	f846 7b08 	str.w	r7, [r6], #8
9000ab10:	ee17 7a90 	vmov	r7, s15
9000ab14:	eef0 7a66 	vmov.f32	s15, s13
9000ab18:	fb0c 3707 	mla	r7, ip, r7, r3
9000ab1c:	6067      	str	r7, [r4, #4]
9000ab1e:	4634      	mov	r4, r6
9000ab20:	3d01      	subs	r5, #1
9000ab22:	3008      	adds	r0, #8
9000ab24:	e7ba      	b.n	9000aa9c <EwScreenWarpRGB565RowFilterSolidBlend+0xec>

9000ab26 <UpdateWatermark2>:
9000ab26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9000ab2a:	4c34      	ldr	r4, [pc, #208]	; (9000abfc <UpdateWatermark2+0xd6>)
9000ab2c:	ab02      	add	r3, sp, #8
9000ab2e:	4617      	mov	r7, r2
9000ab30:	4606      	mov	r6, r0
9000ab32:	4689      	mov	r9, r1
9000ab34:	e903 0003 	stmdb	r3, {r0, r1}
9000ab38:	f01c f8e2 	bl	90026d00 <EwGetTicks>
9000ab3c:	6823      	ldr	r3, [r4, #0]
9000ab3e:	4605      	mov	r5, r0
9000ab40:	4283      	cmp	r3, r0
9000ab42:	d248      	bcs.n	9000abd6 <UpdateWatermark2+0xb0>
9000ab44:	f8d4 8004 	ldr.w	r8, [r4, #4]
9000ab48:	f1b8 0f00 	cmp.w	r8, #0
9000ab4c:	d121      	bne.n	9000ab92 <UpdateWatermark2+0x6c>
9000ab4e:	3e90      	subs	r6, #144	; 0x90
9000ab50:	f1a9 0733 	sub.w	r7, r9, #51	; 0x33
9000ab54:	4640      	mov	r0, r8
9000ab56:	4631      	mov	r1, r6
9000ab58:	6126      	str	r6, [r4, #16]
9000ab5a:	6167      	str	r7, [r4, #20]
9000ab5c:	f01c f90a 	bl	90026d74 <EwMathRandInt32>
9000ab60:	6961      	ldr	r1, [r4, #20]
9000ab62:	6120      	str	r0, [r4, #16]
9000ab64:	4640      	mov	r0, r8
9000ab66:	f01c f905 	bl	90026d74 <EwMathRandInt32>
9000ab6a:	21ff      	movs	r1, #255	; 0xff
9000ab6c:	6160      	str	r0, [r4, #20]
9000ab6e:	4640      	mov	r0, r8
9000ab70:	f01c f900 	bl	90026d74 <EwMathRandInt32>
9000ab74:	6963      	ldr	r3, [r4, #20]
9000ab76:	6922      	ldr	r2, [r4, #16]
9000ab78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000ab7c:	7620      	strb	r0, [r4, #24]
9000ab7e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9000ab82:	429f      	cmp	r7, r3
9000ab84:	bfd4      	ite	le
9000ab86:	6167      	strle	r7, [r4, #20]
9000ab88:	6163      	strgt	r3, [r4, #20]
9000ab8a:	42b2      	cmp	r2, r6
9000ab8c:	bfd4      	ite	le
9000ab8e:	6122      	strle	r2, [r4, #16]
9000ab90:	6126      	strgt	r6, [r4, #16]
9000ab92:	6863      	ldr	r3, [r4, #4]
9000ab94:	2b00      	cmp	r3, #0
9000ab96:	bf0c      	ite	eq
9000ab98:	2301      	moveq	r3, #1
9000ab9a:	2300      	movne	r3, #0
9000ab9c:	6063      	str	r3, [r4, #4]
9000ab9e:	d128      	bne.n	9000abf2 <UpdateWatermark2+0xcc>
9000aba0:	69e3      	ldr	r3, [r4, #28]
9000aba2:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
9000aba6:	f640 30b8 	movw	r0, #3000	; 0xbb8
9000abaa:	fab3 f383 	clz	r3, r3
9000abae:	095b      	lsrs	r3, r3, #5
9000abb0:	61e3      	str	r3, [r4, #28]
9000abb2:	f01c f8df 	bl	90026d74 <EwMathRandInt32>
9000abb6:	f64e 2360 	movw	r3, #60000	; 0xea60
9000abba:	60a5      	str	r5, [r4, #8]
9000abbc:	4283      	cmp	r3, r0
9000abbe:	bfa8      	it	ge
9000abc0:	4603      	movge	r3, r0
9000abc2:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
9000abc6:	bfac      	ite	ge
9000abc8:	18ea      	addge	r2, r5, r3
9000abca:	f505 62fa 	addlt.w	r2, r5, #2000	; 0x7d0
9000abce:	2300      	movs	r3, #0
9000abd0:	6022      	str	r2, [r4, #0]
9000abd2:	60e3      	str	r3, [r4, #12]
9000abd4:	e00a      	b.n	9000abec <UpdateWatermark2+0xc6>
9000abd6:	68a3      	ldr	r3, [r4, #8]
9000abd8:	4283      	cmp	r3, r0
9000abda:	d8b3      	bhi.n	9000ab44 <UpdateWatermark2+0x1e>
9000abdc:	68e3      	ldr	r3, [r4, #12]
9000abde:	1c5a      	adds	r2, r3, #1
9000abe0:	60e2      	str	r2, [r4, #12]
9000abe2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
9000abe6:	4357      	muls	r7, r2
9000abe8:	42bb      	cmp	r3, r7
9000abea:	dcab      	bgt.n	9000ab44 <UpdateWatermark2+0x1e>
9000abec:	b003      	add	sp, #12
9000abee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000abf2:	f247 5130 	movw	r1, #30000	; 0x7530
9000abf6:	f242 7010 	movw	r0, #10000	; 0x2710
9000abfa:	e7da      	b.n	9000abb2 <UpdateWatermark2+0x8c>
9000abfc:	200000c8 	.word	0x200000c8
9000ac00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ac04:	b08b      	sub	sp, #44	; 0x2c
9000ac06:	9005      	str	r0, [sp, #20]
9000ac08:	a80a      	add	r0, sp, #40	; 0x28
9000ac0a:	9306      	str	r3, [sp, #24]
9000ac0c:	9b14      	ldr	r3, [sp, #80]	; 0x50
9000ac0e:	e900 0006 	stmdb	r0, {r1, r2}
9000ac12:	2b01      	cmp	r3, #1
9000ac14:	9a19      	ldr	r2, [sp, #100]	; 0x64
9000ac16:	461f      	mov	r7, r3
9000ac18:	bfb8      	it	lt
9000ac1a:	2701      	movlt	r7, #1
9000ac1c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
9000ac20:	e9dd 9808 	ldrd	r9, r8, [sp, #32]
9000ac24:	b362      	cbz	r2, 9000ac80 <UpdateWatermark2+0x15a>
9000ac26:	2b01      	cmp	r3, #1
9000ac28:	dd2a      	ble.n	9000ac80 <UpdateWatermark2+0x15a>
9000ac2a:	fb09 f308 	mul.w	r3, r9, r8
9000ac2e:	4d72      	ldr	r5, [pc, #456]	; (9000adf8 <UpdateWatermark2+0x2d2>)
9000ac30:	015c      	lsls	r4, r3, #5
9000ac32:	682e      	ldr	r6, [r5, #0]
9000ac34:	f44f 4580 	mov.w	r5, #16384	; 0x4000
9000ac38:	fb96 f6f4 	sdiv	r6, r6, r4
9000ac3c:	f44f 6480 	mov.w	r4, #1024	; 0x400
9000ac40:	fb95 f5f3 	sdiv	r5, r5, r3
9000ac44:	fb94 f3f3 	sdiv	r3, r4, r3
9000ac48:	42b3      	cmp	r3, r6
9000ac4a:	bfb8      	it	lt
9000ac4c:	4633      	movlt	r3, r6
9000ac4e:	429d      	cmp	r5, r3
9000ac50:	bfd4      	ite	le
9000ac52:	195b      	addle	r3, r3, r5
9000ac54:	18db      	addgt	r3, r3, r3
9000ac56:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
9000ac5a:	105b      	asrs	r3, r3, #1
9000ac5c:	2b01      	cmp	r3, #1
9000ac5e:	bfb8      	it	lt
9000ac60:	2301      	movlt	r3, #1
9000ac62:	429f      	cmp	r7, r3
9000ac64:	dd0c      	ble.n	9000ac80 <UpdateWatermark2+0x15a>
9000ac66:	45c8      	cmp	r8, r9
9000ac68:	da04      	bge.n	9000ac74 <UpdateWatermark2+0x14e>
9000ac6a:	b339      	cbz	r1, 9000acbc <UpdateWatermark2+0x196>
9000ac6c:	b138      	cbz	r0, 9000ac7e <UpdateWatermark2+0x158>
9000ac6e:	4601      	mov	r1, r0
9000ac70:	460b      	mov	r3, r1
9000ac72:	e004      	b.n	9000ac7e <UpdateWatermark2+0x158>
9000ac74:	b1f0      	cbz	r0, 9000acb4 <UpdateWatermark2+0x18e>
9000ac76:	2900      	cmp	r1, #0
9000ac78:	d1fa      	bne.n	9000ac70 <UpdateWatermark2+0x14a>
9000ac7a:	4619      	mov	r1, r3
9000ac7c:	4603      	mov	r3, r0
9000ac7e:	4618      	mov	r0, r3
9000ac80:	f240 73fe 	movw	r3, #2046	; 0x7fe
9000ac84:	4599      	cmp	r9, r3
9000ac86:	dc1c      	bgt.n	9000acc2 <UpdateWatermark2+0x19c>
9000ac88:	4598      	cmp	r8, r3
9000ac8a:	bfd7      	itett	le
9000ac8c:	9b18      	ldrle	r3, [sp, #96]	; 0x60
9000ac8e:	2400      	movgt	r4, #0
9000ac90:	f04f 0b01 	movle.w	fp, #1
9000ac94:	1c5c      	addle	r4, r3, #1
9000ac96:	bfc8      	it	gt
9000ac98:	46a3      	movgt	fp, r4
9000ac9a:	f1b9 0f00 	cmp.w	r9, #0
9000ac9e:	dc12      	bgt.n	9000acc6 <UpdateWatermark2+0x1a0>
9000aca0:	2400      	movs	r4, #0
9000aca2:	4642      	mov	r2, r8
9000aca4:	4649      	mov	r1, r9
9000aca6:	20b3      	movs	r0, #179	; 0xb3
9000aca8:	f012 fbf0 	bl	9001d48c <EwErrorDD>
9000acac:	4620      	mov	r0, r4
9000acae:	b00b      	add	sp, #44	; 0x2c
9000acb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000acb4:	2900      	cmp	r1, #0
9000acb6:	d1e2      	bne.n	9000ac7e <UpdateWatermark2+0x158>
9000acb8:	4611      	mov	r1, r2
9000acba:	e7e0      	b.n	9000ac7e <UpdateWatermark2+0x158>
9000acbc:	4619      	mov	r1, r3
9000acbe:	4613      	mov	r3, r2
9000acc0:	e7dd      	b.n	9000ac7e <UpdateWatermark2+0x158>
9000acc2:	2400      	movs	r4, #0
9000acc4:	46a3      	mov	fp, r4
9000acc6:	f1b8 0f00 	cmp.w	r8, #0
9000acca:	dde9      	ble.n	9000aca0 <UpdateWatermark2+0x17a>
9000accc:	f5cb 6280 	rsb	r2, fp, #1024	; 0x400
9000acd0:	ebb9 0f42 	cmp.w	r9, r2, lsl #1
9000acd4:	ea4f 0642 	mov.w	r6, r2, lsl #1
9000acd8:	dce2      	bgt.n	9000aca0 <UpdateWatermark2+0x17a>
9000acda:	4546      	cmp	r6, r8
9000acdc:	dbe0      	blt.n	9000aca0 <UpdateWatermark2+0x17a>
9000acde:	eb09 0304 	add.w	r3, r9, r4
9000ace2:	4426      	add	r6, r4
9000ace4:	9302      	str	r3, [sp, #8]
9000ace6:	fbb6 f2f3 	udiv	r2, r6, r3
9000acea:	eb08 0304 	add.w	r3, r8, r4
9000acee:	fbb6 f6f3 	udiv	r6, r6, r3
9000acf2:	9303      	str	r3, [sp, #12]
9000acf4:	b110      	cbz	r0, 9000acfc <UpdateWatermark2+0x1d6>
9000acf6:	4282      	cmp	r2, r0
9000acf8:	bfa8      	it	ge
9000acfa:	4602      	movge	r2, r0
9000acfc:	b111      	cbz	r1, 9000ad04 <UpdateWatermark2+0x1de>
9000acfe:	428e      	cmp	r6, r1
9000ad00:	bfa8      	it	ge
9000ad02:	460e      	movge	r6, r1
9000ad04:	4356      	muls	r6, r2
9000ad06:	ebc7 05c7 	rsb	r5, r7, r7, lsl #3
9000ad0a:	9b15      	ldr	r3, [sp, #84]	; 0x54
9000ad0c:	eb07 0a06 	add.w	sl, r7, r6
9000ad10:	350b      	adds	r5, #11
9000ad12:	429f      	cmp	r7, r3
9000ad14:	f10a 3aff 	add.w	sl, sl, #4294967295
9000ad18:	fbba faf6 	udiv	sl, sl, r6
9000ad1c:	4455      	add	r5, sl
9000ad1e:	ea4f 0585 	mov.w	r5, r5, lsl #2
9000ad22:	bfb8      	it	lt
9000ad24:	eb05 0543 	addlt.w	r5, r5, r3, lsl #1
9000ad28:	4628      	mov	r0, r5
9000ad2a:	9201      	str	r2, [sp, #4]
9000ad2c:	f01b ffc2 	bl	90026cb4 <EwAlloc>
9000ad30:	9a01      	ldr	r2, [sp, #4]
9000ad32:	4604      	mov	r4, r0
9000ad34:	b928      	cbnz	r0, 9000ad42 <UpdateWatermark2+0x21c>
9000ad36:	2022      	movs	r0, #34	; 0x22
9000ad38:	f013 fb3c 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000ad3c:	9a01      	ldr	r2, [sp, #4]
9000ad3e:	2800      	cmp	r0, #0
9000ad40:	d1f2      	bne.n	9000ad28 <UpdateWatermark2+0x202>
9000ad42:	f104 032c 	add.w	r3, r4, #44	; 0x2c
9000ad46:	eb03 018a 	add.w	r1, r3, sl, lsl #2
9000ad4a:	9304      	str	r3, [sp, #16]
9000ad4c:	9101      	str	r1, [sp, #4]
9000ad4e:	b91c      	cbnz	r4, 9000ad58 <UpdateWatermark2+0x232>
9000ad50:	2022      	movs	r0, #34	; 0x22
9000ad52:	f012 fb7d 	bl	9001d450 <EwError>
9000ad56:	e7a9      	b.n	9000acac <UpdateWatermark2+0x186>
9000ad58:	4620      	mov	r0, r4
9000ad5a:	4629      	mov	r1, r5
9000ad5c:	9207      	str	r2, [sp, #28]
9000ad5e:	f01b ffd1 	bl	90026d04 <EwZero>
9000ad62:	f8dd c004 	ldr.w	ip, [sp, #4]
9000ad66:	2000      	movs	r0, #0
9000ad68:	9a07      	ldr	r2, [sp, #28]
9000ad6a:	f10c 0c1c 	add.w	ip, ip, #28
9000ad6e:	fbb0 f1f6 	udiv	r1, r0, r6
9000ad72:	fb06 0111 	mls	r1, r6, r1, r0
9000ad76:	3001      	adds	r0, #1
9000ad78:	fbb1 fef2 	udiv	lr, r1, r2
9000ad7c:	fb02 131e 	mls	r3, r2, lr, r1
9000ad80:	9902      	ldr	r1, [sp, #8]
9000ad82:	4287      	cmp	r7, r0
9000ad84:	fb01 b103 	mla	r1, r1, r3, fp
9000ad88:	f84c 1c18 	str.w	r1, [ip, #-24]
9000ad8c:	9903      	ldr	r1, [sp, #12]
9000ad8e:	fb01 b10e 	mla	r1, r1, lr, fp
9000ad92:	f84c 1c14 	str.w	r1, [ip, #-20]
9000ad96:	d1e8      	bne.n	9000ad6a <UpdateWatermark2+0x244>
9000ad98:	9a05      	ldr	r2, [sp, #20]
9000ad9a:	9b04      	ldr	r3, [sp, #16]
9000ad9c:	6127      	str	r7, [r4, #16]
9000ad9e:	62a3      	str	r3, [r4, #40]	; 0x28
9000ada0:	9b01      	ldr	r3, [sp, #4]
9000ada2:	f8c4 8008 	str.w	r8, [r4, #8]
9000ada6:	6223      	str	r3, [r4, #32]
9000ada8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
9000adac:	e9c4 2900 	strd	r2, r9, [r4]
9000adb0:	9a06      	ldr	r2, [sp, #24]
9000adb2:	60e2      	str	r2, [r4, #12]
9000adb4:	9a15      	ldr	r2, [sp, #84]	; 0x54
9000adb6:	4297      	cmp	r7, r2
9000adb8:	4613      	mov	r3, r2
9000adba:	6162      	str	r2, [r4, #20]
9000adbc:	bfbb      	ittet	lt
9000adbe:	231c      	movlt	r3, #28
9000adc0:	9a01      	ldrlt	r2, [sp, #4]
9000adc2:	2700      	movge	r7, #0
9000adc4:	fb03 2707 	mlalt	r7, r3, r7, r2
9000adc8:	4b0c      	ldr	r3, [pc, #48]	; (9000adfc <UpdateWatermark2+0x2d6>)
9000adca:	6819      	ldr	r1, [r3, #0]
9000adcc:	61a7      	str	r7, [r4, #24]
9000adce:	440d      	add	r5, r1
9000add0:	601d      	str	r5, [r3, #0]
9000add2:	4b0b      	ldr	r3, [pc, #44]	; (9000ae00 <UpdateWatermark2+0x2da>)
9000add4:	681a      	ldr	r2, [r3, #0]
9000add6:	4295      	cmp	r5, r2
9000add8:	bfc8      	it	gt
9000adda:	601d      	strgt	r5, [r3, #0]
9000addc:	4b09      	ldr	r3, [pc, #36]	; (9000ae04 <UpdateWatermark2+0x2de>)
9000adde:	6819      	ldr	r1, [r3, #0]
9000ade0:	4b09      	ldr	r3, [pc, #36]	; (9000ae08 <UpdateWatermark2+0x2e2>)
9000ade2:	681b      	ldr	r3, [r3, #0]
9000ade4:	4419      	add	r1, r3
9000ade6:	4b09      	ldr	r3, [pc, #36]	; (9000ae0c <UpdateWatermark2+0x2e6>)
9000ade8:	440d      	add	r5, r1
9000adea:	681a      	ldr	r2, [r3, #0]
9000adec:	4295      	cmp	r5, r2
9000adee:	f77f af5d 	ble.w	9000acac <UpdateWatermark2+0x186>
9000adf2:	601d      	str	r5, [r3, #0]
9000adf4:	e75a      	b.n	9000acac <UpdateWatermark2+0x186>
9000adf6:	bf00      	nop
9000adf8:	20000014 	.word	0x20000014
9000adfc:	200002bc 	.word	0x200002bc
9000ae00:	200002d8 	.word	0x200002d8
9000ae04:	200002ac 	.word	0x200002ac
9000ae08:	200002b8 	.word	0x200002b8
9000ae0c:	200002c0 	.word	0x200002c0
9000ae10:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
9000ae14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ae18:	3b01      	subs	r3, #1
9000ae1a:	1c4e      	adds	r6, r1, #1
9000ae1c:	b097      	sub	sp, #92	; 0x5c
9000ae1e:	1c57      	adds	r7, r2, #1
9000ae20:	2500      	movs	r5, #0
9000ae22:	4604      	mov	r4, r0
9000ae24:	f10d 0928 	add.w	r9, sp, #40	; 0x28
9000ae28:	46a8      	mov	r8, r5
9000ae2a:	46aa      	mov	sl, r5
9000ae2c:	fb93 f3f6 	sdiv	r3, r3, r6
9000ae30:	9307      	str	r3, [sp, #28]
9000ae32:	f9b0 3024 	ldrsh.w	r3, [r0, #36]	; 0x24
9000ae36:	3b01      	subs	r3, #1
9000ae38:	fb93 fbf7 	sdiv	fp, r3, r7
9000ae3c:	45d8      	cmp	r8, fp
9000ae3e:	dd0a      	ble.n	9000ae56 <UpdateWatermark2+0x330>
9000ae40:	2500      	movs	r5, #0
9000ae42:	f10d 0928 	add.w	r9, sp, #40	; 0x28
9000ae46:	46a8      	mov	r8, r5
9000ae48:	46aa      	mov	sl, r5
9000ae4a:	9b07      	ldr	r3, [sp, #28]
9000ae4c:	4598      	cmp	r8, r3
9000ae4e:	dd2b      	ble.n	9000aea8 <UpdateWatermark2+0x382>
9000ae50:	b017      	add	sp, #92	; 0x5c
9000ae52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000ae56:	2302      	movs	r3, #2
9000ae58:	462a      	mov	r2, r5
9000ae5a:	2100      	movs	r1, #0
9000ae5c:	4620      	mov	r0, r4
9000ae5e:	f8cd 9010 	str.w	r9, [sp, #16]
9000ae62:	f8cd a004 	str.w	sl, [sp, #4]
9000ae66:	e9cd a302 	strd	sl, r3, [sp, #8]
9000ae6a:	2301      	movs	r3, #1
9000ae6c:	9300      	str	r3, [sp, #0]
9000ae6e:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
9000ae72:	f00c fe71 	bl	90017b58 <EwLockSurface>
9000ae76:	b198      	cbz	r0, 9000aea0 <UpdateWatermark2+0x37a>
9000ae78:	980a      	ldr	r0, [sp, #40]	; 0x28
9000ae7a:	b128      	cbz	r0, 9000ae88 <UpdateWatermark2+0x362>
9000ae7c:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
9000ae80:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000ae82:	4359      	muls	r1, r3
9000ae84:	f01b ff3e 	bl	90026d04 <EwZero>
9000ae88:	980d      	ldr	r0, [sp, #52]	; 0x34
9000ae8a:	b128      	cbz	r0, 9000ae98 <UpdateWatermark2+0x372>
9000ae8c:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
9000ae90:	990e      	ldr	r1, [sp, #56]	; 0x38
9000ae92:	4359      	muls	r1, r3
9000ae94:	f01b ff36 	bl	90026d04 <EwZero>
9000ae98:	4649      	mov	r1, r9
9000ae9a:	4620      	mov	r0, r4
9000ae9c:	f00c fb0a 	bl	900174b4 <EwUnlockSurface>
9000aea0:	f108 0801 	add.w	r8, r8, #1
9000aea4:	443d      	add	r5, r7
9000aea6:	e7c9      	b.n	9000ae3c <UpdateWatermark2+0x316>
9000aea8:	2302      	movs	r3, #2
9000aeaa:	2200      	movs	r2, #0
9000aeac:	4629      	mov	r1, r5
9000aeae:	4620      	mov	r0, r4
9000aeb0:	f8cd 9010 	str.w	r9, [sp, #16]
9000aeb4:	f8cd a004 	str.w	sl, [sp, #4]
9000aeb8:	e9cd a302 	strd	sl, r3, [sp, #8]
9000aebc:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
9000aec0:	9300      	str	r3, [sp, #0]
9000aec2:	2301      	movs	r3, #1
9000aec4:	f00c fe48 	bl	90017b58 <EwLockSurface>
9000aec8:	b170      	cbz	r0, 9000aee8 <UpdateWatermark2+0x3c2>
9000aeca:	980a      	ldr	r0, [sp, #40]	; 0x28
9000aecc:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
9000aed0:	f9b4 7024 	ldrsh.w	r7, [r4, #36]	; 0x24
9000aed4:	b9c8      	cbnz	r0, 9000af0a <UpdateWatermark2+0x3e4>
9000aed6:	f1bb 0f00 	cmp.w	fp, #0
9000aeda:	d001      	beq.n	9000aee0 <UpdateWatermark2+0x3ba>
9000aedc:	2f00      	cmp	r7, #0
9000aede:	dc16      	bgt.n	9000af0e <UpdateWatermark2+0x3e8>
9000aee0:	4649      	mov	r1, r9
9000aee2:	4620      	mov	r0, r4
9000aee4:	f00c fae6 	bl	900174b4 <EwUnlockSurface>
9000aee8:	f108 0801 	add.w	r8, r8, #1
9000aeec:	4435      	add	r5, r6
9000aeee:	e7ac      	b.n	9000ae4a <UpdateWatermark2+0x324>
9000aef0:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000aef2:	9209      	str	r2, [sp, #36]	; 0x24
9000aef4:	9008      	str	r0, [sp, #32]
9000aef6:	f01b ff05 	bl	90026d04 <EwZero>
9000aefa:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000aefc:	990c      	ldr	r1, [sp, #48]	; 0x30
9000aefe:	9808      	ldr	r0, [sp, #32]
9000af00:	3a01      	subs	r2, #1
9000af02:	4408      	add	r0, r1
9000af04:	2a00      	cmp	r2, #0
9000af06:	dcf3      	bgt.n	9000aef0 <UpdateWatermark2+0x3ca>
9000af08:	e7e5      	b.n	9000aed6 <UpdateWatermark2+0x3b0>
9000af0a:	463a      	mov	r2, r7
9000af0c:	e7fa      	b.n	9000af04 <UpdateWatermark2+0x3de>
9000af0e:	4658      	mov	r0, fp
9000af10:	990e      	ldr	r1, [sp, #56]	; 0x38
9000af12:	f01b fef7 	bl	90026d04 <EwZero>
9000af16:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9000af18:	3f01      	subs	r7, #1
9000af1a:	4493      	add	fp, r2
9000af1c:	e7de      	b.n	9000aedc <UpdateWatermark2+0x3b6>
9000af1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000af22:	ed2d 8b0e 	vpush	{d8-d14}
9000af26:	b089      	sub	sp, #36	; 0x24
9000af28:	eeb0 8a40 	vmov.f32	s16, s0
9000af2c:	eef0 8a60 	vmov.f32	s17, s1
9000af30:	4682      	mov	sl, r0
9000af32:	9305      	str	r3, [sp, #20]
9000af34:	eeb0 aa41 	vmov.f32	s20, s2
9000af38:	7a83      	ldrb	r3, [r0, #10]
9000af3a:	eef0 aa61 	vmov.f32	s21, s3
9000af3e:	9f24      	ldr	r7, [sp, #144]	; 0x90
9000af40:	9302      	str	r3, [sp, #8]
9000af42:	f100 0324 	add.w	r3, r0, #36	; 0x24
9000af46:	f8d0 9004 	ldr.w	r9, [r0, #4]
9000af4a:	9301      	str	r3, [sp, #4]
9000af4c:	9b05      	ldr	r3, [sp, #20]
9000af4e:	edd0 ca07 	vldr	s25, [r0, #28]
9000af52:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000af56:	ed90 da08 	vldr	s26, [r0, #32]
9000af5a:	e9dd 4820 	ldrd	r4, r8, [sp, #128]	; 0x80
9000af5e:	e9dd 5622 	ldrd	r5, r6, [sp, #136]	; 0x88
9000af62:	e9cd 1203 	strd	r1, r2, [sp, #12]
9000af66:	d15e      	bne.n	9000b026 <UpdateWatermark2+0x500>
9000af68:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
9000af6c:	eee0 7a00 	vfma.f32	s15, s0, s0
9000af70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9000af74:	eeb0 8a67 	vmov.f32	s16, s15
9000af78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000af7c:	dd05      	ble.n	9000af8a <UpdateWatermark2+0x464>
9000af7e:	eeb0 0a67 	vmov.f32	s0, s15
9000af82:	f01b fee3 	bl	90026d4c <EwMathSqrt>
9000af86:	eeb0 8a40 	vmov.f32	s16, s0
9000af8a:	eef0 7a00 	vmov.f32	s15, #0	; 0x40000000  2.0
9000af8e:	ee87 baa8 	vdiv.f32	s22, s15, s17
9000af92:	ed9f cac8 	vldr	s24, [pc, #800]	; 9000b2b4 <UpdateWatermark2+0x78e>
9000af96:	46c3      	mov	fp, r8
9000af98:	f10a 032c 	add.w	r3, sl, #44	; 0x2c
9000af9c:	2200      	movs	r2, #0
9000af9e:	eef0 ba4c 	vmov.f32	s23, s24
9000afa2:	454a      	cmp	r2, r9
9000afa4:	db42      	blt.n	9000b02c <UpdateWatermark2+0x506>
9000afa6:	ed58 7a03 	vldr	s15, [r8, #-12]
9000afaa:	f06f 020b 	mvn.w	r2, #11
9000afae:	ed18 7a02 	vldr	s14, [r8, #-8]
9000afb2:	ea29 73e9 	bic.w	r3, r9, r9, asr #31
9000afb6:	ee67 7acc 	vnmul.f32	s15, s15, s24
9000afba:	eb08 0e02 	add.w	lr, r8, r2
9000afbe:	fb02 8303 	mla	r3, r2, r3, r8
9000afc2:	9925      	ldr	r1, [sp, #148]	; 0x94
9000afc4:	9a25      	ldr	r2, [sp, #148]	; 0x94
9000afc6:	eeb1 3a68 	vneg.f32	s6, s17
9000afca:	eee7 7a2b 	vfma.f32	s15, s14, s23
9000afce:	2900      	cmp	r1, #0
9000afd0:	f102 32ff 	add.w	r2, r2, #4294967295
9000afd4:	4620      	mov	r0, r4
9000afd6:	f04f 0c01 	mov.w	ip, #1
9000afda:	9206      	str	r2, [sp, #24]
9000afdc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
9000afe0:	bfd8      	it	le
9000afe2:	2200      	movle	r2, #0
9000afe4:	ed48 7a01 	vstr	s15, [r8, #-4]
9000afe8:	ed43 7a01 	vstr	s15, [r3, #-4]
9000afec:	f1c9 0301 	rsb	r3, r9, #1
9000aff0:	edda 7a07 	vldr	s15, [sl, #28]
9000aff4:	edda 6a08 	vldr	s13, [sl, #32]
9000aff8:	9207      	str	r2, [sp, #28]
9000affa:	454b      	cmp	r3, r9
9000affc:	dd5a      	ble.n	9000b0b4 <UpdateWatermark2+0x58e>
9000affe:	6843      	ldr	r3, [r0, #4]
9000b000:	6063      	str	r3, [r4, #4]
9000b002:	4623      	mov	r3, r4
9000b004:	6882      	ldr	r2, [r0, #8]
9000b006:	f843 2f08 	str.w	r2, [r3, #8]!
9000b00a:	1a1b      	subs	r3, r3, r0
9000b00c:	2b0c      	cmp	r3, #12
9000b00e:	dd05      	ble.n	9000b01c <UpdateWatermark2+0x4f6>
9000b010:	109b      	asrs	r3, r3, #2
9000b012:	3b02      	subs	r3, #2
9000b014:	105b      	asrs	r3, r3, #1
9000b016:	6003      	str	r3, [r0, #0]
9000b018:	f104 000c 	add.w	r0, r4, #12
9000b01c:	b009      	add	sp, #36	; 0x24
9000b01e:	ecbd 8b0e 	vpop	{d8-d14}
9000b022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000b026:	ed9f baa3 	vldr	s22, [pc, #652]	; 9000b2b4 <UpdateWatermark2+0x78e>
9000b02a:	e7b2      	b.n	9000af92 <UpdateWatermark2+0x46c>
9000b02c:	ed13 ea01 	vldr	s28, [r3, #-4]
9000b030:	ed53 da02 	vldr	s27, [r3, #-8]
9000b034:	ee7e 9a4d 	vsub.f32	s19, s28, s26
9000b038:	9207      	str	r2, [sp, #28]
9000b03a:	ee3d 9aec 	vsub.f32	s18, s27, s25
9000b03e:	9306      	str	r3, [sp, #24]
9000b040:	ee29 0aa9 	vmul.f32	s0, s19, s19
9000b044:	eea9 0a09 	vfma.f32	s0, s18, s18
9000b048:	f01b fe80 	bl	90026d4c <EwMathSqrt>
9000b04c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9000b050:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
9000b054:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b058:	eef4 ca6d 	vcmp.f32	s25, s27
9000b05c:	bfc4      	itt	gt
9000b05e:	ee89 9a00 	vdivgt.f32	s18, s18, s0
9000b062:	eec9 9a80 	vdivgt.f32	s19, s19, s0
9000b066:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b06a:	ee69 7a4c 	vnmul.f32	s15, s18, s24
9000b06e:	ed0b 9a03 	vstr	s18, [fp, #-12]
9000b072:	eeeb 7aa9 	vfma.f32	s15, s23, s19
9000b076:	ed4b 9a02 	vstr	s19, [fp, #-8]
9000b07a:	ed4b 7a01 	vstr	s15, [fp, #-4]
9000b07e:	d10c      	bne.n	9000b09a <UpdateWatermark2+0x574>
9000b080:	eeb4 da4e 	vcmp.f32	s26, s28
9000b084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b088:	bf01      	itttt	eq
9000b08a:	eef0 9a4c 	vmoveq.f32	s19, s24
9000b08e:	eeb0 9a6b 	vmoveq.f32	s18, s23
9000b092:	eeb0 ea4d 	vmoveq.f32	s28, s26
9000b096:	eef0 da6c 	vmoveq.f32	s27, s25
9000b09a:	eeb0 ca69 	vmov.f32	s24, s19
9000b09e:	3201      	adds	r2, #1
9000b0a0:	eef0 ba49 	vmov.f32	s23, s18
9000b0a4:	f1ab 0b0c 	sub.w	fp, fp, #12
9000b0a8:	eeb0 da4e 	vmov.f32	s26, s28
9000b0ac:	3308      	adds	r3, #8
9000b0ae:	eef0 ca6d 	vmov.f32	s25, s27
9000b0b2:	e776      	b.n	9000afa2 <UpdateWatermark2+0x47c>
9000b0b4:	9a01      	ldr	r2, [sp, #4]
9000b0b6:	f1bc 3fff 	cmp.w	ip, #4294967295
9000b0ba:	edde 5a00 	vldr	s11, [lr]
9000b0be:	ed92 4a00 	vldr	s8, [r2]
9000b0c2:	ed9e 5a01 	vldr	s10, [lr, #4]
9000b0c6:	bf08      	it	eq
9000b0c8:	eef1 5a65 	vnegeq.f32	s11, s11
9000b0cc:	eef4 7a44 	vcmp.f32	s15, s8
9000b0d0:	bf05      	ittet	eq
9000b0d2:	ed1e 7a01 	vldreq	s14, [lr, #-4]
9000b0d6:	eeb1 5a45 	vnegeq.f32	s10, s10
9000b0da:	ed9e 7a02 	vldrne	s14, [lr, #8]
9000b0de:	eeb1 7a47 	vnegeq.f32	s14, s14
9000b0e2:	edd2 3a01 	vldr	s7, [r2, #4]
9000b0e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b0ea:	ee28 6aa5 	vmul.f32	s12, s17, s11
9000b0ee:	ee68 4a85 	vmul.f32	s9, s17, s10
9000b0f2:	d111      	bne.n	9000b118 <UpdateWatermark2+0x5f2>
9000b0f4:	eef4 6a63 	vcmp.f32	s13, s7
9000b0f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b0fc:	d10c      	bne.n	9000b118 <UpdateWatermark2+0x5f2>
9000b0fe:	b93b      	cbnz	r3, 9000b110 <UpdateWatermark2+0x5ea>
9000b100:	f1cc 0c00 	rsb	ip, ip, #0
9000b104:	9a01      	ldr	r2, [sp, #4]
9000b106:	eb02 02cc 	add.w	r2, r2, ip, lsl #3
9000b10a:	9201      	str	r2, [sp, #4]
9000b10c:	3301      	adds	r3, #1
9000b10e:	e774      	b.n	9000affa <UpdateWatermark2+0x4d4>
9000b110:	220c      	movs	r2, #12
9000b112:	fb02 ee1c 	mls	lr, r2, ip, lr
9000b116:	e7f5      	b.n	9000b104 <UpdateWatermark2+0x5de>
9000b118:	9a02      	ldr	r2, [sp, #8]
9000b11a:	b99a      	cbnz	r2, 9000b144 <UpdateWatermark2+0x61e>
9000b11c:	9a03      	ldr	r2, [sp, #12]
9000b11e:	2a01      	cmp	r2, #1
9000b120:	d107      	bne.n	9000b132 <UpdateWatermark2+0x60c>
9000b122:	42a0      	cmp	r0, r4
9000b124:	d103      	bne.n	9000b12e <UpdateWatermark2+0x608>
9000b126:	ee77 7ac6 	vsub.f32	s15, s15, s12
9000b12a:	ee76 6ae4 	vsub.f32	s13, s13, s9
9000b12e:	454b      	cmp	r3, r9
9000b130:	d004      	beq.n	9000b13c <UpdateWatermark2+0x616>
9000b132:	9a04      	ldr	r2, [sp, #16]
9000b134:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000b138:	d104      	bne.n	9000b144 <UpdateWatermark2+0x61e>
9000b13a:	b91b      	cbnz	r3, 9000b144 <UpdateWatermark2+0x61e>
9000b13c:	ee34 4a06 	vadd.f32	s8, s8, s12
9000b140:	ee73 3aa4 	vadd.f32	s7, s7, s9
9000b144:	9a05      	ldr	r2, [sp, #20]
9000b146:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
9000b14a:	f040 80c5 	bne.w	9000b2d8 <UpdateWatermark2+0x7b2>
9000b14e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b156:	f340 819a 	ble.w	9000b48e <UpdateWatermark2+0x968>
9000b15a:	9a02      	ldr	r2, [sp, #8]
9000b15c:	b92a      	cbnz	r2, 9000b16a <UpdateWatermark2+0x644>
9000b15e:	42a0      	cmp	r0, r4
9000b160:	f000 81f8 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b164:	2b01      	cmp	r3, #1
9000b166:	f000 81f5 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b16a:	ee3b 2aa5 	vadd.f32	s4, s23, s11
9000b16e:	ee7c 2a05 	vadd.f32	s5, s24, s10
9000b172:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9000b176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b17a:	eef5 2ac0 	vcmpe.f32	s5, #0.0
9000b17e:	bf4c      	ite	mi
9000b180:	eef1 1a42 	vnegmi.f32	s3, s4
9000b184:	eef0 1a42 	vmovpl.f32	s3, s4
9000b188:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b18c:	bf4c      	ite	mi
9000b18e:	eeb1 7a62 	vnegmi.f32	s14, s5
9000b192:	eeb0 7a62 	vmovpl.f32	s14, s5
9000b196:	eef4 1ac7 	vcmpe.f32	s3, s14
9000b19a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b19e:	dd7d      	ble.n	9000b29c <UpdateWatermark2+0x776>
9000b1a0:	ee35 ca4c 	vsub.f32	s24, s10, s24
9000b1a4:	ee8c 7a02 	vdiv.f32	s14, s24, s4
9000b1a8:	f104 0108 	add.w	r1, r4, #8
9000b1ac:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b1b0:	ee74 7aa7 	vadd.f32	s15, s9, s15
9000b1b4:	ee76 6ac6 	vsub.f32	s13, s13, s12
9000b1b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b1bc:	bf48      	it	mi
9000b1be:	eeb1 7a47 	vnegmi.f32	s14, s14
9000b1c2:	eeb4 8ac7 	vcmpe.f32	s16, s14
9000b1c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b1ca:	db77      	blt.n	9000b2bc <UpdateWatermark2+0x796>
9000b1cc:	eeb4 bac7 	vcmpe.f32	s22, s14
9000b1d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b1d4:	d872      	bhi.n	9000b2bc <UpdateWatermark2+0x796>
9000b1d6:	ee28 7ac7 	vnmul.f32	s14, s17, s14
9000b1da:	42a0      	cmp	r0, r4
9000b1dc:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b1e0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b1e4:	ee17 2a90 	vmov	r2, s15
9000b1e8:	442a      	add	r2, r5
9000b1ea:	f040 8137 	bne.w	9000b45c <UpdateWatermark2+0x936>
9000b1ee:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b1f2:	6042      	str	r2, [r0, #4]
9000b1f4:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000b1f8:	ee16 2a90 	vmov	r2, s13
9000b1fc:	fb07 6202 	mla	r2, r7, r2, r6
9000b200:	6082      	str	r2, [r0, #8]
9000b202:	460c      	mov	r4, r1
9000b204:	ee74 7a24 	vadd.f32	s15, s8, s9
9000b208:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b20c:	ee17 2a90 	vmov	r2, s15
9000b210:	ee73 7ac6 	vsub.f32	s15, s7, s12
9000b214:	442a      	add	r2, r5
9000b216:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b21a:	6062      	str	r2, [r4, #4]
9000b21c:	f104 0208 	add.w	r2, r4, #8
9000b220:	ee17 1a90 	vmov	r1, s15
9000b224:	fb07 6101 	mla	r1, r7, r1, r6
9000b228:	60a1      	str	r1, [r4, #8]
9000b22a:	9902      	ldr	r1, [sp, #8]
9000b22c:	2900      	cmp	r1, #0
9000b22e:	f040 81cf 	bne.w	9000b5d0 <UpdateWatermark2+0xaaa>
9000b232:	9903      	ldr	r1, [sp, #12]
9000b234:	2902      	cmp	r1, #2
9000b236:	f040 819f 	bne.w	9000b578 <UpdateWatermark2+0xa52>
9000b23a:	454b      	cmp	r3, r9
9000b23c:	f040 81f1 	bne.w	9000b622 <UpdateWatermark2+0xafc>
9000b240:	ee74 7a06 	vadd.f32	s15, s8, s12
9000b244:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b248:	ee17 2a90 	vmov	r2, s15
9000b24c:	ee73 7aa4 	vadd.f32	s15, s7, s9
9000b250:	442a      	add	r2, r5
9000b252:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b256:	60e2      	str	r2, [r4, #12]
9000b258:	f104 0210 	add.w	r2, r4, #16
9000b25c:	ee17 1a90 	vmov	r1, s15
9000b260:	fb07 6101 	mla	r1, r7, r1, r6
9000b264:	6121      	str	r1, [r4, #16]
9000b266:	9903      	ldr	r1, [sp, #12]
9000b268:	2903      	cmp	r1, #3
9000b26a:	d101      	bne.n	9000b270 <UpdateWatermark2+0x74a>
9000b26c:	454b      	cmp	r3, r9
9000b26e:	d004      	beq.n	9000b27a <UpdateWatermark2+0x754>
9000b270:	9904      	ldr	r1, [sp, #16]
9000b272:	f5b1 7f40 	cmp.w	r1, #768	; 0x300
9000b276:	d10a      	bne.n	9000b28e <UpdateWatermark2+0x768>
9000b278:	b963      	cbnz	r3, 9000b294 <UpdateWatermark2+0x76e>
9000b27a:	eeb1 6a46 	vneg.f32	s12, s12
9000b27e:	4692      	mov	sl, r2
9000b280:	2400      	movs	r4, #0
9000b282:	9906      	ldr	r1, [sp, #24]
9000b284:	42a1      	cmp	r1, r4
9000b286:	f300 8184 	bgt.w	9000b592 <UpdateWatermark2+0xa6c>
9000b28a:	9907      	ldr	r1, [sp, #28]
9000b28c:	440a      	add	r2, r1
9000b28e:	2b00      	cmp	r3, #0
9000b290:	f000 81b7 	beq.w	9000b602 <UpdateWatermark2+0xadc>
9000b294:	210c      	movs	r1, #12
9000b296:	fb01 ee1c 	mls	lr, r1, ip, lr
9000b29a:	e1b4      	b.n	9000b606 <UpdateWatermark2+0xae0>
9000b29c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b2a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b2a4:	bfca      	itet	gt
9000b2a6:	ee75 baeb 	vsubgt.f32	s23, s11, s23
9000b2aa:	eeb0 7a48 	vmovle.f32	s14, s16
9000b2ae:	ee8b 7aa2 	vdivgt.f32	s14, s23, s5
9000b2b2:	e779      	b.n	9000b1a8 <UpdateWatermark2+0x682>
	...
9000b2bc:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b2c0:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000b2c4:	ee17 2a90 	vmov	r2, s15
9000b2c8:	442a      	add	r2, r5
9000b2ca:	6062      	str	r2, [r4, #4]
9000b2cc:	ee16 2a90 	vmov	r2, s13
9000b2d0:	fb07 6202 	mla	r2, r7, r2, r6
9000b2d4:	60a2      	str	r2, [r4, #8]
9000b2d6:	e794      	b.n	9000b202 <UpdateWatermark2+0x6dc>
9000b2d8:	9a05      	ldr	r2, [sp, #20]
9000b2da:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
9000b2de:	d158      	bne.n	9000b392 <UpdateWatermark2+0x86c>
9000b2e0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b2e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b2e8:	f340 80d1 	ble.w	9000b48e <UpdateWatermark2+0x968>
9000b2ec:	9a02      	ldr	r2, [sp, #8]
9000b2ee:	b92a      	cbnz	r2, 9000b2fc <UpdateWatermark2+0x7d6>
9000b2f0:	42a0      	cmp	r0, r4
9000b2f2:	f000 812f 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b2f6:	2b01      	cmp	r3, #1
9000b2f8:	f000 812c 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b2fc:	ee2c ca28 	vmul.f32	s24, s24, s17
9000b300:	4622      	mov	r2, r4
9000b302:	ee2b 7ae8 	vnmul.f32	s14, s23, s17
9000b306:	f04f 0b00 	mov.w	fp, #0
9000b30a:	eef1 1a46 	vneg.f32	s3, s12
9000b30e:	9925      	ldr	r1, [sp, #148]	; 0x94
9000b310:	f102 0a08 	add.w	sl, r2, #8
9000b314:	4559      	cmp	r1, fp
9000b316:	d112      	bne.n	9000b33e <UpdateWatermark2+0x818>
9000b318:	ee74 7aa7 	vadd.f32	s15, s9, s15
9000b31c:	4654      	mov	r4, sl
9000b31e:	ee76 6ac6 	vsub.f32	s13, s13, s12
9000b322:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b326:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000b32a:	ee17 1a90 	vmov	r1, s15
9000b32e:	4429      	add	r1, r5
9000b330:	6051      	str	r1, [r2, #4]
9000b332:	ee16 1a90 	vmov	r1, s13
9000b336:	fb07 6101 	mla	r1, r7, r1, r6
9000b33a:	6091      	str	r1, [r2, #8]
9000b33c:	e762      	b.n	9000b204 <UpdateWatermark2+0x6de>
9000b33e:	ee6a 2ac7 	vnmul.f32	s5, s21, s14
9000b342:	f10b 0b01 	add.w	fp, fp, #1
9000b346:	ee27 7a0a 	vmul.f32	s14, s14, s20
9000b34a:	eeec 2a0a 	vfma.f32	s5, s24, s20
9000b34e:	eeac 7a2a 	vfma.f32	s14, s24, s21
9000b352:	ee27 2a64 	vnmul.f32	s4, s14, s9
9000b356:	eea1 2aa2 	vfma.f32	s4, s3, s5
9000b35a:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9000b35e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b362:	d9d9      	bls.n	9000b318 <UpdateWatermark2+0x7f2>
9000b364:	ee32 2aa7 	vadd.f32	s4, s5, s15
9000b368:	eeb0 ca62 	vmov.f32	s24, s5
9000b36c:	eebe 2ace 	vcvt.s32.f32	s4, s4, #4
9000b370:	ee12 2a10 	vmov	r2, s4
9000b374:	ee37 2a26 	vadd.f32	s4, s14, s13
9000b378:	442a      	add	r2, r5
9000b37a:	eebe 2ace 	vcvt.s32.f32	s4, s4, #4
9000b37e:	f84a 2c04 	str.w	r2, [sl, #-4]
9000b382:	ee12 2a10 	vmov	r2, s4
9000b386:	fb07 6202 	mla	r2, r7, r2, r6
9000b38a:	f844 203b 	str.w	r2, [r4, fp, lsl #3]
9000b38e:	4652      	mov	r2, sl
9000b390:	e7bd      	b.n	9000b30e <UpdateWatermark2+0x7e8>
9000b392:	9a05      	ldr	r2, [sp, #20]
9000b394:	2a00      	cmp	r2, #0
9000b396:	d17a      	bne.n	9000b48e <UpdateWatermark2+0x968>
9000b398:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b39c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b3a0:	dd75      	ble.n	9000b48e <UpdateWatermark2+0x968>
9000b3a2:	9a02      	ldr	r2, [sp, #8]
9000b3a4:	b92a      	cbnz	r2, 9000b3b2 <UpdateWatermark2+0x88c>
9000b3a6:	42a0      	cmp	r0, r4
9000b3a8:	f000 80d4 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b3ac:	2b01      	cmp	r3, #1
9000b3ae:	f000 80d1 	beq.w	9000b554 <UpdateWatermark2+0xa2e>
9000b3b2:	ee74 7aa7 	vadd.f32	s15, s9, s15
9000b3b6:	42a0      	cmp	r0, r4
9000b3b8:	ee76 6ac6 	vsub.f32	s13, s13, s12
9000b3bc:	eeb0 7a67 	vmov.f32	s14, s15
9000b3c0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b3c4:	ee17 ba10 	vmov	fp, s14
9000b3c8:	eeb0 7a66 	vmov.f32	s14, s13
9000b3cc:	44ab      	add	fp, r5
9000b3ce:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b3d2:	ee17 aa10 	vmov	sl, s14
9000b3d6:	fb07 6a0a 	mla	sl, r7, sl, r6
9000b3da:	d20c      	bcs.n	9000b3f6 <UpdateWatermark2+0x8d0>
9000b3dc:	f854 1c04 	ldr.w	r1, [r4, #-4]
9000b3e0:	6822      	ldr	r2, [r4, #0]
9000b3e2:	ebab 0101 	sub.w	r1, fp, r1
9000b3e6:	ebaa 0202 	sub.w	r2, sl, r2
9000b3ea:	3110      	adds	r1, #16
9000b3ec:	2920      	cmp	r1, #32
9000b3ee:	d802      	bhi.n	9000b3f6 <UpdateWatermark2+0x8d0>
9000b3f0:	3210      	adds	r2, #16
9000b3f2:	2a20      	cmp	r2, #32
9000b3f4:	d903      	bls.n	9000b3fe <UpdateWatermark2+0x8d8>
9000b3f6:	e9c4 ba01 	strd	fp, sl, [r4, #4]
9000b3fa:	3408      	adds	r4, #8
9000b3fc:	e702      	b.n	9000b204 <UpdateWatermark2+0x6de>
9000b3fe:	ee3b 2aa5 	vadd.f32	s4, s23, s11
9000b402:	ee7c 2a05 	vadd.f32	s5, s24, s10
9000b406:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9000b40a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b40e:	eef5 2ac0 	vcmpe.f32	s5, #0.0
9000b412:	bf4c      	ite	mi
9000b414:	eef1 1a42 	vnegmi.f32	s3, s4
9000b418:	eef0 1a42 	vmovpl.f32	s3, s4
9000b41c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b420:	bf4c      	ite	mi
9000b422:	eeb1 7a62 	vnegmi.f32	s14, s5
9000b426:	eeb0 7a62 	vmovpl.f32	s14, s5
9000b42a:	eef4 1ac7 	vcmpe.f32	s3, s14
9000b42e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b432:	dd1f      	ble.n	9000b474 <UpdateWatermark2+0x94e>
9000b434:	ee35 ca4c 	vsub.f32	s24, s10, s24
9000b438:	ee8c 7a02 	vdiv.f32	s14, s24, s4
9000b43c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b444:	d501      	bpl.n	9000b44a <UpdateWatermark2+0x924>
9000b446:	eeb1 7a47 	vneg.f32	s14, s14
9000b44a:	ee28 7ac7 	vnmul.f32	s14, s17, s14
9000b44e:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b452:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b456:	ee17 2a90 	vmov	r2, s15
9000b45a:	442a      	add	r2, r5
9000b45c:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b460:	f844 2c04 	str.w	r2, [r4, #-4]
9000b464:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000b468:	ee16 2a90 	vmov	r2, s13
9000b46c:	fb07 6202 	mla	r2, r7, r2, r6
9000b470:	6022      	str	r2, [r4, #0]
9000b472:	e6c7      	b.n	9000b204 <UpdateWatermark2+0x6de>
9000b474:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b47c:	dd04      	ble.n	9000b488 <UpdateWatermark2+0x962>
9000b47e:	ee75 baeb 	vsub.f32	s23, s11, s23
9000b482:	ee8b 7aa2 	vdiv.f32	s14, s23, s5
9000b486:	e7d9      	b.n	9000b43c <UpdateWatermark2+0x916>
9000b488:	ed1f 7a75 	vldr	s14, [pc, #-468]	; 9000b2b8 <UpdateWatermark2+0x792>
9000b48c:	e7dd      	b.n	9000b44a <UpdateWatermark2+0x924>
9000b48e:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b496:	d55d      	bpl.n	9000b554 <UpdateWatermark2+0xa2e>
9000b498:	9a02      	ldr	r2, [sp, #8]
9000b49a:	b91a      	cbnz	r2, 9000b4a4 <UpdateWatermark2+0x97e>
9000b49c:	42a0      	cmp	r0, r4
9000b49e:	d059      	beq.n	9000b554 <UpdateWatermark2+0xa2e>
9000b4a0:	2b01      	cmp	r3, #1
9000b4a2:	d057      	beq.n	9000b554 <UpdateWatermark2+0xa2e>
9000b4a4:	ee74 7aa7 	vadd.f32	s15, s9, s15
9000b4a8:	42a0      	cmp	r0, r4
9000b4aa:	ee76 6ac6 	vsub.f32	s13, s13, s12
9000b4ae:	eeb0 7a67 	vmov.f32	s14, s15
9000b4b2:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b4b6:	ee17 ba10 	vmov	fp, s14
9000b4ba:	eeb0 7a66 	vmov.f32	s14, s13
9000b4be:	44ab      	add	fp, r5
9000b4c0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b4c4:	ee17 aa10 	vmov	sl, s14
9000b4c8:	fb07 6a0a 	mla	sl, r7, sl, r6
9000b4cc:	d293      	bcs.n	9000b3f6 <UpdateWatermark2+0x8d0>
9000b4ce:	f854 1c04 	ldr.w	r1, [r4, #-4]
9000b4d2:	6822      	ldr	r2, [r4, #0]
9000b4d4:	ebab 0101 	sub.w	r1, fp, r1
9000b4d8:	ebaa 0202 	sub.w	r2, sl, r2
9000b4dc:	3110      	adds	r1, #16
9000b4de:	2920      	cmp	r1, #32
9000b4e0:	d889      	bhi.n	9000b3f6 <UpdateWatermark2+0x8d0>
9000b4e2:	3210      	adds	r2, #16
9000b4e4:	2a20      	cmp	r2, #32
9000b4e6:	d886      	bhi.n	9000b3f6 <UpdateWatermark2+0x8d0>
9000b4e8:	ee3b 2aa5 	vadd.f32	s4, s23, s11
9000b4ec:	ee7c 2a05 	vadd.f32	s5, s24, s10
9000b4f0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9000b4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b4f8:	eef5 2ac0 	vcmpe.f32	s5, #0.0
9000b4fc:	bf4c      	ite	mi
9000b4fe:	eef1 1a42 	vnegmi.f32	s3, s4
9000b502:	eef0 1a42 	vmovpl.f32	s3, s4
9000b506:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b50a:	bf4c      	ite	mi
9000b50c:	eeb1 7a62 	vnegmi.f32	s14, s5
9000b510:	eeb0 7a62 	vmovpl.f32	s14, s5
9000b514:	eef4 1ac7 	vcmpe.f32	s3, s14
9000b518:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b51c:	dd0d      	ble.n	9000b53a <UpdateWatermark2+0xa14>
9000b51e:	ee35 ca4c 	vsub.f32	s24, s10, s24
9000b522:	ee8c 7a02 	vdiv.f32	s14, s24, s4
9000b526:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b52a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b52e:	d501      	bpl.n	9000b534 <UpdateWatermark2+0xa0e>
9000b530:	eeb1 7a47 	vneg.f32	s14, s14
9000b534:	ee27 7a43 	vnmul.f32	s14, s14, s6
9000b538:	e789      	b.n	9000b44e <UpdateWatermark2+0x928>
9000b53a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9000b53e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b542:	dd04      	ble.n	9000b54e <UpdateWatermark2+0xa28>
9000b544:	ee75 baeb 	vsub.f32	s23, s11, s23
9000b548:	ee8b 7aa2 	vdiv.f32	s14, s23, s5
9000b54c:	e7eb      	b.n	9000b526 <UpdateWatermark2+0xa00>
9000b54e:	ed1f 7aa6 	vldr	s14, [pc, #-664]	; 9000b2b8 <UpdateWatermark2+0x792>
9000b552:	e7ef      	b.n	9000b534 <UpdateWatermark2+0xa0e>
9000b554:	ee74 7aa7 	vadd.f32	s15, s9, s15
9000b558:	ee76 6ac6 	vsub.f32	s13, s13, s12
9000b55c:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9000b560:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
9000b564:	ee17 2a90 	vmov	r2, s15
9000b568:	442a      	add	r2, r5
9000b56a:	6062      	str	r2, [r4, #4]
9000b56c:	ee16 2a90 	vmov	r2, s13
9000b570:	fb07 6202 	mla	r2, r7, r2, r6
9000b574:	60a2      	str	r2, [r4, #8]
9000b576:	e740      	b.n	9000b3fa <UpdateWatermark2+0x8d4>
9000b578:	9904      	ldr	r1, [sp, #16]
9000b57a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9000b57e:	f47f ae72 	bne.w	9000b266 <UpdateWatermark2+0x740>
9000b582:	2b00      	cmp	r3, #0
9000b584:	f43f ae5c 	beq.w	9000b240 <UpdateWatermark2+0x71a>
9000b588:	9903      	ldr	r1, [sp, #12]
9000b58a:	2903      	cmp	r1, #3
9000b58c:	f47f ae82 	bne.w	9000b294 <UpdateWatermark2+0x76e>
9000b590:	e66c      	b.n	9000b26c <UpdateWatermark2+0x746>
9000b592:	ee6a 7ac6 	vnmul.f32	s15, s21, s12
9000b596:	3401      	adds	r4, #1
9000b598:	ee26 6a0a 	vmul.f32	s12, s12, s20
9000b59c:	eee4 7a8a 	vfma.f32	s15, s9, s20
9000b5a0:	eea4 6aaa 	vfma.f32	s12, s9, s21
9000b5a4:	ee34 7a27 	vadd.f32	s14, s8, s15
9000b5a8:	eef0 4a67 	vmov.f32	s9, s15
9000b5ac:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b5b0:	ee17 1a10 	vmov	r1, s14
9000b5b4:	ee33 7a86 	vadd.f32	s14, s7, s12
9000b5b8:	4429      	add	r1, r5
9000b5ba:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
9000b5be:	f8ca 1004 	str.w	r1, [sl, #4]
9000b5c2:	ee17 1a10 	vmov	r1, s14
9000b5c6:	fb07 6101 	mla	r1, r7, r1, r6
9000b5ca:	f84a 1f08 	str.w	r1, [sl, #8]!
9000b5ce:	e658      	b.n	9000b282 <UpdateWatermark2+0x75c>
9000b5d0:	2b00      	cmp	r3, #0
9000b5d2:	f47f ae5f 	bne.w	9000b294 <UpdateWatermark2+0x76e>
9000b5d6:	6842      	ldr	r2, [r0, #4]
9000b5d8:	ed58 5a03 	vldr	s11, [r8, #-12]
9000b5dc:	ed18 5a02 	vldr	s10, [r8, #-8]
9000b5e0:	60e2      	str	r2, [r4, #12]
9000b5e2:	4622      	mov	r2, r4
9000b5e4:	6881      	ldr	r1, [r0, #8]
9000b5e6:	eef1 5a65 	vneg.f32	s11, s11
9000b5ea:	eeb1 5a45 	vneg.f32	s10, s10
9000b5ee:	f842 1f10 	str.w	r1, [r2, #16]!
9000b5f2:	1a12      	subs	r2, r2, r0
9000b5f4:	1092      	asrs	r2, r2, #2
9000b5f6:	3a02      	subs	r2, #2
9000b5f8:	1052      	asrs	r2, r2, #1
9000b5fa:	6002      	str	r2, [r0, #0]
9000b5fc:	f104 0014 	add.w	r0, r4, #20
9000b600:	4602      	mov	r2, r0
9000b602:	f1cc 0c00 	rsb	ip, ip, #0
9000b606:	4614      	mov	r4, r2
9000b608:	9a01      	ldr	r2, [sp, #4]
9000b60a:	eeb0 ca45 	vmov.f32	s24, s10
9000b60e:	eb02 02cc 	add.w	r2, r2, ip, lsl #3
9000b612:	eef0 ba65 	vmov.f32	s23, s11
9000b616:	eef0 6a63 	vmov.f32	s13, s7
9000b61a:	eef0 7a44 	vmov.f32	s15, s8
9000b61e:	9201      	str	r2, [sp, #4]
9000b620:	e574      	b.n	9000b10c <UpdateWatermark2+0x5e6>
9000b622:	9904      	ldr	r1, [sp, #16]
9000b624:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9000b628:	f47f ae22 	bne.w	9000b270 <UpdateWatermark2+0x74a>
9000b62c:	e7a9      	b.n	9000b582 <UpdateWatermark2+0xa5c>
9000b62e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000b632:	b091      	sub	sp, #68	; 0x44
9000b634:	4605      	mov	r5, r0
9000b636:	f8d0 b000 	ldr.w	fp, [r0]
9000b63a:	2210      	movs	r2, #16
9000b63c:	ae0c      	add	r6, sp, #48	; 0x30
9000b63e:	2100      	movs	r1, #0
9000b640:	4630      	mov	r0, r6
9000b642:	f022 fcc1 	bl	9002dfc8 <memset>
9000b646:	7c2f      	ldrb	r7, [r5, #16]
9000b648:	b9b7      	cbnz	r7, 9000b678 <UpdateWatermark2+0xb52>
9000b64a:	f105 033c 	add.w	r3, r5, #60	; 0x3c
9000b64e:	46b9      	mov	r9, r7
9000b650:	46ba      	mov	sl, r7
9000b652:	f10d 0820 	add.w	r8, sp, #32
9000b656:	9306      	str	r3, [sp, #24]
9000b658:	ab01      	add	r3, sp, #4
9000b65a:	9307      	str	r3, [sp, #28]
9000b65c:	f1bb 0f00 	cmp.w	fp, #0
9000b660:	dc0d      	bgt.n	9000b67e <UpdateWatermark2+0xb58>
9000b662:	f105 0414 	add.w	r4, r5, #20
9000b666:	60ef      	str	r7, [r5, #12]
9000b668:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9000b66c:	e9c5 a901 	strd	sl, r9, [r5, #4]
9000b670:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000b674:	2301      	movs	r3, #1
9000b676:	742b      	strb	r3, [r5, #16]
9000b678:	b011      	add	sp, #68	; 0x44
9000b67a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000b67e:	9b06      	ldr	r3, [sp, #24]
9000b680:	f853 4f04 	ldr.w	r4, [r3, #4]!
9000b684:	9306      	str	r3, [sp, #24]
9000b686:	2c00      	cmp	r4, #0
9000b688:	d04a      	beq.n	9000b720 <UpdateWatermark2+0xbfa>
9000b68a:	7ae3      	ldrb	r3, [r4, #11]
9000b68c:	bb6b      	cbnz	r3, 9000b6ea <UpdateWatermark2+0xbc4>
9000b68e:	6863      	ldr	r3, [r4, #4]
9000b690:	2b00      	cmp	r3, #0
9000b692:	d045      	beq.n	9000b720 <UpdateWatermark2+0xbfa>
9000b694:	edd4 6a07 	vldr	s13, [r4, #28]
9000b698:	f104 022c 	add.w	r2, r4, #44	; 0x2c
9000b69c:	ed94 6a08 	vldr	s12, [r4, #32]
9000b6a0:	eeb0 7a66 	vmov.f32	s14, s13
9000b6a4:	eef0 7a46 	vmov.f32	s15, s12
9000b6a8:	2b00      	cmp	r3, #0
9000b6aa:	dc3c      	bgt.n	9000b726 <UpdateWatermark2+0xc00>
9000b6ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9000b6b0:	4640      	mov	r0, r8
9000b6b2:	eebd 7ac7 	vcvt.s32.f32	s14, s14
9000b6b6:	ee17 2a90 	vmov	r2, s15
9000b6ba:	eefd 7ac6 	vcvt.s32.f32	s15, s12
9000b6be:	ee17 3a10 	vmov	r3, s14
9000b6c2:	3201      	adds	r2, #1
9000b6c4:	3301      	adds	r3, #1
9000b6c6:	9200      	str	r2, [sp, #0]
9000b6c8:	ee17 2a90 	vmov	r2, s15
9000b6cc:	eefd 7ae6 	vcvt.s32.f32	s15, s13
9000b6d0:	ee17 1a90 	vmov	r1, s15
9000b6d4:	f012 ffd2 	bl	9001e67c <EwNewRect>
9000b6d8:	f104 0c0c 	add.w	ip, r4, #12
9000b6dc:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
9000b6e0:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
9000b6e4:	f04f 0301 	mov.w	r3, #1
9000b6e8:	72e3      	strb	r3, [r4, #11]
9000b6ea:	7a63      	ldrb	r3, [r4, #9]
9000b6ec:	340c      	adds	r4, #12
9000b6ee:	2b00      	cmp	r3, #0
9000b6f0:	bf18      	it	ne
9000b6f2:	f10a 0a01 	addne.w	sl, sl, #1
9000b6f6:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9000b6fa:	2b00      	cmp	r3, #0
9000b6fc:	bf18      	it	ne
9000b6fe:	f109 0901 	addne.w	r9, r9, #1
9000b702:	f854 3c08 	ldr.w	r3, [r4, #-8]
9000b706:	441f      	add	r7, r3
9000b708:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
9000b70c:	9c07      	ldr	r4, [sp, #28]
9000b70e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000b712:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000b714:	4630      	mov	r0, r6
9000b716:	9300      	str	r3, [sp, #0]
9000b718:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
9000b71c:	f013 f86b 	bl	9001e7f6 <EwUnionRect>
9000b720:	f10b 3bff 	add.w	fp, fp, #4294967295
9000b724:	e79a      	b.n	9000b65c <UpdateWatermark2+0xb36>
9000b726:	ed52 5a02 	vldr	s11, [r2, #-8]
9000b72a:	3b01      	subs	r3, #1
9000b72c:	3208      	adds	r2, #8
9000b72e:	eef4 5a66 	vcmp.f32	s11, s13
9000b732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b736:	eef4 5a47 	vcmp.f32	s11, s14
9000b73a:	bf48      	it	mi
9000b73c:	eef0 6a65 	vmovmi.f32	s13, s11
9000b740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b744:	fe35 7a87 	vselgt.f32	s14, s11, s14
9000b748:	ed52 5a03 	vldr	s11, [r2, #-12]
9000b74c:	eef4 5a46 	vcmp.f32	s11, s12
9000b750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b754:	eef4 5a67 	vcmp.f32	s11, s15
9000b758:	bf48      	it	mi
9000b75a:	eeb0 6a65 	vmovmi.f32	s12, s11
9000b75e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000b762:	fe75 7aa7 	vselgt.f32	s15, s11, s15
9000b766:	e79f      	b.n	9000b6a8 <UpdateWatermark2+0xb82>
9000b768:	b5f0      	push	{r4, r5, r6, r7, lr}
9000b76a:	2300      	movs	r3, #0
9000b76c:	b097      	sub	sp, #92	; 0x5c
9000b76e:	4606      	mov	r6, r0
9000b770:	460d      	mov	r5, r1
9000b772:	9309      	str	r3, [sp, #36]	; 0x24
9000b774:	e9cd 3305 	strd	r3, r3, [sp, #20]
9000b778:	e9cd 3307 	strd	r3, r3, [sp, #28]
9000b77c:	f240 631c 	movw	r3, #1564	; 0x61c
9000b780:	4299      	cmp	r1, r3
9000b782:	d038      	beq.n	9000b7f6 <UpdateWatermark2+0xcd0>
9000b784:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9000b788:	f1a3 020b 	sub.w	r2, r3, #11
9000b78c:	b292      	uxth	r2, r2
9000b78e:	2a04      	cmp	r2, #4
9000b790:	d931      	bls.n	9000b7f6 <UpdateWatermark2+0xcd0>
9000b792:	3b2a      	subs	r3, #42	; 0x2a
9000b794:	b29b      	uxth	r3, r3
9000b796:	2b04      	cmp	r3, #4
9000b798:	d92d      	bls.n	9000b7f6 <UpdateWatermark2+0xcd0>
9000b79a:	f5a1 5301 	sub.w	r3, r1, #8256	; 0x2040
9000b79e:	f64f 67ff 	movw	r7, #65279	; 0xfeff
9000b7a2:	3b26      	subs	r3, #38	; 0x26
9000b7a4:	2b03      	cmp	r3, #3
9000b7a6:	d902      	bls.n	9000b7ae <UpdateWatermark2+0xc88>
9000b7a8:	290a      	cmp	r1, #10
9000b7aa:	bf18      	it	ne
9000b7ac:	460f      	movne	r7, r1
9000b7ae:	4639      	mov	r1, r7
9000b7b0:	6930      	ldr	r0, [r6, #16]
9000b7b2:	f00c f841 	bl	90017838 <EwFindGlyph>
9000b7b6:	4601      	mov	r1, r0
9000b7b8:	2800      	cmp	r0, #0
9000b7ba:	f040 808a 	bne.w	9000b8d2 <UpdateWatermark2+0xdac>
9000b7be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9000b7c2:	429f      	cmp	r7, r3
9000b7c4:	d01a      	beq.n	9000b7fc <UpdateWatermark2+0xcd6>
9000b7c6:	ac09      	add	r4, sp, #36	; 0x24
9000b7c8:	2d00      	cmp	r5, #0
9000b7ca:	d038      	beq.n	9000b83e <UpdateWatermark2+0xd18>
9000b7cc:	ab06      	add	r3, sp, #24
9000b7ce:	aa07      	add	r2, sp, #28
9000b7d0:	4629      	mov	r1, r5
9000b7d2:	6970      	ldr	r0, [r6, #20]
9000b7d4:	9301      	str	r3, [sp, #4]
9000b7d6:	ab05      	add	r3, sp, #20
9000b7d8:	9402      	str	r4, [sp, #8]
9000b7da:	9300      	str	r3, [sp, #0]
9000b7dc:	ab08      	add	r3, sp, #32
9000b7de:	f010 fd85 	bl	9001c2ec <EwFntGetGlyphMetrics>
9000b7e2:	bb60      	cbnz	r0, 9000b83e <UpdateWatermark2+0xd18>
9000b7e4:	2dad      	cmp	r5, #173	; 0xad
9000b7e6:	d03d      	beq.n	9000b864 <UpdateWatermark2+0xd3e>
9000b7e8:	2da0      	cmp	r5, #160	; 0xa0
9000b7ea:	d10f      	bne.n	9000b80c <UpdateWatermark2+0xce6>
9000b7ec:	2120      	movs	r1, #32
9000b7ee:	4630      	mov	r0, r6
9000b7f0:	f7ff ffba 	bl	9000b768 <UpdateWatermark2+0xc42>
9000b7f4:	e006      	b.n	9000b804 <UpdateWatermark2+0xcde>
9000b7f6:	f64f 67ff 	movw	r7, #65279	; 0xfeff
9000b7fa:	e7d8      	b.n	9000b7ae <UpdateWatermark2+0xc88>
9000b7fc:	463b      	mov	r3, r7
9000b7fe:	6932      	ldr	r2, [r6, #16]
9000b800:	f00b feef 	bl	900175e2 <EwCreateGlyph>
9000b804:	4604      	mov	r4, r0
9000b806:	4620      	mov	r0, r4
9000b808:	b017      	add	sp, #92	; 0x5c
9000b80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000b80c:	2d20      	cmp	r5, #32
9000b80e:	d106      	bne.n	9000b81e <UpdateWatermark2+0xcf8>
9000b810:	462a      	mov	r2, r5
9000b812:	69b1      	ldr	r1, [r6, #24]
9000b814:	20b4      	movs	r0, #180	; 0xb4
9000b816:	f011 fe29 	bl	9001d46c <EwErrorSD>
9000b81a:	89b5      	ldrh	r5, [r6, #12]
9000b81c:	e7d4      	b.n	9000b7c8 <UpdateWatermark2+0xca2>
9000b81e:	89b3      	ldrh	r3, [r6, #12]
9000b820:	42ab      	cmp	r3, r5
9000b822:	d006      	beq.n	9000b832 <UpdateWatermark2+0xd0c>
9000b824:	69b1      	ldr	r1, [r6, #24]
9000b826:	462a      	mov	r2, r5
9000b828:	20b4      	movs	r0, #180	; 0xb4
9000b82a:	f011 fe1f 	bl	9001d46c <EwErrorSD>
9000b82e:	89b1      	ldrh	r1, [r6, #12]
9000b830:	e7dd      	b.n	9000b7ee <UpdateWatermark2+0xcc8>
9000b832:	4605      	mov	r5, r0
9000b834:	9009      	str	r0, [sp, #36]	; 0x24
9000b836:	e9cd 0007 	strd	r0, r0, [sp, #28]
9000b83a:	e9cd 0005 	strd	r0, r0, [sp, #20]
9000b83e:	9805      	ldr	r0, [sp, #20]
9000b840:	4b25      	ldr	r3, [pc, #148]	; (9000b8d8 <UpdateWatermark2+0xdb2>)
9000b842:	1c42      	adds	r2, r0, #1
9000b844:	681b      	ldr	r3, [r3, #0]
9000b846:	429a      	cmp	r2, r3
9000b848:	da05      	bge.n	9000b856 <UpdateWatermark2+0xd30>
9000b84a:	9906      	ldr	r1, [sp, #24]
9000b84c:	4b23      	ldr	r3, [pc, #140]	; (9000b8dc <UpdateWatermark2+0xdb6>)
9000b84e:	1c4a      	adds	r2, r1, #1
9000b850:	681b      	ldr	r3, [r3, #0]
9000b852:	429a      	cmp	r2, r3
9000b854:	db08      	blt.n	9000b868 <UpdateWatermark2+0xd42>
9000b856:	463a      	mov	r2, r7
9000b858:	69b1      	ldr	r1, [r6, #24]
9000b85a:	2094      	movs	r0, #148	; 0x94
9000b85c:	f011 fe06 	bl	9001d46c <EwErrorSD>
9000b860:	2400      	movs	r4, #0
9000b862:	e7d0      	b.n	9000b806 <UpdateWatermark2+0xce0>
9000b864:	252d      	movs	r5, #45	; 0x2d
9000b866:	e7b1      	b.n	9000b7cc <UpdateWatermark2+0xca6>
9000b868:	463b      	mov	r3, r7
9000b86a:	6932      	ldr	r2, [r6, #16]
9000b86c:	f00b feb9 	bl	900175e2 <EwCreateGlyph>
9000b870:	4604      	mov	r4, r0
9000b872:	2800      	cmp	r0, #0
9000b874:	d0c7      	beq.n	9000b806 <UpdateWatermark2+0xce0>
9000b876:	2d00      	cmp	r5, #0
9000b878:	d0c5      	beq.n	9000b806 <UpdateWatermark2+0xce0>
9000b87a:	9b07      	ldr	r3, [sp, #28]
9000b87c:	aa0a      	add	r2, sp, #40	; 0x28
9000b87e:	2182      	movs	r1, #130	; 0x82
9000b880:	8403      	strh	r3, [r0, #32]
9000b882:	9b08      	ldr	r3, [sp, #32]
9000b884:	8443      	strh	r3, [r0, #34]	; 0x22
9000b886:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000b888:	8483      	strh	r3, [r0, #36]	; 0x24
9000b88a:	f00c fa0f 	bl	90017cac <EwLockGlyphCache>
9000b88e:	b1d0      	cbz	r0, 9000b8c6 <UpdateWatermark2+0xda0>
9000b890:	aa0a      	add	r2, sp, #40	; 0x28
9000b892:	4629      	mov	r1, r5
9000b894:	6970      	ldr	r0, [r6, #20]
9000b896:	f010 fdec 	bl	9001c472 <EwFntLoadGlyph>
9000b89a:	b978      	cbnz	r0, 9000b8bc <UpdateWatermark2+0xd96>
9000b89c:	463a      	mov	r2, r7
9000b89e:	69b1      	ldr	r1, [r6, #24]
9000b8a0:	20b8      	movs	r0, #184	; 0xb8
9000b8a2:	f011 fde3 	bl	9001d46c <EwErrorSD>
9000b8a6:	a90a      	add	r1, sp, #40	; 0x28
9000b8a8:	4620      	mov	r0, r4
9000b8aa:	f00b fff0 	bl	9001788e <EwUnlockGlyphCache>
9000b8ae:	4620      	mov	r0, r4
9000b8b0:	f00b ffe4 	bl	9001787c <EwFreeGlyph>
9000b8b4:	4620      	mov	r0, r4
9000b8b6:	f00b ffe5 	bl	90017884 <EwDiscardGlyph>
9000b8ba:	e7d1      	b.n	9000b860 <UpdateWatermark2+0xd3a>
9000b8bc:	a90a      	add	r1, sp, #40	; 0x28
9000b8be:	4620      	mov	r0, r4
9000b8c0:	f00b ffe5 	bl	9001788e <EwUnlockGlyphCache>
9000b8c4:	e79f      	b.n	9000b806 <UpdateWatermark2+0xce0>
9000b8c6:	463a      	mov	r2, r7
9000b8c8:	69b1      	ldr	r1, [r6, #24]
9000b8ca:	20b9      	movs	r0, #185	; 0xb9
9000b8cc:	f011 fdce 	bl	9001d46c <EwErrorSD>
9000b8d0:	e799      	b.n	9000b806 <UpdateWatermark2+0xce0>
9000b8d2:	4604      	mov	r4, r0
9000b8d4:	e797      	b.n	9000b806 <UpdateWatermark2+0xce0>
9000b8d6:	bf00      	nop
9000b8d8:	2000001c 	.word	0x2000001c
9000b8dc:	20000020 	.word	0x20000020
9000b8e0:	b510      	push	{r4, lr}
9000b8e2:	b158      	cbz	r0, 9000b8fc <UpdateWatermark2+0xdd6>
9000b8e4:	4602      	mov	r2, r0
9000b8e6:	4c08      	ldr	r4, [pc, #32]	; (9000b908 <UpdateWatermark2+0xde2>)
9000b8e8:	4610      	mov	r0, r2
9000b8ea:	f832 1b02 	ldrh.w	r1, [r2], #2
9000b8ee:	f1a1 0309 	sub.w	r3, r1, #9
9000b8f2:	b29b      	uxth	r3, r3
9000b8f4:	2b17      	cmp	r3, #23
9000b8f6:	d902      	bls.n	9000b8fe <UpdateWatermark2+0xdd8>
9000b8f8:	292c      	cmp	r1, #44	; 0x2c
9000b8fa:	d0f5      	beq.n	9000b8e8 <UpdateWatermark2+0xdc2>
9000b8fc:	bd10      	pop	{r4, pc}
9000b8fe:	fa24 f303 	lsr.w	r3, r4, r3
9000b902:	07db      	lsls	r3, r3, #31
9000b904:	d4f0      	bmi.n	9000b8e8 <UpdateWatermark2+0xdc2>
9000b906:	e7f9      	b.n	9000b8fc <UpdateWatermark2+0xdd6>
9000b908:	0080001b 	.word	0x0080001b
9000b90c:	b538      	push	{r3, r4, r5, lr}
9000b90e:	4604      	mov	r4, r0
9000b910:	6800      	ldr	r0, [r0, #0]
9000b912:	460d      	mov	r5, r1
9000b914:	f7ff ffe4 	bl	9000b8e0 <UpdateWatermark2+0xdba>
9000b918:	b178      	cbz	r0, 9000b93a <UpdateWatermark2+0xe14>
9000b91a:	8803      	ldrh	r3, [r0, #0]
9000b91c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
9000b920:	2a01      	cmp	r2, #1
9000b922:	d80b      	bhi.n	9000b93c <UpdateWatermark2+0xe16>
9000b924:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
9000b928:	1c82      	adds	r2, r0, #2
9000b92a:	424b      	negs	r3, r1
9000b92c:	414b      	adcs	r3, r1
9000b92e:	602b      	str	r3, [r5, #0]
9000b930:	4282      	cmp	r2, r0
9000b932:	6022      	str	r2, [r4, #0]
9000b934:	bf94      	ite	ls
9000b936:	2000      	movls	r0, #0
9000b938:	2001      	movhi	r0, #1
9000b93a:	bd38      	pop	{r3, r4, r5, pc}
9000b93c:	4602      	mov	r2, r0
9000b93e:	e7f7      	b.n	9000b930 <UpdateWatermark2+0xe0a>
9000b940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000b942:	4604      	mov	r4, r0
9000b944:	6800      	ldr	r0, [r0, #0]
9000b946:	460d      	mov	r5, r1
9000b948:	ed2d 8b02 	vpush	{d8}
9000b94c:	f7ff ffc8 	bl	9000b8e0 <UpdateWatermark2+0xdba>
9000b950:	2800      	cmp	r0, #0
9000b952:	f000 808e 	beq.w	9000ba72 <UpdateWatermark2+0xf4c>
9000b956:	8803      	ldrh	r3, [r0, #0]
9000b958:	2b2b      	cmp	r3, #43	; 0x2b
9000b95a:	d001      	beq.n	9000b960 <UpdateWatermark2+0xe3a>
9000b95c:	2b2d      	cmp	r3, #45	; 0x2d
9000b95e:	d137      	bne.n	9000b9d0 <UpdateWatermark2+0xeaa>
9000b960:	2b2d      	cmp	r3, #45	; 0x2d
9000b962:	f100 0202 	add.w	r2, r0, #2
9000b966:	bf0c      	ite	eq
9000b968:	f04f 37ff 	moveq.w	r7, #4294967295
9000b96c:	2701      	movne	r7, #1
9000b96e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
9000b972:	2300      	movs	r3, #0
9000b974:	ed9f 8a40 	vldr	s16, [pc, #256]	; 9000ba78 <UpdateWatermark2+0xf52>
9000b978:	e008      	b.n	9000b98c <UpdateWatermark2+0xe66>
9000b97a:	ee07 6a90 	vmov	s15, r6
9000b97e:	3301      	adds	r3, #1
9000b980:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b984:	eee8 7a07 	vfma.f32	s15, s16, s14
9000b988:	eeb0 8a67 	vmov.f32	s16, s15
9000b98c:	4611      	mov	r1, r2
9000b98e:	f832 cb02 	ldrh.w	ip, [r2], #2
9000b992:	f1ac 0630 	sub.w	r6, ip, #48	; 0x30
9000b996:	fa1f fe86 	uxth.w	lr, r6
9000b99a:	f1be 0f09 	cmp.w	lr, #9
9000b99e:	d9ec      	bls.n	9000b97a <UpdateWatermark2+0xe54>
9000b9a0:	ed9f 7a36 	vldr	s14, [pc, #216]	; 9000ba7c <UpdateWatermark2+0xf56>
9000b9a4:	f1bc 0f2e 	cmp.w	ip, #46	; 0x2e
9000b9a8:	bf18      	it	ne
9000b9aa:	460a      	movne	r2, r1
9000b9ac:	eef0 6a47 	vmov.f32	s13, s14
9000b9b0:	4616      	mov	r6, r2
9000b9b2:	f832 1b02 	ldrh.w	r1, [r2], #2
9000b9b6:	f1a1 0c30 	sub.w	ip, r1, #48	; 0x30
9000b9ba:	fa1f fe8c 	uxth.w	lr, ip
9000b9be:	f1be 0f09 	cmp.w	lr, #9
9000b9c2:	d908      	bls.n	9000b9d6 <UpdateWatermark2+0xeb0>
9000b9c4:	b98b      	cbnz	r3, 9000b9ea <UpdateWatermark2+0xec4>
9000b9c6:	6020      	str	r0, [r4, #0]
9000b9c8:	4618      	mov	r0, r3
9000b9ca:	ecbd 8b02 	vpop	{d8}
9000b9ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000b9d0:	4602      	mov	r2, r0
9000b9d2:	2701      	movs	r7, #1
9000b9d4:	e7cb      	b.n	9000b96e <UpdateWatermark2+0xe48>
9000b9d6:	ee07 ca90 	vmov	s15, ip
9000b9da:	3301      	adds	r3, #1
9000b9dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b9e0:	eea7 8a87 	vfma.f32	s16, s15, s14
9000b9e4:	ee27 7a26 	vmul.f32	s14, s14, s13
9000b9e8:	e7e2      	b.n	9000b9b0 <UpdateWatermark2+0xe8a>
9000b9ea:	f021 0120 	bic.w	r1, r1, #32
9000b9ee:	2945      	cmp	r1, #69	; 0x45
9000b9f0:	d131      	bne.n	9000ba56 <UpdateWatermark2+0xf30>
9000b9f2:	8873      	ldrh	r3, [r6, #2]
9000b9f4:	2b2b      	cmp	r3, #43	; 0x2b
9000b9f6:	d001      	beq.n	9000b9fc <UpdateWatermark2+0xed6>
9000b9f8:	2b2d      	cmp	r3, #45	; 0x2d
9000b9fa:	d136      	bne.n	9000ba6a <UpdateWatermark2+0xf44>
9000b9fc:	2b2d      	cmp	r3, #45	; 0x2d
9000b9fe:	f106 0104 	add.w	r1, r6, #4
9000ba02:	bf0c      	ite	eq
9000ba04:	f04f 3cff 	moveq.w	ip, #4294967295
9000ba08:	f04f 0c01 	movne.w	ip, #1
9000ba0c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
9000ba10:	2300      	movs	r3, #0
9000ba12:	eddf 0a19 	vldr	s1, [pc, #100]	; 9000ba78 <UpdateWatermark2+0xf52>
9000ba16:	e008      	b.n	9000ba2a <UpdateWatermark2+0xf04>
9000ba18:	ee07 2a90 	vmov	s15, r2
9000ba1c:	3301      	adds	r3, #1
9000ba1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ba22:	eee0 7a87 	vfma.f32	s15, s1, s14
9000ba26:	eef0 0a67 	vmov.f32	s1, s15
9000ba2a:	460e      	mov	r6, r1
9000ba2c:	f831 2b02 	ldrh.w	r2, [r1], #2
9000ba30:	3a30      	subs	r2, #48	; 0x30
9000ba32:	fa1f fe82 	uxth.w	lr, r2
9000ba36:	f1be 0f09 	cmp.w	lr, #9
9000ba3a:	d9ed      	bls.n	9000ba18 <UpdateWatermark2+0xef2>
9000ba3c:	2b00      	cmp	r3, #0
9000ba3e:	d0c2      	beq.n	9000b9c6 <UpdateWatermark2+0xea0>
9000ba40:	f1bc 3fff 	cmp.w	ip, #4294967295
9000ba44:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
9000ba48:	bf08      	it	eq
9000ba4a:	eef1 0a60 	vnegeq.f32	s1, s1
9000ba4e:	f01b f98f 	bl	90026d70 <EwMathPow>
9000ba52:	ee28 8a00 	vmul.f32	s16, s16, s0
9000ba56:	3701      	adds	r7, #1
9000ba58:	6026      	str	r6, [r4, #0]
9000ba5a:	f04f 0301 	mov.w	r3, #1
9000ba5e:	bf08      	it	eq
9000ba60:	eeb1 8a48 	vnegeq.f32	s16, s16
9000ba64:	ed85 8a00 	vstr	s16, [r5]
9000ba68:	e7ae      	b.n	9000b9c8 <UpdateWatermark2+0xea2>
9000ba6a:	1cb1      	adds	r1, r6, #2
9000ba6c:	f04f 0c01 	mov.w	ip, #1
9000ba70:	e7cc      	b.n	9000ba0c <UpdateWatermark2+0xee6>
9000ba72:	4603      	mov	r3, r0
9000ba74:	e7a8      	b.n	9000b9c8 <UpdateWatermark2+0xea2>
9000ba76:	bf00      	nop
9000ba78:	00000000 	.word	0x00000000
9000ba7c:	3dcccccd 	.word	0x3dcccccd

9000ba80 <UpdateWatermark1>:
9000ba80:	b537      	push	{r0, r1, r2, r4, r5, lr}
9000ba82:	4d17      	ldr	r5, [pc, #92]	; (9000bae0 <UpdateWatermark1+0x60>)
9000ba84:	ab02      	add	r3, sp, #8
9000ba86:	4614      	mov	r4, r2
9000ba88:	e903 0003 	stmdb	r3, {r0, r1}
9000ba8c:	f01b f938 	bl	90026d00 <EwGetTicks>
9000ba90:	682b      	ldr	r3, [r5, #0]
9000ba92:	4283      	cmp	r3, r0
9000ba94:	bf38      	it	cc
9000ba96:	f04f 34ff 	movcc.w	r4, #4294967295
9000ba9a:	68eb      	ldr	r3, [r5, #12]
9000ba9c:	1c5a      	adds	r2, r3, #1
9000ba9e:	60ea      	str	r2, [r5, #12]
9000baa0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
9000baa4:	4354      	muls	r4, r2
9000baa6:	42a3      	cmp	r3, r4
9000baa8:	dd18      	ble.n	9000badc <UpdateWatermark1+0x5c>
9000baaa:	f64e 2460 	movw	r4, #60000	; 0xea60
9000baae:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
9000bab2:	f640 30b8 	movw	r0, #3000	; 0xbb8
9000bab6:	f01b f95d 	bl	90026d74 <EwMathRandInt32>
9000baba:	4284      	cmp	r4, r0
9000babc:	bfa8      	it	ge
9000babe:	4604      	movge	r4, r0
9000bac0:	f01b f91e 	bl	90026d00 <EwGetTicks>
9000bac4:	4b07      	ldr	r3, [pc, #28]	; (9000bae4 <UpdateWatermark1+0x64>)
9000bac6:	4a08      	ldr	r2, [pc, #32]	; (9000bae8 <UpdateWatermark1+0x68>)
9000bac8:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
9000bacc:	bfac      	ite	ge
9000bace:	1900      	addge	r0, r0, r4
9000bad0:	f500 60fa 	addlt.w	r0, r0, #2000	; 0x7d0
9000bad4:	601a      	str	r2, [r3, #0]
9000bad6:	2300      	movs	r3, #0
9000bad8:	6028      	str	r0, [r5, #0]
9000bada:	60eb      	str	r3, [r5, #12]
9000badc:	b003      	add	sp, #12
9000bade:	bd30      	pop	{r4, r5, pc}
9000bae0:	200000c8 	.word	0x200000c8
9000bae4:	20000000 	.word	0x20000000
9000bae8:	9000ab27 	.word	0x9000ab27
9000baec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000baf0:	4604      	mov	r4, r0
9000baf2:	b0b1      	sub	sp, #196	; 0xc4
9000baf4:	b178      	cbz	r0, 9000bb16 <UpdateWatermark1+0x96>
9000baf6:	2900      	cmp	r1, #0
9000baf8:	f2c0 81e7 	blt.w	9000beca <UpdateWatermark1+0x44a>
9000bafc:	6943      	ldr	r3, [r0, #20]
9000bafe:	428b      	cmp	r3, r1
9000bb00:	f340 81e3 	ble.w	9000beca <UpdateWatermark1+0x44a>
9000bb04:	6983      	ldr	r3, [r0, #24]
9000bb06:	b153      	cbz	r3, 9000bb1e <UpdateWatermark1+0x9e>
9000bb08:	f833 3011 	ldrh.w	r3, [r3, r1, lsl #1]
9000bb0c:	6922      	ldr	r2, [r4, #16]
9000bb0e:	429a      	cmp	r2, r3
9000bb10:	dc07      	bgt.n	9000bb22 <UpdateWatermark1+0xa2>
9000bb12:	2500      	movs	r5, #0
9000bb14:	462c      	mov	r4, r5
9000bb16:	4620      	mov	r0, r4
9000bb18:	b031      	add	sp, #196	; 0xc4
9000bb1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000bb1e:	460b      	mov	r3, r1
9000bb20:	e7f4      	b.n	9000bb0c <UpdateWatermark1+0x8c>
9000bb22:	221c      	movs	r2, #28
9000bb24:	4353      	muls	r3, r2
9000bb26:	930c      	str	r3, [sp, #48]	; 0x30
9000bb28:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000bb2a:	6a23      	ldr	r3, [r4, #32]
9000bb2c:	930d      	str	r3, [sp, #52]	; 0x34
9000bb2e:	4413      	add	r3, r2
9000bb30:	9307      	str	r3, [sp, #28]
9000bb32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000bb34:	589d      	ldr	r5, [r3, r2]
9000bb36:	b9a5      	cbnz	r5, 9000bb62 <UpdateWatermark1+0xe2>
9000bb38:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000bb3a:	950a      	str	r5, [sp, #40]	; 0x28
9000bb3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000bb3e:	4293      	cmp	r3, r2
9000bb40:	da18      	bge.n	9000bb74 <UpdateWatermark1+0xf4>
9000bb42:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bb44:	980a      	ldr	r0, [sp, #40]	; 0x28
9000bb46:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
9000bb4a:	b97b      	cbnz	r3, 9000bb6c <UpdateWatermark1+0xec>
9000bb4c:	69e0      	ldr	r0, [r4, #28]
9000bb4e:	2800      	cmp	r0, #0
9000bb50:	d043      	beq.n	9000bbda <UpdateWatermark1+0x15a>
9000bb52:	f010 f98c 	bl	9001be6e <EwBmpOpen>
9000bb56:	4682      	mov	sl, r0
9000bb58:	b9a0      	cbnz	r0, 9000bb84 <UpdateWatermark1+0x104>
9000bb5a:	4602      	mov	r2, r0
9000bb5c:	69e1      	ldr	r1, [r4, #28]
9000bb5e:	2084      	movs	r0, #132	; 0x84
9000bb60:	e00d      	b.n	9000bb7e <UpdateWatermark1+0xfe>
9000bb62:	4ba9      	ldr	r3, [pc, #676]	; (9000be08 <UpdateWatermark1+0x388>)
9000bb64:	6a1b      	ldr	r3, [r3, #32]
9000bb66:	632b      	str	r3, [r5, #48]	; 0x30
9000bb68:	9d07      	ldr	r5, [sp, #28]
9000bb6a:	e7d3      	b.n	9000bb14 <UpdateWatermark1+0x94>
9000bb6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000bb6e:	3301      	adds	r3, #1
9000bb70:	930a      	str	r3, [sp, #40]	; 0x28
9000bb72:	e7e3      	b.n	9000bb3c <UpdateWatermark1+0xbc>
9000bb74:	d1ea      	bne.n	9000bb4c <UpdateWatermark1+0xcc>
9000bb76:	460a      	mov	r2, r1
9000bb78:	f44f 709f 	mov.w	r0, #318	; 0x13e
9000bb7c:	69e1      	ldr	r1, [r4, #28]
9000bb7e:	f011 fc7d 	bl	9001d47c <EwErrorPD>
9000bb82:	e7c7      	b.n	9000bb14 <UpdateWatermark1+0x94>
9000bb84:	aa11      	add	r2, sp, #68	; 0x44
9000bb86:	2100      	movs	r1, #0
9000bb88:	f010 fa06 	bl	9001bf98 <EwBmpGetFrameMemory>
9000bb8c:	1e03      	subs	r3, r0, #0
9000bb8e:	bf18      	it	ne
9000bb90:	2301      	movne	r3, #1
9000bb92:	9308      	str	r3, [sp, #32]
9000bb94:	f04f 0e1c 	mov.w	lr, #28
9000bb98:	f8d4 9020 	ldr.w	r9, [r4, #32]
9000bb9c:	6923      	ldr	r3, [r4, #16]
9000bb9e:	9a07      	ldr	r2, [sp, #28]
9000bba0:	fb0e 9303 	mla	r3, lr, r3, r9
9000bba4:	f8d4 b000 	ldr.w	fp, [r4]
9000bba8:	6892      	ldr	r2, [r2, #8]
9000bbaa:	f1a3 0e1c 	sub.w	lr, r3, #28
9000bbae:	9b07      	ldr	r3, [sp, #28]
9000bbb0:	4616      	mov	r6, r2
9000bbb2:	9f07      	ldr	r7, [sp, #28]
9000bbb4:	685b      	ldr	r3, [r3, #4]
9000bbb6:	469c      	mov	ip, r3
9000bbb8:	45b9      	cmp	r9, r7
9000bbba:	d20b      	bcs.n	9000bbd4 <UpdateWatermark1+0x154>
9000bbbc:	9808      	ldr	r0, [sp, #32]
9000bbbe:	b920      	cbnz	r0, 9000bbca <UpdateWatermark1+0x14a>
9000bbc0:	687d      	ldr	r5, [r7, #4]
9000bbc2:	f857 0c18 	ldr.w	r0, [r7, #-24]
9000bbc6:	4285      	cmp	r5, r0
9000bbc8:	dc0a      	bgt.n	9000bbe0 <UpdateWatermark1+0x160>
9000bbca:	68bd      	ldr	r5, [r7, #8]
9000bbcc:	f857 0c14 	ldr.w	r0, [r7, #-20]
9000bbd0:	4285      	cmp	r5, r0
9000bbd2:	dc05      	bgt.n	9000bbe0 <UpdateWatermark1+0x160>
9000bbd4:	9807      	ldr	r0, [sp, #28]
9000bbd6:	9006      	str	r0, [sp, #24]
9000bbd8:	e023      	b.n	9000bc22 <UpdateWatermark1+0x1a2>
9000bbda:	4682      	mov	sl, r0
9000bbdc:	9008      	str	r0, [sp, #32]
9000bbde:	e7d9      	b.n	9000bb94 <UpdateWatermark1+0x114>
9000bbe0:	f857 5c18 	ldr.w	r5, [r7, #-24]
9000bbe4:	3f1c      	subs	r7, #28
9000bbe6:	68b8      	ldr	r0, [r7, #8]
9000bbe8:	42ab      	cmp	r3, r5
9000bbea:	bfa8      	it	ge
9000bbec:	462b      	movge	r3, r5
9000bbee:	4282      	cmp	r2, r0
9000bbf0:	bfa8      	it	ge
9000bbf2:	4602      	movge	r2, r0
9000bbf4:	45ac      	cmp	ip, r5
9000bbf6:	bfb8      	it	lt
9000bbf8:	46ac      	movlt	ip, r5
9000bbfa:	4286      	cmp	r6, r0
9000bbfc:	bfb8      	it	lt
9000bbfe:	4606      	movlt	r6, r0
9000bc00:	e7da      	b.n	9000bbb8 <UpdateWatermark1+0x138>
9000bc02:	9806      	ldr	r0, [sp, #24]
9000bc04:	301c      	adds	r0, #28
9000bc06:	9006      	str	r0, [sp, #24]
9000bc08:	6840      	ldr	r0, [r0, #4]
9000bc0a:	4283      	cmp	r3, r0
9000bc0c:	bfa8      	it	ge
9000bc0e:	4603      	movge	r3, r0
9000bc10:	42aa      	cmp	r2, r5
9000bc12:	bfa8      	it	ge
9000bc14:	462a      	movge	r2, r5
9000bc16:	4584      	cmp	ip, r0
9000bc18:	bfb8      	it	lt
9000bc1a:	4684      	movlt	ip, r0
9000bc1c:	42ae      	cmp	r6, r5
9000bc1e:	bfb8      	it	lt
9000bc20:	462e      	movlt	r6, r5
9000bc22:	9806      	ldr	r0, [sp, #24]
9000bc24:	4586      	cmp	lr, r0
9000bc26:	d90e      	bls.n	9000bc46 <UpdateWatermark1+0x1c6>
9000bc28:	6a45      	ldr	r5, [r0, #36]	; 0x24
9000bc2a:	9808      	ldr	r0, [sp, #32]
9000bc2c:	b938      	cbnz	r0, 9000bc3e <UpdateWatermark1+0x1be>
9000bc2e:	9806      	ldr	r0, [sp, #24]
9000bc30:	6840      	ldr	r0, [r0, #4]
9000bc32:	9009      	str	r0, [sp, #36]	; 0x24
9000bc34:	9806      	ldr	r0, [sp, #24]
9000bc36:	6a01      	ldr	r1, [r0, #32]
9000bc38:	9809      	ldr	r0, [sp, #36]	; 0x24
9000bc3a:	4288      	cmp	r0, r1
9000bc3c:	dbe1      	blt.n	9000bc02 <UpdateWatermark1+0x182>
9000bc3e:	9806      	ldr	r0, [sp, #24]
9000bc40:	6880      	ldr	r0, [r0, #8]
9000bc42:	42a8      	cmp	r0, r5
9000bc44:	dbdd      	blt.n	9000bc02 <UpdateWatermark1+0x182>
9000bc46:	2b01      	cmp	r3, #1
9000bc48:	d142      	bne.n	9000bcd0 <UpdateWatermark1+0x250>
9000bc4a:	1e51      	subs	r1, r2, #1
9000bc4c:	4248      	negs	r0, r1
9000bc4e:	4148      	adcs	r0, r1
9000bc50:	9009      	str	r0, [sp, #36]	; 0x24
9000bc52:	6860      	ldr	r0, [r4, #4]
9000bc54:	4403      	add	r3, r0
9000bc56:	eb03 080c 	add.w	r8, r3, ip
9000bc5a:	68a3      	ldr	r3, [r4, #8]
9000bc5c:	441a      	add	r2, r3
9000bc5e:	4416      	add	r6, r2
9000bc60:	f1ba 0f00 	cmp.w	sl, #0
9000bc64:	d036      	beq.n	9000bcd4 <UpdateWatermark1+0x254>
9000bc66:	69e3      	ldr	r3, [r4, #28]
9000bc68:	eba7 0909 	sub.w	r9, r7, r9
9000bc6c:	aa11      	add	r2, sp, #68	; 0x44
9000bc6e:	4650      	mov	r0, sl
9000bc70:	930b      	str	r3, [sp, #44]	; 0x2c
9000bc72:	ea4f 09a9 	mov.w	r9, r9, asr #2
9000bc76:	4b65      	ldr	r3, [pc, #404]	; (9000be0c <UpdateWatermark1+0x38c>)
9000bc78:	fb03 f909 	mul.w	r9, r3, r9
9000bc7c:	4649      	mov	r1, r9
9000bc7e:	f010 f98b 	bl	9001bf98 <EwBmpGetFrameMemory>
9000bc82:	9008      	str	r0, [sp, #32]
9000bc84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000bc86:	4632      	mov	r2, r6
9000bc88:	4641      	mov	r1, r8
9000bc8a:	4658      	mov	r0, fp
9000bc8c:	9300      	str	r3, [sp, #0]
9000bc8e:	4623      	mov	r3, r4
9000bc90:	f8cd 9004 	str.w	r9, [sp, #4]
9000bc94:	f00b fbb4 	bl	90017400 <EwFindSurface>
9000bc98:	4605      	mov	r5, r0
9000bc9a:	2800      	cmp	r0, #0
9000bc9c:	f040 8098 	bne.w	9000bdd0 <UpdateWatermark1+0x350>
9000bca0:	9b08      	ldr	r3, [sp, #32]
9000bca2:	2b00      	cmp	r3, #0
9000bca4:	d165      	bne.n	9000bd72 <UpdateWatermark1+0x2f2>
9000bca6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000bca8:	4632      	mov	r2, r6
9000bcaa:	4641      	mov	r1, r8
9000bcac:	4658      	mov	r0, fp
9000bcae:	9300      	str	r3, [sp, #0]
9000bcb0:	4623      	mov	r3, r4
9000bcb2:	f8cd 9004 	str.w	r9, [sp, #4]
9000bcb6:	f00b f98d 	bl	90016fd4 <EwCreateSurface>
9000bcba:	4605      	mov	r5, r0
9000bcbc:	bb58      	cbnz	r0, 9000bd16 <UpdateWatermark1+0x296>
9000bcbe:	f1bb 0f00 	cmp.w	fp, #0
9000bcc2:	d10b      	bne.n	9000bcdc <UpdateWatermark1+0x25c>
9000bcc4:	4632      	mov	r2, r6
9000bcc6:	4641      	mov	r1, r8
9000bcc8:	206f      	movs	r0, #111	; 0x6f
9000bcca:	f011 fbdf 	bl	9001d48c <EwErrorDD>
9000bcce:	e016      	b.n	9000bcfe <UpdateWatermark1+0x27e>
9000bcd0:	2000      	movs	r0, #0
9000bcd2:	e7bd      	b.n	9000bc50 <UpdateWatermark1+0x1d0>
9000bcd4:	46d1      	mov	r9, sl
9000bcd6:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
9000bcda:	e7d3      	b.n	9000bc84 <UpdateWatermark1+0x204>
9000bcdc:	f1bb 0f02 	cmp.w	fp, #2
9000bce0:	d006      	beq.n	9000bcf0 <UpdateWatermark1+0x270>
9000bce2:	f1bb 0f01 	cmp.w	fp, #1
9000bce6:	d107      	bne.n	9000bcf8 <UpdateWatermark1+0x278>
9000bce8:	4632      	mov	r2, r6
9000bcea:	4641      	mov	r1, r8
9000bcec:	2071      	movs	r0, #113	; 0x71
9000bcee:	e7ec      	b.n	9000bcca <UpdateWatermark1+0x24a>
9000bcf0:	4632      	mov	r2, r6
9000bcf2:	4641      	mov	r1, r8
9000bcf4:	2070      	movs	r0, #112	; 0x70
9000bcf6:	e7e8      	b.n	9000bcca <UpdateWatermark1+0x24a>
9000bcf8:	f1bb 0f03 	cmp.w	fp, #3
9000bcfc:	d007      	beq.n	9000bd0e <UpdateWatermark1+0x28e>
9000bcfe:	f1ba 0f00 	cmp.w	sl, #0
9000bd02:	f43f af06 	beq.w	9000bb12 <UpdateWatermark1+0x92>
9000bd06:	4650      	mov	r0, sl
9000bd08:	f010 f8fe 	bl	9001bf08 <EwBmpClose>
9000bd0c:	e702      	b.n	9000bb14 <UpdateWatermark1+0x94>
9000bd0e:	4632      	mov	r2, r6
9000bd10:	4641      	mov	r1, r8
9000bd12:	2072      	movs	r0, #114	; 0x72
9000bd14:	e7d9      	b.n	9000bcca <UpdateWatermark1+0x24a>
9000bd16:	f1ba 0f00 	cmp.w	sl, #0
9000bd1a:	d055      	beq.n	9000bdc8 <UpdateWatermark1+0x348>
9000bd1c:	f10b 33ff 	add.w	r3, fp, #4294967295
9000bd20:	f1d3 0800 	rsbs	r8, r3, #0
9000bd24:	eb48 0803 	adc.w	r8, r8, r3
9000bd28:	2301      	movs	r3, #1
9000bd2a:	930b      	str	r3, [sp, #44]	; 0x2c
9000bd2c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000bd2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000bd30:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
9000bd34:	463b      	mov	r3, r7
9000bd36:	9a06      	ldr	r2, [sp, #24]
9000bd38:	429a      	cmp	r2, r3
9000bd3a:	d24e      	bcs.n	9000bdda <UpdateWatermark1+0x35a>
9000bd3c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
9000bd40:	589b      	ldr	r3, [r3, r2]
9000bd42:	2b00      	cmp	r3, #0
9000bd44:	f43f aee5 	beq.w	9000bb12 <UpdateWatermark1+0x92>
9000bd48:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000bd4a:	2b00      	cmp	r3, #0
9000bd4c:	f000 810c 	beq.w	9000bf68 <UpdateWatermark1+0x4e8>
9000bd50:	f1ba 0f00 	cmp.w	sl, #0
9000bd54:	f040 8102 	bne.w	9000bf5c <UpdateWatermark1+0x4dc>
9000bd58:	4b2b      	ldr	r3, [pc, #172]	; (9000be08 <UpdateWatermark1+0x388>)
9000bd5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000bd5c:	b11b      	cbz	r3, 9000bd66 <UpdateWatermark1+0x2e6>
9000bd5e:	f1bb 0f00 	cmp.w	fp, #0
9000bd62:	f000 8101 	beq.w	9000bf68 <UpdateWatermark1+0x4e8>
9000bd66:	4628      	mov	r0, r5
9000bd68:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9000bd6c:	f7ff f850 	bl	9000ae10 <UpdateWatermark2+0x2ea>
9000bd70:	e0fa      	b.n	9000bf68 <UpdateWatermark1+0x4e8>
9000bd72:	ab11      	add	r3, sp, #68	; 0x44
9000bd74:	4632      	mov	r2, r6
9000bd76:	4641      	mov	r1, r8
9000bd78:	4658      	mov	r0, fp
9000bd7a:	e9cd 9301 	strd	r9, r3, [sp, #4]
9000bd7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000bd80:	9300      	str	r3, [sp, #0]
9000bd82:	4623      	mov	r3, r4
9000bd84:	f00b fab8 	bl	900172f8 <EwCreateConstSurface>
9000bd88:	4605      	mov	r5, r0
9000bd8a:	bb08      	cbnz	r0, 9000bdd0 <UpdateWatermark1+0x350>
9000bd8c:	f1bb 0f00 	cmp.w	fp, #0
9000bd90:	d105      	bne.n	9000bd9e <UpdateWatermark1+0x31e>
9000bd92:	4632      	mov	r2, r6
9000bd94:	4641      	mov	r1, r8
9000bd96:	2077      	movs	r0, #119	; 0x77
9000bd98:	f011 fb78 	bl	9001d48c <EwErrorDD>
9000bd9c:	e7b3      	b.n	9000bd06 <UpdateWatermark1+0x286>
9000bd9e:	f1bb 0f02 	cmp.w	fp, #2
9000bda2:	d006      	beq.n	9000bdb2 <UpdateWatermark1+0x332>
9000bda4:	f1bb 0f01 	cmp.w	fp, #1
9000bda8:	d107      	bne.n	9000bdba <UpdateWatermark1+0x33a>
9000bdaa:	4632      	mov	r2, r6
9000bdac:	4641      	mov	r1, r8
9000bdae:	2079      	movs	r0, #121	; 0x79
9000bdb0:	e7f2      	b.n	9000bd98 <UpdateWatermark1+0x318>
9000bdb2:	4632      	mov	r2, r6
9000bdb4:	4641      	mov	r1, r8
9000bdb6:	2078      	movs	r0, #120	; 0x78
9000bdb8:	e7ee      	b.n	9000bd98 <UpdateWatermark1+0x318>
9000bdba:	f1bb 0f03 	cmp.w	fp, #3
9000bdbe:	d1a2      	bne.n	9000bd06 <UpdateWatermark1+0x286>
9000bdc0:	4632      	mov	r2, r6
9000bdc2:	4641      	mov	r1, r8
9000bdc4:	207a      	movs	r0, #122	; 0x7a
9000bdc6:	e7e7      	b.n	9000bd98 <UpdateWatermark1+0x318>
9000bdc8:	46d0      	mov	r8, sl
9000bdca:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
9000bdce:	e7ad      	b.n	9000bd2c <UpdateWatermark1+0x2ac>
9000bdd0:	f04f 0800 	mov.w	r8, #0
9000bdd4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9000bdd8:	e7a8      	b.n	9000bd2c <UpdateWatermark1+0x2ac>
9000bdda:	f843 5b1c 	str.w	r5, [r3], #28
9000bdde:	e7aa      	b.n	9000bd36 <UpdateWatermark1+0x2b6>
9000bde0:	f1bb 0f01 	cmp.w	fp, #1
9000bde4:	e9d7 1201 	ldrd	r1, r2, [r7, #4]
9000bde8:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
9000bdec:	d110      	bne.n	9000be10 <UpdateWatermark1+0x390>
9000bdee:	ae18      	add	r6, sp, #96	; 0x60
9000bdf0:	f04f 090a 	mov.w	r9, #10
9000bdf4:	9604      	str	r6, [sp, #16]
9000bdf6:	f44f 7680 	mov.w	r6, #256	; 0x100
9000bdfa:	e9cd 6902 	strd	r6, r9, [sp, #8]
9000bdfe:	2600      	movs	r6, #0
9000be00:	e9cd 0600 	strd	r0, r6, [sp]
9000be04:	e017      	b.n	9000be36 <UpdateWatermark1+0x3b6>
9000be06:	bf00      	nop
9000be08:	200000c8 	.word	0x200000c8
9000be0c:	b6db6db7 	.word	0xb6db6db7
9000be10:	9e09      	ldr	r6, [sp, #36]	; 0x24
9000be12:	2e00      	cmp	r6, #0
9000be14:	d051      	beq.n	9000beba <UpdateWatermark1+0x43a>
9000be16:	f1bb 0f03 	cmp.w	fp, #3
9000be1a:	d14e      	bne.n	9000beba <UpdateWatermark1+0x43a>
9000be1c:	ae18      	add	r6, sp, #96	; 0x60
9000be1e:	f04f 0e02 	mov.w	lr, #2
9000be22:	3002      	adds	r0, #2
9000be24:	3302      	adds	r3, #2
9000be26:	9604      	str	r6, [sp, #16]
9000be28:	3a01      	subs	r2, #1
9000be2a:	2600      	movs	r6, #0
9000be2c:	3901      	subs	r1, #1
9000be2e:	9000      	str	r0, [sp, #0]
9000be30:	9601      	str	r6, [sp, #4]
9000be32:	e9cd 6e02 	strd	r6, lr, [sp, #8]
9000be36:	4628      	mov	r0, r5
9000be38:	f00b fe8e 	bl	90017b58 <EwLockSurface>
9000be3c:	4606      	mov	r6, r0
9000be3e:	b920      	cbnz	r0, 9000be4a <UpdateWatermark1+0x3ca>
9000be40:	4602      	mov	r2, r0
9000be42:	4629      	mov	r1, r5
9000be44:	2088      	movs	r0, #136	; 0x88
9000be46:	f011 fb19 	bl	9001d47c <EwErrorPD>
9000be4a:	f10d 0e60 	add.w	lr, sp, #96	; 0x60
9000be4e:	f10d 0c90 	add.w	ip, sp, #144	; 0x90
9000be52:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000be56:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000be5a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9000be5e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9000be62:	e89e 000f 	ldmia.w	lr, {r0, r1, r2, r3}
9000be66:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
9000be6a:	b1d6      	cbz	r6, 9000bea2 <UpdateWatermark1+0x422>
9000be6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000be6e:	b143      	cbz	r3, 9000be82 <UpdateWatermark1+0x402>
9000be70:	f1bb 0f03 	cmp.w	fp, #3
9000be74:	d105      	bne.n	9000be82 <UpdateWatermark1+0x402>
9000be76:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
9000be7a:	441a      	add	r2, r3
9000be7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9000be7e:	4413      	add	r3, r2
9000be80:	9324      	str	r3, [sp, #144]	; 0x90
9000be82:	f1b8 0f00 	cmp.w	r8, #0
9000be86:	d022      	beq.n	9000bece <UpdateWatermark1+0x44e>
9000be88:	a924      	add	r1, sp, #144	; 0x90
9000be8a:	4650      	mov	r0, sl
9000be8c:	f010 f96c 	bl	9001c168 <EwBmpLoadClut>
9000be90:	4606      	mov	r6, r0
9000be92:	b9e0      	cbnz	r0, 9000bece <UpdateWatermark1+0x44e>
9000be94:	4602      	mov	r2, r0
9000be96:	69e1      	ldr	r1, [r4, #28]
9000be98:	208e      	movs	r0, #142	; 0x8e
9000be9a:	f011 faef 	bl	9001d47c <EwErrorPD>
9000be9e:	f04f 0800 	mov.w	r8, #0
9000bea2:	a918      	add	r1, sp, #96	; 0x60
9000bea4:	4628      	mov	r0, r5
9000bea6:	f00b fb05 	bl	900174b4 <EwUnlockSurface>
9000beaa:	b926      	cbnz	r6, 9000beb6 <UpdateWatermark1+0x436>
9000beac:	4632      	mov	r2, r6
9000beae:	69e1      	ldr	r1, [r4, #28]
9000beb0:	2087      	movs	r0, #135	; 0x87
9000beb2:	f011 fae3 	bl	9001d47c <EwErrorPD>
9000beb6:	371c      	adds	r7, #28
9000beb8:	e056      	b.n	9000bf68 <UpdateWatermark1+0x4e8>
9000beba:	ae18      	add	r6, sp, #96	; 0x60
9000bebc:	f04f 0c02 	mov.w	ip, #2
9000bec0:	9604      	str	r6, [sp, #16]
9000bec2:	2600      	movs	r6, #0
9000bec4:	e9cd 6c02 	strd	r6, ip, [sp, #8]
9000bec8:	e79a      	b.n	9000be00 <UpdateWatermark1+0x380>
9000beca:	2400      	movs	r4, #0
9000becc:	e623      	b.n	9000bb16 <UpdateWatermark1+0x96>
9000bece:	6a21      	ldr	r1, [r4, #32]
9000bed0:	aa24      	add	r2, sp, #144	; 0x90
9000bed2:	4b2f      	ldr	r3, [pc, #188]	; (9000bf90 <UpdateWatermark1+0x510>)
9000bed4:	4650      	mov	r0, sl
9000bed6:	1a79      	subs	r1, r7, r1
9000bed8:	1089      	asrs	r1, r1, #2
9000beda:	4359      	muls	r1, r3
9000bedc:	f010 f8a0 	bl	9001c020 <EwBmpLoadFrame>
9000bee0:	4606      	mov	r6, r0
9000bee2:	2800      	cmp	r0, #0
9000bee4:	d0db      	beq.n	9000be9e <UpdateWatermark1+0x41e>
9000bee6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000bee8:	2b00      	cmp	r3, #0
9000beea:	d0d8      	beq.n	9000be9e <UpdateWatermark1+0x41e>
9000beec:	f1bb 0f03 	cmp.w	fp, #3
9000bef0:	d1d5      	bne.n	9000be9e <UpdateWatermark1+0x41e>
9000bef2:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9000bef4:	9b24      	ldr	r3, [sp, #144]	; 0x90
9000bef6:	9208      	str	r2, [sp, #32]
9000bef8:	f9bd 2082 	ldrsh.w	r2, [sp, #130]	; 0x82
9000befc:	4619      	mov	r1, r3
9000befe:	f9bd 9080 	ldrsh.w	r9, [sp, #128]	; 0x80
9000bf02:	920a      	str	r2, [sp, #40]	; 0x28
9000bf04:	9a08      	ldr	r2, [sp, #32]
9000bf06:	930f      	str	r3, [sp, #60]	; 0x3c
9000bf08:	eba3 0802 	sub.w	r8, r3, r2
9000bf0c:	f1a9 0202 	sub.w	r2, r9, #2
9000bf10:	f1a9 0903 	sub.w	r9, r9, #3
9000bf14:	0052      	lsls	r2, r2, #1
9000bf16:	4640      	mov	r0, r8
9000bf18:	ea4f 0949 	mov.w	r9, r9, lsl #1
9000bf1c:	920e      	str	r2, [sp, #56]	; 0x38
9000bf1e:	f01a fef9 	bl	90026d14 <EwCopy>
9000bf22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000bf24:	1e98      	subs	r0, r3, #2
9000bf26:	9b08      	ldr	r3, [sp, #32]
9000bf28:	4358      	muls	r0, r3
9000bf2a:	1ac1      	subs	r1, r0, r3
9000bf2c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
9000bf30:	4419      	add	r1, r3
9000bf32:	4418      	add	r0, r3
9000bf34:	f01a feee 	bl	90026d14 <EwCopy>
9000bf38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9000bf3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000bf3c:	2b00      	cmp	r3, #0
9000bf3e:	ddae      	ble.n	9000be9e <UpdateWatermark1+0x41e>
9000bf40:	f8b8 3000 	ldrh.w	r3, [r8]
9000bf44:	f828 3c02 	strh.w	r3, [r8, #-2]
9000bf48:	f939 3008 	ldrsh.w	r3, [r9, r8]
9000bf4c:	f822 3008 	strh.w	r3, [r2, r8]
9000bf50:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000bf52:	3b01      	subs	r3, #1
9000bf54:	930a      	str	r3, [sp, #40]	; 0x28
9000bf56:	9b08      	ldr	r3, [sp, #32]
9000bf58:	4498      	add	r8, r3
9000bf5a:	e7ee      	b.n	9000bf3a <UpdateWatermark1+0x4ba>
9000bf5c:	9b08      	ldr	r3, [sp, #32]
9000bf5e:	b91b      	cbnz	r3, 9000bf68 <UpdateWatermark1+0x4e8>
9000bf60:	f1bb 0f03 	cmp.w	fp, #3
9000bf64:	f47f aeff 	bne.w	9000bd66 <UpdateWatermark1+0x2e6>
9000bf68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000bf6a:	b11b      	cbz	r3, 9000bf74 <UpdateWatermark1+0x4f4>
9000bf6c:	9b06      	ldr	r3, [sp, #24]
9000bf6e:	42bb      	cmp	r3, r7
9000bf70:	f4bf af36 	bcs.w	9000bde0 <UpdateWatermark1+0x360>
9000bf74:	f1ba 0f00 	cmp.w	sl, #0
9000bf78:	d002      	beq.n	9000bf80 <UpdateWatermark1+0x500>
9000bf7a:	4650      	mov	r0, sl
9000bf7c:	f00f ffc4 	bl	9001bf08 <EwBmpClose>
9000bf80:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
9000bf84:	589b      	ldr	r3, [r3, r2]
9000bf86:	4a03      	ldr	r2, [pc, #12]	; (9000bf94 <UpdateWatermark1+0x514>)
9000bf88:	6a12      	ldr	r2, [r2, #32]
9000bf8a:	631a      	str	r2, [r3, #48]	; 0x30
9000bf8c:	e5ec      	b.n	9000bb68 <UpdateWatermark1+0xe8>
9000bf8e:	bf00      	nop
9000bf90:	b6db6db7 	.word	0xb6db6db7
9000bf94:	200000c8 	.word	0x200000c8
9000bf98:	b538      	push	{r3, r4, r5, lr}
9000bf9a:	4604      	mov	r4, r0
9000bf9c:	6900      	ldr	r0, [r0, #16]
9000bf9e:	460d      	mov	r5, r1
9000bfa0:	f00b fc4a 	bl	90017838 <EwFindGlyph>
9000bfa4:	b928      	cbnz	r0, 9000bfb2 <UpdateWatermark1+0x532>
9000bfa6:	4629      	mov	r1, r5
9000bfa8:	6960      	ldr	r0, [r4, #20]
9000bfaa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9000bfae:	f010 ba55 	b.w	9001c45c <EwFntIsGlyphAvailable>
9000bfb2:	2001      	movs	r0, #1
9000bfb4:	bd38      	pop	{r3, r4, r5, pc}

9000bfb6 <EwEnableGfxTaskTracing>:
9000bfb6:	4b02      	ldr	r3, [pc, #8]	; (9000bfc0 <EwEnableGfxTaskTracing+0xa>)
9000bfb8:	6298      	str	r0, [r3, #40]	; 0x28
9000bfba:	20be      	movs	r0, #190	; 0xbe
9000bfbc:	f011 ba48 	b.w	9001d450 <EwError>
9000bfc0:	200000c8 	.word	0x200000c8

9000bfc4 <EwFreeBitmap>:
9000bfc4:	b538      	push	{r3, r4, r5, lr}
9000bfc6:	4604      	mov	r4, r0
9000bfc8:	b340      	cbz	r0, 9000c01c <EwFreeBitmap+0x58>
9000bfca:	6900      	ldr	r0, [r0, #16]
9000bfcc:	b330      	cbz	r0, 9000c01c <EwFreeBitmap+0x58>
9000bfce:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000bfd0:	b325      	cbz	r5, 9000c01c <EwFreeBitmap+0x58>
9000bfd2:	4913      	ldr	r1, [pc, #76]	; (9000c020 <EwFreeBitmap+0x5c>)
9000bfd4:	680a      	ldr	r2, [r1, #0]
9000bfd6:	f1a2 032c 	sub.w	r3, r2, #44	; 0x2c
9000bfda:	221c      	movs	r2, #28
9000bfdc:	eba3 0385 	sub.w	r3, r3, r5, lsl #2
9000bfe0:	fb02 3310 	mls	r3, r2, r0, r3
9000bfe4:	69a2      	ldr	r2, [r4, #24]
9000bfe6:	600b      	str	r3, [r1, #0]
9000bfe8:	b11a      	cbz	r2, 9000bff2 <EwFreeBitmap+0x2e>
9000bfea:	6962      	ldr	r2, [r4, #20]
9000bfec:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9000bff0:	600b      	str	r3, [r1, #0]
9000bff2:	2500      	movs	r5, #0
9000bff4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000bff6:	42ab      	cmp	r3, r5
9000bff8:	dc08      	bgt.n	9000c00c <EwFreeBitmap+0x48>
9000bffa:	2300      	movs	r3, #0
9000bffc:	4620      	mov	r0, r4
9000bffe:	e9c4 3304 	strd	r3, r3, [r4, #16]
9000c002:	6263      	str	r3, [r4, #36]	; 0x24
9000c004:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9000c008:	f01a be56 	b.w	90026cb8 <EwFree>
9000c00c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c00e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
9000c012:	b108      	cbz	r0, 9000c018 <EwFreeBitmap+0x54>
9000c014:	f00b fa34 	bl	90017480 <EwFreeSurface>
9000c018:	3501      	adds	r5, #1
9000c01a:	e7eb      	b.n	9000bff4 <EwFreeBitmap+0x30>
9000c01c:	bd38      	pop	{r3, r4, r5, pc}
9000c01e:	bf00      	nop
9000c020:	200002bc 	.word	0x200002bc

9000c024 <EwDoneGraphicsEngine>:
9000c024:	b510      	push	{r4, lr}
9000c026:	4c0b      	ldr	r4, [pc, #44]	; (9000c054 <EwDoneGraphicsEngine+0x30>)
9000c028:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000c02a:	b118      	cbz	r0, 9000c034 <EwDoneGraphicsEngine+0x10>
9000c02c:	f7ff ffca 	bl	9000bfc4 <EwFreeBitmap>
9000c030:	2300      	movs	r3, #0
9000c032:	62e3      	str	r3, [r4, #44]	; 0x2c
9000c034:	4908      	ldr	r1, [pc, #32]	; (9000c058 <EwDoneGraphicsEngine+0x34>)
9000c036:	4a09      	ldr	r2, [pc, #36]	; (9000c05c <EwDoneGraphicsEngine+0x38>)
9000c038:	680b      	ldr	r3, [r1, #0]
9000c03a:	6810      	ldr	r0, [r2, #0]
9000c03c:	4403      	add	r3, r0
9000c03e:	600b      	str	r3, [r1, #0]
9000c040:	2300      	movs	r3, #0
9000c042:	6013      	str	r3, [r2, #0]
9000c044:	f010 f92e 	bl	9001c2a4 <EwFntDone>
9000c048:	f00f ff10 	bl	9001be6c <EwBmpDone>
9000c04c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000c050:	f00a bf68 	b.w	90016f24 <EwDoneGfxCore>
9000c054:	200000c8 	.word	0x200000c8
9000c058:	200002bc 	.word	0x200002bc
9000c05c:	200002ec 	.word	0x200002ec

9000c060 <EwCreateBitmap>:
9000c060:	b570      	push	{r4, r5, r6, lr}
9000c062:	b088      	sub	sp, #32
9000c064:	ac06      	add	r4, sp, #24
9000c066:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9000c068:	e884 0006 	stmia.w	r4, {r1, r2}
9000c06c:	1c42      	adds	r2, r0, #1
9000c06e:	d106      	bne.n	9000c07e <EwCreateBitmap+0x1e>
9000c070:	207b      	movs	r0, #123	; 0x7b
9000c072:	f011 f9ed 	bl	9001d450 <EwError>
9000c076:	2400      	movs	r4, #0
9000c078:	4620      	mov	r0, r4
9000c07a:	b008      	add	sp, #32
9000c07c:	bd70      	pop	{r4, r5, r6, pc}
9000c07e:	4d16      	ldr	r5, [pc, #88]	; (9000c0d8 <EwCreateBitmap+0x78>)
9000c080:	6a69      	ldr	r1, [r5, #36]	; 0x24
9000c082:	b111      	cbz	r1, 9000c08a <EwCreateBitmap+0x2a>
9000c084:	fab0 f180 	clz	r1, r0
9000c088:	0949      	lsrs	r1, r1, #5
9000c08a:	4a14      	ldr	r2, [pc, #80]	; (9000c0dc <EwCreateBitmap+0x7c>)
9000c08c:	6852      	ldr	r2, [r2, #4]
9000c08e:	b11a      	cbz	r2, 9000c098 <EwCreateBitmap+0x38>
9000c090:	6b2a      	ldr	r2, [r5, #48]	; 0x30
9000c092:	fab2 f282 	clz	r2, r2
9000c096:	0952      	lsrs	r2, r2, #5
9000c098:	2500      	movs	r5, #0
9000c09a:	9205      	str	r2, [sp, #20]
9000c09c:	9600      	str	r6, [sp, #0]
9000c09e:	e9cd 1503 	strd	r1, r5, [sp, #12]
9000c0a2:	e9cd 6101 	strd	r6, r1, [sp, #4]
9000c0a6:	e894 0006 	ldmia.w	r4, {r1, r2}
9000c0aa:	f7fe fda9 	bl	9000ac00 <UpdateWatermark2+0xda>
9000c0ae:	4604      	mov	r4, r0
9000c0b0:	2800      	cmp	r0, #0
9000c0b2:	d0e1      	beq.n	9000c078 <EwCreateBitmap+0x18>
9000c0b4:	6963      	ldr	r3, [r4, #20]
9000c0b6:	42ab      	cmp	r3, r5
9000c0b8:	ddde      	ble.n	9000c078 <EwCreateBitmap+0x18>
9000c0ba:	4629      	mov	r1, r5
9000c0bc:	4620      	mov	r0, r4
9000c0be:	f7ff fd15 	bl	9000baec <UpdateWatermark1+0x6c>
9000c0c2:	b938      	cbnz	r0, 9000c0d4 <EwCreateBitmap+0x74>
9000c0c4:	f44f 70a0 	mov.w	r0, #320	; 0x140
9000c0c8:	f011 f9c2 	bl	9001d450 <EwError>
9000c0cc:	4620      	mov	r0, r4
9000c0ce:	f7ff ff79 	bl	9000bfc4 <EwFreeBitmap>
9000c0d2:	e7d0      	b.n	9000c076 <EwCreateBitmap+0x16>
9000c0d4:	3501      	adds	r5, #1
9000c0d6:	e7ed      	b.n	9000c0b4 <EwCreateBitmap+0x54>
9000c0d8:	200000c8 	.word	0x200000c8
9000c0dc:	20000000 	.word	0x20000000

9000c0e0 <EwLoadBitmap>:
9000c0e0:	4b5d      	ldr	r3, [pc, #372]	; (9000c258 <EwLoadBitmap+0x178>)
9000c0e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c0e6:	685e      	ldr	r6, [r3, #4]
9000c0e8:	b09b      	sub	sp, #108	; 0x6c
9000c0ea:	4607      	mov	r7, r0
9000c0ec:	b948      	cbnz	r0, 9000c102 <EwLoadBitmap+0x22>
9000c0ee:	2200      	movs	r2, #0
9000c0f0:	4639      	mov	r1, r7
9000c0f2:	2084      	movs	r0, #132	; 0x84
9000c0f4:	f011 f9c2 	bl	9001d47c <EwErrorPD>
9000c0f8:	2400      	movs	r4, #0
9000c0fa:	4620      	mov	r0, r4
9000c0fc:	b01b      	add	sp, #108	; 0x6c
9000c0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000c102:	f00f feb4 	bl	9001be6e <EwBmpOpen>
9000c106:	4605      	mov	r5, r0
9000c108:	2800      	cmp	r0, #0
9000c10a:	d0f0      	beq.n	9000c0ee <EwLoadBitmap+0xe>
9000c10c:	ab0c      	add	r3, sp, #48	; 0x30
9000c10e:	aa08      	add	r2, sp, #32
9000c110:	a907      	add	r1, sp, #28
9000c112:	9302      	str	r3, [sp, #8]
9000c114:	ab0b      	add	r3, sp, #44	; 0x2c
9000c116:	9301      	str	r3, [sp, #4]
9000c118:	ab0a      	add	r3, sp, #40	; 0x28
9000c11a:	9300      	str	r3, [sp, #0]
9000c11c:	ab09      	add	r3, sp, #36	; 0x24
9000c11e:	f00f fef4 	bl	9001bf0a <EwBmpGetMetrics>
9000c122:	4604      	mov	r4, r0
9000c124:	b940      	cbnz	r0, 9000c138 <EwLoadBitmap+0x58>
9000c126:	4628      	mov	r0, r5
9000c128:	f00f feee 	bl	9001bf08 <EwBmpClose>
9000c12c:	4622      	mov	r2, r4
9000c12e:	4639      	mov	r1, r7
9000c130:	2085      	movs	r0, #133	; 0x85
9000c132:	f011 f9a3 	bl	9001d47c <EwErrorPD>
9000c136:	e7e0      	b.n	9000c0fa <EwLoadBitmap+0x1a>
9000c138:	aa13      	add	r2, sp, #76	; 0x4c
9000c13a:	2100      	movs	r1, #0
9000c13c:	4628      	mov	r0, r5
9000c13e:	f00f ff2b 	bl	9001bf98 <EwBmpGetFrameMemory>
9000c142:	4b46      	ldr	r3, [pc, #280]	; (9000c25c <EwLoadBitmap+0x17c>)
9000c144:	4602      	mov	r2, r0
9000c146:	9909      	ldr	r1, [sp, #36]	; 0x24
9000c148:	6b18      	ldr	r0, [r3, #48]	; 0x30
9000c14a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000c14c:	b128      	cbz	r0, 9000c15a <EwLoadBitmap+0x7a>
9000c14e:	2901      	cmp	r1, #1
9000c150:	dd29      	ble.n	9000c1a6 <EwLoadBitmap+0xc6>
9000c152:	2b00      	cmp	r3, #0
9000c154:	bfd4      	ite	le
9000c156:	2600      	movle	r6, #0
9000c158:	2601      	movgt	r6, #1
9000c15a:	980a      	ldr	r0, [sp, #40]	; 0x28
9000c15c:	f1b2 0c00 	subs.w	ip, r2, #0
9000c160:	9011      	str	r0, [sp, #68]	; 0x44
9000c162:	bf18      	it	ne
9000c164:	f04f 0c01 	movne.w	ip, #1
9000c168:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000c16a:	9012      	str	r0, [sp, #72]	; 0x48
9000c16c:	e9dd 0407 	ldrd	r0, r4, [sp, #28]
9000c170:	f1a0 0803 	sub.w	r8, r0, #3
9000c174:	f1d8 0e00 	rsbs	lr, r8, #0
9000c178:	eb4e 0e08 	adc.w	lr, lr, r8
9000c17c:	b1ae      	cbz	r6, 9000c1aa <EwLoadBitmap+0xca>
9000c17e:	fab2 f282 	clz	r2, r2
9000c182:	0952      	lsrs	r2, r2, #5
9000c184:	e9cd e204 	strd	lr, r2, [sp, #16]
9000c188:	2200      	movs	r2, #0
9000c18a:	e9cd 4100 	strd	r4, r1, [sp]
9000c18e:	e9cd c202 	strd	ip, r2, [sp, #8]
9000c192:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
9000c196:	f7fe fd33 	bl	9000ac00 <UpdateWatermark2+0xda>
9000c19a:	4604      	mov	r4, r0
9000c19c:	b938      	cbnz	r0, 9000c1ae <EwLoadBitmap+0xce>
9000c19e:	4628      	mov	r0, r5
9000c1a0:	f00f feb2 	bl	9001bf08 <EwBmpClose>
9000c1a4:	e7a9      	b.n	9000c0fa <EwLoadBitmap+0x1a>
9000c1a6:	2600      	movs	r6, #0
9000c1a8:	e7d7      	b.n	9000c15a <EwLoadBitmap+0x7a>
9000c1aa:	4632      	mov	r2, r6
9000c1ac:	e7ea      	b.n	9000c184 <EwLoadBitmap+0xa4>
9000c1ae:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
9000c1b2:	429a      	cmp	r2, r3
9000c1b4:	dd03      	ble.n	9000c1be <EwLoadBitmap+0xde>
9000c1b6:	6981      	ldr	r1, [r0, #24]
9000c1b8:	4628      	mov	r0, r5
9000c1ba:	f010 f823 	bl	9001c204 <EwBmpLoadMappingTable>
9000c1be:	f04f 0900 	mov.w	r9, #0
9000c1c2:	f04f 0b1c 	mov.w	fp, #28
9000c1c6:	e029      	b.n	9000c21c <EwLoadBitmap+0x13c>
9000c1c8:	6a23      	ldr	r3, [r4, #32]
9000c1ca:	aa0d      	add	r2, sp, #52	; 0x34
9000c1cc:	4649      	mov	r1, r9
9000c1ce:	4628      	mov	r0, r5
9000c1d0:	fb0b 3809 	mla	r8, fp, r9, r3
9000c1d4:	ab10      	add	r3, sp, #64	; 0x40
9000c1d6:	9301      	str	r3, [sp, #4]
9000c1d8:	ab0f      	add	r3, sp, #60	; 0x3c
9000c1da:	9300      	str	r3, [sp, #0]
9000c1dc:	ab0e      	add	r3, sp, #56	; 0x38
9000c1de:	f00f fec3 	bl	9001bf68 <EwBmpGetFrameMetrics>
9000c1e2:	b958      	cbnz	r0, 9000c1fc <EwLoadBitmap+0x11c>
9000c1e4:	4602      	mov	r2, r0
9000c1e6:	4639      	mov	r1, r7
9000c1e8:	2086      	movs	r0, #134	; 0x86
9000c1ea:	f011 f947 	bl	9001d47c <EwErrorPD>
9000c1ee:	4620      	mov	r0, r4
9000c1f0:	f7ff fee8 	bl	9000bfc4 <EwFreeBitmap>
9000c1f4:	4628      	mov	r0, r5
9000c1f6:	f00f fe87 	bl	9001bf08 <EwBmpClose>
9000c1fa:	e77d      	b.n	9000c0f8 <EwLoadBitmap+0x18>
9000c1fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000c1fe:	f109 0901 	add.w	r9, r9, #1
9000c202:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9000c204:	990e      	ldr	r1, [sp, #56]	; 0x38
9000c206:	441a      	add	r2, r3
9000c208:	f8c8 300c 	str.w	r3, [r8, #12]
9000c20c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000c20e:	f8c8 1010 	str.w	r1, [r8, #16]
9000c212:	440b      	add	r3, r1
9000c214:	f8c8 2014 	str.w	r2, [r8, #20]
9000c218:	f8c8 3018 	str.w	r3, [r8, #24]
9000c21c:	9b08      	ldr	r3, [sp, #32]
9000c21e:	454b      	cmp	r3, r9
9000c220:	dcd2      	bgt.n	9000c1c8 <EwLoadBitmap+0xe8>
9000c222:	4628      	mov	r0, r5
9000c224:	f00f fe70 	bl	9001bf08 <EwBmpClose>
9000c228:	61e7      	str	r7, [r4, #28]
9000c22a:	2e00      	cmp	r6, #0
9000c22c:	f47f af65 	bne.w	9000c0fa <EwLoadBitmap+0x1a>
9000c230:	6963      	ldr	r3, [r4, #20]
9000c232:	42b3      	cmp	r3, r6
9000c234:	f77f af61 	ble.w	9000c0fa <EwLoadBitmap+0x1a>
9000c238:	4631      	mov	r1, r6
9000c23a:	4620      	mov	r0, r4
9000c23c:	f7ff fc56 	bl	9000baec <UpdateWatermark1+0x6c>
9000c240:	b938      	cbnz	r0, 9000c252 <EwLoadBitmap+0x172>
9000c242:	f240 1041 	movw	r0, #321	; 0x141
9000c246:	f011 f903 	bl	9001d450 <EwError>
9000c24a:	4620      	mov	r0, r4
9000c24c:	f7ff feba 	bl	9000bfc4 <EwFreeBitmap>
9000c250:	e752      	b.n	9000c0f8 <EwLoadBitmap+0x18>
9000c252:	3601      	adds	r6, #1
9000c254:	e7ec      	b.n	9000c230 <EwLoadBitmap+0x150>
9000c256:	bf00      	nop
9000c258:	20000000 	.word	0x20000000
9000c25c:	200000c8 	.word	0x200000c8

9000c260 <EwLockBitmap>:
9000c260:	b082      	sub	sp, #8
9000c262:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000c266:	b092      	sub	sp, #72	; 0x48
9000c268:	4604      	mov	r4, r0
9000c26a:	4688      	mov	r8, r1
9000c26c:	ad18      	add	r5, sp, #96	; 0x60
9000c26e:	e885 000c 	stmia.w	r5, {r2, r3}
9000c272:	f89d 5074 	ldrb.w	r5, [sp, #116]	; 0x74
9000c276:	f7ff fc39 	bl	9000baec <UpdateWatermark1+0x6c>
9000c27a:	4607      	mov	r7, r0
9000c27c:	e9dd 6218 	ldrd	r6, r2, [sp, #96]	; 0x60
9000c280:	b118      	cbz	r0, 9000c28a <EwLockBitmap+0x2a>
9000c282:	2e00      	cmp	r6, #0
9000c284:	db01      	blt.n	9000c28a <EwLockBitmap+0x2a>
9000c286:	2a00      	cmp	r2, #0
9000c288:	da06      	bge.n	9000c298 <EwLockBitmap+0x38>
9000c28a:	4642      	mov	r2, r8
9000c28c:	4621      	mov	r1, r4
9000c28e:	208f      	movs	r0, #143	; 0x8f
9000c290:	f011 f8f4 	bl	9001d47c <EwErrorPD>
9000c294:	2400      	movs	r4, #0
9000c296:	e02c      	b.n	9000c2f2 <EwLockBitmap+0x92>
9000c298:	6863      	ldr	r3, [r4, #4]
9000c29a:	991a      	ldr	r1, [sp, #104]	; 0x68
9000c29c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9000c29e:	428b      	cmp	r3, r1
9000c2a0:	bfa8      	it	ge
9000c2a2:	460b      	movge	r3, r1
9000c2a4:	68a1      	ldr	r1, [r4, #8]
9000c2a6:	4288      	cmp	r0, r1
9000c2a8:	bfa8      	it	ge
9000c2aa:	4608      	movge	r0, r1
9000c2ac:	429e      	cmp	r6, r3
9000c2ae:	daf1      	bge.n	9000c294 <EwLockBitmap+0x34>
9000c2b0:	4282      	cmp	r2, r0
9000c2b2:	daef      	bge.n	9000c294 <EwLockBitmap+0x34>
9000c2b4:	f89d 4070 	ldrb.w	r4, [sp, #112]	; 0x70
9000c2b8:	3c00      	subs	r4, #0
9000c2ba:	bf18      	it	ne
9000c2bc:	2401      	movne	r4, #1
9000c2be:	b10d      	cbz	r5, 9000c2c4 <EwLockBitmap+0x64>
9000c2c0:	f044 0402 	orr.w	r4, r4, #2
9000c2c4:	ad06      	add	r5, sp, #24
9000c2c6:	1a80      	subs	r0, r0, r2
9000c2c8:	1b9b      	subs	r3, r3, r6
9000c2ca:	e9d7 1c01 	ldrd	r1, ip, [r7, #4]
9000c2ce:	e9cd 4503 	strd	r4, r5, [sp, #12]
9000c2d2:	2400      	movs	r4, #0
9000c2d4:	9000      	str	r0, [sp, #0]
9000c2d6:	4462      	add	r2, ip
9000c2d8:	4431      	add	r1, r6
9000c2da:	e9cd 4401 	strd	r4, r4, [sp, #4]
9000c2de:	6838      	ldr	r0, [r7, #0]
9000c2e0:	f00b fc3a 	bl	90017b58 <EwLockSurface>
9000c2e4:	4604      	mov	r4, r0
9000c2e6:	b950      	cbnz	r0, 9000c2fe <EwLockBitmap+0x9e>
9000c2e8:	4602      	mov	r2, r0
9000c2ea:	6839      	ldr	r1, [r7, #0]
9000c2ec:	2089      	movs	r0, #137	; 0x89
9000c2ee:	f011 f8c5 	bl	9001d47c <EwErrorPD>
9000c2f2:	4620      	mov	r0, r4
9000c2f4:	b012      	add	sp, #72	; 0x48
9000c2f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9000c2fa:	b002      	add	sp, #8
9000c2fc:	4770      	bx	lr
9000c2fe:	204c      	movs	r0, #76	; 0x4c
9000c300:	f01a fcd8 	bl	90026cb4 <EwAlloc>
9000c304:	4604      	mov	r4, r0
9000c306:	b960      	cbnz	r0, 9000c322 <EwLockBitmap+0xc2>
9000c308:	2018      	movs	r0, #24
9000c30a:	f012 f853 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000c30e:	2800      	cmp	r0, #0
9000c310:	d1f5      	bne.n	9000c2fe <EwLockBitmap+0x9e>
9000c312:	6838      	ldr	r0, [r7, #0]
9000c314:	4629      	mov	r1, r5
9000c316:	f00b f8cd 	bl	900174b4 <EwUnlockSurface>
9000c31a:	2018      	movs	r0, #24
9000c31c:	f011 f898 	bl	9001d450 <EwError>
9000c320:	e7e7      	b.n	9000c2f2 <EwLockBitmap+0x92>
9000c322:	9b06      	ldr	r3, [sp, #24]
9000c324:	f100 0618 	add.w	r6, r0, #24
9000c328:	6003      	str	r3, [r0, #0]
9000c32a:	9b07      	ldr	r3, [sp, #28]
9000c32c:	6043      	str	r3, [r0, #4]
9000c32e:	9b08      	ldr	r3, [sp, #32]
9000c330:	6083      	str	r3, [r0, #8]
9000c332:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000c334:	60c3      	str	r3, [r0, #12]
9000c336:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000c338:	6103      	str	r3, [r0, #16]
9000c33a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000c33c:	6143      	str	r3, [r0, #20]
9000c33e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9000c340:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9000c342:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9000c344:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9000c346:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9000c34a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9000c34e:	683b      	ldr	r3, [r7, #0]
9000c350:	4a0a      	ldr	r2, [pc, #40]	; (9000c37c <EwLockBitmap+0x11c>)
9000c352:	64a3      	str	r3, [r4, #72]	; 0x48
9000c354:	6813      	ldr	r3, [r2, #0]
9000c356:	334c      	adds	r3, #76	; 0x4c
9000c358:	6013      	str	r3, [r2, #0]
9000c35a:	4a09      	ldr	r2, [pc, #36]	; (9000c380 <EwLockBitmap+0x120>)
9000c35c:	6811      	ldr	r1, [r2, #0]
9000c35e:	428b      	cmp	r3, r1
9000c360:	dd00      	ble.n	9000c364 <EwLockBitmap+0x104>
9000c362:	6013      	str	r3, [r2, #0]
9000c364:	4a07      	ldr	r2, [pc, #28]	; (9000c384 <EwLockBitmap+0x124>)
9000c366:	4908      	ldr	r1, [pc, #32]	; (9000c388 <EwLockBitmap+0x128>)
9000c368:	6812      	ldr	r2, [r2, #0]
9000c36a:	6809      	ldr	r1, [r1, #0]
9000c36c:	440a      	add	r2, r1
9000c36e:	4413      	add	r3, r2
9000c370:	4a06      	ldr	r2, [pc, #24]	; (9000c38c <EwLockBitmap+0x12c>)
9000c372:	6811      	ldr	r1, [r2, #0]
9000c374:	428b      	cmp	r3, r1
9000c376:	ddbc      	ble.n	9000c2f2 <EwLockBitmap+0x92>
9000c378:	6013      	str	r3, [r2, #0]
9000c37a:	e7ba      	b.n	9000c2f2 <EwLockBitmap+0x92>
9000c37c:	200002bc 	.word	0x200002bc
9000c380:	200002d8 	.word	0x200002d8
9000c384:	200002ac 	.word	0x200002ac
9000c388:	200002b8 	.word	0x200002b8
9000c38c:	200002c0 	.word	0x200002c0

9000c390 <EwUnlockBitmap>:
9000c390:	b510      	push	{r4, lr}
9000c392:	4604      	mov	r4, r0
9000c394:	b170      	cbz	r0, 9000c3b4 <EwUnlockBitmap+0x24>
9000c396:	6c80      	ldr	r0, [r0, #72]	; 0x48
9000c398:	b160      	cbz	r0, 9000c3b4 <EwUnlockBitmap+0x24>
9000c39a:	f104 0118 	add.w	r1, r4, #24
9000c39e:	f00b f889 	bl	900174b4 <EwUnlockSurface>
9000c3a2:	2300      	movs	r3, #0
9000c3a4:	4620      	mov	r0, r4
9000c3a6:	64a3      	str	r3, [r4, #72]	; 0x48
9000c3a8:	f01a fc86 	bl	90026cb8 <EwFree>
9000c3ac:	4a02      	ldr	r2, [pc, #8]	; (9000c3b8 <EwUnlockBitmap+0x28>)
9000c3ae:	6813      	ldr	r3, [r2, #0]
9000c3b0:	3b4c      	subs	r3, #76	; 0x4c
9000c3b2:	6013      	str	r3, [r2, #0]
9000c3b4:	bd10      	pop	{r4, pc}
9000c3b6:	bf00      	nop
9000c3b8:	200002bc 	.word	0x200002bc

9000c3bc <EwInitGraphicsEngine>:
9000c3bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c3c0:	b08b      	sub	sp, #44	; 0x2c
9000c3c2:	4605      	mov	r5, r0
9000c3c4:	f019 fefa 	bl	900261bc <GfxInitGfx>
9000c3c8:	4604      	mov	r4, r0
9000c3ca:	b930      	cbnz	r0, 9000c3da <EwInitGraphicsEngine+0x1e>
9000c3cc:	2065      	movs	r0, #101	; 0x65
9000c3ce:	f011 f83f 	bl	9001d450 <EwError>
9000c3d2:	4620      	mov	r0, r4
9000c3d4:	b00b      	add	sp, #44	; 0x2c
9000c3d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000c3da:	f00a fe99 	bl	90017110 <EwInitGfxCore>
9000c3de:	4604      	mov	r4, r0
9000c3e0:	b908      	cbnz	r0, 9000c3e6 <EwInitGraphicsEngine+0x2a>
9000c3e2:	2069      	movs	r0, #105	; 0x69
9000c3e4:	e7f3      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c3e6:	4628      	mov	r0, r5
9000c3e8:	f00f fd2e 	bl	9001be48 <EwBmpInit>
9000c3ec:	4604      	mov	r4, r0
9000c3ee:	b918      	cbnz	r0, 9000c3f8 <EwInitGraphicsEngine+0x3c>
9000c3f0:	f00a fd98 	bl	90016f24 <EwDoneGfxCore>
9000c3f4:	206a      	movs	r0, #106	; 0x6a
9000c3f6:	e7ea      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c3f8:	4628      	mov	r0, r5
9000c3fa:	f00f ff51 	bl	9001c2a0 <EwFntInit>
9000c3fe:	4604      	mov	r4, r0
9000c400:	b928      	cbnz	r0, 9000c40e <EwInitGraphicsEngine+0x52>
9000c402:	f00f fd33 	bl	9001be6c <EwBmpDone>
9000c406:	f00a fd8d 	bl	90016f24 <EwDoneGfxCore>
9000c40a:	206b      	movs	r0, #107	; 0x6b
9000c40c:	e7df      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c40e:	4628      	mov	r0, r5
9000c410:	f009 f965 	bl	900156de <EwInitBidi>
9000c414:	4604      	mov	r4, r0
9000c416:	b938      	cbnz	r0, 9000c428 <EwInitGraphicsEngine+0x6c>
9000c418:	f00f ff44 	bl	9001c2a4 <EwFntDone>
9000c41c:	f00f fd26 	bl	9001be6c <EwBmpDone>
9000c420:	f00a fd80 	bl	90016f24 <EwDoneGfxCore>
9000c424:	206c      	movs	r0, #108	; 0x6c
9000c426:	e7d2      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c428:	4628      	mov	r0, r5
9000c42a:	f006 fd19 	bl	90012e60 <EwInitAttrText>
9000c42e:	4604      	mov	r4, r0
9000c430:	b938      	cbnz	r0, 9000c442 <EwInitGraphicsEngine+0x86>
9000c432:	f00f ff37 	bl	9001c2a4 <EwFntDone>
9000c436:	f00f fd19 	bl	9001be6c <EwBmpDone>
9000c43a:	f00a fd73 	bl	90016f24 <EwDoneGfxCore>
9000c43e:	206d      	movs	r0, #109	; 0x6d
9000c440:	e7c5      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c442:	4628      	mov	r0, r5
9000c444:	f00d fef8 	bl	9001a238 <EwGfxTasksInit>
9000c448:	4604      	mov	r4, r0
9000c44a:	b938      	cbnz	r0, 9000c45c <EwInitGraphicsEngine+0xa0>
9000c44c:	f00f ff2a 	bl	9001c2a4 <EwFntDone>
9000c450:	f00f fd0c 	bl	9001be6c <EwBmpDone>
9000c454:	f00a fd66 	bl	90016f24 <EwDoneGfxCore>
9000c458:	206e      	movs	r0, #110	; 0x6e
9000c45a:	e7b8      	b.n	9000c3ce <EwInitGraphicsEngine+0x12>
9000c45c:	ac04      	add	r4, sp, #16
9000c45e:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 9000c550 <EwInitGraphicsEngine+0x194>
9000c462:	f247 5130 	movw	r1, #30000	; 0x7530
9000c466:	f242 7010 	movw	r0, #10000	; 0x2710
9000c46a:	f8d8 9000 	ldr.w	r9, [r8]
9000c46e:	f01a fc81 	bl	90026d74 <EwMathRandInt32>
9000c472:	2233      	movs	r2, #51	; 0x33
9000c474:	2190      	movs	r1, #144	; 0x90
9000c476:	4607      	mov	r7, r0
9000c478:	4620      	mov	r0, r4
9000c47a:	f012 f889 	bl	9001e590 <EwNewPoint>
9000c47e:	ad06      	add	r5, sp, #24
9000c480:	2200      	movs	r2, #0
9000c482:	2333      	movs	r3, #51	; 0x33
9000c484:	f04f 0a01 	mov.w	sl, #1
9000c488:	4628      	mov	r0, r5
9000c48a:	4611      	mov	r1, r2
9000c48c:	9300      	str	r3, [sp, #0]
9000c48e:	2390      	movs	r3, #144	; 0x90
9000c490:	f012 f8f4 	bl	9001e67c <EwNewRect>
9000c494:	f8cd a000 	str.w	sl, [sp]
9000c498:	2300      	movs	r3, #0
9000c49a:	2002      	movs	r0, #2
9000c49c:	e894 0006 	ldmia.w	r4, {r1, r2}
9000c4a0:	f7ff fdde 	bl	9000c060 <EwCreateBitmap>
9000c4a4:	4606      	mov	r6, r0
9000c4a6:	2800      	cmp	r0, #0
9000c4a8:	d03e      	beq.n	9000c528 <EwInitGraphicsEngine+0x16c>
9000c4aa:	2400      	movs	r4, #0
9000c4ac:	ab0a      	add	r3, sp, #40	; 0x28
9000c4ae:	f8cd a00c 	str.w	sl, [sp, #12]
9000c4b2:	9402      	str	r4, [sp, #8]
9000c4b4:	e913 0003 	ldmdb	r3, {r0, r1}
9000c4b8:	e88d 0003 	stmia.w	sp, {r0, r1}
9000c4bc:	4621      	mov	r1, r4
9000c4be:	4630      	mov	r0, r6
9000c4c0:	e895 000c 	ldmia.w	r5, {r2, r3}
9000c4c4:	f7ff fecc 	bl	9000c260 <EwLockBitmap>
9000c4c8:	4605      	mov	r5, r0
9000c4ca:	b398      	cbz	r0, 9000c534 <EwInitGraphicsEngine+0x178>
9000c4cc:	f8d0 a000 	ldr.w	sl, [r0]
9000c4d0:	f8d0 b008 	ldr.w	fp, [r0, #8]
9000c4d4:	4621      	mov	r1, r4
9000c4d6:	3401      	adds	r4, #1
9000c4d8:	4650      	mov	r0, sl
9000c4da:	44da      	add	sl, fp
9000c4dc:	f7fe fa6a 	bl	9000a9b4 <EwScreenWarpRGB565RowFilterSolidBlend+0x4>
9000c4e0:	2c33      	cmp	r4, #51	; 0x33
9000c4e2:	d1f7      	bne.n	9000c4d4 <EwInitGraphicsEngine+0x118>
9000c4e4:	4628      	mov	r0, r5
9000c4e6:	4c16      	ldr	r4, [pc, #88]	; (9000c540 <EwInitGraphicsEngine+0x184>)
9000c4e8:	f7ff ff52 	bl	9000c390 <EwUnlockBitmap>
9000c4ec:	4a15      	ldr	r2, [pc, #84]	; (9000c544 <EwInitGraphicsEngine+0x188>)
9000c4ee:	f8d8 3000 	ldr.w	r3, [r8]
9000c4f2:	f64e 2060 	movw	r0, #60000	; 0xea60
9000c4f6:	6811      	ldr	r1, [r2, #0]
9000c4f8:	4287      	cmp	r7, r0
9000c4fa:	eba3 0309 	sub.w	r3, r3, r9
9000c4fe:	62e6      	str	r6, [r4, #44]	; 0x2c
9000c500:	440b      	add	r3, r1
9000c502:	bfa8      	it	ge
9000c504:	4607      	movge	r7, r0
9000c506:	f8c8 9000 	str.w	r9, [r8]
9000c50a:	6013      	str	r3, [r2, #0]
9000c50c:	f01a fbf8 	bl	90026d00 <EwGetTicks>
9000c510:	4b0d      	ldr	r3, [pc, #52]	; (9000c548 <EwInitGraphicsEngine+0x18c>)
9000c512:	f5b7 6ffa 	cmp.w	r7, #2000	; 0x7d0
9000c516:	bfac      	ite	ge
9000c518:	19c0      	addge	r0, r0, r7
9000c51a:	f500 60fa 	addlt.w	r0, r0, #2000	; 0x7d0
9000c51e:	4a0b      	ldr	r2, [pc, #44]	; (9000c54c <EwInitGraphicsEngine+0x190>)
9000c520:	6020      	str	r0, [r4, #0]
9000c522:	2401      	movs	r4, #1
9000c524:	601a      	str	r2, [r3, #0]
9000c526:	e754      	b.n	9000c3d2 <EwInitGraphicsEngine+0x16>
9000c528:	4b05      	ldr	r3, [pc, #20]	; (9000c540 <EwInitGraphicsEngine+0x184>)
9000c52a:	62d8      	str	r0, [r3, #44]	; 0x2c
9000c52c:	2400      	movs	r4, #0
9000c52e:	f7ff fd79 	bl	9000c024 <EwDoneGraphicsEngine>
9000c532:	e74e      	b.n	9000c3d2 <EwInitGraphicsEngine+0x16>
9000c534:	4630      	mov	r0, r6
9000c536:	f7ff fd45 	bl	9000bfc4 <EwFreeBitmap>
9000c53a:	4b01      	ldr	r3, [pc, #4]	; (9000c540 <EwInitGraphicsEngine+0x184>)
9000c53c:	62dd      	str	r5, [r3, #44]	; 0x2c
9000c53e:	e7f5      	b.n	9000c52c <EwInitGraphicsEngine+0x170>
9000c540:	200000c8 	.word	0x200000c8
9000c544:	200002ec 	.word	0x200002ec
9000c548:	20000000 	.word	0x20000000
9000c54c:	9000ba81 	.word	0x9000ba81
9000c550:	200002bc 	.word	0x200002bc

9000c554 <EwModifyBitmapPalette>:
9000c554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c558:	b095      	sub	sp, #84	; 0x54
9000c55a:	460f      	mov	r7, r1
9000c55c:	4615      	mov	r5, r2
9000c55e:	4604      	mov	r4, r0
9000c560:	9307      	str	r3, [sp, #28]
9000c562:	b110      	cbz	r0, 9000c56a <EwModifyBitmapPalette+0x16>
9000c564:	6803      	ldr	r3, [r0, #0]
9000c566:	2b01      	cmp	r3, #1
9000c568:	d007      	beq.n	9000c57a <EwModifyBitmapPalette+0x26>
9000c56a:	2200      	movs	r2, #0
9000c56c:	4621      	mov	r1, r4
9000c56e:	2090      	movs	r0, #144	; 0x90
9000c570:	b015      	add	sp, #84	; 0x54
9000c572:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c576:	f010 bf81 	b.w	9001d47c <EwErrorPD>
9000c57a:	9b07      	ldr	r3, [sp, #28]
9000c57c:	b13b      	cbz	r3, 9000c58e <EwModifyBitmapPalette+0x3a>
9000c57e:	2900      	cmp	r1, #0
9000c580:	db05      	blt.n	9000c58e <EwModifyBitmapPalette+0x3a>
9000c582:	2a00      	cmp	r2, #0
9000c584:	dd03      	ble.n	9000c58e <EwModifyBitmapPalette+0x3a>
9000c586:	188b      	adds	r3, r1, r2
9000c588:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000c58c:	dd03      	ble.n	9000c596 <EwModifyBitmapPalette+0x42>
9000c58e:	2200      	movs	r2, #0
9000c590:	4621      	mov	r1, r4
9000c592:	2091      	movs	r0, #145	; 0x91
9000c594:	e7ec      	b.n	9000c570 <EwModifyBitmapPalette+0x1c>
9000c596:	69c6      	ldr	r6, [r0, #28]
9000c598:	b17e      	cbz	r6, 9000c5ba <EwModifyBitmapPalette+0x66>
9000c59a:	4601      	mov	r1, r0
9000c59c:	2200      	movs	r2, #0
9000c59e:	f240 103d 	movw	r0, #317	; 0x13d
9000c5a2:	e7e5      	b.n	9000c570 <EwModifyBitmapPalette+0x1c>
9000c5a4:	4631      	mov	r1, r6
9000c5a6:	4620      	mov	r0, r4
9000c5a8:	f7ff faa0 	bl	9000baec <UpdateWatermark1+0x6c>
9000c5ac:	b920      	cbnz	r0, 9000c5b8 <EwModifyBitmapPalette+0x64>
9000c5ae:	4632      	mov	r2, r6
9000c5b0:	4621      	mov	r1, r4
9000c5b2:	f240 103f 	movw	r0, #319	; 0x13f
9000c5b6:	e7db      	b.n	9000c570 <EwModifyBitmapPalette+0x1c>
9000c5b8:	3601      	adds	r6, #1
9000c5ba:	6963      	ldr	r3, [r4, #20]
9000c5bc:	42b3      	cmp	r3, r6
9000c5be:	dcf1      	bgt.n	9000c5a4 <EwModifyBitmapPalette+0x50>
9000c5c0:	2600      	movs	r6, #0
9000c5c2:	f10d 0b20 	add.w	fp, sp, #32
9000c5c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c5c8:	42b3      	cmp	r3, r6
9000c5ca:	dd15      	ble.n	9000c5f8 <EwModifyBitmapPalette+0xa4>
9000c5cc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c5ce:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
9000c5d2:	2308      	movs	r3, #8
9000c5d4:	f8cd b010 	str.w	fp, [sp, #16]
9000c5d8:	4650      	mov	r0, sl
9000c5da:	9701      	str	r7, [sp, #4]
9000c5dc:	e9cd 5302 	strd	r5, r3, [sp, #8]
9000c5e0:	2300      	movs	r3, #0
9000c5e2:	461a      	mov	r2, r3
9000c5e4:	4619      	mov	r1, r3
9000c5e6:	9300      	str	r3, [sp, #0]
9000c5e8:	f00b fab6 	bl	90017b58 <EwLockSurface>
9000c5ec:	4602      	mov	r2, r0
9000c5ee:	b930      	cbnz	r0, 9000c5fe <EwModifyBitmapPalette+0xaa>
9000c5f0:	4651      	mov	r1, sl
9000c5f2:	208a      	movs	r0, #138	; 0x8a
9000c5f4:	f010 ff42 	bl	9001d47c <EwErrorPD>
9000c5f8:	b015      	add	sp, #84	; 0x54
9000c5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000c5fe:	f8dd 801c 	ldr.w	r8, [sp, #28]
9000c602:	f04f 0900 	mov.w	r9, #0
9000c606:	f898 3003 	ldrb.w	r3, [r8, #3]
9000c60a:	f898 2002 	ldrb.w	r2, [r8, #2]
9000c60e:	f898 1001 	ldrb.w	r1, [r8, #1]
9000c612:	f818 0b04 	ldrb.w	r0, [r8], #4
9000c616:	f7f8 fb73 	bl	90004d00 <EwPackClutEntry>
9000c61a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000c61c:	f843 0029 	str.w	r0, [r3, r9, lsl #2]
9000c620:	f109 0901 	add.w	r9, r9, #1
9000c624:	454d      	cmp	r5, r9
9000c626:	d1ee      	bne.n	9000c606 <EwModifyBitmapPalette+0xb2>
9000c628:	4659      	mov	r1, fp
9000c62a:	4650      	mov	r0, sl
9000c62c:	3601      	adds	r6, #1
9000c62e:	f00a ff41 	bl	900174b4 <EwUnlockSurface>
9000c632:	e7c8      	b.n	9000c5c6 <EwModifyBitmapPalette+0x72>

9000c634 <EwFlushBitmap>:
9000c634:	b538      	push	{r3, r4, r5, lr}
9000c636:	4604      	mov	r4, r0
9000c638:	b958      	cbnz	r0, 9000c652 <EwFlushBitmap+0x1e>
9000c63a:	bd38      	pop	{r3, r4, r5, pc}
9000c63c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000c63e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
9000c642:	b108      	cbz	r0, 9000c648 <EwFlushBitmap+0x14>
9000c644:	f00b f9f0 	bl	90017a28 <EwFlushTasks>
9000c648:	3501      	adds	r5, #1
9000c64a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000c64c:	42ab      	cmp	r3, r5
9000c64e:	dcf5      	bgt.n	9000c63c <EwFlushBitmap+0x8>
9000c650:	e7f3      	b.n	9000c63a <EwFlushBitmap+0x6>
9000c652:	2500      	movs	r5, #0
9000c654:	e7f9      	b.n	9000c64a <EwFlushBitmap+0x16>

9000c656 <EwGetFontResource>:
9000c656:	b5f0      	push	{r4, r5, r6, r7, lr}
9000c658:	b08d      	sub	sp, #52	; 0x34
9000c65a:	4606      	mov	r6, r0
9000c65c:	2400      	movs	r4, #0
9000c65e:	af04      	add	r7, sp, #16
9000c660:	4638      	mov	r0, r7
9000c662:	b166      	cbz	r6, 9000c67e <EwGetFontResource+0x28>
9000c664:	f836 5014 	ldrh.w	r5, [r6, r4, lsl #1]
9000c668:	b14d      	cbz	r5, 9000c67e <EwGetFontResource+0x28>
9000c66a:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
9000c66e:	f104 0401 	add.w	r4, r4, #1
9000c672:	bf28      	it	cs
9000c674:	2520      	movcs	r5, #32
9000c676:	2c1f      	cmp	r4, #31
9000c678:	f807 5b01 	strb.w	r5, [r7], #1
9000c67c:	d1f1      	bne.n	9000c662 <EwGetFontResource+0xc>
9000c67e:	ad0c      	add	r5, sp, #48	; 0x30
9000c680:	442c      	add	r4, r5
9000c682:	2500      	movs	r5, #0
9000c684:	f804 5c20 	strb.w	r5, [r4, #-32]
9000c688:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9000c68c:	9403      	str	r4, [sp, #12]
9000c68e:	9c14      	ldr	r4, [sp, #80]	; 0x50
9000c690:	9402      	str	r4, [sp, #8]
9000c692:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
9000c696:	9401      	str	r4, [sp, #4]
9000c698:	9c12      	ldr	r4, [sp, #72]	; 0x48
9000c69a:	9400      	str	r4, [sp, #0]
9000c69c:	f00f fe03 	bl	9001c2a6 <EwFntGetResource>
9000c6a0:	b00d      	add	sp, #52	; 0x34
9000c6a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

9000c6a4 <EwLoadFont>:
9000c6a4:	b570      	push	{r4, r5, r6, lr}
9000c6a6:	4605      	mov	r5, r0
9000c6a8:	b086      	sub	sp, #24
9000c6aa:	b940      	cbnz	r0, 9000c6be <EwLoadFont+0x1a>
9000c6ac:	462c      	mov	r4, r5
9000c6ae:	4602      	mov	r2, r0
9000c6b0:	4601      	mov	r1, r0
9000c6b2:	2092      	movs	r0, #146	; 0x92
9000c6b4:	f010 fee2 	bl	9001d47c <EwErrorPD>
9000c6b8:	4620      	mov	r0, r4
9000c6ba:	b006      	add	sp, #24
9000c6bc:	bd70      	pop	{r4, r5, r6, pc}
9000c6be:	f00f fdf4 	bl	9001c2aa <EwFntOpen>
9000c6c2:	4606      	mov	r6, r0
9000c6c4:	b948      	cbnz	r0, 9000c6da <EwLoadFont+0x36>
9000c6c6:	4628      	mov	r0, r5
9000c6c8:	4634      	mov	r4, r6
9000c6ca:	f00f fe00 	bl	9001c2ce <EwFntGetResourceName>
9000c6ce:	4632      	mov	r2, r6
9000c6d0:	4601      	mov	r1, r0
9000c6d2:	2092      	movs	r0, #146	; 0x92
9000c6d4:	f010 feca 	bl	9001d46c <EwErrorSD>
9000c6d8:	e7ee      	b.n	9000c6b8 <EwLoadFont+0x14>
9000c6da:	f10d 030a 	add.w	r3, sp, #10
9000c6de:	aa04      	add	r2, sp, #16
9000c6e0:	a903      	add	r1, sp, #12
9000c6e2:	9300      	str	r3, [sp, #0]
9000c6e4:	ab05      	add	r3, sp, #20
9000c6e6:	f00f fdf5 	bl	9001c2d4 <EwFntGetMetrics>
9000c6ea:	4604      	mov	r4, r0
9000c6ec:	b958      	cbnz	r0, 9000c706 <EwLoadFont+0x62>
9000c6ee:	4630      	mov	r0, r6
9000c6f0:	f00f fdec 	bl	9001c2cc <EwFntClose>
9000c6f4:	4628      	mov	r0, r5
9000c6f6:	f00f fdea 	bl	9001c2ce <EwFntGetResourceName>
9000c6fa:	4622      	mov	r2, r4
9000c6fc:	4601      	mov	r1, r0
9000c6fe:	2093      	movs	r0, #147	; 0x93
9000c700:	f010 feb4 	bl	9001d46c <EwErrorSD>
9000c704:	e7d8      	b.n	9000c6b8 <EwLoadFont+0x14>
9000c706:	201c      	movs	r0, #28
9000c708:	f01a fad4 	bl	90026cb4 <EwAlloc>
9000c70c:	4604      	mov	r4, r0
9000c70e:	b958      	cbnz	r0, 9000c728 <EwLoadFont+0x84>
9000c710:	2019      	movs	r0, #25
9000c712:	f011 fe4f 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000c716:	2800      	cmp	r0, #0
9000c718:	d1f5      	bne.n	9000c706 <EwLoadFont+0x62>
9000c71a:	4630      	mov	r0, r6
9000c71c:	f00f fdd6 	bl	9001c2cc <EwFntClose>
9000c720:	2019      	movs	r0, #25
9000c722:	f010 fe95 	bl	9001d450 <EwError>
9000c726:	e7c7      	b.n	9000c6b8 <EwLoadFont+0x14>
9000c728:	9b03      	ldr	r3, [sp, #12]
9000c72a:	6003      	str	r3, [r0, #0]
9000c72c:	9b04      	ldr	r3, [sp, #16]
9000c72e:	6043      	str	r3, [r0, #4]
9000c730:	9b05      	ldr	r3, [sp, #20]
9000c732:	6083      	str	r3, [r0, #8]
9000c734:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9000c738:	e9c0 5604 	strd	r5, r6, [r0, #16]
9000c73c:	8183      	strh	r3, [r0, #12]
9000c73e:	4628      	mov	r0, r5
9000c740:	f00f fdc5 	bl	9001c2ce <EwFntGetResourceName>
9000c744:	4a0a      	ldr	r2, [pc, #40]	; (9000c770 <EwLoadFont+0xcc>)
9000c746:	61a0      	str	r0, [r4, #24]
9000c748:	6813      	ldr	r3, [r2, #0]
9000c74a:	331c      	adds	r3, #28
9000c74c:	6013      	str	r3, [r2, #0]
9000c74e:	4a09      	ldr	r2, [pc, #36]	; (9000c774 <EwLoadFont+0xd0>)
9000c750:	6811      	ldr	r1, [r2, #0]
9000c752:	428b      	cmp	r3, r1
9000c754:	dd00      	ble.n	9000c758 <EwLoadFont+0xb4>
9000c756:	6013      	str	r3, [r2, #0]
9000c758:	4a07      	ldr	r2, [pc, #28]	; (9000c778 <EwLoadFont+0xd4>)
9000c75a:	4908      	ldr	r1, [pc, #32]	; (9000c77c <EwLoadFont+0xd8>)
9000c75c:	6812      	ldr	r2, [r2, #0]
9000c75e:	6809      	ldr	r1, [r1, #0]
9000c760:	440a      	add	r2, r1
9000c762:	4413      	add	r3, r2
9000c764:	4a06      	ldr	r2, [pc, #24]	; (9000c780 <EwLoadFont+0xdc>)
9000c766:	6811      	ldr	r1, [r2, #0]
9000c768:	428b      	cmp	r3, r1
9000c76a:	dda5      	ble.n	9000c6b8 <EwLoadFont+0x14>
9000c76c:	6013      	str	r3, [r2, #0]
9000c76e:	e7a3      	b.n	9000c6b8 <EwLoadFont+0x14>
9000c770:	200002bc 	.word	0x200002bc
9000c774:	200002d8 	.word	0x200002d8
9000c778:	200002ac 	.word	0x200002ac
9000c77c:	200002b8 	.word	0x200002b8
9000c780:	200002c0 	.word	0x200002c0

9000c784 <EwFreeFont>:
9000c784:	b510      	push	{r4, lr}
9000c786:	4604      	mov	r4, r0
9000c788:	b158      	cbz	r0, 9000c7a2 <EwFreeFont+0x1e>
9000c78a:	6940      	ldr	r0, [r0, #20]
9000c78c:	f00f fd9e 	bl	9001c2cc <EwFntClose>
9000c790:	2300      	movs	r3, #0
9000c792:	4620      	mov	r0, r4
9000c794:	6163      	str	r3, [r4, #20]
9000c796:	f01a fa8f 	bl	90026cb8 <EwFree>
9000c79a:	4a02      	ldr	r2, [pc, #8]	; (9000c7a4 <EwFreeFont+0x20>)
9000c79c:	6813      	ldr	r3, [r2, #0]
9000c79e:	3b1c      	subs	r3, #28
9000c7a0:	6013      	str	r3, [r2, #0]
9000c7a2:	bd10      	pop	{r4, pc}
9000c7a4:	200002bc 	.word	0x200002bc

9000c7a8 <EwInitViewport>:
9000c7a8:	b082      	sub	sp, #8
9000c7aa:	2800      	cmp	r0, #0
9000c7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c7b0:	b08b      	sub	sp, #44	; 0x2c
9000c7b2:	4682      	mov	sl, r0
9000c7b4:	ac0a      	add	r4, sp, #40	; 0x28
9000c7b6:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
9000c7b8:	e904 0003 	stmdb	r4, {r0, r1}
9000c7bc:	a914      	add	r1, sp, #80	; 0x50
9000c7be:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
9000c7c2:	e881 000c 	stmia.w	r1, {r2, r3}
9000c7c6:	dd10      	ble.n	9000c7ea <EwInitViewport+0x42>
9000c7c8:	f1b9 0f00 	cmp.w	r9, #0
9000c7cc:	dd0d      	ble.n	9000c7ea <EwInitViewport+0x42>
9000c7ce:	9b16      	ldr	r3, [sp, #88]	; 0x58
9000c7d0:	4615      	mov	r5, r2
9000c7d2:	eba3 0b02 	sub.w	fp, r3, r2
9000c7d6:	f1bb 0f00 	cmp.w	fp, #0
9000c7da:	dd06      	ble.n	9000c7ea <EwInitViewport+0x42>
9000c7dc:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
9000c7e0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9000c7e2:	eba2 0608 	sub.w	r6, r2, r8
9000c7e6:	2e00      	cmp	r6, #0
9000c7e8:	dc09      	bgt.n	9000c7fe <EwInitViewport+0x56>
9000c7ea:	2400      	movs	r4, #0
9000c7ec:	2095      	movs	r0, #149	; 0x95
9000c7ee:	f010 fe2f 	bl	9001d450 <EwError>
9000c7f2:	4620      	mov	r0, r4
9000c7f4:	b00b      	add	sp, #44	; 0x2c
9000c7f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c7fa:	b002      	add	sp, #8
9000c7fc:	4770      	bx	lr
9000c7fe:	20b8      	movs	r0, #184	; 0xb8
9000c800:	f01a fa58 	bl	90026cb4 <EwAlloc>
9000c804:	4604      	mov	r4, r0
9000c806:	b918      	cbnz	r0, 9000c810 <EwInitViewport+0x68>
9000c808:	201a      	movs	r0, #26
9000c80a:	f010 fe21 	bl	9001d450 <EwError>
9000c80e:	e7f0      	b.n	9000c7f2 <EwInitViewport+0x4a>
9000c810:	9919      	ldr	r1, [sp, #100]	; 0x64
9000c812:	462a      	mov	r2, r5
9000c814:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9000c816:	4650      	mov	r0, sl
9000c818:	f381 0108 	usat	r1, #8, r1
9000c81c:	f8cd b000 	str.w	fp, [sp]
9000c820:	e9cd 7305 	strd	r7, r3, [sp, #20]
9000c824:	9103      	str	r1, [sp, #12]
9000c826:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000c828:	9918      	ldr	r1, [sp, #96]	; 0x60
9000c82a:	9304      	str	r3, [sp, #16]
9000c82c:	4643      	mov	r3, r8
9000c82e:	e9cd 6101 	strd	r6, r1, [sp, #4]
9000c832:	4649      	mov	r1, r9
9000c834:	f019 fcfe 	bl	90026234 <GfxInitViewport>
9000c838:	21b8      	movs	r1, #184	; 0xb8
9000c83a:	4605      	mov	r5, r0
9000c83c:	4620      	mov	r0, r4
9000c83e:	f01a fa61 	bl	90026d04 <EwZero>
9000c842:	f104 0334 	add.w	r3, r4, #52	; 0x34
9000c846:	f104 0154 	add.w	r1, r4, #84	; 0x54
9000c84a:	2201      	movs	r2, #1
9000c84c:	62a3      	str	r3, [r4, #40]	; 0x28
9000c84e:	f104 0350 	add.w	r3, r4, #80	; 0x50
9000c852:	6361      	str	r1, [r4, #52]	; 0x34
9000c854:	f04f 31ff 	mov.w	r1, #4294967295
9000c858:	6323      	str	r3, [r4, #48]	; 0x30
9000c85a:	2300      	movs	r3, #0
9000c85c:	60a1      	str	r1, [r4, #8]
9000c85e:	f64f 71ff 	movw	r1, #65535	; 0xffff
9000c862:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
9000c866:	62e2      	str	r2, [r4, #44]	; 0x2c
9000c868:	6761      	str	r1, [r4, #116]	; 0x74
9000c86a:	e9c4 3303 	strd	r3, r3, [r4, #12]
9000c86e:	e9c4 3324 	strd	r3, r3, [r4, #144]	; 0x90
9000c872:	e9c4 3326 	strd	r3, r3, [r4, #152]	; 0x98
9000c876:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9000c878:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
9000c87c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000c87e:	e9c4 372a 	strd	r3, r7, [r4, #168]	; 0xa8
9000c882:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9000c884:	e9c4 a900 	strd	sl, r9, [r4]
9000c888:	e9c4 2206 	strd	r2, r2, [r4, #24]
9000c88c:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
9000c890:	e9c4 352c 	strd	r3, r5, [r4, #176]	; 0xb0
9000c894:	b935      	cbnz	r5, 9000c8a4 <EwInitViewport+0xfc>
9000c896:	4620      	mov	r0, r4
9000c898:	462c      	mov	r4, r5
9000c89a:	f01a fa0d 	bl	90026cb8 <EwFree>
9000c89e:	2096      	movs	r0, #150	; 0x96
9000c8a0:	f010 fdd6 	bl	9001d450 <EwError>
9000c8a4:	490a      	ldr	r1, [pc, #40]	; (9000c8d0 <EwInitViewport+0x128>)
9000c8a6:	680b      	ldr	r3, [r1, #0]
9000c8a8:	f103 02b8 	add.w	r2, r3, #184	; 0xb8
9000c8ac:	4b09      	ldr	r3, [pc, #36]	; (9000c8d4 <EwInitViewport+0x12c>)
9000c8ae:	600a      	str	r2, [r1, #0]
9000c8b0:	6819      	ldr	r1, [r3, #0]
9000c8b2:	428a      	cmp	r2, r1
9000c8b4:	4908      	ldr	r1, [pc, #32]	; (9000c8d8 <EwInitViewport+0x130>)
9000c8b6:	bfc8      	it	gt
9000c8b8:	601a      	strgt	r2, [r3, #0]
9000c8ba:	4b08      	ldr	r3, [pc, #32]	; (9000c8dc <EwInitViewport+0x134>)
9000c8bc:	6809      	ldr	r1, [r1, #0]
9000c8be:	681b      	ldr	r3, [r3, #0]
9000c8c0:	440b      	add	r3, r1
9000c8c2:	4413      	add	r3, r2
9000c8c4:	4a06      	ldr	r2, [pc, #24]	; (9000c8e0 <EwInitViewport+0x138>)
9000c8c6:	6811      	ldr	r1, [r2, #0]
9000c8c8:	428b      	cmp	r3, r1
9000c8ca:	bfc8      	it	gt
9000c8cc:	6013      	strgt	r3, [r2, #0]
9000c8ce:	e790      	b.n	9000c7f2 <EwInitViewport+0x4a>
9000c8d0:	200002bc 	.word	0x200002bc
9000c8d4:	200002d8 	.word	0x200002d8
9000c8d8:	200002b8 	.word	0x200002b8
9000c8dc:	200002ac 	.word	0x200002ac
9000c8e0:	200002c0 	.word	0x200002c0

9000c8e4 <EwBeginUpdate>:
9000c8e4:	b570      	push	{r4, r5, r6, lr}
9000c8e6:	4604      	mov	r4, r0
9000c8e8:	b110      	cbz	r0, 9000c8f0 <EwBeginUpdate+0xc>
9000c8ea:	f890 60a0 	ldrb.w	r6, [r0, #160]	; 0xa0
9000c8ee:	b136      	cbz	r6, 9000c8fe <EwBeginUpdate+0x1a>
9000c8f0:	2200      	movs	r2, #0
9000c8f2:	4621      	mov	r1, r4
9000c8f4:	2097      	movs	r0, #151	; 0x97
9000c8f6:	f010 fdc1 	bl	9001d47c <EwErrorPD>
9000c8fa:	2000      	movs	r0, #0
9000c8fc:	bd70      	pop	{r4, r5, r6, pc}
9000c8fe:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
9000c902:	f019 fd99 	bl	90026438 <GfxBeginUpdate>
9000c906:	b918      	cbnz	r0, 9000c910 <EwBeginUpdate+0x2c>
9000c908:	4602      	mov	r2, r0
9000c90a:	4621      	mov	r1, r4
9000c90c:	209a      	movs	r0, #154	; 0x9a
9000c90e:	e7f2      	b.n	9000c8f6 <EwBeginUpdate+0x12>
9000c910:	2301      	movs	r3, #1
9000c912:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
9000c916:	2210      	movs	r2, #16
9000c918:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
9000c91c:	f104 030c 	add.w	r3, r4, #12
9000c920:	e894 0003 	ldmia.w	r4, {r0, r1}
9000c924:	e883 0003 	stmia.w	r3, {r0, r1}
9000c928:	6823      	ldr	r3, [r4, #0]
9000c92a:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
9000c92e:	6863      	ldr	r3, [r4, #4]
9000c930:	e894 0003 	ldmia.w	r4, {r0, r1}
9000c934:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
9000c938:	f104 0398 	add.w	r3, r4, #152	; 0x98
9000c93c:	e9c4 6624 	strd	r6, r6, [r4, #144]	; 0x90
9000c940:	e883 0003 	stmia.w	r3, {r0, r1}
9000c944:	4b0c      	ldr	r3, [pc, #48]	; (9000c978 <EwBeginUpdate+0x94>)
9000c946:	e894 0003 	ldmia.w	r4, {r0, r1}
9000c94a:	681b      	ldr	r3, [r3, #0]
9000c94c:	4798      	blx	r3
9000c94e:	4b0b      	ldr	r3, [pc, #44]	; (9000c97c <EwBeginUpdate+0x98>)
9000c950:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000c952:	3201      	adds	r2, #1
9000c954:	2a10      	cmp	r2, #16
9000c956:	635a      	str	r2, [r3, #52]	; 0x34
9000c958:	dd0a      	ble.n	9000c970 <EwBeginUpdate+0x8c>
9000c95a:	691a      	ldr	r2, [r3, #16]
9000c95c:	635e      	str	r6, [r3, #52]	; 0x34
9000c95e:	639a      	str	r2, [r3, #56]	; 0x38
9000c960:	695a      	ldr	r2, [r3, #20]
9000c962:	601e      	str	r6, [r3, #0]
9000c964:	63da      	str	r2, [r3, #60]	; 0x3c
9000c966:	7e1a      	ldrb	r2, [r3, #24]
9000c968:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
9000c96c:	685a      	ldr	r2, [r3, #4]
9000c96e:	645a      	str	r2, [r3, #68]	; 0x44
9000c970:	f104 0008 	add.w	r0, r4, #8
9000c974:	e7c2      	b.n	9000c8fc <EwBeginUpdate+0x18>
9000c976:	bf00      	nop
9000c978:	20000000 	.word	0x20000000
9000c97c:	200000c8 	.word	0x200000c8

9000c980 <EwBeginUpdateArea>:
9000c980:	b084      	sub	sp, #16
9000c982:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c986:	b08d      	sub	sp, #52	; 0x34
9000c988:	4604      	mov	r4, r0
9000c98a:	ae17      	add	r6, sp, #92	; 0x5c
9000c98c:	e886 000e 	stmia.w	r6, {r1, r2, r3}
9000c990:	b110      	cbz	r0, 9000c998 <EwBeginUpdateArea+0x18>
9000c992:	f890 50a0 	ldrb.w	r5, [r0, #160]	; 0xa0
9000c996:	b155      	cbz	r5, 9000c9ae <EwBeginUpdateArea+0x2e>
9000c998:	2098      	movs	r0, #152	; 0x98
9000c99a:	2200      	movs	r2, #0
9000c99c:	4621      	mov	r1, r4
9000c99e:	f010 fd6d 	bl	9001d47c <EwErrorPD>
9000c9a2:	2000      	movs	r0, #0
9000c9a4:	b00d      	add	sp, #52	; 0x34
9000c9a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000c9aa:	b004      	add	sp, #16
9000c9ac:	4770      	bx	lr
9000c9ae:	6843      	ldr	r3, [r0, #4]
9000c9b0:	af08      	add	r7, sp, #32
9000c9b2:	462a      	mov	r2, r5
9000c9b4:	4629      	mov	r1, r5
9000c9b6:	9300      	str	r3, [sp, #0]
9000c9b8:	6803      	ldr	r3, [r0, #0]
9000c9ba:	4638      	mov	r0, r7
9000c9bc:	f011 fe5e 	bl	9001e67c <EwNewRect>
9000c9c0:	f10d 0c04 	add.w	ip, sp, #4
9000c9c4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000c9c8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
9000c9cc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000c9ce:	4630      	mov	r0, r6
9000c9d0:	9300      	str	r3, [sp, #0]
9000c9d2:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
9000c9d6:	f011 fed5 	bl	9001e784 <EwIntersectRect>
9000c9da:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9000c9de:	e9dd 8717 	ldrd	r8, r7, [sp, #92]	; 0x5c
9000c9e2:	e9dd a919 	ldrd	sl, r9, [sp, #100]	; 0x64
9000c9e6:	f011 fea7 	bl	9001e738 <EwIsRectEmpty>
9000c9ea:	4606      	mov	r6, r0
9000c9ec:	b9a0      	cbnz	r0, 9000ca18 <EwBeginUpdateArea+0x98>
9000c9ee:	eba9 0b07 	sub.w	fp, r9, r7
9000c9f2:	ebaa 0308 	sub.w	r3, sl, r8
9000c9f6:	463a      	mov	r2, r7
9000c9f8:	4641      	mov	r1, r8
9000c9fa:	f8cd b000 	str.w	fp, [sp]
9000c9fe:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
9000ca02:	9307      	str	r3, [sp, #28]
9000ca04:	f019 fd26 	bl	90026454 <GfxBeginUpdateArea>
9000ca08:	9b07      	ldr	r3, [sp, #28]
9000ca0a:	4605      	mov	r5, r0
9000ca0c:	b930      	cbnz	r0, 9000ca1c <EwBeginUpdateArea+0x9c>
9000ca0e:	4602      	mov	r2, r0
9000ca10:	4621      	mov	r1, r4
9000ca12:	209b      	movs	r0, #155	; 0x9b
9000ca14:	f010 fd32 	bl	9001d47c <EwErrorPD>
9000ca18:	4628      	mov	r0, r5
9000ca1a:	e7c3      	b.n	9000c9a4 <EwBeginUpdateArea+0x24>
9000ca1c:	2201      	movs	r2, #1
9000ca1e:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
9000ca22:	f8c4 008c 	str.w	r0, [r4, #140]	; 0x8c
9000ca26:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
9000ca2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
9000ca2e:	f8a4 b078 	strh.w	fp, [r4, #120]	; 0x78
9000ca32:	e9c4 3b03 	strd	r3, fp, [r4, #12]
9000ca36:	4b0f      	ldr	r3, [pc, #60]	; (9000ca74 <EwBeginUpdateArea+0xf4>)
9000ca38:	e894 0003 	ldmia.w	r4, {r0, r1}
9000ca3c:	681b      	ldr	r3, [r3, #0]
9000ca3e:	e9c4 8724 	strd	r8, r7, [r4, #144]	; 0x90
9000ca42:	e9c4 a926 	strd	sl, r9, [r4, #152]	; 0x98
9000ca46:	4798      	blx	r3
9000ca48:	4b0b      	ldr	r3, [pc, #44]	; (9000ca78 <EwBeginUpdateArea+0xf8>)
9000ca4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000ca4c:	3201      	adds	r2, #1
9000ca4e:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
9000ca52:	635a      	str	r2, [r3, #52]	; 0x34
9000ca54:	dd0a      	ble.n	9000ca6c <EwBeginUpdateArea+0xec>
9000ca56:	691a      	ldr	r2, [r3, #16]
9000ca58:	635e      	str	r6, [r3, #52]	; 0x34
9000ca5a:	639a      	str	r2, [r3, #56]	; 0x38
9000ca5c:	695a      	ldr	r2, [r3, #20]
9000ca5e:	601e      	str	r6, [r3, #0]
9000ca60:	63da      	str	r2, [r3, #60]	; 0x3c
9000ca62:	7e1a      	ldrb	r2, [r3, #24]
9000ca64:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
9000ca68:	685a      	ldr	r2, [r3, #4]
9000ca6a:	645a      	str	r2, [r3, #68]	; 0x44
9000ca6c:	f104 0008 	add.w	r0, r4, #8
9000ca70:	e798      	b.n	9000c9a4 <EwBeginUpdateArea+0x24>
9000ca72:	bf00      	nop
9000ca74:	20000000 	.word	0x20000000
9000ca78:	200000c8 	.word	0x200000c8

9000ca7c <EwFillRectangle>:
9000ca7c:	b082      	sub	sp, #8
9000ca7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ca82:	b089      	sub	sp, #36	; 0x24
9000ca84:	4688      	mov	r8, r1
9000ca86:	4682      	mov	sl, r0
9000ca88:	ac12      	add	r4, sp, #72	; 0x48
9000ca8a:	f89d b078 	ldrb.w	fp, [sp, #120]	; 0x78
9000ca8e:	e884 000c 	stmia.w	r4, {r2, r3}
9000ca92:	9b16      	ldr	r3, [sp, #88]	; 0x58
9000ca94:	9304      	str	r3, [sp, #16]
9000ca96:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9000ca98:	9301      	str	r3, [sp, #4]
9000ca9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9000ca9c:	9305      	str	r3, [sp, #20]
9000ca9e:	9b19      	ldr	r3, [sp, #100]	; 0x64
9000caa0:	9302      	str	r3, [sp, #8]
9000caa2:	f7ff f823 	bl	9000baec <UpdateWatermark1+0x6c>
9000caa6:	f89d 306b 	ldrb.w	r3, [sp, #107]	; 0x6b
9000caaa:	4607      	mov	r7, r0
9000caac:	f89d 206a 	ldrb.w	r2, [sp, #106]	; 0x6a
9000cab0:	f89d 1069 	ldrb.w	r1, [sp, #105]	; 0x69
9000cab4:	f89d 0068 	ldrb.w	r0, [sp, #104]	; 0x68
9000cab8:	f7f8 f91b 	bl	90004cf2 <EwPackColor>
9000cabc:	f89d 306f 	ldrb.w	r3, [sp, #111]	; 0x6f
9000cac0:	f89d 206e 	ldrb.w	r2, [sp, #110]	; 0x6e
9000cac4:	4604      	mov	r4, r0
9000cac6:	f89d 106d 	ldrb.w	r1, [sp, #109]	; 0x6d
9000caca:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
9000cace:	f7f8 f910 	bl	90004cf2 <EwPackColor>
9000cad2:	f89d 3077 	ldrb.w	r3, [sp, #119]	; 0x77
9000cad6:	f89d 2076 	ldrb.w	r2, [sp, #118]	; 0x76
9000cada:	4681      	mov	r9, r0
9000cadc:	f89d 1075 	ldrb.w	r1, [sp, #117]	; 0x75
9000cae0:	f89d 0074 	ldrb.w	r0, [sp, #116]	; 0x74
9000cae4:	f7f8 f905 	bl	90004cf2 <EwPackColor>
9000cae8:	f89d 3073 	ldrb.w	r3, [sp, #115]	; 0x73
9000caec:	4605      	mov	r5, r0
9000caee:	f89d 2072 	ldrb.w	r2, [sp, #114]	; 0x72
9000caf2:	f89d 1071 	ldrb.w	r1, [sp, #113]	; 0x71
9000caf6:	f89d 0070 	ldrb.w	r0, [sp, #112]	; 0x70
9000cafa:	f7f8 f8fa 	bl	90004cf2 <EwPackColor>
9000cafe:	4606      	mov	r6, r0
9000cb00:	b12f      	cbz	r7, 9000cb0e <EwFillRectangle+0x92>
9000cb02:	6838      	ldr	r0, [r7, #0]
9000cb04:	8c03      	ldrh	r3, [r0, #32]
9000cb06:	3301      	adds	r3, #1
9000cb08:	b29b      	uxth	r3, r3
9000cb0a:	2b01      	cmp	r3, #1
9000cb0c:	d908      	bls.n	9000cb20 <EwFillRectangle+0xa4>
9000cb0e:	4642      	mov	r2, r8
9000cb10:	4651      	mov	r1, sl
9000cb12:	209c      	movs	r0, #156	; 0x9c
9000cb14:	b009      	add	sp, #36	; 0x24
9000cb16:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cb1a:	b002      	add	sp, #8
9000cb1c:	f010 bcae 	b.w	9001d47c <EwErrorPD>
9000cb20:	6983      	ldr	r3, [r0, #24]
9000cb22:	b90b      	cbnz	r3, 9000cb28 <EwFillRectangle+0xac>
9000cb24:	69c3      	ldr	r3, [r0, #28]
9000cb26:	b123      	cbz	r3, 9000cb32 <EwFillRectangle+0xb6>
9000cb28:	4642      	mov	r2, r8
9000cb2a:	4651      	mov	r1, sl
9000cb2c:	f240 1055 	movw	r0, #341	; 0x155
9000cb30:	e7f0      	b.n	9000cb14 <EwFillRectangle+0x98>
9000cb32:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000cb34:	9a04      	ldr	r2, [sp, #16]
9000cb36:	9905      	ldr	r1, [sp, #20]
9000cb38:	4293      	cmp	r3, r2
9000cb3a:	bfb8      	it	lt
9000cb3c:	4613      	movlt	r3, r2
9000cb3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9000cb40:	428a      	cmp	r2, r1
9000cb42:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000cb46:	bfa8      	it	ge
9000cb48:	460a      	movge	r2, r1
9000cb4a:	f8da 1004 	ldr.w	r1, [sl, #4]
9000cb4e:	428a      	cmp	r2, r1
9000cb50:	bfa8      	it	ge
9000cb52:	460a      	movge	r2, r1
9000cb54:	429a      	cmp	r2, r3
9000cb56:	9200      	str	r2, [sp, #0]
9000cb58:	f340 808b 	ble.w	9000cc72 <EwFillRectangle+0x1f6>
9000cb5c:	9901      	ldr	r1, [sp, #4]
9000cb5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9000cb60:	4291      	cmp	r1, r2
9000cb62:	bfb8      	it	lt
9000cb64:	4611      	movlt	r1, r2
9000cb66:	9a15      	ldr	r2, [sp, #84]	; 0x54
9000cb68:	ea21 78e1 	bic.w	r8, r1, r1, asr #31
9000cb6c:	9902      	ldr	r1, [sp, #8]
9000cb6e:	428a      	cmp	r2, r1
9000cb70:	bfa8      	it	ge
9000cb72:	460a      	movge	r2, r1
9000cb74:	f8da 1008 	ldr.w	r1, [sl, #8]
9000cb78:	428a      	cmp	r2, r1
9000cb7a:	bfa8      	it	ge
9000cb7c:	460a      	movge	r2, r1
9000cb7e:	4542      	cmp	r2, r8
9000cb80:	9203      	str	r2, [sp, #12]
9000cb82:	dd76      	ble.n	9000cc72 <EwFillRectangle+0x1f6>
9000cb84:	f1bb 0f00 	cmp.w	fp, #0
9000cb88:	d00e      	beq.n	9000cba8 <EwFillRectangle+0x12c>
9000cb8a:	ea44 0209 	orr.w	r2, r4, r9
9000cb8e:	432a      	orrs	r2, r5
9000cb90:	4332      	orrs	r2, r6
9000cb92:	0e12      	lsrs	r2, r2, #24
9000cb94:	d06d      	beq.n	9000cc72 <EwFillRectangle+0x1f6>
9000cb96:	ea04 0209 	and.w	r2, r4, r9
9000cb9a:	402a      	ands	r2, r5
9000cb9c:	4032      	ands	r2, r6
9000cb9e:	0e12      	lsrs	r2, r2, #24
9000cba0:	2aff      	cmp	r2, #255	; 0xff
9000cba2:	bf08      	it	eq
9000cba4:	f04f 0b00 	moveq.w	fp, #0
9000cba8:	9306      	str	r3, [sp, #24]
9000cbaa:	f00a fe79 	bl	900178a0 <EwInitIssue>
9000cbae:	9b06      	ldr	r3, [sp, #24]
9000cbb0:	4602      	mov	r2, r0
9000cbb2:	b910      	cbnz	r0, 9000cbba <EwFillRectangle+0x13e>
9000cbb4:	4651      	mov	r1, sl
9000cbb6:	207c      	movs	r0, #124	; 0x7c
9000cbb8:	e7ac      	b.n	9000cb14 <EwFillRectangle+0x98>
9000cbba:	2118      	movs	r1, #24
9000cbbc:	e9cd 0306 	strd	r0, r3, [sp, #24]
9000cbc0:	f00a ff0f 	bl	900179e2 <EwAllocTaskData>
9000cbc4:	9b04      	ldr	r3, [sp, #16]
9000cbc6:	4682      	mov	sl, r0
9000cbc8:	88b8      	ldrh	r0, [r7, #4]
9000cbca:	8939      	ldrh	r1, [r7, #8]
9000cbcc:	4403      	add	r3, r0
9000cbce:	9a06      	ldr	r2, [sp, #24]
9000cbd0:	f8aa 3000 	strh.w	r3, [sl]
9000cbd4:	9b01      	ldr	r3, [sp, #4]
9000cbd6:	440b      	add	r3, r1
9000cbd8:	f8aa 3002 	strh.w	r3, [sl, #2]
9000cbdc:	9b05      	ldr	r3, [sp, #20]
9000cbde:	4418      	add	r0, r3
9000cbe0:	9b02      	ldr	r3, [sp, #8]
9000cbe2:	4419      	add	r1, r3
9000cbe4:	f8aa 0004 	strh.w	r0, [sl, #4]
9000cbe8:	4610      	mov	r0, r2
9000cbea:	f8aa 1006 	strh.w	r1, [sl, #6]
9000cbee:	2100      	movs	r1, #0
9000cbf0:	e9ca 4902 	strd	r4, r9, [sl, #8]
9000cbf4:	e9ca 6504 	strd	r6, r5, [sl, #16]
9000cbf8:	f00a feba 	bl	90017970 <EwAllocTask>
9000cbfc:	2201      	movs	r2, #1
9000cbfe:	9b07      	ldr	r3, [sp, #28]
9000cc00:	f1bb 0f00 	cmp.w	fp, #0
9000cc04:	9900      	ldr	r1, [sp, #0]
9000cc06:	8082      	strh	r2, [r0, #4]
9000cc08:	88ba      	ldrh	r2, [r7, #4]
9000cc0a:	f8c0 a010 	str.w	sl, [r0, #16]
9000cc0e:	4413      	add	r3, r2
9000cc10:	440a      	add	r2, r1
9000cc12:	8103      	strh	r3, [r0, #8]
9000cc14:	893b      	ldrh	r3, [r7, #8]
9000cc16:	8182      	strh	r2, [r0, #12]
9000cc18:	9a03      	ldr	r2, [sp, #12]
9000cc1a:	4498      	add	r8, r3
9000cc1c:	4413      	add	r3, r2
9000cc1e:	f8a0 800a 	strh.w	r8, [r0, #10]
9000cc22:	81c3      	strh	r3, [r0, #14]
9000cc24:	f240 1301 	movw	r3, #257	; 0x101
9000cc28:	bf08      	it	eq
9000cc2a:	f44f 7380 	moveq.w	r3, #256	; 0x100
9000cc2e:	454c      	cmp	r4, r9
9000cc30:	d014      	beq.n	9000cc5c <EwFillRectangle+0x1e0>
9000cc32:	42b5      	cmp	r5, r6
9000cc34:	d016      	beq.n	9000cc64 <EwFillRectangle+0x1e8>
9000cc36:	42ac      	cmp	r4, r5
9000cc38:	d114      	bne.n	9000cc64 <EwFillRectangle+0x1e8>
9000cc3a:	45b1      	cmp	r9, r6
9000cc3c:	d112      	bne.n	9000cc64 <EwFillRectangle+0x1e8>
9000cc3e:	f043 0306 	orr.w	r3, r3, #6
9000cc42:	80c3      	strh	r3, [r0, #6]
9000cc44:	6838      	ldr	r0, [r7, #0]
9000cc46:	b009      	add	sp, #36	; 0x24
9000cc48:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cc4c:	b002      	add	sp, #8
9000cc4e:	f00a bf37 	b.w	90017ac0 <EwDoneIssue>
9000cc52:	42b5      	cmp	r5, r6
9000cc54:	e7f2      	b.n	9000cc3c <EwFillRectangle+0x1c0>
9000cc56:	f043 0302 	orr.w	r3, r3, #2
9000cc5a:	e7f2      	b.n	9000cc42 <EwFillRectangle+0x1c6>
9000cc5c:	42ac      	cmp	r4, r5
9000cc5e:	d104      	bne.n	9000cc6a <EwFillRectangle+0x1ee>
9000cc60:	42b4      	cmp	r4, r6
9000cc62:	d0f8      	beq.n	9000cc56 <EwFillRectangle+0x1da>
9000cc64:	f043 0304 	orr.w	r3, r3, #4
9000cc68:	e7eb      	b.n	9000cc42 <EwFillRectangle+0x1c6>
9000cc6a:	42b4      	cmp	r4, r6
9000cc6c:	d1f1      	bne.n	9000cc52 <EwFillRectangle+0x1d6>
9000cc6e:	42a5      	cmp	r5, r4
9000cc70:	e7f7      	b.n	9000cc62 <EwFillRectangle+0x1e6>
9000cc72:	b009      	add	sp, #36	; 0x24
9000cc74:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cc78:	b002      	add	sp, #8
9000cc7a:	4770      	bx	lr

9000cc7c <EwDrawBorder>:
9000cc7c:	b082      	sub	sp, #8
9000cc7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000cc82:	b09b      	sub	sp, #108	; 0x6c
9000cc84:	4689      	mov	r9, r1
9000cc86:	4680      	mov	r8, r0
9000cc88:	9e2c      	ldr	r6, [sp, #176]	; 0xb0
9000cc8a:	a924      	add	r1, sp, #144	; 0x90
9000cc8c:	f89d b0c4 	ldrb.w	fp, [sp, #196]	; 0xc4
9000cc90:	2e00      	cmp	r6, #0
9000cc92:	e881 000c 	stmia.w	r1, {r2, r3}
9000cc96:	dd29      	ble.n	9000ccec <EwDrawBorder+0x70>
9000cc98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9000cc9a:	0071      	lsls	r1, r6, #1
9000cc9c:	9310      	str	r3, [sp, #64]	; 0x40
9000cc9e:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000cca0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9000cca2:	930d      	str	r3, [sp, #52]	; 0x34
9000cca4:	1a9b      	subs	r3, r3, r2
9000cca6:	ebb3 0f46 	cmp.w	r3, r6, lsl #1
9000ccaa:	dd06      	ble.n	9000ccba <EwDrawBorder+0x3e>
9000ccac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9000ccae:	f8dd a0ac 	ldr.w	sl, [sp, #172]	; 0xac
9000ccb2:	ebaa 0203 	sub.w	r2, sl, r3
9000ccb6:	4291      	cmp	r1, r2
9000ccb8:	db1d      	blt.n	9000ccf6 <EwDrawBorder+0x7a>
9000ccba:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000ccbc:	ac02      	add	r4, sp, #8
9000ccbe:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
9000ccc2:	9309      	str	r3, [sp, #36]	; 0x24
9000ccc4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9000ccc6:	9308      	str	r3, [sp, #32]
9000ccc8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000ccca:	9307      	str	r3, [sp, #28]
9000cccc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000ccce:	9306      	str	r3, [sp, #24]
9000ccd0:	ab28      	add	r3, sp, #160	; 0xa0
9000ccd2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000ccd4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000ccd8:	ab24      	add	r3, sp, #144	; 0x90
9000ccda:	e9dd 0126 	ldrd	r0, r1, [sp, #152]	; 0x98
9000ccde:	e88d 0003 	stmia.w	sp, {r0, r1}
9000cce2:	cb0c      	ldmia	r3, {r2, r3}
9000cce4:	4649      	mov	r1, r9
9000cce6:	4640      	mov	r0, r8
9000cce8:	f7ff fec8 	bl	9000ca7c <EwFillRectangle>
9000ccec:	b01b      	add	sp, #108	; 0x6c
9000ccee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ccf2:	b002      	add	sp, #8
9000ccf4:	4770      	bx	lr
9000ccf6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9000ccf8:	ad16      	add	r5, sp, #88	; 0x58
9000ccfa:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
9000ccfe:	18f3      	adds	r3, r6, r3
9000cd00:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000cd02:	9315      	str	r3, [sp, #84]	; 0x54
9000cd04:	9311      	str	r3, [sp, #68]	; 0x44
9000cd06:	ab01      	add	r3, sp, #4
9000cd08:	9214      	str	r2, [sp, #80]	; 0x50
9000cd0a:	930e      	str	r3, [sp, #56]	; 0x38
9000cd0c:	ab12      	add	r3, sp, #72	; 0x48
9000cd0e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9000cd10:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cd12:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000cd16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9000cd18:	4628      	mov	r0, r5
9000cd1a:	9300      	str	r3, [sp, #0]
9000cd1c:	ab24      	add	r3, sp, #144	; 0x90
9000cd1e:	cb0e      	ldmia	r3, {r1, r2, r3}
9000cd20:	f011 fd30 	bl	9001e784 <EwIntersectRect>
9000cd24:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000cd26:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
9000cd2a:	9309      	str	r3, [sp, #36]	; 0x24
9000cd2c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9000cd2e:	9308      	str	r3, [sp, #32]
9000cd30:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000cd32:	9307      	str	r3, [sp, #28]
9000cd34:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000cd36:	9306      	str	r3, [sp, #24]
9000cd38:	ab02      	add	r3, sp, #8
9000cd3a:	930f      	str	r3, [sp, #60]	; 0x3c
9000cd3c:	ab28      	add	r3, sp, #160	; 0xa0
9000cd3e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9000cd40:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cd42:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
9000cd46:	af18      	add	r7, sp, #96	; 0x60
9000cd48:	e897 0003 	ldmia.w	r7, {r0, r1}
9000cd4c:	e88d 0003 	stmia.w	sp, {r0, r1}
9000cd50:	4649      	mov	r1, r9
9000cd52:	4640      	mov	r0, r8
9000cd54:	e895 000c 	ldmia.w	r5, {r2, r3}
9000cd58:	f7ff fe90 	bl	9000ca7c <EwFillRectangle>
9000cd5c:	f8cd a054 	str.w	sl, [sp, #84]	; 0x54
9000cd60:	ab12      	add	r3, sp, #72	; 0x48
9000cd62:	ebaa 0a06 	sub.w	sl, sl, r6
9000cd66:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9000cd68:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
9000cd6c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cd6e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000cd72:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9000cd74:	4628      	mov	r0, r5
9000cd76:	9300      	str	r3, [sp, #0]
9000cd78:	ab24      	add	r3, sp, #144	; 0x90
9000cd7a:	cb0e      	ldmia	r3, {r1, r2, r3}
9000cd7c:	f011 fd02 	bl	9001e784 <EwIntersectRect>
9000cd80:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000cd82:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
9000cd86:	9309      	str	r3, [sp, #36]	; 0x24
9000cd88:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9000cd8a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9000cd8c:	9308      	str	r3, [sp, #32]
9000cd8e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000cd90:	9307      	str	r3, [sp, #28]
9000cd92:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000cd94:	9306      	str	r3, [sp, #24]
9000cd96:	ab28      	add	r3, sp, #160	; 0xa0
9000cd98:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cd9a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000cd9e:	e897 0003 	ldmia.w	r7, {r0, r1}
9000cda2:	e88d 0003 	stmia.w	sp, {r0, r1}
9000cda6:	4649      	mov	r1, r9
9000cda8:	4640      	mov	r0, r8
9000cdaa:	e895 000c 	ldmia.w	r5, {r2, r3}
9000cdae:	f7ff fe65 	bl	9000ca7c <EwFillRectangle>
9000cdb2:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000cdb4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9000cdb6:	9313      	str	r3, [sp, #76]	; 0x4c
9000cdb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000cdba:	f8cd a054 	str.w	sl, [sp, #84]	; 0x54
9000cdbe:	18f3      	adds	r3, r6, r3
9000cdc0:	9314      	str	r3, [sp, #80]	; 0x50
9000cdc2:	ab12      	add	r3, sp, #72	; 0x48
9000cdc4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cdc6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000cdca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9000cdcc:	4628      	mov	r0, r5
9000cdce:	9300      	str	r3, [sp, #0]
9000cdd0:	ab24      	add	r3, sp, #144	; 0x90
9000cdd2:	cb0e      	ldmia	r3, {r1, r2, r3}
9000cdd4:	f011 fcd6 	bl	9001e784 <EwIntersectRect>
9000cdd8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000cdda:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
9000cdde:	9309      	str	r3, [sp, #36]	; 0x24
9000cde0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9000cde2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9000cde4:	9308      	str	r3, [sp, #32]
9000cde6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000cde8:	9307      	str	r3, [sp, #28]
9000cdea:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000cdec:	9306      	str	r3, [sp, #24]
9000cdee:	ab28      	add	r3, sp, #160	; 0xa0
9000cdf0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000cdf2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000cdf6:	e897 0003 	ldmia.w	r7, {r0, r1}
9000cdfa:	e88d 0003 	stmia.w	sp, {r0, r1}
9000cdfe:	4649      	mov	r1, r9
9000ce00:	4640      	mov	r0, r8
9000ce02:	e895 000c 	ldmia.w	r5, {r2, r3}
9000ce06:	f7ff fe39 	bl	9000ca7c <EwFillRectangle>
9000ce0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000ce0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9000ce0e:	9314      	str	r3, [sp, #80]	; 0x50
9000ce10:	1b9e      	subs	r6, r3, r6
9000ce12:	ab12      	add	r3, sp, #72	; 0x48
9000ce14:	9612      	str	r6, [sp, #72]	; 0x48
9000ce16:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000ce18:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000ce1c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9000ce1e:	4628      	mov	r0, r5
9000ce20:	9300      	str	r3, [sp, #0]
9000ce22:	ab24      	add	r3, sp, #144	; 0x90
9000ce24:	cb0e      	ldmia	r3, {r1, r2, r3}
9000ce26:	f011 fcad 	bl	9001e784 <EwIntersectRect>
9000ce2a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000ce2c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
9000ce30:	9309      	str	r3, [sp, #36]	; 0x24
9000ce32:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9000ce34:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9000ce36:	9308      	str	r3, [sp, #32]
9000ce38:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000ce3a:	9307      	str	r3, [sp, #28]
9000ce3c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9000ce3e:	9306      	str	r3, [sp, #24]
9000ce40:	ab28      	add	r3, sp, #160	; 0xa0
9000ce42:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000ce44:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000ce48:	e897 0003 	ldmia.w	r7, {r0, r1}
9000ce4c:	e88d 0003 	stmia.w	sp, {r0, r1}
9000ce50:	e895 000c 	ldmia.w	r5, {r2, r3}
9000ce54:	e746      	b.n	9000cce4 <EwDrawBorder+0x68>

9000ce56 <EwCreatePath>:
9000ce56:	f100 0110 	add.w	r1, r0, #16
9000ce5a:	2800      	cmp	r0, #0
9000ce5c:	b570      	push	{r4, r5, r6, lr}
9000ce5e:	4606      	mov	r6, r0
9000ce60:	ea4f 0481 	mov.w	r4, r1, lsl #2
9000ce64:	dd0d      	ble.n	9000ce82 <EwCreatePath+0x2c>
9000ce66:	4620      	mov	r0, r4
9000ce68:	f019 ff24 	bl	90026cb4 <EwAlloc>
9000ce6c:	4605      	mov	r5, r0
9000ce6e:	b950      	cbnz	r0, 9000ce86 <EwCreatePath+0x30>
9000ce70:	201b      	movs	r0, #27
9000ce72:	f011 fa9f 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000ce76:	2800      	cmp	r0, #0
9000ce78:	d1f5      	bne.n	9000ce66 <EwCreatePath+0x10>
9000ce7a:	201b      	movs	r0, #27
9000ce7c:	f010 fae8 	bl	9001d450 <EwError>
9000ce80:	e01f      	b.n	9000cec2 <EwCreatePath+0x6c>
9000ce82:	2500      	movs	r5, #0
9000ce84:	e01d      	b.n	9000cec2 <EwCreatePath+0x6c>
9000ce86:	4621      	mov	r1, r4
9000ce88:	f019 ff3c 	bl	90026d04 <EwZero>
9000ce8c:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
9000ce90:	602e      	str	r6, [r5, #0]
9000ce92:	626b      	str	r3, [r5, #36]	; 0x24
9000ce94:	636b      	str	r3, [r5, #52]	; 0x34
9000ce96:	2301      	movs	r3, #1
9000ce98:	742b      	strb	r3, [r5, #16]
9000ce9a:	4b0b      	ldr	r3, [pc, #44]	; (9000cec8 <EwCreatePath+0x72>)
9000ce9c:	6819      	ldr	r1, [r3, #0]
9000ce9e:	4421      	add	r1, r4
9000cea0:	6019      	str	r1, [r3, #0]
9000cea2:	4b0a      	ldr	r3, [pc, #40]	; (9000cecc <EwCreatePath+0x76>)
9000cea4:	681a      	ldr	r2, [r3, #0]
9000cea6:	4291      	cmp	r1, r2
9000cea8:	dd00      	ble.n	9000ceac <EwCreatePath+0x56>
9000ceaa:	6019      	str	r1, [r3, #0]
9000ceac:	4b08      	ldr	r3, [pc, #32]	; (9000ced0 <EwCreatePath+0x7a>)
9000ceae:	4a09      	ldr	r2, [pc, #36]	; (9000ced4 <EwCreatePath+0x7e>)
9000ceb0:	681b      	ldr	r3, [r3, #0]
9000ceb2:	6812      	ldr	r2, [r2, #0]
9000ceb4:	4413      	add	r3, r2
9000ceb6:	4419      	add	r1, r3
9000ceb8:	4b07      	ldr	r3, [pc, #28]	; (9000ced8 <EwCreatePath+0x82>)
9000ceba:	681a      	ldr	r2, [r3, #0]
9000cebc:	4291      	cmp	r1, r2
9000cebe:	dd00      	ble.n	9000cec2 <EwCreatePath+0x6c>
9000cec0:	6019      	str	r1, [r3, #0]
9000cec2:	4628      	mov	r0, r5
9000cec4:	bd70      	pop	{r4, r5, r6, pc}
9000cec6:	bf00      	nop
9000cec8:	200002bc 	.word	0x200002bc
9000cecc:	200002d8 	.word	0x200002d8
9000ced0:	200002ac 	.word	0x200002ac
9000ced4:	200002b8 	.word	0x200002b8
9000ced8:	200002c0 	.word	0x200002c0

9000cedc <EwGetSVGParserStatus>:
9000cedc:	4b01      	ldr	r3, [pc, #4]	; (9000cee4 <EwGetSVGParserStatus+0x8>)
9000cede:	6c98      	ldr	r0, [r3, #72]	; 0x48
9000cee0:	4770      	bx	lr
9000cee2:	bf00      	nop
9000cee4:	200000c8 	.word	0x200000c8

9000cee8 <EwGetSVGParserErrorPos>:
9000cee8:	4b01      	ldr	r3, [pc, #4]	; (9000cef0 <EwGetSVGParserErrorPos+0x8>)
9000ceea:	6898      	ldr	r0, [r3, #8]
9000ceec:	4770      	bx	lr
9000ceee:	bf00      	nop
9000cef0:	20000000 	.word	0x20000000

9000cef4 <EwFreePath>:
9000cef4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000cef6:	4604      	mov	r4, r0
9000cef8:	2800      	cmp	r0, #0
9000cefa:	d035      	beq.n	9000cf68 <EwFreePath+0x74>
9000cefc:	6803      	ldr	r3, [r0, #0]
9000cefe:	4d1b      	ldr	r5, [pc, #108]	; (9000cf6c <EwFreePath+0x78>)
9000cf00:	f103 0210 	add.w	r2, r3, #16
9000cf04:	682b      	ldr	r3, [r5, #0]
9000cf06:	eba3 0382 	sub.w	r3, r3, r2, lsl #2
9000cf0a:	602b      	str	r3, [r5, #0]
9000cf0c:	6be6      	ldr	r6, [r4, #60]	; 0x3c
9000cf0e:	b97e      	cbnz	r6, 9000cf30 <EwFreePath+0x3c>
9000cf10:	6823      	ldr	r3, [r4, #0]
9000cf12:	1e5a      	subs	r2, r3, #1
9000cf14:	330f      	adds	r3, #15
9000cf16:	eb04 0383 	add.w	r3, r4, r3, lsl #2
9000cf1a:	1c51      	adds	r1, r2, #1
9000cf1c:	4694      	mov	ip, r2
9000cf1e:	2900      	cmp	r1, #0
9000cf20:	dc0f      	bgt.n	9000cf42 <EwFreePath+0x4e>
9000cf22:	2300      	movs	r3, #0
9000cf24:	4620      	mov	r0, r4
9000cf26:	6023      	str	r3, [r4, #0]
9000cf28:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
9000cf2c:	f019 bec4 	b.w	90026cb8 <EwFree>
9000cf30:	682b      	ldr	r3, [r5, #0]
9000cf32:	4630      	mov	r0, r6
9000cf34:	6837      	ldr	r7, [r6, #0]
9000cf36:	3b1c      	subs	r3, #28
9000cf38:	602b      	str	r3, [r5, #0]
9000cf3a:	f019 febd 	bl	90026cb8 <EwFree>
9000cf3e:	63e7      	str	r7, [r4, #60]	; 0x3c
9000cf40:	e7e4      	b.n	9000cf0c <EwFreePath+0x18>
9000cf42:	461f      	mov	r7, r3
9000cf44:	f853 0904 	ldr.w	r0, [r3], #-4
9000cf48:	3a01      	subs	r2, #1
9000cf4a:	2800      	cmp	r0, #0
9000cf4c:	d0e5      	beq.n	9000cf1a <EwFreePath+0x26>
9000cf4e:	682b      	ldr	r3, [r5, #0]
9000cf50:	6802      	ldr	r2, [r0, #0]
9000cf52:	3b24      	subs	r3, #36	; 0x24
9000cf54:	f8c4 c000 	str.w	ip, [r4]
9000cf58:	3201      	adds	r2, #1
9000cf5a:	eba3 03c2 	sub.w	r3, r3, r2, lsl #3
9000cf5e:	602b      	str	r3, [r5, #0]
9000cf60:	f019 feaa 	bl	90026cb8 <EwFree>
9000cf64:	603e      	str	r6, [r7, #0]
9000cf66:	e7d3      	b.n	9000cf10 <EwFreePath+0x1c>
9000cf68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000cf6a:	bf00      	nop
9000cf6c:	200002bc 	.word	0x200002bc

9000cf70 <EwGetMaxNoOfSubPaths>:
9000cf70:	b100      	cbz	r0, 9000cf74 <EwGetMaxNoOfSubPaths+0x4>
9000cf72:	6800      	ldr	r0, [r0, #0]
9000cf74:	4770      	bx	lr

9000cf76 <EwInitSubPath>:
9000cf76:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000cf7a:	460e      	mov	r6, r1
9000cf7c:	4690      	mov	r8, r2
9000cf7e:	4604      	mov	r4, r0
9000cf80:	2800      	cmp	r0, #0
9000cf82:	d038      	beq.n	9000cff6 <EwInitSubPath+0x80>
9000cf84:	6803      	ldr	r3, [r0, #0]
9000cf86:	428b      	cmp	r3, r1
9000cf88:	dd35      	ble.n	9000cff6 <EwInitSubPath+0x80>
9000cf8a:	2900      	cmp	r1, #0
9000cf8c:	db33      	blt.n	9000cff6 <EwInitSubPath+0x80>
9000cf8e:	2a00      	cmp	r2, #0
9000cf90:	f100 0940 	add.w	r9, r0, #64	; 0x40
9000cf94:	bfcc      	ite	gt
9000cf96:	00d5      	lslgt	r5, r2, #3
9000cf98:	f04f 0800 	movle.w	r8, #0
9000cf9c:	f859 0021 	ldr.w	r0, [r9, r1, lsl #2]
9000cfa0:	eb09 0a81 	add.w	sl, r9, r1, lsl #2
9000cfa4:	bfcc      	ite	gt
9000cfa6:	352c      	addgt	r5, #44	; 0x2c
9000cfa8:	4645      	movle	r5, r8
9000cfaa:	b338      	cbz	r0, 9000cffc <EwInitSubPath+0x86>
9000cfac:	6807      	ldr	r7, [r0, #0]
9000cfae:	00ff      	lsls	r7, r7, #3
9000cfb0:	372c      	adds	r7, #44	; 0x2c
9000cfb2:	42bd      	cmp	r5, r7
9000cfb4:	d008      	beq.n	9000cfc8 <EwInitSubPath+0x52>
9000cfb6:	4a25      	ldr	r2, [pc, #148]	; (9000d04c <EwInitSubPath+0xd6>)
9000cfb8:	6813      	ldr	r3, [r2, #0]
9000cfba:	1bdb      	subs	r3, r3, r7
9000cfbc:	6013      	str	r3, [r2, #0]
9000cfbe:	f019 fe7b 	bl	90026cb8 <EwFree>
9000cfc2:	2300      	movs	r3, #0
9000cfc4:	f849 3026 	str.w	r3, [r9, r6, lsl #2]
9000cfc8:	f859 3026 	ldr.w	r3, [r9, r6, lsl #2]
9000cfcc:	bb63      	cbnz	r3, 9000d028 <EwInitSubPath+0xb2>
9000cfce:	b35d      	cbz	r5, 9000d028 <EwInitSubPath+0xb2>
9000cfd0:	4628      	mov	r0, r5
9000cfd2:	f019 fe6f 	bl	90026cb4 <EwAlloc>
9000cfd6:	f8ca 0000 	str.w	r0, [sl]
9000cfda:	b988      	cbnz	r0, 9000d000 <EwInitSubPath+0x8a>
9000cfdc:	201c      	movs	r0, #28
9000cfde:	f011 f9e9 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000cfe2:	2800      	cmp	r0, #0
9000cfe4:	d1f4      	bne.n	9000cfd0 <EwInitSubPath+0x5a>
9000cfe6:	f859 a026 	ldr.w	sl, [r9, r6, lsl #2]
9000cfea:	f1ba 0f00 	cmp.w	sl, #0
9000cfee:	d107      	bne.n	9000d000 <EwInitSubPath+0x8a>
9000cff0:	201c      	movs	r0, #28
9000cff2:	f010 fa2d 	bl	9001d450 <EwError>
9000cff6:	2000      	movs	r0, #0
9000cff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000cffc:	4607      	mov	r7, r0
9000cffe:	e7e3      	b.n	9000cfc8 <EwInitSubPath+0x52>
9000d000:	4b12      	ldr	r3, [pc, #72]	; (9000d04c <EwInitSubPath+0xd6>)
9000d002:	681a      	ldr	r2, [r3, #0]
9000d004:	4415      	add	r5, r2
9000d006:	601d      	str	r5, [r3, #0]
9000d008:	4b11      	ldr	r3, [pc, #68]	; (9000d050 <EwInitSubPath+0xda>)
9000d00a:	681a      	ldr	r2, [r3, #0]
9000d00c:	4295      	cmp	r5, r2
9000d00e:	4a11      	ldr	r2, [pc, #68]	; (9000d054 <EwInitSubPath+0xde>)
9000d010:	bfc8      	it	gt
9000d012:	601d      	strgt	r5, [r3, #0]
9000d014:	4b10      	ldr	r3, [pc, #64]	; (9000d058 <EwInitSubPath+0xe2>)
9000d016:	6812      	ldr	r2, [r2, #0]
9000d018:	681b      	ldr	r3, [r3, #0]
9000d01a:	4413      	add	r3, r2
9000d01c:	441d      	add	r5, r3
9000d01e:	4b0f      	ldr	r3, [pc, #60]	; (9000d05c <EwInitSubPath+0xe6>)
9000d020:	681a      	ldr	r2, [r3, #0]
9000d022:	4295      	cmp	r5, r2
9000d024:	bfc8      	it	gt
9000d026:	601d      	strgt	r5, [r3, #0]
9000d028:	f859 0026 	ldr.w	r0, [r9, r6, lsl #2]
9000d02c:	b140      	cbz	r0, 9000d040 <EwInitSubPath+0xca>
9000d02e:	2124      	movs	r1, #36	; 0x24
9000d030:	f019 fe68 	bl	90026d04 <EwZero>
9000d034:	f859 3026 	ldr.w	r3, [r9, r6, lsl #2]
9000d038:	2201      	movs	r2, #1
9000d03a:	f8c3 8000 	str.w	r8, [r3]
9000d03e:	72da      	strb	r2, [r3, #11]
9000d040:	b10f      	cbz	r7, 9000d046 <EwInitSubPath+0xd0>
9000d042:	2300      	movs	r3, #0
9000d044:	7423      	strb	r3, [r4, #16]
9000d046:	2001      	movs	r0, #1
9000d048:	e7d6      	b.n	9000cff8 <EwInitSubPath+0x82>
9000d04a:	bf00      	nop
9000d04c:	200002bc 	.word	0x200002bc
9000d050:	200002d8 	.word	0x200002d8
9000d054:	200002b8 	.word	0x200002b8
9000d058:	200002ac 	.word	0x200002ac
9000d05c:	200002c0 	.word	0x200002c0

9000d060 <EwBeginSubPath>:
9000d060:	2800      	cmp	r0, #0
9000d062:	d04a      	beq.n	9000d0fa <EwBeginSubPath+0x9a>
9000d064:	6803      	ldr	r3, [r0, #0]
9000d066:	428b      	cmp	r3, r1
9000d068:	dd47      	ble.n	9000d0fa <EwBeginSubPath+0x9a>
9000d06a:	2900      	cmp	r1, #0
9000d06c:	db45      	blt.n	9000d0fa <EwBeginSubPath+0x9a>
9000d06e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d072:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9000d074:	2b00      	cmp	r3, #0
9000d076:	d040      	beq.n	9000d0fa <EwBeginSubPath+0x9a>
9000d078:	eef7 4a00 	vmov.f32	s9, #112	; 0x3f800000  1.0
9000d07c:	ed90 5a09 	vldr	s10, [r0, #36]	; 0x24
9000d080:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000d084:	ed90 7a0b 	vldr	s14, [r0, #44]	; 0x2c
9000d088:	eeb4 5a64 	vcmp.f32	s10, s9
9000d08c:	ed90 6a0c 	vldr	s12, [r0, #48]	; 0x30
9000d090:	edd0 5a0d 	vldr	s11, [r0, #52]	; 0x34
9000d094:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
9000d098:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d09c:	d118      	bne.n	9000d0d0 <EwBeginSubPath+0x70>
9000d09e:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d0a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d0a6:	d113      	bne.n	9000d0d0 <EwBeginSubPath+0x70>
9000d0a8:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d0ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d0b0:	d10e      	bne.n	9000d0d0 <EwBeginSubPath+0x70>
9000d0b2:	eeb5 6a40 	vcmp.f32	s12, #0.0
9000d0b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d0ba:	d109      	bne.n	9000d0d0 <EwBeginSubPath+0x70>
9000d0bc:	eef4 5a64 	vcmp.f32	s11, s9
9000d0c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d0c4:	d104      	bne.n	9000d0d0 <EwBeginSubPath+0x70>
9000d0c6:	eef5 6a40 	vcmp.f32	s13, #0.0
9000d0ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d0ce:	d00b      	beq.n	9000d0e8 <EwBeginSubPath+0x88>
9000d0d0:	ee60 7aa7 	vmul.f32	s15, s1, s15
9000d0d4:	ee60 0aa5 	vmul.f32	s1, s1, s11
9000d0d8:	eee5 7a00 	vfma.f32	s15, s10, s0
9000d0dc:	eee0 0a06 	vfma.f32	s1, s0, s12
9000d0e0:	ee37 0a87 	vadd.f32	s0, s15, s14
9000d0e4:	ee70 0aa6 	vadd.f32	s1, s1, s13
9000d0e8:	2200      	movs	r2, #0
9000d0ea:	2101      	movs	r1, #1
9000d0ec:	ed83 0a07 	vstr	s0, [r3, #28]
9000d0f0:	edc3 0a08 	vstr	s1, [r3, #32]
9000d0f4:	e9c3 2101 	strd	r2, r1, [r3, #4]
9000d0f8:	7402      	strb	r2, [r0, #16]
9000d0fa:	4770      	bx	lr

9000d0fc <EwAddSubPathLine>:
9000d0fc:	b510      	push	{r4, lr}
9000d0fe:	2800      	cmp	r0, #0
9000d100:	d059      	beq.n	9000d1b6 <EwAddSubPathLine+0xba>
9000d102:	6803      	ldr	r3, [r0, #0]
9000d104:	428b      	cmp	r3, r1
9000d106:	dd56      	ble.n	9000d1b6 <EwAddSubPathLine+0xba>
9000d108:	2900      	cmp	r1, #0
9000d10a:	db54      	blt.n	9000d1b6 <EwAddSubPathLine+0xba>
9000d10c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d110:	6c0a      	ldr	r2, [r1, #64]	; 0x40
9000d112:	2a00      	cmp	r2, #0
9000d114:	d04f      	beq.n	9000d1b6 <EwAddSubPathLine+0xba>
9000d116:	7a91      	ldrb	r1, [r2, #10]
9000d118:	2900      	cmp	r1, #0
9000d11a:	d14c      	bne.n	9000d1b6 <EwAddSubPathLine+0xba>
9000d11c:	e9d2 4300 	ldrd	r4, r3, [r2]
9000d120:	42a3      	cmp	r3, r4
9000d122:	da4a      	bge.n	9000d1ba <EwAddSubPathLine+0xbe>
9000d124:	f240 1401 	movw	r4, #257	; 0x101
9000d128:	eef7 4a00 	vmov.f32	s9, #112	; 0x3f800000  1.0
9000d12c:	72d1      	strb	r1, [r2, #11]
9000d12e:	8114      	strh	r4, [r2, #8]
9000d130:	ed90 5a09 	vldr	s10, [r0, #36]	; 0x24
9000d134:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000d138:	eeb4 5a64 	vcmp.f32	s10, s9
9000d13c:	ed90 7a0b 	vldr	s14, [r0, #44]	; 0x2c
9000d140:	ed90 6a0c 	vldr	s12, [r0, #48]	; 0x30
9000d144:	edd0 5a0d 	vldr	s11, [r0, #52]	; 0x34
9000d148:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d14c:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
9000d150:	7401      	strb	r1, [r0, #16]
9000d152:	d118      	bne.n	9000d186 <EwAddSubPathLine+0x8a>
9000d154:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d158:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d15c:	d113      	bne.n	9000d186 <EwAddSubPathLine+0x8a>
9000d15e:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d162:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d166:	d10e      	bne.n	9000d186 <EwAddSubPathLine+0x8a>
9000d168:	eeb5 6a40 	vcmp.f32	s12, #0.0
9000d16c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d170:	d109      	bne.n	9000d186 <EwAddSubPathLine+0x8a>
9000d172:	eef4 5a64 	vcmp.f32	s11, s9
9000d176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d17a:	d104      	bne.n	9000d186 <EwAddSubPathLine+0x8a>
9000d17c:	eef5 6a40 	vcmp.f32	s13, #0.0
9000d180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d184:	d00b      	beq.n	9000d19e <EwAddSubPathLine+0xa2>
9000d186:	ee60 7aa7 	vmul.f32	s15, s1, s15
9000d18a:	ee60 0aa5 	vmul.f32	s1, s1, s11
9000d18e:	eee5 7a00 	vfma.f32	s15, s10, s0
9000d192:	eee6 0a00 	vfma.f32	s1, s12, s0
9000d196:	ee37 0a87 	vadd.f32	s0, s15, s14
9000d19a:	ee70 0aa6 	vadd.f32	s1, s1, s13
9000d19e:	1c58      	adds	r0, r3, #1
9000d1a0:	f102 011c 	add.w	r1, r2, #28
9000d1a4:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
9000d1a8:	ed81 0a00 	vstr	s0, [r1]
9000d1ac:	edc1 0a01 	vstr	s1, [r1, #4]
9000d1b0:	6050      	str	r0, [r2, #4]
9000d1b2:	4618      	mov	r0, r3
9000d1b4:	bd10      	pop	{r4, pc}
9000d1b6:	2300      	movs	r3, #0
9000d1b8:	e7fb      	b.n	9000d1b2 <EwAddSubPathLine+0xb6>
9000d1ba:	460b      	mov	r3, r1
9000d1bc:	e7f9      	b.n	9000d1b2 <EwAddSubPathLine+0xb6>

9000d1be <EwAddSubPathBezier2>:
9000d1be:	2a00      	cmp	r2, #0
9000d1c0:	b570      	push	{r4, r5, r6, lr}
9000d1c2:	f340 80a3 	ble.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1c6:	2800      	cmp	r0, #0
9000d1c8:	f000 80a0 	beq.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1cc:	6803      	ldr	r3, [r0, #0]
9000d1ce:	428b      	cmp	r3, r1
9000d1d0:	f340 809c 	ble.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1d4:	2900      	cmp	r1, #0
9000d1d6:	f2c0 8099 	blt.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1da:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d1de:	6c09      	ldr	r1, [r1, #64]	; 0x40
9000d1e0:	2900      	cmp	r1, #0
9000d1e2:	f000 8093 	beq.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1e6:	7a8c      	ldrb	r4, [r1, #10]
9000d1e8:	2c00      	cmp	r4, #0
9000d1ea:	f040 808f 	bne.w	9000d30c <EwAddSubPathBezier2+0x14e>
9000d1ee:	684b      	ldr	r3, [r1, #4]
9000d1f0:	680d      	ldr	r5, [r1, #0]
9000d1f2:	189e      	adds	r6, r3, r2
9000d1f4:	42ae      	cmp	r6, r5
9000d1f6:	f300 808b 	bgt.w	9000d310 <EwAddSubPathBezier2+0x152>
9000d1fa:	f240 1501 	movw	r5, #257	; 0x101
9000d1fe:	eeb7 4a00 	vmov.f32	s8, #112	; 0x3f800000  1.0
9000d202:	72cc      	strb	r4, [r1, #11]
9000d204:	810d      	strh	r5, [r1, #8]
9000d206:	edd0 4a09 	vldr	s9, [r0, #36]	; 0x24
9000d20a:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000d20e:	eef4 4a44 	vcmp.f32	s9, s8
9000d212:	edd0 6a0b 	vldr	s13, [r0, #44]	; 0x2c
9000d216:	ed90 5a0c 	vldr	s10, [r0, #48]	; 0x30
9000d21a:	ed90 7a0d 	vldr	s14, [r0, #52]	; 0x34
9000d21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d222:	edd0 5a0e 	vldr	s11, [r0, #56]	; 0x38
9000d226:	7404      	strb	r4, [r0, #16]
9000d228:	d118      	bne.n	9000d25c <EwAddSubPathBezier2+0x9e>
9000d22a:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d22e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d232:	d113      	bne.n	9000d25c <EwAddSubPathBezier2+0x9e>
9000d234:	eef5 6a40 	vcmp.f32	s13, #0.0
9000d238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d23c:	d10e      	bne.n	9000d25c <EwAddSubPathBezier2+0x9e>
9000d23e:	eeb5 5a40 	vcmp.f32	s10, #0.0
9000d242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d246:	d109      	bne.n	9000d25c <EwAddSubPathBezier2+0x9e>
9000d248:	eeb4 7a44 	vcmp.f32	s14, s8
9000d24c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d250:	d104      	bne.n	9000d25c <EwAddSubPathBezier2+0x9e>
9000d252:	eef5 5a40 	vcmp.f32	s11, #0.0
9000d256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d25a:	d017      	beq.n	9000d28c <EwAddSubPathBezier2+0xce>
9000d25c:	ee27 6aa0 	vmul.f32	s12, s15, s1
9000d260:	ee67 7aa1 	vmul.f32	s15, s15, s3
9000d264:	ee67 0a20 	vmul.f32	s1, s14, s1
9000d268:	ee67 1a21 	vmul.f32	s3, s14, s3
9000d26c:	eea4 6a80 	vfma.f32	s12, s9, s0
9000d270:	eee5 0a00 	vfma.f32	s1, s10, s0
9000d274:	eee5 1a01 	vfma.f32	s3, s10, s2
9000d278:	eee4 7a81 	vfma.f32	s15, s9, s2
9000d27c:	ee36 0a26 	vadd.f32	s0, s12, s13
9000d280:	ee70 0aa5 	vadd.f32	s1, s1, s11
9000d284:	ee75 1aa1 	vadd.f32	s3, s11, s3
9000d288:	ee36 1aa7 	vadd.f32	s2, s13, s15
9000d28c:	ee07 2a90 	vmov	s15, r2
9000d290:	f101 041c 	add.w	r4, r1, #28
9000d294:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d298:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
9000d29c:	4620      	mov	r0, r4
9000d29e:	edd4 4a00 	vldr	s9, [r4]
9000d2a2:	ee84 6a27 	vdiv.f32	s12, s8, s15
9000d2a6:	edd4 3a01 	vldr	s7, [r4, #4]
9000d2aa:	3008      	adds	r0, #8
9000d2ac:	2401      	movs	r4, #1
9000d2ae:	4605      	mov	r5, r0
9000d2b0:	eeb0 7a46 	vmov.f32	s14, s12
9000d2b4:	4294      	cmp	r4, r2
9000d2b6:	f105 0508 	add.w	r5, r5, #8
9000d2ba:	d109      	bne.n	9000d2d0 <EwAddSubPathBezier2+0x112>
9000d2bc:	3c01      	subs	r4, #1
9000d2be:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
9000d2c2:	ed80 1a00 	vstr	s2, [r0]
9000d2c6:	edc0 1a01 	vstr	s3, [r0, #4]
9000d2ca:	604e      	str	r6, [r1, #4]
9000d2cc:	4618      	mov	r0, r3
9000d2ce:	bd70      	pop	{r4, r5, r6, pc}
9000d2d0:	ee74 7a47 	vsub.f32	s15, s8, s14
9000d2d4:	3401      	adds	r4, #1
9000d2d6:	ee67 5a07 	vmul.f32	s11, s14, s14
9000d2da:	ee27 5aa7 	vmul.f32	s10, s15, s15
9000d2de:	ee77 7aa7 	vadd.f32	s15, s15, s15
9000d2e2:	ee67 7a87 	vmul.f32	s15, s15, s14
9000d2e6:	ee37 7a06 	vadd.f32	s14, s14, s12
9000d2ea:	ee60 6a27 	vmul.f32	s13, s0, s15
9000d2ee:	ee60 7aa7 	vmul.f32	s15, s1, s15
9000d2f2:	eee4 6a85 	vfma.f32	s13, s9, s10
9000d2f6:	eee3 7a85 	vfma.f32	s15, s7, s10
9000d2fa:	eee1 6a25 	vfma.f32	s13, s2, s11
9000d2fe:	eee1 7aa5 	vfma.f32	s15, s3, s11
9000d302:	ed45 6a02 	vstr	s13, [r5, #-8]
9000d306:	ed45 7a01 	vstr	s15, [r5, #-4]
9000d30a:	e7d3      	b.n	9000d2b4 <EwAddSubPathBezier2+0xf6>
9000d30c:	2300      	movs	r3, #0
9000d30e:	e7dd      	b.n	9000d2cc <EwAddSubPathBezier2+0x10e>
9000d310:	4623      	mov	r3, r4
9000d312:	e7db      	b.n	9000d2cc <EwAddSubPathBezier2+0x10e>

9000d314 <EwAddSubPathBezier3>:
9000d314:	2a00      	cmp	r2, #0
9000d316:	b570      	push	{r4, r5, r6, lr}
9000d318:	ed2d 8b02 	vpush	{d8}
9000d31c:	f340 80bf 	ble.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d320:	2800      	cmp	r0, #0
9000d322:	f000 80bc 	beq.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d326:	6803      	ldr	r3, [r0, #0]
9000d328:	428b      	cmp	r3, r1
9000d32a:	f340 80b8 	ble.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d32e:	2900      	cmp	r1, #0
9000d330:	f2c0 80b5 	blt.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d334:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d338:	6c09      	ldr	r1, [r1, #64]	; 0x40
9000d33a:	2900      	cmp	r1, #0
9000d33c:	f000 80af 	beq.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d340:	7a8c      	ldrb	r4, [r1, #10]
9000d342:	2c00      	cmp	r4, #0
9000d344:	f040 80ab 	bne.w	9000d49e <EwAddSubPathBezier3+0x18a>
9000d348:	684b      	ldr	r3, [r1, #4]
9000d34a:	680d      	ldr	r5, [r1, #0]
9000d34c:	189e      	adds	r6, r3, r2
9000d34e:	42ae      	cmp	r6, r5
9000d350:	f300 80a7 	bgt.w	9000d4a2 <EwAddSubPathBezier3+0x18e>
9000d354:	f240 1501 	movw	r5, #257	; 0x101
9000d358:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
9000d35c:	72cc      	strb	r4, [r1, #11]
9000d35e:	810d      	strh	r5, [r1, #8]
9000d360:	edd0 4a09 	vldr	s9, [r0, #36]	; 0x24
9000d364:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000d368:	eef4 4a45 	vcmp.f32	s9, s10
9000d36c:	edd0 6a0b 	vldr	s13, [r0, #44]	; 0x2c
9000d370:	edd0 5a0c 	vldr	s11, [r0, #48]	; 0x30
9000d374:	ed90 7a0d 	vldr	s14, [r0, #52]	; 0x34
9000d378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d37c:	ed90 6a0e 	vldr	s12, [r0, #56]	; 0x38
9000d380:	7404      	strb	r4, [r0, #16]
9000d382:	d118      	bne.n	9000d3b6 <EwAddSubPathBezier3+0xa2>
9000d384:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d388:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d38c:	d113      	bne.n	9000d3b6 <EwAddSubPathBezier3+0xa2>
9000d38e:	eef5 6a40 	vcmp.f32	s13, #0.0
9000d392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d396:	d10e      	bne.n	9000d3b6 <EwAddSubPathBezier3+0xa2>
9000d398:	eef5 5a40 	vcmp.f32	s11, #0.0
9000d39c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d3a0:	d109      	bne.n	9000d3b6 <EwAddSubPathBezier3+0xa2>
9000d3a2:	eeb4 7a45 	vcmp.f32	s14, s10
9000d3a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d3aa:	d104      	bne.n	9000d3b6 <EwAddSubPathBezier3+0xa2>
9000d3ac:	eeb5 6a40 	vcmp.f32	s12, #0.0
9000d3b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d3b4:	d023      	beq.n	9000d3fe <EwAddSubPathBezier3+0xea>
9000d3b6:	ee27 4aa0 	vmul.f32	s8, s15, s1
9000d3ba:	ee67 3aa1 	vmul.f32	s7, s15, s3
9000d3be:	ee67 0a20 	vmul.f32	s1, s14, s1
9000d3c2:	ee67 1a21 	vmul.f32	s3, s14, s3
9000d3c6:	ee67 7aa2 	vmul.f32	s15, s15, s5
9000d3ca:	ee27 7a22 	vmul.f32	s14, s14, s5
9000d3ce:	eee5 0a80 	vfma.f32	s1, s11, s0
9000d3d2:	eee5 1a81 	vfma.f32	s3, s11, s2
9000d3d6:	eea5 7a82 	vfma.f32	s14, s11, s4
9000d3da:	eea4 4a80 	vfma.f32	s8, s9, s0
9000d3de:	eee4 3a81 	vfma.f32	s7, s9, s2
9000d3e2:	eee4 7a82 	vfma.f32	s15, s9, s4
9000d3e6:	ee70 0a86 	vadd.f32	s1, s1, s12
9000d3ea:	ee76 1a21 	vadd.f32	s3, s12, s3
9000d3ee:	ee76 2a07 	vadd.f32	s5, s12, s14
9000d3f2:	ee34 0a26 	vadd.f32	s0, s8, s13
9000d3f6:	ee36 1aa3 	vadd.f32	s2, s13, s7
9000d3fa:	ee36 2aa7 	vadd.f32	s4, s13, s15
9000d3fe:	ee07 2a90 	vmov	s15, r2
9000d402:	f101 041c 	add.w	r4, r1, #28
9000d406:	eeb0 4a08 	vmov.f32	s8, #8	; 0x40400000  3.0
9000d40a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000d40e:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
9000d412:	4620      	mov	r0, r4
9000d414:	ed94 3a00 	vldr	s6, [r4]
9000d418:	eec5 4a27 	vdiv.f32	s9, s10, s15
9000d41c:	ed94 8a01 	vldr	s16, [r4, #4]
9000d420:	3008      	adds	r0, #8
9000d422:	2401      	movs	r4, #1
9000d424:	4605      	mov	r5, r0
9000d426:	eef0 6a64 	vmov.f32	s13, s9
9000d42a:	4294      	cmp	r4, r2
9000d42c:	f105 0508 	add.w	r5, r5, #8
9000d430:	d10b      	bne.n	9000d44a <EwAddSubPathBezier3+0x136>
9000d432:	3c01      	subs	r4, #1
9000d434:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
9000d438:	ed80 2a00 	vstr	s4, [r0]
9000d43c:	edc0 2a01 	vstr	s5, [r0, #4]
9000d440:	604e      	str	r6, [r1, #4]
9000d442:	4618      	mov	r0, r3
9000d444:	ecbd 8b02 	vpop	{d8}
9000d448:	bd70      	pop	{r4, r5, r6, pc}
9000d44a:	ee35 7a66 	vsub.f32	s14, s10, s13
9000d44e:	3401      	adds	r4, #1
9000d450:	ee66 5aa6 	vmul.f32	s11, s13, s13
9000d454:	ee67 7a07 	vmul.f32	s15, s14, s14
9000d458:	ee67 3a27 	vmul.f32	s7, s14, s15
9000d45c:	ee67 7a84 	vmul.f32	s15, s15, s8
9000d460:	ee27 7a04 	vmul.f32	s14, s14, s8
9000d464:	ee67 7aa6 	vmul.f32	s15, s15, s13
9000d468:	ee27 7a25 	vmul.f32	s14, s14, s11
9000d46c:	ee66 5aa5 	vmul.f32	s11, s13, s11
9000d470:	ee20 6a27 	vmul.f32	s12, s0, s15
9000d474:	ee60 7aa7 	vmul.f32	s15, s1, s15
9000d478:	ee76 6aa4 	vadd.f32	s13, s13, s9
9000d47c:	eea3 6a23 	vfma.f32	s12, s6, s7
9000d480:	eee8 7a23 	vfma.f32	s15, s16, s7
9000d484:	eea1 6a07 	vfma.f32	s12, s2, s14
9000d488:	eee1 7a87 	vfma.f32	s15, s3, s14
9000d48c:	eea2 6a25 	vfma.f32	s12, s4, s11
9000d490:	eee2 7aa5 	vfma.f32	s15, s5, s11
9000d494:	ed05 6a02 	vstr	s12, [r5, #-8]
9000d498:	ed45 7a01 	vstr	s15, [r5, #-4]
9000d49c:	e7c5      	b.n	9000d42a <EwAddSubPathBezier3+0x116>
9000d49e:	2300      	movs	r3, #0
9000d4a0:	e7cf      	b.n	9000d442 <EwAddSubPathBezier3+0x12e>
9000d4a2:	4623      	mov	r3, r4
9000d4a4:	e7cd      	b.n	9000d442 <EwAddSubPathBezier3+0x12e>

9000d4a6 <EwAddSubPathArc>:
9000d4a6:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d4aa:	1e16      	subs	r6, r2, #0
9000d4ac:	4604      	mov	r4, r0
9000d4ae:	460f      	mov	r7, r1
9000d4b0:	ed2d 8b0a 	vpush	{d8-d12}
9000d4b4:	eef0 9a40 	vmov.f32	s19, s0
9000d4b8:	eeb0 aa60 	vmov.f32	s20, s1
9000d4bc:	eef0 aa41 	vmov.f32	s21, s2
9000d4c0:	eeb0 ba61 	vmov.f32	s22, s3
9000d4c4:	eeb0 8a42 	vmov.f32	s16, s4
9000d4c8:	eeb0 9a62 	vmov.f32	s18, s5
9000d4cc:	dd19      	ble.n	9000d502 <EwAddSubPathArc+0x5c>
9000d4ce:	eeb4 2a62 	vcmp.f32	s4, s5
9000d4d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d4d6:	d014      	beq.n	9000d502 <EwAddSubPathArc+0x5c>
9000d4d8:	b198      	cbz	r0, 9000d502 <EwAddSubPathArc+0x5c>
9000d4da:	6803      	ldr	r3, [r0, #0]
9000d4dc:	428b      	cmp	r3, r1
9000d4de:	dd10      	ble.n	9000d502 <EwAddSubPathArc+0x5c>
9000d4e0:	2900      	cmp	r1, #0
9000d4e2:	db0e      	blt.n	9000d502 <EwAddSubPathArc+0x5c>
9000d4e4:	f100 0a40 	add.w	sl, r0, #64	; 0x40
9000d4e8:	f85a 0021 	ldr.w	r0, [sl, r1, lsl #2]
9000d4ec:	2800      	cmp	r0, #0
9000d4ee:	f000 80b2 	beq.w	9000d656 <EwAddSubPathArc+0x1b0>
9000d4f2:	7a03      	ldrb	r3, [r0, #8]
9000d4f4:	2b00      	cmp	r3, #0
9000d4f6:	f000 80be 	beq.w	9000d676 <EwAddSubPathArc+0x1d0>
9000d4fa:	f106 0901 	add.w	r9, r6, #1
9000d4fe:	7a83      	ldrb	r3, [r0, #10]
9000d500:	b10b      	cbz	r3, 9000d506 <EwAddSubPathArc+0x60>
9000d502:	2000      	movs	r0, #0
9000d504:	e0a7      	b.n	9000d656 <EwAddSubPathArc+0x1b0>
9000d506:	6841      	ldr	r1, [r0, #4]
9000d508:	6802      	ldr	r2, [r0, #0]
9000d50a:	eb01 0509 	add.w	r5, r1, r9
9000d50e:	4295      	cmp	r5, r2
9000d510:	dcf7      	bgt.n	9000d502 <EwAddSubPathArc+0x5c>
9000d512:	ee07 6a10 	vmov	s14, r6
9000d516:	ee79 7a48 	vsub.f32	s15, s18, s16
9000d51a:	f240 1201 	movw	r2, #257	; 0x101
9000d51e:	72c3      	strb	r3, [r0, #11]
9000d520:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000d524:	eba9 0506 	sub.w	r5, r9, r6
9000d528:	8102      	strh	r2, [r0, #8]
9000d52a:	301c      	adds	r0, #28
9000d52c:	440d      	add	r5, r1
9000d52e:	7423      	strb	r3, [r4, #16]
9000d530:	ee87 ca87 	vdiv.f32	s24, s15, s14
9000d534:	ed94 7a09 	vldr	s14, [r4, #36]	; 0x24
9000d538:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000d53c:	eeb4 7a67 	vcmp.f32	s14, s15
9000d540:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d544:	f040 808b 	bne.w	9000d65e <EwAddSubPathArc+0x1b8>
9000d548:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9000d54c:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d554:	f040 8083 	bne.w	9000d65e <EwAddSubPathArc+0x1b8>
9000d558:	ed94 7a0b 	vldr	s14, [r4, #44]	; 0x2c
9000d55c:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d560:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d564:	d17b      	bne.n	9000d65e <EwAddSubPathArc+0x1b8>
9000d566:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
9000d56a:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d56e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d572:	d174      	bne.n	9000d65e <EwAddSubPathArc+0x1b8>
9000d574:	ed94 7a0d 	vldr	s14, [r4, #52]	; 0x34
9000d578:	eeb4 7a67 	vcmp.f32	s14, s15
9000d57c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d580:	d16d      	bne.n	9000d65e <EwAddSubPathArc+0x1b8>
9000d582:	edd4 7a0e 	vldr	s15, [r4, #56]	; 0x38
9000d586:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d58a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d58e:	bf14      	ite	ne
9000d590:	f04f 0801 	movne.w	r8, #1
9000d594:	f04f 0800 	moveq.w	r8, #0
9000d598:	3501      	adds	r5, #1
9000d59a:	eef0 ba48 	vmov.f32	s23, s16
9000d59e:	eef5 ca00 	vmov.f32	s25, #80	; 0x3e800000  0.250
9000d5a2:	f04f 0b00 	mov.w	fp, #0
9000d5a6:	eb00 05c5 	add.w	r5, r0, r5, lsl #3
9000d5aa:	eef0 8a69 	vmov.f32	s17, s19
9000d5ae:	eeb0 0a48 	vmov.f32	s0, s16
9000d5b2:	f019 fbb9 	bl	90026d28 <EwMathCos>
9000d5b6:	eee0 8a2a 	vfma.f32	s17, s0, s21
9000d5ba:	eeb0 0a48 	vmov.f32	s0, s16
9000d5be:	f019 fbab 	bl	90026d18 <EwMathSin>
9000d5c2:	eef0 7a4a 	vmov.f32	s15, s20
9000d5c6:	eee0 7a0b 	vfma.f32	s15, s0, s22
9000d5ca:	f1b8 0f00 	cmp.w	r8, #0
9000d5ce:	d017      	beq.n	9000d600 <EwAddSubPathArc+0x15a>
9000d5d0:	ed94 6a0d 	vldr	s12, [r4, #52]	; 0x34
9000d5d4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9000d5d8:	edd4 6a09 	vldr	s13, [r4, #36]	; 0x24
9000d5dc:	ee27 7a87 	vmul.f32	s14, s15, s14
9000d5e0:	ee67 7a86 	vmul.f32	s15, s15, s12
9000d5e4:	ed94 6a0c 	vldr	s12, [r4, #48]	; 0x30
9000d5e8:	eea6 7aa8 	vfma.f32	s14, s13, s17
9000d5ec:	edd4 6a0b 	vldr	s13, [r4, #44]	; 0x2c
9000d5f0:	eee6 7a28 	vfma.f32	s15, s12, s17
9000d5f4:	ed94 6a0e 	vldr	s12, [r4, #56]	; 0x38
9000d5f8:	ee77 8a26 	vadd.f32	s17, s14, s13
9000d5fc:	ee77 7a86 	vadd.f32	s15, s15, s12
9000d600:	f1bb 0f00 	cmp.w	fp, #0
9000d604:	d117      	bne.n	9000d636 <EwAddSubPathArc+0x190>
9000d606:	454e      	cmp	r6, r9
9000d608:	da15      	bge.n	9000d636 <EwAddSubPathArc+0x190>
9000d60a:	ed15 6a03 	vldr	s12, [r5, #-12]
9000d60e:	ed55 6a04 	vldr	s13, [r5, #-16]
9000d612:	ee37 7ac6 	vsub.f32	s14, s15, s12
9000d616:	ee78 5ae6 	vsub.f32	s11, s17, s13
9000d61a:	ee27 7a07 	vmul.f32	s14, s14, s14
9000d61e:	eea5 7aa5 	vfma.f32	s14, s11, s11
9000d622:	eeb4 7a6c 	vcmp.f32	s14, s25
9000d626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d62a:	bf48      	it	mi
9000d62c:	eef0 7a46 	vmovmi.f32	s15, s12
9000d630:	bf48      	it	mi
9000d632:	eef0 8a66 	vmovmi.f32	s17, s13
9000d636:	f10b 0b01 	add.w	fp, fp, #1
9000d63a:	ee7b ba8c 	vadd.f32	s23, s23, s24
9000d63e:	ed45 8a02 	vstr	s17, [r5, #-8]
9000d642:	455e      	cmp	r6, fp
9000d644:	ed45 7a01 	vstr	s15, [r5, #-4]
9000d648:	da0c      	bge.n	9000d664 <EwAddSubPathArc+0x1be>
9000d64a:	f85a 3027 	ldr.w	r3, [sl, r7, lsl #2]
9000d64e:	6858      	ldr	r0, [r3, #4]
9000d650:	4448      	add	r0, r9
9000d652:	6058      	str	r0, [r3, #4]
9000d654:	1b80      	subs	r0, r0, r6
9000d656:	ecbd 8b0a 	vpop	{d8-d12}
9000d65a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000d65e:	f04f 0801 	mov.w	r8, #1
9000d662:	e799      	b.n	9000d598 <EwAddSubPathArc+0xf2>
9000d664:	bf18      	it	ne
9000d666:	eeb0 8a6b 	vmovne.f32	s16, s23
9000d66a:	f105 0508 	add.w	r5, r5, #8
9000d66e:	bf08      	it	eq
9000d670:	eeb0 8a49 	vmoveq.f32	s16, s18
9000d674:	e799      	b.n	9000d5aa <EwAddSubPathArc+0x104>
9000d676:	46b1      	mov	r9, r6
9000d678:	e741      	b.n	9000d4fe <EwAddSubPathArc+0x58>

9000d67a <EwAddSubPathCopy>:
9000d67a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000d67e:	460e      	mov	r6, r1
9000d680:	4605      	mov	r5, r0
9000d682:	e9dd c408 	ldrd	ip, r4, [sp, #32]
9000d686:	b340      	cbz	r0, 9000d6da <EwAddSubPathCopy+0x60>
9000d688:	6801      	ldr	r1, [r0, #0]
9000d68a:	42b1      	cmp	r1, r6
9000d68c:	dd25      	ble.n	9000d6da <EwAddSubPathCopy+0x60>
9000d68e:	2e00      	cmp	r6, #0
9000d690:	db23      	blt.n	9000d6da <EwAddSubPathCopy+0x60>
9000d692:	b312      	cbz	r2, 9000d6da <EwAddSubPathCopy+0x60>
9000d694:	6811      	ldr	r1, [r2, #0]
9000d696:	4299      	cmp	r1, r3
9000d698:	dd1f      	ble.n	9000d6da <EwAddSubPathCopy+0x60>
9000d69a:	2b00      	cmp	r3, #0
9000d69c:	db1d      	blt.n	9000d6da <EwAddSubPathCopy+0x60>
9000d69e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9000d6a2:	6c13      	ldr	r3, [r2, #64]	; 0x40
9000d6a4:	b1cb      	cbz	r3, 9000d6da <EwAddSubPathCopy+0x60>
9000d6a6:	f1bc 0f00 	cmp.w	ip, #0
9000d6aa:	db16      	blt.n	9000d6da <EwAddSubPathCopy+0x60>
9000d6ac:	2c00      	cmp	r4, #0
9000d6ae:	f000 808e 	beq.w	9000d7ce <EwAddSubPathCopy+0x154>
9000d6b2:	685a      	ldr	r2, [r3, #4]
9000d6b4:	bfb8      	it	lt
9000d6b6:	eba2 040c 	sublt.w	r4, r2, ip
9000d6ba:	eb04 010c 	add.w	r1, r4, ip
9000d6be:	4291      	cmp	r1, r2
9000d6c0:	dc0b      	bgt.n	9000d6da <EwAddSubPathCopy+0x60>
9000d6c2:	f100 0840 	add.w	r8, r0, #64	; 0x40
9000d6c6:	f858 0026 	ldr.w	r0, [r8, r6, lsl #2]
9000d6ca:	b130      	cbz	r0, 9000d6da <EwAddSubPathCopy+0x60>
9000d6cc:	7a02      	ldrb	r2, [r0, #8]
9000d6ce:	2a00      	cmp	r2, #0
9000d6d0:	f000 8082 	beq.w	9000d7d8 <EwAddSubPathCopy+0x15e>
9000d6d4:	1c67      	adds	r7, r4, #1
9000d6d6:	7a81      	ldrb	r1, [r0, #10]
9000d6d8:	b109      	cbz	r1, 9000d6de <EwAddSubPathCopy+0x64>
9000d6da:	2400      	movs	r4, #0
9000d6dc:	e077      	b.n	9000d7ce <EwAddSubPathCopy+0x154>
9000d6de:	f8d0 e004 	ldr.w	lr, [r0, #4]
9000d6e2:	6802      	ldr	r2, [r0, #0]
9000d6e4:	eb0e 0907 	add.w	r9, lr, r7
9000d6e8:	4591      	cmp	r9, r2
9000d6ea:	dcf6      	bgt.n	9000d6da <EwAddSubPathCopy+0x60>
9000d6ec:	f240 1201 	movw	r2, #257	; 0x101
9000d6f0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000d6f4:	72c1      	strb	r1, [r0, #11]
9000d6f6:	301c      	adds	r0, #28
9000d6f8:	f820 2c14 	strh.w	r2, [r0, #-20]
9000d6fc:	1b3a      	subs	r2, r7, r4
9000d6fe:	ed95 7a09 	vldr	s14, [r5, #36]	; 0x24
9000d702:	4472      	add	r2, lr
9000d704:	7429      	strb	r1, [r5, #16]
9000d706:	eeb4 7a67 	vcmp.f32	s14, s15
9000d70a:	f103 011c 	add.w	r1, r3, #28
9000d70e:	eb00 00c2 	add.w	r0, r0, r2, lsl #3
9000d712:	eb01 01cc 	add.w	r1, r1, ip, lsl #3
9000d716:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d71a:	d15b      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d71c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9000d720:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d728:	d154      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d72a:	ed95 7a0b 	vldr	s14, [r5, #44]	; 0x2c
9000d72e:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d732:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d736:	d14d      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d738:	ed95 7a0c 	vldr	s14, [r5, #48]	; 0x30
9000d73c:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d744:	d146      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d746:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
9000d74a:	eeb4 7a67 	vcmp.f32	s14, s15
9000d74e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d752:	d13f      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d754:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
9000d758:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d75c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d760:	d138      	bne.n	9000d7d4 <EwAddSubPathCopy+0x15a>
9000d762:	1c62      	adds	r2, r4, #1
9000d764:	00d2      	lsls	r2, r2, #3
9000d766:	f019 fad5 	bl	90026d14 <EwCopy>
9000d76a:	e02a      	b.n	9000d7c2 <EwAddSubPathCopy+0x148>
9000d76c:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
9000d770:	3301      	adds	r3, #1
9000d772:	ed51 7a01 	vldr	s15, [r1, #-4]
9000d776:	ed51 6a02 	vldr	s13, [r1, #-8]
9000d77a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000d77e:	ed95 7a09 	vldr	s14, [r5, #36]	; 0x24
9000d782:	eee6 7a87 	vfma.f32	s15, s13, s14
9000d786:	ed95 7a0b 	vldr	s14, [r5, #44]	; 0x2c
9000d78a:	ee77 7a27 	vadd.f32	s15, s14, s15
9000d78e:	ed40 7a02 	vstr	s15, [r0, #-8]
9000d792:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
9000d796:	ed51 7a01 	vldr	s15, [r1, #-4]
9000d79a:	ed51 6a02 	vldr	s13, [r1, #-8]
9000d79e:	ee67 7a87 	vmul.f32	s15, s15, s14
9000d7a2:	ed95 7a0c 	vldr	s14, [r5, #48]	; 0x30
9000d7a6:	eee6 7a87 	vfma.f32	s15, s13, s14
9000d7aa:	ed95 7a0e 	vldr	s14, [r5, #56]	; 0x38
9000d7ae:	ee77 7a27 	vadd.f32	s15, s14, s15
9000d7b2:	ed40 7a01 	vstr	s15, [r0, #-4]
9000d7b6:	429c      	cmp	r4, r3
9000d7b8:	f100 0008 	add.w	r0, r0, #8
9000d7bc:	f101 0108 	add.w	r1, r1, #8
9000d7c0:	dad4      	bge.n	9000d76c <EwAddSubPathCopy+0xf2>
9000d7c2:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
9000d7c6:	6853      	ldr	r3, [r2, #4]
9000d7c8:	441f      	add	r7, r3
9000d7ca:	1b3c      	subs	r4, r7, r4
9000d7cc:	6057      	str	r7, [r2, #4]
9000d7ce:	4620      	mov	r0, r4
9000d7d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000d7d4:	2300      	movs	r3, #0
9000d7d6:	e7ee      	b.n	9000d7b6 <EwAddSubPathCopy+0x13c>
9000d7d8:	4627      	mov	r7, r4
9000d7da:	e77c      	b.n	9000d6d6 <EwAddSubPathCopy+0x5c>

9000d7dc <EwCloseSubPath>:
9000d7dc:	b510      	push	{r4, lr}
9000d7de:	2800      	cmp	r0, #0
9000d7e0:	d042      	beq.n	9000d868 <EwCloseSubPath+0x8c>
9000d7e2:	6803      	ldr	r3, [r0, #0]
9000d7e4:	428b      	cmp	r3, r1
9000d7e6:	dd3f      	ble.n	9000d868 <EwCloseSubPath+0x8c>
9000d7e8:	2900      	cmp	r1, #0
9000d7ea:	db3d      	blt.n	9000d868 <EwCloseSubPath+0x8c>
9000d7ec:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d7f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9000d7f2:	b3cb      	cbz	r3, 9000d868 <EwCloseSubPath+0x8c>
9000d7f4:	7a9a      	ldrb	r2, [r3, #10]
9000d7f6:	bbba      	cbnz	r2, 9000d868 <EwCloseSubPath+0x8c>
9000d7f8:	7a59      	ldrb	r1, [r3, #9]
9000d7fa:	b3a9      	cbz	r1, 9000d868 <EwCloseSubPath+0x8c>
9000d7fc:	2101      	movs	r1, #1
9000d7fe:	725a      	strb	r2, [r3, #9]
9000d800:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 9000d874 <EwCloseSubPath+0x98>
9000d804:	7299      	strb	r1, [r3, #10]
9000d806:	7402      	strb	r2, [r0, #16]
9000d808:	f103 021c 	add.w	r2, r3, #28
9000d80c:	6859      	ldr	r1, [r3, #4]
9000d80e:	ed93 7a07 	vldr	s14, [r3, #28]
9000d812:	eb02 00c1 	add.w	r0, r2, r1, lsl #3
9000d816:	00cc      	lsls	r4, r1, #3
9000d818:	edd0 7a00 	vldr	s15, [r0]
9000d81c:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000d820:	eef4 7ac6 	vcmpe.f32	s15, s12
9000d824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d828:	dc18      	bgt.n	9000d85c <EwCloseSubPath+0x80>
9000d82a:	eddf 6a13 	vldr	s13, [pc, #76]	; 9000d878 <EwCloseSubPath+0x9c>
9000d82e:	eef4 7ae6 	vcmpe.f32	s15, s13
9000d832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d836:	d411      	bmi.n	9000d85c <EwCloseSubPath+0x80>
9000d838:	3404      	adds	r4, #4
9000d83a:	edd3 5a08 	vldr	s11, [r3, #32]
9000d83e:	4422      	add	r2, r4
9000d840:	edd2 7a00 	vldr	s15, [r2]
9000d844:	ee77 7ae5 	vsub.f32	s15, s15, s11
9000d848:	eef4 7ac6 	vcmpe.f32	s15, s12
9000d84c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d850:	dc04      	bgt.n	9000d85c <EwCloseSubPath+0x80>
9000d852:	eef4 7ae6 	vcmpe.f32	s15, s13
9000d856:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d85a:	d506      	bpl.n	9000d86a <EwCloseSubPath+0x8e>
9000d85c:	3101      	adds	r1, #1
9000d85e:	6059      	str	r1, [r3, #4]
9000d860:	ed80 7a02 	vstr	s14, [r0, #8]
9000d864:	6a1b      	ldr	r3, [r3, #32]
9000d866:	60c3      	str	r3, [r0, #12]
9000d868:	bd10      	pop	{r4, pc}
9000d86a:	ed80 7a00 	vstr	s14, [r0]
9000d86e:	6a1b      	ldr	r3, [r3, #32]
9000d870:	6013      	str	r3, [r2, #0]
9000d872:	e7f9      	b.n	9000d868 <EwCloseSubPath+0x8c>
9000d874:	3a83126f 	.word	0x3a83126f
9000d878:	ba83126f 	.word	0xba83126f

9000d87c <EwShiftSubPathNodes>:
9000d87c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9000d87e:	460e      	mov	r6, r1
9000d880:	4605      	mov	r5, r0
9000d882:	ed2d 8b02 	vpush	{d8}
9000d886:	eeb0 8a40 	vmov.f32	s16, s0
9000d88a:	eef0 8a60 	vmov.f32	s17, s1
9000d88e:	2800      	cmp	r0, #0
9000d890:	d050      	beq.n	9000d934 <EwShiftSubPathNodes+0xb8>
9000d892:	6803      	ldr	r3, [r0, #0]
9000d894:	428b      	cmp	r3, r1
9000d896:	dd4d      	ble.n	9000d934 <EwShiftSubPathNodes+0xb8>
9000d898:	2900      	cmp	r1, #0
9000d89a:	db4b      	blt.n	9000d934 <EwShiftSubPathNodes+0xb8>
9000d89c:	f100 0740 	add.w	r7, r0, #64	; 0x40
9000d8a0:	f857 0021 	ldr.w	r0, [r7, r1, lsl #2]
9000d8a4:	2800      	cmp	r0, #0
9000d8a6:	d045      	beq.n	9000d934 <EwShiftSubPathNodes+0xb8>
9000d8a8:	7a04      	ldrb	r4, [r0, #8]
9000d8aa:	b354      	cbz	r4, 9000d902 <EwShiftSubPathNodes+0x86>
9000d8ac:	7a84      	ldrb	r4, [r0, #10]
9000d8ae:	2c00      	cmp	r4, #0
9000d8b0:	d140      	bne.n	9000d934 <EwShiftSubPathNodes+0xb8>
9000d8b2:	2a00      	cmp	r2, #0
9000d8b4:	dd25      	ble.n	9000d902 <EwShiftSubPathNodes+0x86>
9000d8b6:	6841      	ldr	r1, [r0, #4]
9000d8b8:	301c      	adds	r0, #28
9000d8ba:	428a      	cmp	r2, r1
9000d8bc:	bfa8      	it	ge
9000d8be:	460a      	movge	r2, r1
9000d8c0:	4614      	mov	r4, r2
9000d8c2:	1a8a      	subs	r2, r1, r2
9000d8c4:	3201      	adds	r2, #1
9000d8c6:	eb00 01c4 	add.w	r1, r0, r4, lsl #3
9000d8ca:	00d2      	lsls	r2, r2, #3
9000d8cc:	f019 fa20 	bl	90026d10 <EwMove>
9000d8d0:	eeb5 8a40 	vcmp.f32	s16, #0.0
9000d8d4:	f857 3026 	ldr.w	r3, [r7, r6, lsl #2]
9000d8d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d8dc:	d115      	bne.n	9000d90a <EwShiftSubPathNodes+0x8e>
9000d8de:	eef5 8a40 	vcmp.f32	s17, #0.0
9000d8e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d8e6:	d110      	bne.n	9000d90a <EwShiftSubPathNodes+0x8e>
9000d8e8:	685a      	ldr	r2, [r3, #4]
9000d8ea:	4294      	cmp	r4, r2
9000d8ec:	eba2 0204 	sub.w	r2, r2, r4
9000d8f0:	bfa8      	it	ge
9000d8f2:	2100      	movge	r1, #0
9000d8f4:	605a      	str	r2, [r3, #4]
9000d8f6:	bfb8      	it	lt
9000d8f8:	2101      	movlt	r1, #1
9000d8fa:	2200      	movs	r2, #0
9000d8fc:	7259      	strb	r1, [r3, #9]
9000d8fe:	72da      	strb	r2, [r3, #11]
9000d900:	742a      	strb	r2, [r5, #16]
9000d902:	4620      	mov	r0, r4
9000d904:	ecbd 8b02 	vpop	{d8}
9000d908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000d90a:	6859      	ldr	r1, [r3, #4]
9000d90c:	f103 021c 	add.w	r2, r3, #28
9000d910:	2900      	cmp	r1, #0
9000d912:	f102 0208 	add.w	r2, r2, #8
9000d916:	dbe7      	blt.n	9000d8e8 <EwShiftSubPathNodes+0x6c>
9000d918:	ed52 7a02 	vldr	s15, [r2, #-8]
9000d91c:	3901      	subs	r1, #1
9000d91e:	ee77 7a88 	vadd.f32	s15, s15, s16
9000d922:	ed42 7a02 	vstr	s15, [r2, #-8]
9000d926:	ed52 7a01 	vldr	s15, [r2, #-4]
9000d92a:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000d92e:	ed42 7a01 	vstr	s15, [r2, #-4]
9000d932:	e7ed      	b.n	9000d910 <EwShiftSubPathNodes+0x94>
9000d934:	2400      	movs	r4, #0
9000d936:	e7e4      	b.n	9000d902 <EwShiftSubPathNodes+0x86>

9000d938 <EwSetSubPathNode>:
9000d938:	b530      	push	{r4, r5, lr}
9000d93a:	2800      	cmp	r0, #0
9000d93c:	d05f      	beq.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d93e:	6803      	ldr	r3, [r0, #0]
9000d940:	428b      	cmp	r3, r1
9000d942:	dd5c      	ble.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d944:	2900      	cmp	r1, #0
9000d946:	db5a      	blt.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d948:	eb00 0181 	add.w	r1, r0, r1, lsl #2
9000d94c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9000d94e:	2b00      	cmp	r3, #0
9000d950:	d055      	beq.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d952:	685c      	ldr	r4, [r3, #4]
9000d954:	4294      	cmp	r4, r2
9000d956:	db52      	blt.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d958:	2a00      	cmp	r2, #0
9000d95a:	db50      	blt.n	9000d9fe <EwSetSubPathNode+0xc6>
9000d95c:	eef7 4a00 	vmov.f32	s9, #112	; 0x3f800000  1.0
9000d960:	ed90 5a09 	vldr	s10, [r0, #36]	; 0x24
9000d964:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000d968:	ed90 7a0b 	vldr	s14, [r0, #44]	; 0x2c
9000d96c:	eeb4 5a64 	vcmp.f32	s10, s9
9000d970:	ed90 6a0c 	vldr	s12, [r0, #48]	; 0x30
9000d974:	edd0 5a0d 	vldr	s11, [r0, #52]	; 0x34
9000d978:	edd0 6a0e 	vldr	s13, [r0, #56]	; 0x38
9000d97c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d980:	d118      	bne.n	9000d9b4 <EwSetSubPathNode+0x7c>
9000d982:	eef5 7a40 	vcmp.f32	s15, #0.0
9000d986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d98a:	d113      	bne.n	9000d9b4 <EwSetSubPathNode+0x7c>
9000d98c:	eeb5 7a40 	vcmp.f32	s14, #0.0
9000d990:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d994:	d10e      	bne.n	9000d9b4 <EwSetSubPathNode+0x7c>
9000d996:	eeb5 6a40 	vcmp.f32	s12, #0.0
9000d99a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d99e:	d109      	bne.n	9000d9b4 <EwSetSubPathNode+0x7c>
9000d9a0:	eef4 5a64 	vcmp.f32	s11, s9
9000d9a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d9a8:	d104      	bne.n	9000d9b4 <EwSetSubPathNode+0x7c>
9000d9aa:	eef5 6a40 	vcmp.f32	s13, #0.0
9000d9ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000d9b2:	d00b      	beq.n	9000d9cc <EwSetSubPathNode+0x94>
9000d9b4:	ee67 7aa0 	vmul.f32	s15, s15, s1
9000d9b8:	ee60 0aa5 	vmul.f32	s1, s1, s11
9000d9bc:	eee5 7a00 	vfma.f32	s15, s10, s0
9000d9c0:	eee0 0a06 	vfma.f32	s1, s0, s12
9000d9c4:	ee37 0a87 	vadd.f32	s0, s15, s14
9000d9c8:	ee70 0aa6 	vadd.f32	s1, s1, s13
9000d9cc:	f103 011c 	add.w	r1, r3, #28
9000d9d0:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
9000d9d4:	ed85 0a00 	vstr	s0, [r5]
9000d9d8:	edc5 0a01 	vstr	s1, [r5, #4]
9000d9dc:	b982      	cbnz	r2, 9000da00 <EwSetSubPathNode+0xc8>
9000d9de:	7a9a      	ldrb	r2, [r3, #10]
9000d9e0:	b152      	cbz	r2, 9000d9f8 <EwSetSubPathNode+0xc0>
9000d9e2:	eb01 02c4 	add.w	r2, r1, r4, lsl #3
9000d9e6:	ed82 0a00 	vstr	s0, [r2]
9000d9ea:	edc2 0a01 	vstr	s1, [r2, #4]
9000d9ee:	b91c      	cbnz	r4, 9000d9f8 <EwSetSubPathNode+0xc0>
9000d9f0:	ed83 0a07 	vstr	s0, [r3, #28]
9000d9f4:	edc3 0a08 	vstr	s1, [r3, #32]
9000d9f8:	2200      	movs	r2, #0
9000d9fa:	72da      	strb	r2, [r3, #11]
9000d9fc:	7402      	strb	r2, [r0, #16]
9000d9fe:	bd30      	pop	{r4, r5, pc}
9000da00:	4294      	cmp	r4, r2
9000da02:	d1f9      	bne.n	9000d9f8 <EwSetSubPathNode+0xc0>
9000da04:	7a9a      	ldrb	r2, [r3, #10]
9000da06:	2a00      	cmp	r2, #0
9000da08:	d1f2      	bne.n	9000d9f0 <EwSetSubPathNode+0xb8>
9000da0a:	e7f5      	b.n	9000d9f8 <EwSetSubPathNode+0xc0>

9000da0c <EwGetSubPathNodeX>:
9000da0c:	b190      	cbz	r0, 9000da34 <EwGetSubPathNodeX+0x28>
9000da0e:	6803      	ldr	r3, [r0, #0]
9000da10:	428b      	cmp	r3, r1
9000da12:	dd0f      	ble.n	9000da34 <EwGetSubPathNodeX+0x28>
9000da14:	2900      	cmp	r1, #0
9000da16:	db0d      	blt.n	9000da34 <EwGetSubPathNodeX+0x28>
9000da18:	eb00 0081 	add.w	r0, r0, r1, lsl #2
9000da1c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000da1e:	b14b      	cbz	r3, 9000da34 <EwGetSubPathNodeX+0x28>
9000da20:	6859      	ldr	r1, [r3, #4]
9000da22:	4291      	cmp	r1, r2
9000da24:	db06      	blt.n	9000da34 <EwGetSubPathNodeX+0x28>
9000da26:	2a00      	cmp	r2, #0
9000da28:	db04      	blt.n	9000da34 <EwGetSubPathNodeX+0x28>
9000da2a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000da2e:	ed93 0a07 	vldr	s0, [r3, #28]
9000da32:	4770      	bx	lr
9000da34:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9000da3c <EwGetSubPathNodeX+0x30>
9000da38:	4770      	bx	lr
9000da3a:	bf00      	nop
9000da3c:	00000000 	.word	0x00000000

9000da40 <EwGetSubPathNodeY>:
9000da40:	b190      	cbz	r0, 9000da68 <EwGetSubPathNodeY+0x28>
9000da42:	6803      	ldr	r3, [r0, #0]
9000da44:	428b      	cmp	r3, r1
9000da46:	dd0f      	ble.n	9000da68 <EwGetSubPathNodeY+0x28>
9000da48:	2900      	cmp	r1, #0
9000da4a:	db0d      	blt.n	9000da68 <EwGetSubPathNodeY+0x28>
9000da4c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
9000da50:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000da52:	b14b      	cbz	r3, 9000da68 <EwGetSubPathNodeY+0x28>
9000da54:	6859      	ldr	r1, [r3, #4]
9000da56:	4291      	cmp	r1, r2
9000da58:	db06      	blt.n	9000da68 <EwGetSubPathNodeY+0x28>
9000da5a:	2a00      	cmp	r2, #0
9000da5c:	db04      	blt.n	9000da68 <EwGetSubPathNodeY+0x28>
9000da5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000da62:	ed93 0a08 	vldr	s0, [r3, #32]
9000da66:	4770      	bx	lr
9000da68:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9000da70 <EwGetSubPathNodeY+0x30>
9000da6c:	4770      	bx	lr
9000da6e:	bf00      	nop
9000da70:	00000000 	.word	0x00000000

9000da74 <EwSetNoOfSubPathEdges>:
9000da74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000da78:	460f      	mov	r7, r1
9000da7a:	4606      	mov	r6, r0
9000da7c:	b360      	cbz	r0, 9000dad8 <EwSetNoOfSubPathEdges+0x64>
9000da7e:	6803      	ldr	r3, [r0, #0]
9000da80:	428b      	cmp	r3, r1
9000da82:	dd29      	ble.n	9000dad8 <EwSetNoOfSubPathEdges+0x64>
9000da84:	2900      	cmp	r1, #0
9000da86:	db27      	blt.n	9000dad8 <EwSetNoOfSubPathEdges+0x64>
9000da88:	f100 0840 	add.w	r8, r0, #64	; 0x40
9000da8c:	f858 3021 	ldr.w	r3, [r8, r1, lsl #2]
9000da90:	b313      	cbz	r3, 9000dad8 <EwSetNoOfSubPathEdges+0x64>
9000da92:	7a99      	ldrb	r1, [r3, #10]
9000da94:	bb01      	cbnz	r1, 9000dad8 <EwSetNoOfSubPathEdges+0x64>
9000da96:	ea22 74e2 	bic.w	r4, r2, r2, asr #31
9000da9a:	681a      	ldr	r2, [r3, #0]
9000da9c:	6858      	ldr	r0, [r3, #4]
9000da9e:	4294      	cmp	r4, r2
9000daa0:	bfa8      	it	ge
9000daa2:	4614      	movge	r4, r2
9000daa4:	1a25      	subs	r5, r4, r0
9000daa6:	2d00      	cmp	r5, #0
9000daa8:	d013      	beq.n	9000dad2 <EwSetNoOfSubPathEdges+0x5e>
9000daaa:	dd05      	ble.n	9000dab8 <EwSetNoOfSubPathEdges+0x44>
9000daac:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
9000dab0:	00e9      	lsls	r1, r5, #3
9000dab2:	3024      	adds	r0, #36	; 0x24
9000dab4:	f019 f926 	bl	90026d04 <EwZero>
9000dab8:	f858 3027 	ldr.w	r3, [r8, r7, lsl #2]
9000dabc:	2c00      	cmp	r4, #0
9000dabe:	f04f 0200 	mov.w	r2, #0
9000dac2:	605c      	str	r4, [r3, #4]
9000dac4:	bfd4      	ite	le
9000dac6:	2400      	movle	r4, #0
9000dac8:	2401      	movgt	r4, #1
9000daca:	72da      	strb	r2, [r3, #11]
9000dacc:	721c      	strb	r4, [r3, #8]
9000dace:	725c      	strb	r4, [r3, #9]
9000dad0:	7432      	strb	r2, [r6, #16]
9000dad2:	4628      	mov	r0, r5
9000dad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000dad8:	2500      	movs	r5, #0
9000dada:	e7fa      	b.n	9000dad2 <EwSetNoOfSubPathEdges+0x5e>

9000dadc <EwGetNoOfSubPathEdges>:
9000dadc:	b158      	cbz	r0, 9000daf6 <EwGetNoOfSubPathEdges+0x1a>
9000dade:	6803      	ldr	r3, [r0, #0]
9000dae0:	428b      	cmp	r3, r1
9000dae2:	dd07      	ble.n	9000daf4 <EwGetNoOfSubPathEdges+0x18>
9000dae4:	2900      	cmp	r1, #0
9000dae6:	db05      	blt.n	9000daf4 <EwGetNoOfSubPathEdges+0x18>
9000dae8:	eb00 0081 	add.w	r0, r0, r1, lsl #2
9000daec:	6c00      	ldr	r0, [r0, #64]	; 0x40
9000daee:	b110      	cbz	r0, 9000daf6 <EwGetNoOfSubPathEdges+0x1a>
9000daf0:	6840      	ldr	r0, [r0, #4]
9000daf2:	4770      	bx	lr
9000daf4:	2000      	movs	r0, #0
9000daf6:	4770      	bx	lr

9000daf8 <EwGetNoOfFreeSubPathEdges>:
9000daf8:	b178      	cbz	r0, 9000db1a <EwGetNoOfFreeSubPathEdges+0x22>
9000dafa:	6803      	ldr	r3, [r0, #0]
9000dafc:	428b      	cmp	r3, r1
9000dafe:	dd0b      	ble.n	9000db18 <EwGetNoOfFreeSubPathEdges+0x20>
9000db00:	2900      	cmp	r1, #0
9000db02:	db09      	blt.n	9000db18 <EwGetNoOfFreeSubPathEdges+0x20>
9000db04:	eb00 0081 	add.w	r0, r0, r1, lsl #2
9000db08:	6c00      	ldr	r0, [r0, #64]	; 0x40
9000db0a:	b130      	cbz	r0, 9000db1a <EwGetNoOfFreeSubPathEdges+0x22>
9000db0c:	7a83      	ldrb	r3, [r0, #10]
9000db0e:	b91b      	cbnz	r3, 9000db18 <EwGetNoOfFreeSubPathEdges+0x20>
9000db10:	e9d0 3000 	ldrd	r3, r0, [r0]
9000db14:	1a18      	subs	r0, r3, r0
9000db16:	4770      	bx	lr
9000db18:	2000      	movs	r0, #0
9000db1a:	4770      	bx	lr
9000db1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9000db1e:	680c      	ldr	r4, [r1, #0]
9000db20:	460e      	mov	r6, r1
9000db22:	4605      	mov	r5, r0
9000db24:	4621      	mov	r1, r4
9000db26:	f7ff ffe7 	bl	9000daf8 <EwGetNoOfFreeSubPathEdges>
9000db2a:	4290      	cmp	r0, r2
9000db2c:	da1f      	bge.n	9000db6e <EwGetNoOfFreeSubPathEdges+0x76>
9000db2e:	4628      	mov	r0, r5
9000db30:	f7ff ffd4 	bl	9000dadc <EwGetNoOfSubPathEdges>
9000db34:	3401      	adds	r4, #1
9000db36:	4402      	add	r2, r0
9000db38:	4607      	mov	r7, r0
9000db3a:	f004 0401 	and.w	r4, r4, #1
9000db3e:	4628      	mov	r0, r5
9000db40:	f502 7280 	add.w	r2, r2, #256	; 0x100
9000db44:	bf48      	it	mi
9000db46:	4264      	negmi	r4, r4
9000db48:	4621      	mov	r1, r4
9000db4a:	f7ff fa14 	bl	9000cf76 <EwInitSubPath>
9000db4e:	b178      	cbz	r0, 9000db70 <EwGetNoOfFreeSubPathEdges+0x78>
9000db50:	2300      	movs	r3, #0
9000db52:	462a      	mov	r2, r5
9000db54:	4621      	mov	r1, r4
9000db56:	4628      	mov	r0, r5
9000db58:	9300      	str	r3, [sp, #0]
9000db5a:	9701      	str	r7, [sp, #4]
9000db5c:	6833      	ldr	r3, [r6, #0]
9000db5e:	f7ff fd8c 	bl	9000d67a <EwAddSubPathCopy>
9000db62:	2201      	movs	r2, #1
9000db64:	6831      	ldr	r1, [r6, #0]
9000db66:	4628      	mov	r0, r5
9000db68:	f7ff fa05 	bl	9000cf76 <EwInitSubPath>
9000db6c:	6034      	str	r4, [r6, #0]
9000db6e:	2001      	movs	r0, #1
9000db70:	b003      	add	sp, #12
9000db72:	bdf0      	pop	{r4, r5, r6, r7, pc}

9000db74 <EwIsSubPathClosed>:
9000db74:	b178      	cbz	r0, 9000db96 <EwIsSubPathClosed+0x22>
9000db76:	6803      	ldr	r3, [r0, #0]
9000db78:	428b      	cmp	r3, r1
9000db7a:	dd0b      	ble.n	9000db94 <EwIsSubPathClosed+0x20>
9000db7c:	2900      	cmp	r1, #0
9000db7e:	db09      	blt.n	9000db94 <EwIsSubPathClosed+0x20>
9000db80:	eb00 0081 	add.w	r0, r0, r1, lsl #2
9000db84:	6c00      	ldr	r0, [r0, #64]	; 0x40
9000db86:	b118      	cbz	r0, 9000db90 <EwIsSubPathClosed+0x1c>
9000db88:	7a80      	ldrb	r0, [r0, #10]
9000db8a:	3800      	subs	r0, #0
9000db8c:	bf18      	it	ne
9000db8e:	2001      	movne	r0, #1
9000db90:	b2c0      	uxtb	r0, r0
9000db92:	4770      	bx	lr
9000db94:	2000      	movs	r0, #0
9000db96:	4770      	bx	lr

9000db98 <EwGetSubPathBounds>:
9000db98:	b570      	push	{r4, r5, r6, lr}
9000db9a:	4604      	mov	r4, r0
9000db9c:	4615      	mov	r5, r2
9000db9e:	4608      	mov	r0, r1
9000dba0:	b149      	cbz	r1, 9000dbb6 <EwGetSubPathBounds+0x1e>
9000dba2:	680b      	ldr	r3, [r1, #0]
9000dba4:	4293      	cmp	r3, r2
9000dba6:	dd06      	ble.n	9000dbb6 <EwGetSubPathBounds+0x1e>
9000dba8:	2a00      	cmp	r2, #0
9000dbaa:	db04      	blt.n	9000dbb6 <EwGetSubPathBounds+0x1e>
9000dbac:	f101 0640 	add.w	r6, r1, #64	; 0x40
9000dbb0:	f856 3022 	ldr.w	r3, [r6, r2, lsl #2]
9000dbb4:	b933      	cbnz	r3, 9000dbc4 <EwGetSubPathBounds+0x2c>
9000dbb6:	2210      	movs	r2, #16
9000dbb8:	2100      	movs	r1, #0
9000dbba:	4620      	mov	r0, r4
9000dbbc:	f020 fa04 	bl	9002dfc8 <memset>
9000dbc0:	4620      	mov	r0, r4
9000dbc2:	bd70      	pop	{r4, r5, r6, pc}
9000dbc4:	f7fd fd33 	bl	9000b62e <UpdateWatermark2+0xb08>
9000dbc8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
9000dbcc:	330c      	adds	r3, #12
9000dbce:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9000dbd0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000dbd4:	e7f4      	b.n	9000dbc0 <EwGetSubPathBounds+0x28>

9000dbd6 <EwGetPathBounds>:
9000dbd6:	b538      	push	{r3, r4, r5, lr}
9000dbd8:	4605      	mov	r5, r0
9000dbda:	460c      	mov	r4, r1
9000dbdc:	b921      	cbnz	r1, 9000dbe8 <EwGetPathBounds+0x12>
9000dbde:	2210      	movs	r2, #16
9000dbe0:	f020 f9f2 	bl	9002dfc8 <memset>
9000dbe4:	4628      	mov	r0, r5
9000dbe6:	bd38      	pop	{r3, r4, r5, pc}
9000dbe8:	4608      	mov	r0, r1
9000dbea:	f7fd fd20 	bl	9000b62e <UpdateWatermark2+0xb08>
9000dbee:	f104 0114 	add.w	r1, r4, #20
9000dbf2:	c90f      	ldmia	r1, {r0, r1, r2, r3}
9000dbf4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9000dbf8:	e7f4      	b.n	9000dbe4 <EwGetPathBounds+0xe>

9000dbfa <EwTranslatePathMatrix>:
9000dbfa:	b1b8      	cbz	r0, 9000dc2c <EwTranslatePathMatrix+0x32>
9000dbfc:	ed90 7a09 	vldr	s14, [r0, #36]	; 0x24
9000dc00:	edd0 7a0b 	vldr	s15, [r0, #44]	; 0x2c
9000dc04:	eee7 7a00 	vfma.f32	s15, s14, s0
9000dc08:	ed90 7a0a 	vldr	s14, [r0, #40]	; 0x28
9000dc0c:	eee7 7a20 	vfma.f32	s15, s14, s1
9000dc10:	ed90 7a0c 	vldr	s14, [r0, #48]	; 0x30
9000dc14:	edc0 7a0b 	vstr	s15, [r0, #44]	; 0x2c
9000dc18:	edd0 7a0e 	vldr	s15, [r0, #56]	; 0x38
9000dc1c:	eee7 7a00 	vfma.f32	s15, s14, s0
9000dc20:	ed90 7a0d 	vldr	s14, [r0, #52]	; 0x34
9000dc24:	eee7 7a20 	vfma.f32	s15, s14, s1
9000dc28:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
9000dc2c:	4770      	bx	lr

9000dc2e <EwScalePathMatrix>:
9000dc2e:	b1b8      	cbz	r0, 9000dc60 <EwScalePathMatrix+0x32>
9000dc30:	edd0 7a09 	vldr	s15, [r0, #36]	; 0x24
9000dc34:	ee67 7a80 	vmul.f32	s15, s15, s0
9000dc38:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
9000dc3c:	edd0 7a0a 	vldr	s15, [r0, #40]	; 0x28
9000dc40:	ee67 7aa0 	vmul.f32	s15, s15, s1
9000dc44:	edc0 7a0a 	vstr	s15, [r0, #40]	; 0x28
9000dc48:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
9000dc4c:	ee27 0a80 	vmul.f32	s0, s15, s0
9000dc50:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
9000dc54:	ee67 0aa0 	vmul.f32	s1, s15, s1
9000dc58:	ed80 0a0c 	vstr	s0, [r0, #48]	; 0x30
9000dc5c:	edc0 0a0d 	vstr	s1, [r0, #52]	; 0x34
9000dc60:	4770      	bx	lr

9000dc62 <EwRotatePathMatrix>:
9000dc62:	b510      	push	{r4, lr}
9000dc64:	ed2d 8b02 	vpush	{d8}
9000dc68:	eef0 8a40 	vmov.f32	s17, s0
9000dc6c:	4604      	mov	r4, r0
9000dc6e:	f019 f853 	bl	90026d18 <EwMathSin>
9000dc72:	eeb0 8a40 	vmov.f32	s16, s0
9000dc76:	eeb0 0a68 	vmov.f32	s0, s17
9000dc7a:	f019 f855 	bl	90026d28 <EwMathCos>
9000dc7e:	b1fc      	cbz	r4, 9000dcc0 <EwRotatePathMatrix+0x5e>
9000dc80:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9000dc84:	edd4 7a09 	vldr	s15, [r4, #36]	; 0x24
9000dc88:	ee27 6a08 	vmul.f32	s12, s14, s16
9000dc8c:	edd4 5a0c 	vldr	s11, [r4, #48]	; 0x30
9000dc90:	ee27 7a00 	vmul.f32	s14, s14, s0
9000dc94:	eea7 6a80 	vfma.f32	s12, s15, s0
9000dc98:	eea8 7a67 	vfms.f32	s14, s16, s15
9000dc9c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9000dca0:	ee67 6a88 	vmul.f32	s13, s15, s16
9000dca4:	ee67 7a80 	vmul.f32	s15, s15, s0
9000dca8:	eee5 6a80 	vfma.f32	s13, s11, s0
9000dcac:	ed84 6a09 	vstr	s12, [r4, #36]	; 0x24
9000dcb0:	eee8 7a65 	vfms.f32	s15, s16, s11
9000dcb4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9000dcb8:	edc4 6a0c 	vstr	s13, [r4, #48]	; 0x30
9000dcbc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
9000dcc0:	ecbd 8b02 	vpop	{d8}
9000dcc4:	bd10      	pop	{r4, pc}

9000dcc6 <EwPushPathMatrix>:
9000dcc6:	b510      	push	{r4, lr}
9000dcc8:	4604      	mov	r4, r0
9000dcca:	2800      	cmp	r0, #0
9000dccc:	d030      	beq.n	9000dd30 <EwPushPathMatrix+0x6a>
9000dcce:	201c      	movs	r0, #28
9000dcd0:	f018 fff0 	bl	90026cb4 <EwAlloc>
9000dcd4:	b948      	cbnz	r0, 9000dcea <EwPushPathMatrix+0x24>
9000dcd6:	201d      	movs	r0, #29
9000dcd8:	f010 fb6c 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000dcdc:	2800      	cmp	r0, #0
9000dcde:	d1f6      	bne.n	9000dcce <EwPushPathMatrix+0x8>
9000dce0:	201d      	movs	r0, #29
9000dce2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000dce6:	f00f bbb3 	b.w	9001d450 <EwError>
9000dcea:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000dcec:	4a11      	ldr	r2, [pc, #68]	; (9000dd34 <EwPushPathMatrix+0x6e>)
9000dcee:	6043      	str	r3, [r0, #4]
9000dcf0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000dcf2:	6083      	str	r3, [r0, #8]
9000dcf4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000dcf6:	60c3      	str	r3, [r0, #12]
9000dcf8:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000dcfa:	6103      	str	r3, [r0, #16]
9000dcfc:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000dcfe:	6143      	str	r3, [r0, #20]
9000dd00:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000dd02:	6183      	str	r3, [r0, #24]
9000dd04:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dd06:	6003      	str	r3, [r0, #0]
9000dd08:	6813      	ldr	r3, [r2, #0]
9000dd0a:	63e0      	str	r0, [r4, #60]	; 0x3c
9000dd0c:	331c      	adds	r3, #28
9000dd0e:	6013      	str	r3, [r2, #0]
9000dd10:	4a09      	ldr	r2, [pc, #36]	; (9000dd38 <EwPushPathMatrix+0x72>)
9000dd12:	6811      	ldr	r1, [r2, #0]
9000dd14:	428b      	cmp	r3, r1
9000dd16:	dd00      	ble.n	9000dd1a <EwPushPathMatrix+0x54>
9000dd18:	6013      	str	r3, [r2, #0]
9000dd1a:	4a08      	ldr	r2, [pc, #32]	; (9000dd3c <EwPushPathMatrix+0x76>)
9000dd1c:	4908      	ldr	r1, [pc, #32]	; (9000dd40 <EwPushPathMatrix+0x7a>)
9000dd1e:	6812      	ldr	r2, [r2, #0]
9000dd20:	6809      	ldr	r1, [r1, #0]
9000dd22:	440a      	add	r2, r1
9000dd24:	4413      	add	r3, r2
9000dd26:	4a07      	ldr	r2, [pc, #28]	; (9000dd44 <EwPushPathMatrix+0x7e>)
9000dd28:	6811      	ldr	r1, [r2, #0]
9000dd2a:	428b      	cmp	r3, r1
9000dd2c:	dd00      	ble.n	9000dd30 <EwPushPathMatrix+0x6a>
9000dd2e:	6013      	str	r3, [r2, #0]
9000dd30:	bd10      	pop	{r4, pc}
9000dd32:	bf00      	nop
9000dd34:	200002bc 	.word	0x200002bc
9000dd38:	200002d8 	.word	0x200002d8
9000dd3c:	200002ac 	.word	0x200002ac
9000dd40:	200002b8 	.word	0x200002b8
9000dd44:	200002c0 	.word	0x200002c0

9000dd48 <EwPopPathMatrix>:
9000dd48:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
9000dd4a:	b1a3      	cbz	r3, 9000dd76 <EwPopPathMatrix+0x2e>
9000dd4c:	685a      	ldr	r2, [r3, #4]
9000dd4e:	490f      	ldr	r1, [pc, #60]	; (9000dd8c <EwPopPathMatrix+0x44>)
9000dd50:	6242      	str	r2, [r0, #36]	; 0x24
9000dd52:	689a      	ldr	r2, [r3, #8]
9000dd54:	6282      	str	r2, [r0, #40]	; 0x28
9000dd56:	68da      	ldr	r2, [r3, #12]
9000dd58:	62c2      	str	r2, [r0, #44]	; 0x2c
9000dd5a:	691a      	ldr	r2, [r3, #16]
9000dd5c:	6302      	str	r2, [r0, #48]	; 0x30
9000dd5e:	695a      	ldr	r2, [r3, #20]
9000dd60:	6342      	str	r2, [r0, #52]	; 0x34
9000dd62:	699a      	ldr	r2, [r3, #24]
9000dd64:	6382      	str	r2, [r0, #56]	; 0x38
9000dd66:	681a      	ldr	r2, [r3, #0]
9000dd68:	63c2      	str	r2, [r0, #60]	; 0x3c
9000dd6a:	4618      	mov	r0, r3
9000dd6c:	680a      	ldr	r2, [r1, #0]
9000dd6e:	3a1c      	subs	r2, #28
9000dd70:	600a      	str	r2, [r1, #0]
9000dd72:	f018 bfa1 	b.w	90026cb8 <EwFree>
9000dd76:	2300      	movs	r3, #0
9000dd78:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
9000dd7c:	6283      	str	r3, [r0, #40]	; 0x28
9000dd7e:	6242      	str	r2, [r0, #36]	; 0x24
9000dd80:	62c3      	str	r3, [r0, #44]	; 0x2c
9000dd82:	6303      	str	r3, [r0, #48]	; 0x30
9000dd84:	6342      	str	r2, [r0, #52]	; 0x34
9000dd86:	6383      	str	r3, [r0, #56]	; 0x38
9000dd88:	4770      	bx	lr
9000dd8a:	bf00      	nop
9000dd8c:	200002bc 	.word	0x200002bc

9000dd90 <EwCreatePathFromSVGString>:
9000dd90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000dd94:	ed2d 8b0c 	vpush	{d8-d13}
9000dd98:	b095      	sub	sp, #84	; 0x54
9000dd9a:	4680      	mov	r8, r0
9000dd9c:	f7fd fda0 	bl	9000b8e0 <UpdateWatermark2+0xdba>
9000dda0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9000dda4:	2300      	movs	r3, #0
9000dda6:	2500      	movs	r5, #0
9000dda8:	f8df a38c 	ldr.w	sl, [pc, #908]	; 9000e138 <EwCreatePathFromSVGString+0x3a8>
9000ddac:	eeb0 8a40 	vmov.f32	s16, s0
9000ddb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000ddb4:	f8df b384 	ldr.w	fp, [pc, #900]	; 9000e13c <EwCreatePathFromSVGString+0x3ac>
9000ddb8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
9000ddbc:	9309      	str	r3, [sp, #36]	; 0x24
9000ddbe:	930a      	str	r3, [sp, #40]	; 0x28
9000ddc0:	eef0 8a60 	vmov.f32	s17, s1
9000ddc4:	bf48      	it	mi
9000ddc6:	eeb1 9a40 	vnegmi.f32	s18, s0
9000ddca:	930b      	str	r3, [sp, #44]	; 0x2c
9000ddcc:	bf58      	it	pl
9000ddce:	eeb0 9a40 	vmovpl.f32	s18, s0
9000ddd2:	930c      	str	r3, [sp, #48]	; 0x30
9000ddd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000ddd8:	930d      	str	r3, [sp, #52]	; 0x34
9000ddda:	930e      	str	r3, [sp, #56]	; 0x38
9000dddc:	eef0 aa41 	vmov.f32	s21, s2
9000dde0:	930f      	str	r3, [sp, #60]	; 0x3c
9000dde2:	eef0 9a61 	vmov.f32	s19, s3
9000dde6:	9310      	str	r3, [sp, #64]	; 0x40
9000dde8:	eeb0 aa42 	vmov.f32	s20, s4
9000ddec:	9311      	str	r3, [sp, #68]	; 0x44
9000ddee:	f04f 33ff 	mov.w	r3, #4294967295
9000ddf2:	bf48      	it	mi
9000ddf4:	eeb1 ba60 	vnegmi.f32	s22, s1
9000ddf8:	4606      	mov	r6, r0
9000ddfa:	bf58      	it	pl
9000ddfc:	eeb0 ba60 	vmovpl.f32	s22, s1
9000de00:	9007      	str	r0, [sp, #28]
9000de02:	9508      	str	r5, [sp, #32]
9000de04:	f8ca 5048 	str.w	r5, [sl, #72]	; 0x48
9000de08:	f8cb 3008 	str.w	r3, [fp, #8]
9000de0c:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
9000de10:	b108      	cbz	r0, 9000de16 <EwCreatePathFromSVGString+0x86>
9000de12:	8803      	ldrh	r3, [r0, #0]
9000de14:	b94b      	cbnz	r3, 9000de2a <EwCreatePathFromSVGString+0x9a>
9000de16:	2301      	movs	r3, #1
9000de18:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000de1c:	2500      	movs	r5, #0
9000de1e:	4628      	mov	r0, r5
9000de20:	b015      	add	sp, #84	; 0x54
9000de22:	ecbd 8b0c 	vpop	{d8-d13}
9000de26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000de2a:	f023 0320 	bic.w	r3, r3, #32
9000de2e:	2b4d      	cmp	r3, #77	; 0x4d
9000de30:	d117      	bne.n	9000de62 <EwCreatePathFromSVGString+0xd2>
9000de32:	4601      	mov	r1, r0
9000de34:	462a      	mov	r2, r5
9000de36:	4628      	mov	r0, r5
9000de38:	4cbb      	ldr	r4, [pc, #748]	; (9000e128 <EwCreatePathFromSVGString+0x398>)
9000de3a:	460f      	mov	r7, r1
9000de3c:	f831 3b02 	ldrh.w	r3, [r1], #2
9000de40:	b9c3      	cbnz	r3, 9000de74 <EwCreatePathFromSVGString+0xe4>
9000de42:	b105      	cbz	r5, 9000de46 <EwCreatePathFromSVGString+0xb6>
9000de44:	9707      	str	r7, [sp, #28]
9000de46:	f7ff f806 	bl	9000ce56 <EwCreatePath>
9000de4a:	4605      	mov	r5, r0
9000de4c:	bb88      	cbnz	r0, 9000deb2 <EwCreatePathFromSVGString+0x122>
9000de4e:	9807      	ldr	r0, [sp, #28]
9000de50:	2304      	movs	r3, #4
9000de52:	eba0 0008 	sub.w	r0, r0, r8
9000de56:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000de5a:	1040      	asrs	r0, r0, #1
9000de5c:	f8cb 0008 	str.w	r0, [fp, #8]
9000de60:	e7dd      	b.n	9000de1e <EwCreatePathFromSVGString+0x8e>
9000de62:	eba0 0608 	sub.w	r6, r0, r8
9000de66:	2302      	movs	r3, #2
9000de68:	1076      	asrs	r6, r6, #1
9000de6a:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000de6e:	f8cb 6008 	str.w	r6, [fp, #8]
9000de72:	e7d4      	b.n	9000de1e <EwCreatePathFromSVGString+0x8e>
9000de74:	f1a3 0561 	sub.w	r5, r3, #97	; 0x61
9000de78:	2d19      	cmp	r5, #25
9000de7a:	bf9c      	itt	ls
9000de7c:	3b20      	subls	r3, #32
9000de7e:	b29b      	uxthls	r3, r3
9000de80:	2b4d      	cmp	r3, #77	; 0x4d
9000de82:	d103      	bne.n	9000de8c <EwCreatePathFromSVGString+0xfc>
9000de84:	3001      	adds	r0, #1
9000de86:	2200      	movs	r2, #0
9000de88:	2501      	movs	r5, #1
9000de8a:	e7d6      	b.n	9000de3a <EwCreatePathFromSVGString+0xaa>
9000de8c:	2b5a      	cmp	r3, #90	; 0x5a
9000de8e:	d101      	bne.n	9000de94 <EwCreatePathFromSVGString+0x104>
9000de90:	3201      	adds	r2, #1
9000de92:	e7f9      	b.n	9000de88 <EwCreatePathFromSVGString+0xf8>
9000de94:	2a00      	cmp	r2, #0
9000de96:	d0f7      	beq.n	9000de88 <EwCreatePathFromSVGString+0xf8>
9000de98:	3b41      	subs	r3, #65	; 0x41
9000de9a:	b29b      	uxth	r3, r3
9000de9c:	2b15      	cmp	r3, #21
9000de9e:	d8f3      	bhi.n	9000de88 <EwCreatePathFromSVGString+0xf8>
9000dea0:	fa24 f303 	lsr.w	r3, r4, r3
9000dea4:	43db      	mvns	r3, r3
9000dea6:	f013 0301 	ands.w	r3, r3, #1
9000deaa:	bf04      	itt	eq
9000deac:	3001      	addeq	r0, #1
9000deae:	461a      	moveq	r2, r3
9000deb0:	e7ea      	b.n	9000de88 <EwCreatePathFromSVGString+0xf8>
9000deb2:	2002      	movs	r0, #2
9000deb4:	f7fe ffcf 	bl	9000ce56 <EwCreatePath>
9000deb8:	4604      	mov	r4, r0
9000deba:	b960      	cbnz	r0, 9000ded6 <EwCreatePathFromSVGString+0x146>
9000debc:	4628      	mov	r0, r5
9000debe:	f7ff f819 	bl	9000cef4 <EwFreePath>
9000dec2:	9807      	ldr	r0, [sp, #28]
9000dec4:	2304      	movs	r3, #4
9000dec6:	eba0 0008 	sub.w	r0, r0, r8
9000deca:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000dece:	1040      	asrs	r0, r0, #1
9000ded0:	f8cb 0008 	str.w	r0, [fp, #8]
9000ded4:	e7a2      	b.n	9000de1c <EwCreatePathFromSVGString+0x8c>
9000ded6:	eef5 aa40 	vcmp.f32	s21, #0.0
9000deda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000dede:	d115      	bne.n	9000df0c <EwCreatePathFromSVGString+0x17c>
9000dee0:	eef5 9a40 	vcmp.f32	s19, #0.0
9000dee4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000dee8:	d110      	bne.n	9000df0c <EwCreatePathFromSVGString+0x17c>
9000deea:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000deee:	eeb4 8a67 	vcmp.f32	s16, s15
9000def2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000def6:	d109      	bne.n	9000df0c <EwCreatePathFromSVGString+0x17c>
9000def8:	eef4 9a67 	vcmp.f32	s19, s15
9000defc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000df00:	d104      	bne.n	9000df0c <EwCreatePathFromSVGString+0x17c>
9000df02:	eeb5 aa40 	vcmp.f32	s20, #0.0
9000df06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000df0a:	d011      	beq.n	9000df30 <EwCreatePathFromSVGString+0x1a0>
9000df0c:	eef0 0a69 	vmov.f32	s1, s19
9000df10:	4628      	mov	r0, r5
9000df12:	eeb0 0a6a 	vmov.f32	s0, s21
9000df16:	f7ff fe70 	bl	9000dbfa <EwTranslatePathMatrix>
9000df1a:	eeb0 0a4a 	vmov.f32	s0, s20
9000df1e:	f7ff fea0 	bl	9000dc62 <EwRotatePathMatrix>
9000df22:	eef0 0a68 	vmov.f32	s1, s17
9000df26:	eeb0 0a48 	vmov.f32	s0, s16
9000df2a:	4628      	mov	r0, r5
9000df2c:	f7ff fe7f 	bl	9000dc2e <EwScalePathMatrix>
9000df30:	f44f 7280 	mov.w	r2, #256	; 0x100
9000df34:	2100      	movs	r1, #0
9000df36:	4620      	mov	r0, r4
9000df38:	f7ff f81d 	bl	9000cf76 <EwInitSubPath>
9000df3c:	b978      	cbnz	r0, 9000df5e <EwCreatePathFromSVGString+0x1ce>
9000df3e:	4620      	mov	r0, r4
9000df40:	f7fe ffd8 	bl	9000cef4 <EwFreePath>
9000df44:	4628      	mov	r0, r5
9000df46:	f7fe ffd5 	bl	9000cef4 <EwFreePath>
9000df4a:	2304      	movs	r3, #4
9000df4c:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000df50:	9b07      	ldr	r3, [sp, #28]
9000df52:	eba3 0308 	sub.w	r3, r3, r8
9000df56:	105b      	asrs	r3, r3, #1
9000df58:	f8cb 3008 	str.w	r3, [fp, #8]
9000df5c:	e75e      	b.n	9000de1c <EwCreatePathFromSVGString+0x8c>
9000df5e:	ee39 9a0b 	vadd.f32	s18, s18, s22
9000df62:	eddf 7a72 	vldr	s15, [pc, #456]	; 9000e12c <EwCreatePathFromSVGString+0x39c>
9000df66:	ed9f 8a72 	vldr	s16, [pc, #456]	; 9000e130 <EwCreatePathFromSVGString+0x3a0>
9000df6a:	f04f 0900 	mov.w	r9, #0
9000df6e:	eddf 9a71 	vldr	s19, [pc, #452]	; 9000e134 <EwCreatePathFromSVGString+0x3a4>
9000df72:	ee29 9a27 	vmul.f32	s18, s18, s15
9000df76:	9607      	str	r6, [sp, #28]
9000df78:	eef0 8a48 	vmov.f32	s17, s16
9000df7c:	9b07      	ldr	r3, [sp, #28]
9000df7e:	881b      	ldrh	r3, [r3, #0]
9000df80:	b91b      	cbnz	r3, 9000df8a <EwCreatePathFromSVGString+0x1fa>
9000df82:	4620      	mov	r0, r4
9000df84:	f7fe ffb6 	bl	9000cef4 <EwFreePath>
9000df88:	e749      	b.n	9000de1e <EwCreatePathFromSVGString+0x8e>
9000df8a:	2700      	movs	r7, #0
9000df8c:	eef0 0a48 	vmov.f32	s1, s16
9000df90:	eeb0 0a68 	vmov.f32	s0, s17
9000df94:	9908      	ldr	r1, [sp, #32]
9000df96:	4620      	mov	r0, r4
9000df98:	f7ff f862 	bl	9000d060 <EwBeginSubPath>
9000df9c:	9704      	str	r7, [sp, #16]
9000df9e:	9b07      	ldr	r3, [sp, #28]
9000dfa0:	881e      	ldrh	r6, [r3, #0]
9000dfa2:	9303      	str	r3, [sp, #12]
9000dfa4:	2e00      	cmp	r6, #0
9000dfa6:	f000 8552 	beq.w	9000ea4e <EwCreatePathFromSVGString+0xcbe>
9000dfaa:	f026 0320 	bic.w	r3, r6, #32
9000dfae:	9a04      	ldr	r2, [sp, #16]
9000dfb0:	b29b      	uxth	r3, r3
9000dfb2:	b112      	cbz	r2, 9000dfba <EwCreatePathFromSVGString+0x22a>
9000dfb4:	2b4d      	cmp	r3, #77	; 0x4d
9000dfb6:	f000 854a 	beq.w	9000ea4e <EwCreatePathFromSVGString+0xcbe>
9000dfba:	9a03      	ldr	r2, [sp, #12]
9000dfbc:	2b4d      	cmp	r3, #77	; 0x4d
9000dfbe:	f102 0002 	add.w	r0, r2, #2
9000dfc2:	9007      	str	r0, [sp, #28]
9000dfc4:	d151      	bne.n	9000e06a <EwCreatePathFromSVGString+0x2da>
9000dfc6:	a90a      	add	r1, sp, #40	; 0x28
9000dfc8:	a807      	add	r0, sp, #28
9000dfca:	f7fd fcb9 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000dfce:	2800      	cmp	r0, #0
9000dfd0:	f000 8560 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000dfd4:	a90b      	add	r1, sp, #44	; 0x2c
9000dfd6:	a807      	add	r0, sp, #28
9000dfd8:	f7fd fcb2 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000dfdc:	2800      	cmp	r0, #0
9000dfde:	f000 8559 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000dfe2:	ed9d 4a0a 	vldr	s8, [sp, #40]	; 0x28
9000dfe6:	2e4d      	cmp	r6, #77	; 0x4d
9000dfe8:	eddd 3a0b 	vldr	s7, [sp, #44]	; 0x2c
9000dfec:	4620      	mov	r0, r4
9000dfee:	bf18      	it	ne
9000dff0:	ee34 4a28 	vaddne.f32	s8, s8, s17
9000dff4:	9908      	ldr	r1, [sp, #32]
9000dff6:	bf18      	it	ne
9000dff8:	ee73 3a88 	vaddne.f32	s7, s7, s16
9000dffc:	eeb0 0a44 	vmov.f32	s0, s8
9000e000:	eef0 0a63 	vmov.f32	s1, s7
9000e004:	f7ff f82c 	bl	9000d060 <EwBeginSubPath>
9000e008:	a90a      	add	r1, sp, #40	; 0x28
9000e00a:	a807      	add	r0, sp, #28
9000e00c:	eeb0 8a63 	vmov.f32	s16, s7
9000e010:	eef0 8a44 	vmov.f32	s17, s8
9000e014:	f7fd fc94 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e018:	b920      	cbnz	r0, 9000e024 <EwCreatePathFromSVGString+0x294>
9000e01a:	9b04      	ldr	r3, [sp, #16]
9000e01c:	4637      	mov	r7, r6
9000e01e:	3301      	adds	r3, #1
9000e020:	9304      	str	r3, [sp, #16]
9000e022:	e7bc      	b.n	9000df9e <EwCreatePathFromSVGString+0x20e>
9000e024:	a90b      	add	r1, sp, #44	; 0x2c
9000e026:	a807      	add	r0, sp, #28
9000e028:	f7fd fc8a 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e02c:	2800      	cmp	r0, #0
9000e02e:	f000 8531 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e032:	2201      	movs	r2, #1
9000e034:	a908      	add	r1, sp, #32
9000e036:	4620      	mov	r0, r4
9000e038:	f7ff fd70 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e03c:	2800      	cmp	r0, #0
9000e03e:	f000 853f 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e042:	ed9d 4a0a 	vldr	s8, [sp, #40]	; 0x28
9000e046:	2e4d      	cmp	r6, #77	; 0x4d
9000e048:	eddd 3a0b 	vldr	s7, [sp, #44]	; 0x2c
9000e04c:	4620      	mov	r0, r4
9000e04e:	bf18      	it	ne
9000e050:	ee34 4a28 	vaddne.f32	s8, s8, s17
9000e054:	9908      	ldr	r1, [sp, #32]
9000e056:	bf18      	it	ne
9000e058:	ee73 3a88 	vaddne.f32	s7, s7, s16
9000e05c:	eeb0 0a44 	vmov.f32	s0, s8
9000e060:	eef0 0a63 	vmov.f32	s1, s7
9000e064:	f7ff f84a 	bl	9000d0fc <EwAddSubPathLine>
9000e068:	e7ce      	b.n	9000e008 <EwCreatePathFromSVGString+0x278>
9000e06a:	2b4c      	cmp	r3, #76	; 0x4c
9000e06c:	d133      	bne.n	9000e0d6 <EwCreatePathFromSVGString+0x346>
9000e06e:	a90a      	add	r1, sp, #40	; 0x28
9000e070:	a807      	add	r0, sp, #28
9000e072:	f7fd fc65 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e076:	2800      	cmp	r0, #0
9000e078:	f000 850c 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e07c:	a90b      	add	r1, sp, #44	; 0x2c
9000e07e:	a807      	add	r0, sp, #28
9000e080:	f7fd fc5e 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e084:	2800      	cmp	r0, #0
9000e086:	f000 8505 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e08a:	2201      	movs	r2, #1
9000e08c:	a908      	add	r1, sp, #32
9000e08e:	4620      	mov	r0, r4
9000e090:	f7ff fd44 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e094:	2800      	cmp	r0, #0
9000e096:	f000 8513 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e09a:	2e4c      	cmp	r6, #76	; 0x4c
9000e09c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e0a0:	ed9d 7a0b 	vldr	s14, [sp, #44]	; 0x2c
9000e0a4:	4620      	mov	r0, r4
9000e0a6:	bf18      	it	ne
9000e0a8:	ee78 8aa7 	vaddne.f32	s17, s17, s15
9000e0ac:	9908      	ldr	r1, [sp, #32]
9000e0ae:	bf12      	itee	ne
9000e0b0:	ee38 8a07 	vaddne.f32	s16, s16, s14
9000e0b4:	eeb0 8a47 	vmoveq.f32	s16, s14
9000e0b8:	eef0 8a67 	vmoveq.f32	s17, s15
9000e0bc:	eef0 0a48 	vmov.f32	s1, s16
9000e0c0:	eeb0 0a68 	vmov.f32	s0, s17
9000e0c4:	f7ff f81a 	bl	9000d0fc <EwAddSubPathLine>
9000e0c8:	a90a      	add	r1, sp, #40	; 0x28
9000e0ca:	a807      	add	r0, sp, #28
9000e0cc:	f7fd fc38 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e0d0:	2800      	cmp	r0, #0
9000e0d2:	d1d3      	bne.n	9000e07c <EwCreatePathFromSVGString+0x2ec>
9000e0d4:	e7a1      	b.n	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e0d6:	2b48      	cmp	r3, #72	; 0x48
9000e0d8:	d132      	bne.n	9000e140 <EwCreatePathFromSVGString+0x3b0>
9000e0da:	a90a      	add	r1, sp, #40	; 0x28
9000e0dc:	a807      	add	r0, sp, #28
9000e0de:	f7fd fc2f 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e0e2:	2800      	cmp	r0, #0
9000e0e4:	f000 84d6 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e0e8:	2201      	movs	r2, #1
9000e0ea:	a908      	add	r1, sp, #32
9000e0ec:	4620      	mov	r0, r4
9000e0ee:	f7ff fd15 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e0f2:	2800      	cmp	r0, #0
9000e0f4:	f000 84e4 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e0f8:	2e48      	cmp	r6, #72	; 0x48
9000e0fa:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e0fe:	9908      	ldr	r1, [sp, #32]
9000e100:	eef0 0a48 	vmov.f32	s1, s16
9000e104:	bf18      	it	ne
9000e106:	ee78 8aa7 	vaddne.f32	s17, s17, s15
9000e10a:	4620      	mov	r0, r4
9000e10c:	bf08      	it	eq
9000e10e:	eef0 8a67 	vmoveq.f32	s17, s15
9000e112:	eeb0 0a68 	vmov.f32	s0, s17
9000e116:	f7fe fff1 	bl	9000d0fc <EwAddSubPathLine>
9000e11a:	a90a      	add	r1, sp, #40	; 0x28
9000e11c:	a807      	add	r0, sp, #28
9000e11e:	f7fd fc0f 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e122:	2800      	cmp	r0, #0
9000e124:	d1e0      	bne.n	9000e0e8 <EwCreatePathFromSVGString+0x358>
9000e126:	e778      	b.n	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e128:	002d0885 	.word	0x002d0885
9000e12c:	3d800000 	.word	0x3d800000
9000e130:	00000000 	.word	0x00000000
9000e134:	43b40000 	.word	0x43b40000
9000e138:	200000c8 	.word	0x200000c8
9000e13c:	20000000 	.word	0x20000000
9000e140:	2b56      	cmp	r3, #86	; 0x56
9000e142:	d126      	bne.n	9000e192 <EwCreatePathFromSVGString+0x402>
9000e144:	a90b      	add	r1, sp, #44	; 0x2c
9000e146:	a807      	add	r0, sp, #28
9000e148:	f7fd fbfa 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e14c:	2800      	cmp	r0, #0
9000e14e:	f000 84a1 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e152:	2201      	movs	r2, #1
9000e154:	a908      	add	r1, sp, #32
9000e156:	4620      	mov	r0, r4
9000e158:	f7ff fce0 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e15c:	2800      	cmp	r0, #0
9000e15e:	f000 84af 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e162:	2e56      	cmp	r6, #86	; 0x56
9000e164:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9000e168:	9908      	ldr	r1, [sp, #32]
9000e16a:	eeb0 0a68 	vmov.f32	s0, s17
9000e16e:	bf18      	it	ne
9000e170:	ee38 8a27 	vaddne.f32	s16, s16, s15
9000e174:	4620      	mov	r0, r4
9000e176:	bf08      	it	eq
9000e178:	eeb0 8a67 	vmoveq.f32	s16, s15
9000e17c:	eef0 0a48 	vmov.f32	s1, s16
9000e180:	f7fe ffbc 	bl	9000d0fc <EwAddSubPathLine>
9000e184:	a90b      	add	r1, sp, #44	; 0x2c
9000e186:	a807      	add	r0, sp, #28
9000e188:	f7fd fbda 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e18c:	2800      	cmp	r0, #0
9000e18e:	d1e0      	bne.n	9000e152 <EwCreatePathFromSVGString+0x3c2>
9000e190:	e743      	b.n	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e192:	2b43      	cmp	r3, #67	; 0x43
9000e194:	f040 80b7 	bne.w	9000e306 <EwCreatePathFromSVGString+0x576>
9000e198:	a90a      	add	r1, sp, #40	; 0x28
9000e19a:	a807      	add	r0, sp, #28
9000e19c:	f7fd fbd0 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1a0:	2800      	cmp	r0, #0
9000e1a2:	f000 8477 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1a6:	a90b      	add	r1, sp, #44	; 0x2c
9000e1a8:	a807      	add	r0, sp, #28
9000e1aa:	f7fd fbc9 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1ae:	2800      	cmp	r0, #0
9000e1b0:	f000 8470 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1b4:	a90c      	add	r1, sp, #48	; 0x30
9000e1b6:	a807      	add	r0, sp, #28
9000e1b8:	f7fd fbc2 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1bc:	2800      	cmp	r0, #0
9000e1be:	f000 8469 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1c2:	a90d      	add	r1, sp, #52	; 0x34
9000e1c4:	a807      	add	r0, sp, #28
9000e1c6:	f7fd fbbb 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1ca:	2800      	cmp	r0, #0
9000e1cc:	f000 8462 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1d0:	a90e      	add	r1, sp, #56	; 0x38
9000e1d2:	a807      	add	r0, sp, #28
9000e1d4:	f7fd fbb4 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1d8:	2800      	cmp	r0, #0
9000e1da:	f000 845b 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1de:	a90f      	add	r1, sp, #60	; 0x3c
9000e1e0:	a807      	add	r0, sp, #28
9000e1e2:	f7fd fbad 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e1e6:	2800      	cmp	r0, #0
9000e1e8:	f000 8454 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e1ec:	2e63      	cmp	r6, #99	; 0x63
9000e1ee:	d123      	bne.n	9000e238 <EwCreatePathFromSVGString+0x4a8>
9000e1f0:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e1f4:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e1f8:	edcd 7a0a 	vstr	s15, [sp, #40]	; 0x28
9000e1fc:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9000e200:	ee78 7a27 	vadd.f32	s15, s16, s15
9000e204:	edcd 7a0b 	vstr	s15, [sp, #44]	; 0x2c
9000e208:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e20c:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e210:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
9000e214:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9000e218:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e21c:	edcd 7a0d 	vstr	s15, [sp, #52]	; 0x34
9000e220:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9000e224:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e228:	edcd 7a0e 	vstr	s15, [sp, #56]	; 0x38
9000e22c:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
9000e230:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e234:	edcd 7a0f 	vstr	s15, [sp, #60]	; 0x3c
9000e238:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e23c:	ee70 8a68 	vsub.f32	s17, s0, s17
9000e240:	ed9d 0a0b 	vldr	s0, [sp, #44]	; 0x2c
9000e244:	ee30 0a48 	vsub.f32	s0, s0, s16
9000e248:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e24c:	eea8 0aa8 	vfma.f32	s0, s17, s17
9000e250:	f018 fd7c 	bl	90026d4c <EwMathSqrt>
9000e254:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
9000e258:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e25c:	eeb0 8a40 	vmov.f32	s16, s0
9000e260:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
9000e264:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e268:	ed9d 7a0b 	vldr	s14, [sp, #44]	; 0x2c
9000e26c:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e270:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e274:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e278:	f018 fd68 	bl	90026d4c <EwMathSqrt>
9000e27c:	ed9d 7a0c 	vldr	s14, [sp, #48]	; 0x30
9000e280:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9000e284:	ee38 8a00 	vadd.f32	s16, s16, s0
9000e288:	ed9d 0a0f 	vldr	s0, [sp, #60]	; 0x3c
9000e28c:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e290:	ed9d 7a0d 	vldr	s14, [sp, #52]	; 0x34
9000e294:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e298:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e29c:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e2a0:	f018 fd54 	bl	90026d4c <EwMathSqrt>
9000e2a4:	ee38 0a00 	vadd.f32	s0, s16, s0
9000e2a8:	a908      	add	r1, sp, #32
9000e2aa:	4620      	mov	r0, r4
9000e2ac:	ee20 0a09 	vmul.f32	s0, s0, s18
9000e2b0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9000e2b4:	ee17 2a90 	vmov	r2, s15
9000e2b8:	2a07      	cmp	r2, #7
9000e2ba:	bfd8      	it	le
9000e2bc:	3202      	addle	r2, #2
9000e2be:	3201      	adds	r2, #1
9000e2c0:	9203      	str	r2, [sp, #12]
9000e2c2:	f7ff fc2b 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e2c6:	2800      	cmp	r0, #0
9000e2c8:	f000 83fa 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e2cc:	9908      	ldr	r1, [sp, #32]
9000e2ce:	4620      	mov	r0, r4
9000e2d0:	9a03      	ldr	r2, [sp, #12]
9000e2d2:	eddd 2a0f 	vldr	s5, [sp, #60]	; 0x3c
9000e2d6:	ed9d 2a0e 	vldr	s4, [sp, #56]	; 0x38
9000e2da:	eddd 1a0d 	vldr	s3, [sp, #52]	; 0x34
9000e2de:	ed9d 1a0c 	vldr	s2, [sp, #48]	; 0x30
9000e2e2:	eddd 0a0b 	vldr	s1, [sp, #44]	; 0x2c
9000e2e6:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e2ea:	f7ff f813 	bl	9000d314 <EwAddSubPathBezier3>
9000e2ee:	a90a      	add	r1, sp, #40	; 0x28
9000e2f0:	a807      	add	r0, sp, #28
9000e2f2:	eddd 8a0e 	vldr	s17, [sp, #56]	; 0x38
9000e2f6:	ed9d 8a0f 	vldr	s16, [sp, #60]	; 0x3c
9000e2fa:	f7fd fb21 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e2fe:	2800      	cmp	r0, #0
9000e300:	f47f af51 	bne.w	9000e1a6 <EwCreatePathFromSVGString+0x416>
9000e304:	e689      	b.n	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e306:	2b53      	cmp	r3, #83	; 0x53
9000e308:	f040 80c0 	bne.w	9000e48c <EwCreatePathFromSVGString+0x6fc>
9000e30c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000e30e:	a90c      	add	r1, sp, #48	; 0x30
9000e310:	a807      	add	r0, sp, #28
9000e312:	930a      	str	r3, [sp, #40]	; 0x28
9000e314:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000e316:	930b      	str	r3, [sp, #44]	; 0x2c
9000e318:	f7fd fb12 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e31c:	2800      	cmp	r0, #0
9000e31e:	f000 83b9 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e322:	a90d      	add	r1, sp, #52	; 0x34
9000e324:	a807      	add	r0, sp, #28
9000e326:	f7fd fb0b 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e32a:	2800      	cmp	r0, #0
9000e32c:	f000 83b2 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e330:	a90e      	add	r1, sp, #56	; 0x38
9000e332:	a807      	add	r0, sp, #28
9000e334:	f7fd fb04 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e338:	2800      	cmp	r0, #0
9000e33a:	f000 83ab 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e33e:	a90f      	add	r1, sp, #60	; 0x3c
9000e340:	a807      	add	r0, sp, #28
9000e342:	f7fd fafd 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e346:	2800      	cmp	r0, #0
9000e348:	f000 83a4 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e34c:	2e73      	cmp	r6, #115	; 0x73
9000e34e:	d117      	bne.n	9000e380 <EwCreatePathFromSVGString+0x5f0>
9000e350:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e354:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e358:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
9000e35c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9000e360:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e364:	edcd 7a0d 	vstr	s15, [sp, #52]	; 0x34
9000e368:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9000e36c:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e370:	edcd 7a0e 	vstr	s15, [sp, #56]	; 0x38
9000e374:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
9000e378:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e37c:	edcd 7a0f 	vstr	s15, [sp, #60]	; 0x3c
9000e380:	f027 0730 	bic.w	r7, r7, #48	; 0x30
9000e384:	b2bf      	uxth	r7, r7
9000e386:	2f43      	cmp	r7, #67	; 0x43
9000e388:	d17b      	bne.n	9000e482 <EwCreatePathFromSVGString+0x6f2>
9000e38a:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e38e:	ee77 7ae8 	vsub.f32	s15, s15, s17
9000e392:	ee78 7ae7 	vsub.f32	s15, s17, s15
9000e396:	edcd 7a0a 	vstr	s15, [sp, #40]	; 0x28
9000e39a:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9000e39e:	ee77 7ac8 	vsub.f32	s15, s15, s16
9000e3a2:	ee78 7a67 	vsub.f32	s15, s16, s15
9000e3a6:	edcd 7a0b 	vstr	s15, [sp, #44]	; 0x2c
9000e3aa:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e3ae:	ee70 8a68 	vsub.f32	s17, s0, s17
9000e3b2:	ed9d 0a0b 	vldr	s0, [sp, #44]	; 0x2c
9000e3b6:	ee30 0a48 	vsub.f32	s0, s0, s16
9000e3ba:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e3be:	eea8 0aa8 	vfma.f32	s0, s17, s17
9000e3c2:	f018 fcc3 	bl	90026d4c <EwMathSqrt>
9000e3c6:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
9000e3ca:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e3ce:	eeb0 8a40 	vmov.f32	s16, s0
9000e3d2:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
9000e3d6:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e3da:	ed9d 7a0b 	vldr	s14, [sp, #44]	; 0x2c
9000e3de:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e3e2:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e3e6:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e3ea:	f018 fcaf 	bl	90026d4c <EwMathSqrt>
9000e3ee:	ed9d 7a0c 	vldr	s14, [sp, #48]	; 0x30
9000e3f2:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9000e3f6:	ee38 8a00 	vadd.f32	s16, s16, s0
9000e3fa:	ed9d 0a0f 	vldr	s0, [sp, #60]	; 0x3c
9000e3fe:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e402:	ed9d 7a0d 	vldr	s14, [sp, #52]	; 0x34
9000e406:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e40a:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e40e:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e412:	f018 fc9b 	bl	90026d4c <EwMathSqrt>
9000e416:	ee38 0a00 	vadd.f32	s0, s16, s0
9000e41a:	a908      	add	r1, sp, #32
9000e41c:	4620      	mov	r0, r4
9000e41e:	ee20 0a09 	vmul.f32	s0, s0, s18
9000e422:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9000e426:	ee17 2a90 	vmov	r2, s15
9000e42a:	2a07      	cmp	r2, #7
9000e42c:	bfd8      	it	le
9000e42e:	3202      	addle	r2, #2
9000e430:	3201      	adds	r2, #1
9000e432:	9203      	str	r2, [sp, #12]
9000e434:	f7ff fb72 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e438:	2800      	cmp	r0, #0
9000e43a:	f000 8341 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e43e:	9908      	ldr	r1, [sp, #32]
9000e440:	4620      	mov	r0, r4
9000e442:	9a03      	ldr	r2, [sp, #12]
9000e444:	eddd 2a0f 	vldr	s5, [sp, #60]	; 0x3c
9000e448:	ed9d 2a0e 	vldr	s4, [sp, #56]	; 0x38
9000e44c:	eddd 1a0d 	vldr	s3, [sp, #52]	; 0x34
9000e450:	ed9d 1a0c 	vldr	s2, [sp, #48]	; 0x30
9000e454:	eddd 0a0b 	vldr	s1, [sp, #44]	; 0x2c
9000e458:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e45c:	f7fe ff5a 	bl	9000d314 <EwAddSubPathBezier3>
9000e460:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000e462:	a90c      	add	r1, sp, #48	; 0x30
9000e464:	a807      	add	r0, sp, #28
9000e466:	930a      	str	r3, [sp, #40]	; 0x28
9000e468:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000e46a:	eddd 8a0e 	vldr	s17, [sp, #56]	; 0x38
9000e46e:	ed9d 8a0f 	vldr	s16, [sp, #60]	; 0x3c
9000e472:	930b      	str	r3, [sp, #44]	; 0x2c
9000e474:	f7fd fa64 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e478:	2800      	cmp	r0, #0
9000e47a:	f43f adce 	beq.w	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e47e:	4637      	mov	r7, r6
9000e480:	e74f      	b.n	9000e322 <EwCreatePathFromSVGString+0x592>
9000e482:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
9000e486:	ed8d 8a0b 	vstr	s16, [sp, #44]	; 0x2c
9000e48a:	e78e      	b.n	9000e3aa <EwCreatePathFromSVGString+0x61a>
9000e48c:	2b51      	cmp	r3, #81	; 0x51
9000e48e:	f040 8084 	bne.w	9000e59a <EwCreatePathFromSVGString+0x80a>
9000e492:	a90a      	add	r1, sp, #40	; 0x28
9000e494:	a807      	add	r0, sp, #28
9000e496:	f7fd fa53 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e49a:	2800      	cmp	r0, #0
9000e49c:	f000 82fa 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e4a0:	a90b      	add	r1, sp, #44	; 0x2c
9000e4a2:	a807      	add	r0, sp, #28
9000e4a4:	f7fd fa4c 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e4a8:	2800      	cmp	r0, #0
9000e4aa:	f000 82f3 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e4ae:	a90c      	add	r1, sp, #48	; 0x30
9000e4b0:	a807      	add	r0, sp, #28
9000e4b2:	f7fd fa45 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e4b6:	2800      	cmp	r0, #0
9000e4b8:	f000 82ec 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e4bc:	a90d      	add	r1, sp, #52	; 0x34
9000e4be:	a807      	add	r0, sp, #28
9000e4c0:	f7fd fa3e 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e4c4:	2800      	cmp	r0, #0
9000e4c6:	f000 82e5 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e4ca:	2e71      	cmp	r6, #113	; 0x71
9000e4cc:	d117      	bne.n	9000e4fe <EwCreatePathFromSVGString+0x76e>
9000e4ce:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e4d2:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e4d6:	edcd 7a0a 	vstr	s15, [sp, #40]	; 0x28
9000e4da:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9000e4de:	ee78 7a27 	vadd.f32	s15, s16, s15
9000e4e2:	edcd 7a0b 	vstr	s15, [sp, #44]	; 0x2c
9000e4e6:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e4ea:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e4ee:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
9000e4f2:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9000e4f6:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e4fa:	edcd 7a0d 	vstr	s15, [sp, #52]	; 0x34
9000e4fe:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e502:	ee70 8a68 	vsub.f32	s17, s0, s17
9000e506:	ed9d 0a0b 	vldr	s0, [sp, #44]	; 0x2c
9000e50a:	ee30 0a48 	vsub.f32	s0, s0, s16
9000e50e:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e512:	eea8 0aa8 	vfma.f32	s0, s17, s17
9000e516:	f018 fc19 	bl	90026d4c <EwMathSqrt>
9000e51a:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
9000e51e:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e522:	eeb0 8a40 	vmov.f32	s16, s0
9000e526:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
9000e52a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e52e:	ed9d 7a0b 	vldr	s14, [sp, #44]	; 0x2c
9000e532:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e536:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e53a:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e53e:	f018 fc05 	bl	90026d4c <EwMathSqrt>
9000e542:	ee38 0a00 	vadd.f32	s0, s16, s0
9000e546:	a908      	add	r1, sp, #32
9000e548:	4620      	mov	r0, r4
9000e54a:	ee20 0a09 	vmul.f32	s0, s0, s18
9000e54e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9000e552:	ee17 2a90 	vmov	r2, s15
9000e556:	2a07      	cmp	r2, #7
9000e558:	bfd8      	it	le
9000e55a:	3202      	addle	r2, #2
9000e55c:	3201      	adds	r2, #1
9000e55e:	9203      	str	r2, [sp, #12]
9000e560:	f7ff fadc 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e564:	2800      	cmp	r0, #0
9000e566:	f000 82ab 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e56a:	9908      	ldr	r1, [sp, #32]
9000e56c:	4620      	mov	r0, r4
9000e56e:	9a03      	ldr	r2, [sp, #12]
9000e570:	eddd 1a0d 	vldr	s3, [sp, #52]	; 0x34
9000e574:	ed9d 1a0c 	vldr	s2, [sp, #48]	; 0x30
9000e578:	eddd 0a0b 	vldr	s1, [sp, #44]	; 0x2c
9000e57c:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e580:	f7fe fe1d 	bl	9000d1be <EwAddSubPathBezier2>
9000e584:	a90a      	add	r1, sp, #40	; 0x28
9000e586:	a807      	add	r0, sp, #28
9000e588:	eddd 8a0c 	vldr	s17, [sp, #48]	; 0x30
9000e58c:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
9000e590:	f7fd f9d6 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e594:	2800      	cmp	r0, #0
9000e596:	d183      	bne.n	9000e4a0 <EwCreatePathFromSVGString+0x710>
9000e598:	e53f      	b.n	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e59a:	2b54      	cmp	r3, #84	; 0x54
9000e59c:	f040 8088 	bne.w	9000e6b0 <EwCreatePathFromSVGString+0x920>
9000e5a0:	a90c      	add	r1, sp, #48	; 0x30
9000e5a2:	a807      	add	r0, sp, #28
9000e5a4:	f7fd f9cc 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e5a8:	2800      	cmp	r0, #0
9000e5aa:	f000 8273 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e5ae:	a90d      	add	r1, sp, #52	; 0x34
9000e5b0:	a807      	add	r0, sp, #28
9000e5b2:	f7fd f9c5 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e5b6:	2800      	cmp	r0, #0
9000e5b8:	f000 826c 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e5bc:	2e74      	cmp	r6, #116	; 0x74
9000e5be:	d10b      	bne.n	9000e5d8 <EwCreatePathFromSVGString+0x848>
9000e5c0:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e5c4:	ee77 7aa8 	vadd.f32	s15, s15, s17
9000e5c8:	edcd 7a0c 	vstr	s15, [sp, #48]	; 0x30
9000e5cc:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
9000e5d0:	ee77 7a88 	vadd.f32	s15, s15, s16
9000e5d4:	edcd 7a0d 	vstr	s15, [sp, #52]	; 0x34
9000e5d8:	f027 0720 	bic.w	r7, r7, #32
9000e5dc:	b2bf      	uxth	r7, r7
9000e5de:	2f51      	cmp	r7, #81	; 0x51
9000e5e0:	d001      	beq.n	9000e5e6 <EwCreatePathFromSVGString+0x856>
9000e5e2:	2f54      	cmp	r7, #84	; 0x54
9000e5e4:	d15f      	bne.n	9000e6a6 <EwCreatePathFromSVGString+0x916>
9000e5e6:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
9000e5ea:	ee77 7ae8 	vsub.f32	s15, s15, s17
9000e5ee:	ee78 7ae7 	vsub.f32	s15, s17, s15
9000e5f2:	edcd 7a0a 	vstr	s15, [sp, #40]	; 0x28
9000e5f6:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9000e5fa:	ee77 7ac8 	vsub.f32	s15, s15, s16
9000e5fe:	ee78 7a67 	vsub.f32	s15, s16, s15
9000e602:	edcd 7a0b 	vstr	s15, [sp, #44]	; 0x2c
9000e606:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e60a:	ee70 8a68 	vsub.f32	s17, s0, s17
9000e60e:	ed9d 0a0b 	vldr	s0, [sp, #44]	; 0x2c
9000e612:	ee30 0a48 	vsub.f32	s0, s0, s16
9000e616:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e61a:	eea8 0aa8 	vfma.f32	s0, s17, s17
9000e61e:	f018 fb95 	bl	90026d4c <EwMathSqrt>
9000e622:	ed9d 7a0a 	vldr	s14, [sp, #40]	; 0x28
9000e626:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
9000e62a:	eeb0 8a40 	vmov.f32	s16, s0
9000e62e:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
9000e632:	ee77 7ac7 	vsub.f32	s15, s15, s14
9000e636:	ed9d 7a0b 	vldr	s14, [sp, #44]	; 0x2c
9000e63a:	ee30 0a47 	vsub.f32	s0, s0, s14
9000e63e:	ee20 0a00 	vmul.f32	s0, s0, s0
9000e642:	eea7 0aa7 	vfma.f32	s0, s15, s15
9000e646:	f018 fb81 	bl	90026d4c <EwMathSqrt>
9000e64a:	ee38 0a00 	vadd.f32	s0, s16, s0
9000e64e:	a908      	add	r1, sp, #32
9000e650:	4620      	mov	r0, r4
9000e652:	ee20 0a09 	vmul.f32	s0, s0, s18
9000e656:	eefd 7ac0 	vcvt.s32.f32	s15, s0
9000e65a:	ee17 2a90 	vmov	r2, s15
9000e65e:	2a07      	cmp	r2, #7
9000e660:	bfd8      	it	le
9000e662:	3202      	addle	r2, #2
9000e664:	3201      	adds	r2, #1
9000e666:	9203      	str	r2, [sp, #12]
9000e668:	f7ff fa58 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e66c:	2800      	cmp	r0, #0
9000e66e:	f000 8227 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e672:	9908      	ldr	r1, [sp, #32]
9000e674:	4620      	mov	r0, r4
9000e676:	9a03      	ldr	r2, [sp, #12]
9000e678:	eddd 1a0d 	vldr	s3, [sp, #52]	; 0x34
9000e67c:	ed9d 1a0c 	vldr	s2, [sp, #48]	; 0x30
9000e680:	eddd 0a0b 	vldr	s1, [sp, #44]	; 0x2c
9000e684:	ed9d 0a0a 	vldr	s0, [sp, #40]	; 0x28
9000e688:	f7fe fd99 	bl	9000d1be <EwAddSubPathBezier2>
9000e68c:	a90c      	add	r1, sp, #48	; 0x30
9000e68e:	a807      	add	r0, sp, #28
9000e690:	eddd 8a0c 	vldr	s17, [sp, #48]	; 0x30
9000e694:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
9000e698:	f7fd f952 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e69c:	2800      	cmp	r0, #0
9000e69e:	f43f acbc 	beq.w	9000e01a <EwCreatePathFromSVGString+0x28a>
9000e6a2:	4637      	mov	r7, r6
9000e6a4:	e783      	b.n	9000e5ae <EwCreatePathFromSVGString+0x81e>
9000e6a6:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
9000e6aa:	ed8d 8a0b 	vstr	s16, [sp, #44]	; 0x2c
9000e6ae:	e7aa      	b.n	9000e606 <EwCreatePathFromSVGString+0x876>
9000e6b0:	2b41      	cmp	r3, #65	; 0x41
9000e6b2:	f040 81b3 	bne.w	9000ea1c <EwCreatePathFromSVGString+0xc8c>
9000e6b6:	a910      	add	r1, sp, #64	; 0x40
9000e6b8:	a807      	add	r0, sp, #28
9000e6ba:	f7fd f941 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e6be:	2800      	cmp	r0, #0
9000e6c0:	f000 81e8 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e6c4:	ed9f aad2 	vldr	s20, [pc, #840]	; 9000ea10 <EwCreatePathFromSVGString+0xc80>
9000e6c8:	a911      	add	r1, sp, #68	; 0x44
9000e6ca:	a807      	add	r0, sp, #28
9000e6cc:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
9000e6d0:	ed8d 8a0b 	vstr	s16, [sp, #44]	; 0x2c
9000e6d4:	f7fd f934 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e6d8:	2800      	cmp	r0, #0
9000e6da:	f000 81db 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e6de:	a909      	add	r1, sp, #36	; 0x24
9000e6e0:	a807      	add	r0, sp, #28
9000e6e2:	f7fd f92d 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e6e6:	2800      	cmp	r0, #0
9000e6e8:	f000 81d4 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e6ec:	a912      	add	r1, sp, #72	; 0x48
9000e6ee:	a807      	add	r0, sp, #28
9000e6f0:	f7fd f90c 	bl	9000b90c <UpdateWatermark2+0xde6>
9000e6f4:	2800      	cmp	r0, #0
9000e6f6:	f000 81cd 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e6fa:	a913      	add	r1, sp, #76	; 0x4c
9000e6fc:	a807      	add	r0, sp, #28
9000e6fe:	f7fd f905 	bl	9000b90c <UpdateWatermark2+0xde6>
9000e702:	2800      	cmp	r0, #0
9000e704:	f000 81c6 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e708:	a90c      	add	r1, sp, #48	; 0x30
9000e70a:	a807      	add	r0, sp, #28
9000e70c:	f7fd f918 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e710:	2800      	cmp	r0, #0
9000e712:	f000 81bf 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e716:	a90d      	add	r1, sp, #52	; 0x34
9000e718:	a807      	add	r0, sp, #28
9000e71a:	f7fd f911 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e71e:	2800      	cmp	r0, #0
9000e720:	f000 81b8 	beq.w	9000ea94 <EwCreatePathFromSVGString+0xd04>
9000e724:	2e61      	cmp	r6, #97	; 0x61
9000e726:	d10b      	bne.n	9000e740 <EwCreatePathFromSVGString+0x9b0>
9000e728:	ed9d 0a0c 	vldr	s0, [sp, #48]	; 0x30
9000e72c:	ee70 8a28 	vadd.f32	s17, s0, s17
9000e730:	ed9d 0a0d 	vldr	s0, [sp, #52]	; 0x34
9000e734:	ee30 8a08 	vadd.f32	s16, s0, s16
9000e738:	edcd 8a0c 	vstr	s17, [sp, #48]	; 0x30
9000e73c:	ed8d 8a0d 	vstr	s16, [sp, #52]	; 0x34
9000e740:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9000e744:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9000e748:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e74c:	f240 81d7 	bls.w	9000eafe <EwCreatePathFromSVGString+0xd6e>
9000e750:	eddd 7a11 	vldr	s15, [sp, #68]	; 0x44
9000e754:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9000e758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e75c:	f240 81cf 	bls.w	9000eafe <EwCreatePathFromSVGString+0xd6e>
9000e760:	ed9d 0a09 	vldr	s0, [sp, #36]	; 0x24
9000e764:	f018 fad8 	bl	90026d18 <EwMathSin>
9000e768:	eef0 ca40 	vmov.f32	s25, s0
9000e76c:	ed9d 0a09 	vldr	s0, [sp, #36]	; 0x24
9000e770:	f018 fada 	bl	90026d28 <EwMathCos>
9000e774:	eddd 6a0d 	vldr	s13, [sp, #52]	; 0x34
9000e778:	ed9d ca0b 	vldr	s24, [sp, #44]	; 0x2c
9000e77c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
9000e780:	ed9d da0c 	vldr	s26, [sp, #48]	; 0x30
9000e784:	eef0 8a40 	vmov.f32	s17, s0
9000e788:	ee7c 7a66 	vsub.f32	s15, s24, s13
9000e78c:	ed9d ba0a 	vldr	s22, [sp, #40]	; 0x28
9000e790:	ee3c ca26 	vadd.f32	s24, s24, s13
9000e794:	ee3b 8a4d 	vsub.f32	s16, s22, s26
9000e798:	ee67 7a87 	vmul.f32	s15, s15, s14
9000e79c:	ee3b ba0d 	vadd.f32	s22, s22, s26
9000e7a0:	ee28 8a07 	vmul.f32	s16, s16, s14
9000e7a4:	ee6c aaa7 	vmul.f32	s21, s25, s15
9000e7a8:	ee2b da07 	vmul.f32	s26, s22, s14
9000e7ac:	ee2c ca07 	vmul.f32	s24, s24, s14
9000e7b0:	ed9d 7a10 	vldr	s14, [sp, #64]	; 0x40
9000e7b4:	eee0 aa08 	vfma.f32	s21, s0, s16
9000e7b8:	ee28 8a6c 	vnmul.f32	s16, s16, s25
9000e7bc:	ee27 7a07 	vmul.f32	s14, s14, s14
9000e7c0:	eea0 8a27 	vfma.f32	s16, s0, s15
9000e7c4:	eddd 7a11 	vldr	s15, [sp, #68]	; 0x44
9000e7c8:	ee6a 6aaa 	vmul.f32	s13, s21, s21
9000e7cc:	ee67 7aa7 	vmul.f32	s15, s15, s15
9000e7d0:	ee86 ba87 	vdiv.f32	s22, s13, s14
9000e7d4:	ee68 6a08 	vmul.f32	s13, s16, s16
9000e7d8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
9000e7dc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000e7e0:	ee3b ba07 	vadd.f32	s22, s22, s14
9000e7e4:	eeb4 bae7 	vcmpe.f32	s22, s15
9000e7e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e7ec:	dd13      	ble.n	9000e816 <EwCreatePathFromSVGString+0xa86>
9000e7ee:	eeb0 0a4b 	vmov.f32	s0, s22
9000e7f2:	f018 faab 	bl	90026d4c <EwMathSqrt>
9000e7f6:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9000e7fa:	ee27 0a80 	vmul.f32	s0, s15, s0
9000e7fe:	ed8d 0a10 	vstr	s0, [sp, #64]	; 0x40
9000e802:	eeb0 0a4b 	vmov.f32	s0, s22
9000e806:	f018 faa1 	bl	90026d4c <EwMathSqrt>
9000e80a:	eddd 7a11 	vldr	s15, [sp, #68]	; 0x44
9000e80e:	ee27 0a80 	vmul.f32	s0, s15, s0
9000e812:	ed8d 0a11 	vstr	s0, [sp, #68]	; 0x44
9000e816:	eddd 7a11 	vldr	s15, [sp, #68]	; 0x44
9000e81a:	eddd ba10 	vldr	s23, [sp, #64]	; 0x40
9000e81e:	ee27 baaa 	vmul.f32	s22, s15, s21
9000e822:	ee2b 7aa7 	vmul.f32	s14, s23, s15
9000e826:	ee6b ba88 	vmul.f32	s23, s23, s16
9000e82a:	ee6b 7a0b 	vmul.f32	s15, s22, s22
9000e82e:	eeeb 7aab 	vfma.f32	s15, s23, s23
9000e832:	eef5 7a40 	vcmp.f32	s15, #0.0
9000e836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e83a:	f000 8160 	beq.w	9000eafe <EwCreatePathFromSVGString+0xd6e>
9000e83e:	eef0 6a67 	vmov.f32	s13, s15
9000e842:	eed7 6a07 	vfnms.f32	s13, s14, s14
9000e846:	ee86 0aa7 	vdiv.f32	s0, s13, s15
9000e84a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9000e84e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e852:	bf48      	it	mi
9000e854:	eeb1 0a40 	vnegmi.f32	s0, s0
9000e858:	f018 fa78 	bl	90026d4c <EwMathSqrt>
9000e85c:	eddd 5a10 	vldr	s11, [sp, #64]	; 0x40
9000e860:	ed9d 6a11 	vldr	s12, [sp, #68]	; 0x44
9000e864:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
9000e868:	429a      	cmp	r2, r3
9000e86a:	bf08      	it	eq
9000e86c:	eeb1 0a40 	vnegeq.f32	s0, s0
9000e870:	ee60 7a4b 	vnmul.f32	s15, s0, s22
9000e874:	ee60 ba2b 	vmul.f32	s23, s0, s23
9000e878:	ee87 7aa5 	vdiv.f32	s14, s15, s11
9000e87c:	eecb 6a86 	vdiv.f32	s13, s23, s12
9000e880:	ee27 ba6c 	vnmul.f32	s22, s14, s25
9000e884:	ee7a 7ae6 	vsub.f32	s15, s21, s13
9000e888:	eea8 baa6 	vfma.f32	s22, s17, s13
9000e88c:	ee68 8a87 	vmul.f32	s17, s17, s14
9000e890:	eeec 8aa6 	vfma.f32	s17, s25, s13
9000e894:	eec7 caa5 	vdiv.f32	s25, s15, s11
9000e898:	ee7a 7aa6 	vadd.f32	s15, s21, s13
9000e89c:	ee3b ba0d 	vadd.f32	s22, s22, s26
9000e8a0:	ee78 8a8c 	vadd.f32	s17, s17, s24
9000e8a4:	eec7 aaa5 	vdiv.f32	s21, s15, s11
9000e8a8:	ee78 7a47 	vsub.f32	s15, s16, s14
9000e8ac:	ee38 8a07 	vadd.f32	s16, s16, s14
9000e8b0:	ee87 da86 	vdiv.f32	s26, s15, s12
9000e8b4:	ee88 ca06 	vdiv.f32	s24, s16, s12
9000e8b8:	ee2d 0a0d 	vmul.f32	s0, s26, s26
9000e8bc:	eeac 0aac 	vfma.f32	s0, s25, s25
9000e8c0:	eeb5 0a40 	vcmp.f32	s0, #0.0
9000e8c4:	eeb0 8a40 	vmov.f32	s16, s0
9000e8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e8cc:	f000 8117 	beq.w	9000eafe <EwCreatePathFromSVGString+0xd6e>
9000e8d0:	f018 fa3c 	bl	90026d4c <EwMathSqrt>
9000e8d4:	ee8c 0a80 	vdiv.f32	s0, s25, s0
9000e8d8:	f018 fa2e 	bl	90026d38 <EwMathArcCos>
9000e8dc:	eeb5 dac0 	vcmpe.f32	s26, #0.0
9000e8e0:	eef0 ba40 	vmov.f32	s23, s0
9000e8e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e8e8:	bf48      	it	mi
9000e8ea:	eef1 ba40 	vnegmi.f32	s23, s0
9000e8ee:	ee2c 0a0c 	vmul.f32	s0, s24, s24
9000e8f2:	eeaa 0aaa 	vfma.f32	s0, s21, s21
9000e8f6:	ee20 0a08 	vmul.f32	s0, s0, s16
9000e8fa:	eeb5 0a40 	vcmp.f32	s0, #0.0
9000e8fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e902:	f000 80fc 	beq.w	9000eafe <EwCreatePathFromSVGString+0xd6e>
9000e906:	eef1 da4c 	vneg.f32	s27, s24
9000e90a:	f018 fa1f 	bl	90026d4c <EwMathSqrt>
9000e90e:	ee2c ca4d 	vnmul.f32	s24, s24, s26
9000e912:	eeaa caec 	vfms.f32	s24, s21, s25
9000e916:	ee8c 0a00 	vdiv.f32	s0, s24, s0
9000e91a:	f018 fa0d 	bl	90026d38 <EwMathArcCos>
9000e91e:	ee6a aa8d 	vmul.f32	s21, s21, s26
9000e922:	eeb0 8a40 	vmov.f32	s16, s0
9000e926:	eeed aaac 	vfma.f32	s21, s27, s25
9000e92a:	eef5 aac0 	vcmpe.f32	s21, #0.0
9000e92e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e932:	d501      	bpl.n	9000e938 <EwCreatePathFromSVGString+0xba8>
9000e934:	eeb1 8a40 	vneg.f32	s16, s0
9000e938:	eeb4 8ae9 	vcmpe.f32	s16, s19
9000e93c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e940:	dc5f      	bgt.n	9000ea02 <EwCreatePathFromSVGString+0xc72>
9000e942:	eeb4 8aca 	vcmpe.f32	s16, s20
9000e946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e94a:	d45d      	bmi.n	9000ea08 <EwCreatePathFromSVGString+0xc78>
9000e94c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9000e94e:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9000e952:	2b00      	cmp	r3, #0
9000e954:	f040 80f2 	bne.w	9000eb3c <EwCreatePathFromSVGString+0xdac>
9000e958:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000e95c:	dd01      	ble.n	9000e962 <EwCreatePathFromSVGString+0xbd2>
9000e95e:	ee38 8a69 	vsub.f32	s16, s16, s19
9000e962:	ed9d 7a11 	vldr	s14, [sp, #68]	; 0x44
9000e966:	a908      	add	r1, sp, #32
9000e968:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
9000e96c:	4620      	mov	r0, r4
9000e96e:	ee77 7a87 	vadd.f32	s15, s15, s14
9000e972:	ed9f 7a28 	vldr	s14, [pc, #160]	; 9000ea14 <EwCreatePathFromSVGString+0xc84>
9000e976:	ee67 7a88 	vmul.f32	s15, s15, s16
9000e97a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000e97e:	ee67 7a89 	vmul.f32	s15, s15, s18
9000e982:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9000e986:	ee17 2a90 	vmov	r2, s15
9000e98a:	2a00      	cmp	r2, #0
9000e98c:	bfb8      	it	lt
9000e98e:	4252      	neglt	r2, r2
9000e990:	2a07      	cmp	r2, #7
9000e992:	bfd8      	it	le
9000e994:	3202      	addle	r2, #2
9000e996:	3201      	adds	r2, #1
9000e998:	9205      	str	r2, [sp, #20]
9000e99a:	f7ff f8bf 	bl	9000db1c <EwGetNoOfFreeSubPathEdges+0x24>
9000e99e:	2800      	cmp	r0, #0
9000e9a0:	f000 808e 	beq.w	9000eac0 <EwCreatePathFromSVGString+0xd30>
9000e9a4:	4620      	mov	r0, r4
9000e9a6:	f7ff f98e 	bl	9000dcc6 <EwPushPathMatrix>
9000e9aa:	eef0 0a68 	vmov.f32	s1, s17
9000e9ae:	4620      	mov	r0, r4
9000e9b0:	eeb0 0a4b 	vmov.f32	s0, s22
9000e9b4:	f7ff f921 	bl	9000dbfa <EwTranslatePathMatrix>
9000e9b8:	ed9d 0a09 	vldr	s0, [sp, #36]	; 0x24
9000e9bc:	f7ff f951 	bl	9000dc62 <EwRotatePathMatrix>
9000e9c0:	eddf 0a15 	vldr	s1, [pc, #84]	; 9000ea18 <EwCreatePathFromSVGString+0xc88>
9000e9c4:	ee7b 2a88 	vadd.f32	s5, s23, s16
9000e9c8:	9908      	ldr	r1, [sp, #32]
9000e9ca:	eeb0 2a6b 	vmov.f32	s4, s23
9000e9ce:	9a05      	ldr	r2, [sp, #20]
9000e9d0:	eeb0 0a60 	vmov.f32	s0, s1
9000e9d4:	eddd 1a11 	vldr	s3, [sp, #68]	; 0x44
9000e9d8:	ed9d 1a10 	vldr	s2, [sp, #64]	; 0x40
9000e9dc:	4620      	mov	r0, r4
9000e9de:	f7fe fd62 	bl	9000d4a6 <EwAddSubPathArc>
9000e9e2:	4620      	mov	r0, r4
9000e9e4:	f7ff f9b0 	bl	9000dd48 <EwPopPathMatrix>
9000e9e8:	a910      	add	r1, sp, #64	; 0x40
9000e9ea:	a807      	add	r0, sp, #28
9000e9ec:	eddd 8a0c 	vldr	s17, [sp, #48]	; 0x30
9000e9f0:	ed9d 8a0d 	vldr	s16, [sp, #52]	; 0x34
9000e9f4:	f7fc ffa4 	bl	9000b940 <UpdateWatermark2+0xe1a>
9000e9f8:	2800      	cmp	r0, #0
9000e9fa:	f47f ae65 	bne.w	9000e6c8 <EwCreatePathFromSVGString+0x938>
9000e9fe:	f7ff bb0c 	b.w	9000e01a <EwCreatePathFromSVGString+0x28a>
9000ea02:	ee38 8a69 	vsub.f32	s16, s16, s19
9000ea06:	e797      	b.n	9000e938 <EwCreatePathFromSVGString+0xba8>
9000ea08:	ee38 8a29 	vadd.f32	s16, s16, s19
9000ea0c:	e799      	b.n	9000e942 <EwCreatePathFromSVGString+0xbb2>
9000ea0e:	bf00      	nop
9000ea10:	c3b40000 	.word	0xc3b40000
9000ea14:	3c0ee7a7 	.word	0x3c0ee7a7
9000ea18:	00000000 	.word	0x00000000
9000ea1c:	2b5a      	cmp	r3, #90	; 0x5a
9000ea1e:	9908      	ldr	r1, [sp, #32]
9000ea20:	d136      	bne.n	9000ea90 <EwCreatePathFromSVGString+0xd00>
9000ea22:	9103      	str	r1, [sp, #12]
9000ea24:	f7fc ff5c 	bl	9000b8e0 <UpdateWatermark2+0xdba>
9000ea28:	9903      	ldr	r1, [sp, #12]
9000ea2a:	9007      	str	r0, [sp, #28]
9000ea2c:	4620      	mov	r0, r4
9000ea2e:	f7fe fed5 	bl	9000d7dc <EwCloseSubPath>
9000ea32:	9908      	ldr	r1, [sp, #32]
9000ea34:	2200      	movs	r2, #0
9000ea36:	4620      	mov	r0, r4
9000ea38:	9103      	str	r1, [sp, #12]
9000ea3a:	f7fe ffe7 	bl	9000da0c <EwGetSubPathNodeX>
9000ea3e:	9903      	ldr	r1, [sp, #12]
9000ea40:	4620      	mov	r0, r4
9000ea42:	eef0 8a40 	vmov.f32	s17, s0
9000ea46:	f7fe fffb 	bl	9000da40 <EwGetSubPathNodeY>
9000ea4a:	eeb0 8a40 	vmov.f32	s16, s0
9000ea4e:	9908      	ldr	r1, [sp, #32]
9000ea50:	4620      	mov	r0, r4
9000ea52:	f7ff f843 	bl	9000dadc <EwGetNoOfSubPathEdges>
9000ea56:	4649      	mov	r1, r9
9000ea58:	4606      	mov	r6, r0
9000ea5a:	4602      	mov	r2, r0
9000ea5c:	4628      	mov	r0, r5
9000ea5e:	f7fe fa8a 	bl	9000cf76 <EwInitSubPath>
9000ea62:	b368      	cbz	r0, 9000eac0 <EwCreatePathFromSVGString+0xd30>
9000ea64:	2300      	movs	r3, #0
9000ea66:	4649      	mov	r1, r9
9000ea68:	4622      	mov	r2, r4
9000ea6a:	4628      	mov	r0, r5
9000ea6c:	9300      	str	r3, [sp, #0]
9000ea6e:	9601      	str	r6, [sp, #4]
9000ea70:	9b08      	ldr	r3, [sp, #32]
9000ea72:	f7fe fe02 	bl	9000d67a <EwAddSubPathCopy>
9000ea76:	9908      	ldr	r1, [sp, #32]
9000ea78:	4620      	mov	r0, r4
9000ea7a:	f7ff f87b 	bl	9000db74 <EwIsSubPathClosed>
9000ea7e:	b118      	cbz	r0, 9000ea88 <EwCreatePathFromSVGString+0xcf8>
9000ea80:	4649      	mov	r1, r9
9000ea82:	4628      	mov	r0, r5
9000ea84:	f7fe feaa 	bl	9000d7dc <EwCloseSubPath>
9000ea88:	f109 0901 	add.w	r9, r9, #1
9000ea8c:	f7ff ba76 	b.w	9000df7c <EwCreatePathFromSVGString+0x1ec>
9000ea90:	9b03      	ldr	r3, [sp, #12]
9000ea92:	9307      	str	r3, [sp, #28]
9000ea94:	9908      	ldr	r1, [sp, #32]
9000ea96:	4620      	mov	r0, r4
9000ea98:	f7ff f820 	bl	9000dadc <EwGetNoOfSubPathEdges>
9000ea9c:	4649      	mov	r1, r9
9000ea9e:	4606      	mov	r6, r0
9000eaa0:	4602      	mov	r2, r0
9000eaa2:	4628      	mov	r0, r5
9000eaa4:	f7fe fa67 	bl	9000cf76 <EwInitSubPath>
9000eaa8:	b140      	cbz	r0, 9000eabc <EwCreatePathFromSVGString+0xd2c>
9000eaaa:	2300      	movs	r3, #0
9000eaac:	4622      	mov	r2, r4
9000eaae:	4649      	mov	r1, r9
9000eab0:	4628      	mov	r0, r5
9000eab2:	9300      	str	r3, [sp, #0]
9000eab4:	9601      	str	r6, [sp, #4]
9000eab6:	9b08      	ldr	r3, [sp, #32]
9000eab8:	f7fe fddf 	bl	9000d67a <EwAddSubPathCopy>
9000eabc:	2302      	movs	r3, #2
9000eabe:	e014      	b.n	9000eaea <EwCreatePathFromSVGString+0xd5a>
9000eac0:	9908      	ldr	r1, [sp, #32]
9000eac2:	4620      	mov	r0, r4
9000eac4:	f7ff f80a 	bl	9000dadc <EwGetNoOfSubPathEdges>
9000eac8:	4649      	mov	r1, r9
9000eaca:	4606      	mov	r6, r0
9000eacc:	4602      	mov	r2, r0
9000eace:	4628      	mov	r0, r5
9000ead0:	f7fe fa51 	bl	9000cf76 <EwInitSubPath>
9000ead4:	b140      	cbz	r0, 9000eae8 <EwCreatePathFromSVGString+0xd58>
9000ead6:	2300      	movs	r3, #0
9000ead8:	4622      	mov	r2, r4
9000eada:	4649      	mov	r1, r9
9000eadc:	4628      	mov	r0, r5
9000eade:	9300      	str	r3, [sp, #0]
9000eae0:	9601      	str	r6, [sp, #4]
9000eae2:	9b08      	ldr	r3, [sp, #32]
9000eae4:	f7fe fdc9 	bl	9000d67a <EwAddSubPathCopy>
9000eae8:	2304      	movs	r3, #4
9000eaea:	9807      	ldr	r0, [sp, #28]
9000eaec:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
9000eaf0:	eba0 0008 	sub.w	r0, r0, r8
9000eaf4:	1040      	asrs	r0, r0, #1
9000eaf6:	f8cb 0008 	str.w	r0, [fp, #8]
9000eafa:	f7ff ba42 	b.w	9000df82 <EwCreatePathFromSVGString+0x1f2>
9000eafe:	9908      	ldr	r1, [sp, #32]
9000eb00:	4620      	mov	r0, r4
9000eb02:	f7fe ffeb 	bl	9000dadc <EwGetNoOfSubPathEdges>
9000eb06:	4649      	mov	r1, r9
9000eb08:	4606      	mov	r6, r0
9000eb0a:	4602      	mov	r2, r0
9000eb0c:	4628      	mov	r0, r5
9000eb0e:	f7fe fa32 	bl	9000cf76 <EwInitSubPath>
9000eb12:	b140      	cbz	r0, 9000eb26 <EwCreatePathFromSVGString+0xd96>
9000eb14:	2300      	movs	r3, #0
9000eb16:	4622      	mov	r2, r4
9000eb18:	4649      	mov	r1, r9
9000eb1a:	4628      	mov	r0, r5
9000eb1c:	9300      	str	r3, [sp, #0]
9000eb1e:	9601      	str	r6, [sp, #4]
9000eb20:	9b08      	ldr	r3, [sp, #32]
9000eb22:	f7fe fdaa 	bl	9000d67a <EwAddSubPathCopy>
9000eb26:	4b09      	ldr	r3, [pc, #36]	; (9000eb4c <EwCreatePathFromSVGString+0xdbc>)
9000eb28:	2203      	movs	r2, #3
9000eb2a:	649a      	str	r2, [r3, #72]	; 0x48
9000eb2c:	9b03      	ldr	r3, [sp, #12]
9000eb2e:	eba3 0008 	sub.w	r0, r3, r8
9000eb32:	4b07      	ldr	r3, [pc, #28]	; (9000eb50 <EwCreatePathFromSVGString+0xdc0>)
9000eb34:	1040      	asrs	r0, r0, #1
9000eb36:	6098      	str	r0, [r3, #8]
9000eb38:	f7ff ba23 	b.w	9000df82 <EwCreatePathFromSVGString+0x1f2>
9000eb3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000eb40:	f57f af0f 	bpl.w	9000e962 <EwCreatePathFromSVGString+0xbd2>
9000eb44:	ee38 8a29 	vadd.f32	s16, s16, s19
9000eb48:	e70b      	b.n	9000e962 <EwCreatePathFromSVGString+0xbd2>
9000eb4a:	bf00      	nop
9000eb4c:	200000c8 	.word	0x200000c8
9000eb50:	20000000 	.word	0x20000000

9000eb54 <EwInitPathMatrix>:
9000eb54:	b140      	cbz	r0, 9000eb68 <EwInitPathMatrix+0x14>
9000eb56:	2300      	movs	r3, #0
9000eb58:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
9000eb5c:	6283      	str	r3, [r0, #40]	; 0x28
9000eb5e:	6242      	str	r2, [r0, #36]	; 0x24
9000eb60:	62c3      	str	r3, [r0, #44]	; 0x2c
9000eb62:	6303      	str	r3, [r0, #48]	; 0x30
9000eb64:	6342      	str	r2, [r0, #52]	; 0x34
9000eb66:	6383      	str	r3, [r0, #56]	; 0x38
9000eb68:	4770      	bx	lr

9000eb6a <EwFillPath>:
9000eb6a:	b082      	sub	sp, #8
9000eb6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eb70:	ed2d 8b02 	vpush	{d8}
9000eb74:	b095      	sub	sp, #84	; 0x54
9000eb76:	460d      	mov	r5, r1
9000eb78:	4611      	mov	r1, r2
9000eb7a:	4616      	mov	r6, r2
9000eb7c:	9321      	str	r3, [sp, #132]	; 0x84
9000eb7e:	4681      	mov	r9, r0
9000eb80:	f89d 30c0 	ldrb.w	r3, [sp, #192]	; 0xc0
9000eb84:	46a8      	mov	r8, r5
9000eb86:	f89d 70a4 	ldrb.w	r7, [sp, #164]	; 0xa4
9000eb8a:	930e      	str	r3, [sp, #56]	; 0x38
9000eb8c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9000eb90:	9312      	str	r3, [sp, #72]	; 0x48
9000eb92:	f89d 30c8 	ldrb.w	r3, [sp, #200]	; 0xc8
9000eb96:	9313      	str	r3, [sp, #76]	; 0x4c
9000eb98:	9b25      	ldr	r3, [sp, #148]	; 0x94
9000eb9a:	9308      	str	r3, [sp, #32]
9000eb9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9000eb9e:	9306      	str	r3, [sp, #24]
9000eba0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9000eba2:	9309      	str	r3, [sp, #36]	; 0x24
9000eba4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9000eba6:	9307      	str	r3, [sp, #28]
9000eba8:	f7fc ffa0 	bl	9000baec <UpdateWatermark1+0x6c>
9000ebac:	f89d 30b3 	ldrb.w	r3, [sp, #179]	; 0xb3
9000ebb0:	4604      	mov	r4, r0
9000ebb2:	f89d 20b2 	ldrb.w	r2, [sp, #178]	; 0xb2
9000ebb6:	f89d 10b1 	ldrb.w	r1, [sp, #177]	; 0xb1
9000ebba:	f89d 00b0 	ldrb.w	r0, [sp, #176]	; 0xb0
9000ebbe:	f7f6 f898 	bl	90004cf2 <EwPackColor>
9000ebc2:	f89d 30b7 	ldrb.w	r3, [sp, #183]	; 0xb7
9000ebc6:	f89d 20b6 	ldrb.w	r2, [sp, #182]	; 0xb6
9000ebca:	4683      	mov	fp, r0
9000ebcc:	f89d 10b5 	ldrb.w	r1, [sp, #181]	; 0xb5
9000ebd0:	f89d 00b4 	ldrb.w	r0, [sp, #180]	; 0xb4
9000ebd4:	f7f6 f88d 	bl	90004cf2 <EwPackColor>
9000ebd8:	f89d 30bf 	ldrb.w	r3, [sp, #191]	; 0xbf
9000ebdc:	f89d 20be 	ldrb.w	r2, [sp, #190]	; 0xbe
9000ebe0:	f89d 10bd 	ldrb.w	r1, [sp, #189]	; 0xbd
9000ebe4:	9005      	str	r0, [sp, #20]
9000ebe6:	f89d 00bc 	ldrb.w	r0, [sp, #188]	; 0xbc
9000ebea:	f7f6 f882 	bl	90004cf2 <EwPackColor>
9000ebee:	f89d 30bb 	ldrb.w	r3, [sp, #187]	; 0xbb
9000ebf2:	9002      	str	r0, [sp, #8]
9000ebf4:	f89d 20ba 	ldrb.w	r2, [sp, #186]	; 0xba
9000ebf8:	f89d 10b9 	ldrb.w	r1, [sp, #185]	; 0xb9
9000ebfc:	f89d 00b8 	ldrb.w	r0, [sp, #184]	; 0xb8
9000ec00:	f7f6 f877 	bl	90004cf2 <EwPackColor>
9000ec04:	9003      	str	r0, [sp, #12]
9000ec06:	b1d5      	cbz	r5, 9000ec3e <EwFillPath+0xd4>
9000ec08:	f858 3b40 	ldr.w	r3, [r8], #64
9000ec0c:	9304      	str	r3, [sp, #16]
9000ec0e:	2f00      	cmp	r7, #0
9000ec10:	bf14      	ite	ne
9000ec12:	f04f 33ff 	movne.w	r3, #4294967295
9000ec16:	2301      	moveq	r3, #1
9000ec18:	9311      	str	r3, [sp, #68]	; 0x44
9000ec1a:	b12c      	cbz	r4, 9000ec28 <EwFillPath+0xbe>
9000ec1c:	6822      	ldr	r2, [r4, #0]
9000ec1e:	8c13      	ldrh	r3, [r2, #32]
9000ec20:	3301      	adds	r3, #1
9000ec22:	b29b      	uxth	r3, r3
9000ec24:	2b01      	cmp	r3, #1
9000ec26:	d90c      	bls.n	9000ec42 <EwFillPath+0xd8>
9000ec28:	4632      	mov	r2, r6
9000ec2a:	4649      	mov	r1, r9
9000ec2c:	209d      	movs	r0, #157	; 0x9d
9000ec2e:	b015      	add	sp, #84	; 0x54
9000ec30:	ecbd 8b02 	vpop	{d8}
9000ec34:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ec38:	b002      	add	sp, #8
9000ec3a:	f00e bc1f 	b.w	9001d47c <EwErrorPD>
9000ec3e:	9504      	str	r5, [sp, #16]
9000ec40:	e7e5      	b.n	9000ec0e <EwFillPath+0xa4>
9000ec42:	6993      	ldr	r3, [r2, #24]
9000ec44:	b90b      	cbnz	r3, 9000ec4a <EwFillPath+0xe0>
9000ec46:	69d3      	ldr	r3, [r2, #28]
9000ec48:	b123      	cbz	r3, 9000ec54 <EwFillPath+0xea>
9000ec4a:	4632      	mov	r2, r6
9000ec4c:	4649      	mov	r1, r9
9000ec4e:	f44f 70ab 	mov.w	r0, #342	; 0x156
9000ec52:	e7ec      	b.n	9000ec2e <EwFillPath+0xc4>
9000ec54:	2d00      	cmp	r5, #0
9000ec56:	f000 8143 	beq.w	9000eee0 <EwFillPath+0x376>
9000ec5a:	4628      	mov	r0, r5
9000ec5c:	e9dd 6a2a 	ldrd	r6, sl, [sp, #168]	; 0xa8
9000ec60:	f7fc fce5 	bl	9000b62e <UpdateWatermark2+0xb08>
9000ec64:	68eb      	ldr	r3, [r5, #12]
9000ec66:	2b00      	cmp	r3, #0
9000ec68:	f000 813a 	beq.w	9000eee0 <EwFillPath+0x376>
9000ec6c:	6a2b      	ldr	r3, [r5, #32]
9000ec6e:	69aa      	ldr	r2, [r5, #24]
9000ec70:	2f00      	cmp	r7, #0
9000ec72:	d163      	bne.n	9000ed3c <EwFillPath+0x1d2>
9000ec74:	9906      	ldr	r1, [sp, #24]
9000ec76:	eb01 070a 	add.w	r7, r1, sl
9000ec7a:	443a      	add	r2, r7
9000ec7c:	443b      	add	r3, r7
9000ec7e:	1e51      	subs	r1, r2, #1
9000ec80:	9a08      	ldr	r2, [sp, #32]
9000ec82:	3301      	adds	r3, #1
9000ec84:	eb06 0a02 	add.w	sl, r6, r2
9000ec88:	696a      	ldr	r2, [r5, #20]
9000ec8a:	9e08      	ldr	r6, [sp, #32]
9000ec8c:	4452      	add	r2, sl
9000ec8e:	1e50      	subs	r0, r2, #1
9000ec90:	9a21      	ldr	r2, [sp, #132]	; 0x84
9000ec92:	42b2      	cmp	r2, r6
9000ec94:	bfb8      	it	lt
9000ec96:	4632      	movlt	r2, r6
9000ec98:	9e09      	ldr	r6, [sp, #36]	; 0x24
9000ec9a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9000ec9e:	4290      	cmp	r0, r2
9000eca0:	bfb8      	it	lt
9000eca2:	4610      	movlt	r0, r2
9000eca4:	69ea      	ldr	r2, [r5, #28]
9000eca6:	900d      	str	r0, [sp, #52]	; 0x34
9000eca8:	4452      	add	r2, sl
9000ecaa:	9823      	ldr	r0, [sp, #140]	; 0x8c
9000ecac:	3201      	adds	r2, #1
9000ecae:	42b0      	cmp	r0, r6
9000ecb0:	bfa8      	it	ge
9000ecb2:	4630      	movge	r0, r6
9000ecb4:	4282      	cmp	r2, r0
9000ecb6:	bfa8      	it	ge
9000ecb8:	4602      	movge	r2, r0
9000ecba:	f8d9 0004 	ldr.w	r0, [r9, #4]
9000ecbe:	4282      	cmp	r2, r0
9000ecc0:	bfa8      	it	ge
9000ecc2:	4602      	movge	r2, r0
9000ecc4:	980d      	ldr	r0, [sp, #52]	; 0x34
9000ecc6:	4282      	cmp	r2, r0
9000ecc8:	920a      	str	r2, [sp, #40]	; 0x28
9000ecca:	f340 8109 	ble.w	9000eee0 <EwFillPath+0x376>
9000ecce:	9a22      	ldr	r2, [sp, #136]	; 0x88
9000ecd0:	9806      	ldr	r0, [sp, #24]
9000ecd2:	4282      	cmp	r2, r0
9000ecd4:	bfb8      	it	lt
9000ecd6:	4602      	movlt	r2, r0
9000ecd8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9000ecdc:	428a      	cmp	r2, r1
9000ecde:	bfb8      	it	lt
9000ece0:	460a      	movlt	r2, r1
9000ece2:	9907      	ldr	r1, [sp, #28]
9000ece4:	920c      	str	r2, [sp, #48]	; 0x30
9000ece6:	9a24      	ldr	r2, [sp, #144]	; 0x90
9000ece8:	428a      	cmp	r2, r1
9000ecea:	bfa8      	it	ge
9000ecec:	460a      	movge	r2, r1
9000ecee:	f8d9 1008 	ldr.w	r1, [r9, #8]
9000ecf2:	428a      	cmp	r2, r1
9000ecf4:	bfa8      	it	ge
9000ecf6:	460a      	movge	r2, r1
9000ecf8:	429a      	cmp	r2, r3
9000ecfa:	bfa8      	it	ge
9000ecfc:	461a      	movge	r2, r3
9000ecfe:	4613      	mov	r3, r2
9000ed00:	920b      	str	r2, [sp, #44]	; 0x2c
9000ed02:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000ed04:	4293      	cmp	r3, r2
9000ed06:	f340 80eb 	ble.w	9000eee0 <EwFillPath+0x376>
9000ed0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000ed0c:	b14b      	cbz	r3, 9000ed22 <EwFillPath+0x1b8>
9000ed0e:	9b05      	ldr	r3, [sp, #20]
9000ed10:	9a02      	ldr	r2, [sp, #8]
9000ed12:	ea4b 0303 	orr.w	r3, fp, r3
9000ed16:	4313      	orrs	r3, r2
9000ed18:	9a03      	ldr	r2, [sp, #12]
9000ed1a:	4313      	orrs	r3, r2
9000ed1c:	0e1b      	lsrs	r3, r3, #24
9000ed1e:	f000 80df 	beq.w	9000eee0 <EwFillPath+0x376>
9000ed22:	6863      	ldr	r3, [r4, #4]
9000ed24:	6820      	ldr	r0, [r4, #0]
9000ed26:	930f      	str	r3, [sp, #60]	; 0x3c
9000ed28:	68a3      	ldr	r3, [r4, #8]
9000ed2a:	9310      	str	r3, [sp, #64]	; 0x40
9000ed2c:	f008 fdb8 	bl	900178a0 <EwInitIssue>
9000ed30:	4606      	mov	r6, r0
9000ed32:	b950      	cbnz	r0, 9000ed4a <EwFillPath+0x1e0>
9000ed34:	2200      	movs	r2, #0
9000ed36:	4649      	mov	r1, r9
9000ed38:	207d      	movs	r0, #125	; 0x7d
9000ed3a:	e778      	b.n	9000ec2e <EwFillPath+0xc4>
9000ed3c:	9907      	ldr	r1, [sp, #28]
9000ed3e:	eb01 070a 	add.w	r7, r1, sl
9000ed42:	1afb      	subs	r3, r7, r3
9000ed44:	1e59      	subs	r1, r3, #1
9000ed46:	1abb      	subs	r3, r7, r2
9000ed48:	e79a      	b.n	9000ec80 <EwFillPath+0x116>
9000ed4a:	68a9      	ldr	r1, [r5, #8]
9000ed4c:	686b      	ldr	r3, [r5, #4]
9000ed4e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9000ed52:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ed56:	4419      	add	r1, r3
9000ed58:	68eb      	ldr	r3, [r5, #12]
9000ed5a:	eb01 0143 	add.w	r1, r1, r3, lsl #1
9000ed5e:	3108      	adds	r1, #8
9000ed60:	0089      	lsls	r1, r1, #2
9000ed62:	f008 fe3e 	bl	900179e2 <EwAllocTaskData>
9000ed66:	4601      	mov	r1, r0
9000ed68:	2800      	cmp	r0, #0
9000ed6a:	d175      	bne.n	9000ee58 <EwFillPath+0x2ee>
9000ed6c:	6820      	ldr	r0, [r4, #0]
9000ed6e:	f008 fea7 	bl	90017ac0 <EwDoneIssue>
9000ed72:	6820      	ldr	r0, [r4, #0]
9000ed74:	f008 fe58 	bl	90017a28 <EwFlushTasks>
9000ed78:	6820      	ldr	r0, [r4, #0]
9000ed7a:	f008 fd91 	bl	900178a0 <EwInitIssue>
9000ed7e:	4606      	mov	r6, r0
9000ed80:	2800      	cmp	r0, #0
9000ed82:	d0d7      	beq.n	9000ed34 <EwFillPath+0x1ca>
9000ed84:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000ed86:	2120      	movs	r1, #32
9000ed88:	4630      	mov	r0, r6
9000ed8a:	4453      	add	r3, sl
9000ed8c:	ea4f 1a03 	mov.w	sl, r3, lsl #4
9000ed90:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000ed92:	443b      	add	r3, r7
9000ed94:	011b      	lsls	r3, r3, #4
9000ed96:	ee08 3a10 	vmov	s16, r3
9000ed9a:	f008 fe22 	bl	900179e2 <EwAllocTaskData>
9000ed9e:	9b08      	ldr	r3, [sp, #32]
9000eda0:	4605      	mov	r5, r0
9000eda2:	4601      	mov	r1, r0
9000eda4:	88a0      	ldrh	r0, [r4, #4]
9000eda6:	8922      	ldrh	r2, [r4, #8]
9000eda8:	4403      	add	r3, r0
9000edaa:	f821 3b1c 	strh.w	r3, [r1], #28
9000edae:	9b06      	ldr	r3, [sp, #24]
9000edb0:	f8c5 b00c 	str.w	fp, [r5, #12]
9000edb4:	4413      	add	r3, r2
9000edb6:	806b      	strh	r3, [r5, #2]
9000edb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000edba:	4418      	add	r0, r3
9000edbc:	9b07      	ldr	r3, [sp, #28]
9000edbe:	441a      	add	r2, r3
9000edc0:	9b05      	ldr	r3, [sp, #20]
9000edc2:	80a8      	strh	r0, [r5, #4]
9000edc4:	612b      	str	r3, [r5, #16]
9000edc6:	9b03      	ldr	r3, [sp, #12]
9000edc8:	80ea      	strh	r2, [r5, #6]
9000edca:	616b      	str	r3, [r5, #20]
9000edcc:	9b02      	ldr	r3, [sp, #8]
9000edce:	61ab      	str	r3, [r5, #24]
9000edd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9000edd2:	812b      	strh	r3, [r5, #8]
9000edd4:	2300      	movs	r3, #0
9000edd6:	816b      	strh	r3, [r5, #10]
9000edd8:	9b04      	ldr	r3, [sp, #16]
9000edda:	2b00      	cmp	r3, #0
9000eddc:	dc40      	bgt.n	9000ee60 <EwFillPath+0x2f6>
9000edde:	2700      	movs	r7, #0
9000ede0:	4630      	mov	r0, r6
9000ede2:	f841 7b04 	str.w	r7, [r1], #4
9000ede6:	f008 fe16 	bl	90017a16 <EwFreeTaskData>
9000edea:	4639      	mov	r1, r7
9000edec:	4630      	mov	r0, r6
9000edee:	f008 fdbf 	bl	90017970 <EwAllocTask>
9000edf2:	2309      	movs	r3, #9
9000edf4:	88a2      	ldrh	r2, [r4, #4]
9000edf6:	8083      	strh	r3, [r0, #4]
9000edf8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000edfa:	990c      	ldr	r1, [sp, #48]	; 0x30
9000edfc:	4413      	add	r3, r2
9000edfe:	6105      	str	r5, [r0, #16]
9000ee00:	8103      	strh	r3, [r0, #8]
9000ee02:	8923      	ldrh	r3, [r4, #8]
9000ee04:	4419      	add	r1, r3
9000ee06:	8141      	strh	r1, [r0, #10]
9000ee08:	990a      	ldr	r1, [sp, #40]	; 0x28
9000ee0a:	440a      	add	r2, r1
9000ee0c:	8182      	strh	r2, [r0, #12]
9000ee0e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000ee10:	4413      	add	r3, r2
9000ee12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9000ee14:	81c3      	strh	r3, [r0, #14]
9000ee16:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000ee18:	42bb      	cmp	r3, r7
9000ee1a:	bf14      	ite	ne
9000ee1c:	2308      	movne	r3, #8
9000ee1e:	463b      	moveq	r3, r7
9000ee20:	42ba      	cmp	r2, r7
9000ee22:	bf18      	it	ne
9000ee24:	f043 0301 	orrne.w	r3, r3, #1
9000ee28:	9a05      	ldr	r2, [sp, #20]
9000ee2a:	4593      	cmp	fp, r2
9000ee2c:	9a02      	ldr	r2, [sp, #8]
9000ee2e:	d049      	beq.n	9000eec4 <EwFillPath+0x35a>
9000ee30:	9903      	ldr	r1, [sp, #12]
9000ee32:	428a      	cmp	r2, r1
9000ee34:	d04b      	beq.n	9000eece <EwFillPath+0x364>
9000ee36:	4593      	cmp	fp, r2
9000ee38:	d149      	bne.n	9000eece <EwFillPath+0x364>
9000ee3a:	9a05      	ldr	r2, [sp, #20]
9000ee3c:	428a      	cmp	r2, r1
9000ee3e:	d146      	bne.n	9000eece <EwFillPath+0x364>
9000ee40:	f043 0306 	orr.w	r3, r3, #6
9000ee44:	80c3      	strh	r3, [r0, #6]
9000ee46:	6820      	ldr	r0, [r4, #0]
9000ee48:	b015      	add	sp, #84	; 0x54
9000ee4a:	ecbd 8b02 	vpop	{d8}
9000ee4e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ee52:	b002      	add	sp, #8
9000ee54:	f008 be34 	b.w	90017ac0 <EwDoneIssue>
9000ee58:	4630      	mov	r0, r6
9000ee5a:	f008 fddc 	bl	90017a16 <EwFreeTaskData>
9000ee5e:	e791      	b.n	9000ed84 <EwFillPath+0x21a>
9000ee60:	f8d8 3000 	ldr.w	r3, [r8]
9000ee64:	b313      	cbz	r3, 9000eeac <EwFillPath+0x342>
9000ee66:	4630      	mov	r0, r6
9000ee68:	f008 fdd5 	bl	90017a16 <EwFreeTaskData>
9000ee6c:	f8d8 3000 	ldr.w	r3, [r8]
9000ee70:	4630      	mov	r0, r6
9000ee72:	6859      	ldr	r1, [r3, #4]
9000ee74:	3103      	adds	r1, #3
9000ee76:	004f      	lsls	r7, r1, #1
9000ee78:	00c9      	lsls	r1, r1, #3
9000ee7a:	f008 fdb2 	bl	900179e2 <EwAllocTaskData>
9000ee7e:	4601      	mov	r1, r0
9000ee80:	b950      	cbnz	r0, 9000ee98 <EwFillPath+0x32e>
9000ee82:	4629      	mov	r1, r5
9000ee84:	4630      	mov	r0, r6
9000ee86:	f008 fdc6 	bl	90017a16 <EwFreeTaskData>
9000ee8a:	6820      	ldr	r0, [r4, #0]
9000ee8c:	f008 fe18 	bl	90017ac0 <EwDoneIssue>
9000ee90:	463a      	mov	r2, r7
9000ee92:	4649      	mov	r1, r9
9000ee94:	20bb      	movs	r0, #187	; 0xbb
9000ee96:	e6ca      	b.n	9000ec2e <EwFillPath+0xc4>
9000ee98:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000ee9a:	4652      	mov	r2, sl
9000ee9c:	9300      	str	r3, [sp, #0]
9000ee9e:	ee18 3a10 	vmov	r3, s16
9000eea2:	f8d8 0000 	ldr.w	r0, [r8]
9000eea6:	f7fb fddc 	bl	9000aa62 <EwScreenWarpRGB565RowFilterSolidBlend+0xb2>
9000eeaa:	4601      	mov	r1, r0
9000eeac:	9b04      	ldr	r3, [sp, #16]
9000eeae:	f108 0804 	add.w	r8, r8, #4
9000eeb2:	3b01      	subs	r3, #1
9000eeb4:	9304      	str	r3, [sp, #16]
9000eeb6:	e78f      	b.n	9000edd8 <EwFillPath+0x26e>
9000eeb8:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
9000eebc:	e7be      	b.n	9000ee3c <EwFillPath+0x2d2>
9000eebe:	f043 0302 	orr.w	r3, r3, #2
9000eec2:	e7bf      	b.n	9000ee44 <EwFillPath+0x2da>
9000eec4:	4593      	cmp	fp, r2
9000eec6:	d105      	bne.n	9000eed4 <EwFillPath+0x36a>
9000eec8:	9a03      	ldr	r2, [sp, #12]
9000eeca:	4593      	cmp	fp, r2
9000eecc:	d0f7      	beq.n	9000eebe <EwFillPath+0x354>
9000eece:	f043 0304 	orr.w	r3, r3, #4
9000eed2:	e7b7      	b.n	9000ee44 <EwFillPath+0x2da>
9000eed4:	9a03      	ldr	r2, [sp, #12]
9000eed6:	4593      	cmp	fp, r2
9000eed8:	d1ee      	bne.n	9000eeb8 <EwFillPath+0x34e>
9000eeda:	9a02      	ldr	r2, [sp, #8]
9000eedc:	455a      	cmp	r2, fp
9000eede:	e7f5      	b.n	9000eecc <EwFillPath+0x362>
9000eee0:	b015      	add	sp, #84	; 0x54
9000eee2:	ecbd 8b02 	vpop	{d8}
9000eee6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eeea:	b002      	add	sp, #8
9000eeec:	4770      	bx	lr

9000eeee <EwStrokePath>:
9000eeee:	b082      	sub	sp, #8
9000eef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000eef4:	ed2d 8b04 	vpush	{d8-d9}
9000eef8:	b09f      	sub	sp, #124	; 0x7c
9000eefa:	4688      	mov	r8, r1
9000eefc:	4611      	mov	r1, r2
9000eefe:	eeb0 8a40 	vmov.f32	s16, s0
9000ef02:	932d      	str	r3, [sp, #180]	; 0xb4
9000ef04:	eeb0 9a60 	vmov.f32	s18, s1
9000ef08:	f89d 30f4 	ldrb.w	r3, [sp, #244]	; 0xf4
9000ef0c:	4615      	mov	r5, r2
9000ef0e:	4607      	mov	r7, r0
9000ef10:	f89d 60d4 	ldrb.w	r6, [sp, #212]	; 0xd4
9000ef14:	9319      	str	r3, [sp, #100]	; 0x64
9000ef16:	f89d 30f8 	ldrb.w	r3, [sp, #248]	; 0xf8
9000ef1a:	f8dd 90e0 	ldr.w	r9, [sp, #224]	; 0xe0
9000ef1e:	931d      	str	r3, [sp, #116]	; 0x74
9000ef20:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9000ef22:	9310      	str	r3, [sp, #64]	; 0x40
9000ef24:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9000ef26:	9311      	str	r3, [sp, #68]	; 0x44
9000ef28:	9b33      	ldr	r3, [sp, #204]	; 0xcc
9000ef2a:	9315      	str	r3, [sp, #84]	; 0x54
9000ef2c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9000ef2e:	9312      	str	r3, [sp, #72]	; 0x48
9000ef30:	f7fc fddc 	bl	9000baec <UpdateWatermark1+0x6c>
9000ef34:	f89d 30e7 	ldrb.w	r3, [sp, #231]	; 0xe7
9000ef38:	4604      	mov	r4, r0
9000ef3a:	f89d 20e6 	ldrb.w	r2, [sp, #230]	; 0xe6
9000ef3e:	f89d 10e5 	ldrb.w	r1, [sp, #229]	; 0xe5
9000ef42:	f89d 00e4 	ldrb.w	r0, [sp, #228]	; 0xe4
9000ef46:	f7f5 fed4 	bl	90004cf2 <EwPackColor>
9000ef4a:	f89d 30eb 	ldrb.w	r3, [sp, #235]	; 0xeb
9000ef4e:	f89d 20ea 	ldrb.w	r2, [sp, #234]	; 0xea
9000ef52:	f89d 10e9 	ldrb.w	r1, [sp, #233]	; 0xe9
9000ef56:	9008      	str	r0, [sp, #32]
9000ef58:	f89d 00e8 	ldrb.w	r0, [sp, #232]	; 0xe8
9000ef5c:	f7f5 fec9 	bl	90004cf2 <EwPackColor>
9000ef60:	f89d 30f3 	ldrb.w	r3, [sp, #243]	; 0xf3
9000ef64:	f89d 20f2 	ldrb.w	r2, [sp, #242]	; 0xf2
9000ef68:	f89d 10f1 	ldrb.w	r1, [sp, #241]	; 0xf1
9000ef6c:	900d      	str	r0, [sp, #52]	; 0x34
9000ef6e:	f89d 00f0 	ldrb.w	r0, [sp, #240]	; 0xf0
9000ef72:	f7f5 febe 	bl	90004cf2 <EwPackColor>
9000ef76:	f89d 30ef 	ldrb.w	r3, [sp, #239]	; 0xef
9000ef7a:	9009      	str	r0, [sp, #36]	; 0x24
9000ef7c:	f89d 20ee 	ldrb.w	r2, [sp, #238]	; 0xee
9000ef80:	f89d 10ed 	ldrb.w	r1, [sp, #237]	; 0xed
9000ef84:	f89d 00ec 	ldrb.w	r0, [sp, #236]	; 0xec
9000ef88:	f7f5 feb3 	bl	90004cf2 <EwPackColor>
9000ef8c:	900a      	str	r0, [sp, #40]	; 0x28
9000ef8e:	f1b8 0f00 	cmp.w	r8, #0
9000ef92:	d049      	beq.n	9000f028 <EwStrokePath+0x13a>
9000ef94:	4642      	mov	r2, r8
9000ef96:	f852 3b40 	ldr.w	r3, [r2], #64
9000ef9a:	930c      	str	r3, [sp, #48]	; 0x30
9000ef9c:	9218      	str	r2, [sp, #96]	; 0x60
9000ef9e:	f409 437f 	and.w	r3, r9, #65280	; 0xff00
9000efa2:	2e00      	cmp	r6, #0
9000efa4:	fa5f fb89 	uxtb.w	fp, r9
9000efa8:	f409 097f 	and.w	r9, r9, #16711680	; 0xff0000
9000efac:	9307      	str	r3, [sp, #28]
9000efae:	bf14      	ite	ne
9000efb0:	f04f 33ff 	movne.w	r3, #4294967295
9000efb4:	2301      	moveq	r3, #1
9000efb6:	f1bb 0f03 	cmp.w	fp, #3
9000efba:	931c      	str	r3, [sp, #112]	; 0x70
9000efbc:	d108      	bne.n	9000efd0 <EwStrokePath+0xe2>
9000efbe:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
9000efc2:	eeb4 8a67 	vcmp.f32	s16, s15
9000efc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000efca:	bf48      	it	mi
9000efcc:	f04f 0b02 	movmi.w	fp, #2
9000efd0:	9b07      	ldr	r3, [sp, #28]
9000efd2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9000efd6:	d109      	bne.n	9000efec <EwStrokePath+0xfe>
9000efd8:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
9000efdc:	eeb4 8a67 	vcmp.f32	s16, s15
9000efe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000efe4:	bf48      	it	mi
9000efe6:	f44f 7300 	movmi.w	r3, #512	; 0x200
9000efea:	9307      	str	r3, [sp, #28]
9000efec:	f5b9 3f00 	cmp.w	r9, #131072	; 0x20000
9000eff0:	d108      	bne.n	9000f004 <EwStrokePath+0x116>
9000eff2:	eef0 7a08 	vmov.f32	s15, #8	; 0x40400000  3.0
9000eff6:	eeb4 8a67 	vcmp.f32	s16, s15
9000effa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000effe:	bf48      	it	mi
9000f000:	f04f 0900 	movmi.w	r9, #0
9000f004:	b12c      	cbz	r4, 9000f012 <EwStrokePath+0x124>
9000f006:	6822      	ldr	r2, [r4, #0]
9000f008:	8c13      	ldrh	r3, [r2, #32]
9000f00a:	3301      	adds	r3, #1
9000f00c:	b29b      	uxth	r3, r3
9000f00e:	2b01      	cmp	r3, #1
9000f010:	d90f      	bls.n	9000f032 <EwStrokePath+0x144>
9000f012:	462a      	mov	r2, r5
9000f014:	4639      	mov	r1, r7
9000f016:	209e      	movs	r0, #158	; 0x9e
9000f018:	b01f      	add	sp, #124	; 0x7c
9000f01a:	ecbd 8b04 	vpop	{d8-d9}
9000f01e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f022:	b002      	add	sp, #8
9000f024:	f00e ba2a 	b.w	9001d47c <EwErrorPD>
9000f028:	f8cd 8060 	str.w	r8, [sp, #96]	; 0x60
9000f02c:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
9000f030:	e7b5      	b.n	9000ef9e <EwStrokePath+0xb0>
9000f032:	6993      	ldr	r3, [r2, #24]
9000f034:	b90b      	cbnz	r3, 9000f03a <EwStrokePath+0x14c>
9000f036:	69d3      	ldr	r3, [r2, #28]
9000f038:	b123      	cbz	r3, 9000f044 <EwStrokePath+0x156>
9000f03a:	462a      	mov	r2, r5
9000f03c:	4639      	mov	r1, r7
9000f03e:	f240 1057 	movw	r0, #343	; 0x157
9000f042:	e7e9      	b.n	9000f018 <EwStrokePath+0x12a>
9000f044:	f1b8 0f00 	cmp.w	r8, #0
9000f048:	f000 8231 	beq.w	9000f4ae <EwStrokePath+0x5c0>
9000f04c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9000f050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f054:	f240 822b 	bls.w	9000f4ae <EwStrokePath+0x5c0>
9000f058:	4640      	mov	r0, r8
9000f05a:	e9dd 5a36 	ldrd	r5, sl, [sp, #216]	; 0xd8
9000f05e:	f7fc fae6 	bl	9000b62e <UpdateWatermark2+0xb08>
9000f062:	f8d8 300c 	ldr.w	r3, [r8, #12]
9000f066:	2b00      	cmp	r3, #0
9000f068:	f000 8221 	beq.w	9000f4ae <EwStrokePath+0x5c0>
9000f06c:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
9000f070:	f5b9 3f80 	cmp.w	r9, #65536	; 0x10000
9000f074:	ee68 8a00 	vmul.f32	s17, s16, s0
9000f078:	f040 80ab 	bne.w	9000f1d2 <EwStrokePath+0x2e4>
9000f07c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000f080:	eeb4 9ae7 	vcmpe.f32	s18, s15
9000f084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f088:	dd04      	ble.n	9000f094 <EwStrokePath+0x1a6>
9000f08a:	ee68 7a89 	vmul.f32	s15, s17, s18
9000f08e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9000f092:	e001      	b.n	9000f098 <EwStrokePath+0x1aa>
9000f094:	eefd 7ae8 	vcvt.s32.f32	s15, s17
9000f098:	ee17 3a90 	vmov	r3, s15
9000f09c:	f8d8 1020 	ldr.w	r1, [r8, #32]
9000f0a0:	f8d8 2018 	ldr.w	r2, [r8, #24]
9000f0a4:	2e00      	cmp	r6, #0
9000f0a6:	f040 80a3 	bne.w	9000f1f0 <EwStrokePath+0x302>
9000f0aa:	9811      	ldr	r0, [sp, #68]	; 0x44
9000f0ac:	eb0a 0600 	add.w	r6, sl, r0
9000f0b0:	eb06 0c02 	add.w	ip, r6, r2
9000f0b4:	1872      	adds	r2, r6, r1
9000f0b6:	ebac 0c03 	sub.w	ip, ip, r3
9000f0ba:	f10c 3cff 	add.w	ip, ip, #4294967295
9000f0be:	9910      	ldr	r1, [sp, #64]	; 0x40
9000f0c0:	441a      	add	r2, r3
9000f0c2:	982d      	ldr	r0, [sp, #180]	; 0xb4
9000f0c4:	eb05 0a01 	add.w	sl, r5, r1
9000f0c8:	9d10      	ldr	r5, [sp, #64]	; 0x40
9000f0ca:	f8d8 1014 	ldr.w	r1, [r8, #20]
9000f0ce:	3201      	adds	r2, #1
9000f0d0:	42a8      	cmp	r0, r5
9000f0d2:	4451      	add	r1, sl
9000f0d4:	bfb8      	it	lt
9000f0d6:	4628      	movlt	r0, r5
9000f0d8:	1ac9      	subs	r1, r1, r3
9000f0da:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
9000f0de:	3902      	subs	r1, #2
9000f0e0:	4281      	cmp	r1, r0
9000f0e2:	bfb8      	it	lt
9000f0e4:	4601      	movlt	r1, r0
9000f0e6:	982f      	ldr	r0, [sp, #188]	; 0xbc
9000f0e8:	9117      	str	r1, [sp, #92]	; 0x5c
9000f0ea:	9915      	ldr	r1, [sp, #84]	; 0x54
9000f0ec:	4288      	cmp	r0, r1
9000f0ee:	bfa8      	it	ge
9000f0f0:	4608      	movge	r0, r1
9000f0f2:	6879      	ldr	r1, [r7, #4]
9000f0f4:	4288      	cmp	r0, r1
9000f0f6:	bfa8      	it	ge
9000f0f8:	4608      	movge	r0, r1
9000f0fa:	f8d8 101c 	ldr.w	r1, [r8, #28]
9000f0fe:	4451      	add	r1, sl
9000f100:	440b      	add	r3, r1
9000f102:	9917      	ldr	r1, [sp, #92]	; 0x5c
9000f104:	3301      	adds	r3, #1
9000f106:	4298      	cmp	r0, r3
9000f108:	bfa8      	it	ge
9000f10a:	4618      	movge	r0, r3
9000f10c:	4288      	cmp	r0, r1
9000f10e:	9013      	str	r0, [sp, #76]	; 0x4c
9000f110:	f340 81cd 	ble.w	9000f4ae <EwStrokePath+0x5c0>
9000f114:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000f116:	9911      	ldr	r1, [sp, #68]	; 0x44
9000f118:	428b      	cmp	r3, r1
9000f11a:	bfb8      	it	lt
9000f11c:	460b      	movlt	r3, r1
9000f11e:	9912      	ldr	r1, [sp, #72]	; 0x48
9000f120:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000f124:	4563      	cmp	r3, ip
9000f126:	bfb8      	it	lt
9000f128:	4663      	movlt	r3, ip
9000f12a:	9316      	str	r3, [sp, #88]	; 0x58
9000f12c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9000f12e:	428b      	cmp	r3, r1
9000f130:	bfa8      	it	ge
9000f132:	460b      	movge	r3, r1
9000f134:	68b9      	ldr	r1, [r7, #8]
9000f136:	428b      	cmp	r3, r1
9000f138:	bfa8      	it	ge
9000f13a:	460b      	movge	r3, r1
9000f13c:	4293      	cmp	r3, r2
9000f13e:	bfa8      	it	ge
9000f140:	4613      	movge	r3, r2
9000f142:	9a16      	ldr	r2, [sp, #88]	; 0x58
9000f144:	4293      	cmp	r3, r2
9000f146:	9314      	str	r3, [sp, #80]	; 0x50
9000f148:	f340 81b1 	ble.w	9000f4ae <EwStrokePath+0x5c0>
9000f14c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9000f14e:	b14b      	cbz	r3, 9000f164 <EwStrokePath+0x276>
9000f150:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000f152:	9b08      	ldr	r3, [sp, #32]
9000f154:	4313      	orrs	r3, r2
9000f156:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000f158:	4313      	orrs	r3, r2
9000f15a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000f15c:	4313      	orrs	r3, r2
9000f15e:	0e1b      	lsrs	r3, r3, #24
9000f160:	f000 81a5 	beq.w	9000f4ae <EwStrokePath+0x5c0>
9000f164:	6863      	ldr	r3, [r4, #4]
9000f166:	f1bb 0f03 	cmp.w	fp, #3
9000f16a:	931a      	str	r3, [sp, #104]	; 0x68
9000f16c:	68a3      	ldr	r3, [r4, #8]
9000f16e:	931b      	str	r3, [sp, #108]	; 0x6c
9000f170:	d006      	beq.n	9000f180 <EwStrokePath+0x292>
9000f172:	9b07      	ldr	r3, [sp, #28]
9000f174:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9000f178:	d002      	beq.n	9000f180 <EwStrokePath+0x292>
9000f17a:	f5b9 3f00 	cmp.w	r9, #131072	; 0x20000
9000f17e:	d142      	bne.n	9000f206 <EwStrokePath+0x318>
9000f180:	eddf 7aad 	vldr	s15, [pc, #692]	; 9000f438 <EwStrokePath+0x54a>
9000f184:	eea8 0a27 	vfma.f32	s0, s16, s15
9000f188:	f017 fe12 	bl	90026db0 <EwMathCeil>
9000f18c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
9000f190:	ed9f 7aaa 	vldr	s14, [pc, #680]	; 9000f43c <EwStrokePath+0x54e>
9000f194:	ee10 3a10 	vmov	r3, s0
9000f198:	3302      	adds	r3, #2
9000f19a:	ee07 3a90 	vmov	s15, r3
9000f19e:	930b      	str	r3, [sp, #44]	; 0x2c
9000f1a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f1a4:	eec7 9a27 	vdiv.f32	s19, s14, s15
9000f1a8:	eeb0 0a69 	vmov.f32	s0, s19
9000f1ac:	f017 fdbc 	bl	90026d28 <EwMathCos>
9000f1b0:	eeb0 8a40 	vmov.f32	s16, s0
9000f1b4:	eeb0 0a69 	vmov.f32	s0, s19
9000f1b8:	f017 fdae 	bl	90026d18 <EwMathSin>
9000f1bc:	eef0 9a40 	vmov.f32	s19, s0
9000f1c0:	6820      	ldr	r0, [r4, #0]
9000f1c2:	f008 fb6d 	bl	900178a0 <EwInitIssue>
9000f1c6:	4605      	mov	r5, r0
9000f1c8:	bb20      	cbnz	r0, 9000f214 <EwStrokePath+0x326>
9000f1ca:	2200      	movs	r2, #0
9000f1cc:	4639      	mov	r1, r7
9000f1ce:	207e      	movs	r0, #126	; 0x7e
9000f1d0:	e722      	b.n	9000f018 <EwStrokePath+0x12a>
9000f1d2:	f1bb 0f01 	cmp.w	fp, #1
9000f1d6:	d003      	beq.n	9000f1e0 <EwStrokePath+0x2f2>
9000f1d8:	9b07      	ldr	r3, [sp, #28]
9000f1da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000f1de:	d104      	bne.n	9000f1ea <EwStrokePath+0x2fc>
9000f1e0:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
9000f1e4:	ee68 7aa7 	vmul.f32	s15, s17, s15
9000f1e8:	e751      	b.n	9000f08e <EwStrokePath+0x1a0>
9000f1ea:	ee78 7a80 	vadd.f32	s15, s17, s0
9000f1ee:	e74e      	b.n	9000f08e <EwStrokePath+0x1a0>
9000f1f0:	9812      	ldr	r0, [sp, #72]	; 0x48
9000f1f2:	eb0a 0600 	add.w	r6, sl, r0
9000f1f6:	eba6 0c01 	sub.w	ip, r6, r1
9000f1fa:	1ab2      	subs	r2, r6, r2
9000f1fc:	ebac 0c03 	sub.w	ip, ip, r3
9000f200:	f10c 3cff 	add.w	ip, ip, #4294967295
9000f204:	e75b      	b.n	9000f0be <EwStrokePath+0x1d0>
9000f206:	ed9f 8a8e 	vldr	s16, [pc, #568]	; 9000f440 <EwStrokePath+0x552>
9000f20a:	2300      	movs	r3, #0
9000f20c:	eef0 9a48 	vmov.f32	s19, s16
9000f210:	930b      	str	r3, [sp, #44]	; 0x2c
9000f212:	e7d5      	b.n	9000f1c0 <EwStrokePath+0x2d2>
9000f214:	f8d8 3004 	ldr.w	r3, [r8, #4]
9000f218:	f04f 0c06 	mov.w	ip, #6
9000f21c:	f1bb 0f03 	cmp.w	fp, #3
9000f220:	eb03 0143 	add.w	r1, r3, r3, lsl #1
9000f224:	e9d8 0202 	ldrd	r0, r2, [r8, #8]
9000f228:	fb0c 1100 	mla	r1, ip, r0, r1
9000f22c:	f101 0101 	add.w	r1, r1, #1
9000f230:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
9000f234:	f040 80a6 	bne.w	9000f384 <EwStrokePath+0x496>
9000f238:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000f23a:	3801      	subs	r0, #1
9000f23c:	ea4f 0840 	mov.w	r8, r0, lsl #1
9000f240:	9807      	ldr	r0, [sp, #28]
9000f242:	fb08 1103 	mla	r1, r8, r3, r1
9000f246:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
9000f24a:	f040 80a3 	bne.w	9000f394 <EwStrokePath+0x4a6>
9000f24e:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000f250:	3801      	subs	r0, #1
9000f252:	0040      	lsls	r0, r0, #1
9000f254:	900e      	str	r0, [sp, #56]	; 0x38
9000f256:	f5b9 3f00 	cmp.w	r9, #131072	; 0x20000
9000f25a:	980e      	ldr	r0, [sp, #56]	; 0x38
9000f25c:	fb00 1103 	mla	r1, r0, r3, r1
9000f260:	eba2 0303 	sub.w	r3, r2, r3
9000f264:	f040 809d 	bne.w	9000f3a2 <EwStrokePath+0x4b4>
9000f268:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000f26a:	3a01      	subs	r2, #1
9000f26c:	0052      	lsls	r2, r2, #1
9000f26e:	920f      	str	r2, [sp, #60]	; 0x3c
9000f270:	4628      	mov	r0, r5
9000f272:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9000f274:	fb02 1103 	mla	r1, r2, r3, r1
9000f278:	3107      	adds	r1, #7
9000f27a:	0089      	lsls	r1, r1, #2
9000f27c:	f008 fbb1 	bl	900179e2 <EwAllocTaskData>
9000f280:	4601      	mov	r1, r0
9000f282:	2800      	cmp	r0, #0
9000f284:	f040 8093 	bne.w	9000f3ae <EwStrokePath+0x4c0>
9000f288:	6820      	ldr	r0, [r4, #0]
9000f28a:	f008 fc19 	bl	90017ac0 <EwDoneIssue>
9000f28e:	6820      	ldr	r0, [r4, #0]
9000f290:	f008 fbca 	bl	90017a28 <EwFlushTasks>
9000f294:	6820      	ldr	r0, [r4, #0]
9000f296:	f008 fb03 	bl	900178a0 <EwInitIssue>
9000f29a:	4605      	mov	r5, r0
9000f29c:	2800      	cmp	r0, #0
9000f29e:	d094      	beq.n	9000f1ca <EwStrokePath+0x2dc>
9000f2a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000f2a2:	2120      	movs	r1, #32
9000f2a4:	4628      	mov	r0, r5
9000f2a6:	4453      	add	r3, sl
9000f2a8:	011b      	lsls	r3, r3, #4
9000f2aa:	931a      	str	r3, [sp, #104]	; 0x68
9000f2ac:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000f2ae:	4433      	add	r3, r6
9000f2b0:	011b      	lsls	r3, r3, #4
9000f2b2:	931b      	str	r3, [sp, #108]	; 0x6c
9000f2b4:	f008 fb95 	bl	900179e2 <EwAllocTaskData>
9000f2b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000f2ba:	4606      	mov	r6, r0
9000f2bc:	4601      	mov	r1, r0
9000f2be:	88a0      	ldrh	r0, [r4, #4]
9000f2c0:	8922      	ldrh	r2, [r4, #8]
9000f2c2:	4403      	add	r3, r0
9000f2c4:	f821 3b1c 	strh.w	r3, [r1], #28
9000f2c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000f2ca:	4413      	add	r3, r2
9000f2cc:	8073      	strh	r3, [r6, #2]
9000f2ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
9000f2d0:	4418      	add	r0, r3
9000f2d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000f2d4:	441a      	add	r2, r3
9000f2d6:	9b08      	ldr	r3, [sp, #32]
9000f2d8:	80b0      	strh	r0, [r6, #4]
9000f2da:	60f3      	str	r3, [r6, #12]
9000f2dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f2de:	80f2      	strh	r2, [r6, #6]
9000f2e0:	6133      	str	r3, [r6, #16]
9000f2e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000f2e4:	6173      	str	r3, [r6, #20]
9000f2e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000f2e8:	61b3      	str	r3, [r6, #24]
9000f2ea:	2301      	movs	r3, #1
9000f2ec:	60b3      	str	r3, [r6, #8]
9000f2ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
9000f2f0:	3b04      	subs	r3, #4
9000f2f2:	9310      	str	r3, [sp, #64]	; 0x40
9000f2f4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f2f6:	2b00      	cmp	r3, #0
9000f2f8:	dc5d      	bgt.n	9000f3b6 <EwStrokePath+0x4c8>
9000f2fa:	2700      	movs	r7, #0
9000f2fc:	4628      	mov	r0, r5
9000f2fe:	f841 7b04 	str.w	r7, [r1], #4
9000f302:	f008 fb88 	bl	90017a16 <EwFreeTaskData>
9000f306:	4639      	mov	r1, r7
9000f308:	4628      	mov	r0, r5
9000f30a:	f008 fb31 	bl	90017970 <EwAllocTask>
9000f30e:	2309      	movs	r3, #9
9000f310:	88a2      	ldrh	r2, [r4, #4]
9000f312:	8083      	strh	r3, [r0, #4]
9000f314:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9000f316:	9916      	ldr	r1, [sp, #88]	; 0x58
9000f318:	4413      	add	r3, r2
9000f31a:	6106      	str	r6, [r0, #16]
9000f31c:	8103      	strh	r3, [r0, #8]
9000f31e:	8923      	ldrh	r3, [r4, #8]
9000f320:	4419      	add	r1, r3
9000f322:	8141      	strh	r1, [r0, #10]
9000f324:	9913      	ldr	r1, [sp, #76]	; 0x4c
9000f326:	440a      	add	r2, r1
9000f328:	990d      	ldr	r1, [sp, #52]	; 0x34
9000f32a:	8182      	strh	r2, [r0, #12]
9000f32c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9000f32e:	4413      	add	r3, r2
9000f330:	9a19      	ldr	r2, [sp, #100]	; 0x64
9000f332:	81c3      	strh	r3, [r0, #14]
9000f334:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9000f336:	42bb      	cmp	r3, r7
9000f338:	bf14      	ite	ne
9000f33a:	2308      	movne	r3, #8
9000f33c:	463b      	moveq	r3, r7
9000f33e:	42ba      	cmp	r2, r7
9000f340:	bf18      	it	ne
9000f342:	f043 0301 	orrne.w	r3, r3, #1
9000f346:	9a08      	ldr	r2, [sp, #32]
9000f348:	428a      	cmp	r2, r1
9000f34a:	f000 809e 	beq.w	9000f48a <EwStrokePath+0x59c>
9000f34e:	e9dd 2109 	ldrd	r2, r1, [sp, #36]	; 0x24
9000f352:	428a      	cmp	r2, r1
9000f354:	f000 80a1 	beq.w	9000f49a <EwStrokePath+0x5ac>
9000f358:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9000f35c:	428a      	cmp	r2, r1
9000f35e:	f040 809c 	bne.w	9000f49a <EwStrokePath+0x5ac>
9000f362:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000f364:	990a      	ldr	r1, [sp, #40]	; 0x28
9000f366:	428a      	cmp	r2, r1
9000f368:	f040 8097 	bne.w	9000f49a <EwStrokePath+0x5ac>
9000f36c:	f043 0306 	orr.w	r3, r3, #6
9000f370:	80c3      	strh	r3, [r0, #6]
9000f372:	6820      	ldr	r0, [r4, #0]
9000f374:	b01f      	add	sp, #124	; 0x7c
9000f376:	ecbd 8b04 	vpop	{d8-d9}
9000f37a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f37e:	b002      	add	sp, #8
9000f380:	f008 bb9e 	b.w	90017ac0 <EwDoneIssue>
9000f384:	f1bb 0f02 	cmp.w	fp, #2
9000f388:	bf0c      	ite	eq
9000f38a:	f04f 0802 	moveq.w	r8, #2
9000f38e:	f04f 0800 	movne.w	r8, #0
9000f392:	e755      	b.n	9000f240 <EwStrokePath+0x352>
9000f394:	9807      	ldr	r0, [sp, #28]
9000f396:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000f39a:	bf0c      	ite	eq
9000f39c:	2002      	moveq	r0, #2
9000f39e:	2000      	movne	r0, #0
9000f3a0:	e758      	b.n	9000f254 <EwStrokePath+0x366>
9000f3a2:	f5b9 3f80 	cmp.w	r9, #65536	; 0x10000
9000f3a6:	bf0c      	ite	eq
9000f3a8:	2202      	moveq	r2, #2
9000f3aa:	2200      	movne	r2, #0
9000f3ac:	e75f      	b.n	9000f26e <EwStrokePath+0x380>
9000f3ae:	4628      	mov	r0, r5
9000f3b0:	f008 fb31 	bl	90017a16 <EwFreeTaskData>
9000f3b4:	e774      	b.n	9000f2a0 <EwStrokePath+0x3b2>
9000f3b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000f3b8:	f853 af04 	ldr.w	sl, [r3, #4]!
9000f3bc:	9310      	str	r3, [sp, #64]	; 0x40
9000f3be:	f1ba 0f00 	cmp.w	sl, #0
9000f3c2:	d059      	beq.n	9000f478 <EwStrokePath+0x58a>
9000f3c4:	f89a 3009 	ldrb.w	r3, [sl, #9]
9000f3c8:	4628      	mov	r0, r5
9000f3ca:	f89a 200a 	ldrb.w	r2, [sl, #10]
9000f3ce:	3b00      	subs	r3, #0
9000f3d0:	bf18      	it	ne
9000f3d2:	2301      	movne	r3, #1
9000f3d4:	9312      	str	r3, [sp, #72]	; 0x48
9000f3d6:	1e13      	subs	r3, r2, #0
9000f3d8:	bf18      	it	ne
9000f3da:	2301      	movne	r3, #1
9000f3dc:	9311      	str	r3, [sp, #68]	; 0x44
9000f3de:	f008 fb1a 	bl	90017a16 <EwFreeTaskData>
9000f3e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
9000f3e4:	f04f 0c06 	mov.w	ip, #6
9000f3e8:	9811      	ldr	r0, [sp, #68]	; 0x44
9000f3ea:	eb03 0243 	add.w	r2, r3, r3, lsl #1
9000f3ee:	f8da 1004 	ldr.w	r1, [sl, #4]
9000f3f2:	fb0c 2200 	mla	r2, ip, r0, r2
9000f3f6:	980e      	ldr	r0, [sp, #56]	; 0x38
9000f3f8:	3201      	adds	r2, #1
9000f3fa:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
9000f3fe:	fb03 2208 	mla	r2, r3, r8, r2
9000f402:	fb03 2200 	mla	r2, r3, r0, r2
9000f406:	1acb      	subs	r3, r1, r3
9000f408:	990f      	ldr	r1, [sp, #60]	; 0x3c
9000f40a:	4628      	mov	r0, r5
9000f40c:	fb01 2203 	mla	r2, r1, r3, r2
9000f410:	0091      	lsls	r1, r2, #2
9000f412:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9000f416:	f008 fae4 	bl	900179e2 <EwAllocTaskData>
9000f41a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
9000f41e:	b988      	cbnz	r0, 9000f444 <EwStrokePath+0x556>
9000f420:	4631      	mov	r1, r6
9000f422:	4628      	mov	r0, r5
9000f424:	9207      	str	r2, [sp, #28]
9000f426:	f008 faf6 	bl	90017a16 <EwFreeTaskData>
9000f42a:	6820      	ldr	r0, [r4, #0]
9000f42c:	f008 fb48 	bl	90017ac0 <EwDoneIssue>
9000f430:	9a07      	ldr	r2, [sp, #28]
9000f432:	4639      	mov	r1, r7
9000f434:	20bc      	movs	r0, #188	; 0xbc
9000f436:	e5ef      	b.n	9000f018 <EwStrokePath+0x12a>
9000f438:	3e19999a 	.word	0x3e19999a
9000f43c:	43340000 	.word	0x43340000
9000f440:	00000000 	.word	0x00000000
9000f444:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000f446:	4401      	add	r1, r0
9000f448:	9000      	str	r0, [sp, #0]
9000f44a:	eef0 1a69 	vmov.f32	s3, s19
9000f44e:	9305      	str	r3, [sp, #20]
9000f450:	eeb0 1a48 	vmov.f32	s2, s16
9000f454:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9000f456:	eef0 0a68 	vmov.f32	s1, s17
9000f45a:	eeb0 0a49 	vmov.f32	s0, s18
9000f45e:	9a07      	ldr	r2, [sp, #28]
9000f460:	9304      	str	r3, [sp, #16]
9000f462:	4650      	mov	r0, sl
9000f464:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000f466:	9303      	str	r3, [sp, #12]
9000f468:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000f46a:	e9cd 1301 	strd	r1, r3, [sp, #4]
9000f46e:	4659      	mov	r1, fp
9000f470:	464b      	mov	r3, r9
9000f472:	f7fb fd54 	bl	9000af1e <UpdateWatermark2+0x3f8>
9000f476:	4601      	mov	r1, r0
9000f478:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f47a:	3b01      	subs	r3, #1
9000f47c:	930c      	str	r3, [sp, #48]	; 0x30
9000f47e:	e739      	b.n	9000f2f4 <EwStrokePath+0x406>
9000f480:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000f482:	e76f      	b.n	9000f364 <EwStrokePath+0x476>
9000f484:	f043 0302 	orr.w	r3, r3, #2
9000f488:	e772      	b.n	9000f370 <EwStrokePath+0x482>
9000f48a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9000f48e:	428a      	cmp	r2, r1
9000f490:	d106      	bne.n	9000f4a0 <EwStrokePath+0x5b2>
9000f492:	9a08      	ldr	r2, [sp, #32]
9000f494:	990a      	ldr	r1, [sp, #40]	; 0x28
9000f496:	428a      	cmp	r2, r1
9000f498:	d0f4      	beq.n	9000f484 <EwStrokePath+0x596>
9000f49a:	f043 0304 	orr.w	r3, r3, #4
9000f49e:	e767      	b.n	9000f370 <EwStrokePath+0x482>
9000f4a0:	9a08      	ldr	r2, [sp, #32]
9000f4a2:	990a      	ldr	r1, [sp, #40]	; 0x28
9000f4a4:	428a      	cmp	r2, r1
9000f4a6:	d1eb      	bne.n	9000f480 <EwStrokePath+0x592>
9000f4a8:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
9000f4ac:	e7f3      	b.n	9000f496 <EwStrokePath+0x5a8>
9000f4ae:	b01f      	add	sp, #124	; 0x7c
9000f4b0:	ecbd 8b04 	vpop	{d8-d9}
9000f4b4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f4b8:	b002      	add	sp, #8
9000f4ba:	4770      	bx	lr

9000f4bc <EwGetBitmapFromFillPath>:
9000f4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f4c0:	b09d      	sub	sp, #116	; 0x74
9000f4c2:	4682      	mov	sl, r0
9000f4c4:	4689      	mov	r9, r1
9000f4c6:	4615      	mov	r5, r2
9000f4c8:	ac0e      	add	r4, sp, #56	; 0x38
9000f4ca:	e884 0003 	stmia.w	r4, {r0, r1}
9000f4ce:	461c      	mov	r4, r3
9000f4d0:	b192      	cbz	r2, 9000f4f8 <EwGetBitmapFromFillPath+0x3c>
9000f4d2:	f852 3b40 	ldr.w	r3, [r2], #64
9000f4d6:	9307      	str	r3, [sp, #28]
9000f4d8:	4613      	mov	r3, r2
9000f4da:	920c      	str	r2, [sp, #48]	; 0x30
9000f4dc:	2c00      	cmp	r4, #0
9000f4de:	bf14      	ite	ne
9000f4e0:	f04f 33ff 	movne.w	r3, #4294967295
9000f4e4:	2301      	moveq	r3, #1
9000f4e6:	f1ba 0f00 	cmp.w	sl, #0
9000f4ea:	930d      	str	r3, [sp, #52]	; 0x34
9000f4ec:	dc07      	bgt.n	9000f4fe <EwGetBitmapFromFillPath+0x42>
9000f4ee:	2500      	movs	r5, #0
9000f4f0:	4628      	mov	r0, r5
9000f4f2:	b01d      	add	sp, #116	; 0x74
9000f4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000f4f8:	920c      	str	r2, [sp, #48]	; 0x30
9000f4fa:	9207      	str	r2, [sp, #28]
9000f4fc:	e7ee      	b.n	9000f4dc <EwGetBitmapFromFillPath+0x20>
9000f4fe:	f1b9 0f00 	cmp.w	r9, #0
9000f502:	ddf4      	ble.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f504:	2d00      	cmp	r5, #0
9000f506:	d0f2      	beq.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f508:	9b26      	ldr	r3, [sp, #152]	; 0x98
9000f50a:	4628      	mov	r0, r5
9000f50c:	9e27      	ldr	r6, [sp, #156]	; 0x9c
9000f50e:	9309      	str	r3, [sp, #36]	; 0x24
9000f510:	f7fc f88d 	bl	9000b62e <UpdateWatermark2+0xb08>
9000f514:	68ea      	ldr	r2, [r5, #12]
9000f516:	2a00      	cmp	r2, #0
9000f518:	d0e9      	beq.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f51a:	6a2b      	ldr	r3, [r5, #32]
9000f51c:	69a9      	ldr	r1, [r5, #24]
9000f51e:	2c00      	cmp	r4, #0
9000f520:	d138      	bne.n	9000f594 <EwGetBitmapFromFillPath+0xd8>
9000f522:	4431      	add	r1, r6
9000f524:	4433      	add	r3, r6
9000f526:	1e48      	subs	r0, r1, #1
9000f528:	9c09      	ldr	r4, [sp, #36]	; 0x24
9000f52a:	3301      	adds	r3, #1
9000f52c:	6969      	ldr	r1, [r5, #20]
9000f52e:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
9000f532:	9f09      	ldr	r7, [sp, #36]	; 0x24
9000f534:	4421      	add	r1, r4
9000f536:	9008      	str	r0, [sp, #32]
9000f538:	1e4c      	subs	r4, r1, #1
9000f53a:	69e9      	ldr	r1, [r5, #28]
9000f53c:	4439      	add	r1, r7
9000f53e:	ea24 7be4 	bic.w	fp, r4, r4, asr #31
9000f542:	3101      	adds	r1, #1
9000f544:	4551      	cmp	r1, sl
9000f546:	bfa8      	it	ge
9000f548:	4651      	movge	r1, sl
9000f54a:	454b      	cmp	r3, r9
9000f54c:	bfa8      	it	ge
9000f54e:	464b      	movge	r3, r9
9000f550:	458b      	cmp	fp, r1
9000f552:	910a      	str	r1, [sp, #40]	; 0x28
9000f554:	930b      	str	r3, [sp, #44]	; 0x2c
9000f556:	daca      	bge.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f558:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000f55a:	4288      	cmp	r0, r1
9000f55c:	dac7      	bge.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f55e:	68ab      	ldr	r3, [r5, #8]
9000f560:	686c      	ldr	r4, [r5, #4]
9000f562:	eb03 0343 	add.w	r3, r3, r3, lsl #1
9000f566:	eb04 0484 	add.w	r4, r4, r4, lsl #2
9000f56a:	4423      	add	r3, r4
9000f56c:	1c5c      	adds	r4, r3, #1
9000f56e:	eb04 0442 	add.w	r4, r4, r2, lsl #1
9000f572:	00a4      	lsls	r4, r4, #2
9000f574:	4620      	mov	r0, r4
9000f576:	f017 fb9d 	bl	90026cb4 <EwAlloc>
9000f57a:	4607      	mov	r7, r0
9000f57c:	2800      	cmp	r0, #0
9000f57e:	d17b      	bne.n	9000f678 <EwGetBitmapFromFillPath+0x1bc>
9000f580:	201e      	movs	r0, #30
9000f582:	f00e ff17 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000f586:	4605      	mov	r5, r0
9000f588:	2800      	cmp	r0, #0
9000f58a:	d1f3      	bne.n	9000f574 <EwGetBitmapFromFillPath+0xb8>
9000f58c:	201e      	movs	r0, #30
9000f58e:	f00d ff5f 	bl	9001d450 <EwError>
9000f592:	e7ad      	b.n	9000f4f0 <EwGetBitmapFromFillPath+0x34>
9000f594:	444e      	add	r6, r9
9000f596:	1af3      	subs	r3, r6, r3
9000f598:	1e58      	subs	r0, r3, #1
9000f59a:	1a73      	subs	r3, r6, r1
9000f59c:	e7c4      	b.n	9000f528 <EwGetBitmapFromFillPath+0x6c>
9000f59e:	2100      	movs	r1, #0
9000f5a0:	f7fc faa4 	bl	9000baec <UpdateWatermark1+0x6c>
9000f5a4:	ab10      	add	r3, sp, #64	; 0x40
9000f5a6:	2202      	movs	r2, #2
9000f5a8:	4680      	mov	r8, r0
9000f5aa:	9304      	str	r3, [sp, #16]
9000f5ac:	2300      	movs	r3, #0
9000f5ae:	e9cd 3202 	strd	r3, r2, [sp, #8]
9000f5b2:	e9cd 9300 	strd	r9, r3, [sp]
9000f5b6:	4653      	mov	r3, sl
9000f5b8:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
9000f5bc:	6800      	ldr	r0, [r0, #0]
9000f5be:	f008 facb 	bl	90017b58 <EwLockSurface>
9000f5c2:	b980      	cbnz	r0, 9000f5e6 <EwGetBitmapFromFillPath+0x12a>
9000f5c4:	4602      	mov	r2, r0
9000f5c6:	f8d8 1000 	ldr.w	r1, [r8]
9000f5ca:	208b      	movs	r0, #139	; 0x8b
9000f5cc:	f00d ff56 	bl	9001d47c <EwErrorPD>
9000f5d0:	4a3d      	ldr	r2, [pc, #244]	; (9000f6c8 <EwGetBitmapFromFillPath+0x20c>)
9000f5d2:	4638      	mov	r0, r7
9000f5d4:	6813      	ldr	r3, [r2, #0]
9000f5d6:	1b1b      	subs	r3, r3, r4
9000f5d8:	6013      	str	r3, [r2, #0]
9000f5da:	f017 fb6d 	bl	90026cb8 <EwFree>
9000f5de:	4628      	mov	r0, r5
9000f5e0:	f7fc fcf0 	bl	9000bfc4 <EwFreeBitmap>
9000f5e4:	e783      	b.n	9000f4ee <EwGetBitmapFromFillPath+0x32>
9000f5e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000f5e8:	0136      	lsls	r6, r6, #4
9000f5ea:	9912      	ldr	r1, [sp, #72]	; 0x48
9000f5ec:	ea4f 1a03 	mov.w	sl, r3, lsl #4
9000f5f0:	f9bd 3062 	ldrsh.w	r3, [sp, #98]	; 0x62
9000f5f4:	9810      	ldr	r0, [sp, #64]	; 0x40
9000f5f6:	4359      	muls	r1, r3
9000f5f8:	f017 fb84 	bl	90026d04 <EwZero>
9000f5fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f5fe:	4639      	mov	r1, r7
9000f600:	f1a3 0904 	sub.w	r9, r3, #4
9000f604:	9b07      	ldr	r3, [sp, #28]
9000f606:	2b00      	cmp	r3, #0
9000f608:	dc28      	bgt.n	9000f65c <EwGetBitmapFromFillPath+0x1a0>
9000f60a:	2300      	movs	r3, #0
9000f60c:	9a08      	ldr	r2, [sp, #32]
9000f60e:	a810      	add	r0, sp, #64	; 0x40
9000f610:	600b      	str	r3, [r1, #0]
9000f612:	4639      	mov	r1, r7
9000f614:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9000f618:	9305      	str	r3, [sp, #20]
9000f61a:	f89d 30a0 	ldrb.w	r3, [sp, #160]	; 0xa0
9000f61e:	9304      	str	r3, [sp, #16]
9000f620:	9b08      	ldr	r3, [sp, #32]
9000f622:	011b      	lsls	r3, r3, #4
9000f624:	9303      	str	r3, [sp, #12]
9000f626:	ea4f 130b 	mov.w	r3, fp, lsl #4
9000f62a:	9302      	str	r3, [sp, #8]
9000f62c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000f62e:	1a9b      	subs	r3, r3, r2
9000f630:	9301      	str	r3, [sp, #4]
9000f632:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000f634:	eba3 030b 	sub.w	r3, r3, fp
9000f638:	9300      	str	r3, [sp, #0]
9000f63a:	4613      	mov	r3, r2
9000f63c:	465a      	mov	r2, fp
9000f63e:	f009 fa3e 	bl	90018abe <EwRasterAlpha8Polygon>
9000f642:	4638      	mov	r0, r7
9000f644:	f017 fb38 	bl	90026cb8 <EwFree>
9000f648:	a910      	add	r1, sp, #64	; 0x40
9000f64a:	f8d8 0000 	ldr.w	r0, [r8]
9000f64e:	f007 ff31 	bl	900174b4 <EwUnlockSurface>
9000f652:	4a1d      	ldr	r2, [pc, #116]	; (9000f6c8 <EwGetBitmapFromFillPath+0x20c>)
9000f654:	6813      	ldr	r3, [r2, #0]
9000f656:	1b1b      	subs	r3, r3, r4
9000f658:	6013      	str	r3, [r2, #0]
9000f65a:	e749      	b.n	9000f4f0 <EwGetBitmapFromFillPath+0x34>
9000f65c:	f859 0f04 	ldr.w	r0, [r9, #4]!
9000f660:	b130      	cbz	r0, 9000f670 <EwGetBitmapFromFillPath+0x1b4>
9000f662:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f664:	4652      	mov	r2, sl
9000f666:	9300      	str	r3, [sp, #0]
9000f668:	4633      	mov	r3, r6
9000f66a:	f7fb f9fa 	bl	9000aa62 <EwScreenWarpRGB565RowFilterSolidBlend+0xb2>
9000f66e:	4601      	mov	r1, r0
9000f670:	9b07      	ldr	r3, [sp, #28]
9000f672:	3b01      	subs	r3, #1
9000f674:	9307      	str	r3, [sp, #28]
9000f676:	e7c5      	b.n	9000f604 <EwGetBitmapFromFillPath+0x148>
9000f678:	4a13      	ldr	r2, [pc, #76]	; (9000f6c8 <EwGetBitmapFromFillPath+0x20c>)
9000f67a:	6813      	ldr	r3, [r2, #0]
9000f67c:	4423      	add	r3, r4
9000f67e:	6013      	str	r3, [r2, #0]
9000f680:	4a12      	ldr	r2, [pc, #72]	; (9000f6cc <EwGetBitmapFromFillPath+0x210>)
9000f682:	6811      	ldr	r1, [r2, #0]
9000f684:	428b      	cmp	r3, r1
9000f686:	dd00      	ble.n	9000f68a <EwGetBitmapFromFillPath+0x1ce>
9000f688:	6013      	str	r3, [r2, #0]
9000f68a:	4a11      	ldr	r2, [pc, #68]	; (9000f6d0 <EwGetBitmapFromFillPath+0x214>)
9000f68c:	2002      	movs	r0, #2
9000f68e:	4911      	ldr	r1, [pc, #68]	; (9000f6d4 <EwGetBitmapFromFillPath+0x218>)
9000f690:	6812      	ldr	r2, [r2, #0]
9000f692:	6809      	ldr	r1, [r1, #0]
9000f694:	440a      	add	r2, r1
9000f696:	4413      	add	r3, r2
9000f698:	4a0f      	ldr	r2, [pc, #60]	; (9000f6d8 <EwGetBitmapFromFillPath+0x21c>)
9000f69a:	6811      	ldr	r1, [r2, #0]
9000f69c:	428b      	cmp	r3, r1
9000f69e:	bfc8      	it	gt
9000f6a0:	6013      	strgt	r3, [r2, #0]
9000f6a2:	2301      	movs	r3, #1
9000f6a4:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
9000f6a8:	9300      	str	r3, [sp, #0]
9000f6aa:	2300      	movs	r3, #0
9000f6ac:	f7fc fcd8 	bl	9000c060 <EwCreateBitmap>
9000f6b0:	4605      	mov	r5, r0
9000f6b2:	2800      	cmp	r0, #0
9000f6b4:	f47f af73 	bne.w	9000f59e <EwGetBitmapFromFillPath+0xe2>
9000f6b8:	4a03      	ldr	r2, [pc, #12]	; (9000f6c8 <EwGetBitmapFromFillPath+0x20c>)
9000f6ba:	4638      	mov	r0, r7
9000f6bc:	6813      	ldr	r3, [r2, #0]
9000f6be:	1b1b      	subs	r3, r3, r4
9000f6c0:	6013      	str	r3, [r2, #0]
9000f6c2:	f017 faf9 	bl	90026cb8 <EwFree>
9000f6c6:	e713      	b.n	9000f4f0 <EwGetBitmapFromFillPath+0x34>
9000f6c8:	200002bc 	.word	0x200002bc
9000f6cc:	200002d8 	.word	0x200002d8
9000f6d0:	200002ac 	.word	0x200002ac
9000f6d4:	200002b8 	.word	0x200002b8
9000f6d8:	200002c0 	.word	0x200002c0

9000f6dc <EwGetBitmapFromStrokePath>:
9000f6dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f6e0:	ed2d 8b04 	vpush	{d8-d9}
9000f6e4:	b0a1      	sub	sp, #132	; 0x84
9000f6e6:	eeb0 8a40 	vmov.f32	s16, s0
9000f6ea:	eeb0 9a60 	vmov.f32	s18, s1
9000f6ee:	4681      	mov	r9, r0
9000f6f0:	ac12      	add	r4, sp, #72	; 0x48
9000f6f2:	9e30      	ldr	r6, [sp, #192]	; 0xc0
9000f6f4:	4615      	mov	r5, r2
9000f6f6:	910a      	str	r1, [sp, #40]	; 0x28
9000f6f8:	e884 0003 	stmia.w	r4, {r0, r1}
9000f6fc:	461c      	mov	r4, r3
9000f6fe:	460b      	mov	r3, r1
9000f700:	b1a2      	cbz	r2, 9000f72c <EwGetBitmapFromStrokePath+0x50>
9000f702:	f852 3b40 	ldr.w	r3, [r2], #64
9000f706:	9309      	str	r3, [sp, #36]	; 0x24
9000f708:	4613      	mov	r3, r2
9000f70a:	9210      	str	r2, [sp, #64]	; 0x40
9000f70c:	2c00      	cmp	r4, #0
9000f70e:	bf14      	ite	ne
9000f710:	f04f 33ff 	movne.w	r3, #4294967295
9000f714:	2301      	moveq	r3, #1
9000f716:	f1b9 0f00 	cmp.w	r9, #0
9000f71a:	9311      	str	r3, [sp, #68]	; 0x44
9000f71c:	dc09      	bgt.n	9000f732 <EwGetBitmapFromStrokePath+0x56>
9000f71e:	2500      	movs	r5, #0
9000f720:	4628      	mov	r0, r5
9000f722:	b021      	add	sp, #132	; 0x84
9000f724:	ecbd 8b04 	vpop	{d8-d9}
9000f728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000f72c:	9210      	str	r2, [sp, #64]	; 0x40
9000f72e:	9209      	str	r2, [sp, #36]	; 0x24
9000f730:	e7ec      	b.n	9000f70c <EwGetBitmapFromStrokePath+0x30>
9000f732:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000f734:	2b00      	cmp	r3, #0
9000f736:	ddf2      	ble.n	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f738:	2d00      	cmp	r5, #0
9000f73a:	d0f0      	beq.n	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f73c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9000f740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f744:	d9eb      	bls.n	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f746:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9000f748:	4628      	mov	r0, r5
9000f74a:	f8dd a0bc 	ldr.w	sl, [sp, #188]	; 0xbc
9000f74e:	930d      	str	r3, [sp, #52]	; 0x34
9000f750:	f7fb ff6d 	bl	9000b62e <UpdateWatermark2+0xb08>
9000f754:	68eb      	ldr	r3, [r5, #12]
9000f756:	2b00      	cmp	r3, #0
9000f758:	d0e1      	beq.n	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f75a:	fa5f f886 	uxtb.w	r8, r6
9000f75e:	f1b8 0f03 	cmp.w	r8, #3
9000f762:	d108      	bne.n	9000f776 <EwGetBitmapFromStrokePath+0x9a>
9000f764:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
9000f768:	eeb4 8a67 	vcmp.f32	s16, s15
9000f76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f770:	bf48      	it	mi
9000f772:	f04f 0802 	movmi.w	r8, #2
9000f776:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
9000f77a:	f5b7 7f40 	cmp.w	r7, #768	; 0x300
9000f77e:	d108      	bne.n	9000f792 <EwGetBitmapFromStrokePath+0xb6>
9000f780:	eef1 7a00 	vmov.f32	s15, #16	; 0x40800000  4.0
9000f784:	eeb4 8a67 	vcmp.f32	s16, s15
9000f788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f78c:	bf48      	it	mi
9000f78e:	f44f 7700 	movmi.w	r7, #512	; 0x200
9000f792:	f406 0b7f 	and.w	fp, r6, #16711680	; 0xff0000
9000f796:	eeb6 0a00 	vmov.f32	s0, #96	; 0x3f000000  0.5
9000f79a:	f5bb 3f00 	cmp.w	fp, #131072	; 0x20000
9000f79e:	ee68 8a00 	vmul.f32	s17, s16, s0
9000f7a2:	d114      	bne.n	9000f7ce <EwGetBitmapFromStrokePath+0xf2>
9000f7a4:	eef0 7a08 	vmov.f32	s15, #8	; 0x40400000  3.0
9000f7a8:	eeb4 8a67 	vcmp.f32	s16, s15
9000f7ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f7b0:	bf48      	it	mi
9000f7b2:	f04f 0b00 	movmi.w	fp, #0
9000f7b6:	f1b8 0f01 	cmp.w	r8, #1
9000f7ba:	d003      	beq.n	9000f7c4 <EwGetBitmapFromStrokePath+0xe8>
9000f7bc:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
9000f7c0:	f040 80aa 	bne.w	9000f918 <EwGetBitmapFromStrokePath+0x23c>
9000f7c4:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
9000f7c8:	ee68 7aa7 	vmul.f32	s15, s17, s15
9000f7cc:	e00b      	b.n	9000f7e6 <EwGetBitmapFromStrokePath+0x10a>
9000f7ce:	f5bb 3f80 	cmp.w	fp, #65536	; 0x10000
9000f7d2:	d1f0      	bne.n	9000f7b6 <EwGetBitmapFromStrokePath+0xda>
9000f7d4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9000f7d8:	eeb4 9ae7 	vcmpe.f32	s18, s15
9000f7dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9000f7e0:	dd04      	ble.n	9000f7ec <EwGetBitmapFromStrokePath+0x110>
9000f7e2:	ee68 7a89 	vmul.f32	s15, s17, s18
9000f7e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9000f7ea:	e001      	b.n	9000f7f0 <EwGetBitmapFromStrokePath+0x114>
9000f7ec:	eefd 7ae8 	vcvt.s32.f32	s15, s17
9000f7f0:	ee17 1a90 	vmov	r1, s15
9000f7f4:	6a2e      	ldr	r6, [r5, #32]
9000f7f6:	69ab      	ldr	r3, [r5, #24]
9000f7f8:	2c00      	cmp	r4, #0
9000f7fa:	f040 8090 	bne.w	9000f91e <EwGetBitmapFromStrokePath+0x242>
9000f7fe:	eb0a 0003 	add.w	r0, sl, r3
9000f802:	eb0a 0306 	add.w	r3, sl, r6
9000f806:	1a40      	subs	r0, r0, r1
9000f808:	3801      	subs	r0, #1
9000f80a:	696a      	ldr	r2, [r5, #20]
9000f80c:	440b      	add	r3, r1
9000f80e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9000f810:	9e0d      	ldr	r6, [sp, #52]	; 0x34
9000f812:	3301      	adds	r3, #1
9000f814:	4414      	add	r4, r2
9000f816:	69ea      	ldr	r2, [r5, #28]
9000f818:	1a64      	subs	r4, r4, r1
9000f81a:	4432      	add	r2, r6
9000f81c:	3c02      	subs	r4, #2
9000f81e:	4411      	add	r1, r2
9000f820:	ea24 72e4 	bic.w	r2, r4, r4, asr #31
9000f824:	3101      	adds	r1, #1
9000f826:	920b      	str	r2, [sp, #44]	; 0x2c
9000f828:	4549      	cmp	r1, r9
9000f82a:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
9000f82e:	920c      	str	r2, [sp, #48]	; 0x30
9000f830:	460a      	mov	r2, r1
9000f832:	bfa8      	it	ge
9000f834:	464a      	movge	r2, r9
9000f836:	920e      	str	r2, [sp, #56]	; 0x38
9000f838:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000f83a:	4293      	cmp	r3, r2
9000f83c:	bfa8      	it	ge
9000f83e:	4613      	movge	r3, r2
9000f840:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9000f842:	930f      	str	r3, [sp, #60]	; 0x3c
9000f844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000f846:	4293      	cmp	r3, r2
9000f848:	f6bf af69 	bge.w	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f84c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f84e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9000f850:	4293      	cmp	r3, r2
9000f852:	f6bf af64 	bge.w	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f856:	f1b8 0f03 	cmp.w	r8, #3
9000f85a:	d005      	beq.n	9000f868 <EwGetBitmapFromStrokePath+0x18c>
9000f85c:	f5b7 7f40 	cmp.w	r7, #768	; 0x300
9000f860:	d002      	beq.n	9000f868 <EwGetBitmapFromStrokePath+0x18c>
9000f862:	f5bb 3f00 	cmp.w	fp, #131072	; 0x20000
9000f866:	d163      	bne.n	9000f930 <EwGetBitmapFromStrokePath+0x254>
9000f868:	eddf 7a93 	vldr	s15, [pc, #588]	; 9000fab8 <EwGetBitmapFromStrokePath+0x3dc>
9000f86c:	eea8 0a27 	vfma.f32	s0, s16, s15
9000f870:	f017 fa9e 	bl	90026db0 <EwMathCeil>
9000f874:	eebd 0ac0 	vcvt.s32.f32	s0, s0
9000f878:	ed9f 7a90 	vldr	s14, [pc, #576]	; 9000fabc <EwGetBitmapFromStrokePath+0x3e0>
9000f87c:	ee10 3a10 	vmov	r3, s0
9000f880:	3302      	adds	r3, #2
9000f882:	ee07 3a90 	vmov	s15, r3
9000f886:	9307      	str	r3, [sp, #28]
9000f888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000f88c:	eec7 9a27 	vdiv.f32	s19, s14, s15
9000f890:	eeb0 0a69 	vmov.f32	s0, s19
9000f894:	f017 fa48 	bl	90026d28 <EwMathCos>
9000f898:	eeb0 8a40 	vmov.f32	s16, s0
9000f89c:	eeb0 0a69 	vmov.f32	s0, s19
9000f8a0:	f017 fa3a 	bl	90026d18 <EwMathSin>
9000f8a4:	eef0 9a40 	vmov.f32	s19, s0
9000f8a8:	686a      	ldr	r2, [r5, #4]
9000f8aa:	2406      	movs	r4, #6
9000f8ac:	f1b8 0f03 	cmp.w	r8, #3
9000f8b0:	eb02 0342 	add.w	r3, r2, r2, lsl #1
9000f8b4:	e9d5 0102 	ldrd	r0, r1, [r5, #8]
9000f8b8:	fb04 3300 	mla	r3, r4, r0, r3
9000f8bc:	f103 0301 	add.w	r3, r3, #1
9000f8c0:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
9000f8c4:	d13b      	bne.n	9000f93e <EwGetBitmapFromStrokePath+0x262>
9000f8c6:	9807      	ldr	r0, [sp, #28]
9000f8c8:	1e44      	subs	r4, r0, #1
9000f8ca:	0064      	lsls	r4, r4, #1
9000f8cc:	f5b7 7f40 	cmp.w	r7, #768	; 0x300
9000f8d0:	fb04 3302 	mla	r3, r4, r2, r3
9000f8d4:	d139      	bne.n	9000f94a <EwGetBitmapFromStrokePath+0x26e>
9000f8d6:	9807      	ldr	r0, [sp, #28]
9000f8d8:	1e44      	subs	r4, r0, #1
9000f8da:	0064      	lsls	r4, r4, #1
9000f8dc:	f5bb 3f00 	cmp.w	fp, #131072	; 0x20000
9000f8e0:	fb04 3302 	mla	r3, r4, r2, r3
9000f8e4:	eba1 0402 	sub.w	r4, r1, r2
9000f8e8:	d135      	bne.n	9000f956 <EwGetBitmapFromStrokePath+0x27a>
9000f8ea:	9a07      	ldr	r2, [sp, #28]
9000f8ec:	3a01      	subs	r2, #1
9000f8ee:	0052      	lsls	r2, r2, #1
9000f8f0:	fb02 3404 	mla	r4, r2, r4, r3
9000f8f4:	00a4      	lsls	r4, r4, #2
9000f8f6:	4620      	mov	r0, r4
9000f8f8:	f017 f9dc 	bl	90026cb4 <EwAlloc>
9000f8fc:	4606      	mov	r6, r0
9000f8fe:	2800      	cmp	r0, #0
9000f900:	f040 80b1 	bne.w	9000fa66 <EwGetBitmapFromStrokePath+0x38a>
9000f904:	201f      	movs	r0, #31
9000f906:	f00e fd55 	bl	9001e3b4 <EwImmediateReclaimMemory>
9000f90a:	4605      	mov	r5, r0
9000f90c:	2800      	cmp	r0, #0
9000f90e:	d1f2      	bne.n	9000f8f6 <EwGetBitmapFromStrokePath+0x21a>
9000f910:	201f      	movs	r0, #31
9000f912:	f00d fd9d 	bl	9001d450 <EwError>
9000f916:	e703      	b.n	9000f720 <EwGetBitmapFromStrokePath+0x44>
9000f918:	ee78 7a80 	vadd.f32	s15, s17, s0
9000f91c:	e763      	b.n	9000f7e6 <EwGetBitmapFromStrokePath+0x10a>
9000f91e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000f920:	4492      	add	sl, r2
9000f922:	ebaa 0006 	sub.w	r0, sl, r6
9000f926:	ebaa 0303 	sub.w	r3, sl, r3
9000f92a:	1a40      	subs	r0, r0, r1
9000f92c:	3801      	subs	r0, #1
9000f92e:	e76c      	b.n	9000f80a <EwGetBitmapFromStrokePath+0x12e>
9000f930:	ed9f 8a63 	vldr	s16, [pc, #396]	; 9000fac0 <EwGetBitmapFromStrokePath+0x3e4>
9000f934:	2300      	movs	r3, #0
9000f936:	eef0 9a48 	vmov.f32	s19, s16
9000f93a:	9307      	str	r3, [sp, #28]
9000f93c:	e7b4      	b.n	9000f8a8 <EwGetBitmapFromStrokePath+0x1cc>
9000f93e:	f1b8 0f02 	cmp.w	r8, #2
9000f942:	bf0c      	ite	eq
9000f944:	2402      	moveq	r4, #2
9000f946:	2400      	movne	r4, #0
9000f948:	e7c0      	b.n	9000f8cc <EwGetBitmapFromStrokePath+0x1f0>
9000f94a:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
9000f94e:	bf0c      	ite	eq
9000f950:	2402      	moveq	r4, #2
9000f952:	2400      	movne	r4, #0
9000f954:	e7c2      	b.n	9000f8dc <EwGetBitmapFromStrokePath+0x200>
9000f956:	f5bb 3f80 	cmp.w	fp, #65536	; 0x10000
9000f95a:	bf0c      	ite	eq
9000f95c:	2202      	moveq	r2, #2
9000f95e:	2200      	movne	r2, #0
9000f960:	e7c6      	b.n	9000f8f0 <EwGetBitmapFromStrokePath+0x214>
9000f962:	2100      	movs	r1, #0
9000f964:	f7fc f8c2 	bl	9000baec <UpdateWatermark1+0x6c>
9000f968:	ab14      	add	r3, sp, #80	; 0x50
9000f96a:	2202      	movs	r2, #2
9000f96c:	9008      	str	r0, [sp, #32]
9000f96e:	9304      	str	r3, [sp, #16]
9000f970:	2300      	movs	r3, #0
9000f972:	e9cd 3202 	strd	r3, r2, [sp, #8]
9000f976:	9301      	str	r3, [sp, #4]
9000f978:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000f97a:	9300      	str	r3, [sp, #0]
9000f97c:	464b      	mov	r3, r9
9000f97e:	6882      	ldr	r2, [r0, #8]
9000f980:	6841      	ldr	r1, [r0, #4]
9000f982:	6800      	ldr	r0, [r0, #0]
9000f984:	f008 f8e8 	bl	90017b58 <EwLockSurface>
9000f988:	b980      	cbnz	r0, 9000f9ac <EwGetBitmapFromStrokePath+0x2d0>
9000f98a:	9b08      	ldr	r3, [sp, #32]
9000f98c:	4602      	mov	r2, r0
9000f98e:	208c      	movs	r0, #140	; 0x8c
9000f990:	6819      	ldr	r1, [r3, #0]
9000f992:	f00d fd73 	bl	9001d47c <EwErrorPD>
9000f996:	4a4b      	ldr	r2, [pc, #300]	; (9000fac4 <EwGetBitmapFromStrokePath+0x3e8>)
9000f998:	4630      	mov	r0, r6
9000f99a:	6813      	ldr	r3, [r2, #0]
9000f99c:	1b1b      	subs	r3, r3, r4
9000f99e:	6013      	str	r3, [r2, #0]
9000f9a0:	f017 f98a 	bl	90026cb8 <EwFree>
9000f9a4:	4628      	mov	r0, r5
9000f9a6:	f7fc fb0d 	bl	9000bfc4 <EwFreeBitmap>
9000f9aa:	e6b8      	b.n	9000f71e <EwGetBitmapFromStrokePath+0x42>
9000f9ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000f9ae:	ea4f 1a0a 	mov.w	sl, sl, lsl #4
9000f9b2:	9916      	ldr	r1, [sp, #88]	; 0x58
9000f9b4:	011b      	lsls	r3, r3, #4
9000f9b6:	9814      	ldr	r0, [sp, #80]	; 0x50
9000f9b8:	930a      	str	r3, [sp, #40]	; 0x28
9000f9ba:	f9bd 3072 	ldrsh.w	r3, [sp, #114]	; 0x72
9000f9be:	4359      	muls	r1, r3
9000f9c0:	f017 f9a0 	bl	90026d04 <EwZero>
9000f9c4:	1933      	adds	r3, r6, r4
9000f9c6:	4630      	mov	r0, r6
9000f9c8:	930d      	str	r3, [sp, #52]	; 0x34
9000f9ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
9000f9cc:	f1a3 0904 	sub.w	r9, r3, #4
9000f9d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000f9d2:	2b00      	cmp	r3, #0
9000f9d4:	dc26      	bgt.n	9000fa24 <EwGetBitmapFromStrokePath+0x348>
9000f9d6:	2300      	movs	r3, #0
9000f9d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000f9da:	4631      	mov	r1, r6
9000f9dc:	6003      	str	r3, [r0, #0]
9000f9de:	2301      	movs	r3, #1
9000f9e0:	a814      	add	r0, sp, #80	; 0x50
9000f9e2:	9305      	str	r3, [sp, #20]
9000f9e4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9000f9e8:	9304      	str	r3, [sp, #16]
9000f9ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000f9ec:	011b      	lsls	r3, r3, #4
9000f9ee:	9303      	str	r3, [sp, #12]
9000f9f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9000f9f2:	011b      	lsls	r3, r3, #4
9000f9f4:	9302      	str	r3, [sp, #8]
9000f9f6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9000f9f8:	1a9b      	subs	r3, r3, r2
9000f9fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000f9fc:	9301      	str	r3, [sp, #4]
9000f9fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9000fa00:	1a9b      	subs	r3, r3, r2
9000fa02:	9300      	str	r3, [sp, #0]
9000fa04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000fa06:	f009 f85a 	bl	90018abe <EwRasterAlpha8Polygon>
9000fa0a:	4630      	mov	r0, r6
9000fa0c:	f017 f954 	bl	90026cb8 <EwFree>
9000fa10:	9b08      	ldr	r3, [sp, #32]
9000fa12:	a914      	add	r1, sp, #80	; 0x50
9000fa14:	6818      	ldr	r0, [r3, #0]
9000fa16:	f007 fd4d 	bl	900174b4 <EwUnlockSurface>
9000fa1a:	4a2a      	ldr	r2, [pc, #168]	; (9000fac4 <EwGetBitmapFromStrokePath+0x3e8>)
9000fa1c:	6813      	ldr	r3, [r2, #0]
9000fa1e:	1b1b      	subs	r3, r3, r4
9000fa20:	6013      	str	r3, [r2, #0]
9000fa22:	e67d      	b.n	9000f720 <EwGetBitmapFromStrokePath+0x44>
9000fa24:	f859 cf04 	ldr.w	ip, [r9, #4]!
9000fa28:	f1bc 0f00 	cmp.w	ip, #0
9000fa2c:	d017      	beq.n	9000fa5e <EwGetBitmapFromStrokePath+0x382>
9000fa2e:	9b07      	ldr	r3, [sp, #28]
9000fa30:	eef0 1a69 	vmov.f32	s3, s19
9000fa34:	eeb0 1a48 	vmov.f32	s2, s16
9000fa38:	463a      	mov	r2, r7
9000fa3a:	9305      	str	r3, [sp, #20]
9000fa3c:	eef0 0a68 	vmov.f32	s1, s17
9000fa40:	9b11      	ldr	r3, [sp, #68]	; 0x44
9000fa42:	eeb0 0a49 	vmov.f32	s0, s18
9000fa46:	4641      	mov	r1, r8
9000fa48:	e9cd a303 	strd	sl, r3, [sp, #12]
9000fa4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000fa4e:	9302      	str	r3, [sp, #8]
9000fa50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000fa52:	e9cd 0300 	strd	r0, r3, [sp]
9000fa56:	465b      	mov	r3, fp
9000fa58:	4660      	mov	r0, ip
9000fa5a:	f7fb fa60 	bl	9000af1e <UpdateWatermark2+0x3f8>
9000fa5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000fa60:	3b01      	subs	r3, #1
9000fa62:	9309      	str	r3, [sp, #36]	; 0x24
9000fa64:	e7b4      	b.n	9000f9d0 <EwGetBitmapFromStrokePath+0x2f4>
9000fa66:	4a17      	ldr	r2, [pc, #92]	; (9000fac4 <EwGetBitmapFromStrokePath+0x3e8>)
9000fa68:	6813      	ldr	r3, [r2, #0]
9000fa6a:	4423      	add	r3, r4
9000fa6c:	6013      	str	r3, [r2, #0]
9000fa6e:	4a16      	ldr	r2, [pc, #88]	; (9000fac8 <EwGetBitmapFromStrokePath+0x3ec>)
9000fa70:	6811      	ldr	r1, [r2, #0]
9000fa72:	428b      	cmp	r3, r1
9000fa74:	dd00      	ble.n	9000fa78 <EwGetBitmapFromStrokePath+0x39c>
9000fa76:	6013      	str	r3, [r2, #0]
9000fa78:	4a14      	ldr	r2, [pc, #80]	; (9000facc <EwGetBitmapFromStrokePath+0x3f0>)
9000fa7a:	2002      	movs	r0, #2
9000fa7c:	4914      	ldr	r1, [pc, #80]	; (9000fad0 <EwGetBitmapFromStrokePath+0x3f4>)
9000fa7e:	6812      	ldr	r2, [r2, #0]
9000fa80:	6809      	ldr	r1, [r1, #0]
9000fa82:	440a      	add	r2, r1
9000fa84:	4413      	add	r3, r2
9000fa86:	4a13      	ldr	r2, [pc, #76]	; (9000fad4 <EwGetBitmapFromStrokePath+0x3f8>)
9000fa88:	6811      	ldr	r1, [r2, #0]
9000fa8a:	428b      	cmp	r3, r1
9000fa8c:	bfc8      	it	gt
9000fa8e:	6013      	strgt	r3, [r2, #0]
9000fa90:	2301      	movs	r3, #1
9000fa92:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
9000fa96:	9300      	str	r3, [sp, #0]
9000fa98:	2300      	movs	r3, #0
9000fa9a:	f7fc fae1 	bl	9000c060 <EwCreateBitmap>
9000fa9e:	4605      	mov	r5, r0
9000faa0:	2800      	cmp	r0, #0
9000faa2:	f47f af5e 	bne.w	9000f962 <EwGetBitmapFromStrokePath+0x286>
9000faa6:	4a07      	ldr	r2, [pc, #28]	; (9000fac4 <EwGetBitmapFromStrokePath+0x3e8>)
9000faa8:	4630      	mov	r0, r6
9000faaa:	6813      	ldr	r3, [r2, #0]
9000faac:	1b1b      	subs	r3, r3, r4
9000faae:	6013      	str	r3, [r2, #0]
9000fab0:	f017 f902 	bl	90026cb8 <EwFree>
9000fab4:	e634      	b.n	9000f720 <EwGetBitmapFromStrokePath+0x44>
9000fab6:	bf00      	nop
9000fab8:	3e19999a 	.word	0x3e19999a
9000fabc:	43340000 	.word	0x43340000
9000fac0:	00000000 	.word	0x00000000
9000fac4:	200002bc 	.word	0x200002bc
9000fac8:	200002d8 	.word	0x200002d8
9000facc:	200002ac 	.word	0x200002ac
9000fad0:	200002b8 	.word	0x200002b8
9000fad4:	200002c0 	.word	0x200002c0

9000fad8 <EwCopyBitmap>:
9000fad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fadc:	b08f      	sub	sp, #60	; 0x3c
9000fade:	4698      	mov	r8, r3
9000fae0:	460e      	mov	r6, r1
9000fae2:	4611      	mov	r1, r2
9000fae4:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
9000fae8:	4617      	mov	r7, r2
9000faea:	4604      	mov	r4, r0
9000faec:	9303      	str	r3, [sp, #12]
9000faee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9000faf0:	930b      	str	r3, [sp, #44]	; 0x2c
9000faf2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9000faf4:	930c      	str	r3, [sp, #48]	; 0x30
9000faf6:	9b20      	ldr	r3, [sp, #128]	; 0x80
9000faf8:	9306      	str	r3, [sp, #24]
9000fafa:	9b21      	ldr	r3, [sp, #132]	; 0x84
9000fafc:	9307      	str	r3, [sp, #28]
9000fafe:	f89d 308b 	ldrb.w	r3, [sp, #139]	; 0x8b
9000fb02:	e9dd 9a1c 	ldrd	r9, sl, [sp, #112]	; 0x70
9000fb06:	930d      	str	r3, [sp, #52]	; 0x34
9000fb08:	f7fb fff0 	bl	9000baec <UpdateWatermark1+0x6c>
9000fb0c:	4641      	mov	r1, r8
9000fb0e:	9004      	str	r0, [sp, #16]
9000fb10:	4630      	mov	r0, r6
9000fb12:	f7fb ffeb 	bl	9000baec <UpdateWatermark1+0x6c>
9000fb16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9000fb18:	f89d 208a 	ldrb.w	r2, [sp, #138]	; 0x8a
9000fb1c:	4605      	mov	r5, r0
9000fb1e:	f89d 1089 	ldrb.w	r1, [sp, #137]	; 0x89
9000fb22:	f89d 0088 	ldrb.w	r0, [sp, #136]	; 0x88
9000fb26:	f7f5 f8e4 	bl	90004cf2 <EwPackColor>
9000fb2a:	f89d 308f 	ldrb.w	r3, [sp, #143]	; 0x8f
9000fb2e:	f89d 208e 	ldrb.w	r2, [sp, #142]	; 0x8e
9000fb32:	4683      	mov	fp, r0
9000fb34:	f89d 108d 	ldrb.w	r1, [sp, #141]	; 0x8d
9000fb38:	f89d 008c 	ldrb.w	r0, [sp, #140]	; 0x8c
9000fb3c:	f7f5 f8d9 	bl	90004cf2 <EwPackColor>
9000fb40:	f89d 3097 	ldrb.w	r3, [sp, #151]	; 0x97
9000fb44:	f89d 2096 	ldrb.w	r2, [sp, #150]	; 0x96
9000fb48:	f89d 1095 	ldrb.w	r1, [sp, #149]	; 0x95
9000fb4c:	9005      	str	r0, [sp, #20]
9000fb4e:	f89d 0094 	ldrb.w	r0, [sp, #148]	; 0x94
9000fb52:	f7f5 f8ce 	bl	90004cf2 <EwPackColor>
9000fb56:	f89d 3093 	ldrb.w	r3, [sp, #147]	; 0x93
9000fb5a:	9001      	str	r0, [sp, #4]
9000fb5c:	f89d 2092 	ldrb.w	r2, [sp, #146]	; 0x92
9000fb60:	f89d 1091 	ldrb.w	r1, [sp, #145]	; 0x91
9000fb64:	f89d 0090 	ldrb.w	r0, [sp, #144]	; 0x90
9000fb68:	f7f5 f8c3 	bl	90004cf2 <EwPackColor>
9000fb6c:	9b04      	ldr	r3, [sp, #16]
9000fb6e:	9002      	str	r0, [sp, #8]
9000fb70:	b12b      	cbz	r3, 9000fb7e <EwCopyBitmap+0xa6>
9000fb72:	681a      	ldr	r2, [r3, #0]
9000fb74:	8c13      	ldrh	r3, [r2, #32]
9000fb76:	3301      	adds	r3, #1
9000fb78:	b29b      	uxth	r3, r3
9000fb7a:	2b01      	cmp	r3, #1
9000fb7c:	d907      	bls.n	9000fb8e <EwCopyBitmap+0xb6>
9000fb7e:	463a      	mov	r2, r7
9000fb80:	4621      	mov	r1, r4
9000fb82:	20a0      	movs	r0, #160	; 0xa0
9000fb84:	b00f      	add	sp, #60	; 0x3c
9000fb86:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fb8a:	f00d bc77 	b.w	9001d47c <EwErrorPD>
9000fb8e:	6993      	ldr	r3, [r2, #24]
9000fb90:	b90b      	cbnz	r3, 9000fb96 <EwCopyBitmap+0xbe>
9000fb92:	69d3      	ldr	r3, [r2, #28]
9000fb94:	b123      	cbz	r3, 9000fba0 <EwCopyBitmap+0xc8>
9000fb96:	463a      	mov	r2, r7
9000fb98:	4621      	mov	r1, r4
9000fb9a:	f44f 70ac 	mov.w	r0, #344	; 0x158
9000fb9e:	e7f1      	b.n	9000fb84 <EwCopyBitmap+0xac>
9000fba0:	b125      	cbz	r5, 9000fbac <EwCopyBitmap+0xd4>
9000fba2:	6828      	ldr	r0, [r5, #0]
9000fba4:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9000fba8:	1c5a      	adds	r2, r3, #1
9000fbaa:	d103      	bne.n	9000fbb4 <EwCopyBitmap+0xdc>
9000fbac:	4642      	mov	r2, r8
9000fbae:	4631      	mov	r1, r6
9000fbb0:	20a3      	movs	r0, #163	; 0xa3
9000fbb2:	e7e7      	b.n	9000fb84 <EwCopyBitmap+0xac>
9000fbb4:	9a03      	ldr	r2, [sp, #12]
9000fbb6:	b172      	cbz	r2, 9000fbd6 <EwCopyBitmap+0xfe>
9000fbb8:	2b03      	cmp	r3, #3
9000fbba:	d10c      	bne.n	9000fbd6 <EwCopyBitmap+0xfe>
9000fbbc:	9b05      	ldr	r3, [sp, #20]
9000fbbe:	9a01      	ldr	r2, [sp, #4]
9000fbc0:	ea0b 0303 	and.w	r3, fp, r3
9000fbc4:	4013      	ands	r3, r2
9000fbc6:	9a02      	ldr	r2, [sp, #8]
9000fbc8:	4013      	ands	r3, r2
9000fbca:	0e1b      	lsrs	r3, r3, #24
9000fbcc:	2bff      	cmp	r3, #255	; 0xff
9000fbce:	9b03      	ldr	r3, [sp, #12]
9000fbd0:	bf08      	it	eq
9000fbd2:	2300      	moveq	r3, #0
9000fbd4:	9303      	str	r3, [sp, #12]
9000fbd6:	f007 ff27 	bl	90017a28 <EwFlushTasks>
9000fbda:	6873      	ldr	r3, [r6, #4]
9000fbdc:	9a06      	ldr	r2, [sp, #24]
9000fbde:	444b      	add	r3, r9
9000fbe0:	1a9a      	subs	r2, r3, r2
9000fbe2:	9b06      	ldr	r3, [sp, #24]
9000fbe4:	2b00      	cmp	r3, #0
9000fbe6:	bfd8      	it	le
9000fbe8:	eba9 0003 	suble.w	r0, r9, r3
9000fbec:	9b07      	ldr	r3, [sp, #28]
9000fbee:	bfc8      	it	gt
9000fbf0:	4648      	movgt	r0, r9
9000fbf2:	2b00      	cmp	r3, #0
9000fbf4:	bfd8      	it	le
9000fbf6:	ebaa 0103 	suble.w	r1, sl, r3
9000fbfa:	9b18      	ldr	r3, [sp, #96]	; 0x60
9000fbfc:	bfc8      	it	gt
9000fbfe:	4651      	movgt	r1, sl
9000fc00:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000fc04:	4283      	cmp	r3, r0
9000fc06:	bfb8      	it	lt
9000fc08:	4603      	movlt	r3, r0
9000fc0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9000fc0c:	9308      	str	r3, [sp, #32]
9000fc0e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000fc10:	4283      	cmp	r3, r0
9000fc12:	bfa8      	it	ge
9000fc14:	4603      	movge	r3, r0
9000fc16:	4293      	cmp	r3, r2
9000fc18:	bfa8      	it	ge
9000fc1a:	4613      	movge	r3, r2
9000fc1c:	6862      	ldr	r2, [r4, #4]
9000fc1e:	4293      	cmp	r3, r2
9000fc20:	bfa8      	it	ge
9000fc22:	4613      	movge	r3, r2
9000fc24:	9a08      	ldr	r2, [sp, #32]
9000fc26:	4293      	cmp	r3, r2
9000fc28:	930a      	str	r3, [sp, #40]	; 0x28
9000fc2a:	f340 8130 	ble.w	9000fe8e <EwCopyBitmap+0x3b6>
9000fc2e:	9b19      	ldr	r3, [sp, #100]	; 0x64
9000fc30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000fc32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9000fc36:	428b      	cmp	r3, r1
9000fc38:	bfb8      	it	lt
9000fc3a:	460b      	movlt	r3, r1
9000fc3c:	9907      	ldr	r1, [sp, #28]
9000fc3e:	9309      	str	r3, [sp, #36]	; 0x24
9000fc40:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9000fc42:	4293      	cmp	r3, r2
9000fc44:	bfa8      	it	ge
9000fc46:	4613      	movge	r3, r2
9000fc48:	68a2      	ldr	r2, [r4, #8]
9000fc4a:	429a      	cmp	r2, r3
9000fc4c:	bfa8      	it	ge
9000fc4e:	461a      	movge	r2, r3
9000fc50:	68b3      	ldr	r3, [r6, #8]
9000fc52:	4453      	add	r3, sl
9000fc54:	1a5b      	subs	r3, r3, r1
9000fc56:	429a      	cmp	r2, r3
9000fc58:	bfa8      	it	ge
9000fc5a:	461a      	movge	r2, r3
9000fc5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000fc5e:	429a      	cmp	r2, r3
9000fc60:	4617      	mov	r7, r2
9000fc62:	f340 8114 	ble.w	9000fe8e <EwCopyBitmap+0x3b6>
9000fc66:	9b03      	ldr	r3, [sp, #12]
9000fc68:	b14b      	cbz	r3, 9000fc7e <EwCopyBitmap+0x1a6>
9000fc6a:	9b05      	ldr	r3, [sp, #20]
9000fc6c:	9a01      	ldr	r2, [sp, #4]
9000fc6e:	ea4b 0303 	orr.w	r3, fp, r3
9000fc72:	4313      	orrs	r3, r2
9000fc74:	9a02      	ldr	r2, [sp, #8]
9000fc76:	4313      	orrs	r3, r2
9000fc78:	0e1b      	lsrs	r3, r3, #24
9000fc7a:	f000 8108 	beq.w	9000fe8e <EwCopyBitmap+0x3b6>
9000fc7e:	682b      	ldr	r3, [r5, #0]
9000fc80:	689a      	ldr	r2, [r3, #8]
9000fc82:	3201      	adds	r2, #1
9000fc84:	609a      	str	r2, [r3, #8]
9000fc86:	68da      	ldr	r2, [r3, #12]
9000fc88:	3201      	adds	r2, #1
9000fc8a:	60da      	str	r2, [r3, #12]
9000fc8c:	9b04      	ldr	r3, [sp, #16]
9000fc8e:	6818      	ldr	r0, [r3, #0]
9000fc90:	f007 fe06 	bl	900178a0 <EwInitIssue>
9000fc94:	4680      	mov	r8, r0
9000fc96:	b950      	cbnz	r0, 9000fcae <EwCopyBitmap+0x1d6>
9000fc98:	682b      	ldr	r3, [r5, #0]
9000fc9a:	4621      	mov	r1, r4
9000fc9c:	689a      	ldr	r2, [r3, #8]
9000fc9e:	3a01      	subs	r2, #1
9000fca0:	609a      	str	r2, [r3, #8]
9000fca2:	68da      	ldr	r2, [r3, #12]
9000fca4:	3a01      	subs	r2, #1
9000fca6:	60da      	str	r2, [r3, #12]
9000fca8:	4602      	mov	r2, r0
9000fcaa:	207f      	movs	r0, #127	; 0x7f
9000fcac:	e76a      	b.n	9000fb84 <EwCopyBitmap+0xac>
9000fcae:	2120      	movs	r1, #32
9000fcb0:	f007 fe97 	bl	900179e2 <EwAllocTaskData>
9000fcb4:	9b04      	ldr	r3, [sp, #16]
9000fcb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000fcb8:	4604      	mov	r4, r0
9000fcba:	889a      	ldrh	r2, [r3, #4]
9000fcbc:	891b      	ldrh	r3, [r3, #8]
9000fcbe:	4491      	add	r9, r2
9000fcc0:	440a      	add	r2, r1
9000fcc2:	449a      	add	sl, r3
9000fcc4:	2100      	movs	r1, #0
9000fcc6:	8082      	strh	r2, [r0, #4]
9000fcc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9000fcca:	f8a0 9000 	strh.w	r9, [r0]
9000fcce:	4413      	add	r3, r2
9000fcd0:	9a06      	ldr	r2, [sp, #24]
9000fcd2:	f8a0 a002 	strh.w	sl, [r0, #2]
9000fcd6:	80c3      	strh	r3, [r0, #6]
9000fcd8:	686b      	ldr	r3, [r5, #4]
9000fcda:	4413      	add	r3, r2
9000fcdc:	9a07      	ldr	r2, [sp, #28]
9000fcde:	8103      	strh	r3, [r0, #8]
9000fce0:	68ab      	ldr	r3, [r5, #8]
9000fce2:	4413      	add	r3, r2
9000fce4:	8143      	strh	r3, [r0, #10]
9000fce6:	682b      	ldr	r3, [r5, #0]
9000fce8:	e9c0 3b03 	strd	r3, fp, [r0, #12]
9000fcec:	9b05      	ldr	r3, [sp, #20]
9000fcee:	6143      	str	r3, [r0, #20]
9000fcf0:	9b02      	ldr	r3, [sp, #8]
9000fcf2:	6183      	str	r3, [r0, #24]
9000fcf4:	9b01      	ldr	r3, [sp, #4]
9000fcf6:	61c3      	str	r3, [r0, #28]
9000fcf8:	4640      	mov	r0, r8
9000fcfa:	f007 fe39 	bl	90017970 <EwAllocTask>
9000fcfe:	2302      	movs	r3, #2
9000fd00:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000fd02:	4606      	mov	r6, r0
9000fd04:	8083      	strh	r3, [r0, #4]
9000fd06:	9b04      	ldr	r3, [sp, #16]
9000fd08:	6104      	str	r4, [r0, #16]
9000fd0a:	8899      	ldrh	r1, [r3, #4]
9000fd0c:	9b08      	ldr	r3, [sp, #32]
9000fd0e:	eb01 0903 	add.w	r9, r1, r3
9000fd12:	9b04      	ldr	r3, [sp, #16]
9000fd14:	891b      	ldrh	r3, [r3, #8]
9000fd16:	fa0f f989 	sxth.w	r9, r9
9000fd1a:	eb03 0e02 	add.w	lr, r3, r2
9000fd1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9000fd20:	443b      	add	r3, r7
9000fd22:	f8a0 9008 	strh.w	r9, [r0, #8]
9000fd26:	4411      	add	r1, r2
9000fd28:	fa0f fe8e 	sxth.w	lr, lr
9000fd2c:	b21b      	sxth	r3, r3
9000fd2e:	9a03      	ldr	r2, [sp, #12]
9000fd30:	b209      	sxth	r1, r1
9000fd32:	f8a0 e00a 	strh.w	lr, [r0, #10]
9000fd36:	81c3      	strh	r3, [r0, #14]
9000fd38:	8181      	strh	r1, [r0, #12]
9000fd3a:	2a00      	cmp	r2, #0
9000fd3c:	d03e      	beq.n	9000fdbc <EwCopyBitmap+0x2e4>
9000fd3e:	9a05      	ldr	r2, [sp, #20]
9000fd40:	9801      	ldr	r0, [sp, #4]
9000fd42:	ea0b 0202 	and.w	r2, fp, r2
9000fd46:	4002      	ands	r2, r0
9000fd48:	9802      	ldr	r0, [sp, #8]
9000fd4a:	4002      	ands	r2, r0
9000fd4c:	0e12      	lsrs	r2, r2, #24
9000fd4e:	2aff      	cmp	r2, #255	; 0xff
9000fd50:	d134      	bne.n	9000fdbc <EwCopyBitmap+0x2e4>
9000fd52:	f9b4 c000 	ldrsh.w	ip, [r4]
9000fd56:	68ea      	ldr	r2, [r5, #12]
9000fd58:	9806      	ldr	r0, [sp, #24]
9000fd5a:	4462      	add	r2, ip
9000fd5c:	f9b4 7002 	ldrsh.w	r7, [r4, #2]
9000fd60:	1a12      	subs	r2, r2, r0
9000fd62:	454a      	cmp	r2, r9
9000fd64:	4610      	mov	r0, r2
9000fd66:	bfb8      	it	lt
9000fd68:	4648      	movlt	r0, r9
9000fd6a:	9008      	str	r0, [sp, #32]
9000fd6c:	6928      	ldr	r0, [r5, #16]
9000fd6e:	eb07 0a00 	add.w	sl, r7, r0
9000fd72:	9807      	ldr	r0, [sp, #28]
9000fd74:	ebaa 0a00 	sub.w	sl, sl, r0
9000fd78:	45f2      	cmp	sl, lr
9000fd7a:	4650      	mov	r0, sl
9000fd7c:	bfb8      	it	lt
9000fd7e:	4670      	movlt	r0, lr
9000fd80:	9009      	str	r0, [sp, #36]	; 0x24
9000fd82:	6968      	ldr	r0, [r5, #20]
9000fd84:	4484      	add	ip, r0
9000fd86:	9806      	ldr	r0, [sp, #24]
9000fd88:	ebac 0c00 	sub.w	ip, ip, r0
9000fd8c:	458c      	cmp	ip, r1
9000fd8e:	4660      	mov	r0, ip
9000fd90:	bfa8      	it	ge
9000fd92:	4608      	movge	r0, r1
9000fd94:	900a      	str	r0, [sp, #40]	; 0x28
9000fd96:	69a8      	ldr	r0, [r5, #24]
9000fd98:	4407      	add	r7, r0
9000fd9a:	9807      	ldr	r0, [sp, #28]
9000fd9c:	1a38      	subs	r0, r7, r0
9000fd9e:	4298      	cmp	r0, r3
9000fda0:	4607      	mov	r7, r0
9000fda2:	bfa8      	it	ge
9000fda4:	461f      	movge	r7, r3
9000fda6:	454a      	cmp	r2, r9
9000fda8:	dc08      	bgt.n	9000fdbc <EwCopyBitmap+0x2e4>
9000fdaa:	458c      	cmp	ip, r1
9000fdac:	db06      	blt.n	9000fdbc <EwCopyBitmap+0x2e4>
9000fdae:	45f2      	cmp	sl, lr
9000fdb0:	dc04      	bgt.n	9000fdbc <EwCopyBitmap+0x2e4>
9000fdb2:	9a03      	ldr	r2, [sp, #12]
9000fdb4:	4298      	cmp	r0, r3
9000fdb6:	bfa8      	it	ge
9000fdb8:	2200      	movge	r2, #0
9000fdba:	9203      	str	r2, [sp, #12]
9000fdbc:	9b03      	ldr	r3, [sp, #12]
9000fdbe:	3b00      	subs	r3, #0
9000fdc0:	bf18      	it	ne
9000fdc2:	2301      	movne	r3, #1
9000fdc4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
9000fdc8:	80f2      	strh	r2, [r6, #6]
9000fdca:	9a05      	ldr	r2, [sp, #20]
9000fdcc:	4593      	cmp	fp, r2
9000fdce:	9a01      	ldr	r2, [sp, #4]
9000fdd0:	d04f      	beq.n	9000fe72 <EwCopyBitmap+0x39a>
9000fdd2:	9902      	ldr	r1, [sp, #8]
9000fdd4:	428a      	cmp	r2, r1
9000fdd6:	d051      	beq.n	9000fe7c <EwCopyBitmap+0x3a4>
9000fdd8:	4593      	cmp	fp, r2
9000fdda:	d14f      	bne.n	9000fe7c <EwCopyBitmap+0x3a4>
9000fddc:	9a05      	ldr	r2, [sp, #20]
9000fdde:	428a      	cmp	r2, r1
9000fde0:	d14c      	bne.n	9000fe7c <EwCopyBitmap+0x3a4>
9000fde2:	f443 7383 	orr.w	r3, r3, #262	; 0x106
9000fde6:	80f3      	strh	r3, [r6, #6]
9000fde8:	9b03      	ldr	r3, [sp, #12]
9000fdea:	b34b      	cbz	r3, 9000fe40 <EwCopyBitmap+0x368>
9000fdec:	9b05      	ldr	r3, [sp, #20]
9000fdee:	ea0b 0003 	and.w	r0, fp, r3
9000fdf2:	9b01      	ldr	r3, [sp, #4]
9000fdf4:	4018      	ands	r0, r3
9000fdf6:	9b02      	ldr	r3, [sp, #8]
9000fdf8:	ea00 0b03 	and.w	fp, r0, r3
9000fdfc:	ea4f 6b1b 	mov.w	fp, fp, lsr #24
9000fe00:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9000fe04:	d11c      	bne.n	9000fe40 <EwCopyBitmap+0x368>
9000fe06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000fe08:	9a08      	ldr	r2, [sp, #32]
9000fe0a:	1a9b      	subs	r3, r3, r2
9000fe0c:	2b0f      	cmp	r3, #15
9000fe0e:	dd17      	ble.n	9000fe40 <EwCopyBitmap+0x368>
9000fe10:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000fe12:	1afb      	subs	r3, r7, r3
9000fe14:	2b0f      	cmp	r3, #15
9000fe16:	dd13      	ble.n	9000fe40 <EwCopyBitmap+0x368>
9000fe18:	2100      	movs	r1, #0
9000fe1a:	4640      	mov	r0, r8
9000fe1c:	f007 fda8 	bl	90017970 <EwAllocTask>
9000fe20:	2302      	movs	r3, #2
9000fe22:	6104      	str	r4, [r0, #16]
9000fe24:	8083      	strh	r3, [r0, #4]
9000fe26:	9b08      	ldr	r3, [sp, #32]
9000fe28:	81c7      	strh	r7, [r0, #14]
9000fe2a:	8103      	strh	r3, [r0, #8]
9000fe2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9000fe2e:	8143      	strh	r3, [r0, #10]
9000fe30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000fe32:	8183      	strh	r3, [r0, #12]
9000fe34:	88f3      	ldrh	r3, [r6, #6]
9000fe36:	f023 0301 	bic.w	r3, r3, #1
9000fe3a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
9000fe3e:	80c3      	strh	r3, [r0, #6]
9000fe40:	682a      	ldr	r2, [r5, #0]
9000fe42:	6893      	ldr	r3, [r2, #8]
9000fe44:	3b01      	subs	r3, #1
9000fe46:	6093      	str	r3, [r2, #8]
9000fe48:	9b04      	ldr	r3, [sp, #16]
9000fe4a:	6818      	ldr	r0, [r3, #0]
9000fe4c:	b00f      	add	sp, #60	; 0x3c
9000fe4e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fe52:	f007 be35 	b.w	90017ac0 <EwDoneIssue>
9000fe56:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
9000fe5a:	e7c0      	b.n	9000fdde <EwCopyBitmap+0x306>
9000fe5c:	682a      	ldr	r2, [r5, #0]
9000fe5e:	f9b2 2020 	ldrsh.w	r2, [r2, #32]
9000fe62:	2a02      	cmp	r2, #2
9000fe64:	d002      	beq.n	9000fe6c <EwCopyBitmap+0x394>
9000fe66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9000fe68:	2aff      	cmp	r2, #255	; 0xff
9000fe6a:	d0bd      	beq.n	9000fde8 <EwCopyBitmap+0x310>
9000fe6c:	f443 7381 	orr.w	r3, r3, #258	; 0x102
9000fe70:	e7b9      	b.n	9000fde6 <EwCopyBitmap+0x30e>
9000fe72:	4593      	cmp	fp, r2
9000fe74:	d105      	bne.n	9000fe82 <EwCopyBitmap+0x3aa>
9000fe76:	9a02      	ldr	r2, [sp, #8]
9000fe78:	4593      	cmp	fp, r2
9000fe7a:	d0ef      	beq.n	9000fe5c <EwCopyBitmap+0x384>
9000fe7c:	f443 7382 	orr.w	r3, r3, #260	; 0x104
9000fe80:	e7b1      	b.n	9000fde6 <EwCopyBitmap+0x30e>
9000fe82:	9a02      	ldr	r2, [sp, #8]
9000fe84:	4593      	cmp	fp, r2
9000fe86:	d1e6      	bne.n	9000fe56 <EwCopyBitmap+0x37e>
9000fe88:	9a01      	ldr	r2, [sp, #4]
9000fe8a:	455a      	cmp	r2, fp
9000fe8c:	e7f5      	b.n	9000fe7a <EwCopyBitmap+0x3a2>
9000fe8e:	b00f      	add	sp, #60	; 0x3c
9000fe90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9000fe94 <EwEndUpdate>:
9000fe94:	b084      	sub	sp, #16
9000fe96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fe9a:	b0e1      	sub	sp, #388	; 0x184
9000fe9c:	4604      	mov	r4, r0
9000fe9e:	ad6b      	add	r5, sp, #428	; 0x1ac
9000fea0:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9000fea4:	b110      	cbz	r0, 9000feac <EwEndUpdate+0x18>
9000fea6:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000feaa:	b943      	cbnz	r3, 9000febe <EwEndUpdate+0x2a>
9000feac:	2200      	movs	r2, #0
9000feae:	4621      	mov	r1, r4
9000feb0:	2099      	movs	r0, #153	; 0x99
9000feb2:	b061      	add	sp, #388	; 0x184
9000feb4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000feb8:	b004      	add	sp, #16
9000feba:	f00d badf 	b.w	9001d47c <EwErrorPD>
9000febe:	f100 0a90 	add.w	sl, r0, #144	; 0x90
9000fec2:	ae01      	add	r6, sp, #4
9000fec4:	4fbe      	ldr	r7, [pc, #760]	; (900101c0 <EwEndUpdate+0x32c>)
9000fec6:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
9000feca:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9000fece:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
9000fed0:	4628      	mov	r0, r5
9000fed2:	9300      	str	r3, [sp, #0]
9000fed4:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000fed8:	f00e fc54 	bl	9001e784 <EwIntersectRect>
9000fedc:	9b6b      	ldr	r3, [sp, #428]	; 0x1ac
9000fede:	9310      	str	r3, [sp, #64]	; 0x40
9000fee0:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
9000fee2:	9311      	str	r3, [sp, #68]	; 0x44
9000fee4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
9000fee6:	2b00      	cmp	r3, #0
9000fee8:	d061      	beq.n	9000ffae <EwEndUpdate+0x11a>
9000feea:	69fb      	ldr	r3, [r7, #28]
9000feec:	2b00      	cmp	r3, #0
9000feee:	d05e      	beq.n	9000ffae <EwEndUpdate+0x11a>
9000fef0:	f897 2040 	ldrb.w	r2, [r7, #64]	; 0x40
9000fef4:	f04f 0800 	mov.w	r8, #0
9000fef8:	f10d 0bdc 	add.w	fp, sp, #220	; 0xdc
9000fefc:	23dc      	movs	r3, #220	; 0xdc
9000fefe:	4611      	mov	r1, r2
9000ff00:	4610      	mov	r0, r2
9000ff02:	f10d 09f8 	add.w	r9, sp, #248	; 0xf8
9000ff06:	e9cd 8830 	strd	r8, r8, [sp, #192]	; 0xc0
9000ff0a:	f00c fccd 	bl	9001c8a8 <EwNewColor>
9000ff0e:	902c      	str	r0, [sp, #176]	; 0xb0
9000ff10:	4658      	mov	r0, fp
9000ff12:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	; 0x38
9000ff16:	f00e fb3b 	bl	9001e590 <EwNewPoint>
9000ff1a:	2333      	movs	r3, #51	; 0x33
9000ff1c:	4648      	mov	r0, r9
9000ff1e:	4642      	mov	r2, r8
9000ff20:	4641      	mov	r1, r8
9000ff22:	9300      	str	r3, [sp, #0]
9000ff24:	2390      	movs	r3, #144	; 0x90
9000ff26:	f00e fba9 	bl	9001e67c <EwNewRect>
9000ff2a:	e89b 0003 	ldmia.w	fp, {r0, r1}
9000ff2e:	e886 0003 	stmia.w	r6, {r0, r1}
9000ff32:	9b41      	ldr	r3, [sp, #260]	; 0x104
9000ff34:	a84a      	add	r0, sp, #296	; 0x128
9000ff36:	9300      	str	r3, [sp, #0]
9000ff38:	e899 000e 	ldmia.w	r9, {r1, r2, r3}
9000ff3c:	f00e fcff 	bl	9001e93e <EwMoveRectPos>
9000ff40:	f8d7 b02c 	ldr.w	fp, [r7, #44]	; 0x2c
9000ff44:	af14      	add	r7, sp, #80	; 0x50
9000ff46:	f10d 0960 	add.w	r9, sp, #96	; 0x60
9000ff4a:	e89a 0003 	ldmia.w	sl, {r0, r1}
9000ff4e:	e886 0003 	stmia.w	r6, {r0, r1}
9000ff52:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
9000ff54:	4638      	mov	r0, r7
9000ff56:	9300      	str	r3, [sp, #0]
9000ff58:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000ff5c:	f00e fcd9 	bl	9001e912 <EwMoveRectNeg>
9000ff60:	e89a 0003 	ldmia.w	sl, {r0, r1}
9000ff64:	e886 0003 	stmia.w	r6, {r0, r1}
9000ff68:	9b4d      	ldr	r3, [sp, #308]	; 0x134
9000ff6a:	4648      	mov	r0, r9
9000ff6c:	ae04      	add	r6, sp, #16
9000ff6e:	9300      	str	r3, [sp, #0]
9000ff70:	ab4a      	add	r3, sp, #296	; 0x128
9000ff72:	cb0e      	ldmia	r3, {r1, r2, r3}
9000ff74:	f00e fccd 	bl	9001e912 <EwMoveRectNeg>
9000ff78:	2301      	movs	r3, #1
9000ff7a:	930e      	str	r3, [sp, #56]	; 0x38
9000ff7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9000ff7e:	e9dd 0130 	ldrd	r0, r1, [sp, #192]	; 0xc0
9000ff82:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
9000ff86:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
9000ff8a:	ab08      	add	r3, sp, #32
9000ff8c:	e883 0003 	stmia.w	r3, {r0, r1}
9000ff90:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
9000ff94:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9000ff98:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000ff9c:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
9000ffa0:	4643      	mov	r3, r8
9000ffa2:	4642      	mov	r2, r8
9000ffa4:	4659      	mov	r1, fp
9000ffa6:	f104 0008 	add.w	r0, r4, #8
9000ffaa:	f7ff fd95 	bl	9000fad8 <EwCopyBitmap>
9000ffae:	f8df 8210 	ldr.w	r8, [pc, #528]	; 900101c0 <EwEndUpdate+0x32c>
9000ffb2:	2100      	movs	r1, #0
9000ffb4:	f104 0054 	add.w	r0, r4, #84	; 0x54
9000ffb8:	f007 fdac 	bl	90017b14 <EwWaitForSurface>
9000ffbc:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
9000ffc0:	2b00      	cmp	r3, #0
9000ffc2:	f000 80b0 	beq.w	90010126 <EwEndUpdate+0x292>
9000ffc6:	f8d8 901c 	ldr.w	r9, [r8, #28]
9000ffca:	f1b9 0f00 	cmp.w	r9, #0
9000ffce:	f040 80aa 	bne.w	90010126 <EwEndUpdate+0x292>
9000ffd2:	ae01      	add	r6, sp, #4
9000ffd4:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
9000ffd8:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
9000ffdc:	e9d4 0124 	ldrd	r0, r1, [r4, #144]	; 0x90
9000ffe0:	e886 0003 	stmia.w	r6, {r0, r1}
9000ffe4:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
9000ffe6:	4650      	mov	r0, sl
9000ffe8:	9300      	str	r3, [sp, #0]
9000ffea:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9000ffee:	f00e fc90 	bl	9001e912 <EwMoveRectNeg>
9000fff2:	ad20      	add	r5, sp, #128	; 0x80
9000fff4:	6aa7      	ldr	r7, [r4, #40]	; 0x28
9000fff6:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
9000fffa:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9000fffe:	f8d8 003c 	ldr.w	r0, [r8, #60]	; 0x3c
90010002:	f10d 0a90 	add.w	sl, sp, #144	; 0x90
90010006:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
9001000a:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
9001000e:	f8d8 1038 	ldr.w	r1, [r8, #56]	; 0x38
90010012:	1a82      	subs	r2, r0, r2
90010014:	4658      	mov	r0, fp
90010016:	1ac9      	subs	r1, r1, r3
90010018:	683f      	ldr	r7, [r7, #0]
9001001a:	f00e fab9 	bl	9001e590 <EwNewPoint>
9001001e:	2333      	movs	r3, #51	; 0x33
90010020:	464a      	mov	r2, r9
90010022:	4649      	mov	r1, r9
90010024:	4650      	mov	r0, sl
90010026:	9300      	str	r3, [sp, #0]
90010028:	2390      	movs	r3, #144	; 0x90
9001002a:	f10d 09a0 	add.w	r9, sp, #160	; 0xa0
9001002e:	f00e fb25 	bl	9001e67c <EwNewRect>
90010032:	e89b 0003 	ldmia.w	fp, {r0, r1}
90010036:	e886 0003 	stmia.w	r6, {r0, r1}
9001003a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001003c:	4648      	mov	r0, r9
9001003e:	9300      	str	r3, [sp, #0]
90010040:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
90010044:	f00e fc7b 	bl	9001e93e <EwMoveRectPos>
90010048:	f10d 0ab0 	add.w	sl, sp, #176	; 0xb0
9001004c:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
90010050:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90010054:	68eb      	ldr	r3, [r5, #12]
90010056:	4650      	mov	r0, sl
90010058:	9300      	str	r3, [sp, #0]
9001005a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9001005e:	f00e fb91 	bl	9001e784 <EwIntersectRect>
90010062:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
90010066:	e9dd 962c 	ldrd	r9, r6, [sp, #176]	; 0xb0
9001006a:	f00e fb65 	bl	9001e738 <EwIsRectEmpty>
9001006e:	4682      	mov	sl, r0
90010070:	2800      	cmp	r0, #0
90010072:	d158      	bne.n	90010126 <EwEndUpdate+0x292>
90010074:	f44f 7280 	mov.w	r2, #256	; 0x100
90010078:	2183      	movs	r1, #131	; 0x83
9001007a:	ad3e      	add	r5, sp, #248	; 0xf8
9001007c:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	; 0x22
90010080:	9001      	str	r0, [sp, #4]
90010082:	9504      	str	r5, [sp, #16]
90010084:	e9cd 2102 	strd	r2, r1, [sp, #8]
90010088:	f9b7 2024 	ldrsh.w	r2, [r7, #36]	; 0x24
9001008c:	4601      	mov	r1, r0
9001008e:	9200      	str	r2, [sp, #0]
90010090:	4602      	mov	r2, r0
90010092:	4638      	mov	r0, r7
90010094:	f007 fd60 	bl	90017b58 <EwLockSurface>
90010098:	2800      	cmp	r0, #0
9001009a:	f000 808d 	beq.w	900101b8 <EwEndUpdate+0x324>
9001009e:	f10d 0cc0 	add.w	ip, sp, #192	; 0xc0
900100a2:	f8cd a0f4 	str.w	sl, [sp, #244]	; 0xf4
900100a6:	f8cd a0e8 	str.w	sl, [sp, #232]	; 0xe8
900100aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900100ac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900100b0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900100b4:	2390      	movs	r3, #144	; 0x90
900100b6:	f108 054c 	add.w	r5, r8, #76	; 0x4c
900100ba:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
900100be:	2201      	movs	r2, #1
900100c0:	e9cd 2338 	strd	r2, r3, [sp, #224]	; 0xe0
900100c4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
900100c6:	9a32      	ldr	r2, [sp, #200]	; 0xc8
900100c8:	fb03 f309 	mul.w	r3, r3, r9
900100cc:	fb02 3306 	mla	r3, r2, r6, r3
900100d0:	9a30      	ldr	r2, [sp, #192]	; 0xc0
900100d2:	4413      	add	r3, r2
900100d4:	9a33      	ldr	r2, [sp, #204]	; 0xcc
900100d6:	9330      	str	r3, [sp, #192]	; 0xc0
900100d8:	fb00 f309 	mul.w	r3, r0, r9
900100dc:	fb01 3306 	mla	r3, r1, r6, r3
900100e0:	4413      	add	r3, r2
900100e2:	9333      	str	r3, [sp, #204]	; 0xcc
900100e4:	e9dd 322e 	ldrd	r3, r2, [sp, #184]	; 0xb8
900100e8:	e9cd aa3b 	strd	sl, sl, [sp, #236]	; 0xec
900100ec:	eba3 0a09 	sub.w	sl, r3, r9
900100f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900100f2:	1b96      	subs	r6, r2, r6
900100f4:	eba9 0903 	sub.w	r9, r9, r3
900100f8:	eb05 0309 	add.w	r3, r5, r9
900100fc:	9337      	str	r3, [sp, #220]	; 0xdc
900100fe:	f898 3040 	ldrb.w	r3, [r8, #64]	; 0x40
90010102:	051b      	lsls	r3, r3, #20
90010104:	934a      	str	r3, [sp, #296]	; 0x128
90010106:	934e      	str	r3, [sp, #312]	; 0x138
90010108:	9352      	str	r3, [sp, #328]	; 0x148
9001010a:	f04f 635c 	mov.w	r3, #230686720	; 0xdc00000
9001010e:	9356      	str	r3, [sp, #344]	; 0x158
90010110:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90010112:	eba2 0803 	sub.w	r8, r2, r3
90010116:	2e00      	cmp	r6, #0
90010118:	eba8 0106 	sub.w	r1, r8, r6
9001011c:	dc39      	bgt.n	90010192 <EwEndUpdate+0x2fe>
9001011e:	a93e      	add	r1, sp, #248	; 0xf8
90010120:	4638      	mov	r0, r7
90010122:	f007 f9c7 	bl	900174b4 <EwUnlockSurface>
90010126:	9a11      	ldr	r2, [sp, #68]	; 0x44
90010128:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
9001012a:	1a9b      	subs	r3, r3, r2
9001012c:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001012e:	9300      	str	r3, [sp, #0]
90010130:	9b6d      	ldr	r3, [sp, #436]	; 0x1b4
90010132:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
90010136:	1a9b      	subs	r3, r3, r2
90010138:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
9001013c:	f016 f9aa 	bl	90026494 <GfxEndUpdate>
90010140:	f8d4 60a4 	ldr.w	r6, [r4, #164]	; 0xa4
90010144:	b16e      	cbz	r6, 90010162 <EwEndUpdate+0x2ce>
90010146:	ab6b      	add	r3, sp, #428	; 0x1ac
90010148:	ad01      	add	r5, sp, #4
9001014a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001014c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90010150:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
90010154:	4620      	mov	r0, r4
90010156:	9300      	str	r3, [sp, #0]
90010158:	f8d4 10b4 	ldr.w	r1, [r4, #180]	; 0xb4
9001015c:	e9d4 232a 	ldrd	r2, r3, [r4, #168]	; 0xa8
90010160:	47b0      	blx	r6
90010162:	2300      	movs	r3, #0
90010164:	4a16      	ldr	r2, [pc, #88]	; (900101c0 <EwEndUpdate+0x32c>)
90010166:	e9c4 3303 	strd	r3, r3, [r4, #12]
9001016a:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
9001016e:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
90010172:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
90010176:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
9001017a:	e9c4 3323 	strd	r3, r3, [r4, #140]	; 0x8c
9001017e:	e9c4 3325 	strd	r3, r3, [r4, #148]	; 0x94
90010182:	6a13      	ldr	r3, [r2, #32]
90010184:	3301      	adds	r3, #1
90010186:	6213      	str	r3, [r2, #32]
90010188:	b061      	add	sp, #388	; 0x184
9001018a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001018e:	b004      	add	sp, #16
90010190:	4770      	bx	lr
90010192:	4628      	mov	r0, r5
90010194:	3e01      	subs	r6, #1
90010196:	f7fa fc0d 	bl	9000a9b4 <EwScreenWarpRGB565RowFilterSolidBlend+0x4>
9001019a:	ab4a      	add	r3, sp, #296	; 0x128
9001019c:	4652      	mov	r2, sl
9001019e:	a937      	add	r1, sp, #220	; 0xdc
900101a0:	a830      	add	r0, sp, #192	; 0xc0
900101a2:	f7f8 f95b 	bl	9000845c <EwScreenCopyAlpha8RowSolidBlend>
900101a6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900101a8:	9a32      	ldr	r2, [sp, #200]	; 0xc8
900101aa:	4413      	add	r3, r2
900101ac:	9a35      	ldr	r2, [sp, #212]	; 0xd4
900101ae:	9330      	str	r3, [sp, #192]	; 0xc0
900101b0:	9b33      	ldr	r3, [sp, #204]	; 0xcc
900101b2:	4413      	add	r3, r2
900101b4:	9333      	str	r3, [sp, #204]	; 0xcc
900101b6:	e7ae      	b.n	90010116 <EwEndUpdate+0x282>
900101b8:	2301      	movs	r3, #1
900101ba:	f8c8 301c 	str.w	r3, [r8, #28]
900101be:	e7b2      	b.n	90010126 <EwEndUpdate+0x292>
900101c0:	200000c8 	.word	0x200000c8

900101c4 <EwDoneViewport>:
900101c4:	b530      	push	{r4, r5, lr}
900101c6:	4604      	mov	r4, r0
900101c8:	b087      	sub	sp, #28
900101ca:	b1e0      	cbz	r0, 90010206 <EwDoneViewport+0x42>
900101cc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
900101d0:	b173      	cbz	r3, 900101f0 <EwDoneViewport+0x2c>
900101d2:	2300      	movs	r3, #0
900101d4:	ad02      	add	r5, sp, #8
900101d6:	461a      	mov	r2, r3
900101d8:	4619      	mov	r1, r3
900101da:	4628      	mov	r0, r5
900101dc:	9300      	str	r3, [sp, #0]
900101de:	f00e fa4d 	bl	9001e67c <EwNewRect>
900101e2:	9b05      	ldr	r3, [sp, #20]
900101e4:	4620      	mov	r0, r4
900101e6:	9300      	str	r3, [sp, #0]
900101e8:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
900101ec:	f7ff fe52 	bl	9000fe94 <EwEndUpdate>
900101f0:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
900101f4:	f016 f908 	bl	90026408 <GfxDoneViewport>
900101f8:	4620      	mov	r0, r4
900101fa:	f016 fd5d 	bl	90026cb8 <EwFree>
900101fe:	4a03      	ldr	r2, [pc, #12]	; (9001020c <EwDoneViewport+0x48>)
90010200:	6813      	ldr	r3, [r2, #0]
90010202:	3bb8      	subs	r3, #184	; 0xb8
90010204:	6013      	str	r3, [r2, #0]
90010206:	b007      	add	sp, #28
90010208:	bd30      	pop	{r4, r5, pc}
9001020a:	bf00      	nop
9001020c:	200002bc 	.word	0x200002bc

90010210 <EwConfigViewport>:
90010210:	b530      	push	{r4, r5, lr}
90010212:	b089      	sub	sp, #36	; 0x24
90010214:	4604      	mov	r4, r0
90010216:	ab02      	add	r3, sp, #8
90010218:	e883 0006 	stmia.w	r3, {r1, r2}
9001021c:	b188      	cbz	r0, 90010242 <EwConfigViewport+0x32>
9001021e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
90010222:	b173      	cbz	r3, 90010242 <EwConfigViewport+0x32>
90010224:	2300      	movs	r3, #0
90010226:	ad04      	add	r5, sp, #16
90010228:	461a      	mov	r2, r3
9001022a:	4619      	mov	r1, r3
9001022c:	4628      	mov	r0, r5
9001022e:	9300      	str	r3, [sp, #0]
90010230:	f00e fa24 	bl	9001e67c <EwNewRect>
90010234:	9b07      	ldr	r3, [sp, #28]
90010236:	4620      	mov	r0, r4
90010238:	9300      	str	r3, [sp, #0]
9001023a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9001023e:	f7ff fe29 	bl	9000fe94 <EwEndUpdate>
90010242:	2000      	movs	r0, #0
90010244:	b009      	add	sp, #36	; 0x24
90010246:	bd30      	pop	{r4, r5, pc}

90010248 <EwTileBitmap>:
90010248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001024c:	b093      	sub	sp, #76	; 0x4c
9001024e:	469a      	mov	sl, r3
90010250:	4688      	mov	r8, r1
90010252:	4611      	mov	r1, r2
90010254:	f89d 30b8 	ldrb.w	r3, [sp, #184]	; 0xb8
90010258:	4691      	mov	r9, r2
9001025a:	4607      	mov	r7, r0
9001025c:	9300      	str	r3, [sp, #0]
9001025e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90010260:	9307      	str	r3, [sp, #28]
90010262:	9b21      	ldr	r3, [sp, #132]	; 0x84
90010264:	930c      	str	r3, [sp, #48]	; 0x30
90010266:	9b22      	ldr	r3, [sp, #136]	; 0x88
90010268:	9309      	str	r3, [sp, #36]	; 0x24
9001026a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001026c:	930d      	str	r3, [sp, #52]	; 0x34
9001026e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90010270:	9302      	str	r3, [sp, #8]
90010272:	9b25      	ldr	r3, [sp, #148]	; 0x94
90010274:	930f      	str	r3, [sp, #60]	; 0x3c
90010276:	9b26      	ldr	r3, [sp, #152]	; 0x98
90010278:	930e      	str	r3, [sp, #56]	; 0x38
9001027a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001027c:	9310      	str	r3, [sp, #64]	; 0x40
9001027e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90010280:	9305      	str	r3, [sp, #20]
90010282:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90010284:	9306      	str	r3, [sp, #24]
90010286:	f89d 30ab 	ldrb.w	r3, [sp, #171]	; 0xab
9001028a:	930b      	str	r3, [sp, #44]	; 0x2c
9001028c:	f7fb fc2e 	bl	9000baec <UpdateWatermark1+0x6c>
90010290:	4651      	mov	r1, sl
90010292:	4683      	mov	fp, r0
90010294:	4640      	mov	r0, r8
90010296:	f7fb fc29 	bl	9000baec <UpdateWatermark1+0x6c>
9001029a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001029c:	f89d 20aa 	ldrb.w	r2, [sp, #170]	; 0xaa
900102a0:	4604      	mov	r4, r0
900102a2:	f89d 10a9 	ldrb.w	r1, [sp, #169]	; 0xa9
900102a6:	f89d 00a8 	ldrb.w	r0, [sp, #168]	; 0xa8
900102aa:	f7f4 fd22 	bl	90004cf2 <EwPackColor>
900102ae:	f89d 30af 	ldrb.w	r3, [sp, #175]	; 0xaf
900102b2:	f89d 20ae 	ldrb.w	r2, [sp, #174]	; 0xae
900102b6:	4605      	mov	r5, r0
900102b8:	f89d 10ad 	ldrb.w	r1, [sp, #173]	; 0xad
900102bc:	f89d 00ac 	ldrb.w	r0, [sp, #172]	; 0xac
900102c0:	f7f4 fd17 	bl	90004cf2 <EwPackColor>
900102c4:	f89d 30b7 	ldrb.w	r3, [sp, #183]	; 0xb7
900102c8:	f89d 20b6 	ldrb.w	r2, [sp, #182]	; 0xb6
900102cc:	f89d 10b5 	ldrb.w	r1, [sp, #181]	; 0xb5
900102d0:	9001      	str	r0, [sp, #4]
900102d2:	f89d 00b4 	ldrb.w	r0, [sp, #180]	; 0xb4
900102d6:	f7f4 fd0c 	bl	90004cf2 <EwPackColor>
900102da:	f89d 30b3 	ldrb.w	r3, [sp, #179]	; 0xb3
900102de:	4606      	mov	r6, r0
900102e0:	f89d 20b2 	ldrb.w	r2, [sp, #178]	; 0xb2
900102e4:	f89d 10b1 	ldrb.w	r1, [sp, #177]	; 0xb1
900102e8:	f89d 00b0 	ldrb.w	r0, [sp, #176]	; 0xb0
900102ec:	f7f4 fd01 	bl	90004cf2 <EwPackColor>
900102f0:	4603      	mov	r3, r0
900102f2:	f1bb 0f00 	cmp.w	fp, #0
900102f6:	d006      	beq.n	90010306 <EwTileBitmap+0xbe>
900102f8:	f8db 1000 	ldr.w	r1, [fp]
900102fc:	8c0a      	ldrh	r2, [r1, #32]
900102fe:	3201      	adds	r2, #1
90010300:	b292      	uxth	r2, r2
90010302:	2a01      	cmp	r2, #1
90010304:	d907      	bls.n	90010316 <EwTileBitmap+0xce>
90010306:	464a      	mov	r2, r9
90010308:	4639      	mov	r1, r7
9001030a:	20a1      	movs	r0, #161	; 0xa1
9001030c:	b013      	add	sp, #76	; 0x4c
9001030e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010312:	f00d b8b3 	b.w	9001d47c <EwErrorPD>
90010316:	698a      	ldr	r2, [r1, #24]
90010318:	b90a      	cbnz	r2, 9001031e <EwTileBitmap+0xd6>
9001031a:	69ca      	ldr	r2, [r1, #28]
9001031c:	b122      	cbz	r2, 90010328 <EwTileBitmap+0xe0>
9001031e:	464a      	mov	r2, r9
90010320:	4639      	mov	r1, r7
90010322:	f240 1059 	movw	r0, #345	; 0x159
90010326:	e7f1      	b.n	9001030c <EwTileBitmap+0xc4>
90010328:	b124      	cbz	r4, 90010334 <EwTileBitmap+0xec>
9001032a:	6820      	ldr	r0, [r4, #0]
9001032c:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
90010330:	1c51      	adds	r1, r2, #1
90010332:	d103      	bne.n	9001033c <EwTileBitmap+0xf4>
90010334:	4652      	mov	r2, sl
90010336:	4641      	mov	r1, r8
90010338:	20a4      	movs	r0, #164	; 0xa4
9001033a:	e7e7      	b.n	9001030c <EwTileBitmap+0xc4>
9001033c:	9900      	ldr	r1, [sp, #0]
9001033e:	b159      	cbz	r1, 90010358 <EwTileBitmap+0x110>
90010340:	2a03      	cmp	r2, #3
90010342:	d109      	bne.n	90010358 <EwTileBitmap+0x110>
90010344:	9a01      	ldr	r2, [sp, #4]
90010346:	402a      	ands	r2, r5
90010348:	4032      	ands	r2, r6
9001034a:	401a      	ands	r2, r3
9001034c:	0e12      	lsrs	r2, r2, #24
9001034e:	2aff      	cmp	r2, #255	; 0xff
90010350:	460a      	mov	r2, r1
90010352:	bf08      	it	eq
90010354:	2200      	moveq	r2, #0
90010356:	9200      	str	r2, [sp, #0]
90010358:	9311      	str	r3, [sp, #68]	; 0x44
9001035a:	f007 fb65 	bl	90017a28 <EwFlushTasks>
9001035e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90010360:	9907      	ldr	r1, [sp, #28]
90010362:	4613      	mov	r3, r2
90010364:	428a      	cmp	r2, r1
90010366:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90010368:	bfb8      	it	lt
9001036a:	460b      	movlt	r3, r1
9001036c:	6879      	ldr	r1, [r7, #4]
9001036e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90010372:	9304      	str	r3, [sp, #16]
90010374:	9b09      	ldr	r3, [sp, #36]	; 0x24
90010376:	429a      	cmp	r2, r3
90010378:	bfa8      	it	ge
9001037a:	461a      	movge	r2, r3
9001037c:	428a      	cmp	r2, r1
9001037e:	4613      	mov	r3, r2
90010380:	9a04      	ldr	r2, [sp, #16]
90010382:	bfa8      	it	ge
90010384:	460b      	movge	r3, r1
90010386:	4293      	cmp	r3, r2
90010388:	9308      	str	r3, [sp, #32]
9001038a:	f340 8108 	ble.w	9001059e <EwTileBitmap+0x356>
9001038e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90010390:	990c      	ldr	r1, [sp, #48]	; 0x30
90010392:	4613      	mov	r3, r2
90010394:	428a      	cmp	r2, r1
90010396:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90010398:	bfb8      	it	lt
9001039a:	460b      	movlt	r3, r1
9001039c:	68b9      	ldr	r1, [r7, #8]
9001039e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900103a2:	9303      	str	r3, [sp, #12]
900103a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900103a6:	429a      	cmp	r2, r3
900103a8:	bfa8      	it	ge
900103aa:	461a      	movge	r2, r3
900103ac:	428a      	cmp	r2, r1
900103ae:	4613      	mov	r3, r2
900103b0:	9a03      	ldr	r2, [sp, #12]
900103b2:	bfa8      	it	ge
900103b4:	460b      	movge	r3, r1
900103b6:	4293      	cmp	r3, r2
900103b8:	930a      	str	r3, [sp, #40]	; 0x28
900103ba:	f340 80f0 	ble.w	9001059e <EwTileBitmap+0x356>
900103be:	9b02      	ldr	r3, [sp, #8]
900103c0:	f8d8 2004 	ldr.w	r2, [r8, #4]
900103c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900103c8:	9302      	str	r3, [sp, #8]
900103ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900103cc:	4293      	cmp	r3, r2
900103ce:	bfa8      	it	ge
900103d0:	4613      	movge	r3, r2
900103d2:	4699      	mov	r9, r3
900103d4:	9b02      	ldr	r3, [sp, #8]
900103d6:	454b      	cmp	r3, r9
900103d8:	f280 80e1 	bge.w	9001059e <EwTileBitmap+0x356>
900103dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900103de:	f8d8 2008 	ldr.w	r2, [r8, #8]
900103e2:	ea23 7ae3 	bic.w	sl, r3, r3, asr #31
900103e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
900103e8:	4293      	cmp	r3, r2
900103ea:	bfa8      	it	ge
900103ec:	4613      	movge	r3, r2
900103ee:	459a      	cmp	sl, r3
900103f0:	4698      	mov	r8, r3
900103f2:	f280 80d4 	bge.w	9001059e <EwTileBitmap+0x356>
900103f6:	9a00      	ldr	r2, [sp, #0]
900103f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
900103fa:	b132      	cbz	r2, 9001040a <EwTileBitmap+0x1c2>
900103fc:	9a01      	ldr	r2, [sp, #4]
900103fe:	432a      	orrs	r2, r5
90010400:	4332      	orrs	r2, r6
90010402:	431a      	orrs	r2, r3
90010404:	0e12      	lsrs	r2, r2, #24
90010406:	f000 80ca 	beq.w	9001059e <EwTileBitmap+0x356>
9001040a:	930e      	str	r3, [sp, #56]	; 0x38
9001040c:	9b02      	ldr	r3, [sp, #8]
9001040e:	f8db 0000 	ldr.w	r0, [fp]
90010412:	eba9 0203 	sub.w	r2, r9, r3
90010416:	9b05      	ldr	r3, [sp, #20]
90010418:	fb93 f1f2 	sdiv	r1, r3, r2
9001041c:	2b00      	cmp	r3, #0
9001041e:	fb02 3111 	mls	r1, r2, r1, r3
90010422:	bfa8      	it	ge
90010424:	2200      	movge	r2, #0
90010426:	188b      	adds	r3, r1, r2
90010428:	eba8 020a 	sub.w	r2, r8, sl
9001042c:	9305      	str	r3, [sp, #20]
9001042e:	9b06      	ldr	r3, [sp, #24]
90010430:	fb93 f1f2 	sdiv	r1, r3, r2
90010434:	2b00      	cmp	r3, #0
90010436:	fb02 3111 	mls	r1, r2, r1, r3
9001043a:	bfa8      	it	ge
9001043c:	2200      	movge	r2, #0
9001043e:	188b      	adds	r3, r1, r2
90010440:	6822      	ldr	r2, [r4, #0]
90010442:	6891      	ldr	r1, [r2, #8]
90010444:	9306      	str	r3, [sp, #24]
90010446:	3101      	adds	r1, #1
90010448:	6091      	str	r1, [r2, #8]
9001044a:	68d1      	ldr	r1, [r2, #12]
9001044c:	3101      	adds	r1, #1
9001044e:	60d1      	str	r1, [r2, #12]
90010450:	f007 fa26 	bl	900178a0 <EwInitIssue>
90010454:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90010456:	4602      	mov	r2, r0
90010458:	b948      	cbnz	r0, 9001046e <EwTileBitmap+0x226>
9001045a:	6823      	ldr	r3, [r4, #0]
9001045c:	2080      	movs	r0, #128	; 0x80
9001045e:	6899      	ldr	r1, [r3, #8]
90010460:	3901      	subs	r1, #1
90010462:	6099      	str	r1, [r3, #8]
90010464:	68d9      	ldr	r1, [r3, #12]
90010466:	3901      	subs	r1, #1
90010468:	60d9      	str	r1, [r3, #12]
9001046a:	4639      	mov	r1, r7
9001046c:	e74e      	b.n	9001030c <EwTileBitmap+0xc4>
9001046e:	2128      	movs	r1, #40	; 0x28
90010470:	e9cd 300e 	strd	r3, r0, [sp, #56]	; 0x38
90010474:	f007 fab5 	bl	900179e2 <EwAllocTaskData>
90010478:	9b07      	ldr	r3, [sp, #28]
9001047a:	4607      	mov	r7, r0
9001047c:	f8bb 0004 	ldrh.w	r0, [fp, #4]
90010480:	f8bb 1008 	ldrh.w	r1, [fp, #8]
90010484:	4403      	add	r3, r0
90010486:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90010488:	803b      	strh	r3, [r7, #0]
9001048a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001048c:	440b      	add	r3, r1
9001048e:	807b      	strh	r3, [r7, #2]
90010490:	9b09      	ldr	r3, [sp, #36]	; 0x24
90010492:	4418      	add	r0, r3
90010494:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90010496:	80b8      	strh	r0, [r7, #4]
90010498:	4419      	add	r1, r3
9001049a:	88a0      	ldrh	r0, [r4, #4]
9001049c:	9b02      	ldr	r3, [sp, #8]
9001049e:	80f9      	strh	r1, [r7, #6]
900104a0:	18c1      	adds	r1, r0, r3
900104a2:	9b05      	ldr	r3, [sp, #20]
900104a4:	4448      	add	r0, r9
900104a6:	8139      	strh	r1, [r7, #8]
900104a8:	8921      	ldrh	r1, [r4, #8]
900104aa:	823b      	strh	r3, [r7, #16]
900104ac:	9b06      	ldr	r3, [sp, #24]
900104ae:	eb01 0c0a 	add.w	ip, r1, sl
900104b2:	4441      	add	r1, r8
900104b4:	81b8      	strh	r0, [r7, #12]
900104b6:	827b      	strh	r3, [r7, #18]
900104b8:	4610      	mov	r0, r2
900104ba:	9b01      	ldr	r3, [sp, #4]
900104bc:	81f9      	strh	r1, [r7, #14]
900104be:	6821      	ldr	r1, [r4, #0]
900104c0:	61fb      	str	r3, [r7, #28]
900104c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900104c4:	f8a7 c00a 	strh.w	ip, [r7, #10]
900104c8:	623b      	str	r3, [r7, #32]
900104ca:	627e      	str	r6, [r7, #36]	; 0x24
900104cc:	9305      	str	r3, [sp, #20]
900104ce:	e9c7 1505 	strd	r1, r5, [r7, #20]
900104d2:	2100      	movs	r1, #0
900104d4:	f007 fa4c 	bl	90017970 <EwAllocTask>
900104d8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
900104dc:	9b04      	ldr	r3, [sp, #16]
900104de:	2203      	movs	r2, #3
900104e0:	6107      	str	r7, [r0, #16]
900104e2:	440b      	add	r3, r1
900104e4:	f8bb 7008 	ldrh.w	r7, [fp, #8]
900104e8:	8082      	strh	r2, [r0, #4]
900104ea:	8103      	strh	r3, [r0, #8]
900104ec:	9b03      	ldr	r3, [sp, #12]
900104ee:	9a00      	ldr	r2, [sp, #0]
900104f0:	443b      	add	r3, r7
900104f2:	8143      	strh	r3, [r0, #10]
900104f4:	9b08      	ldr	r3, [sp, #32]
900104f6:	4419      	add	r1, r3
900104f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900104fa:	441f      	add	r7, r3
900104fc:	8181      	strh	r1, [r0, #12]
900104fe:	9b05      	ldr	r3, [sp, #20]
90010500:	81c7      	strh	r7, [r0, #14]
90010502:	b1b2      	cbz	r2, 90010532 <EwTileBitmap+0x2ea>
90010504:	9a01      	ldr	r2, [sp, #4]
90010506:	402a      	ands	r2, r5
90010508:	4032      	ands	r2, r6
9001050a:	401a      	ands	r2, r3
9001050c:	0e12      	lsrs	r2, r2, #24
9001050e:	2aff      	cmp	r2, #255	; 0xff
90010510:	d10f      	bne.n	90010532 <EwTileBitmap+0x2ea>
90010512:	68e2      	ldr	r2, [r4, #12]
90010514:	9902      	ldr	r1, [sp, #8]
90010516:	4291      	cmp	r1, r2
90010518:	db0b      	blt.n	90010532 <EwTileBitmap+0x2ea>
9001051a:	6922      	ldr	r2, [r4, #16]
9001051c:	4592      	cmp	sl, r2
9001051e:	db08      	blt.n	90010532 <EwTileBitmap+0x2ea>
90010520:	6962      	ldr	r2, [r4, #20]
90010522:	4591      	cmp	r9, r2
90010524:	dc05      	bgt.n	90010532 <EwTileBitmap+0x2ea>
90010526:	9900      	ldr	r1, [sp, #0]
90010528:	69a2      	ldr	r2, [r4, #24]
9001052a:	4590      	cmp	r8, r2
9001052c:	bfd8      	it	le
9001052e:	2100      	movle	r1, #0
90010530:	9100      	str	r1, [sp, #0]
90010532:	9a00      	ldr	r2, [sp, #0]
90010534:	3a00      	subs	r2, #0
90010536:	bf18      	it	ne
90010538:	2201      	movne	r2, #1
9001053a:	f442 7180 	orr.w	r1, r2, #256	; 0x100
9001053e:	80c1      	strh	r1, [r0, #6]
90010540:	9901      	ldr	r1, [sp, #4]
90010542:	428d      	cmp	r5, r1
90010544:	6821      	ldr	r1, [r4, #0]
90010546:	d01f      	beq.n	90010588 <EwTileBitmap+0x340>
90010548:	429e      	cmp	r6, r3
9001054a:	d021      	beq.n	90010590 <EwTileBitmap+0x348>
9001054c:	42b5      	cmp	r5, r6
9001054e:	d11f      	bne.n	90010590 <EwTileBitmap+0x348>
90010550:	9c01      	ldr	r4, [sp, #4]
90010552:	429c      	cmp	r4, r3
90010554:	d11c      	bne.n	90010590 <EwTileBitmap+0x348>
90010556:	f442 7283 	orr.w	r2, r2, #262	; 0x106
9001055a:	80c2      	strh	r2, [r0, #6]
9001055c:	688b      	ldr	r3, [r1, #8]
9001055e:	f8db 0000 	ldr.w	r0, [fp]
90010562:	3b01      	subs	r3, #1
90010564:	608b      	str	r3, [r1, #8]
90010566:	b013      	add	sp, #76	; 0x4c
90010568:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001056c:	f007 baa8 	b.w	90017ac0 <EwDoneIssue>
90010570:	429e      	cmp	r6, r3
90010572:	e7ef      	b.n	90010554 <EwTileBitmap+0x30c>
90010574:	f9b1 3020 	ldrsh.w	r3, [r1, #32]
90010578:	2b02      	cmp	r3, #2
9001057a:	d002      	beq.n	90010582 <EwTileBitmap+0x33a>
9001057c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001057e:	2bff      	cmp	r3, #255	; 0xff
90010580:	d0ec      	beq.n	9001055c <EwTileBitmap+0x314>
90010582:	f442 7281 	orr.w	r2, r2, #258	; 0x102
90010586:	e7e8      	b.n	9001055a <EwTileBitmap+0x312>
90010588:	42b5      	cmp	r5, r6
9001058a:	d104      	bne.n	90010596 <EwTileBitmap+0x34e>
9001058c:	429d      	cmp	r5, r3
9001058e:	d0f1      	beq.n	90010574 <EwTileBitmap+0x32c>
90010590:	f442 7282 	orr.w	r2, r2, #260	; 0x104
90010594:	e7e1      	b.n	9001055a <EwTileBitmap+0x312>
90010596:	429d      	cmp	r5, r3
90010598:	d1ea      	bne.n	90010570 <EwTileBitmap+0x328>
9001059a:	42ae      	cmp	r6, r5
9001059c:	e7f7      	b.n	9001058e <EwTileBitmap+0x346>
9001059e:	b013      	add	sp, #76	; 0x4c
900105a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900105a4 <EwWarpBitmap>:
900105a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900105a8:	ed2d 8b10 	vpush	{d8-d15}
900105ac:	b08f      	sub	sp, #60	; 0x3c
900105ae:	eef0 aa40 	vmov.f32	s21, s0
900105b2:	eef0 9a61 	vmov.f32	s19, s3
900105b6:	4689      	mov	r9, r1
900105b8:	9303      	str	r3, [sp, #12]
900105ba:	4611      	mov	r1, r2
900105bc:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
900105c0:	eeb0 aa60 	vmov.f32	s20, s1
900105c4:	eef0 da42 	vmov.f32	s27, s4
900105c8:	4692      	mov	sl, r2
900105ca:	461e      	mov	r6, r3
900105cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900105ce:	eeb0 da43 	vmov.f32	s26, s6
900105d2:	4680      	mov	r8, r0
900105d4:	9305      	str	r3, [sp, #20]
900105d6:	eef0 ca63 	vmov.f32	s25, s7
900105da:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900105dc:	eeb0 ca64 	vmov.f32	s24, s9
900105e0:	eeb0 9a45 	vmov.f32	s18, s10
900105e4:	f89d 70d0 	ldrb.w	r7, [sp, #208]	; 0xd0
900105e8:	9304      	str	r3, [sp, #16]
900105ea:	eef0 8a41 	vmov.f32	s17, s2
900105ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900105f0:	eef0 ba62 	vmov.f32	s23, s5
900105f4:	eeb0 8a44 	vmov.f32	s16, s8
900105f8:	930c      	str	r3, [sp, #48]	; 0x30
900105fa:	eeb0 ba65 	vmov.f32	s22, s11
900105fe:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90010600:	9306      	str	r3, [sp, #24]
90010602:	f89d 30c3 	ldrb.w	r3, [sp, #195]	; 0xc3
90010606:	930b      	str	r3, [sp, #44]	; 0x2c
90010608:	f7fb fa70 	bl	9000baec <UpdateWatermark1+0x6c>
9001060c:	9903      	ldr	r1, [sp, #12]
9001060e:	4683      	mov	fp, r0
90010610:	4648      	mov	r0, r9
90010612:	f7fb fa6b 	bl	9000baec <UpdateWatermark1+0x6c>
90010616:	eef4 aae9 	vcmpe.f32	s21, s19
9001061a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001061c:	4604      	mov	r4, r0
9001061e:	f89d 20c2 	ldrb.w	r2, [sp, #194]	; 0xc2
90010622:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010626:	f89d 10c1 	ldrb.w	r1, [sp, #193]	; 0xc1
9001062a:	eeb4 dacc 	vcmpe.f32	s26, s24
9001062e:	f89d 00c0 	ldrb.w	r0, [sp, #192]	; 0xc0
90010632:	fe79 faaa 	vselgt.f32	s31, s19, s21
90010636:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001063a:	fe7c 7a0d 	vselgt.f32	s15, s24, s26
9001063e:	eef4 fae7 	vcmpe.f32	s31, s15
90010642:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010646:	eeb4 aaed 	vcmpe.f32	s20, s27
9001064a:	bf58      	it	pl
9001064c:	eef0 fa67 	vmovpl.f32	s31, s15
90010650:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010654:	eef4 cac9 	vcmpe.f32	s25, s18
90010658:	fe7d ea8a 	vselgt.f32	s29, s27, s20
9001065c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010660:	fe79 7a2c 	vselgt.f32	s15, s18, s25
90010664:	eef4 7aee 	vcmpe.f32	s15, s29
90010668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001066c:	eef4 aae9 	vcmpe.f32	s21, s19
90010670:	fe7e eaa7 	vselgt.f32	s29, s29, s15
90010674:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010678:	eeb4 dacc 	vcmpe.f32	s26, s24
9001067c:	bf54      	ite	pl
9001067e:	eeb0 fa6a 	vmovpl.f32	s30, s21
90010682:	eeb0 fa69 	vmovmi.f32	s30, s19
90010686:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001068a:	bf54      	ite	pl
9001068c:	eef0 7a4d 	vmovpl.f32	s15, s26
90010690:	eef0 7a4c 	vmovmi.f32	s15, s24
90010694:	eef4 7acf 	vcmpe.f32	s15, s30
90010698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001069c:	eeb4 aaed 	vcmpe.f32	s20, s27
900106a0:	bf58      	it	pl
900106a2:	eeb0 fa67 	vmovpl.f32	s30, s15
900106a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900106aa:	eef4 cac9 	vcmpe.f32	s25, s18
900106ae:	bf54      	ite	pl
900106b0:	eeb0 ea4a 	vmovpl.f32	s28, s20
900106b4:	eeb0 ea6d 	vmovmi.f32	s28, s27
900106b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900106bc:	bf54      	ite	pl
900106be:	eef0 7a6c 	vmovpl.f32	s15, s25
900106c2:	eef0 7a49 	vmovmi.f32	s15, s18
900106c6:	eef4 7ace 	vcmpe.f32	s15, s28
900106ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900106ce:	bf58      	it	pl
900106d0:	eeb0 ea67 	vmovpl.f32	s28, s15
900106d4:	f7f4 fb0d 	bl	90004cf2 <EwPackColor>
900106d8:	f89d 30c7 	ldrb.w	r3, [sp, #199]	; 0xc7
900106dc:	f89d 20c6 	ldrb.w	r2, [sp, #198]	; 0xc6
900106e0:	f89d 10c5 	ldrb.w	r1, [sp, #197]	; 0xc5
900106e4:	9001      	str	r0, [sp, #4]
900106e6:	f89d 00c4 	ldrb.w	r0, [sp, #196]	; 0xc4
900106ea:	f7f4 fb02 	bl	90004cf2 <EwPackColor>
900106ee:	f89d 30cb 	ldrb.w	r3, [sp, #203]	; 0xcb
900106f2:	f89d 20ca 	ldrb.w	r2, [sp, #202]	; 0xca
900106f6:	f89d 10c9 	ldrb.w	r1, [sp, #201]	; 0xc9
900106fa:	9002      	str	r0, [sp, #8]
900106fc:	f89d 00c8 	ldrb.w	r0, [sp, #200]	; 0xc8
90010700:	f7f4 faf7 	bl	90004cf2 <EwPackColor>
90010704:	f89d 30cf 	ldrb.w	r3, [sp, #207]	; 0xcf
90010708:	4605      	mov	r5, r0
9001070a:	f89d 20ce 	ldrb.w	r2, [sp, #206]	; 0xce
9001070e:	f89d 10cd 	ldrb.w	r1, [sp, #205]	; 0xcd
90010712:	f89d 00cc 	ldrb.w	r0, [sp, #204]	; 0xcc
90010716:	f7f4 faec 	bl	90004cf2 <EwPackColor>
9001071a:	4603      	mov	r3, r0
9001071c:	f1bb 0f00 	cmp.w	fp, #0
90010720:	d006      	beq.n	90010730 <EwWarpBitmap+0x18c>
90010722:	f8db 1000 	ldr.w	r1, [fp]
90010726:	8c0a      	ldrh	r2, [r1, #32]
90010728:	3201      	adds	r2, #1
9001072a:	b292      	uxth	r2, r2
9001072c:	2a01      	cmp	r2, #1
9001072e:	d909      	bls.n	90010744 <EwWarpBitmap+0x1a0>
90010730:	4652      	mov	r2, sl
90010732:	4641      	mov	r1, r8
90010734:	20a2      	movs	r0, #162	; 0xa2
90010736:	b00f      	add	sp, #60	; 0x3c
90010738:	ecbd 8b10 	vpop	{d8-d15}
9001073c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010740:	f00c be9c 	b.w	9001d47c <EwErrorPD>
90010744:	698a      	ldr	r2, [r1, #24]
90010746:	b90a      	cbnz	r2, 9001074c <EwWarpBitmap+0x1a8>
90010748:	69ca      	ldr	r2, [r1, #28]
9001074a:	b122      	cbz	r2, 90010756 <EwWarpBitmap+0x1b2>
9001074c:	4652      	mov	r2, sl
9001074e:	4641      	mov	r1, r8
90010750:	f44f 70ad 	mov.w	r0, #346	; 0x15a
90010754:	e7ef      	b.n	90010736 <EwWarpBitmap+0x192>
90010756:	b124      	cbz	r4, 90010762 <EwWarpBitmap+0x1be>
90010758:	6820      	ldr	r0, [r4, #0]
9001075a:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
9001075e:	1c51      	adds	r1, r2, #1
90010760:	d103      	bne.n	9001076a <EwWarpBitmap+0x1c6>
90010762:	9a03      	ldr	r2, [sp, #12]
90010764:	4649      	mov	r1, r9
90010766:	20a5      	movs	r0, #165	; 0xa5
90010768:	e7e5      	b.n	90010736 <EwWarpBitmap+0x192>
9001076a:	eef3 7a00 	vmov.f32	s15, #48	; 0x41800000  16.0
9001076e:	eddf 6ab4 	vldr	s13, [pc, #720]	; 90010a40 <EwWarpBitmap+0x49c>
90010772:	ee6f faa7 	vmul.f32	s31, s31, s15
90010776:	ee2f fa27 	vmul.f32	s30, s30, s15
9001077a:	ee3f 6a6f 	vsub.f32	s12, s30, s31
9001077e:	eeb4 6ae6 	vcmpe.f32	s12, s13
90010782:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010786:	dc16      	bgt.n	900107b6 <EwWarpBitmap+0x212>
90010788:	ed9f 7aae 	vldr	s14, [pc, #696]	; 90010a44 <EwWarpBitmap+0x4a0>
9001078c:	eeb4 6ac7 	vcmpe.f32	s12, s14
90010790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010794:	d40f      	bmi.n	900107b6 <EwWarpBitmap+0x212>
90010796:	ee6e eaa7 	vmul.f32	s29, s29, s15
9001079a:	ee2e ea27 	vmul.f32	s28, s28, s15
9001079e:	ee7e 7a6e 	vsub.f32	s15, s28, s29
900107a2:	eef4 7ae6 	vcmpe.f32	s15, s13
900107a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900107aa:	dc04      	bgt.n	900107b6 <EwWarpBitmap+0x212>
900107ac:	eef4 7ac7 	vcmpe.f32	s15, s14
900107b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900107b4:	d507      	bpl.n	900107c6 <EwWarpBitmap+0x222>
900107b6:	20bd      	movs	r0, #189	; 0xbd
900107b8:	b00f      	add	sp, #60	; 0x3c
900107ba:	ecbd 8b10 	vpop	{d8-d15}
900107be:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900107c2:	f00c be45 	b.w	9001d450 <EwError>
900107c6:	b157      	cbz	r7, 900107de <EwWarpBitmap+0x23a>
900107c8:	2a03      	cmp	r2, #3
900107ca:	d108      	bne.n	900107de <EwWarpBitmap+0x23a>
900107cc:	e9dd 1201 	ldrd	r1, r2, [sp, #4]
900107d0:	400a      	ands	r2, r1
900107d2:	402a      	ands	r2, r5
900107d4:	401a      	ands	r2, r3
900107d6:	0e12      	lsrs	r2, r2, #24
900107d8:	2aff      	cmp	r2, #255	; 0xff
900107da:	bf08      	it	eq
900107dc:	2700      	moveq	r7, #0
900107de:	930d      	str	r3, [sp, #52]	; 0x34
900107e0:	f007 f922 	bl	90017a28 <EwFlushTasks>
900107e4:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
900107e8:	9928      	ldr	r1, [sp, #160]	; 0xa0
900107ea:	f8d8 0004 	ldr.w	r0, [r8, #4]
900107ee:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
900107f2:	ee7f 7a87 	vadd.f32	s15, s31, s14
900107f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900107fa:	ee17 2a90 	vmov	r2, s15
900107fe:	eef2 7a02 	vmov.f32	s15, #34	; 0x41100000  9.0
90010802:	1112      	asrs	r2, r2, #4
90010804:	ee7f 6a27 	vadd.f32	s13, s30, s15
90010808:	428a      	cmp	r2, r1
9001080a:	4613      	mov	r3, r2
9001080c:	eefd 6ae6 	vcvt.s32.f32	s13, s13
90010810:	bfb8      	it	lt
90010812:	460b      	movlt	r3, r1
90010814:	992a      	ldr	r1, [sp, #168]	; 0xa8
90010816:	930a      	str	r3, [sp, #40]	; 0x28
90010818:	4281      	cmp	r1, r0
9001081a:	ee16 2a90 	vmov	r2, s13
9001081e:	bfa8      	it	ge
90010820:	4601      	movge	r1, r0
90010822:	1112      	asrs	r2, r2, #4
90010824:	428a      	cmp	r2, r1
90010826:	4613      	mov	r3, r2
90010828:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001082a:	bfa8      	it	ge
9001082c:	460b      	movge	r3, r1
9001082e:	4293      	cmp	r3, r2
90010830:	9308      	str	r3, [sp, #32]
90010832:	f340 822a 	ble.w	90010c8a <EwWarpBitmap+0x6e6>
90010836:	ee3e 7a87 	vadd.f32	s14, s29, s14
9001083a:	9929      	ldr	r1, [sp, #164]	; 0xa4
9001083c:	ee7e 7a27 	vadd.f32	s15, s28, s15
90010840:	f8d8 0008 	ldr.w	r0, [r8, #8]
90010844:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90010848:	eebd 7ac7 	vcvt.s32.f32	s14, s14
9001084c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90010850:	ee17 3a10 	vmov	r3, s14
90010854:	111a      	asrs	r2, r3, #4
90010856:	428a      	cmp	r2, r1
90010858:	4613      	mov	r3, r2
9001085a:	bfb8      	it	lt
9001085c:	460b      	movlt	r3, r1
9001085e:	992b      	ldr	r1, [sp, #172]	; 0xac
90010860:	9309      	str	r3, [sp, #36]	; 0x24
90010862:	4281      	cmp	r1, r0
90010864:	ee17 3a90 	vmov	r3, s15
90010868:	bfa8      	it	ge
9001086a:	4601      	movge	r1, r0
9001086c:	111a      	asrs	r2, r3, #4
9001086e:	428a      	cmp	r2, r1
90010870:	4613      	mov	r3, r2
90010872:	9a09      	ldr	r2, [sp, #36]	; 0x24
90010874:	bfa8      	it	ge
90010876:	460b      	movge	r3, r1
90010878:	4293      	cmp	r3, r2
9001087a:	9307      	str	r3, [sp, #28]
9001087c:	f340 8205 	ble.w	90010c8a <EwWarpBitmap+0x6e6>
90010880:	9b05      	ldr	r3, [sp, #20]
90010882:	f8d9 2004 	ldr.w	r2, [r9, #4]
90010886:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001088a:	9303      	str	r3, [sp, #12]
9001088c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001088e:	4293      	cmp	r3, r2
90010890:	bfa8      	it	ge
90010892:	4613      	movge	r3, r2
90010894:	9305      	str	r3, [sp, #20]
90010896:	9a05      	ldr	r2, [sp, #20]
90010898:	9b03      	ldr	r3, [sp, #12]
9001089a:	4293      	cmp	r3, r2
9001089c:	f280 81f5 	bge.w	90010c8a <EwWarpBitmap+0x6e6>
900108a0:	9b04      	ldr	r3, [sp, #16]
900108a2:	f8d9 2008 	ldr.w	r2, [r9, #8]
900108a6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900108aa:	9304      	str	r3, [sp, #16]
900108ac:	9b06      	ldr	r3, [sp, #24]
900108ae:	4293      	cmp	r3, r2
900108b0:	bfa8      	it	ge
900108b2:	4613      	movge	r3, r2
900108b4:	9306      	str	r3, [sp, #24]
900108b6:	9a06      	ldr	r2, [sp, #24]
900108b8:	9b04      	ldr	r3, [sp, #16]
900108ba:	4293      	cmp	r3, r2
900108bc:	f280 81e5 	bge.w	90010c8a <EwWarpBitmap+0x6e6>
900108c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900108c2:	b13f      	cbz	r7, 900108d4 <EwWarpBitmap+0x330>
900108c4:	e9dd 1201 	ldrd	r1, r2, [sp, #4]
900108c8:	430a      	orrs	r2, r1
900108ca:	432a      	orrs	r2, r5
900108cc:	431a      	orrs	r2, r3
900108ce:	0e12      	lsrs	r2, r2, #24
900108d0:	f000 81db 	beq.w	90010c8a <EwWarpBitmap+0x6e6>
900108d4:	eef5 8ac0 	vcmpe.f32	s17, #0.0
900108d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900108dc:	d81b      	bhi.n	90010916 <EwWarpBitmap+0x372>
900108de:	eef5 bac0 	vcmpe.f32	s23, #0.0
900108e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900108e6:	d811      	bhi.n	9001090c <EwWarpBitmap+0x368>
900108e8:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
900108ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900108f0:	d80c      	bhi.n	9001090c <EwWarpBitmap+0x368>
900108f2:	eeb5 bac0 	vcmpe.f32	s22, #0.0
900108f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900108fa:	bf9f      	itttt	ls
900108fc:	eef1 8a68 	vnegls.f32	s17, s17
90010900:	eef1 ba6b 	vnegls.f32	s23, s23
90010904:	eeb1 8a48 	vnegls.f32	s16, s16
90010908:	eeb1 ba4b 	vnegls.f32	s22, s22
9001090c:	eef5 8ac0 	vcmpe.f32	s17, #0.0
90010910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010914:	d40e      	bmi.n	90010934 <EwWarpBitmap+0x390>
90010916:	eef5 bac0 	vcmpe.f32	s23, #0.0
9001091a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001091e:	d409      	bmi.n	90010934 <EwWarpBitmap+0x390>
90010920:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90010924:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010928:	d404      	bmi.n	90010934 <EwWarpBitmap+0x390>
9001092a:	eeb5 bac0 	vcmpe.f32	s22, #0.0
9001092e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010932:	d501      	bpl.n	90010938 <EwWarpBitmap+0x394>
90010934:	20a6      	movs	r0, #166	; 0xa6
90010936:	e73f      	b.n	900107b8 <EwWarpBitmap+0x214>
90010938:	eef4 8a6b 	vcmp.f32	s17, s23
9001093c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010940:	d153      	bne.n	900109ea <EwWarpBitmap+0x446>
90010942:	eeb4 8a4b 	vcmp.f32	s16, s22
90010946:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001094a:	d14e      	bne.n	900109ea <EwWarpBitmap+0x446>
9001094c:	eef4 8a48 	vcmp.f32	s17, s16
90010950:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010954:	d149      	bne.n	900109ea <EwWarpBitmap+0x446>
90010956:	eef4 aa4c 	vcmp.f32	s21, s24
9001095a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001095e:	f040 809f 	bne.w	90010aa0 <EwWarpBitmap+0x4fc>
90010962:	eef4 9a4d 	vcmp.f32	s19, s26
90010966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001096a:	f040 8099 	bne.w	90010aa0 <EwWarpBitmap+0x4fc>
9001096e:	eeb4 aa6d 	vcmp.f32	s20, s27
90010972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010976:	f040 8093 	bne.w	90010aa0 <EwWarpBitmap+0x4fc>
9001097a:	eef4 ca49 	vcmp.f32	s25, s18
9001097e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010982:	f040 808d 	bne.w	90010aa0 <EwWarpBitmap+0x4fc>
90010986:	eef4 aae9 	vcmpe.f32	s21, s19
9001098a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001098e:	f140 8087 	bpl.w	90010aa0 <EwWarpBitmap+0x4fc>
90010992:	eeb4 aac9 	vcmpe.f32	s20, s18
90010996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001099a:	f140 8081 	bpl.w	90010aa0 <EwWarpBitmap+0x4fc>
9001099e:	eefd 7aef 	vcvt.s32.f32	s15, s31
900109a2:	f04f 0a01 	mov.w	sl, #1
900109a6:	eefd eaee 	vcvt.s32.f32	s29, s29
900109aa:	eebd eace 	vcvt.s32.f32	s28, s28
900109ae:	ee17 1a90 	vmov	r1, s15
900109b2:	eefd 7acf 	vcvt.s32.f32	s15, s30
900109b6:	ee1e 0a90 	vmov	r0, s29
900109ba:	ee17 2a90 	vmov	r2, s15
900109be:	4308      	orrs	r0, r1
900109c0:	ea40 0102 	orr.w	r1, r0, r2
900109c4:	ee1e 2a10 	vmov	r2, s28
900109c8:	430a      	orrs	r2, r1
900109ca:	f012 0f0f 	tst.w	r2, #15
900109ce:	bf0c      	ite	eq
900109d0:	f04f 0901 	moveq.w	r9, #1
900109d4:	f04f 0900 	movne.w	r9, #0
900109d8:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
900109dc:	eef0 8a48 	vmov.f32	s17, s16
900109e0:	eeb0 ea48 	vmov.f32	s28, s16
900109e4:	eef0 ea48 	vmov.f32	s29, s16
900109e8:	e039      	b.n	90010a5e <EwWarpBitmap+0x4ba>
900109ea:	eef4 8aeb 	vcmpe.f32	s17, s23
900109ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900109f2:	fe7b 7aa8 	vselgt.f32	s15, s23, s17
900109f6:	eeb4 8a67 	vcmp.f32	s16, s15
900109fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900109fe:	bf48      	it	mi
90010a00:	eef0 7a48 	vmovmi.f32	s15, s16
90010a04:	eeb4 ba67 	vcmp.f32	s22, s15
90010a08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010a0c:	eef5 8a40 	vcmp.f32	s17, #0.0
90010a10:	bf48      	it	mi
90010a12:	eef0 7a4b 	vmovmi.f32	s15, s22
90010a16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010a1a:	d00e      	beq.n	90010a3a <EwWarpBitmap+0x496>
90010a1c:	eef5 ba40 	vcmp.f32	s23, #0.0
90010a20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010a24:	d009      	beq.n	90010a3a <EwWarpBitmap+0x496>
90010a26:	eeb5 8a40 	vcmp.f32	s16, #0.0
90010a2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010a2e:	d004      	beq.n	90010a3a <EwWarpBitmap+0x496>
90010a30:	eeb5 ba40 	vcmp.f32	s22, #0.0
90010a34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90010a38:	d106      	bne.n	90010a48 <EwWarpBitmap+0x4a4>
90010a3a:	f44f 7088 	mov.w	r0, #272	; 0x110
90010a3e:	e6bb      	b.n	900107b8 <EwWarpBitmap+0x214>
90010a40:	47800000 	.word	0x47800000
90010a44:	c7800000 	.word	0xc7800000
90010a48:	eec7 eaa8 	vdiv.f32	s29, s15, s17
90010a4c:	f04f 0a00 	mov.w	sl, #0
90010a50:	46d1      	mov	r9, sl
90010a52:	eec7 8a88 	vdiv.f32	s17, s15, s16
90010a56:	ee87 eaab 	vdiv.f32	s28, s15, s23
90010a5a:	ee87 8a8b 	vdiv.f32	s16, s15, s22
90010a5e:	6822      	ldr	r2, [r4, #0]
90010a60:	eddb 7a01 	vldr	s15, [fp, #4]
90010a64:	6891      	ldr	r1, [r2, #8]
90010a66:	f8db 0000 	ldr.w	r0, [fp]
90010a6a:	3101      	adds	r1, #1
90010a6c:	eef8 bae7 	vcvt.f32.s32	s23, s15
90010a70:	eddb 7a02 	vldr	s15, [fp, #8]
90010a74:	6091      	str	r1, [r2, #8]
90010a76:	68d1      	ldr	r1, [r2, #12]
90010a78:	eeb8 bae7 	vcvt.f32.s32	s22, s15
90010a7c:	930c      	str	r3, [sp, #48]	; 0x30
90010a7e:	3101      	adds	r1, #1
90010a80:	60d1      	str	r1, [r2, #12]
90010a82:	f006 ff0d 	bl	900178a0 <EwInitIssue>
90010a86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90010a88:	4602      	mov	r2, r0
90010a8a:	b970      	cbnz	r0, 90010aaa <EwWarpBitmap+0x506>
90010a8c:	6823      	ldr	r3, [r4, #0]
90010a8e:	2081      	movs	r0, #129	; 0x81
90010a90:	6899      	ldr	r1, [r3, #8]
90010a92:	3901      	subs	r1, #1
90010a94:	6099      	str	r1, [r3, #8]
90010a96:	68d9      	ldr	r1, [r3, #12]
90010a98:	3901      	subs	r1, #1
90010a9a:	60d9      	str	r1, [r3, #12]
90010a9c:	4641      	mov	r1, r8
90010a9e:	e64a      	b.n	90010736 <EwWarpBitmap+0x192>
90010aa0:	f04f 0a01 	mov.w	sl, #1
90010aa4:	f04f 0900 	mov.w	r9, #0
90010aa8:	e796      	b.n	900109d8 <EwWarpBitmap+0x434>
90010aaa:	214c      	movs	r1, #76	; 0x4c
90010aac:	e9cd 300c 	strd	r3, r0, [sp, #48]	; 0x30
90010ab0:	f006 ff97 	bl	900179e2 <EwAllocTaskData>
90010ab4:	ee7a aaab 	vadd.f32	s21, s21, s23
90010ab8:	ee3a aa0b 	vadd.f32	s20, s20, s22
90010abc:	4680      	mov	r8, r0
90010abe:	ee79 9aab 	vadd.f32	s19, s19, s23
90010ac2:	edc0 ea02 	vstr	s29, [r0, #8]
90010ac6:	ee7d da8b 	vadd.f32	s27, s27, s22
90010aca:	edc0 aa00 	vstr	s21, [r0]
90010ace:	ee3d da2b 	vadd.f32	s26, s26, s23
90010ad2:	ed80 aa01 	vstr	s20, [r0, #4]
90010ad6:	ee7c ca8b 	vadd.f32	s25, s25, s22
90010ada:	edc0 9a03 	vstr	s19, [r0, #12]
90010ade:	ee3c ca2b 	vadd.f32	s24, s24, s23
90010ae2:	edc0 da04 	vstr	s27, [r0, #16]
90010ae6:	ee39 9a0b 	vadd.f32	s18, s18, s22
90010aea:	ed80 ea05 	vstr	s28, [r0, #20]
90010aee:	ed80 da06 	vstr	s26, [r0, #24]
90010af2:	edc0 ca07 	vstr	s25, [r0, #28]
90010af6:	edc0 8a08 	vstr	s17, [r0, #32]
90010afa:	ed80 ca09 	vstr	s24, [r0, #36]	; 0x24
90010afe:	ed80 9a0a 	vstr	s18, [r0, #40]	; 0x28
90010b02:	ed80 8a0b 	vstr	s16, [r0, #44]	; 0x2c
90010b06:	9b03      	ldr	r3, [sp, #12]
90010b08:	88a0      	ldrh	r0, [r4, #4]
90010b0a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90010b0c:	18c1      	adds	r1, r0, r3
90010b0e:	9b04      	ldr	r3, [sp, #16]
90010b10:	f8a8 1030 	strh.w	r1, [r8, #48]	; 0x30
90010b14:	8921      	ldrh	r1, [r4, #8]
90010b16:	eb01 0c03 	add.w	ip, r1, r3
90010b1a:	9b05      	ldr	r3, [sp, #20]
90010b1c:	4418      	add	r0, r3
90010b1e:	9b06      	ldr	r3, [sp, #24]
90010b20:	f8a8 c032 	strh.w	ip, [r8, #50]	; 0x32
90010b24:	4419      	add	r1, r3
90010b26:	9b01      	ldr	r3, [sp, #4]
90010b28:	f8a8 0034 	strh.w	r0, [r8, #52]	; 0x34
90010b2c:	4610      	mov	r0, r2
90010b2e:	f8a8 1036 	strh.w	r1, [r8, #54]	; 0x36
90010b32:	6821      	ldr	r1, [r4, #0]
90010b34:	f8c8 303c 	str.w	r3, [r8, #60]	; 0x3c
90010b38:	9b02      	ldr	r3, [sp, #8]
90010b3a:	f8c8 1038 	str.w	r1, [r8, #56]	; 0x38
90010b3e:	2100      	movs	r1, #0
90010b40:	e9c8 3510 	strd	r3, r5, [r8, #64]	; 0x40
90010b44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90010b46:	f8c8 3048 	str.w	r3, [r8, #72]	; 0x48
90010b4a:	f006 ff11 	bl	90017970 <EwAllocTask>
90010b4e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90010b52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90010b54:	f8bb 2008 	ldrh.w	r2, [fp, #8]
90010b58:	440b      	add	r3, r1
90010b5a:	f8c0 8010 	str.w	r8, [r0, #16]
90010b5e:	8103      	strh	r3, [r0, #8]
90010b60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90010b62:	4413      	add	r3, r2
90010b64:	8143      	strh	r3, [r0, #10]
90010b66:	9b08      	ldr	r3, [sp, #32]
90010b68:	4419      	add	r1, r3
90010b6a:	9b07      	ldr	r3, [sp, #28]
90010b6c:	441a      	add	r2, r3
90010b6e:	8181      	strh	r1, [r0, #12]
90010b70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90010b72:	81c2      	strh	r2, [r0, #14]
90010b74:	2e00      	cmp	r6, #0
90010b76:	d13b      	bne.n	90010bf0 <EwWarpBitmap+0x64c>
90010b78:	b1c7      	cbz	r7, 90010bac <EwWarpBitmap+0x608>
90010b7a:	e9dd 1201 	ldrd	r1, r2, [sp, #4]
90010b7e:	400a      	ands	r2, r1
90010b80:	402a      	ands	r2, r5
90010b82:	401a      	ands	r2, r3
90010b84:	0e12      	lsrs	r2, r2, #24
90010b86:	2aff      	cmp	r2, #255	; 0xff
90010b88:	d112      	bne.n	90010bb0 <EwWarpBitmap+0x60c>
90010b8a:	68e2      	ldr	r2, [r4, #12]
90010b8c:	9903      	ldr	r1, [sp, #12]
90010b8e:	4291      	cmp	r1, r2
90010b90:	db0e      	blt.n	90010bb0 <EwWarpBitmap+0x60c>
90010b92:	6922      	ldr	r2, [r4, #16]
90010b94:	9904      	ldr	r1, [sp, #16]
90010b96:	4291      	cmp	r1, r2
90010b98:	db0a      	blt.n	90010bb0 <EwWarpBitmap+0x60c>
90010b9a:	6962      	ldr	r2, [r4, #20]
90010b9c:	9905      	ldr	r1, [sp, #20]
90010b9e:	4291      	cmp	r1, r2
90010ba0:	dc06      	bgt.n	90010bb0 <EwWarpBitmap+0x60c>
90010ba2:	69a2      	ldr	r2, [r4, #24]
90010ba4:	9906      	ldr	r1, [sp, #24]
90010ba6:	4291      	cmp	r1, r2
90010ba8:	dc02      	bgt.n	90010bb0 <EwWarpBitmap+0x60c>
90010baa:	4637      	mov	r7, r6
90010bac:	463a      	mov	r2, r7
90010bae:	e045      	b.n	90010c3c <EwWarpBitmap+0x698>
90010bb0:	4632      	mov	r2, r6
90010bb2:	e043      	b.n	90010c3c <EwWarpBitmap+0x698>
90010bb4:	42a6      	cmp	r6, r4
90010bb6:	d104      	bne.n	90010bc2 <EwWarpBitmap+0x61e>
90010bb8:	429d      	cmp	r5, r3
90010bba:	d102      	bne.n	90010bc2 <EwWarpBitmap+0x61e>
90010bbc:	9b02      	ldr	r3, [sp, #8]
90010bbe:	42ab      	cmp	r3, r5
90010bc0:	d00a      	beq.n	90010bd8 <EwWarpBitmap+0x634>
90010bc2:	f042 0204 	orr.w	r2, r2, #4
90010bc6:	80c2      	strh	r2, [r0, #6]
90010bc8:	f1b9 0f00 	cmp.w	r9, #0
90010bcc:	d14f      	bne.n	90010c6e <EwWarpBitmap+0x6ca>
90010bce:	f1ba 0f00 	cmp.w	sl, #0
90010bd2:	d00b      	beq.n	90010bec <EwWarpBitmap+0x648>
90010bd4:	2305      	movs	r3, #5
90010bd6:	e04b      	b.n	90010c70 <EwWarpBitmap+0x6cc>
90010bd8:	f9b1 3020 	ldrsh.w	r3, [r1, #32]
90010bdc:	2b02      	cmp	r3, #2
90010bde:	d002      	beq.n	90010be6 <EwWarpBitmap+0x642>
90010be0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90010be2:	2bff      	cmp	r3, #255	; 0xff
90010be4:	d0f0      	beq.n	90010bc8 <EwWarpBitmap+0x624>
90010be6:	f042 0202 	orr.w	r2, r2, #2
90010bea:	e7ec      	b.n	90010bc6 <EwWarpBitmap+0x622>
90010bec:	2304      	movs	r3, #4
90010bee:	e03f      	b.n	90010c70 <EwWarpBitmap+0x6cc>
90010bf0:	b94f      	cbnz	r7, 90010c06 <EwWarpBitmap+0x662>
90010bf2:	2208      	movs	r2, #8
90010bf4:	e022      	b.n	90010c3c <EwWarpBitmap+0x698>
90010bf6:	9c01      	ldr	r4, [sp, #4]
90010bf8:	429c      	cmp	r4, r3
90010bfa:	d0dd      	beq.n	90010bb8 <EwWarpBitmap+0x614>
90010bfc:	9c01      	ldr	r4, [sp, #4]
90010bfe:	42ac      	cmp	r4, r5
90010c00:	d0da      	beq.n	90010bb8 <EwWarpBitmap+0x614>
90010c02:	429d      	cmp	r5, r3
90010c04:	e02f      	b.n	90010c66 <EwWarpBitmap+0x6c2>
90010c06:	e9dd 1201 	ldrd	r1, r2, [sp, #4]
90010c0a:	400a      	ands	r2, r1
90010c0c:	402a      	ands	r2, r5
90010c0e:	401a      	ands	r2, r3
90010c10:	0e12      	lsrs	r2, r2, #24
90010c12:	2aff      	cmp	r2, #255	; 0xff
90010c14:	d1ed      	bne.n	90010bf2 <EwWarpBitmap+0x64e>
90010c16:	68e2      	ldr	r2, [r4, #12]
90010c18:	9903      	ldr	r1, [sp, #12]
90010c1a:	4291      	cmp	r1, r2
90010c1c:	dde9      	ble.n	90010bf2 <EwWarpBitmap+0x64e>
90010c1e:	6922      	ldr	r2, [r4, #16]
90010c20:	9904      	ldr	r1, [sp, #16]
90010c22:	4291      	cmp	r1, r2
90010c24:	dde5      	ble.n	90010bf2 <EwWarpBitmap+0x64e>
90010c26:	6962      	ldr	r2, [r4, #20]
90010c28:	9905      	ldr	r1, [sp, #20]
90010c2a:	4291      	cmp	r1, r2
90010c2c:	dae1      	bge.n	90010bf2 <EwWarpBitmap+0x64e>
90010c2e:	69a2      	ldr	r2, [r4, #24]
90010c30:	9906      	ldr	r1, [sp, #24]
90010c32:	4616      	mov	r6, r2
90010c34:	2208      	movs	r2, #8
90010c36:	42b1      	cmp	r1, r6
90010c38:	bfb8      	it	lt
90010c3a:	2700      	movlt	r7, #0
90010c3c:	2f00      	cmp	r7, #0
90010c3e:	bf18      	it	ne
90010c40:	f042 0201 	orrne.w	r2, r2, #1
90010c44:	6821      	ldr	r1, [r4, #0]
90010c46:	ea42 2209 	orr.w	r2, r2, r9, lsl #8
90010c4a:	e9dd 6401 	ldrd	r6, r4, [sp, #4]
90010c4e:	80c2      	strh	r2, [r0, #6]
90010c50:	f1b9 0f00 	cmp.w	r9, #0
90010c54:	d0ae      	beq.n	90010bb4 <EwWarpBitmap+0x610>
90010c56:	42a6      	cmp	r6, r4
90010c58:	d0cd      	beq.n	90010bf6 <EwWarpBitmap+0x652>
90010c5a:	429d      	cmp	r5, r3
90010c5c:	d0b1      	beq.n	90010bc2 <EwWarpBitmap+0x61e>
90010c5e:	429e      	cmp	r6, r3
90010c60:	d1af      	bne.n	90010bc2 <EwWarpBitmap+0x61e>
90010c62:	9b02      	ldr	r3, [sp, #8]
90010c64:	42ab      	cmp	r3, r5
90010c66:	d1ac      	bne.n	90010bc2 <EwWarpBitmap+0x61e>
90010c68:	f042 0206 	orr.w	r2, r2, #6
90010c6c:	80c2      	strh	r2, [r0, #6]
90010c6e:	2306      	movs	r3, #6
90010c70:	8083      	strh	r3, [r0, #4]
90010c72:	688b      	ldr	r3, [r1, #8]
90010c74:	f8db 0000 	ldr.w	r0, [fp]
90010c78:	3b01      	subs	r3, #1
90010c7a:	608b      	str	r3, [r1, #8]
90010c7c:	b00f      	add	sp, #60	; 0x3c
90010c7e:	ecbd 8b10 	vpop	{d8-d15}
90010c82:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010c86:	f006 bf1b 	b.w	90017ac0 <EwDoneIssue>
90010c8a:	b00f      	add	sp, #60	; 0x3c
90010c8c:	ecbd 8b10 	vpop	{d8-d15}
90010c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90010c94 <EwDrawLine>:
90010c94:	b082      	sub	sp, #8
90010c96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010c9a:	b087      	sub	sp, #28
90010c9c:	460c      	mov	r4, r1
90010c9e:	4682      	mov	sl, r0
90010ca0:	ad10      	add	r5, sp, #64	; 0x40
90010ca2:	e885 000c 	stmia.w	r5, {r2, r3}
90010ca6:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
90010caa:	e9dd 7614 	ldrd	r7, r6, [sp, #80]	; 0x50
90010cae:	9303      	str	r3, [sp, #12]
90010cb0:	e9dd 9816 	ldrd	r9, r8, [sp, #88]	; 0x58
90010cb4:	f7fa ff1a 	bl	9000baec <UpdateWatermark1+0x6c>
90010cb8:	f89d 3063 	ldrb.w	r3, [sp, #99]	; 0x63
90010cbc:	f89d 2062 	ldrb.w	r2, [sp, #98]	; 0x62
90010cc0:	4605      	mov	r5, r0
90010cc2:	f89d 1061 	ldrb.w	r1, [sp, #97]	; 0x61
90010cc6:	f89d 0060 	ldrb.w	r0, [sp, #96]	; 0x60
90010cca:	f7f4 f812 	bl	90004cf2 <EwPackColor>
90010cce:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
90010cd2:	9001      	str	r0, [sp, #4]
90010cd4:	f89d 2066 	ldrb.w	r2, [sp, #102]	; 0x66
90010cd8:	f89d 1065 	ldrb.w	r1, [sp, #101]	; 0x65
90010cdc:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
90010ce0:	f7f4 f807 	bl	90004cf2 <EwPackColor>
90010ce4:	9002      	str	r0, [sp, #8]
90010ce6:	b12d      	cbz	r5, 90010cf4 <EwDrawLine+0x60>
90010ce8:	6828      	ldr	r0, [r5, #0]
90010cea:	8c03      	ldrh	r3, [r0, #32]
90010cec:	3301      	adds	r3, #1
90010cee:	b29b      	uxth	r3, r3
90010cf0:	2b01      	cmp	r3, #1
90010cf2:	d908      	bls.n	90010d06 <EwDrawLine+0x72>
90010cf4:	4622      	mov	r2, r4
90010cf6:	4651      	mov	r1, sl
90010cf8:	209f      	movs	r0, #159	; 0x9f
90010cfa:	b007      	add	sp, #28
90010cfc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010d00:	b002      	add	sp, #8
90010d02:	f00c bbbb 	b.w	9001d47c <EwErrorPD>
90010d06:	6983      	ldr	r3, [r0, #24]
90010d08:	b90b      	cbnz	r3, 90010d0e <EwDrawLine+0x7a>
90010d0a:	69c3      	ldr	r3, [r0, #28]
90010d0c:	b123      	cbz	r3, 90010d18 <EwDrawLine+0x84>
90010d0e:	4622      	mov	r2, r4
90010d10:	4651      	mov	r1, sl
90010d12:	f240 105b 	movw	r0, #347	; 0x15b
90010d16:	e7f0      	b.n	90010cfa <EwDrawLine+0x66>
90010d18:	eba9 0207 	sub.w	r2, r9, r7
90010d1c:	eba8 0306 	sub.w	r3, r8, r6
90010d20:	2a00      	cmp	r2, #0
90010d22:	bfb8      	it	lt
90010d24:	4252      	neglt	r2, r2
90010d26:	2b00      	cmp	r3, #0
90010d28:	bfb8      	it	lt
90010d2a:	425b      	neglt	r3, r3
90010d2c:	429a      	cmp	r2, r3
90010d2e:	dd56      	ble.n	90010dde <EwDrawLine+0x14a>
90010d30:	454f      	cmp	r7, r9
90010d32:	bfb4      	ite	lt
90010d34:	f109 32ff 	addlt.w	r2, r9, #4294967295
90010d38:	464a      	movge	r2, r9
90010d3a:	42ba      	cmp	r2, r7
90010d3c:	da00      	bge.n	90010d40 <EwDrawLine+0xac>
90010d3e:	3201      	adds	r2, #1
90010d40:	4643      	mov	r3, r8
90010d42:	9910      	ldr	r1, [sp, #64]	; 0x40
90010d44:	f8da 4004 	ldr.w	r4, [sl, #4]
90010d48:	ea21 7ce1 	bic.w	ip, r1, r1, asr #31
90010d4c:	9912      	ldr	r1, [sp, #72]	; 0x48
90010d4e:	428c      	cmp	r4, r1
90010d50:	bfa8      	it	ge
90010d52:	460c      	movge	r4, r1
90010d54:	9913      	ldr	r1, [sp, #76]	; 0x4c
90010d56:	9400      	str	r4, [sp, #0]
90010d58:	f8da 4008 	ldr.w	r4, [sl, #8]
90010d5c:	428c      	cmp	r4, r1
90010d5e:	bfa8      	it	ge
90010d60:	460c      	movge	r4, r1
90010d62:	42ba      	cmp	r2, r7
90010d64:	4611      	mov	r1, r2
90010d66:	bfa8      	it	ge
90010d68:	4639      	movge	r1, r7
90010d6a:	46a3      	mov	fp, r4
90010d6c:	4561      	cmp	r1, ip
90010d6e:	bfb8      	it	lt
90010d70:	4661      	movlt	r1, ip
90010d72:	42ba      	cmp	r2, r7
90010d74:	9104      	str	r1, [sp, #16]
90010d76:	bfb8      	it	lt
90010d78:	463a      	movlt	r2, r7
90010d7a:	9900      	ldr	r1, [sp, #0]
90010d7c:	428a      	cmp	r2, r1
90010d7e:	9904      	ldr	r1, [sp, #16]
90010d80:	bfbc      	itt	lt
90010d82:	3201      	addlt	r2, #1
90010d84:	9200      	strlt	r2, [sp, #0]
90010d86:	42b3      	cmp	r3, r6
90010d88:	461a      	mov	r2, r3
90010d8a:	bfb8      	it	lt
90010d8c:	4632      	movlt	r2, r6
90010d8e:	42a2      	cmp	r2, r4
90010d90:	bfb8      	it	lt
90010d92:	f102 0b01 	addlt.w	fp, r2, #1
90010d96:	9a00      	ldr	r2, [sp, #0]
90010d98:	428a      	cmp	r2, r1
90010d9a:	dd67      	ble.n	90010e6c <EwDrawLine+0x1d8>
90010d9c:	42b3      	cmp	r3, r6
90010d9e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90010da0:	bfa8      	it	ge
90010da2:	4633      	movge	r3, r6
90010da4:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90010da8:	429c      	cmp	r4, r3
90010daa:	bfb8      	it	lt
90010dac:	461c      	movlt	r4, r3
90010dae:	45a3      	cmp	fp, r4
90010db0:	dd5c      	ble.n	90010e6c <EwDrawLine+0x1d8>
90010db2:	9b03      	ldr	r3, [sp, #12]
90010db4:	b163      	cbz	r3, 90010dd0 <EwDrawLine+0x13c>
90010db6:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
90010dba:	4313      	orrs	r3, r2
90010dbc:	0e1b      	lsrs	r3, r3, #24
90010dbe:	d055      	beq.n	90010e6c <EwDrawLine+0x1d8>
90010dc0:	9b01      	ldr	r3, [sp, #4]
90010dc2:	4013      	ands	r3, r2
90010dc4:	0e1b      	lsrs	r3, r3, #24
90010dc6:	2bff      	cmp	r3, #255	; 0xff
90010dc8:	9b03      	ldr	r3, [sp, #12]
90010dca:	bf08      	it	eq
90010dcc:	2300      	moveq	r3, #0
90010dce:	9303      	str	r3, [sp, #12]
90010dd0:	f006 fd66 	bl	900178a0 <EwInitIssue>
90010dd4:	4602      	mov	r2, r0
90010dd6:	b960      	cbnz	r0, 90010df2 <EwDrawLine+0x15e>
90010dd8:	4651      	mov	r1, sl
90010dda:	2082      	movs	r0, #130	; 0x82
90010ddc:	e78d      	b.n	90010cfa <EwDrawLine+0x66>
90010dde:	4546      	cmp	r6, r8
90010de0:	bfb4      	ite	lt
90010de2:	f108 33ff 	addlt.w	r3, r8, #4294967295
90010de6:	4643      	movge	r3, r8
90010de8:	42b3      	cmp	r3, r6
90010dea:	da00      	bge.n	90010dee <EwDrawLine+0x15a>
90010dec:	3301      	adds	r3, #1
90010dee:	464a      	mov	r2, r9
90010df0:	e7a7      	b.n	90010d42 <EwDrawLine+0xae>
90010df2:	2110      	movs	r1, #16
90010df4:	9005      	str	r0, [sp, #20]
90010df6:	f006 fdf4 	bl	900179e2 <EwAllocTaskData>
90010dfa:	892b      	ldrh	r3, [r5, #8]
90010dfc:	88a9      	ldrh	r1, [r5, #4]
90010dfe:	4682      	mov	sl, r0
90010e00:	441e      	add	r6, r3
90010e02:	4443      	add	r3, r8
90010e04:	9a05      	ldr	r2, [sp, #20]
90010e06:	440f      	add	r7, r1
90010e08:	80c3      	strh	r3, [r0, #6]
90010e0a:	4449      	add	r1, r9
90010e0c:	9b01      	ldr	r3, [sp, #4]
90010e0e:	8007      	strh	r7, [r0, #0]
90010e10:	6083      	str	r3, [r0, #8]
90010e12:	9b02      	ldr	r3, [sp, #8]
90010e14:	8046      	strh	r6, [r0, #2]
90010e16:	8081      	strh	r1, [r0, #4]
90010e18:	2100      	movs	r1, #0
90010e1a:	60c3      	str	r3, [r0, #12]
90010e1c:	4610      	mov	r0, r2
90010e1e:	f006 fda7 	bl	90017970 <EwAllocTask>
90010e22:	2307      	movs	r3, #7
90010e24:	88ae      	ldrh	r6, [r5, #4]
90010e26:	8083      	strh	r3, [r0, #4]
90010e28:	9b04      	ldr	r3, [sp, #16]
90010e2a:	892a      	ldrh	r2, [r5, #8]
90010e2c:	4433      	add	r3, r6
90010e2e:	f8c0 a010 	str.w	sl, [r0, #16]
90010e32:	eb02 010b 	add.w	r1, r2, fp
90010e36:	4414      	add	r4, r2
90010e38:	8103      	strh	r3, [r0, #8]
90010e3a:	9b00      	ldr	r3, [sp, #0]
90010e3c:	81c1      	strh	r1, [r0, #14]
90010e3e:	4433      	add	r3, r6
90010e40:	8144      	strh	r4, [r0, #10]
90010e42:	8183      	strh	r3, [r0, #12]
90010e44:	9b03      	ldr	r3, [sp, #12]
90010e46:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
90010e4a:	3b00      	subs	r3, #0
90010e4c:	bf18      	it	ne
90010e4e:	2301      	movne	r3, #1
90010e50:	428a      	cmp	r2, r1
90010e52:	bf14      	ite	ne
90010e54:	f043 0304 	orrne.w	r3, r3, #4
90010e58:	f043 0302 	orreq.w	r3, r3, #2
90010e5c:	80c3      	strh	r3, [r0, #6]
90010e5e:	6828      	ldr	r0, [r5, #0]
90010e60:	b007      	add	sp, #28
90010e62:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e66:	b002      	add	sp, #8
90010e68:	f006 be2a 	b.w	90017ac0 <EwDoneIssue>
90010e6c:	b007      	add	sp, #28
90010e6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e72:	b002      	add	sp, #8
90010e74:	4770      	bx	lr

90010e76 <EwGetTextExtent>:
90010e76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010e7a:	b087      	sub	sp, #28
90010e7c:	4604      	mov	r4, r0
90010e7e:	460d      	mov	r5, r1
90010e80:	9301      	str	r3, [sp, #4]
90010e82:	b113      	cbz	r3, 90010e8a <EwGetTextExtent+0x14>
90010e84:	b10a      	cbz	r2, 90010e8a <EwGetTextExtent+0x14>
90010e86:	8813      	ldrh	r3, [r2, #0]
90010e88:	b943      	cbnz	r3, 90010e9c <EwGetTextExtent+0x26>
90010e8a:	2300      	movs	r3, #0
90010e8c:	e9c4 3300 	strd	r3, r3, [r4]
90010e90:	e9c4 3302 	strd	r3, r3, [r4, #8]
90010e94:	4620      	mov	r0, r4
90010e96:	b007      	add	sp, #28
90010e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010e9c:	2900      	cmp	r1, #0
90010e9e:	d035      	beq.n	90010f0c <EwGetTextExtent+0x96>
90010ea0:	2600      	movs	r6, #0
90010ea2:	1e93      	subs	r3, r2, #2
90010ea4:	f242 0a26 	movw	sl, #8230	; 0x2026
90010ea8:	4637      	mov	r7, r6
90010eaa:	46b0      	mov	r8, r6
90010eac:	9302      	str	r3, [sp, #8]
90010eae:	9600      	str	r6, [sp, #0]
90010eb0:	e9cd 6603 	strd	r6, r6, [sp, #12]
90010eb4:	9b02      	ldr	r3, [sp, #8]
90010eb6:	f833 bf02 	ldrh.w	fp, [r3, #2]!
90010eba:	9302      	str	r3, [sp, #8]
90010ebc:	f1bb 0f00 	cmp.w	fp, #0
90010ec0:	d01d      	beq.n	90010efe <EwGetTextExtent+0x88>
90010ec2:	45d3      	cmp	fp, sl
90010ec4:	d12b      	bne.n	90010f1e <EwGetTextExtent+0xa8>
90010ec6:	4651      	mov	r1, sl
90010ec8:	4628      	mov	r0, r5
90010eca:	f7fb f865 	bl	9000bf98 <UpdateWatermark1+0x518>
90010ece:	2800      	cmp	r0, #0
90010ed0:	bf15      	itete	ne
90010ed2:	f04f 0901 	movne.w	r9, #1
90010ed6:	f04f 0903 	moveq.w	r9, #3
90010eda:	46d3      	movne	fp, sl
90010edc:	f04f 0b2e 	moveq.w	fp, #46	; 0x2e
90010ee0:	4659      	mov	r1, fp
90010ee2:	4628      	mov	r0, r5
90010ee4:	f7fa fc40 	bl	9000b768 <UpdateWatermark2+0xc42>
90010ee8:	4603      	mov	r3, r0
90010eea:	2800      	cmp	r0, #0
90010eec:	d143      	bne.n	90010f76 <EwGetTextExtent+0x100>
90010eee:	f006 fd9b 	bl	90017a28 <EwFlushTasks>
90010ef2:	2800      	cmp	r0, #0
90010ef4:	d1f4      	bne.n	90010ee0 <EwGetTextExtent+0x6a>
90010ef6:	9b01      	ldr	r3, [sp, #4]
90010ef8:	3b01      	subs	r3, #1
90010efa:	9301      	str	r3, [sp, #4]
90010efc:	d1da      	bne.n	90010eb4 <EwGetTextExtent+0x3e>
90010efe:	9b04      	ldr	r3, [sp, #16]
90010f00:	60e6      	str	r6, [r4, #12]
90010f02:	6023      	str	r3, [r4, #0]
90010f04:	9b00      	ldr	r3, [sp, #0]
90010f06:	e9c4 3701 	strd	r3, r7, [r4, #4]
90010f0a:	e7c3      	b.n	90010e94 <EwGetTextExtent+0x1e>
90010f0c:	460a      	mov	r2, r1
90010f0e:	20a9      	movs	r0, #169	; 0xa9
90010f10:	f00c fab4 	bl	9001d47c <EwErrorPD>
90010f14:	e9c4 5500 	strd	r5, r5, [r4]
90010f18:	e9c4 5502 	strd	r5, r5, [r4, #8]
90010f1c:	e7ba      	b.n	90010e94 <EwGetTextExtent+0x1e>
90010f1e:	f04f 0901 	mov.w	r9, #1
90010f22:	e7dd      	b.n	90010ee0 <EwGetTextExtent+0x6a>
90010f24:	f9b3 1020 	ldrsh.w	r1, [r3, #32]
90010f28:	bb49      	cbnz	r1, 90010f7e <EwGetTextExtent+0x108>
90010f2a:	f9b3 101c 	ldrsh.w	r1, [r3, #28]
90010f2e:	bb31      	cbnz	r1, 90010f7e <EwGetTextExtent+0x108>
90010f30:	f006 fca4 	bl	9001787c <EwFreeGlyph>
90010f34:	e7df      	b.n	90010ef6 <EwGetTextExtent+0x80>
90010f36:	9903      	ldr	r1, [sp, #12]
90010f38:	465a      	mov	r2, fp
90010f3a:	6968      	ldr	r0, [r5, #20]
90010f3c:	9305      	str	r3, [sp, #20]
90010f3e:	f00b fa2d 	bl	9001c39c <EwFntGetKerning>
90010f42:	9b05      	ldr	r3, [sp, #20]
90010f44:	4440      	add	r0, r8
90010f46:	f9b3 c020 	ldrsh.w	ip, [r3, #32]
90010f4a:	f9b3 e01c 	ldrsh.w	lr, [r3, #28]
90010f4e:	eb0c 0100 	add.w	r1, ip, r0
90010f52:	4471      	add	r1, lr
90010f54:	428f      	cmp	r7, r1
90010f56:	bfb8      	it	lt
90010f58:	460f      	movlt	r7, r1
90010f5a:	f9b3 1024 	ldrsh.w	r1, [r3, #36]	; 0x24
90010f5e:	eb1c 0f0e 	cmn.w	ip, lr
90010f62:	eb01 0800 	add.w	r8, r1, r0
90010f66:	d103      	bne.n	90010f70 <EwGetTextExtent+0xfa>
90010f68:	b111      	cbz	r1, 90010f70 <EwGetTextExtent+0xfa>
90010f6a:	4547      	cmp	r7, r8
90010f6c:	bfb8      	it	lt
90010f6e:	4647      	movlt	r7, r8
90010f70:	f8cd b00c 	str.w	fp, [sp, #12]
90010f74:	e016      	b.n	90010fa4 <EwGetTextExtent+0x12e>
90010f76:	f9b0 1024 	ldrsh.w	r1, [r0, #36]	; 0x24
90010f7a:	2900      	cmp	r1, #0
90010f7c:	d0d2      	beq.n	90010f24 <EwGetTextExtent+0xae>
90010f7e:	f1b8 0f00 	cmp.w	r8, #0
90010f82:	d102      	bne.n	90010f8a <EwGetTextExtent+0x114>
90010f84:	f9b3 2020 	ldrsh.w	r2, [r3, #32]
90010f88:	9204      	str	r2, [sp, #16]
90010f8a:	f9b3 0022 	ldrsh.w	r0, [r3, #34]	; 0x22
90010f8e:	9a00      	ldr	r2, [sp, #0]
90010f90:	f9b3 101e 	ldrsh.w	r1, [r3, #30]
90010f94:	4282      	cmp	r2, r0
90010f96:	4401      	add	r1, r0
90010f98:	bfa8      	it	ge
90010f9a:	4602      	movge	r2, r0
90010f9c:	428e      	cmp	r6, r1
90010f9e:	9200      	str	r2, [sp, #0]
90010fa0:	bfb8      	it	lt
90010fa2:	460e      	movlt	r6, r1
90010fa4:	f1b9 0901 	subs.w	r9, r9, #1
90010fa8:	d2c5      	bcs.n	90010f36 <EwGetTextExtent+0xc0>
90010faa:	4618      	mov	r0, r3
90010fac:	e7c0      	b.n	90010f30 <EwGetTextExtent+0xba>

90010fae <EwGetTextAdvance>:
90010fae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010fb2:	4606      	mov	r6, r0
90010fb4:	4614      	mov	r4, r2
90010fb6:	2a00      	cmp	r2, #0
90010fb8:	d033      	beq.n	90011022 <EwGetTextAdvance+0x74>
90010fba:	2900      	cmp	r1, #0
90010fbc:	d047      	beq.n	9001104e <EwGetTextAdvance+0xa0>
90010fbe:	880b      	ldrh	r3, [r1, #0]
90010fc0:	2b00      	cmp	r3, #0
90010fc2:	d046      	beq.n	90011052 <EwGetTextAdvance+0xa4>
90010fc4:	b338      	cbz	r0, 90011016 <EwGetTextAdvance+0x68>
90010fc6:	2400      	movs	r4, #0
90010fc8:	1e8b      	subs	r3, r1, #2
90010fca:	4691      	mov	r9, r2
90010fcc:	f242 0a26 	movw	sl, #8230	; 0x2026
90010fd0:	46a3      	mov	fp, r4
90010fd2:	9301      	str	r3, [sp, #4]
90010fd4:	9b01      	ldr	r3, [sp, #4]
90010fd6:	f833 5f02 	ldrh.w	r5, [r3, #2]!
90010fda:	9301      	str	r3, [sp, #4]
90010fdc:	b30d      	cbz	r5, 90011022 <EwGetTextAdvance+0x74>
90010fde:	4555      	cmp	r5, sl
90010fe0:	d123      	bne.n	9001102a <EwGetTextAdvance+0x7c>
90010fe2:	4651      	mov	r1, sl
90010fe4:	4630      	mov	r0, r6
90010fe6:	f7fa ffd7 	bl	9000bf98 <UpdateWatermark1+0x518>
90010fea:	2800      	cmp	r0, #0
90010fec:	bf15      	itete	ne
90010fee:	f04f 0801 	movne.w	r8, #1
90010ff2:	f04f 0803 	moveq.w	r8, #3
90010ff6:	4655      	movne	r5, sl
90010ff8:	252e      	moveq	r5, #46	; 0x2e
90010ffa:	4629      	mov	r1, r5
90010ffc:	4630      	mov	r0, r6
90010ffe:	f7fa fbb3 	bl	9000b768 <UpdateWatermark2+0xc42>
90011002:	4607      	mov	r7, r0
90011004:	bb38      	cbnz	r0, 90011056 <EwGetTextAdvance+0xa8>
90011006:	f006 fd0f 	bl	90017a28 <EwFlushTasks>
9001100a:	2800      	cmp	r0, #0
9001100c:	d1f5      	bne.n	90010ffa <EwGetTextAdvance+0x4c>
9001100e:	f1b9 0901 	subs.w	r9, r9, #1
90011012:	d1df      	bne.n	90010fd4 <EwGetTextAdvance+0x26>
90011014:	e005      	b.n	90011022 <EwGetTextAdvance+0x74>
90011016:	4634      	mov	r4, r6
90011018:	4602      	mov	r2, r0
9001101a:	4601      	mov	r1, r0
9001101c:	20aa      	movs	r0, #170	; 0xaa
9001101e:	f00c fa2d 	bl	9001d47c <EwErrorPD>
90011022:	4620      	mov	r0, r4
90011024:	b003      	add	sp, #12
90011026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001102a:	f04f 0801 	mov.w	r8, #1
9001102e:	e7e4      	b.n	90010ffa <EwGetTextAdvance+0x4c>
90011030:	4659      	mov	r1, fp
90011032:	462a      	mov	r2, r5
90011034:	6970      	ldr	r0, [r6, #20]
90011036:	46ab      	mov	fp, r5
90011038:	f00b f9b0 	bl	9001c39c <EwFntGetKerning>
9001103c:	f9b7 3024 	ldrsh.w	r3, [r7, #36]	; 0x24
90011040:	4418      	add	r0, r3
90011042:	4404      	add	r4, r0
90011044:	f1b8 0801 	subs.w	r8, r8, #1
90011048:	d2f2      	bcs.n	90011030 <EwGetTextAdvance+0x82>
9001104a:	4638      	mov	r0, r7
9001104c:	e00f      	b.n	9001106e <EwGetTextAdvance+0xc0>
9001104e:	460c      	mov	r4, r1
90011050:	e7e7      	b.n	90011022 <EwGetTextAdvance+0x74>
90011052:	461c      	mov	r4, r3
90011054:	e7e5      	b.n	90011022 <EwGetTextAdvance+0x74>
90011056:	f9b0 3024 	ldrsh.w	r3, [r0, #36]	; 0x24
9001105a:	2b00      	cmp	r3, #0
9001105c:	d1f2      	bne.n	90011044 <EwGetTextAdvance+0x96>
9001105e:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
90011062:	2b00      	cmp	r3, #0
90011064:	d1ee      	bne.n	90011044 <EwGetTextAdvance+0x96>
90011066:	f9b7 301c 	ldrsh.w	r3, [r7, #28]
9001106a:	2b00      	cmp	r3, #0
9001106c:	d1ea      	bne.n	90011044 <EwGetTextAdvance+0x96>
9001106e:	f006 fc05 	bl	9001787c <EwFreeGlyph>
90011072:	e7cc      	b.n	9001100e <EwGetTextAdvance+0x60>

90011074 <EwDrawText>:
90011074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011078:	ed2d 8b02 	vpush	{d8}
9001107c:	b09d      	sub	sp, #116	; 0x74
9001107e:	461c      	mov	r4, r3
90011080:	468b      	mov	fp, r1
90011082:	4615      	mov	r5, r2
90011084:	9f28      	ldr	r7, [sp, #160]	; 0xa0
90011086:	9016      	str	r0, [sp, #88]	; 0x58
90011088:	4639      	mov	r1, r7
9001108a:	e9dd 6333 	ldrd	r6, r3, [sp, #204]	; 0xcc
9001108e:	9303      	str	r3, [sp, #12]
90011090:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
90011094:	931b      	str	r3, [sp, #108]	; 0x6c
90011096:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90011098:	930e      	str	r3, [sp, #56]	; 0x38
9001109a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001109c:	930d      	str	r3, [sp, #52]	; 0x34
9001109e:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
900110a0:	9310      	str	r3, [sp, #64]	; 0x40
900110a2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900110a4:	9311      	str	r3, [sp, #68]	; 0x44
900110a6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
900110a8:	9307      	str	r3, [sp, #28]
900110aa:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900110ac:	9315      	str	r3, [sp, #84]	; 0x54
900110ae:	f7fa fd1d 	bl	9000baec <UpdateWatermark1+0x6c>
900110b2:	f89d 30d7 	ldrb.w	r3, [sp, #215]	; 0xd7
900110b6:	f89d 20d6 	ldrb.w	r2, [sp, #214]	; 0xd6
900110ba:	f89d 10d5 	ldrb.w	r1, [sp, #213]	; 0xd5
900110be:	9008      	str	r0, [sp, #32]
900110c0:	f89d 00d4 	ldrb.w	r0, [sp, #212]	; 0xd4
900110c4:	f7f3 fe15 	bl	90004cf2 <EwPackColor>
900110c8:	f89d 30db 	ldrb.w	r3, [sp, #219]	; 0xdb
900110cc:	f89d 20da 	ldrb.w	r2, [sp, #218]	; 0xda
900110d0:	f89d 10d9 	ldrb.w	r1, [sp, #217]	; 0xd9
900110d4:	9009      	str	r0, [sp, #36]	; 0x24
900110d6:	f89d 00d8 	ldrb.w	r0, [sp, #216]	; 0xd8
900110da:	f7f3 fe0a 	bl	90004cf2 <EwPackColor>
900110de:	f89d 30e3 	ldrb.w	r3, [sp, #227]	; 0xe3
900110e2:	f89d 20e2 	ldrb.w	r2, [sp, #226]	; 0xe2
900110e6:	f89d 10e1 	ldrb.w	r1, [sp, #225]	; 0xe1
900110ea:	9018      	str	r0, [sp, #96]	; 0x60
900110ec:	f89d 00e0 	ldrb.w	r0, [sp, #224]	; 0xe0
900110f0:	f7f3 fdff 	bl	90004cf2 <EwPackColor>
900110f4:	f89d 30df 	ldrb.w	r3, [sp, #223]	; 0xdf
900110f8:	900a      	str	r0, [sp, #40]	; 0x28
900110fa:	f89d 20de 	ldrb.w	r2, [sp, #222]	; 0xde
900110fe:	f89d 10dd 	ldrb.w	r1, [sp, #221]	; 0xdd
90011102:	f89d 00dc 	ldrb.w	r0, [sp, #220]	; 0xdc
90011106:	f7f3 fdf4 	bl	90004cf2 <EwPackColor>
9001110a:	900b      	str	r0, [sp, #44]	; 0x2c
9001110c:	2c00      	cmp	r4, #0
9001110e:	f000 8150 	beq.w	900113b2 <EwDrawText+0x33e>
90011112:	2d00      	cmp	r5, #0
90011114:	f000 814d 	beq.w	900113b2 <EwDrawText+0x33e>
90011118:	882b      	ldrh	r3, [r5, #0]
9001111a:	2b00      	cmp	r3, #0
9001111c:	f000 8149 	beq.w	900113b2 <EwDrawText+0x33e>
90011120:	9b08      	ldr	r3, [sp, #32]
90011122:	b12b      	cbz	r3, 90011130 <EwDrawText+0xbc>
90011124:	681a      	ldr	r2, [r3, #0]
90011126:	8c13      	ldrh	r3, [r2, #32]
90011128:	3301      	adds	r3, #1
9001112a:	b29b      	uxth	r3, r3
9001112c:	2b01      	cmp	r3, #1
9001112e:	d909      	bls.n	90011144 <EwDrawText+0xd0>
90011130:	463a      	mov	r2, r7
90011132:	9916      	ldr	r1, [sp, #88]	; 0x58
90011134:	20a7      	movs	r0, #167	; 0xa7
90011136:	b01d      	add	sp, #116	; 0x74
90011138:	ecbd 8b02 	vpop	{d8}
9001113c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011140:	f00c b99c 	b.w	9001d47c <EwErrorPD>
90011144:	6993      	ldr	r3, [r2, #24]
90011146:	b90b      	cbnz	r3, 9001114c <EwDrawText+0xd8>
90011148:	69d3      	ldr	r3, [r2, #28]
9001114a:	b123      	cbz	r3, 90011156 <EwDrawText+0xe2>
9001114c:	463a      	mov	r2, r7
9001114e:	9916      	ldr	r1, [sp, #88]	; 0x58
90011150:	f44f 70ae 	mov.w	r0, #348	; 0x15c
90011154:	e7ef      	b.n	90011136 <EwDrawText+0xc2>
90011156:	f1bb 0f00 	cmp.w	fp, #0
9001115a:	d103      	bne.n	90011164 <EwDrawText+0xf0>
9001115c:	465a      	mov	r2, fp
9001115e:	4659      	mov	r1, fp
90011160:	20a8      	movs	r0, #168	; 0xa8
90011162:	e7e8      	b.n	90011136 <EwDrawText+0xc2>
90011164:	9b03      	ldr	r3, [sp, #12]
90011166:	2b5a      	cmp	r3, #90	; 0x5a
90011168:	d006      	beq.n	90011178 <EwDrawText+0x104>
9001116a:	2bb4      	cmp	r3, #180	; 0xb4
9001116c:	d004      	beq.n	90011178 <EwDrawText+0x104>
9001116e:	f5b3 7f87 	cmp.w	r3, #270	; 0x10e
90011172:	bf18      	it	ne
90011174:	2300      	movne	r3, #0
90011176:	9303      	str	r3, [sp, #12]
90011178:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001117a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001117c:	9903      	ldr	r1, [sp, #12]
9001117e:	4293      	cmp	r3, r2
90011180:	bfb8      	it	lt
90011182:	4613      	movlt	r3, r2
90011184:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90011186:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001118a:	9302      	str	r3, [sp, #8]
9001118c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001118e:	4293      	cmp	r3, r2
90011190:	bfb8      	it	lt
90011192:	4613      	movlt	r3, r2
90011194:	9a10      	ldr	r2, [sp, #64]	; 0x40
90011196:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001119a:	9301      	str	r3, [sp, #4]
9001119c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001119e:	4293      	cmp	r3, r2
900111a0:	bfa8      	it	ge
900111a2:	4613      	movge	r3, r2
900111a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
900111a6:	6852      	ldr	r2, [r2, #4]
900111a8:	4293      	cmp	r3, r2
900111aa:	bfa8      	it	ge
900111ac:	4613      	movge	r3, r2
900111ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
900111b0:	9305      	str	r3, [sp, #20]
900111b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900111b4:	4293      	cmp	r3, r2
900111b6:	bfa8      	it	ge
900111b8:	4613      	movge	r3, r2
900111ba:	9a16      	ldr	r2, [sp, #88]	; 0x58
900111bc:	6892      	ldr	r2, [r2, #8]
900111be:	4293      	cmp	r3, r2
900111c0:	bfa8      	it	ge
900111c2:	4613      	movge	r3, r2
900111c4:	295a      	cmp	r1, #90	; 0x5a
900111c6:	9306      	str	r3, [sp, #24]
900111c8:	e9db 2300 	ldrd	r2, r3, [fp]
900111cc:	f040 808a 	bne.w	900112e4 <EwDrawText+0x270>
900111d0:	9815      	ldr	r0, [sp, #84]	; 0x54
900111d2:	990e      	ldr	r1, [sp, #56]	; 0x38
900111d4:	9f07      	ldr	r7, [sp, #28]
900111d6:	1a09      	subs	r1, r1, r0
900111d8:	9811      	ldr	r0, [sp, #68]	; 0x44
900111da:	1a8a      	subs	r2, r1, r2
900111dc:	4438      	add	r0, r7
900111de:	9f02      	ldr	r7, [sp, #8]
900111e0:	440b      	add	r3, r1
900111e2:	3801      	subs	r0, #1
900111e4:	4297      	cmp	r7, r2
900111e6:	bfb8      	it	lt
900111e8:	4617      	movlt	r7, r2
900111ea:	9a05      	ldr	r2, [sp, #20]
900111ec:	4293      	cmp	r3, r2
900111ee:	9702      	str	r7, [sp, #8]
900111f0:	bfbc      	itt	lt
900111f2:	3301      	addlt	r3, #1
900111f4:	9305      	strlt	r3, [sp, #20]
900111f6:	9b06      	ldr	r3, [sp, #24]
900111f8:	1ac3      	subs	r3, r0, r3
900111fa:	f103 0901 	add.w	r9, r3, #1
900111fe:	9b01      	ldr	r3, [sp, #4]
90011200:	1ac0      	subs	r0, r0, r3
90011202:	1c43      	adds	r3, r0, #1
90011204:	9a05      	ldr	r2, [sp, #20]
90011206:	9314      	str	r3, [sp, #80]	; 0x50
90011208:	9b02      	ldr	r3, [sp, #8]
9001120a:	4293      	cmp	r3, r2
9001120c:	f280 80d1 	bge.w	900113b2 <EwDrawText+0x33e>
90011210:	9b01      	ldr	r3, [sp, #4]
90011212:	9a06      	ldr	r2, [sp, #24]
90011214:	4293      	cmp	r3, r2
90011216:	f280 80cc 	bge.w	900113b2 <EwDrawText+0x33e>
9001121a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001121c:	b14b      	cbz	r3, 90011232 <EwDrawText+0x1be>
9001121e:	9a18      	ldr	r2, [sp, #96]	; 0x60
90011220:	9b09      	ldr	r3, [sp, #36]	; 0x24
90011222:	4313      	orrs	r3, r2
90011224:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90011226:	4313      	orrs	r3, r2
90011228:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001122a:	4313      	orrs	r3, r2
9001122c:	0e1b      	lsrs	r3, r3, #24
9001122e:	f000 80c0 	beq.w	900113b2 <EwDrawText+0x33e>
90011232:	2e00      	cmp	r6, #0
90011234:	f340 80c2 	ble.w	900113bc <EwDrawText+0x348>
90011238:	4622      	mov	r2, r4
9001123a:	4629      	mov	r1, r5
9001123c:	4658      	mov	r0, fp
9001123e:	f7ff feb6 	bl	90010fae <EwGetTextAdvance>
90011242:	1a30      	subs	r0, r6, r0
90011244:	2800      	cmp	r0, #0
90011246:	f340 80b9 	ble.w	900113bc <EwDrawText+0x348>
9001124a:	1ea9      	subs	r1, r5, #2
9001124c:	4622      	mov	r2, r4
9001124e:	2600      	movs	r6, #0
90011250:	f831 3f02 	ldrh.w	r3, [r1, #2]!
90011254:	b133      	cbz	r3, 90011264 <EwDrawText+0x1f0>
90011256:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9001125a:	2b20      	cmp	r3, #32
9001125c:	bf08      	it	eq
9001125e:	3601      	addeq	r6, #1
90011260:	3a01      	subs	r2, #1
90011262:	d1f5      	bne.n	90011250 <EwDrawText+0x1dc>
90011264:	2e00      	cmp	r6, #0
90011266:	f000 80a9 	beq.w	900113bc <EwDrawText+0x348>
9001126a:	0400      	lsls	r0, r0, #16
9001126c:	fb90 f3f6 	sdiv	r3, r0, r6
90011270:	2600      	movs	r6, #0
90011272:	930f      	str	r3, [sp, #60]	; 0x3c
90011274:	f104 38ff 	add.w	r8, r4, #4294967295
90011278:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001127c:	f242 0a26 	movw	sl, #8230	; 0x2026
90011280:	9519      	str	r5, [sp, #100]	; 0x64
90011282:	9617      	str	r6, [sp, #92]	; 0x5c
90011284:	9313      	str	r3, [sp, #76]	; 0x4c
90011286:	f108 0301 	add.w	r3, r8, #1
9001128a:	930c      	str	r3, [sp, #48]	; 0x30
9001128c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001128e:	9312      	str	r3, [sp, #72]	; 0x48
90011290:	f833 5b02 	ldrh.w	r5, [r3], #2
90011294:	9319      	str	r3, [sp, #100]	; 0x64
90011296:	2d00      	cmp	r5, #0
90011298:	f000 808b 	beq.w	900113b2 <EwDrawText+0x33e>
9001129c:	4555      	cmp	r5, sl
9001129e:	d173      	bne.n	90011388 <EwDrawText+0x314>
900112a0:	4651      	mov	r1, sl
900112a2:	4658      	mov	r0, fp
900112a4:	f7fa fe78 	bl	9000bf98 <UpdateWatermark1+0x518>
900112a8:	2800      	cmp	r0, #0
900112aa:	bf0d      	iteet	eq
900112ac:	2303      	moveq	r3, #3
900112ae:	2301      	movne	r3, #1
900112b0:	4655      	movne	r5, sl
900112b2:	252e      	moveq	r5, #46	; 0x2e
900112b4:	9304      	str	r3, [sp, #16]
900112b6:	4629      	mov	r1, r5
900112b8:	4658      	mov	r0, fp
900112ba:	f7fa fa55 	bl	9000b768 <UpdateWatermark2+0xc42>
900112be:	4604      	mov	r4, r0
900112c0:	2800      	cmp	r0, #0
900112c2:	f040 8250 	bne.w	90011766 <EwDrawText+0x6f2>
900112c6:	f006 fbaf 	bl	90017a28 <EwFlushTasks>
900112ca:	2800      	cmp	r0, #0
900112cc:	d1f3      	bne.n	900112b6 <EwDrawText+0x242>
900112ce:	462a      	mov	r2, r5
900112d0:	f8db 1018 	ldr.w	r1, [fp, #24]
900112d4:	20b5      	movs	r0, #181	; 0xb5
900112d6:	b01d      	add	sp, #116	; 0x74
900112d8:	ecbd 8b02 	vpop	{d8}
900112dc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900112e0:	f00c b8c4 	b.w	9001d46c <EwErrorSD>
900112e4:	9903      	ldr	r1, [sp, #12]
900112e6:	29b4      	cmp	r1, #180	; 0xb4
900112e8:	d119      	bne.n	9001131e <EwDrawText+0x2aa>
900112ea:	9910      	ldr	r1, [sp, #64]	; 0x40
900112ec:	9807      	ldr	r0, [sp, #28]
900112ee:	9f15      	ldr	r7, [sp, #84]	; 0x54
900112f0:	1808      	adds	r0, r1, r0
900112f2:	9911      	ldr	r1, [sp, #68]	; 0x44
900112f4:	4439      	add	r1, r7
900112f6:	9f01      	ldr	r7, [sp, #4]
900112f8:	3801      	subs	r0, #1
900112fa:	3901      	subs	r1, #1
900112fc:	1acb      	subs	r3, r1, r3
900112fe:	440a      	add	r2, r1
90011300:	429f      	cmp	r7, r3
90011302:	bfb8      	it	lt
90011304:	461f      	movlt	r7, r3
90011306:	9b06      	ldr	r3, [sp, #24]
90011308:	429a      	cmp	r2, r3
9001130a:	9701      	str	r7, [sp, #4]
9001130c:	bfbc      	itt	lt
9001130e:	1c53      	addlt	r3, r2, #1
90011310:	9306      	strlt	r3, [sp, #24]
90011312:	9b05      	ldr	r3, [sp, #20]
90011314:	1ac3      	subs	r3, r0, r3
90011316:	f103 0901 	add.w	r9, r3, #1
9001131a:	9b02      	ldr	r3, [sp, #8]
9001131c:	e770      	b.n	90011200 <EwDrawText+0x18c>
9001131e:	9903      	ldr	r1, [sp, #12]
90011320:	f5b1 7f87 	cmp.w	r1, #270	; 0x10e
90011324:	d118      	bne.n	90011358 <EwDrawText+0x2e4>
90011326:	9815      	ldr	r0, [sp, #84]	; 0x54
90011328:	9910      	ldr	r1, [sp, #64]	; 0x40
9001132a:	9f07      	ldr	r7, [sp, #28]
9001132c:	4401      	add	r1, r0
9001132e:	980d      	ldr	r0, [sp, #52]	; 0x34
90011330:	3901      	subs	r1, #1
90011332:	1bc0      	subs	r0, r0, r7
90011334:	9f02      	ldr	r7, [sp, #8]
90011336:	1acb      	subs	r3, r1, r3
90011338:	440a      	add	r2, r1
9001133a:	429f      	cmp	r7, r3
9001133c:	bfb8      	it	lt
9001133e:	461f      	movlt	r7, r3
90011340:	9b05      	ldr	r3, [sp, #20]
90011342:	429a      	cmp	r2, r3
90011344:	9702      	str	r7, [sp, #8]
90011346:	bfbc      	itt	lt
90011348:	1c53      	addlt	r3, r2, #1
9001134a:	9305      	strlt	r3, [sp, #20]
9001134c:	9b01      	ldr	r3, [sp, #4]
9001134e:	eba3 0900 	sub.w	r9, r3, r0
90011352:	9b06      	ldr	r3, [sp, #24]
90011354:	1a1b      	subs	r3, r3, r0
90011356:	e755      	b.n	90011204 <EwDrawText+0x190>
90011358:	9807      	ldr	r0, [sp, #28]
9001135a:	990e      	ldr	r1, [sp, #56]	; 0x38
9001135c:	9f15      	ldr	r7, [sp, #84]	; 0x54
9001135e:	1a09      	subs	r1, r1, r0
90011360:	980d      	ldr	r0, [sp, #52]	; 0x34
90011362:	1bc0      	subs	r0, r0, r7
90011364:	9f01      	ldr	r7, [sp, #4]
90011366:	1a82      	subs	r2, r0, r2
90011368:	4403      	add	r3, r0
9001136a:	4297      	cmp	r7, r2
9001136c:	bfb8      	it	lt
9001136e:	4617      	movlt	r7, r2
90011370:	9a06      	ldr	r2, [sp, #24]
90011372:	4293      	cmp	r3, r2
90011374:	9701      	str	r7, [sp, #4]
90011376:	bfbc      	itt	lt
90011378:	3301      	addlt	r3, #1
9001137a:	9306      	strlt	r3, [sp, #24]
9001137c:	9b02      	ldr	r3, [sp, #8]
9001137e:	eba3 0901 	sub.w	r9, r3, r1
90011382:	9b05      	ldr	r3, [sp, #20]
90011384:	1a5b      	subs	r3, r3, r1
90011386:	e73d      	b.n	90011204 <EwDrawText+0x190>
90011388:	2301      	movs	r3, #1
9001138a:	9304      	str	r3, [sp, #16]
9001138c:	e793      	b.n	900112b6 <EwDrawText+0x242>
9001138e:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90011392:	2b00      	cmp	r3, #0
90011394:	f040 81ec 	bne.w	90011770 <EwDrawText+0x6fc>
90011398:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
9001139c:	2b00      	cmp	r3, #0
9001139e:	f040 81e7 	bne.w	90011770 <EwDrawText+0x6fc>
900113a2:	4647      	mov	r7, r8
900113a4:	f006 fa6a 	bl	9001787c <EwFreeGlyph>
900113a8:	f108 38ff 	add.w	r8, r8, #4294967295
900113ac:	2f00      	cmp	r7, #0
900113ae:	f47f af6a 	bne.w	90011286 <EwDrawText+0x212>
900113b2:	b01d      	add	sp, #116	; 0x74
900113b4:	ecbd 8b02 	vpop	{d8}
900113b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900113bc:	2300      	movs	r3, #0
900113be:	e757      	b.n	90011270 <EwDrawText+0x1fc>
900113c0:	2128      	movs	r1, #40	; 0x28
900113c2:	f006 fb0e 	bl	900179e2 <EwAllocTaskData>
900113c6:	9b08      	ldr	r3, [sp, #32]
900113c8:	990d      	ldr	r1, [sp, #52]	; 0x34
900113ca:	4680      	mov	r8, r0
900113cc:	889a      	ldrh	r2, [r3, #4]
900113ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900113d0:	18d3      	adds	r3, r2, r3
900113d2:	8003      	strh	r3, [r0, #0]
900113d4:	9b08      	ldr	r3, [sp, #32]
900113d6:	891b      	ldrh	r3, [r3, #8]
900113d8:	1859      	adds	r1, r3, r1
900113da:	8041      	strh	r1, [r0, #2]
900113dc:	9910      	ldr	r1, [sp, #64]	; 0x40
900113de:	440a      	add	r2, r1
900113e0:	8082      	strh	r2, [r0, #4]
900113e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
900113e4:	4413      	add	r3, r2
900113e6:	80c3      	strh	r3, [r0, #6]
900113e8:	9b07      	ldr	r3, [sp, #28]
900113ea:	1af3      	subs	r3, r6, r3
900113ec:	8103      	strh	r3, [r0, #8]
900113ee:	9b15      	ldr	r3, [sp, #84]	; 0x54
900113f0:	425b      	negs	r3, r3
900113f2:	8143      	strh	r3, [r0, #10]
900113f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900113f6:	6183      	str	r3, [r0, #24]
900113f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
900113fa:	61c3      	str	r3, [r0, #28]
900113fc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900113fe:	6203      	str	r3, [r0, #32]
90011400:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90011402:	6243      	str	r3, [r0, #36]	; 0x24
90011404:	2300      	movs	r3, #0
90011406:	8283      	strh	r3, [r0, #20]
90011408:	9b03      	ldr	r3, [sp, #12]
9001140a:	82c3      	strh	r3, [r0, #22]
9001140c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001140e:	60c3      	str	r3, [r0, #12]
90011410:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90011412:	6103      	str	r3, [r0, #16]
90011414:	9b03      	ldr	r3, [sp, #12]
90011416:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
9001141a:	2b5a      	cmp	r3, #90	; 0x5a
9001141c:	f040 8092 	bne.w	90011544 <EwDrawText+0x4d0>
90011420:	9b11      	ldr	r3, [sp, #68]	; 0x44
90011422:	9907      	ldr	r1, [sp, #28]
90011424:	440b      	add	r3, r1
90011426:	1b9b      	subs	r3, r3, r6
90011428:	1bdb      	subs	r3, r3, r7
9001142a:	1a9b      	subs	r3, r3, r2
9001142c:	9a06      	ldr	r2, [sp, #24]
9001142e:	429a      	cmp	r2, r3
90011430:	bfa8      	it	ge
90011432:	461a      	movge	r2, r3
90011434:	9206      	str	r2, [sp, #24]
90011436:	f04f 0a00 	mov.w	sl, #0
9001143a:	9b04      	ldr	r3, [sp, #16]
9001143c:	ee18 0a10 	vmov	r0, s16
90011440:	00d9      	lsls	r1, r3, #3
90011442:	f006 face 	bl	900179e2 <EwAllocTaskData>
90011446:	4681      	mov	r9, r0
90011448:	b340      	cbz	r0, 9001149c <EwDrawText+0x428>
9001144a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001144c:	b15b      	cbz	r3, 90011466 <EwDrawText+0x3f2>
9001144e:	f025 0380 	bic.w	r3, r5, #128	; 0x80
90011452:	b29b      	uxth	r3, r3
90011454:	2b20      	cmp	r3, #32
90011456:	d106      	bne.n	90011466 <EwDrawText+0x3f2>
90011458:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001145a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001145c:	4413      	add	r3, r2
9001145e:	eb06 4623 	add.w	r6, r6, r3, asr #16
90011462:	b29b      	uxth	r3, r3
90011464:	9313      	str	r3, [sp, #76]	; 0x4c
90011466:	f109 0a08 	add.w	sl, r9, #8
9001146a:	9a04      	ldr	r2, [sp, #16]
9001146c:	2a00      	cmp	r2, #0
9001146e:	f102 33ff 	add.w	r3, r2, #4294967295
90011472:	f300 8092 	bgt.w	9001159a <EwDrawText+0x526>
90011476:	9b04      	ldr	r3, [sp, #16]
90011478:	46a2      	mov	sl, r4
9001147a:	9a04      	ldr	r2, [sp, #16]
9001147c:	2400      	movs	r4, #0
9001147e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90011482:	9517      	str	r5, [sp, #92]	; 0x5c
90011484:	3a01      	subs	r2, #1
90011486:	eb09 09c3 	add.w	r9, r9, r3, lsl #3
9001148a:	1ad3      	subs	r3, r2, r3
9001148c:	9304      	str	r3, [sp, #16]
9001148e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90011490:	3b01      	subs	r3, #1
90011492:	930c      	str	r3, [sp, #48]	; 0x30
90011494:	9b12      	ldr	r3, [sp, #72]	; 0x48
90011496:	885d      	ldrh	r5, [r3, #2]
90011498:	3302      	adds	r3, #2
9001149a:	9312      	str	r3, [sp, #72]	; 0x48
9001149c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001149e:	b383      	cbz	r3, 90011502 <EwDrawText+0x48e>
900114a0:	b37d      	cbz	r5, 90011502 <EwDrawText+0x48e>
900114a2:	f1b9 0f00 	cmp.w	r9, #0
900114a6:	d02c      	beq.n	90011502 <EwDrawText+0x48e>
900114a8:	f242 0326 	movw	r3, #8230	; 0x2026
900114ac:	429d      	cmp	r5, r3
900114ae:	f040 80a7 	bne.w	90011600 <EwDrawText+0x58c>
900114b2:	4629      	mov	r1, r5
900114b4:	4658      	mov	r0, fp
900114b6:	f7fa fd6f 	bl	9000bf98 <UpdateWatermark1+0x518>
900114ba:	2800      	cmp	r0, #0
900114bc:	bf0a      	itet	eq
900114be:	2303      	moveq	r3, #3
900114c0:	2301      	movne	r3, #1
900114c2:	252e      	moveq	r5, #46	; 0x2e
900114c4:	9304      	str	r3, [sp, #16]
900114c6:	4629      	mov	r1, r5
900114c8:	4658      	mov	r0, fp
900114ca:	f7fa f94d 	bl	9000b768 <UpdateWatermark2+0xc42>
900114ce:	4604      	mov	r4, r0
900114d0:	b140      	cbz	r0, 900114e4 <EwDrawText+0x470>
900114d2:	f9b0 3024 	ldrsh.w	r3, [r0, #36]	; 0x24
900114d6:	b92b      	cbnz	r3, 900114e4 <EwDrawText+0x470>
900114d8:	8c07      	ldrh	r7, [r0, #32]
900114da:	8b83      	ldrh	r3, [r0, #28]
900114dc:	431f      	orrs	r7, r3
900114de:	b23f      	sxth	r7, r7
900114e0:	2f00      	cmp	r7, #0
900114e2:	d076      	beq.n	900115d2 <EwDrawText+0x55e>
900114e4:	462a      	mov	r2, r5
900114e6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900114e8:	f8db 0014 	ldr.w	r0, [fp, #20]
900114ec:	f00a ff56 	bl	9001c39c <EwFntGetKerning>
900114f0:	4607      	mov	r7, r0
900114f2:	b134      	cbz	r4, 90011502 <EwDrawText+0x48e>
900114f4:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
900114f8:	1833      	adds	r3, r6, r0
900114fa:	4413      	add	r3, r2
900114fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
900114fe:	4293      	cmp	r3, r2
90011500:	db9b      	blt.n	9001143a <EwDrawText+0x3c6>
90011502:	f1ba 0f00 	cmp.w	sl, #0
90011506:	f000 8115 	beq.w	90011734 <EwDrawText+0x6c0>
9001150a:	f9ba 1020 	ldrsh.w	r1, [sl, #32]
9001150e:	f9ba 301c 	ldrsh.w	r3, [sl, #28]
90011512:	4439      	add	r1, r7
90011514:	4419      	add	r1, r3
90011516:	f9ba 3024 	ldrsh.w	r3, [sl, #36]	; 0x24
9001151a:	1ac9      	subs	r1, r1, r3
9001151c:	9b03      	ldr	r3, [sp, #12]
9001151e:	2b5a      	cmp	r3, #90	; 0x5a
90011520:	d175      	bne.n	9001160e <EwDrawText+0x59a>
90011522:	9b11      	ldr	r3, [sp, #68]	; 0x44
90011524:	2900      	cmp	r1, #0
90011526:	9a07      	ldr	r2, [sp, #28]
90011528:	eb03 0902 	add.w	r9, r3, r2
9001152c:	9b01      	ldr	r3, [sp, #4]
9001152e:	eba9 0906 	sub.w	r9, r9, r6
90011532:	bfa8      	it	ge
90011534:	eba9 0901 	subge.w	r9, r9, r1
90011538:	4599      	cmp	r9, r3
9001153a:	bfb8      	it	lt
9001153c:	4699      	movlt	r9, r3
9001153e:	9b06      	ldr	r3, [sp, #24]
90011540:	9a05      	ldr	r2, [sp, #20]
90011542:	e0f4      	b.n	9001172e <EwDrawText+0x6ba>
90011544:	9b03      	ldr	r3, [sp, #12]
90011546:	2bb4      	cmp	r3, #180	; 0xb4
90011548:	d10b      	bne.n	90011562 <EwDrawText+0x4ee>
9001154a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001154c:	9907      	ldr	r1, [sp, #28]
9001154e:	440b      	add	r3, r1
90011550:	1b9b      	subs	r3, r3, r6
90011552:	1bdb      	subs	r3, r3, r7
90011554:	1a9b      	subs	r3, r3, r2
90011556:	9a05      	ldr	r2, [sp, #20]
90011558:	429a      	cmp	r2, r3
9001155a:	bfa8      	it	ge
9001155c:	461a      	movge	r2, r3
9001155e:	9205      	str	r2, [sp, #20]
90011560:	e769      	b.n	90011436 <EwDrawText+0x3c2>
90011562:	9b03      	ldr	r3, [sp, #12]
90011564:	f5b3 7f87 	cmp.w	r3, #270	; 0x10e
90011568:	d10b      	bne.n	90011582 <EwDrawText+0x50e>
9001156a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001156c:	9907      	ldr	r1, [sp, #28]
9001156e:	1a5b      	subs	r3, r3, r1
90011570:	4433      	add	r3, r6
90011572:	443b      	add	r3, r7
90011574:	4413      	add	r3, r2
90011576:	9a01      	ldr	r2, [sp, #4]
90011578:	429a      	cmp	r2, r3
9001157a:	bfb8      	it	lt
9001157c:	461a      	movlt	r2, r3
9001157e:	9201      	str	r2, [sp, #4]
90011580:	e759      	b.n	90011436 <EwDrawText+0x3c2>
90011582:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90011584:	9907      	ldr	r1, [sp, #28]
90011586:	1a5b      	subs	r3, r3, r1
90011588:	4433      	add	r3, r6
9001158a:	443b      	add	r3, r7
9001158c:	4413      	add	r3, r2
9001158e:	9a02      	ldr	r2, [sp, #8]
90011590:	429a      	cmp	r2, r3
90011592:	bfb8      	it	lt
90011594:	461a      	movlt	r2, r3
90011596:	9202      	str	r2, [sp, #8]
90011598:	e74d      	b.n	90011436 <EwDrawText+0x3c2>
9001159a:	f8b8 2014 	ldrh.w	r2, [r8, #20]
9001159e:	3201      	adds	r2, #1
900115a0:	e94a 7402 	strd	r7, r4, [sl, #-8]
900115a4:	f8a8 2014 	strh.w	r2, [r8, #20]
900115a8:	f9b4 2024 	ldrsh.w	r2, [r4, #36]	; 0x24
900115ac:	443a      	add	r2, r7
900115ae:	4416      	add	r6, r2
900115b0:	b15b      	cbz	r3, 900115ca <EwDrawText+0x556>
900115b2:	6922      	ldr	r2, [r4, #16]
900115b4:	4629      	mov	r1, r5
900115b6:	f8db 0014 	ldr.w	r0, [fp, #20]
900115ba:	3201      	adds	r2, #1
900115bc:	9317      	str	r3, [sp, #92]	; 0x5c
900115be:	6122      	str	r2, [r4, #16]
900115c0:	462a      	mov	r2, r5
900115c2:	f00a feeb 	bl	9001c39c <EwFntGetKerning>
900115c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900115c8:	4607      	mov	r7, r0
900115ca:	f10a 0a08 	add.w	sl, sl, #8
900115ce:	461a      	mov	r2, r3
900115d0:	e74c      	b.n	9001146c <EwDrawText+0x3f8>
900115d2:	f006 f953 	bl	9001787c <EwFreeGlyph>
900115d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900115d8:	3b01      	subs	r3, #1
900115da:	2b00      	cmp	r3, #0
900115dc:	930c      	str	r3, [sp, #48]	; 0x30
900115de:	dd12      	ble.n	90011606 <EwDrawText+0x592>
900115e0:	9b12      	ldr	r3, [sp, #72]	; 0x48
900115e2:	f833 5f02 	ldrh.w	r5, [r3, #2]!
900115e6:	9312      	str	r3, [sp, #72]	; 0x48
900115e8:	f242 0326 	movw	r3, #8230	; 0x2026
900115ec:	429d      	cmp	r5, r3
900115ee:	f43f af60 	beq.w	900114b2 <EwDrawText+0x43e>
900115f2:	2301      	movs	r3, #1
900115f4:	9304      	str	r3, [sp, #16]
900115f6:	2d00      	cmp	r5, #0
900115f8:	f47f af65 	bne.w	900114c6 <EwDrawText+0x452>
900115fc:	462c      	mov	r4, r5
900115fe:	e771      	b.n	900114e4 <EwDrawText+0x470>
90011600:	2301      	movs	r3, #1
90011602:	9304      	str	r3, [sp, #16]
90011604:	e75f      	b.n	900114c6 <EwDrawText+0x452>
90011606:	2301      	movs	r3, #1
90011608:	463d      	mov	r5, r7
9001160a:	9304      	str	r3, [sp, #16]
9001160c:	e7f6      	b.n	900115fc <EwDrawText+0x588>
9001160e:	9b03      	ldr	r3, [sp, #12]
90011610:	2bb4      	cmp	r3, #180	; 0xb4
90011612:	d16a      	bne.n	900116ea <EwDrawText+0x676>
90011614:	9b10      	ldr	r3, [sp, #64]	; 0x40
90011616:	2900      	cmp	r1, #0
90011618:	9a07      	ldr	r2, [sp, #28]
9001161a:	f8dd 9004 	ldr.w	r9, [sp, #4]
9001161e:	eb03 0a02 	add.w	sl, r3, r2
90011622:	9b02      	ldr	r3, [sp, #8]
90011624:	9a05      	ldr	r2, [sp, #20]
90011626:	ebaa 0a06 	sub.w	sl, sl, r6
9001162a:	bfa8      	it	ge
9001162c:	ebaa 0a01 	subge.w	sl, sl, r1
90011630:	459a      	cmp	sl, r3
90011632:	bfb8      	it	lt
90011634:	469a      	movlt	sl, r3
90011636:	9b06      	ldr	r3, [sp, #24]
90011638:	2100      	movs	r1, #0
9001163a:	ee18 0a10 	vmov	r0, s16
9001163e:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
90011642:	f006 f995 	bl	90017970 <EwAllocTask>
90011646:	9b08      	ldr	r3, [sp, #32]
90011648:	2108      	movs	r1, #8
9001164a:	9a19      	ldr	r2, [sp, #100]	; 0x64
9001164c:	f8b3 c008 	ldrh.w	ip, [r3, #8]
90011650:	8081      	strh	r1, [r0, #4]
90011652:	8899      	ldrh	r1, [r3, #4]
90011654:	44e1      	add	r9, ip
90011656:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90011658:	440a      	add	r2, r1
9001165a:	448a      	add	sl, r1
9001165c:	4463      	add	r3, ip
9001165e:	9918      	ldr	r1, [sp, #96]	; 0x60
90011660:	8182      	strh	r2, [r0, #12]
90011662:	81c3      	strh	r3, [r0, #14]
90011664:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90011666:	9a09      	ldr	r2, [sp, #36]	; 0x24
90011668:	3b00      	subs	r3, #0
9001166a:	f8c0 8010 	str.w	r8, [r0, #16]
9001166e:	f8a0 a008 	strh.w	sl, [r0, #8]
90011672:	bf18      	it	ne
90011674:	2301      	movne	r3, #1
90011676:	428a      	cmp	r2, r1
90011678:	f8a0 900a 	strh.w	r9, [r0, #10]
9001167c:	f000 80bb 	beq.w	900117f6 <EwDrawText+0x782>
90011680:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
90011684:	428a      	cmp	r2, r1
90011686:	f000 80be 	beq.w	90011806 <EwDrawText+0x792>
9001168a:	e9dd 2109 	ldrd	r2, r1, [sp, #36]	; 0x24
9001168e:	428a      	cmp	r2, r1
90011690:	f040 80b9 	bne.w	90011806 <EwDrawText+0x792>
90011694:	9a18      	ldr	r2, [sp, #96]	; 0x60
90011696:	990b      	ldr	r1, [sp, #44]	; 0x2c
90011698:	428a      	cmp	r2, r1
9001169a:	f040 80b4 	bne.w	90011806 <EwDrawText+0x792>
9001169e:	f043 0306 	orr.w	r3, r3, #6
900116a2:	80c3      	strh	r3, [r0, #6]
900116a4:	9b08      	ldr	r3, [sp, #32]
900116a6:	6818      	ldr	r0, [r3, #0]
900116a8:	f006 fa0a 	bl	90017ac0 <EwDoneIssue>
900116ac:	2c00      	cmp	r4, #0
900116ae:	d053      	beq.n	90011758 <EwDrawText+0x6e4>
900116b0:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
900116b4:	19f3      	adds	r3, r6, r7
900116b6:	4413      	add	r3, r2
900116b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900116ba:	4293      	cmp	r3, r2
900116bc:	da0d      	bge.n	900116da <EwDrawText+0x666>
900116be:	9b08      	ldr	r3, [sp, #32]
900116c0:	6818      	ldr	r0, [r3, #0]
900116c2:	f006 f8ed 	bl	900178a0 <EwInitIssue>
900116c6:	ee08 0a10 	vmov	s16, r0
900116ca:	2800      	cmp	r0, #0
900116cc:	f47f ae78 	bne.w	900113c0 <EwDrawText+0x34c>
900116d0:	4602      	mov	r2, r0
900116d2:	9916      	ldr	r1, [sp, #88]	; 0x58
900116d4:	2083      	movs	r0, #131	; 0x83
900116d6:	f00b fed1 	bl	9001d47c <EwErrorPD>
900116da:	4620      	mov	r0, r4
900116dc:	b01d      	add	sp, #116	; 0x74
900116de:	ecbd 8b02 	vpop	{d8}
900116e2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900116e6:	f006 b8c9 	b.w	9001787c <EwFreeGlyph>
900116ea:	9b03      	ldr	r3, [sp, #12]
900116ec:	f5b3 7f87 	cmp.w	r3, #270	; 0x10e
900116f0:	d10e      	bne.n	90011710 <EwDrawText+0x69c>
900116f2:	9a07      	ldr	r2, [sp, #28]
900116f4:	2900      	cmp	r1, #0
900116f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900116f8:	eba3 0302 	sub.w	r3, r3, r2
900116fc:	9a06      	ldr	r2, [sp, #24]
900116fe:	4433      	add	r3, r6
90011700:	bfa8      	it	ge
90011702:	185b      	addge	r3, r3, r1
90011704:	4293      	cmp	r3, r2
90011706:	bfa8      	it	ge
90011708:	4613      	movge	r3, r2
9001170a:	f8dd 9004 	ldr.w	r9, [sp, #4]
9001170e:	e717      	b.n	90011540 <EwDrawText+0x4cc>
90011710:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90011712:	2900      	cmp	r1, #0
90011714:	9a07      	ldr	r2, [sp, #28]
90011716:	f8dd 9004 	ldr.w	r9, [sp, #4]
9001171a:	eba3 0202 	sub.w	r2, r3, r2
9001171e:	9b05      	ldr	r3, [sp, #20]
90011720:	4432      	add	r2, r6
90011722:	bfa8      	it	ge
90011724:	1852      	addge	r2, r2, r1
90011726:	429a      	cmp	r2, r3
90011728:	bfa8      	it	ge
9001172a:	461a      	movge	r2, r3
9001172c:	9b06      	ldr	r3, [sp, #24]
9001172e:	f8dd a008 	ldr.w	sl, [sp, #8]
90011732:	e781      	b.n	90011638 <EwDrawText+0x5c4>
90011734:	9b06      	ldr	r3, [sp, #24]
90011736:	e7e8      	b.n	9001170a <EwDrawText+0x696>
90011738:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001173a:	e7ac      	b.n	90011696 <EwDrawText+0x622>
9001173c:	f043 0302 	orr.w	r3, r3, #2
90011740:	e7af      	b.n	900116a2 <EwDrawText+0x62e>
90011742:	4629      	mov	r1, r5
90011744:	4658      	mov	r0, fp
90011746:	f7fa f80f 	bl	9000b768 <UpdateWatermark2+0xc42>
9001174a:	4604      	mov	r4, r0
9001174c:	2800      	cmp	r0, #0
9001174e:	d1af      	bne.n	900116b0 <EwDrawText+0x63c>
90011750:	f006 f96a 	bl	90017a28 <EwFlushTasks>
90011754:	2800      	cmp	r0, #0
90011756:	d049      	beq.n	900117ec <EwDrawText+0x778>
90011758:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001175a:	2b00      	cmp	r3, #0
9001175c:	f43f ae29 	beq.w	900113b2 <EwDrawText+0x33e>
90011760:	2d00      	cmp	r5, #0
90011762:	d1ee      	bne.n	90011742 <EwDrawText+0x6ce>
90011764:	e625      	b.n	900113b2 <EwDrawText+0x33e>
90011766:	f9b0 3024 	ldrsh.w	r3, [r0, #36]	; 0x24
9001176a:	2b00      	cmp	r3, #0
9001176c:	f43f ae0f 	beq.w	9001138e <EwDrawText+0x31a>
90011770:	462a      	mov	r2, r5
90011772:	9917      	ldr	r1, [sp, #92]	; 0x5c
90011774:	f8db 0014 	ldr.w	r0, [fp, #20]
90011778:	f00a fe10 	bl	9001c39c <EwFntGetKerning>
9001177c:	9b04      	ldr	r3, [sp, #16]
9001177e:	4607      	mov	r7, r0
90011780:	3b01      	subs	r3, #1
90011782:	931a      	str	r3, [sp, #104]	; 0x68
90011784:	9b04      	ldr	r3, [sp, #16]
90011786:	2b01      	cmp	r3, #1
90011788:	d008      	beq.n	9001179c <EwDrawText+0x728>
9001178a:	462a      	mov	r2, r5
9001178c:	4629      	mov	r1, r5
9001178e:	f8db 0014 	ldr.w	r0, [fp, #20]
90011792:	f00a fe03 	bl	9001c39c <EwFntGetKerning>
90011796:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90011798:	fb03 7000 	mla	r0, r3, r0, r7
9001179c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001179e:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
900117a2:	fb02 fc03 	mul.w	ip, r2, r3
900117a6:	1982      	adds	r2, r0, r6
900117a8:	eb02 010c 	add.w	r1, r2, ip
900117ac:	f9b4 2020 	ldrsh.w	r2, [r4, #32]
900117b0:	440a      	add	r2, r1
900117b2:	f9b4 101c 	ldrsh.w	r1, [r4, #28]
900117b6:	440a      	add	r2, r1
900117b8:	454a      	cmp	r2, r9
900117ba:	f73f af79 	bgt.w	900116b0 <EwDrawText+0x63c>
900117be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900117c0:	b15a      	cbz	r2, 900117da <EwDrawText+0x766>
900117c2:	f025 0280 	bic.w	r2, r5, #128	; 0x80
900117c6:	b292      	uxth	r2, r2
900117c8:	2a20      	cmp	r2, #32
900117ca:	d106      	bne.n	900117da <EwDrawText+0x766>
900117cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900117ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
900117d0:	440a      	add	r2, r1
900117d2:	eb06 4622 	add.w	r6, r6, r2, asr #16
900117d6:	b292      	uxth	r2, r2
900117d8:	9213      	str	r2, [sp, #76]	; 0x4c
900117da:	4463      	add	r3, ip
900117dc:	4647      	mov	r7, r8
900117de:	4418      	add	r0, r3
900117e0:	4406      	add	r6, r0
900117e2:	4620      	mov	r0, r4
900117e4:	f006 f84a 	bl	9001787c <EwFreeGlyph>
900117e8:	9517      	str	r5, [sp, #92]	; 0x5c
900117ea:	e5dd      	b.n	900113a8 <EwDrawText+0x334>
900117ec:	462a      	mov	r2, r5
900117ee:	f8db 1018 	ldr.w	r1, [fp, #24]
900117f2:	20b6      	movs	r0, #182	; 0xb6
900117f4:	e56f      	b.n	900112d6 <EwDrawText+0x262>
900117f6:	e9dd 2109 	ldrd	r2, r1, [sp, #36]	; 0x24
900117fa:	428a      	cmp	r2, r1
900117fc:	d106      	bne.n	9001180c <EwDrawText+0x798>
900117fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
90011800:	990b      	ldr	r1, [sp, #44]	; 0x2c
90011802:	428a      	cmp	r2, r1
90011804:	d09a      	beq.n	9001173c <EwDrawText+0x6c8>
90011806:	f043 0304 	orr.w	r3, r3, #4
9001180a:	e74a      	b.n	900116a2 <EwDrawText+0x62e>
9001180c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001180e:	990b      	ldr	r1, [sp, #44]	; 0x2c
90011810:	428a      	cmp	r2, r1
90011812:	d191      	bne.n	90011738 <EwDrawText+0x6c4>
90011814:	e9dd 1209 	ldrd	r1, r2, [sp, #36]	; 0x24
90011818:	e7f3      	b.n	90011802 <EwDrawText+0x78e>

9001181a <EwGetTextColumnAtPosition>:
9001181a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001181e:	b087      	sub	sp, #28
90011820:	4606      	mov	r6, r0
90011822:	460f      	mov	r7, r1
90011824:	4699      	mov	r9, r3
90011826:	9d10      	ldr	r5, [sp, #64]	; 0x40
90011828:	9201      	str	r2, [sp, #4]
9001182a:	2a00      	cmp	r2, #0
9001182c:	f000 8095 	beq.w	9001195a <EwGetTextColumnAtPosition+0x140>
90011830:	2900      	cmp	r1, #0
90011832:	f000 8094 	beq.w	9001195e <EwGetTextColumnAtPosition+0x144>
90011836:	880c      	ldrh	r4, [r1, #0]
90011838:	b134      	cbz	r4, 90011848 <EwGetTextColumnAtPosition+0x2e>
9001183a:	b948      	cbnz	r0, 90011850 <EwGetTextColumnAtPosition+0x36>
9001183c:	4634      	mov	r4, r6
9001183e:	4602      	mov	r2, r0
90011840:	4601      	mov	r1, r0
90011842:	20ab      	movs	r0, #171	; 0xab
90011844:	f00b fe1a 	bl	9001d47c <EwErrorPD>
90011848:	4620      	mov	r0, r4
9001184a:	b007      	add	sp, #28
9001184c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011850:	f1b9 0f00 	cmp.w	r9, #0
90011854:	f2c0 8085 	blt.w	90011962 <EwGetTextColumnAtPosition+0x148>
90011858:	2d00      	cmp	r5, #0
9001185a:	dd7c      	ble.n	90011956 <EwGetTextColumnAtPosition+0x13c>
9001185c:	f7ff fba7 	bl	90010fae <EwGetTextAdvance>
90011860:	1a28      	subs	r0, r5, r0
90011862:	2800      	cmp	r0, #0
90011864:	dd77      	ble.n	90011956 <EwGetTextColumnAtPosition+0x13c>
90011866:	1ebc      	subs	r4, r7, #2
90011868:	9901      	ldr	r1, [sp, #4]
9001186a:	2300      	movs	r3, #0
9001186c:	f834 2f02 	ldrh.w	r2, [r4, #2]!
90011870:	b132      	cbz	r2, 90011880 <EwGetTextColumnAtPosition+0x66>
90011872:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90011876:	2a20      	cmp	r2, #32
90011878:	bf08      	it	eq
9001187a:	3301      	addeq	r3, #1
9001187c:	3901      	subs	r1, #1
9001187e:	d1f5      	bne.n	9001186c <EwGetTextColumnAtPosition+0x52>
90011880:	2b00      	cmp	r3, #0
90011882:	d068      	beq.n	90011956 <EwGetTextColumnAtPosition+0x13c>
90011884:	0400      	lsls	r0, r0, #16
90011886:	fb90 f3f3 	sdiv	r3, r0, r3
9001188a:	f04f 0b00 	mov.w	fp, #0
9001188e:	9302      	str	r3, [sp, #8]
90011890:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90011894:	465c      	mov	r4, fp
90011896:	9303      	str	r3, [sp, #12]
90011898:	e021      	b.n	900118de <EwGetTextColumnAtPosition+0xc4>
9001189a:	f242 0326 	movw	r3, #8230	; 0x2026
9001189e:	4598      	cmp	r8, r3
900118a0:	d123      	bne.n	900118ea <EwGetTextColumnAtPosition+0xd0>
900118a2:	4619      	mov	r1, r3
900118a4:	4630      	mov	r0, r6
900118a6:	f7fa fb77 	bl	9000bf98 <UpdateWatermark1+0x518>
900118aa:	f242 0326 	movw	r3, #8230	; 0x2026
900118ae:	2800      	cmp	r0, #0
900118b0:	bf15      	itete	ne
900118b2:	f04f 0a01 	movne.w	sl, #1
900118b6:	f04f 0a03 	moveq.w	sl, #3
900118ba:	4698      	movne	r8, r3
900118bc:	f04f 082e 	moveq.w	r8, #46	; 0x2e
900118c0:	4641      	mov	r1, r8
900118c2:	4630      	mov	r0, r6
900118c4:	f7f9 ff50 	bl	9000b768 <UpdateWatermark2+0xc42>
900118c8:	4603      	mov	r3, r0
900118ca:	2800      	cmp	r0, #0
900118cc:	d14c      	bne.n	90011968 <EwGetTextColumnAtPosition+0x14e>
900118ce:	f006 f8ab 	bl	90017a28 <EwFlushTasks>
900118d2:	2800      	cmp	r0, #0
900118d4:	d1f4      	bne.n	900118c0 <EwGetTextColumnAtPosition+0xa6>
900118d6:	3401      	adds	r4, #1
900118d8:	9b01      	ldr	r3, [sp, #4]
900118da:	42a3      	cmp	r3, r4
900118dc:	d0b4      	beq.n	90011848 <EwGetTextColumnAtPosition+0x2e>
900118de:	f837 8014 	ldrh.w	r8, [r7, r4, lsl #1]
900118e2:	f1b8 0f00 	cmp.w	r8, #0
900118e6:	d1d8      	bne.n	9001189a <EwGetTextColumnAtPosition+0x80>
900118e8:	e7ae      	b.n	90011848 <EwGetTextColumnAtPosition+0x2e>
900118ea:	f04f 0a01 	mov.w	sl, #1
900118ee:	e7e7      	b.n	900118c0 <EwGetTextColumnAtPosition+0xa6>
900118f0:	f9b3 5020 	ldrsh.w	r5, [r3, #32]
900118f4:	bb4d      	cbnz	r5, 9001194a <EwGetTextColumnAtPosition+0x130>
900118f6:	f9b3 101c 	ldrsh.w	r1, [r3, #28]
900118fa:	bb39      	cbnz	r1, 9001194c <EwGetTextColumnAtPosition+0x132>
900118fc:	f005 ffbe 	bl	9001787c <EwFreeGlyph>
90011900:	e7e9      	b.n	900118d6 <EwGetTextColumnAtPosition+0xbc>
90011902:	4642      	mov	r2, r8
90011904:	4659      	mov	r1, fp
90011906:	6970      	ldr	r0, [r6, #20]
90011908:	9305      	str	r3, [sp, #20]
9001190a:	f00a fd47 	bl	9001c39c <EwFntGetKerning>
9001190e:	9b05      	ldr	r3, [sp, #20]
90011910:	9a02      	ldr	r2, [sp, #8]
90011912:	f9b3 1024 	ldrsh.w	r1, [r3, #36]	; 0x24
90011916:	4408      	add	r0, r1
90011918:	4405      	add	r5, r0
9001191a:	b14a      	cbz	r2, 90011930 <EwGetTextColumnAtPosition+0x116>
9001191c:	9a04      	ldr	r2, [sp, #16]
9001191e:	2a20      	cmp	r2, #32
90011920:	d106      	bne.n	90011930 <EwGetTextColumnAtPosition+0x116>
90011922:	e9dd 0202 	ldrd	r0, r2, [sp, #8]
90011926:	4402      	add	r2, r0
90011928:	eb05 4522 	add.w	r5, r5, r2, asr #16
9001192c:	b292      	uxth	r2, r2
9001192e:	9203      	str	r2, [sp, #12]
90011930:	46c3      	mov	fp, r8
90011932:	f1ba 0a01 	subs.w	sl, sl, #1
90011936:	d2e4      	bcs.n	90011902 <EwGetTextColumnAtPosition+0xe8>
90011938:	eb05 72d5 	add.w	r2, r5, r5, lsr #31
9001193c:	ebb9 0f62 	cmp.w	r9, r2, asr #1
90011940:	dd82      	ble.n	90011848 <EwGetTextColumnAtPosition+0x2e>
90011942:	eba9 0905 	sub.w	r9, r9, r5
90011946:	4618      	mov	r0, r3
90011948:	e7d8      	b.n	900118fc <EwGetTextColumnAtPosition+0xe2>
9001194a:	460d      	mov	r5, r1
9001194c:	f028 0180 	bic.w	r1, r8, #128	; 0x80
90011950:	b28a      	uxth	r2, r1
90011952:	9204      	str	r2, [sp, #16]
90011954:	e7ed      	b.n	90011932 <EwGetTextColumnAtPosition+0x118>
90011956:	2300      	movs	r3, #0
90011958:	e797      	b.n	9001188a <EwGetTextColumnAtPosition+0x70>
9001195a:	9c01      	ldr	r4, [sp, #4]
9001195c:	e774      	b.n	90011848 <EwGetTextColumnAtPosition+0x2e>
9001195e:	460c      	mov	r4, r1
90011960:	e772      	b.n	90011848 <EwGetTextColumnAtPosition+0x2e>
90011962:	f04f 34ff 	mov.w	r4, #4294967295
90011966:	e76f      	b.n	90011848 <EwGetTextColumnAtPosition+0x2e>
90011968:	f9b0 1024 	ldrsh.w	r1, [r0, #36]	; 0x24
9001196c:	2900      	cmp	r1, #0
9001196e:	d0bf      	beq.n	900118f0 <EwGetTextColumnAtPosition+0xd6>
90011970:	2500      	movs	r5, #0
90011972:	e7eb      	b.n	9001194c <EwGetTextColumnAtPosition+0x132>

90011974 <EwGetPositionAtTextColumn>:
90011974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011978:	b087      	sub	sp, #28
9001197a:	4606      	mov	r6, r0
9001197c:	4698      	mov	r8, r3
9001197e:	4614      	mov	r4, r2
90011980:	9d10      	ldr	r5, [sp, #64]	; 0x40
90011982:	b16a      	cbz	r2, 900119a0 <EwGetPositionAtTextColumn+0x2c>
90011984:	2900      	cmp	r1, #0
90011986:	f000 8089 	beq.w	90011a9c <EwGetPositionAtTextColumn+0x128>
9001198a:	880b      	ldrh	r3, [r1, #0]
9001198c:	2b00      	cmp	r3, #0
9001198e:	f000 8087 	beq.w	90011aa0 <EwGetPositionAtTextColumn+0x12c>
90011992:	b948      	cbnz	r0, 900119a8 <EwGetPositionAtTextColumn+0x34>
90011994:	4634      	mov	r4, r6
90011996:	4602      	mov	r2, r0
90011998:	4601      	mov	r1, r0
9001199a:	20ac      	movs	r0, #172	; 0xac
9001199c:	f00b fd6e 	bl	9001d47c <EwErrorPD>
900119a0:	4620      	mov	r0, r4
900119a2:	b007      	add	sp, #28
900119a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900119a8:	f1b8 0f00 	cmp.w	r8, #0
900119ac:	db7a      	blt.n	90011aa4 <EwGetPositionAtTextColumn+0x130>
900119ae:	2d00      	cmp	r5, #0
900119b0:	f1a1 0702 	sub.w	r7, r1, #2
900119b4:	dd70      	ble.n	90011a98 <EwGetPositionAtTextColumn+0x124>
900119b6:	f7ff fafa 	bl	90010fae <EwGetTextAdvance>
900119ba:	1a28      	subs	r0, r5, r0
900119bc:	2800      	cmp	r0, #0
900119be:	dd6b      	ble.n	90011a98 <EwGetPositionAtTextColumn+0x124>
900119c0:	463d      	mov	r5, r7
900119c2:	4621      	mov	r1, r4
900119c4:	2300      	movs	r3, #0
900119c6:	f835 2f02 	ldrh.w	r2, [r5, #2]!
900119ca:	b132      	cbz	r2, 900119da <EwGetPositionAtTextColumn+0x66>
900119cc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
900119d0:	2a20      	cmp	r2, #32
900119d2:	bf08      	it	eq
900119d4:	3301      	addeq	r3, #1
900119d6:	3901      	subs	r1, #1
900119d8:	d1f5      	bne.n	900119c6 <EwGetPositionAtTextColumn+0x52>
900119da:	2b00      	cmp	r3, #0
900119dc:	d05c      	beq.n	90011a98 <EwGetPositionAtTextColumn+0x124>
900119de:	0405      	lsls	r5, r0, #16
900119e0:	fb95 f3f3 	sdiv	r3, r5, r3
900119e4:	e9cd 3701 	strd	r3, r7, [sp, #4]
900119e8:	46a1      	mov	r9, r4
900119ea:	eba4 0308 	sub.w	r3, r4, r8
900119ee:	2400      	movs	r4, #0
900119f0:	f44f 4700 	mov.w	r7, #32768	; 0x8000
900119f4:	f242 0a26 	movw	sl, #8230	; 0x2026
900119f8:	9303      	str	r3, [sp, #12]
900119fa:	46a3      	mov	fp, r4
900119fc:	e01b      	b.n	90011a36 <EwGetPositionAtTextColumn+0xc2>
900119fe:	4555      	cmp	r5, sl
90011a00:	d123      	bne.n	90011a4a <EwGetPositionAtTextColumn+0xd6>
90011a02:	4651      	mov	r1, sl
90011a04:	4630      	mov	r0, r6
90011a06:	f7fa fac7 	bl	9000bf98 <UpdateWatermark1+0x518>
90011a0a:	2800      	cmp	r0, #0
90011a0c:	bf15      	itete	ne
90011a0e:	f04f 0801 	movne.w	r8, #1
90011a12:	f04f 0803 	moveq.w	r8, #3
90011a16:	4655      	movne	r5, sl
90011a18:	252e      	moveq	r5, #46	; 0x2e
90011a1a:	4629      	mov	r1, r5
90011a1c:	4630      	mov	r0, r6
90011a1e:	f7f9 fea3 	bl	9000b768 <UpdateWatermark2+0xc42>
90011a22:	4603      	mov	r3, r0
90011a24:	2800      	cmp	r0, #0
90011a26:	d140      	bne.n	90011aaa <EwGetPositionAtTextColumn+0x136>
90011a28:	f005 fffe 	bl	90017a28 <EwFlushTasks>
90011a2c:	2800      	cmp	r0, #0
90011a2e:	d1f4      	bne.n	90011a1a <EwGetPositionAtTextColumn+0xa6>
90011a30:	f1b9 0901 	subs.w	r9, r9, #1
90011a34:	d0b4      	beq.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011a36:	9b02      	ldr	r3, [sp, #8]
90011a38:	f833 5f02 	ldrh.w	r5, [r3, #2]!
90011a3c:	9302      	str	r3, [sp, #8]
90011a3e:	2d00      	cmp	r5, #0
90011a40:	d0ae      	beq.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011a42:	9b03      	ldr	r3, [sp, #12]
90011a44:	454b      	cmp	r3, r9
90011a46:	d1da      	bne.n	900119fe <EwGetPositionAtTextColumn+0x8a>
90011a48:	e7aa      	b.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011a4a:	f04f 0801 	mov.w	r8, #1
90011a4e:	e7e4      	b.n	90011a1a <EwGetPositionAtTextColumn+0xa6>
90011a50:	f9b3 1020 	ldrsh.w	r1, [r3, #32]
90011a54:	bb69      	cbnz	r1, 90011ab2 <EwGetPositionAtTextColumn+0x13e>
90011a56:	f9b3 101c 	ldrsh.w	r1, [r3, #28]
90011a5a:	bb51      	cbnz	r1, 90011ab2 <EwGetPositionAtTextColumn+0x13e>
90011a5c:	f005 ff0e 	bl	9001787c <EwFreeGlyph>
90011a60:	e7e6      	b.n	90011a30 <EwGetPositionAtTextColumn+0xbc>
90011a62:	462a      	mov	r2, r5
90011a64:	4659      	mov	r1, fp
90011a66:	6970      	ldr	r0, [r6, #20]
90011a68:	9305      	str	r3, [sp, #20]
90011a6a:	f00a fc97 	bl	9001c39c <EwFntGetKerning>
90011a6e:	9b05      	ldr	r3, [sp, #20]
90011a70:	9a01      	ldr	r2, [sp, #4]
90011a72:	f9b3 1024 	ldrsh.w	r1, [r3, #36]	; 0x24
90011a76:	4408      	add	r0, r1
90011a78:	4404      	add	r4, r0
90011a7a:	b13a      	cbz	r2, 90011a8c <EwGetPositionAtTextColumn+0x118>
90011a7c:	9a04      	ldr	r2, [sp, #16]
90011a7e:	2a20      	cmp	r2, #32
90011a80:	bf01      	itttt	eq
90011a82:	9a01      	ldreq	r2, [sp, #4]
90011a84:	18bf      	addeq	r7, r7, r2
90011a86:	eb04 4427 	addeq.w	r4, r4, r7, asr #16
90011a8a:	b2bf      	uxtheq	r7, r7
90011a8c:	46ab      	mov	fp, r5
90011a8e:	f1b8 0801 	subs.w	r8, r8, #1
90011a92:	d2e6      	bcs.n	90011a62 <EwGetPositionAtTextColumn+0xee>
90011a94:	4618      	mov	r0, r3
90011a96:	e7e1      	b.n	90011a5c <EwGetPositionAtTextColumn+0xe8>
90011a98:	2300      	movs	r3, #0
90011a9a:	e7a3      	b.n	900119e4 <EwGetPositionAtTextColumn+0x70>
90011a9c:	460c      	mov	r4, r1
90011a9e:	e77f      	b.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011aa0:	461c      	mov	r4, r3
90011aa2:	e77d      	b.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011aa4:	f04f 34ff 	mov.w	r4, #4294967295
90011aa8:	e77a      	b.n	900119a0 <EwGetPositionAtTextColumn+0x2c>
90011aaa:	f9b0 1024 	ldrsh.w	r1, [r0, #36]	; 0x24
90011aae:	2900      	cmp	r1, #0
90011ab0:	d0ce      	beq.n	90011a50 <EwGetPositionAtTextColumn+0xdc>
90011ab2:	f025 0180 	bic.w	r1, r5, #128	; 0x80
90011ab6:	b28a      	uxth	r2, r1
90011ab8:	9204      	str	r2, [sp, #16]
90011aba:	e7e8      	b.n	90011a8e <EwGetPositionAtTextColumn+0x11a>

90011abc <EwIsGlyphAvailable>:
90011abc:	f240 621c 	movw	r2, #1564	; 0x61c
90011ac0:	4291      	cmp	r1, r2
90011ac2:	b410      	push	{r4}
90011ac4:	d019      	beq.n	90011afa <EwIsGlyphAvailable+0x3e>
90011ac6:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90011aca:	4291      	cmp	r1, r2
90011acc:	d015      	beq.n	90011afa <EwIsGlyphAvailable+0x3e>
90011ace:	f5a1 5200 	sub.w	r2, r1, #8192	; 0x2000
90011ad2:	f1a2 040b 	sub.w	r4, r2, #11
90011ad6:	b2a4      	uxth	r4, r4
90011ad8:	2c04      	cmp	r4, #4
90011ada:	d90e      	bls.n	90011afa <EwIsGlyphAvailable+0x3e>
90011adc:	3a2a      	subs	r2, #42	; 0x2a
90011ade:	b292      	uxth	r2, r2
90011ae0:	2a04      	cmp	r2, #4
90011ae2:	d90a      	bls.n	90011afa <EwIsGlyphAvailable+0x3e>
90011ae4:	f5a1 5201 	sub.w	r2, r1, #8256	; 0x2040
90011ae8:	3a26      	subs	r2, #38	; 0x26
90011aea:	2a03      	cmp	r2, #3
90011aec:	d905      	bls.n	90011afa <EwIsGlyphAvailable+0x3e>
90011aee:	290a      	cmp	r1, #10
90011af0:	d003      	beq.n	90011afa <EwIsGlyphAvailable+0x3e>
90011af2:	f85d 4b04 	ldr.w	r4, [sp], #4
90011af6:	f7fa ba4f 	b.w	9000bf98 <UpdateWatermark1+0x518>
90011afa:	2000      	movs	r0, #0
90011afc:	f85d 4b04 	ldr.w	r4, [sp], #4
90011b00:	4770      	bx	lr

90011b02 <EwGetGlyphMetrics>:
90011b02:	b570      	push	{r4, r5, r6, lr}
90011b04:	460e      	mov	r6, r1
90011b06:	4614      	mov	r4, r2
90011b08:	4605      	mov	r5, r0
90011b0a:	b100      	cbz	r0, 90011b0e <EwGetGlyphMetrics+0xc>
90011b0c:	b922      	cbnz	r2, 90011b18 <EwGetGlyphMetrics+0x16>
90011b0e:	20ad      	movs	r0, #173	; 0xad
90011b10:	f00b fc9e 	bl	9001d450 <EwError>
90011b14:	2000      	movs	r0, #0
90011b16:	bd70      	pop	{r4, r5, r6, pc}
90011b18:	4631      	mov	r1, r6
90011b1a:	4628      	mov	r0, r5
90011b1c:	f7f9 fe24 	bl	9000b768 <UpdateWatermark2+0xc42>
90011b20:	b920      	cbnz	r0, 90011b2c <EwGetGlyphMetrics+0x2a>
90011b22:	f005 ff81 	bl	90017a28 <EwFlushTasks>
90011b26:	2800      	cmp	r0, #0
90011b28:	d1f6      	bne.n	90011b18 <EwGetGlyphMetrics+0x16>
90011b2a:	e7f4      	b.n	90011b16 <EwGetGlyphMetrics+0x14>
90011b2c:	f9b0 2024 	ldrsh.w	r2, [r0, #36]	; 0x24
90011b30:	f9b0 301e 	ldrsh.w	r3, [r0, #30]
90011b34:	6122      	str	r2, [r4, #16]
90011b36:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
90011b3a:	60a2      	str	r2, [r4, #8]
90011b3c:	f9b0 2022 	ldrsh.w	r2, [r0, #34]	; 0x22
90011b40:	60e2      	str	r2, [r4, #12]
90011b42:	f9b0 201c 	ldrsh.w	r2, [r0, #28]
90011b46:	6063      	str	r3, [r4, #4]
90011b48:	6022      	str	r2, [r4, #0]
90011b4a:	f005 fe97 	bl	9001787c <EwFreeGlyph>
90011b4e:	2001      	movs	r0, #1
90011b50:	e7e1      	b.n	90011b16 <EwGetGlyphMetrics+0x14>

90011b52 <EwGetKerning>:
90011b52:	b510      	push	{r4, lr}
90011b54:	b920      	cbnz	r0, 90011b60 <EwGetKerning+0xe>
90011b56:	20af      	movs	r0, #175	; 0xaf
90011b58:	f00b fc7a 	bl	9001d450 <EwError>
90011b5c:	2000      	movs	r0, #0
90011b5e:	bd10      	pop	{r4, pc}
90011b60:	2900      	cmp	r1, #0
90011b62:	d0fb      	beq.n	90011b5c <EwGetKerning+0xa>
90011b64:	2a00      	cmp	r2, #0
90011b66:	d0f9      	beq.n	90011b5c <EwGetKerning+0xa>
90011b68:	6940      	ldr	r0, [r0, #20]
90011b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011b6e:	f00a bc15 	b.w	9001c39c <EwFntGetKerning>

90011b72 <EwLockGlyph>:
90011b72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011b76:	460c      	mov	r4, r1
90011b78:	b08c      	sub	sp, #48	; 0x30
90011b7a:	4606      	mov	r6, r0
90011b7c:	b938      	cbnz	r0, 90011b8e <EwLockGlyph+0x1c>
90011b7e:	4634      	mov	r4, r6
90011b80:	20ae      	movs	r0, #174	; 0xae
90011b82:	f00b fc65 	bl	9001d450 <EwError>
90011b86:	4620      	mov	r0, r4
90011b88:	b00c      	add	sp, #48	; 0x30
90011b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011b8e:	4621      	mov	r1, r4
90011b90:	4630      	mov	r0, r6
90011b92:	f7f9 fde9 	bl	9000b768 <UpdateWatermark2+0xc42>
90011b96:	4605      	mov	r5, r0
90011b98:	b928      	cbnz	r0, 90011ba6 <EwLockGlyph+0x34>
90011b9a:	f005 ff45 	bl	90017a28 <EwFlushTasks>
90011b9e:	2800      	cmp	r0, #0
90011ba0:	d1f5      	bne.n	90011b8e <EwLockGlyph+0x1c>
90011ba2:	4604      	mov	r4, r0
90011ba4:	e7ef      	b.n	90011b86 <EwLockGlyph+0x14>
90011ba6:	2040      	movs	r0, #64	; 0x40
90011ba8:	f015 f884 	bl	90026cb4 <EwAlloc>
90011bac:	4604      	mov	r4, r0
90011bae:	2800      	cmp	r0, #0
90011bb0:	d143      	bne.n	90011c3a <EwLockGlyph+0xc8>
90011bb2:	2020      	movs	r0, #32
90011bb4:	f00c fbfe 	bl	9001e3b4 <EwImmediateReclaimMemory>
90011bb8:	2800      	cmp	r0, #0
90011bba:	d1f4      	bne.n	90011ba6 <EwLockGlyph+0x34>
90011bbc:	4628      	mov	r0, r5
90011bbe:	f005 fe5d 	bl	9001787c <EwFreeGlyph>
90011bc2:	2020      	movs	r0, #32
90011bc4:	f00b fc44 	bl	9001d450 <EwError>
90011bc8:	e7dd      	b.n	90011b86 <EwLockGlyph+0x14>
90011bca:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90011bcc:	2b00      	cmp	r3, #0
90011bce:	d14e      	bne.n	90011c6e <EwLockGlyph+0xfc>
90011bd0:	f04f 0801 	mov.w	r8, #1
90011bd4:	8ba8      	ldrh	r0, [r5, #28]
90011bd6:	8beb      	ldrh	r3, [r5, #30]
90011bd8:	fb10 8003 	smlabb	r0, r0, r3, r8
90011bdc:	f015 f86a 	bl	90026cb4 <EwAlloc>
90011be0:	b980      	cbnz	r0, 90011c04 <EwLockGlyph+0x92>
90011be2:	2021      	movs	r0, #33	; 0x21
90011be4:	f00c fbe6 	bl	9001e3b4 <EwImmediateReclaimMemory>
90011be8:	4607      	mov	r7, r0
90011bea:	2800      	cmp	r0, #0
90011bec:	d1f2      	bne.n	90011bd4 <EwLockGlyph+0x62>
90011bee:	4628      	mov	r0, r5
90011bf0:	f005 fe44 	bl	9001787c <EwFreeGlyph>
90011bf4:	4620      	mov	r0, r4
90011bf6:	f015 f85f 	bl	90026cb8 <EwFree>
90011bfa:	2021      	movs	r0, #33	; 0x21
90011bfc:	463c      	mov	r4, r7
90011bfe:	f00b fc27 	bl	9001d450 <EwError>
90011c02:	e7c0      	b.n	90011b86 <EwLockGlyph+0x14>
90011c04:	f9b5 301c 	ldrsh.w	r3, [r5, #28]
90011c08:	466a      	mov	r2, sp
90011c0a:	62e8      	str	r0, [r5, #44]	; 0x2c
90011c0c:	8b29      	ldrh	r1, [r5, #24]
90011c0e:	9302      	str	r3, [sp, #8]
90011c10:	e9cd 0800 	strd	r0, r8, [sp]
90011c14:	6968      	ldr	r0, [r5, #20]
90011c16:	f00a fc2c 	bl	9001c472 <EwFntLoadGlyph>
90011c1a:	b920      	cbnz	r0, 90011c26 <EwLockGlyph+0xb4>
90011c1c:	69aa      	ldr	r2, [r5, #24]
90011c1e:	20b7      	movs	r0, #183	; 0xb7
90011c20:	69b1      	ldr	r1, [r6, #24]
90011c22:	f00b fc23 	bl	9001d46c <EwErrorSD>
90011c26:	4a22      	ldr	r2, [pc, #136]	; (90011cb0 <EwLockGlyph+0x13e>)
90011c28:	2101      	movs	r1, #1
90011c2a:	8bab      	ldrh	r3, [r5, #28]
90011c2c:	8be8      	ldrh	r0, [r5, #30]
90011c2e:	fb13 1300 	smlabb	r3, r3, r0, r1
90011c32:	6811      	ldr	r1, [r2, #0]
90011c34:	440b      	add	r3, r1
90011c36:	6013      	str	r3, [r2, #0]
90011c38:	e019      	b.n	90011c6e <EwLockGlyph+0xfc>
90011c3a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90011c3c:	b9bb      	cbnz	r3, 90011c6e <EwLockGlyph+0xfc>
90011c3e:	466a      	mov	r2, sp
90011c40:	2181      	movs	r1, #129	; 0x81
90011c42:	4628      	mov	r0, r5
90011c44:	f006 f832 	bl	90017cac <EwLockGlyphCache>
90011c48:	2800      	cmp	r0, #0
90011c4a:	d0be      	beq.n	90011bca <EwLockGlyph+0x58>
90011c4c:	9b00      	ldr	r3, [sp, #0]
90011c4e:	466f      	mov	r7, sp
90011c50:	f104 060c 	add.w	r6, r4, #12
90011c54:	6023      	str	r3, [r4, #0]
90011c56:	9b01      	ldr	r3, [sp, #4]
90011c58:	6063      	str	r3, [r4, #4]
90011c5a:	9b02      	ldr	r3, [sp, #8]
90011c5c:	60a3      	str	r3, [r4, #8]
90011c5e:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011c60:	c60f      	stmia	r6!, {r0, r1, r2, r3}
90011c62:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90011c64:	c60f      	stmia	r6!, {r0, r1, r2, r3}
90011c66:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90011c6a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90011c6e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90011c70:	b12b      	cbz	r3, 90011c7e <EwLockGlyph+0x10c>
90011c72:	6023      	str	r3, [r4, #0]
90011c74:	2301      	movs	r3, #1
90011c76:	6063      	str	r3, [r4, #4]
90011c78:	f9b5 301c 	ldrsh.w	r3, [r5, #28]
90011c7c:	60a3      	str	r3, [r4, #8]
90011c7e:	490c      	ldr	r1, [pc, #48]	; (90011cb0 <EwLockGlyph+0x13e>)
90011c80:	63e5      	str	r5, [r4, #60]	; 0x3c
90011c82:	680b      	ldr	r3, [r1, #0]
90011c84:	f103 0240 	add.w	r2, r3, #64	; 0x40
90011c88:	4b0a      	ldr	r3, [pc, #40]	; (90011cb4 <EwLockGlyph+0x142>)
90011c8a:	600a      	str	r2, [r1, #0]
90011c8c:	6819      	ldr	r1, [r3, #0]
90011c8e:	428a      	cmp	r2, r1
90011c90:	4909      	ldr	r1, [pc, #36]	; (90011cb8 <EwLockGlyph+0x146>)
90011c92:	bfc8      	it	gt
90011c94:	601a      	strgt	r2, [r3, #0]
90011c96:	4b09      	ldr	r3, [pc, #36]	; (90011cbc <EwLockGlyph+0x14a>)
90011c98:	6809      	ldr	r1, [r1, #0]
90011c9a:	681b      	ldr	r3, [r3, #0]
90011c9c:	440b      	add	r3, r1
90011c9e:	4413      	add	r3, r2
90011ca0:	4a07      	ldr	r2, [pc, #28]	; (90011cc0 <EwLockGlyph+0x14e>)
90011ca2:	6811      	ldr	r1, [r2, #0]
90011ca4:	428b      	cmp	r3, r1
90011ca6:	f77f af6e 	ble.w	90011b86 <EwLockGlyph+0x14>
90011caa:	6013      	str	r3, [r2, #0]
90011cac:	e76b      	b.n	90011b86 <EwLockGlyph+0x14>
90011cae:	bf00      	nop
90011cb0:	200002bc 	.word	0x200002bc
90011cb4:	200002d8 	.word	0x200002d8
90011cb8:	200002b8 	.word	0x200002b8
90011cbc:	200002ac 	.word	0x200002ac
90011cc0:	200002c0 	.word	0x200002c0

90011cc4 <EwUnlockGlyph>:
90011cc4:	b510      	push	{r4, lr}
90011cc6:	4604      	mov	r4, r0
90011cc8:	b198      	cbz	r0, 90011cf2 <EwUnlockGlyph+0x2e>
90011cca:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90011ccc:	b188      	cbz	r0, 90011cf2 <EwUnlockGlyph+0x2e>
90011cce:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90011cd0:	b91b      	cbnz	r3, 90011cda <EwUnlockGlyph+0x16>
90011cd2:	f104 010c 	add.w	r1, r4, #12
90011cd6:	f005 fdda 	bl	9001788e <EwUnlockGlyphCache>
90011cda:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90011cdc:	f005 fdce 	bl	9001787c <EwFreeGlyph>
90011ce0:	2300      	movs	r3, #0
90011ce2:	4620      	mov	r0, r4
90011ce4:	63e3      	str	r3, [r4, #60]	; 0x3c
90011ce6:	f014 ffe7 	bl	90026cb8 <EwFree>
90011cea:	4a02      	ldr	r2, [pc, #8]	; (90011cf4 <EwUnlockGlyph+0x30>)
90011cec:	6813      	ldr	r3, [r2, #0]
90011cee:	3b40      	subs	r3, #64	; 0x40
90011cf0:	6013      	str	r3, [r2, #0]
90011cf2:	bd10      	pop	{r4, pc}
90011cf4:	200002bc 	.word	0x200002bc

90011cf8 <EwDrawBitmapFrame>:
90011cf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011cfc:	ed2d 8b02 	vpush	{d8}
90011d00:	b0dd      	sub	sp, #372	; 0x174
90011d02:	4699      	mov	r9, r3
90011d04:	4690      	mov	r8, r2
90011d06:	ee08 0a10 	vmov	s16, r0
90011d0a:	f89d 31d0 	ldrb.w	r3, [sp, #464]	; 0x1d0
90011d0e:	ee08 1a90 	vmov	s17, r1
90011d12:	9326      	str	r3, [sp, #152]	; 0x98
90011d14:	f89d 31d4 	ldrb.w	r3, [sp, #468]	; 0x1d4
90011d18:	9318      	str	r3, [sp, #96]	; 0x60
90011d1a:	f89d 31d8 	ldrb.w	r3, [sp, #472]	; 0x1d8
90011d1e:	9315      	str	r3, [sp, #84]	; 0x54
90011d20:	f89d 31dc 	ldrb.w	r3, [sp, #476]	; 0x1dc
90011d24:	9319      	str	r3, [sp, #100]	; 0x64
90011d26:	f89d 31e0 	ldrb.w	r3, [sp, #480]	; 0x1e0
90011d2a:	934d      	str	r3, [sp, #308]	; 0x134
90011d2c:	f89d 31f4 	ldrb.w	r3, [sp, #500]	; 0x1f4
90011d30:	932f      	str	r3, [sp, #188]	; 0xbc
90011d32:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90011d34:	9317      	str	r3, [sp, #92]	; 0x5c
90011d36:	9b6d      	ldr	r3, [sp, #436]	; 0x1b4
90011d38:	9316      	str	r3, [sp, #88]	; 0x58
90011d3a:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
90011d3c:	9331      	str	r3, [sp, #196]	; 0xc4
90011d3e:	9b6f      	ldr	r3, [sp, #444]	; 0x1bc
90011d40:	933a      	str	r3, [sp, #232]	; 0xe8
90011d42:	9b70      	ldr	r3, [sp, #448]	; 0x1c0
90011d44:	9340      	str	r3, [sp, #256]	; 0x100
90011d46:	9b71      	ldr	r3, [sp, #452]	; 0x1c4
90011d48:	9342      	str	r3, [sp, #264]	; 0x108
90011d4a:	f89d 31e4 	ldrb.w	r3, [sp, #484]	; 0x1e4
90011d4e:	931e      	str	r3, [sp, #120]	; 0x78
90011d50:	f89d 31e5 	ldrb.w	r3, [sp, #485]	; 0x1e5
90011d54:	e9dd 6772 	ldrd	r6, r7, [sp, #456]	; 0x1c8
90011d58:	931f      	str	r3, [sp, #124]	; 0x7c
90011d5a:	f89d 31e6 	ldrb.w	r3, [sp, #486]	; 0x1e6
90011d5e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90011d60:	9320      	str	r3, [sp, #128]	; 0x80
90011d62:	f89d 31e7 	ldrb.w	r3, [sp, #487]	; 0x1e7
90011d66:	9321      	str	r3, [sp, #132]	; 0x84
90011d68:	f89d 31e8 	ldrb.w	r3, [sp, #488]	; 0x1e8
90011d6c:	9332      	str	r3, [sp, #200]	; 0xc8
90011d6e:	f89d 31e9 	ldrb.w	r3, [sp, #489]	; 0x1e9
90011d72:	9333      	str	r3, [sp, #204]	; 0xcc
90011d74:	f89d 31ea 	ldrb.w	r3, [sp, #490]	; 0x1ea
90011d78:	931c      	str	r3, [sp, #112]	; 0x70
90011d7a:	f89d 31eb 	ldrb.w	r3, [sp, #491]	; 0x1eb
90011d7e:	931d      	str	r3, [sp, #116]	; 0x74
90011d80:	f89d 31ec 	ldrb.w	r3, [sp, #492]	; 0x1ec
90011d84:	9334      	str	r3, [sp, #208]	; 0xd0
90011d86:	f89d 31ed 	ldrb.w	r3, [sp, #493]	; 0x1ed
90011d8a:	9335      	str	r3, [sp, #212]	; 0xd4
90011d8c:	f89d 31ee 	ldrb.w	r3, [sp, #494]	; 0x1ee
90011d90:	931b      	str	r3, [sp, #108]	; 0x6c
90011d92:	f89d 31ef 	ldrb.w	r3, [sp, #495]	; 0x1ef
90011d96:	931a      	str	r3, [sp, #104]	; 0x68
90011d98:	f89d 31f0 	ldrb.w	r3, [sp, #496]	; 0x1f0
90011d9c:	9322      	str	r3, [sp, #136]	; 0x88
90011d9e:	f89d 31f1 	ldrb.w	r3, [sp, #497]	; 0x1f1
90011da2:	9323      	str	r3, [sp, #140]	; 0x8c
90011da4:	f89d 31f2 	ldrb.w	r3, [sp, #498]	; 0x1f2
90011da8:	9324      	str	r3, [sp, #144]	; 0x90
90011daa:	f89d 31f3 	ldrb.w	r3, [sp, #499]	; 0x1f3
90011dae:	9325      	str	r3, [sp, #148]	; 0x94
90011db0:	2300      	movs	r3, #0
90011db2:	e9cd 335a 	strd	r3, r3, [sp, #360]	; 0x168
90011db6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90011db8:	1a9b      	subs	r3, r3, r2
90011dba:	9330      	str	r3, [sp, #192]	; 0xc0
90011dbc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90011dbe:	f88d 3138 	strb.w	r3, [sp, #312]	; 0x138
90011dc2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90011dc4:	f88d 3139 	strb.w	r3, [sp, #313]	; 0x139
90011dc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90011dca:	f88d 313a 	strb.w	r3, [sp, #314]	; 0x13a
90011dce:	9b21      	ldr	r3, [sp, #132]	; 0x84
90011dd0:	f88d 313b 	strb.w	r3, [sp, #315]	; 0x13b
90011dd4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90011dd6:	f88d 313c 	strb.w	r3, [sp, #316]	; 0x13c
90011dda:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90011ddc:	f88d 313d 	strb.w	r3, [sp, #317]	; 0x13d
90011de0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90011de2:	f88d 313e 	strb.w	r3, [sp, #318]	; 0x13e
90011de6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90011de8:	f88d 313f 	strb.w	r3, [sp, #319]	; 0x13f
90011dec:	9b22      	ldr	r3, [sp, #136]	; 0x88
90011dee:	f88d 3140 	strb.w	r3, [sp, #320]	; 0x140
90011df2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90011df4:	f88d 3141 	strb.w	r3, [sp, #321]	; 0x141
90011df8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90011dfa:	f88d 3142 	strb.w	r3, [sp, #322]	; 0x142
90011dfe:	9b25      	ldr	r3, [sp, #148]	; 0x94
90011e00:	f88d 3143 	strb.w	r3, [sp, #323]	; 0x143
90011e04:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90011e06:	f88d 3144 	strb.w	r3, [sp, #324]	; 0x144
90011e0a:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90011e0c:	f88d 3145 	strb.w	r3, [sp, #325]	; 0x145
90011e10:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90011e12:	f88d 3146 	strb.w	r3, [sp, #326]	; 0x146
90011e16:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90011e18:	f88d 3147 	strb.w	r3, [sp, #327]	; 0x147
90011e1c:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
90011e20:	e9dd 011e 	ldrd	r0, r1, [sp, #120]	; 0x78
90011e24:	f7f2 ff65 	bl	90004cf2 <EwPackColor>
90011e28:	4605      	mov	r5, r0
90011e2a:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
90011e2e:	e9dd 0132 	ldrd	r0, r1, [sp, #200]	; 0xc8
90011e32:	f7f2 ff5e 	bl	90004cf2 <EwPackColor>
90011e36:	9027      	str	r0, [sp, #156]	; 0x9c
90011e38:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	; 0x90
90011e3c:	e9dd 0122 	ldrd	r0, r1, [sp, #136]	; 0x88
90011e40:	f7f2 ff57 	bl	90004cf2 <EwPackColor>
90011e44:	4604      	mov	r4, r0
90011e46:	e9dd 321a 	ldrd	r3, r2, [sp, #104]	; 0x68
90011e4a:	e9dd 0134 	ldrd	r0, r1, [sp, #208]	; 0xd0
90011e4e:	f7f2 ff50 	bl	90004cf2 <EwPackColor>
90011e52:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90011e54:	2b00      	cmp	r3, #0
90011e56:	dd5b      	ble.n	90011f10 <EwDrawBitmapFrame+0x218>
90011e58:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
90011e5a:	9a16      	ldr	r2, [sp, #88]	; 0x58
90011e5c:	eba3 0a02 	sub.w	sl, r3, r2
90011e60:	f1ba 0f00 	cmp.w	sl, #0
90011e64:	dd54      	ble.n	90011f10 <EwDrawBitmapFrame+0x218>
90011e66:	9b40      	ldr	r3, [sp, #256]	; 0x100
90011e68:	2203      	movs	r2, #3
90011e6a:	eba6 0b03 	sub.w	fp, r6, r3
90011e6e:	fb9b f6f2 	sdiv	r6, fp, r2
90011e72:	ebab 0346 	sub.w	r3, fp, r6, lsl #1
90011e76:	2b00      	cmp	r3, #0
90011e78:	934a      	str	r3, [sp, #296]	; 0x128
90011e7a:	dd49      	ble.n	90011f10 <EwDrawBitmapFrame+0x218>
90011e7c:	9b42      	ldr	r3, [sp, #264]	; 0x108
90011e7e:	1afb      	subs	r3, r7, r3
90011e80:	fb93 f7f2 	sdiv	r7, r3, r2
90011e84:	eba3 0247 	sub.w	r2, r3, r7, lsl #1
90011e88:	2a00      	cmp	r2, #0
90011e8a:	9246      	str	r2, [sp, #280]	; 0x118
90011e8c:	dd40      	ble.n	90011f10 <EwDrawBitmapFrame+0x218>
90011e8e:	9a26      	ldr	r2, [sp, #152]	; 0x98
90011e90:	2a00      	cmp	r2, #0
90011e92:	f000 854f 	beq.w	90012934 <EwDrawBitmapFrame+0xc3c>
90011e96:	9a15      	ldr	r2, [sp, #84]	; 0x54
90011e98:	2a00      	cmp	r2, #0
90011e9a:	f000 8564 	beq.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011e9e:	9a18      	ldr	r2, [sp, #96]	; 0x60
90011ea0:	2a00      	cmp	r2, #0
90011ea2:	f000 8560 	beq.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011ea6:	9a19      	ldr	r2, [sp, #100]	; 0x64
90011ea8:	2a00      	cmp	r2, #0
90011eaa:	f000 855c 	beq.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011eae:	9a4d      	ldr	r2, [sp, #308]	; 0x134
90011eb0:	2a00      	cmp	r2, #0
90011eb2:	f000 8558 	beq.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011eb6:	9a30      	ldr	r2, [sp, #192]	; 0xc0
90011eb8:	4593      	cmp	fp, r2
90011eba:	f040 8554 	bne.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011ebe:	4553      	cmp	r3, sl
90011ec0:	f040 8551 	bne.w	90012966 <EwDrawBitmapFrame+0xc6e>
90011ec4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90011ec6:	aa5c      	add	r2, sp, #368	; 0x170
90011ec8:	ac08      	add	r4, sp, #32
90011eca:	9312      	str	r3, [sp, #72]	; 0x48
90011ecc:	9b7c      	ldr	r3, [sp, #496]	; 0x1f0
90011ece:	9311      	str	r3, [sp, #68]	; 0x44
90011ed0:	9b7b      	ldr	r3, [sp, #492]	; 0x1ec
90011ed2:	9310      	str	r3, [sp, #64]	; 0x40
90011ed4:	9b7a      	ldr	r3, [sp, #488]	; 0x1e8
90011ed6:	930f      	str	r3, [sp, #60]	; 0x3c
90011ed8:	9b79      	ldr	r3, [sp, #484]	; 0x1e4
90011eda:	930e      	str	r3, [sp, #56]	; 0x38
90011edc:	ab0c      	add	r3, sp, #48	; 0x30
90011ede:	e912 0003 	ldmdb	r2, {r0, r1}
90011ee2:	e883 0003 	stmia.w	r3, {r0, r1}
90011ee6:	ab70      	add	r3, sp, #448	; 0x1c0
90011ee8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90011eea:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011eee:	ab6c      	add	r3, sp, #432	; 0x1b0
90011ef0:	ac04      	add	r4, sp, #16
90011ef2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90011ef4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90011ef8:	ab68      	add	r3, sp, #416	; 0x1a0
90011efa:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90011efc:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
90011f00:	464b      	mov	r3, r9
90011f02:	4642      	mov	r2, r8
90011f04:	ee18 1a90 	vmov	r1, s17
90011f08:	ee18 0a10 	vmov	r0, s16
90011f0c:	f7fe f99c 	bl	90010248 <EwTileBitmap>
90011f10:	b05d      	add	sp, #372	; 0x174
90011f12:	ecbd 8b02 	vpop	{d8}
90011f16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011f1a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90011f1c:	4632      	mov	r2, r6
90011f1e:	e9dd 0179 	ldrd	r0, r1, [sp, #484]	; 0x1e4
90011f22:	f7f8 fd65 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011f26:	4632      	mov	r2, r6
90011f28:	b2c3      	uxtb	r3, r0
90011f2a:	9327      	str	r3, [sp, #156]	; 0x9c
90011f2c:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011f30:	9328      	str	r3, [sp, #160]	; 0xa0
90011f32:	f3c0 4307 	ubfx	r3, r0, #16, #8
90011f36:	9329      	str	r3, [sp, #164]	; 0xa4
90011f38:	0e03      	lsrs	r3, r0, #24
90011f3a:	e9dd 107b 	ldrd	r1, r0, [sp, #492]	; 0x1ec
90011f3e:	932a      	str	r3, [sp, #168]	; 0xa8
90011f40:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90011f42:	f7f8 fd55 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011f46:	b2c3      	uxtb	r3, r0
90011f48:	932b      	str	r3, [sp, #172]	; 0xac
90011f4a:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011f4e:	932c      	str	r3, [sp, #176]	; 0xb0
90011f50:	f3c0 4307 	ubfx	r3, r0, #16, #8
90011f54:	932d      	str	r3, [sp, #180]	; 0xb4
90011f56:	0e03      	lsrs	r3, r0, #24
90011f58:	932e      	str	r3, [sp, #184]	; 0xb8
90011f5a:	9b15      	ldr	r3, [sp, #84]	; 0x54
90011f5c:	2b00      	cmp	r3, #0
90011f5e:	f000 80f7 	beq.w	90012150 <EwDrawBitmapFrame+0x458>
90011f62:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90011f64:	4632      	mov	r2, r6
90011f66:	e9dd 1079 	ldrd	r1, r0, [sp, #484]	; 0x1e4
90011f6a:	f7f8 fd41 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011f6e:	4632      	mov	r2, r6
90011f70:	b2c3      	uxtb	r3, r0
90011f72:	0e04      	lsrs	r4, r0, #24
90011f74:	9336      	str	r3, [sp, #216]	; 0xd8
90011f76:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011f7a:	9337      	str	r3, [sp, #220]	; 0xdc
90011f7c:	f3c0 4307 	ubfx	r3, r0, #16, #8
90011f80:	e9dd 017b 	ldrd	r0, r1, [sp, #492]	; 0x1ec
90011f84:	933b      	str	r3, [sp, #236]	; 0xec
90011f86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90011f88:	f7f8 fd32 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011f8c:	f3c0 4b07 	ubfx	fp, r0, #16, #8
90011f90:	b2c3      	uxtb	r3, r0
90011f92:	0e05      	lsrs	r5, r0, #24
90011f94:	9338      	str	r3, [sp, #224]	; 0xe0
90011f96:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011f9a:	9339      	str	r3, [sp, #228]	; 0xe4
90011f9c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90011f9e:	2b00      	cmp	r3, #0
90011fa0:	f000 80e4 	beq.w	9001216c <EwDrawBitmapFrame+0x474>
90011fa4:	4653      	mov	r3, sl
90011fa6:	463a      	mov	r2, r7
90011fa8:	997c      	ldr	r1, [sp, #496]	; 0x1f0
90011faa:	9879      	ldr	r0, [sp, #484]	; 0x1e4
90011fac:	f7f8 fd20 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011fb0:	463a      	mov	r2, r7
90011fb2:	b2c3      	uxtb	r3, r0
90011fb4:	931e      	str	r3, [sp, #120]	; 0x78
90011fb6:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011fba:	931f      	str	r3, [sp, #124]	; 0x7c
90011fbc:	f3c0 4307 	ubfx	r3, r0, #16, #8
90011fc0:	9320      	str	r3, [sp, #128]	; 0x80
90011fc2:	0e03      	lsrs	r3, r0, #24
90011fc4:	e9dd 017a 	ldrd	r0, r1, [sp, #488]	; 0x1e8
90011fc8:	9321      	str	r3, [sp, #132]	; 0x84
90011fca:	4653      	mov	r3, sl
90011fcc:	f7f8 fd10 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011fd0:	b2c3      	uxtb	r3, r0
90011fd2:	9332      	str	r3, [sp, #200]	; 0xc8
90011fd4:	f3c0 2307 	ubfx	r3, r0, #8, #8
90011fd8:	9333      	str	r3, [sp, #204]	; 0xcc
90011fda:	f3c0 4307 	ubfx	r3, r0, #16, #8
90011fde:	933c      	str	r3, [sp, #240]	; 0xf0
90011fe0:	0e03      	lsrs	r3, r0, #24
90011fe2:	933d      	str	r3, [sp, #244]	; 0xf4
90011fe4:	9b19      	ldr	r3, [sp, #100]	; 0x64
90011fe6:	2b00      	cmp	r3, #0
90011fe8:	f000 80c5 	beq.w	90012176 <EwDrawBitmapFrame+0x47e>
90011fec:	4653      	mov	r3, sl
90011fee:	463a      	mov	r2, r7
90011ff0:	9979      	ldr	r1, [sp, #484]	; 0x1e4
90011ff2:	987c      	ldr	r0, [sp, #496]	; 0x1f0
90011ff4:	f7f8 fcfc 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90011ff8:	463a      	mov	r2, r7
90011ffa:	b2c3      	uxtb	r3, r0
90011ffc:	9322      	str	r3, [sp, #136]	; 0x88
90011ffe:	f3c0 2307 	ubfx	r3, r0, #8, #8
90012002:	9323      	str	r3, [sp, #140]	; 0x8c
90012004:	f3c0 4307 	ubfx	r3, r0, #16, #8
90012008:	9324      	str	r3, [sp, #144]	; 0x90
9001200a:	0e03      	lsrs	r3, r0, #24
9001200c:	e9dd 107a 	ldrd	r1, r0, [sp, #488]	; 0x1e8
90012010:	9325      	str	r3, [sp, #148]	; 0x94
90012012:	4653      	mov	r3, sl
90012014:	f7f8 fcec 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90012018:	b2c3      	uxtb	r3, r0
9001201a:	9334      	str	r3, [sp, #208]	; 0xd0
9001201c:	f3c0 2307 	ubfx	r3, r0, #8, #8
90012020:	9335      	str	r3, [sp, #212]	; 0xd4
90012022:	f3c0 4307 	ubfx	r3, r0, #16, #8
90012026:	933e      	str	r3, [sp, #248]	; 0xf8
90012028:	0e03      	lsrs	r3, r0, #24
9001202a:	933f      	str	r3, [sp, #252]	; 0xfc
9001202c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001202e:	2b00      	cmp	r3, #0
90012030:	f000 846a 	beq.w	90012908 <EwDrawBitmapFrame+0xc10>
90012034:	9b18      	ldr	r3, [sp, #96]	; 0x60
90012036:	2b00      	cmp	r3, #0
90012038:	f040 8477 	bne.w	9001292a <EwDrawBitmapFrame+0xc32>
9001203c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001203e:	f88d 3138 	strb.w	r3, [sp, #312]	; 0x138
90012042:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90012044:	f88d 3139 	strb.w	r3, [sp, #313]	; 0x139
90012048:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001204a:	f88d 313a 	strb.w	r3, [sp, #314]	; 0x13a
9001204e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90012050:	f88d 313b 	strb.w	r3, [sp, #315]	; 0x13b
90012054:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012056:	b173      	cbz	r3, 90012076 <EwDrawBitmapFrame+0x37e>
90012058:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001205a:	f88d 413f 	strb.w	r4, [sp, #319]	; 0x13f
9001205e:	f88d 313c 	strb.w	r3, [sp, #316]	; 0x13c
90012062:	9b37      	ldr	r3, [sp, #220]	; 0xdc
90012064:	f88d 313d 	strb.w	r3, [sp, #317]	; 0x13d
90012068:	9b3b      	ldr	r3, [sp, #236]	; 0xec
9001206a:	f88d 313e 	strb.w	r3, [sp, #318]	; 0x13e
9001206e:	9b26      	ldr	r3, [sp, #152]	; 0x98
90012070:	2b00      	cmp	r3, #0
90012072:	f000 8451 	beq.w	90012918 <EwDrawBitmapFrame+0xc20>
90012076:	9b19      	ldr	r3, [sp, #100]	; 0x64
90012078:	2b00      	cmp	r3, #0
9001207a:	f040 843b 	bne.w	900128f4 <EwDrawBitmapFrame+0xbfc>
9001207e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90012080:	f88d 3140 	strb.w	r3, [sp, #320]	; 0x140
90012084:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90012086:	f88d 3141 	strb.w	r3, [sp, #321]	; 0x141
9001208a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001208c:	f88d 3142 	strb.w	r3, [sp, #322]	; 0x142
90012090:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90012092:	f88d 3143 	strb.w	r3, [sp, #323]	; 0x143
90012096:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012098:	2b00      	cmp	r3, #0
9001209a:	f000 848f 	beq.w	900129bc <EwDrawBitmapFrame+0xcc4>
9001209e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
900120a0:	f88d b146 	strb.w	fp, [sp, #326]	; 0x146
900120a4:	f88d 3144 	strb.w	r3, [sp, #324]	; 0x144
900120a8:	9b39      	ldr	r3, [sp, #228]	; 0xe4
900120aa:	f88d 5147 	strb.w	r5, [sp, #327]	; 0x147
900120ae:	f88d 3145 	strb.w	r3, [sp, #325]	; 0x145
900120b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
900120b4:	2b00      	cmp	r3, #0
900120b6:	d041      	beq.n	9001213c <EwDrawBitmapFrame+0x444>
900120b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
900120ba:	b1f3      	cbz	r3, 900120fa <EwDrawBitmapFrame+0x402>
900120bc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900120be:	463a      	mov	r2, r7
900120c0:	f88d 3148 	strb.w	r3, [sp, #328]	; 0x148
900120c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900120c6:	f88d 3149 	strb.w	r3, [sp, #329]	; 0x149
900120ca:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900120cc:	f88d 314a 	strb.w	r3, [sp, #330]	; 0x14a
900120d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900120d2:	f88d 314b 	strb.w	r3, [sp, #331]	; 0x14b
900120d6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900120d8:	9852      	ldr	r0, [sp, #328]	; 0x148
900120da:	f88d 3150 	strb.w	r3, [sp, #336]	; 0x150
900120de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900120e0:	f88d 3151 	strb.w	r3, [sp, #337]	; 0x151
900120e4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900120e6:	f88d 3152 	strb.w	r3, [sp, #338]	; 0x152
900120ea:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900120ec:	f88d 3153 	strb.w	r3, [sp, #339]	; 0x153
900120f0:	4653      	mov	r3, sl
900120f2:	9954      	ldr	r1, [sp, #336]	; 0x150
900120f4:	f7f8 fc7c 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
900120f8:	904e      	str	r0, [sp, #312]	; 0x138
900120fa:	9b19      	ldr	r3, [sp, #100]	; 0x64
900120fc:	b1f3      	cbz	r3, 9001213c <EwDrawBitmapFrame+0x444>
900120fe:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90012100:	463a      	mov	r2, r7
90012102:	f88d 3150 	strb.w	r3, [sp, #336]	; 0x150
90012106:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90012108:	f88d 3151 	strb.w	r3, [sp, #337]	; 0x151
9001210c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001210e:	f88d 3152 	strb.w	r3, [sp, #338]	; 0x152
90012112:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90012114:	f88d 3153 	strb.w	r3, [sp, #339]	; 0x153
90012118:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001211a:	9854      	ldr	r0, [sp, #336]	; 0x150
9001211c:	f88d 3148 	strb.w	r3, [sp, #328]	; 0x148
90012120:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90012122:	f88d 3149 	strb.w	r3, [sp, #329]	; 0x149
90012126:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90012128:	f88d 314a 	strb.w	r3, [sp, #330]	; 0x14a
9001212c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001212e:	f88d 314b 	strb.w	r3, [sp, #331]	; 0x14b
90012132:	4653      	mov	r3, sl
90012134:	9952      	ldr	r1, [sp, #328]	; 0x148
90012136:	f7f8 fc5b 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
9001213a:	9050      	str	r0, [sp, #320]	; 0x140
9001213c:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001213e:	2b00      	cmp	r3, #0
90012140:	d156      	bne.n	900121f0 <EwDrawBitmapFrame+0x4f8>
90012142:	9b3b      	ldr	r3, [sp, #236]	; 0xec
90012144:	941d      	str	r4, [sp, #116]	; 0x74
90012146:	931c      	str	r3, [sp, #112]	; 0x70
90012148:	e9cd 5b1a 	strd	r5, fp, [sp, #104]	; 0x68
9001214c:	2300      	movs	r3, #0
9001214e:	e09a      	b.n	90012286 <EwDrawBitmapFrame+0x58e>
90012150:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90012152:	9339      	str	r3, [sp, #228]	; 0xe4
90012154:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90012156:	9338      	str	r3, [sp, #224]	; 0xe0
90012158:	e9dd 341c 	ldrd	r3, r4, [sp, #112]	; 0x70
9001215c:	e9dd 5b1a 	ldrd	r5, fp, [sp, #104]	; 0x68
90012160:	933b      	str	r3, [sp, #236]	; 0xec
90012162:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90012164:	9337      	str	r3, [sp, #220]	; 0xdc
90012166:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90012168:	9336      	str	r3, [sp, #216]	; 0xd8
9001216a:	e717      	b.n	90011f9c <EwDrawBitmapFrame+0x2a4>
9001216c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001216e:	933d      	str	r3, [sp, #244]	; 0xf4
90012170:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90012172:	933c      	str	r3, [sp, #240]	; 0xf0
90012174:	e736      	b.n	90011fe4 <EwDrawBitmapFrame+0x2ec>
90012176:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90012178:	933f      	str	r3, [sp, #252]	; 0xfc
9001217a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001217c:	933e      	str	r3, [sp, #248]	; 0xf8
9001217e:	e755      	b.n	9001202c <EwDrawBitmapFrame+0x334>
90012180:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90012182:	f88d 3138 	strb.w	r3, [sp, #312]	; 0x138
90012186:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90012188:	f88d 3139 	strb.w	r3, [sp, #313]	; 0x139
9001218c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001218e:	f88d 313a 	strb.w	r3, [sp, #314]	; 0x13a
90012192:	9b21      	ldr	r3, [sp, #132]	; 0x84
90012194:	f88d 313b 	strb.w	r3, [sp, #315]	; 0x13b
90012198:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001219a:	2b00      	cmp	r3, #0
9001219c:	f040 83bc 	bne.w	90012918 <EwDrawBitmapFrame+0xc20>
900121a0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900121a2:	f88d 313c 	strb.w	r3, [sp, #316]	; 0x13c
900121a6:	9b33      	ldr	r3, [sp, #204]	; 0xcc
900121a8:	f88d 313d 	strb.w	r3, [sp, #317]	; 0x13d
900121ac:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
900121ae:	f88d 313e 	strb.w	r3, [sp, #318]	; 0x13e
900121b2:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
900121b4:	f88d 313f 	strb.w	r3, [sp, #319]	; 0x13f
900121b8:	e759      	b.n	9001206e <EwDrawBitmapFrame+0x376>
900121ba:	9b22      	ldr	r3, [sp, #136]	; 0x88
900121bc:	f88d 3140 	strb.w	r3, [sp, #320]	; 0x140
900121c0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900121c2:	f88d 3141 	strb.w	r3, [sp, #321]	; 0x141
900121c6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900121c8:	f88d 3142 	strb.w	r3, [sp, #322]	; 0x142
900121cc:	9b25      	ldr	r3, [sp, #148]	; 0x94
900121ce:	f88d 3143 	strb.w	r3, [sp, #323]	; 0x143
900121d2:	9b15      	ldr	r3, [sp, #84]	; 0x54
900121d4:	b963      	cbnz	r3, 900121f0 <EwDrawBitmapFrame+0x4f8>
900121d6:	9b34      	ldr	r3, [sp, #208]	; 0xd0
900121d8:	f88d 3144 	strb.w	r3, [sp, #324]	; 0x144
900121dc:	9b35      	ldr	r3, [sp, #212]	; 0xd4
900121de:	f88d 3145 	strb.w	r3, [sp, #325]	; 0x145
900121e2:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
900121e4:	f88d 3146 	strb.w	r3, [sp, #326]	; 0x146
900121e8:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
900121ea:	f88d 3147 	strb.w	r3, [sp, #327]	; 0x147
900121ee:	e760      	b.n	900120b2 <EwDrawBitmapFrame+0x3ba>
900121f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900121f2:	b1db      	cbz	r3, 9001222c <EwDrawBitmapFrame+0x534>
900121f4:	9b36      	ldr	r3, [sp, #216]	; 0xd8
900121f6:	463a      	mov	r2, r7
900121f8:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
900121fc:	f88d 314c 	strb.w	r3, [sp, #332]	; 0x14c
90012200:	9b37      	ldr	r3, [sp, #220]	; 0xdc
90012202:	f88d b156 	strb.w	fp, [sp, #342]	; 0x156
90012206:	f88d 314d 	strb.w	r3, [sp, #333]	; 0x14d
9001220a:	9b3b      	ldr	r3, [sp, #236]	; 0xec
9001220c:	f88d 5157 	strb.w	r5, [sp, #343]	; 0x157
90012210:	f88d 314e 	strb.w	r3, [sp, #334]	; 0x14e
90012214:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90012216:	9853      	ldr	r0, [sp, #332]	; 0x14c
90012218:	f88d 3154 	strb.w	r3, [sp, #340]	; 0x154
9001221c:	9b39      	ldr	r3, [sp, #228]	; 0xe4
9001221e:	f88d 3155 	strb.w	r3, [sp, #341]	; 0x155
90012222:	4653      	mov	r3, sl
90012224:	9955      	ldr	r1, [sp, #340]	; 0x154
90012226:	f7f8 fbe3 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
9001222a:	904f      	str	r0, [sp, #316]	; 0x13c
9001222c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001222e:	b1db      	cbz	r3, 90012268 <EwDrawBitmapFrame+0x570>
90012230:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90012232:	463a      	mov	r2, r7
90012234:	f88d b156 	strb.w	fp, [sp, #342]	; 0x156
90012238:	f88d 3154 	strb.w	r3, [sp, #340]	; 0x154
9001223c:	9b39      	ldr	r3, [sp, #228]	; 0xe4
9001223e:	f88d 5157 	strb.w	r5, [sp, #343]	; 0x157
90012242:	f88d 3155 	strb.w	r3, [sp, #341]	; 0x155
90012246:	9b36      	ldr	r3, [sp, #216]	; 0xd8
90012248:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
9001224c:	f88d 314c 	strb.w	r3, [sp, #332]	; 0x14c
90012250:	9b37      	ldr	r3, [sp, #220]	; 0xdc
90012252:	9855      	ldr	r0, [sp, #340]	; 0x154
90012254:	f88d 314d 	strb.w	r3, [sp, #333]	; 0x14d
90012258:	9b3b      	ldr	r3, [sp, #236]	; 0xec
9001225a:	f88d 314e 	strb.w	r3, [sp, #334]	; 0x14e
9001225e:	4653      	mov	r3, sl
90012260:	9953      	ldr	r1, [sp, #332]	; 0x14c
90012262:	f7f8 fbc5 	bl	9000a9f0 <EwScreenWarpRGB565RowFilterSolidBlend+0x40>
90012266:	9051      	str	r0, [sp, #324]	; 0x144
90012268:	9b3b      	ldr	r3, [sp, #236]	; 0xec
9001226a:	941d      	str	r4, [sp, #116]	; 0x74
9001226c:	931c      	str	r3, [sp, #112]	; 0x70
9001226e:	e9cd 5b1a 	strd	r5, fp, [sp, #104]	; 0x68
90012272:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012274:	2b00      	cmp	r3, #0
90012276:	f43f af69 	beq.w	9001214c <EwDrawBitmapFrame+0x454>
9001227a:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001227c:	2b00      	cmp	r3, #0
9001227e:	f47f af65 	bne.w	9001214c <EwDrawBitmapFrame+0x454>
90012282:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90012284:	1af3      	subs	r3, r6, r3
90012286:	9349      	str	r3, [sp, #292]	; 0x124
90012288:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001228a:	2b00      	cmp	r3, #0
9001228c:	f000 832e 	beq.w	900128ec <EwDrawBitmapFrame+0xbf4>
90012290:	9b18      	ldr	r3, [sp, #96]	; 0x60
90012292:	2b00      	cmp	r3, #0
90012294:	f040 832c 	bne.w	900128f0 <EwDrawBitmapFrame+0xbf8>
90012298:	eba7 030a 	sub.w	r3, r7, sl
9001229c:	9345      	str	r3, [sp, #276]	; 0x114
9001229e:	9b40      	ldr	r3, [sp, #256]	; 0x100
900122a0:	18f3      	adds	r3, r6, r3
900122a2:	933b      	str	r3, [sp, #236]	; 0xec
900122a4:	9b42      	ldr	r3, [sp, #264]	; 0x108
900122a6:	18fd      	adds	r5, r7, r3
900122a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900122aa:	18f3      	adds	r3, r6, r3
900122ac:	934b      	str	r3, [sp, #300]	; 0x12c
900122ae:	9b16      	ldr	r3, [sp, #88]	; 0x58
900122b0:	18fb      	adds	r3, r7, r3
900122b2:	9347      	str	r3, [sp, #284]	; 0x11c
900122b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900122b6:	2b00      	cmp	r3, #0
900122b8:	d047      	beq.n	9001234a <EwDrawBitmapFrame+0x652>
900122ba:	9b18      	ldr	r3, [sp, #96]	; 0x60
900122bc:	2b00      	cmp	r3, #0
900122be:	d044      	beq.n	9001234a <EwDrawBitmapFrame+0x652>
900122c0:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
900122c2:	aa5c      	add	r2, sp, #368	; 0x170
900122c4:	ac08      	add	r4, sp, #32
900122c6:	936e      	str	r3, [sp, #440]	; 0x1b8
900122c8:	9b47      	ldr	r3, [sp, #284]	; 0x11c
900122ca:	936f      	str	r3, [sp, #444]	; 0x1bc
900122cc:	9b3b      	ldr	r3, [sp, #236]	; 0xec
900122ce:	e9cd 3572 	strd	r3, r5, [sp, #456]	; 0x1c8
900122d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900122d4:	f88d 3148 	strb.w	r3, [sp, #328]	; 0x148
900122d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900122da:	f88d 3149 	strb.w	r3, [sp, #329]	; 0x149
900122de:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900122e0:	f88d 314a 	strb.w	r3, [sp, #330]	; 0x14a
900122e4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900122e6:	f88d 314b 	strb.w	r3, [sp, #331]	; 0x14b
900122ea:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900122ec:	f88d 3158 	strb.w	r3, [sp, #344]	; 0x158
900122f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900122f2:	f88d 3159 	strb.w	r3, [sp, #345]	; 0x159
900122f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900122f8:	f88d 315a 	strb.w	r3, [sp, #346]	; 0x15a
900122fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900122fe:	f88d 315b 	strb.w	r3, [sp, #347]	; 0x15b
90012302:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90012304:	9312      	str	r3, [sp, #72]	; 0x48
90012306:	9b56      	ldr	r3, [sp, #344]	; 0x158
90012308:	9311      	str	r3, [sp, #68]	; 0x44
9001230a:	9b4e      	ldr	r3, [sp, #312]	; 0x138
9001230c:	9310      	str	r3, [sp, #64]	; 0x40
9001230e:	9b52      	ldr	r3, [sp, #328]	; 0x148
90012310:	930f      	str	r3, [sp, #60]	; 0x3c
90012312:	9b79      	ldr	r3, [sp, #484]	; 0x1e4
90012314:	930e      	str	r3, [sp, #56]	; 0x38
90012316:	ab0c      	add	r3, sp, #48	; 0x30
90012318:	e912 0003 	ldmdb	r2, {r0, r1}
9001231c:	e883 0003 	stmia.w	r3, {r0, r1}
90012320:	ab70      	add	r3, sp, #448	; 0x1c0
90012322:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012324:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012328:	ab6c      	add	r3, sp, #432	; 0x1b0
9001232a:	ac04      	add	r4, sp, #16
9001232c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001232e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012332:	ab68      	add	r3, sp, #416	; 0x1a0
90012334:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012336:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
9001233a:	464b      	mov	r3, r9
9001233c:	4642      	mov	r2, r8
9001233e:	ee18 1a90 	vmov	r1, s17
90012342:	ee18 0a10 	vmov	r0, s16
90012346:	f7fd ff7f 	bl	90010248 <EwTileBitmap>
9001234a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001234c:	9a40      	ldr	r2, [sp, #256]	; 0x100
9001234e:	1b9c      	subs	r4, r3, r6
90012350:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90012352:	18e3      	adds	r3, r4, r3
90012354:	9348      	str	r3, [sp, #288]	; 0x120
90012356:	9b4a      	ldr	r3, [sp, #296]	; 0x128
90012358:	18f3      	adds	r3, r6, r3
9001235a:	eb03 0b02 	add.w	fp, r3, r2
9001235e:	9a3b      	ldr	r2, [sp, #236]	; 0xec
90012360:	18d3      	adds	r3, r2, r3
90012362:	9341      	str	r3, [sp, #260]	; 0x104
90012364:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012366:	2b00      	cmp	r3, #0
90012368:	d04c      	beq.n	90012404 <EwDrawBitmapFrame+0x70c>
9001236a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001236c:	2b00      	cmp	r3, #0
9001236e:	d049      	beq.n	90012404 <EwDrawBitmapFrame+0x70c>
90012370:	9b48      	ldr	r3, [sp, #288]	; 0x120
90012372:	aa5c      	add	r2, sp, #368	; 0x170
90012374:	f10d 0c20 	add.w	ip, sp, #32
90012378:	936c      	str	r3, [sp, #432]	; 0x1b0
9001237a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001237c:	936e      	str	r3, [sp, #440]	; 0x1b8
9001237e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
90012380:	e9cd 3b6f 	strd	r3, fp, [sp, #444]	; 0x1bc
90012384:	9b41      	ldr	r3, [sp, #260]	; 0x104
90012386:	e9cd 3572 	strd	r3, r5, [sp, #456]	; 0x1c8
9001238a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
9001238c:	f88d 314c 	strb.w	r3, [sp, #332]	; 0x14c
90012390:	9b37      	ldr	r3, [sp, #220]	; 0xdc
90012392:	f88d 314d 	strb.w	r3, [sp, #333]	; 0x14d
90012396:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90012398:	f88d 314e 	strb.w	r3, [sp, #334]	; 0x14e
9001239c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001239e:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
900123a2:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900123a4:	f88d 315c 	strb.w	r3, [sp, #348]	; 0x15c
900123a8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
900123aa:	f88d 315d 	strb.w	r3, [sp, #349]	; 0x15d
900123ae:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
900123b0:	f88d 315e 	strb.w	r3, [sp, #350]	; 0x15e
900123b4:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
900123b6:	f88d 315f 	strb.w	r3, [sp, #351]	; 0x15f
900123ba:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
900123bc:	9312      	str	r3, [sp, #72]	; 0x48
900123be:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
900123c0:	9311      	str	r3, [sp, #68]	; 0x44
900123c2:	9b57      	ldr	r3, [sp, #348]	; 0x15c
900123c4:	9310      	str	r3, [sp, #64]	; 0x40
900123c6:	9b7a      	ldr	r3, [sp, #488]	; 0x1e8
900123c8:	930f      	str	r3, [sp, #60]	; 0x3c
900123ca:	9b53      	ldr	r3, [sp, #332]	; 0x14c
900123cc:	930e      	str	r3, [sp, #56]	; 0x38
900123ce:	ab0c      	add	r3, sp, #48	; 0x30
900123d0:	e912 0003 	ldmdb	r2, {r0, r1}
900123d4:	e883 0003 	stmia.w	r3, {r0, r1}
900123d8:	ab70      	add	r3, sp, #448	; 0x1c0
900123da:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900123dc:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
900123e0:	ab6c      	add	r3, sp, #432	; 0x1b0
900123e2:	f10d 0c10 	add.w	ip, sp, #16
900123e6:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900123e8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
900123ec:	ab68      	add	r3, sp, #416	; 0x1a0
900123ee:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900123f0:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
900123f4:	464b      	mov	r3, r9
900123f6:	4642      	mov	r2, r8
900123f8:	ee18 1a90 	vmov	r1, s17
900123fc:	ee18 0a10 	vmov	r0, s16
90012400:	f7fd ff22 	bl	90010248 <EwTileBitmap>
90012404:	ebaa 0307 	sub.w	r3, sl, r7
90012408:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001240a:	934c      	str	r3, [sp, #304]	; 0x130
9001240c:	4413      	add	r3, r2
9001240e:	9a42      	ldr	r2, [sp, #264]	; 0x108
90012410:	9344      	str	r3, [sp, #272]	; 0x110
90012412:	9b46      	ldr	r3, [sp, #280]	; 0x118
90012414:	18fb      	adds	r3, r7, r3
90012416:	441a      	add	r2, r3
90012418:	18eb      	adds	r3, r5, r3
9001241a:	9343      	str	r3, [sp, #268]	; 0x10c
9001241c:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001241e:	9242      	str	r2, [sp, #264]	; 0x108
90012420:	2b00      	cmp	r3, #0
90012422:	d04e      	beq.n	900124c2 <EwDrawBitmapFrame+0x7ca>
90012424:	9b19      	ldr	r3, [sp, #100]	; 0x64
90012426:	2b00      	cmp	r3, #0
90012428:	d04b      	beq.n	900124c2 <EwDrawBitmapFrame+0x7ca>
9001242a:	9b48      	ldr	r3, [sp, #288]	; 0x120
9001242c:	ad08      	add	r5, sp, #32
9001242e:	9271      	str	r2, [sp, #452]	; 0x1c4
90012430:	aa5c      	add	r2, sp, #368	; 0x170
90012432:	936c      	str	r3, [sp, #432]	; 0x1b0
90012434:	9b44      	ldr	r3, [sp, #272]	; 0x110
90012436:	936d      	str	r3, [sp, #436]	; 0x1b4
90012438:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001243a:	936e      	str	r3, [sp, #440]	; 0x1b8
9001243c:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
9001243e:	e9cd 3b6f 	strd	r3, fp, [sp, #444]	; 0x1bc
90012442:	9b41      	ldr	r3, [sp, #260]	; 0x104
90012444:	9372      	str	r3, [sp, #456]	; 0x1c8
90012446:	9b43      	ldr	r3, [sp, #268]	; 0x10c
90012448:	9373      	str	r3, [sp, #460]	; 0x1cc
9001244a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9001244c:	f88d 3164 	strb.w	r3, [sp, #356]	; 0x164
90012450:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90012452:	f88d 3165 	strb.w	r3, [sp, #357]	; 0x165
90012456:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
90012458:	f88d 3166 	strb.w	r3, [sp, #358]	; 0x166
9001245c:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
9001245e:	f88d 3167 	strb.w	r3, [sp, #359]	; 0x167
90012462:	9b38      	ldr	r3, [sp, #224]	; 0xe0
90012464:	f88d 3154 	strb.w	r3, [sp, #340]	; 0x154
90012468:	9b39      	ldr	r3, [sp, #228]	; 0xe4
9001246a:	f88d 3155 	strb.w	r3, [sp, #341]	; 0x155
9001246e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90012470:	f88d 3156 	strb.w	r3, [sp, #342]	; 0x156
90012474:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90012476:	f88d 3157 	strb.w	r3, [sp, #343]	; 0x157
9001247a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001247c:	9312      	str	r3, [sp, #72]	; 0x48
9001247e:	9b55      	ldr	r3, [sp, #340]	; 0x154
90012480:	9311      	str	r3, [sp, #68]	; 0x44
90012482:	9b7b      	ldr	r3, [sp, #492]	; 0x1ec
90012484:	9310      	str	r3, [sp, #64]	; 0x40
90012486:	9b59      	ldr	r3, [sp, #356]	; 0x164
90012488:	930f      	str	r3, [sp, #60]	; 0x3c
9001248a:	9b51      	ldr	r3, [sp, #324]	; 0x144
9001248c:	930e      	str	r3, [sp, #56]	; 0x38
9001248e:	ab0c      	add	r3, sp, #48	; 0x30
90012490:	e912 0003 	ldmdb	r2, {r0, r1}
90012494:	e883 0003 	stmia.w	r3, {r0, r1}
90012498:	ab70      	add	r3, sp, #448	; 0x1c0
9001249a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001249c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
900124a0:	ab6c      	add	r3, sp, #432	; 0x1b0
900124a2:	ad04      	add	r5, sp, #16
900124a4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900124a6:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
900124aa:	ab68      	add	r3, sp, #416	; 0x1a0
900124ac:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900124ae:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
900124b2:	464b      	mov	r3, r9
900124b4:	4642      	mov	r2, r8
900124b6:	ee18 1a90 	vmov	r1, s17
900124ba:	ee18 0a10 	vmov	r0, s16
900124be:	f7fd fec3 	bl	90010248 <EwTileBitmap>
900124c2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
900124c4:	1b1c      	subs	r4, r3, r4
900124c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
900124c8:	2b00      	cmp	r3, #0
900124ca:	d04f      	beq.n	9001256c <EwDrawBitmapFrame+0x874>
900124cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
900124ce:	2b00      	cmp	r3, #0
900124d0:	d04c      	beq.n	9001256c <EwDrawBitmapFrame+0x874>
900124d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900124d4:	aa5c      	add	r2, sp, #368	; 0x170
900124d6:	ad08      	add	r5, sp, #32
900124d8:	936c      	str	r3, [sp, #432]	; 0x1b0
900124da:	9b44      	ldr	r3, [sp, #272]	; 0x110
900124dc:	e9cd 346d 	strd	r3, r4, [sp, #436]	; 0x1b4
900124e0:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
900124e2:	936f      	str	r3, [sp, #444]	; 0x1bc
900124e4:	9b40      	ldr	r3, [sp, #256]	; 0x100
900124e6:	9370      	str	r3, [sp, #448]	; 0x1c0
900124e8:	9b42      	ldr	r3, [sp, #264]	; 0x108
900124ea:	9371      	str	r3, [sp, #452]	; 0x1c4
900124ec:	9b3b      	ldr	r3, [sp, #236]	; 0xec
900124ee:	9372      	str	r3, [sp, #456]	; 0x1c8
900124f0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
900124f2:	9373      	str	r3, [sp, #460]	; 0x1cc
900124f4:	9b22      	ldr	r3, [sp, #136]	; 0x88
900124f6:	f88d 3160 	strb.w	r3, [sp, #352]	; 0x160
900124fa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900124fc:	f88d 3161 	strb.w	r3, [sp, #353]	; 0x161
90012500:	9b24      	ldr	r3, [sp, #144]	; 0x90
90012502:	f88d 3162 	strb.w	r3, [sp, #354]	; 0x162
90012506:	9b25      	ldr	r3, [sp, #148]	; 0x94
90012508:	f88d 3163 	strb.w	r3, [sp, #355]	; 0x163
9001250c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001250e:	f88d 3150 	strb.w	r3, [sp, #336]	; 0x150
90012512:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90012514:	f88d 3151 	strb.w	r3, [sp, #337]	; 0x151
90012518:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001251a:	f88d 3152 	strb.w	r3, [sp, #338]	; 0x152
9001251e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90012520:	f88d 3153 	strb.w	r3, [sp, #339]	; 0x153
90012524:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90012526:	9312      	str	r3, [sp, #72]	; 0x48
90012528:	9b7c      	ldr	r3, [sp, #496]	; 0x1f0
9001252a:	9311      	str	r3, [sp, #68]	; 0x44
9001252c:	9b54      	ldr	r3, [sp, #336]	; 0x150
9001252e:	9310      	str	r3, [sp, #64]	; 0x40
90012530:	9b50      	ldr	r3, [sp, #320]	; 0x140
90012532:	930f      	str	r3, [sp, #60]	; 0x3c
90012534:	9b58      	ldr	r3, [sp, #352]	; 0x160
90012536:	930e      	str	r3, [sp, #56]	; 0x38
90012538:	ab0c      	add	r3, sp, #48	; 0x30
9001253a:	e912 0003 	ldmdb	r2, {r0, r1}
9001253e:	e883 0003 	stmia.w	r3, {r0, r1}
90012542:	ab70      	add	r3, sp, #448	; 0x1c0
90012544:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012546:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9001254a:	ab6c      	add	r3, sp, #432	; 0x1b0
9001254c:	ad04      	add	r5, sp, #16
9001254e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012550:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90012554:	ab68      	add	r3, sp, #416	; 0x1a0
90012556:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012558:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
9001255c:	464b      	mov	r3, r9
9001255e:	4642      	mov	r2, r8
90012560:	ee18 1a90 	vmov	r1, s17
90012564:	ee18 0a10 	vmov	r0, s16
90012568:	f7fd fe6e 	bl	90010248 <EwTileBitmap>
9001256c:	9a46      	ldr	r2, [sp, #280]	; 0x118
9001256e:	9b42      	ldr	r3, [sp, #264]	; 0x108
90012570:	9918      	ldr	r1, [sp, #96]	; 0x60
90012572:	1a9b      	subs	r3, r3, r2
90012574:	9a47      	ldr	r2, [sp, #284]	; 0x11c
90012576:	9344      	str	r3, [sp, #272]	; 0x110
90012578:	9b43      	ldr	r3, [sp, #268]	; 0x10c
9001257a:	1bdd      	subs	r5, r3, r7
9001257c:	9b45      	ldr	r3, [sp, #276]	; 0x114
9001257e:	935b      	str	r3, [sp, #364]	; 0x16c
90012580:	9b16      	ldr	r3, [sp, #88]	; 0x58
90012582:	2900      	cmp	r1, #0
90012584:	bf18      	it	ne
90012586:	4613      	movne	r3, r2
90012588:	9316      	str	r3, [sp, #88]	; 0x58
9001258a:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001258c:	b113      	cbz	r3, 90012594 <EwDrawBitmapFrame+0x89c>
9001258e:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
90012590:	1bdb      	subs	r3, r3, r7
90012592:	933a      	str	r3, [sp, #232]	; 0xe8
90012594:	9b26      	ldr	r3, [sp, #152]	; 0x98
90012596:	2b00      	cmp	r3, #0
90012598:	d04b      	beq.n	90012632 <EwDrawBitmapFrame+0x93a>
9001259a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001259c:	aa5c      	add	r2, sp, #368	; 0x170
9001259e:	936c      	str	r3, [sp, #432]	; 0x1b0
900125a0:	9b16      	ldr	r3, [sp, #88]	; 0x58
900125a2:	e9cd 346d 	strd	r3, r4, [sp, #436]	; 0x1b4
900125a6:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
900125a8:	ac08      	add	r4, sp, #32
900125aa:	936f      	str	r3, [sp, #444]	; 0x1bc
900125ac:	9b40      	ldr	r3, [sp, #256]	; 0x100
900125ae:	9370      	str	r3, [sp, #448]	; 0x1c0
900125b0:	9b44      	ldr	r3, [sp, #272]	; 0x110
900125b2:	9371      	str	r3, [sp, #452]	; 0x1c4
900125b4:	9b3b      	ldr	r3, [sp, #236]	; 0xec
900125b6:	e9cd 3572 	strd	r3, r5, [sp, #456]	; 0x1c8
900125ba:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900125bc:	f88d 3158 	strb.w	r3, [sp, #344]	; 0x158
900125c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900125c2:	f88d 3159 	strb.w	r3, [sp, #345]	; 0x159
900125c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
900125c8:	f88d 315a 	strb.w	r3, [sp, #346]	; 0x15a
900125cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900125ce:	f88d 315b 	strb.w	r3, [sp, #347]	; 0x15b
900125d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
900125d4:	f88d 3160 	strb.w	r3, [sp, #352]	; 0x160
900125d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900125da:	f88d 3161 	strb.w	r3, [sp, #353]	; 0x161
900125de:	9b24      	ldr	r3, [sp, #144]	; 0x90
900125e0:	f88d 3162 	strb.w	r3, [sp, #354]	; 0x162
900125e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900125e6:	f88d 3163 	strb.w	r3, [sp, #355]	; 0x163
900125ea:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
900125ec:	9312      	str	r3, [sp, #72]	; 0x48
900125ee:	9b58      	ldr	r3, [sp, #352]	; 0x160
900125f0:	9311      	str	r3, [sp, #68]	; 0x44
900125f2:	9b50      	ldr	r3, [sp, #320]	; 0x140
900125f4:	9310      	str	r3, [sp, #64]	; 0x40
900125f6:	9b4e      	ldr	r3, [sp, #312]	; 0x138
900125f8:	930f      	str	r3, [sp, #60]	; 0x3c
900125fa:	9b56      	ldr	r3, [sp, #344]	; 0x158
900125fc:	930e      	str	r3, [sp, #56]	; 0x38
900125fe:	ab0c      	add	r3, sp, #48	; 0x30
90012600:	e912 0003 	ldmdb	r2, {r0, r1}
90012604:	e883 0003 	stmia.w	r3, {r0, r1}
90012608:	ab70      	add	r3, sp, #448	; 0x1c0
9001260a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001260c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90012610:	ab6c      	add	r3, sp, #432	; 0x1b0
90012612:	ac04      	add	r4, sp, #16
90012614:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012616:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001261a:	ab68      	add	r3, sp, #416	; 0x1a0
9001261c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001261e:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
90012622:	464b      	mov	r3, r9
90012624:	4642      	mov	r2, r8
90012626:	ee18 1a90 	vmov	r1, s17
9001262a:	ee18 0a10 	vmov	r0, s16
9001262e:	f7fd fe0b 	bl	90010248 <EwTileBitmap>
90012632:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012634:	2b00      	cmp	r3, #0
90012636:	d04b      	beq.n	900126d0 <EwDrawBitmapFrame+0x9d8>
90012638:	9b48      	ldr	r3, [sp, #288]	; 0x120
9001263a:	aa5c      	add	r2, sp, #368	; 0x170
9001263c:	ac08      	add	r4, sp, #32
9001263e:	936c      	str	r3, [sp, #432]	; 0x1b0
90012640:	9b16      	ldr	r3, [sp, #88]	; 0x58
90012642:	936d      	str	r3, [sp, #436]	; 0x1b4
90012644:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90012646:	936e      	str	r3, [sp, #440]	; 0x1b8
90012648:	9b3a      	ldr	r3, [sp, #232]	; 0xe8
9001264a:	e9cd 3b6f 	strd	r3, fp, [sp, #444]	; 0x1bc
9001264e:	9b44      	ldr	r3, [sp, #272]	; 0x110
90012650:	9371      	str	r3, [sp, #452]	; 0x1c4
90012652:	9b41      	ldr	r3, [sp, #260]	; 0x104
90012654:	e9cd 3572 	strd	r3, r5, [sp, #456]	; 0x1c8
90012658:	9b32      	ldr	r3, [sp, #200]	; 0xc8
9001265a:	f88d 315c 	strb.w	r3, [sp, #348]	; 0x15c
9001265e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90012660:	f88d 315d 	strb.w	r3, [sp, #349]	; 0x15d
90012664:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
90012666:	f88d 315e 	strb.w	r3, [sp, #350]	; 0x15e
9001266a:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
9001266c:	f88d 315f 	strb.w	r3, [sp, #351]	; 0x15f
90012670:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90012672:	f88d 3164 	strb.w	r3, [sp, #356]	; 0x164
90012676:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90012678:	f88d 3165 	strb.w	r3, [sp, #357]	; 0x165
9001267c:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
9001267e:	f88d 3166 	strb.w	r3, [sp, #358]	; 0x166
90012682:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
90012684:	f88d 3167 	strb.w	r3, [sp, #359]	; 0x167
90012688:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001268a:	9312      	str	r3, [sp, #72]	; 0x48
9001268c:	9b51      	ldr	r3, [sp, #324]	; 0x144
9001268e:	9311      	str	r3, [sp, #68]	; 0x44
90012690:	9b59      	ldr	r3, [sp, #356]	; 0x164
90012692:	9310      	str	r3, [sp, #64]	; 0x40
90012694:	9b57      	ldr	r3, [sp, #348]	; 0x15c
90012696:	930f      	str	r3, [sp, #60]	; 0x3c
90012698:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
9001269a:	930e      	str	r3, [sp, #56]	; 0x38
9001269c:	ab0c      	add	r3, sp, #48	; 0x30
9001269e:	e912 0003 	ldmdb	r2, {r0, r1}
900126a2:	e883 0003 	stmia.w	r3, {r0, r1}
900126a6:	ab70      	add	r3, sp, #448	; 0x1c0
900126a8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900126aa:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900126ae:	ab6c      	add	r3, sp, #432	; 0x1b0
900126b0:	ac04      	add	r4, sp, #16
900126b2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900126b4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900126b8:	ab68      	add	r3, sp, #416	; 0x1a0
900126ba:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900126bc:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
900126c0:	464b      	mov	r3, r9
900126c2:	4642      	mov	r2, r8
900126c4:	ee18 1a90 	vmov	r1, s17
900126c8:	ee18 0a10 	vmov	r0, s16
900126cc:	f7fd fdbc 	bl	90010248 <EwTileBitmap>
900126d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900126d2:	b113      	cbz	r3, 900126da <EwDrawBitmapFrame+0x9e2>
900126d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
900126d6:	1bdb      	subs	r3, r3, r7
900126d8:	9316      	str	r3, [sp, #88]	; 0x58
900126da:	9b16      	ldr	r3, [sp, #88]	; 0x58
900126dc:	9a4b      	ldr	r2, [sp, #300]	; 0x12c
900126de:	18fb      	adds	r3, r7, r3
900126e0:	9926      	ldr	r1, [sp, #152]	; 0x98
900126e2:	931e      	str	r3, [sp, #120]	; 0x78
900126e4:	9b4a      	ldr	r3, [sp, #296]	; 0x128
900126e6:	ebab 0b03 	sub.w	fp, fp, r3
900126ea:	9b41      	ldr	r3, [sp, #260]	; 0x104
900126ec:	1b9c      	subs	r4, r3, r6
900126ee:	9b49      	ldr	r3, [sp, #292]	; 0x124
900126f0:	935a      	str	r3, [sp, #360]	; 0x168
900126f2:	2300      	movs	r3, #0
900126f4:	935b      	str	r3, [sp, #364]	; 0x16c
900126f6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900126f8:	2900      	cmp	r1, #0
900126fa:	bf18      	it	ne
900126fc:	4613      	movne	r3, r2
900126fe:	9317      	str	r3, [sp, #92]	; 0x5c
90012700:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012702:	b113      	cbz	r3, 9001270a <EwDrawBitmapFrame+0xa12>
90012704:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90012706:	1b9b      	subs	r3, r3, r6
90012708:	9331      	str	r3, [sp, #196]	; 0xc4
9001270a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001270c:	2b00      	cmp	r3, #0
9001270e:	d04f      	beq.n	900127b0 <EwDrawBitmapFrame+0xab8>
90012710:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90012712:	aa5c      	add	r2, sp, #368	; 0x170
90012714:	f10d 0c20 	add.w	ip, sp, #32
90012718:	936c      	str	r3, [sp, #432]	; 0x1b0
9001271a:	9b16      	ldr	r3, [sp, #88]	; 0x58
9001271c:	936d      	str	r3, [sp, #436]	; 0x1b4
9001271e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90012720:	936e      	str	r3, [sp, #440]	; 0x1b8
90012722:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90012724:	e9cd 3b6f 	strd	r3, fp, [sp, #444]	; 0x1bc
90012728:	9b44      	ldr	r3, [sp, #272]	; 0x110
9001272a:	1bdb      	subs	r3, r3, r7
9001272c:	e9cd 3471 	strd	r3, r4, [sp, #452]	; 0x1c4
90012730:	9b46      	ldr	r3, [sp, #280]	; 0x118
90012732:	1aeb      	subs	r3, r5, r3
90012734:	9373      	str	r3, [sp, #460]	; 0x1cc
90012736:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90012738:	f88d 3148 	strb.w	r3, [sp, #328]	; 0x148
9001273c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001273e:	f88d 3149 	strb.w	r3, [sp, #329]	; 0x149
90012742:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90012744:	f88d 314a 	strb.w	r3, [sp, #330]	; 0x14a
90012748:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001274a:	f88d 314b 	strb.w	r3, [sp, #331]	; 0x14b
9001274e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
90012750:	f88d 314c 	strb.w	r3, [sp, #332]	; 0x14c
90012754:	9b37      	ldr	r3, [sp, #220]	; 0xdc
90012756:	f88d 314d 	strb.w	r3, [sp, #333]	; 0x14d
9001275a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001275c:	f88d 314e 	strb.w	r3, [sp, #334]	; 0x14e
90012760:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90012762:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
90012766:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90012768:	9312      	str	r3, [sp, #72]	; 0x48
9001276a:	9b4e      	ldr	r3, [sp, #312]	; 0x138
9001276c:	9311      	str	r3, [sp, #68]	; 0x44
9001276e:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
90012770:	9310      	str	r3, [sp, #64]	; 0x40
90012772:	9b53      	ldr	r3, [sp, #332]	; 0x14c
90012774:	930f      	str	r3, [sp, #60]	; 0x3c
90012776:	9b52      	ldr	r3, [sp, #328]	; 0x148
90012778:	930e      	str	r3, [sp, #56]	; 0x38
9001277a:	ab0c      	add	r3, sp, #48	; 0x30
9001277c:	e912 0003 	ldmdb	r2, {r0, r1}
90012780:	e883 0003 	stmia.w	r3, {r0, r1}
90012784:	ab70      	add	r3, sp, #448	; 0x1c0
90012786:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012788:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
9001278c:	ab6c      	add	r3, sp, #432	; 0x1b0
9001278e:	f10d 0c10 	add.w	ip, sp, #16
90012792:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012794:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
90012798:	ab68      	add	r3, sp, #416	; 0x1a0
9001279a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001279c:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
900127a0:	464b      	mov	r3, r9
900127a2:	4642      	mov	r2, r8
900127a4:	ee18 1a90 	vmov	r1, s17
900127a8:	ee18 0a10 	vmov	r0, s16
900127ac:	f7fd fd4c 	bl	90010248 <EwTileBitmap>
900127b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
900127b2:	449a      	add	sl, r3
900127b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900127b6:	2b00      	cmp	r3, #0
900127b8:	d04f      	beq.n	9001285a <EwDrawBitmapFrame+0xb62>
900127ba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900127bc:	f10d 0c20 	add.w	ip, sp, #32
900127c0:	9a16      	ldr	r2, [sp, #88]	; 0x58
900127c2:	936c      	str	r3, [sp, #432]	; 0x1b0
900127c4:	9b4c      	ldr	r3, [sp, #304]	; 0x130
900127c6:	f8cd b1c0 	str.w	fp, [sp, #448]	; 0x1c0
900127ca:	4413      	add	r3, r2
900127cc:	aa5c      	add	r2, sp, #368	; 0x170
900127ce:	936d      	str	r3, [sp, #436]	; 0x1b4
900127d0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
900127d2:	e9cd 3a6e 	strd	r3, sl, [sp, #440]	; 0x1b8
900127d6:	9b42      	ldr	r3, [sp, #264]	; 0x108
900127d8:	e9cd 3471 	strd	r3, r4, [sp, #452]	; 0x1c4
900127dc:	9b43      	ldr	r3, [sp, #268]	; 0x10c
900127de:	9373      	str	r3, [sp, #460]	; 0x1cc
900127e0:	9b38      	ldr	r3, [sp, #224]	; 0xe0
900127e2:	f88d 3154 	strb.w	r3, [sp, #340]	; 0x154
900127e6:	9b39      	ldr	r3, [sp, #228]	; 0xe4
900127e8:	f88d 3155 	strb.w	r3, [sp, #341]	; 0x155
900127ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
900127ee:	f88d 3156 	strb.w	r3, [sp, #342]	; 0x156
900127f2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900127f4:	f88d 3157 	strb.w	r3, [sp, #343]	; 0x157
900127f8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900127fa:	f88d 3150 	strb.w	r3, [sp, #336]	; 0x150
900127fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90012800:	f88d 3151 	strb.w	r3, [sp, #337]	; 0x151
90012804:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90012806:	f88d 3152 	strb.w	r3, [sp, #338]	; 0x152
9001280a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001280c:	f88d 3153 	strb.w	r3, [sp, #339]	; 0x153
90012810:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90012812:	9312      	str	r3, [sp, #72]	; 0x48
90012814:	9b54      	ldr	r3, [sp, #336]	; 0x150
90012816:	9311      	str	r3, [sp, #68]	; 0x44
90012818:	9b55      	ldr	r3, [sp, #340]	; 0x154
9001281a:	9310      	str	r3, [sp, #64]	; 0x40
9001281c:	9b51      	ldr	r3, [sp, #324]	; 0x144
9001281e:	930f      	str	r3, [sp, #60]	; 0x3c
90012820:	9b50      	ldr	r3, [sp, #320]	; 0x140
90012822:	930e      	str	r3, [sp, #56]	; 0x38
90012824:	ab0c      	add	r3, sp, #48	; 0x30
90012826:	e912 0003 	ldmdb	r2, {r0, r1}
9001282a:	e883 0003 	stmia.w	r3, {r0, r1}
9001282e:	ab70      	add	r3, sp, #448	; 0x1c0
90012830:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012832:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
90012836:	ab6c      	add	r3, sp, #432	; 0x1b0
90012838:	f10d 0c10 	add.w	ip, sp, #16
9001283c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001283e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
90012842:	ab68      	add	r3, sp, #416	; 0x1a0
90012844:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90012846:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
9001284a:	464b      	mov	r3, r9
9001284c:	4642      	mov	r2, r8
9001284e:	ee18 1a90 	vmov	r1, s17
90012852:	ee18 0a10 	vmov	r0, s16
90012856:	f7fd fcf7 	bl	90010248 <EwTileBitmap>
9001285a:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001285c:	b113      	cbz	r3, 90012864 <EwDrawBitmapFrame+0xb6c>
9001285e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90012860:	1b9b      	subs	r3, r3, r6
90012862:	9317      	str	r3, [sp, #92]	; 0x5c
90012864:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90012866:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90012868:	4413      	add	r3, r2
9001286a:	9a45      	ldr	r2, [sp, #276]	; 0x114
9001286c:	925b      	str	r2, [sp, #364]	; 0x16c
9001286e:	9a26      	ldr	r2, [sp, #152]	; 0x98
90012870:	b112      	cbz	r2, 90012878 <EwDrawBitmapFrame+0xb80>
90012872:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90012874:	4432      	add	r2, r6
90012876:	9217      	str	r2, [sp, #92]	; 0x5c
90012878:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001287a:	991e      	ldr	r1, [sp, #120]	; 0x78
9001287c:	9818      	ldr	r0, [sp, #96]	; 0x60
9001287e:	2800      	cmp	r0, #0
90012880:	bf18      	it	ne
90012882:	460a      	movne	r2, r1
90012884:	9216      	str	r2, [sp, #88]	; 0x58
90012886:	9a15      	ldr	r2, [sp, #84]	; 0x54
90012888:	b102      	cbz	r2, 9001288c <EwDrawBitmapFrame+0xb94>
9001288a:	1b9b      	subs	r3, r3, r6
9001288c:	9a19      	ldr	r2, [sp, #100]	; 0x64
9001288e:	b10a      	cbz	r2, 90012894 <EwDrawBitmapFrame+0xb9c>
90012890:	ebaa 0a07 	sub.w	sl, sl, r7
90012894:	9a4d      	ldr	r2, [sp, #308]	; 0x134
90012896:	2a00      	cmp	r2, #0
90012898:	f43f ab3a 	beq.w	90011f10 <EwDrawBitmapFrame+0x218>
9001289c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001289e:	9573      	str	r5, [sp, #460]	; 0x1cc
900128a0:	926c      	str	r2, [sp, #432]	; 0x1b0
900128a2:	9a16      	ldr	r2, [sp, #88]	; 0x58
900128a4:	e9cd 236d 	strd	r2, r3, [sp, #436]	; 0x1b4
900128a8:	9b44      	ldr	r3, [sp, #272]	; 0x110
900128aa:	aa5c      	add	r2, sp, #368	; 0x170
900128ac:	e9cd 3471 	strd	r3, r4, [sp, #452]	; 0x1c4
900128b0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
900128b2:	937a      	str	r3, [sp, #488]	; 0x1e8
900128b4:	9b50      	ldr	r3, [sp, #320]	; 0x140
900128b6:	9379      	str	r3, [sp, #484]	; 0x1e4
900128b8:	9b51      	ldr	r3, [sp, #324]	; 0x144
900128ba:	9378      	str	r3, [sp, #480]	; 0x1e0
900128bc:	9b4f      	ldr	r3, [sp, #316]	; 0x13c
900128be:	9377      	str	r3, [sp, #476]	; 0x1dc
900128c0:	9b4e      	ldr	r3, [sp, #312]	; 0x138
900128c2:	9376      	str	r3, [sp, #472]	; 0x1d8
900128c4:	ab74      	add	r3, sp, #464	; 0x1d0
900128c6:	e912 0003 	ldmdb	r2, {r0, r1}
900128ca:	e9cd ab6f 	strd	sl, fp, [sp, #444]	; 0x1bc
900128ce:	4642      	mov	r2, r8
900128d0:	e883 0003 	stmia.w	r3, {r0, r1}
900128d4:	464b      	mov	r3, r9
900128d6:	ee18 1a90 	vmov	r1, s17
900128da:	ee18 0a10 	vmov	r0, s16
900128de:	b05d      	add	sp, #372	; 0x174
900128e0:	ecbd 8b02 	vpop	{d8}
900128e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900128e8:	f7fd bcae 	b.w	90010248 <EwTileBitmap>
900128ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
900128ee:	e4d5      	b.n	9001229c <EwDrawBitmapFrame+0x5a4>
900128f0:	2300      	movs	r3, #0
900128f2:	e4d3      	b.n	9001229c <EwDrawBitmapFrame+0x5a4>
900128f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
900128f6:	2b00      	cmp	r3, #0
900128f8:	f43f ac6d 	beq.w	900121d6 <EwDrawBitmapFrame+0x4de>
900128fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
900128fe:	2b00      	cmp	r3, #0
90012900:	f43f abfd 	beq.w	900120fe <EwDrawBitmapFrame+0x406>
90012904:	f7ff bbda 	b.w	900120bc <EwDrawBitmapFrame+0x3c4>
90012908:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001290a:	2b00      	cmp	r3, #0
9001290c:	f47f ac38 	bne.w	90012180 <EwDrawBitmapFrame+0x488>
90012910:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012912:	2b00      	cmp	r3, #0
90012914:	f47f aba0 	bne.w	90012058 <EwDrawBitmapFrame+0x360>
90012918:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001291a:	2b00      	cmp	r3, #0
9001291c:	f47f ac4d 	bne.w	900121ba <EwDrawBitmapFrame+0x4c2>
90012920:	9b15      	ldr	r3, [sp, #84]	; 0x54
90012922:	2b00      	cmp	r3, #0
90012924:	f47f abbb 	bne.w	9001209e <EwDrawBitmapFrame+0x3a6>
90012928:	e40b      	b.n	90012142 <EwDrawBitmapFrame+0x44a>
9001292a:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001292c:	2b00      	cmp	r3, #0
9001292e:	f47f aba2 	bne.w	90012076 <EwDrawBitmapFrame+0x37e>
90012932:	e435      	b.n	900121a0 <EwDrawBitmapFrame+0x4a8>
90012934:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90012936:	429d      	cmp	r5, r3
90012938:	d103      	bne.n	90012942 <EwDrawBitmapFrame+0xc4a>
9001293a:	4284      	cmp	r4, r0
9001293c:	d101      	bne.n	90012942 <EwDrawBitmapFrame+0xc4a>
9001293e:	42a5      	cmp	r5, r4
90012940:	d01b      	beq.n	9001297a <EwDrawBitmapFrame+0xc82>
90012942:	9b25      	ldr	r3, [sp, #148]	; 0x94
90012944:	932e      	str	r3, [sp, #184]	; 0xb8
90012946:	9b24      	ldr	r3, [sp, #144]	; 0x90
90012948:	932d      	str	r3, [sp, #180]	; 0xb4
9001294a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001294c:	932c      	str	r3, [sp, #176]	; 0xb0
9001294e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90012950:	932b      	str	r3, [sp, #172]	; 0xac
90012952:	9b21      	ldr	r3, [sp, #132]	; 0x84
90012954:	932a      	str	r3, [sp, #168]	; 0xa8
90012956:	9b20      	ldr	r3, [sp, #128]	; 0x80
90012958:	9329      	str	r3, [sp, #164]	; 0xa4
9001295a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001295c:	9328      	str	r3, [sp, #160]	; 0xa0
9001295e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90012960:	9327      	str	r3, [sp, #156]	; 0x9c
90012962:	f7ff bafa 	b.w	90011f5a <EwDrawBitmapFrame+0x262>
90012966:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90012968:	429d      	cmp	r5, r3
9001296a:	f47f aad6 	bne.w	90011f1a <EwDrawBitmapFrame+0x222>
9001296e:	4284      	cmp	r4, r0
90012970:	f47f aad3 	bne.w	90011f1a <EwDrawBitmapFrame+0x222>
90012974:	42a5      	cmp	r5, r4
90012976:	f47f aad0 	bne.w	90011f1a <EwDrawBitmapFrame+0x222>
9001297a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001297c:	933f      	str	r3, [sp, #252]	; 0xfc
9001297e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90012980:	933e      	str	r3, [sp, #248]	; 0xf8
90012982:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90012984:	933d      	str	r3, [sp, #244]	; 0xf4
90012986:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90012988:	933c      	str	r3, [sp, #240]	; 0xf0
9001298a:	9b35      	ldr	r3, [sp, #212]	; 0xd4
9001298c:	9339      	str	r3, [sp, #228]	; 0xe4
9001298e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90012990:	9338      	str	r3, [sp, #224]	; 0xe0
90012992:	9b25      	ldr	r3, [sp, #148]	; 0x94
90012994:	932e      	str	r3, [sp, #184]	; 0xb8
90012996:	9b24      	ldr	r3, [sp, #144]	; 0x90
90012998:	932d      	str	r3, [sp, #180]	; 0xb4
9001299a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001299c:	932c      	str	r3, [sp, #176]	; 0xb0
9001299e:	9b22      	ldr	r3, [sp, #136]	; 0x88
900129a0:	932b      	str	r3, [sp, #172]	; 0xac
900129a2:	9b33      	ldr	r3, [sp, #204]	; 0xcc
900129a4:	9337      	str	r3, [sp, #220]	; 0xdc
900129a6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900129a8:	9336      	str	r3, [sp, #216]	; 0xd8
900129aa:	9b21      	ldr	r3, [sp, #132]	; 0x84
900129ac:	932a      	str	r3, [sp, #168]	; 0xa8
900129ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
900129b0:	9329      	str	r3, [sp, #164]	; 0xa4
900129b2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900129b4:	9328      	str	r3, [sp, #160]	; 0xa0
900129b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900129b8:	9327      	str	r3, [sp, #156]	; 0x9c
900129ba:	e45a      	b.n	90012272 <EwDrawBitmapFrame+0x57a>
900129bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
900129be:	2b00      	cmp	r3, #0
900129c0:	f47f ab7c 	bne.w	900120bc <EwDrawBitmapFrame+0x3c4>
900129c4:	f7ff bbbd 	b.w	90012142 <EwDrawBitmapFrame+0x44a>

900129c8 <EwIndexToColor>:
900129c8:	b082      	sub	sp, #8
900129ca:	2000      	movs	r0, #0
900129cc:	b002      	add	sp, #8
900129ce:	4770      	bx	lr

900129d0 <EwColorToIndex>:
900129d0:	b082      	sub	sp, #8
900129d2:	2000      	movs	r0, #0
900129d4:	b002      	add	sp, #8
900129d6:	4770      	bx	lr

900129d8 <EwAllocUserColor>:
900129d8:	b082      	sub	sp, #8
900129da:	2000      	movs	r0, #0
900129dc:	b002      	add	sp, #8
900129de:	4770      	bx	lr

900129e0 <EwFreeUserColor>:
900129e0:	4770      	bx	lr

900129e2 <EwSetUserColor>:
900129e2:	b082      	sub	sp, #8
900129e4:	b002      	add	sp, #8
900129e6:	4770      	bx	lr

900129e8 <EwFindUserColor>:
900129e8:	b082      	sub	sp, #8
900129ea:	2000      	movs	r0, #0
900129ec:	b002      	add	sp, #8
900129ee:	4770      	bx	lr

900129f0 <EwGetOverlayArea>:
900129f0:	4b20      	ldr	r3, [pc, #128]	; (90012a74 <EwGetOverlayArea+0x84>)
900129f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
900129f4:	4615      	mov	r5, r2
900129f6:	681a      	ldr	r2, [r3, #0]
900129f8:	4b1f      	ldr	r3, [pc, #124]	; (90012a78 <EwGetOverlayArea+0x88>)
900129fa:	4604      	mov	r4, r0
900129fc:	460e      	mov	r6, r1
900129fe:	ea41 0705 	orr.w	r7, r1, r5
90012a02:	429a      	cmp	r2, r3
90012a04:	d103      	bne.n	90012a0e <EwGetOverlayArea+0x1e>
90012a06:	2f00      	cmp	r7, #0
90012a08:	d02d      	beq.n	90012a66 <EwGetOverlayArea+0x76>
90012a0a:	2300      	movs	r3, #0
90012a0c:	e014      	b.n	90012a38 <EwGetOverlayArea+0x48>
90012a0e:	f014 f977 	bl	90026d00 <EwGetTicks>
90012a12:	4b1a      	ldr	r3, [pc, #104]	; (90012a7c <EwGetOverlayArea+0x8c>)
90012a14:	681a      	ldr	r2, [r3, #0]
90012a16:	4290      	cmp	r0, r2
90012a18:	d803      	bhi.n	90012a22 <EwGetOverlayArea+0x32>
90012a1a:	6c59      	ldr	r1, [r3, #68]	; 0x44
90012a1c:	685a      	ldr	r2, [r3, #4]
90012a1e:	4291      	cmp	r1, r2
90012a20:	d0f1      	beq.n	90012a06 <EwGetOverlayArea+0x16>
90012a22:	b17f      	cbz	r7, 90012a44 <EwGetOverlayArea+0x54>
90012a24:	7e1a      	ldrb	r2, [r3, #24]
90012a26:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
90012a2a:	685a      	ldr	r2, [r3, #4]
90012a2c:	645a      	str	r2, [r3, #68]	; 0x44
90012a2e:	691a      	ldr	r2, [r3, #16]
90012a30:	639a      	str	r2, [r3, #56]	; 0x38
90012a32:	695a      	ldr	r2, [r3, #20]
90012a34:	63da      	str	r2, [r3, #60]	; 0x3c
90012a36:	2301      	movs	r3, #1
90012a38:	4a10      	ldr	r2, [pc, #64]	; (90012a7c <EwGetOverlayArea+0x8c>)
90012a3a:	2100      	movs	r1, #0
90012a3c:	6351      	str	r1, [r2, #52]	; 0x34
90012a3e:	b186      	cbz	r6, 90012a62 <EwGetOverlayArea+0x72>
90012a40:	6c52      	ldr	r2, [r2, #68]	; 0x44
90012a42:	b16a      	cbz	r2, 90012a60 <EwGetOverlayArea+0x70>
90012a44:	4b0d      	ldr	r3, [pc, #52]	; (90012a7c <EwGetOverlayArea+0x8c>)
90012a46:	4620      	mov	r0, r4
90012a48:	e9d3 120e 	ldrd	r1, r2, [r3, #56]	; 0x38
90012a4c:	f102 0333 	add.w	r3, r2, #51	; 0x33
90012a50:	9300      	str	r3, [sp, #0]
90012a52:	f101 0390 	add.w	r3, r1, #144	; 0x90
90012a56:	f00b fe11 	bl	9001e67c <EwNewRect>
90012a5a:	4620      	mov	r0, r4
90012a5c:	b003      	add	sp, #12
90012a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012a60:	b10d      	cbz	r5, 90012a66 <EwGetOverlayArea+0x76>
90012a62:	2b00      	cmp	r3, #0
90012a64:	d1ee      	bne.n	90012a44 <EwGetOverlayArea+0x54>
90012a66:	2210      	movs	r2, #16
90012a68:	2100      	movs	r1, #0
90012a6a:	4620      	mov	r0, r4
90012a6c:	f01b faac 	bl	9002dfc8 <memset>
90012a70:	e7f3      	b.n	90012a5a <EwGetOverlayArea+0x6a>
90012a72:	bf00      	nop
90012a74:	20000000 	.word	0x20000000
90012a78:	9000ba81 	.word	0x9000ba81
90012a7c:	200000c8 	.word	0x200000c8

90012a80 <EwCanDiscardSurface>:
90012a80:	4a37      	ldr	r2, [pc, #220]	; (90012b60 <EwCanDiscardSurface+0xe0>)
90012a82:	4b38      	ldr	r3, [pc, #224]	; (90012b64 <EwCanDiscardSurface+0xe4>)
90012a84:	b5f0      	push	{r4, r5, r6, r7, lr}
90012a86:	4604      	mov	r4, r0
90012a88:	6b15      	ldr	r5, [r2, #48]	; 0x30
90012a8a:	6858      	ldr	r0, [r3, #4]
90012a8c:	4328      	orrs	r0, r5
90012a8e:	d012      	beq.n	90012ab6 <EwCanDiscardSurface+0x36>
90012a90:	68db      	ldr	r3, [r3, #12]
90012a92:	f8d2 60e4 	ldr.w	r6, [r2, #228]	; 0xe4
90012a96:	e9d2 7c37 	ldrd	r7, ip, [r2, #220]	; 0xdc
90012a9a:	433b      	orrs	r3, r7
90012a9c:	ea43 030c 	orr.w	r3, r3, ip
90012aa0:	ea53 0006 	orrs.w	r0, r3, r6
90012aa4:	d007      	beq.n	90012ab6 <EwCanDiscardSurface+0x36>
90012aa6:	6963      	ldr	r3, [r4, #20]
90012aa8:	b135      	cbz	r5, 90012ab8 <EwCanDiscardSurface+0x38>
90012aaa:	6958      	ldr	r0, [r3, #20]
90012aac:	2801      	cmp	r0, #1
90012aae:	dd3e      	ble.n	90012b2e <EwCanDiscardSurface+0xae>
90012ab0:	68d8      	ldr	r0, [r3, #12]
90012ab2:	2800      	cmp	r0, #0
90012ab4:	d150      	bne.n	90012b58 <EwCanDiscardSurface+0xd8>
90012ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012ab8:	b12f      	cbz	r7, 90012ac6 <EwCanDiscardSurface+0x46>
90012aba:	6958      	ldr	r0, [r3, #20]
90012abc:	2801      	cmp	r0, #1
90012abe:	dd36      	ble.n	90012b2e <EwCanDiscardSurface+0xae>
90012ac0:	68d8      	ldr	r0, [r3, #12]
90012ac2:	2800      	cmp	r0, #0
90012ac4:	d0f7      	beq.n	90012ab6 <EwCanDiscardSurface+0x36>
90012ac6:	f1bc 0f00 	cmp.w	ip, #0
90012aca:	d003      	beq.n	90012ad4 <EwCanDiscardSurface+0x54>
90012acc:	6b25      	ldr	r5, [r4, #48]	; 0x30
90012ace:	6a10      	ldr	r0, [r2, #32]
90012ad0:	4285      	cmp	r5, r0
90012ad2:	d02c      	beq.n	90012b2e <EwCanDiscardSurface+0xae>
90012ad4:	b136      	cbz	r6, 90012ae4 <EwCanDiscardSurface+0x64>
90012ad6:	6b25      	ldr	r5, [r4, #48]	; 0x30
90012ad8:	6a10      	ldr	r0, [r2, #32]
90012ada:	4285      	cmp	r5, r0
90012adc:	d027      	beq.n	90012b2e <EwCanDiscardSurface+0xae>
90012ade:	3801      	subs	r0, #1
90012ae0:	4285      	cmp	r5, r0
90012ae2:	d024      	beq.n	90012b2e <EwCanDiscardSurface+0xae>
90012ae4:	b9f1      	cbnz	r1, 90012b24 <EwCanDiscardSurface+0xa4>
90012ae6:	6958      	ldr	r0, [r3, #20]
90012ae8:	2801      	cmp	r0, #1
90012aea:	dd20      	ble.n	90012b2e <EwCanDiscardSurface+0xae>
90012aec:	68d8      	ldr	r0, [r3, #12]
90012aee:	2800      	cmp	r0, #0
90012af0:	d0e1      	beq.n	90012ab6 <EwCanDiscardSurface+0x36>
90012af2:	2100      	movs	r1, #0
90012af4:	691e      	ldr	r6, [r3, #16]
90012af6:	f04f 0c1c 	mov.w	ip, #28
90012afa:	468e      	mov	lr, r1
90012afc:	428e      	cmp	r6, r1
90012afe:	dc18      	bgt.n	90012b32 <EwCanDiscardSurface+0xb2>
90012b00:	2100      	movs	r1, #0
90012b02:	6a5d      	ldr	r5, [r3, #36]	; 0x24
90012b04:	460e      	mov	r6, r1
90012b06:	428d      	cmp	r5, r1
90012b08:	dc1d      	bgt.n	90012b46 <EwCanDiscardSurface+0xc6>
90012b0a:	f8d2 30e8 	ldr.w	r3, [r2, #232]	; 0xe8
90012b0e:	2001      	movs	r0, #1
90012b10:	f8d2 10ec 	ldr.w	r1, [r2, #236]	; 0xec
90012b14:	3301      	adds	r3, #1
90012b16:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
90012b1a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90012b1c:	440b      	add	r3, r1
90012b1e:	f8c2 30ec 	str.w	r3, [r2, #236]	; 0xec
90012b22:	e7c8      	b.n	90012ab6 <EwCanDiscardSurface+0x36>
90012b24:	2901      	cmp	r1, #1
90012b26:	d1e4      	bne.n	90012af2 <EwCanDiscardSurface+0x72>
90012b28:	6959      	ldr	r1, [r3, #20]
90012b2a:	2901      	cmp	r1, #1
90012b2c:	dce1      	bgt.n	90012af2 <EwCanDiscardSurface+0x72>
90012b2e:	2000      	movs	r0, #0
90012b30:	e7c1      	b.n	90012ab6 <EwCanDiscardSurface+0x36>
90012b32:	fb0c f001 	mul.w	r0, ip, r1
90012b36:	6a1d      	ldr	r5, [r3, #32]
90012b38:	3101      	adds	r1, #1
90012b3a:	582f      	ldr	r7, [r5, r0]
90012b3c:	42a7      	cmp	r7, r4
90012b3e:	bf08      	it	eq
90012b40:	f845 e000 	streq.w	lr, [r5, r0]
90012b44:	e7da      	b.n	90012afc <EwCanDiscardSurface+0x7c>
90012b46:	6a98      	ldr	r0, [r3, #40]	; 0x28
90012b48:	f850 7021 	ldr.w	r7, [r0, r1, lsl #2]
90012b4c:	42a7      	cmp	r7, r4
90012b4e:	bf08      	it	eq
90012b50:	f840 6021 	streq.w	r6, [r0, r1, lsl #2]
90012b54:	3101      	adds	r1, #1
90012b56:	e7d6      	b.n	90012b06 <EwCanDiscardSurface+0x86>
90012b58:	2f00      	cmp	r7, #0
90012b5a:	d1b1      	bne.n	90012ac0 <EwCanDiscardSurface+0x40>
90012b5c:	e7b3      	b.n	90012ac6 <EwCanDiscardSurface+0x46>
90012b5e:	bf00      	nop
90012b60:	200000c8 	.word	0x200000c8
90012b64:	20000000 	.word	0x20000000
90012b68:	b084      	sub	sp, #16
90012b6a:	9001      	str	r0, [sp, #4]
90012b6c:	0e00      	lsrs	r0, r0, #24
90012b6e:	fb01 0000 	mla	r0, r1, r0, r0
90012b72:	1200      	asrs	r0, r0, #8
90012b74:	f88d 0007 	strb.w	r0, [sp, #7]
90012b78:	2000      	movs	r0, #0
90012b7a:	9b01      	ldr	r3, [sp, #4]
90012b7c:	b2da      	uxtb	r2, r3
90012b7e:	f362 0007 	bfi	r0, r2, #0, #8
90012b82:	f3c3 2207 	ubfx	r2, r3, #8, #8
90012b86:	f362 200f 	bfi	r0, r2, #8, #8
90012b8a:	f3c3 4207 	ubfx	r2, r3, #16, #8
90012b8e:	0e1b      	lsrs	r3, r3, #24
90012b90:	f362 4017 	bfi	r0, r2, #16, #8
90012b94:	f363 601f 	bfi	r0, r3, #24, #8
90012b98:	b004      	add	sp, #16
90012b9a:	4770      	bx	lr
90012b9c:	b530      	push	{r4, r5, lr}
90012b9e:	8803      	ldrh	r3, [r0, #0]
90012ba0:	2200      	movs	r2, #0
90012ba2:	250a      	movs	r5, #10
90012ba4:	3b30      	subs	r3, #48	; 0x30
90012ba6:	b29c      	uxth	r4, r3
90012ba8:	2c09      	cmp	r4, #9
90012baa:	d901      	bls.n	90012bb0 <EwCanDiscardSurface+0x130>
90012bac:	600a      	str	r2, [r1, #0]
90012bae:	bd30      	pop	{r4, r5, pc}
90012bb0:	fb05 3202 	mla	r2, r5, r2, r3
90012bb4:	f830 3f02 	ldrh.w	r3, [r0, #2]!
90012bb8:	e7f4      	b.n	90012ba4 <EwCanDiscardSurface+0x124>
90012bba:	b510      	push	{r4, lr}
90012bbc:	460c      	mov	r4, r1
90012bbe:	4611      	mov	r1, r2
90012bc0:	f7ff ffec 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90012bc4:	8803      	ldrh	r3, [r0, #0]
90012bc6:	2b25      	cmp	r3, #37	; 0x25
90012bc8:	d10d      	bne.n	90012be6 <EwCanDiscardSurface+0x166>
90012bca:	680b      	ldr	r3, [r1, #0]
90012bcc:	f06f 0263 	mvn.w	r2, #99	; 0x63
90012bd0:	3002      	adds	r0, #2
90012bd2:	4363      	muls	r3, r4
90012bd4:	2464      	movs	r4, #100	; 0x64
90012bd6:	fb93 f4f4 	sdiv	r4, r3, r4
90012bda:	fb02 3304 	mla	r3, r2, r4, r3
90012bde:	2b32      	cmp	r3, #50	; 0x32
90012be0:	bfc8      	it	gt
90012be2:	3401      	addgt	r4, #1
90012be4:	600c      	str	r4, [r1, #0]
90012be6:	bd10      	pop	{r4, pc}
90012be8:	b5f0      	push	{r4, r5, r6, r7, lr}
90012bea:	b085      	sub	sp, #20
90012bec:	2500      	movs	r5, #0
90012bee:	4617      	mov	r7, r2
90012bf0:	461e      	mov	r6, r3
90012bf2:	466a      	mov	r2, sp
90012bf4:	460c      	mov	r4, r1
90012bf6:	e9cd 5500 	strd	r5, r5, [sp]
90012bfa:	e9cd 5502 	strd	r5, r5, [sp, #8]
90012bfe:	f7ff ffdc 	bl	90012bba <EwCanDiscardSurface+0x13a>
90012c02:	8803      	ldrh	r3, [r0, #0]
90012c04:	2b2c      	cmp	r3, #44	; 0x2c
90012c06:	d112      	bne.n	90012c2e <EwCanDiscardSurface+0x1ae>
90012c08:	aa01      	add	r2, sp, #4
90012c0a:	4621      	mov	r1, r4
90012c0c:	3002      	adds	r0, #2
90012c0e:	f7ff ffd4 	bl	90012bba <EwCanDiscardSurface+0x13a>
90012c12:	8803      	ldrh	r3, [r0, #0]
90012c14:	2b2c      	cmp	r3, #44	; 0x2c
90012c16:	d10a      	bne.n	90012c2e <EwCanDiscardSurface+0x1ae>
90012c18:	a902      	add	r1, sp, #8
90012c1a:	3002      	adds	r0, #2
90012c1c:	f7ff ffbe 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90012c20:	8803      	ldrh	r3, [r0, #0]
90012c22:	2b2c      	cmp	r3, #44	; 0x2c
90012c24:	d103      	bne.n	90012c2e <EwCanDiscardSurface+0x1ae>
90012c26:	a903      	add	r1, sp, #12
90012c28:	3002      	adds	r0, #2
90012c2a:	f7ff ffb7 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90012c2e:	9b00      	ldr	r3, [sp, #0]
90012c30:	9a01      	ldr	r2, [sp, #4]
90012c32:	42a3      	cmp	r3, r4
90012c34:	bfc8      	it	gt
90012c36:	9400      	strgt	r4, [sp, #0]
90012c38:	9b00      	ldr	r3, [sp, #0]
90012c3a:	1ae4      	subs	r4, r4, r3
90012c3c:	603b      	str	r3, [r7, #0]
90012c3e:	4294      	cmp	r4, r2
90012c40:	9a02      	ldr	r2, [sp, #8]
90012c42:	bfb8      	it	lt
90012c44:	9401      	strlt	r4, [sp, #4]
90012c46:	9b01      	ldr	r3, [sp, #4]
90012c48:	6033      	str	r3, [r6, #0]
90012c4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012c4c:	601a      	str	r2, [r3, #0]
90012c4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012c50:	9a03      	ldr	r2, [sp, #12]
90012c52:	601a      	str	r2, [r3, #0]
90012c54:	b005      	add	sp, #20
90012c56:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012c58:	3901      	subs	r1, #1
90012c5a:	3802      	subs	r0, #2
90012c5c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90012c60:	b11b      	cbz	r3, 90012c6a <EwCanDiscardSurface+0x1ea>
90012c62:	f830 2f02 	ldrh.w	r2, [r0, #2]!
90012c66:	429a      	cmp	r2, r3
90012c68:	d0f8      	beq.n	90012c5c <EwCanDiscardSurface+0x1dc>
90012c6a:	fab3 f083 	clz	r0, r3
90012c6e:	0940      	lsrs	r0, r0, #5
90012c70:	4770      	bx	lr
90012c72:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90012c76:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90012c78:	4681      	mov	r9, r0
90012c7a:	460e      	mov	r6, r1
90012c7c:	4617      	mov	r7, r2
90012c7e:	461c      	mov	r4, r3
90012c80:	f04f 0818 	mov.w	r8, #24
90012c84:	42ac      	cmp	r4, r5
90012c86:	d302      	bcc.n	90012c8e <EwCanDiscardSurface+0x20e>
90012c88:	b003      	add	sp, #12
90012c8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012c8e:	8823      	ldrh	r3, [r4, #0]
90012c90:	2b41      	cmp	r3, #65	; 0x41
90012c92:	d03e      	beq.n	90012d12 <EwCanDiscardSurface+0x292>
90012c94:	3b47      	subs	r3, #71	; 0x47
90012c96:	b29a      	uxth	r2, r3
90012c98:	2a0d      	cmp	r2, #13
90012c9a:	d8f3      	bhi.n	90012c84 <EwCanDiscardSurface+0x204>
90012c9c:	2b0d      	cmp	r3, #13
90012c9e:	d8f1      	bhi.n	90012c84 <EwCanDiscardSurface+0x204>
90012ca0:	a201      	add	r2, pc, #4	; (adr r2, 90012ca8 <EwCanDiscardSurface+0x228>)
90012ca2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012ca6:	bf00      	nop
90012ca8:	90012ce1 	.word	0x90012ce1
90012cac:	90012c85 	.word	0x90012c85
90012cb0:	90012d0f 	.word	0x90012d0f
90012cb4:	90012d07 	.word	0x90012d07
90012cb8:	90012c85 	.word	0x90012c85
90012cbc:	90012c85 	.word	0x90012c85
90012cc0:	90012c85 	.word	0x90012c85
90012cc4:	90012c85 	.word	0x90012c85
90012cc8:	90012c85 	.word	0x90012c85
90012ccc:	90012c85 	.word	0x90012c85
90012cd0:	90012c85 	.word	0x90012c85
90012cd4:	90012d0f 	.word	0x90012d0f
90012cd8:	90012c85 	.word	0x90012c85
90012cdc:	90012d07 	.word	0x90012d07
90012ce0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90012ce4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90012ce8:	8960      	ldrh	r0, [r4, #10]
90012cea:	4419      	add	r1, r3
90012cec:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90012cf0:	f104 030e 	add.w	r3, r4, #14
90012cf4:	eb04 0440 	add.w	r4, r4, r0, lsl #1
90012cf8:	443a      	add	r2, r7
90012cfa:	4431      	add	r1, r6
90012cfc:	4648      	mov	r0, r9
90012cfe:	9400      	str	r4, [sp, #0]
90012d00:	f7ff ffb7 	bl	90012c72 <EwCanDiscardSurface+0x1f2>
90012d04:	e7be      	b.n	90012c84 <EwCanDiscardSurface+0x204>
90012d06:	88e3      	ldrh	r3, [r4, #6]
90012d08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90012d0c:	e7ba      	b.n	90012c84 <EwCanDiscardSurface+0x204>
90012d0e:	340c      	adds	r4, #12
90012d10:	e7b8      	b.n	90012c84 <EwCanDiscardSurface+0x204>
90012d12:	8863      	ldrh	r3, [r4, #2]
90012d14:	fb08 9303 	mla	r3, r8, r3, r9
90012d18:	f853 2c14 	ldr.w	r2, [r3, #-20]
90012d1c:	42a2      	cmp	r2, r4
90012d1e:	bf94      	ite	ls
90012d20:	f843 2c14 	strls.w	r2, [r3, #-20]
90012d24:	f843 4c14 	strhi.w	r4, [r3, #-20]
90012d28:	340e      	adds	r4, #14
90012d2a:	f853 2c10 	ldr.w	r2, [r3, #-16]
90012d2e:	42a2      	cmp	r2, r4
90012d30:	bf2c      	ite	cs
90012d32:	f843 2c10 	strcs.w	r2, [r3, #-16]
90012d36:	f843 4c10 	strcc.w	r4, [r3, #-16]
90012d3a:	f853 2c0c 	ldr.w	r2, [r3, #-12]
90012d3e:	3201      	adds	r2, #1
90012d40:	e943 6702 	strd	r6, r7, [r3, #-8]
90012d44:	f843 2c0c 	str.w	r2, [r3, #-12]
90012d48:	e79c      	b.n	90012c84 <EwCanDiscardSurface+0x204>
90012d4a:	b530      	push	{r4, r5, lr}
90012d4c:	429a      	cmp	r2, r3
90012d4e:	d302      	bcc.n	90012d56 <EwCanDiscardSurface+0x2d6>
90012d50:	2200      	movs	r2, #0
90012d52:	4610      	mov	r0, r2
90012d54:	bd30      	pop	{r4, r5, pc}
90012d56:	8814      	ldrh	r4, [r2, #0]
90012d58:	2c41      	cmp	r4, #65	; 0x41
90012d5a:	d013      	beq.n	90012d84 <EwCanDiscardSurface+0x304>
90012d5c:	3c49      	subs	r4, #73	; 0x49
90012d5e:	b2a5      	uxth	r5, r4
90012d60:	2d0b      	cmp	r5, #11
90012d62:	d817      	bhi.n	90012d94 <EwCanDiscardSurface+0x314>
90012d64:	2c0b      	cmp	r4, #11
90012d66:	d815      	bhi.n	90012d94 <EwCanDiscardSurface+0x314>
90012d68:	e8df f004 	tbb	[pc, r4]
90012d6c:	1414060a 	.word	0x1414060a
90012d70:	14141414 	.word	0x14141414
90012d74:	06140a14 	.word	0x06140a14
90012d78:	88d4      	ldrh	r4, [r2, #6]
90012d7a:	eb02 0244 	add.w	r2, r2, r4, lsl #1
90012d7e:	e7e5      	b.n	90012d4c <EwCanDiscardSurface+0x2cc>
90012d80:	320c      	adds	r2, #12
90012d82:	e7e3      	b.n	90012d4c <EwCanDiscardSurface+0x2cc>
90012d84:	8854      	ldrh	r4, [r2, #2]
90012d86:	4284      	cmp	r4, r0
90012d88:	d102      	bne.n	90012d90 <EwCanDiscardSurface+0x310>
90012d8a:	2900      	cmp	r1, #0
90012d8c:	d0e1      	beq.n	90012d52 <EwCanDiscardSurface+0x2d2>
90012d8e:	3901      	subs	r1, #1
90012d90:	320e      	adds	r2, #14
90012d92:	e7db      	b.n	90012d4c <EwCanDiscardSurface+0x2cc>
90012d94:	461a      	mov	r2, r3
90012d96:	e7d9      	b.n	90012d4c <EwCanDiscardSurface+0x2cc>
90012d98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90012d9c:	4604      	mov	r4, r0
90012d9e:	b348      	cbz	r0, 90012df4 <EwCanDiscardSurface+0x374>
90012da0:	e9d0 7200 	ldrd	r7, r2, [r0]
90012da4:	eba2 0807 	sub.w	r8, r2, r7
90012da8:	6882      	ldr	r2, [r0, #8]
90012daa:	eba2 0268 	sub.w	r2, r2, r8, asr #1
90012dae:	ea4f 0368 	mov.w	r3, r8, asr #1
90012db2:	428a      	cmp	r2, r1
90012db4:	db03      	blt.n	90012dbe <EwCanDiscardSurface+0x33e>
90012db6:	2601      	movs	r6, #1
90012db8:	4630      	mov	r0, r6
90012dba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90012dbe:	4419      	add	r1, r3
90012dc0:	424b      	negs	r3, r1
90012dc2:	f3c1 0509 	ubfx	r5, r1, #0, #10
90012dc6:	f3c3 0309 	ubfx	r3, r3, #0, #10
90012dca:	bf58      	it	pl
90012dcc:	425d      	negpl	r5, r3
90012dce:	f5c5 6580 	rsb	r5, r5, #1024	; 0x400
90012dd2:	440d      	add	r5, r1
90012dd4:	ea4f 0945 	mov.w	r9, r5, lsl #1
90012dd8:	4648      	mov	r0, r9
90012dda:	f013 ff6b 	bl	90026cb4 <EwAlloc>
90012dde:	b958      	cbnz	r0, 90012df8 <EwCanDiscardSurface+0x378>
90012de0:	2016      	movs	r0, #22
90012de2:	f00b fae7 	bl	9001e3b4 <EwImmediateReclaimMemory>
90012de6:	4606      	mov	r6, r0
90012de8:	2800      	cmp	r0, #0
90012dea:	d1f5      	bne.n	90012dd8 <EwCanDiscardSurface+0x358>
90012dec:	2016      	movs	r0, #22
90012dee:	f00a fb2f 	bl	9001d450 <EwError>
90012df2:	e7e1      	b.n	90012db8 <EwCanDiscardSurface+0x338>
90012df4:	4606      	mov	r6, r0
90012df6:	e7df      	b.n	90012db8 <EwCanDiscardSurface+0x338>
90012df8:	f8df c060 	ldr.w	ip, [pc, #96]	; 90012e5c <EwCanDiscardSurface+0x3dc>
90012dfc:	4e13      	ldr	r6, [pc, #76]	; (90012e4c <EwCanDiscardSurface+0x3cc>)
90012dfe:	f8dc 3000 	ldr.w	r3, [ip]
90012e02:	6832      	ldr	r2, [r6, #0]
90012e04:	444b      	add	r3, r9
90012e06:	4293      	cmp	r3, r2
90012e08:	dd00      	ble.n	90012e0c <EwCanDiscardSurface+0x38c>
90012e0a:	6033      	str	r3, [r6, #0]
90012e0c:	4a10      	ldr	r2, [pc, #64]	; (90012e50 <EwCanDiscardSurface+0x3d0>)
90012e0e:	6816      	ldr	r6, [r2, #0]
90012e10:	4a10      	ldr	r2, [pc, #64]	; (90012e54 <EwCanDiscardSurface+0x3d4>)
90012e12:	6812      	ldr	r2, [r2, #0]
90012e14:	4416      	add	r6, r2
90012e16:	4a10      	ldr	r2, [pc, #64]	; (90012e58 <EwCanDiscardSurface+0x3d8>)
90012e18:	441e      	add	r6, r3
90012e1a:	6811      	ldr	r1, [r2, #0]
90012e1c:	428e      	cmp	r6, r1
90012e1e:	4639      	mov	r1, r7
90012e20:	bfc8      	it	gt
90012e22:	6016      	strgt	r6, [r2, #0]
90012e24:	68a2      	ldr	r2, [r4, #8]
90012e26:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
90012e2a:	1bc2      	subs	r2, r0, r7
90012e2c:	f8cc 3000 	str.w	r3, [ip]
90012e30:	6863      	ldr	r3, [r4, #4]
90012e32:	6020      	str	r0, [r4, #0]
90012e34:	4413      	add	r3, r2
90012e36:	4642      	mov	r2, r8
90012e38:	e9c4 3501 	strd	r3, r5, [r4, #4]
90012e3c:	f013 ff68 	bl	90026d10 <EwMove>
90012e40:	2f00      	cmp	r7, #0
90012e42:	d0b8      	beq.n	90012db6 <EwCanDiscardSurface+0x336>
90012e44:	4638      	mov	r0, r7
90012e46:	f013 ff37 	bl	90026cb8 <EwFree>
90012e4a:	e7b4      	b.n	90012db6 <EwCanDiscardSurface+0x336>
90012e4c:	200002d8 	.word	0x200002d8
90012e50:	200002ac 	.word	0x200002ac
90012e54:	200002b8 	.word	0x200002b8
90012e58:	200002c0 	.word	0x200002c0
90012e5c:	200002bc 	.word	0x200002bc

90012e60 <EwInitAttrText>:
90012e60:	2001      	movs	r0, #1
90012e62:	4770      	bx	lr

90012e64 <EwParseFlowString>:
90012e64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012e68:	ed2d 8b02 	vpush	{d8}
90012e6c:	b095      	sub	sp, #84	; 0x54
90012e6e:	460e      	mov	r6, r1
90012e70:	f8dd a080 	ldr.w	sl, [sp, #128]	; 0x80
90012e74:	900d      	str	r0, [sp, #52]	; 0x34
90012e76:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
90012e7a:	2800      	cmp	r0, #0
90012e7c:	d039      	beq.n	90012ef2 <EwParseFlowString+0x8e>
90012e7e:	6943      	ldr	r3, [r0, #20]
90012e80:	ee08 3a10 	vmov	s16, r3
90012e84:	e9d0 4300 	ldrd	r4, r3, [r0]
90012e88:	441c      	add	r4, r3
90012e8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90012e8c:	4630      	mov	r0, r6
90012e8e:	4bb2      	ldr	r3, [pc, #712]	; (90013158 <EwParseFlowString+0x2f4>)
90012e90:	ea32 0222 	bics.w	r2, r2, r2, asr #32
90012e94:	bf28      	it	cs
90012e96:	461a      	movcs	r2, r3
90012e98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012e9a:	2b00      	cmp	r3, #0
90012e9c:	920a      	str	r2, [sp, #40]	; 0x28
90012e9e:	bfb8      	it	lt
90012ea0:	f06f 4300 	mvnlt.w	r3, #2147483648	; 0x80000000
90012ea4:	930b      	str	r3, [sp, #44]	; 0x2c
90012ea6:	f00e f839 	bl	90020f1c <EwGetStringLength>
90012eaa:	4633      	mov	r3, r6
90012eac:	4605      	mov	r5, r0
90012eae:	2200      	movs	r2, #0
90012eb0:	b113      	cbz	r3, 90012eb8 <EwParseFlowString+0x54>
90012eb2:	f833 1b02 	ldrh.w	r1, [r3], #2
90012eb6:	bb01      	cbnz	r1, 90012efa <EwParseFlowString+0x96>
90012eb8:	1aab      	subs	r3, r5, r2
90012eba:	990a      	ldr	r1, [sp, #40]	; 0x28
90012ebc:	2000      	movs	r0, #0
90012ebe:	3101      	adds	r1, #1
90012ec0:	4363      	muls	r3, r4
90012ec2:	fb93 f3f1 	sdiv	r3, r3, r1
90012ec6:	3301      	adds	r3, #1
90012ec8:	4413      	add	r3, r2
90012eca:	42ab      	cmp	r3, r5
90012ecc:	bfd4      	ite	le
90012ece:	18ea      	addle	r2, r5, r3
90012ed0:	196a      	addgt	r2, r5, r5
90012ed2:	1c53      	adds	r3, r2, #1
90012ed4:	4619      	mov	r1, r3
90012ed6:	9308      	str	r3, [sp, #32]
90012ed8:	f00d fe48 	bl	90020b6c <EwNewStringChar>
90012edc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90012ede:	4681      	mov	r9, r0
90012ee0:	b97b      	cbnz	r3, 90012f02 <EwParseFlowString+0x9e>
90012ee2:	f04f 0900 	mov.w	r9, #0
90012ee6:	4648      	mov	r0, r9
90012ee8:	b015      	add	sp, #84	; 0x54
90012eea:	ecbd 8b02 	vpop	{d8}
90012eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012ef2:	ee08 0a10 	vmov	s16, r0
90012ef6:	4604      	mov	r4, r0
90012ef8:	e7c7      	b.n	90012e8a <EwParseFlowString+0x26>
90012efa:	290a      	cmp	r1, #10
90012efc:	bf08      	it	eq
90012efe:	3201      	addeq	r2, #1
90012f00:	e7d6      	b.n	90012eb0 <EwParseFlowString+0x4c>
90012f02:	2800      	cmp	r0, #0
90012f04:	d0ed      	beq.n	90012ee2 <EwParseFlowString+0x7e>
90012f06:	2d00      	cmp	r5, #0
90012f08:	d0eb      	beq.n	90012ee2 <EwParseFlowString+0x7e>
90012f0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012f0c:	2b00      	cmp	r3, #0
90012f0e:	d0e8      	beq.n	90012ee2 <EwParseFlowString+0x7e>
90012f10:	9b08      	ldr	r3, [sp, #32]
90012f12:	4631      	mov	r1, r6
90012f14:	006a      	lsls	r2, r5, #1
90012f16:	f64f 66ff 	movw	r6, #65279	; 0xfeff
90012f1a:	1b5c      	subs	r4, r3, r5
90012f1c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90012f20:	4620      	mov	r0, r4
90012f22:	f013 fef7 	bl	90026d14 <EwCopy>
90012f26:	9b08      	ldr	r3, [sp, #32]
90012f28:	f242 010b 	movw	r1, #8203	; 0x200b
90012f2c:	20ad      	movs	r0, #173	; 0xad
90012f2e:	eb09 0243 	add.w	r2, r9, r3, lsl #1
90012f32:	4623      	mov	r3, r4
90012f34:	429a      	cmp	r2, r3
90012f36:	d845      	bhi.n	90012fc4 <EwParseFlowString+0x160>
90012f38:	f1ba 0f00 	cmp.w	sl, #0
90012f3c:	d151      	bne.n	90012fe2 <EwParseFlowString+0x17e>
90012f3e:	f04f 0a00 	mov.w	sl, #0
90012f42:	f109 0302 	add.w	r3, r9, #2
90012f46:	f04f 0b00 	mov.w	fp, #0
90012f4a:	f109 0504 	add.w	r5, r9, #4
90012f4e:	9409      	str	r4, [sp, #36]	; 0x24
90012f50:	9304      	str	r3, [sp, #16]
90012f52:	2300      	movs	r3, #0
90012f54:	465e      	mov	r6, fp
90012f56:	9306      	str	r3, [sp, #24]
90012f58:	e9cd 3302 	strd	r3, r3, [sp, #8]
90012f5c:	f04f 33ff 	mov.w	r3, #4294967295
90012f60:	9305      	str	r3, [sp, #20]
90012f62:	f8b4 8000 	ldrh.w	r8, [r4]
90012f66:	f1b8 0f00 	cmp.w	r8, #0
90012f6a:	d154      	bne.n	90013016 <EwParseFlowString+0x1b2>
90012f6c:	b12e      	cbz	r6, 90012f7a <EwParseFlowString+0x116>
90012f6e:	8833      	ldrh	r3, [r6, #0]
90012f70:	2bad      	cmp	r3, #173	; 0xad
90012f72:	bf04      	itt	eq
90012f74:	f64f 63ff 	movweq	r3, #65279	; 0xfeff
90012f78:	8033      	strheq	r3, [r6, #0]
90012f7a:	9b04      	ldr	r3, [sp, #16]
90012f7c:	1aee      	subs	r6, r5, r3
90012f7e:	2e02      	cmp	r6, #2
90012f80:	dd1c      	ble.n	90012fbc <EwParseFlowString+0x158>
90012f82:	1076      	asrs	r6, r6, #1
90012f84:	f1ba 0f00 	cmp.w	sl, #0
90012f88:	d011      	beq.n	90012fae <EwParseFlowString+0x14a>
90012f8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
90012f8c:	4650      	mov	r0, sl
90012f8e:	1ae4      	subs	r4, r4, r3
90012f90:	1062      	asrs	r2, r4, #1
90012f92:	ebc6 0464 	rsb	r4, r6, r4, asr #1
90012f96:	1c61      	adds	r1, r4, #1
90012f98:	e9cd 1202 	strd	r1, r2, [sp, #8]
90012f9c:	f003 fbbb 	bl	90016716 <EwBidiCompleteRow>
90012fa0:	9b04      	ldr	r3, [sp, #16]
90012fa2:	4650      	mov	r0, sl
90012fa4:	3302      	adds	r3, #2
90012fa6:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90012faa:	f003 fbdf 	bl	9001676c <EwBidiReorderChars>
90012fae:	9b04      	ldr	r3, [sp, #16]
90012fb0:	801e      	strh	r6, [r3, #0]
90012fb2:	2300      	movs	r3, #0
90012fb4:	802b      	strh	r3, [r5, #0]
90012fb6:	9b06      	ldr	r3, [sp, #24]
90012fb8:	3301      	adds	r3, #1
90012fba:	9306      	str	r3, [sp, #24]
90012fbc:	9b06      	ldr	r3, [sp, #24]
90012fbe:	f8a9 3000 	strh.w	r3, [r9]
90012fc2:	e790      	b.n	90012ee6 <EwParseFlowString+0x82>
90012fc4:	881f      	ldrh	r7, [r3, #0]
90012fc6:	2f5e      	cmp	r7, #94	; 0x5e
90012fc8:	d007      	beq.n	90012fda <EwParseFlowString+0x176>
90012fca:	2f7e      	cmp	r7, #126	; 0x7e
90012fcc:	d007      	beq.n	90012fde <EwParseFlowString+0x17a>
90012fce:	2f25      	cmp	r7, #37	; 0x25
90012fd0:	d101      	bne.n	90012fd6 <EwParseFlowString+0x172>
90012fd2:	f823 6b02 	strh.w	r6, [r3], #2
90012fd6:	3302      	adds	r3, #2
90012fd8:	e7ac      	b.n	90012f34 <EwParseFlowString+0xd0>
90012fda:	8019      	strh	r1, [r3, #0]
90012fdc:	e7fb      	b.n	90012fd6 <EwParseFlowString+0x172>
90012fde:	8018      	strh	r0, [r3, #0]
90012fe0:	e7f9      	b.n	90012fd6 <EwParseFlowString+0x172>
90012fe2:	f04f 33ff 	mov.w	r3, #4294967295
90012fe6:	462a      	mov	r2, r5
90012fe8:	4621      	mov	r1, r4
90012fea:	4650      	mov	r0, sl
90012fec:	f002 fbde 	bl	900157ac <EwBidiInit>
90012ff0:	2800      	cmp	r0, #0
90012ff2:	d0a4      	beq.n	90012f3e <EwParseFlowString+0xda>
90012ff4:	4621      	mov	r1, r4
90012ff6:	4650      	mov	r0, sl
90012ff8:	f002 fc9e 	bl	90015938 <EwBidiProcess>
90012ffc:	4621      	mov	r1, r4
90012ffe:	4650      	mov	r0, sl
90013000:	f003 fb6c 	bl	900166dc <EwBidiMirrorGlyphs>
90013004:	2301      	movs	r3, #1
90013006:	2200      	movs	r2, #0
90013008:	4621      	mov	r1, r4
9001300a:	9300      	str	r3, [sp, #0]
9001300c:	4650      	mov	r0, sl
9001300e:	ab0d      	add	r3, sp, #52	; 0x34
90013010:	f003 f9a6 	bl	90016360 <EwBidiApplyShaping>
90013014:	e795      	b.n	90012f42 <EwParseFlowString+0xde>
90013016:	1ca3      	adds	r3, r4, #2
90013018:	f1b8 0f0a 	cmp.w	r8, #10
9001301c:	9307      	str	r3, [sp, #28]
9001301e:	f000 813e 	beq.w	9001329e <EwParseFlowString+0x43a>
90013022:	f240 631c 	movw	r3, #1564	; 0x61c
90013026:	4598      	cmp	r8, r3
90013028:	f000 81b2 	beq.w	90013390 <EwParseFlowString+0x52c>
9001302c:	f5a8 5300 	sub.w	r3, r8, #8192	; 0x2000
90013030:	f1a3 020c 	sub.w	r2, r3, #12
90013034:	b292      	uxth	r2, r2
90013036:	2a03      	cmp	r2, #3
90013038:	f240 81aa 	bls.w	90013390 <EwParseFlowString+0x52c>
9001303c:	3b2a      	subs	r3, #42	; 0x2a
9001303e:	b29b      	uxth	r3, r3
90013040:	2b04      	cmp	r3, #4
90013042:	f240 81a5 	bls.w	90013390 <EwParseFlowString+0x52c>
90013046:	f5a8 5301 	sub.w	r3, r8, #8256	; 0x2040
9001304a:	3b26      	subs	r3, #38	; 0x26
9001304c:	2b03      	cmp	r3, #3
9001304e:	f240 819f 	bls.w	90013390 <EwParseFlowString+0x52c>
90013052:	9b03      	ldr	r3, [sp, #12]
90013054:	2b00      	cmp	r3, #0
90013056:	d06b      	beq.n	90013130 <EwParseFlowString+0x2cc>
90013058:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001305c:	4598      	cmp	r8, r3
9001305e:	f000 8197 	beq.w	90013390 <EwParseFlowString+0x52c>
90013062:	f242 030b 	movw	r3, #8203	; 0x200b
90013066:	4598      	cmp	r8, r3
90013068:	d072      	beq.n	90013150 <EwParseFlowString+0x2ec>
9001306a:	f1b8 0fad 	cmp.w	r8, #173	; 0xad
9001306e:	f000 8084 	beq.w	9001317a <EwParseFlowString+0x316>
90013072:	f1a8 0020 	sub.w	r0, r8, #32
90013076:	4243      	negs	r3, r0
90013078:	4143      	adcs	r3, r0
9001307a:	9303      	str	r3, [sp, #12]
9001307c:	f1b8 0f20 	cmp.w	r8, #32
90013080:	d06c      	beq.n	9001315c <EwParseFlowString+0x2f8>
90013082:	f1b8 0fad 	cmp.w	r8, #173	; 0xad
90013086:	d078      	beq.n	9001317a <EwParseFlowString+0x316>
90013088:	f242 030b 	movw	r3, #8203	; 0x200b
9001308c:	4598      	cmp	r8, r3
9001308e:	d05f      	beq.n	90013150 <EwParseFlowString+0x2ec>
90013090:	f242 0326 	movw	r3, #8230	; 0x2026
90013094:	4598      	cmp	r8, r3
90013096:	f040 817d 	bne.w	90013394 <EwParseFlowString+0x530>
9001309a:	4641      	mov	r1, r8
9001309c:	980d      	ldr	r0, [sp, #52]	; 0x34
9001309e:	f7fe fd0d 	bl	90011abc <EwIsGlyphAvailable>
900130a2:	2800      	cmp	r0, #0
900130a4:	f040 817b 	bne.w	9001339e <EwParseFlowString+0x53a>
900130a8:	900c      	str	r0, [sp, #48]	; 0x30
900130aa:	aa0f      	add	r2, sp, #60	; 0x3c
900130ac:	212e      	movs	r1, #46	; 0x2e
900130ae:	980d      	ldr	r0, [sp, #52]	; 0x34
900130b0:	f7fe fd27 	bl	90011b02 <EwGetGlyphMetrics>
900130b4:	2800      	cmp	r0, #0
900130b6:	f000 8172 	beq.w	9001339e <EwParseFlowString+0x53a>
900130ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900130bc:	f1ba 0f00 	cmp.w	sl, #0
900130c0:	d006      	beq.n	900130d0 <EwParseFlowString+0x26c>
900130c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900130c4:	4650      	mov	r0, sl
900130c6:	1ae1      	subs	r1, r4, r3
900130c8:	1049      	asrs	r1, r1, #1
900130ca:	f002 fb61 	bl	90015790 <EwBidiGetCharLevel>
900130ce:	4603      	mov	r3, r0
900130d0:	222e      	movs	r2, #46	; 0x2e
900130d2:	ee18 0a10 	vmov	r0, s16
900130d6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
900130d8:	4611      	mov	r1, r2
900130da:	930c      	str	r3, [sp, #48]	; 0x30
900130dc:	f009 f95e 	bl	9001c39c <EwFntGetKerning>
900130e0:	9b05      	ldr	r3, [sp, #20]
900130e2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
900130e6:	461a      	mov	r2, r3
900130e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900130ea:	eb07 0740 	add.w	r7, r7, r0, lsl #1
900130ee:	429a      	cmp	r2, r3
900130f0:	f040 8082 	bne.w	900131f8 <EwParseFlowString+0x394>
900130f4:	4613      	mov	r3, r2
900130f6:	ee18 0a10 	vmov	r0, s16
900130fa:	07da      	lsls	r2, r3, #31
900130fc:	bf47      	ittee	mi
900130fe:	465a      	movmi	r2, fp
90013100:	212e      	movmi	r1, #46	; 0x2e
90013102:	222e      	movpl	r2, #46	; 0x2e
90013104:	4659      	movpl	r1, fp
90013106:	f009 f949 	bl	9001c39c <EwFntGetKerning>
9001310a:	4407      	add	r7, r0
9001310c:	f04f 0b2e 	mov.w	fp, #46	; 0x2e
90013110:	9b02      	ldr	r3, [sp, #8]
90013112:	441f      	add	r7, r3
90013114:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90013116:	429f      	cmp	r7, r3
90013118:	dd02      	ble.n	90013120 <EwParseFlowString+0x2bc>
9001311a:	9b02      	ldr	r3, [sp, #8]
9001311c:	2b00      	cmp	r3, #0
9001311e:	d16f      	bne.n	90013200 <EwParseFlowString+0x39c>
90013120:	f1b8 0f0a 	cmp.w	r8, #10
90013124:	f825 8b02 	strh.w	r8, [r5], #2
90013128:	f040 8130 	bne.w	9001338c <EwParseFlowString+0x528>
9001312c:	9702      	str	r7, [sp, #8]
9001312e:	e081      	b.n	90013234 <EwParseFlowString+0x3d0>
90013130:	f242 030b 	movw	r3, #8203	; 0x200b
90013134:	4598      	cmp	r8, r3
90013136:	d1a1      	bne.n	9001307c <EwParseFlowString+0x218>
90013138:	9b02      	ldr	r3, [sp, #8]
9001313a:	b14b      	cbz	r3, 90013150 <EwParseFlowString+0x2ec>
9001313c:	b12e      	cbz	r6, 9001314a <EwParseFlowString+0x2e6>
9001313e:	8833      	ldrh	r3, [r6, #0]
90013140:	2bad      	cmp	r3, #173	; 0xad
90013142:	d102      	bne.n	9001314a <EwParseFlowString+0x2e6>
90013144:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013148:	8033      	strh	r3, [r6, #0]
9001314a:	2301      	movs	r3, #1
9001314c:	462e      	mov	r6, r5
9001314e:	9303      	str	r3, [sp, #12]
90013150:	f64f 68ff 	movw	r8, #65279	; 0xfeff
90013154:	2700      	movs	r7, #0
90013156:	e7db      	b.n	90013110 <EwParseFlowString+0x2ac>
90013158:	7ffffffe 	.word	0x7ffffffe
9001315c:	9b02      	ldr	r3, [sp, #8]
9001315e:	2b00      	cmp	r3, #0
90013160:	f000 811d 	beq.w	9001339e <EwParseFlowString+0x53a>
90013164:	b12e      	cbz	r6, 90013172 <EwParseFlowString+0x30e>
90013166:	8833      	ldrh	r3, [r6, #0]
90013168:	2bad      	cmp	r3, #173	; 0xad
9001316a:	d102      	bne.n	90013172 <EwParseFlowString+0x30e>
9001316c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013170:	8033      	strh	r3, [r6, #0]
90013172:	2301      	movs	r3, #1
90013174:	462e      	mov	r6, r5
90013176:	9303      	str	r3, [sp, #12]
90013178:	e111      	b.n	9001339e <EwParseFlowString+0x53a>
9001317a:	9b02      	ldr	r3, [sp, #8]
9001317c:	2b00      	cmp	r3, #0
9001317e:	d0e7      	beq.n	90013150 <EwParseFlowString+0x2ec>
90013180:	9b03      	ldr	r3, [sp, #12]
90013182:	2b00      	cmp	r3, #0
90013184:	d1e4      	bne.n	90013150 <EwParseFlowString+0x2ec>
90013186:	aa0f      	add	r2, sp, #60	; 0x3c
90013188:	21ad      	movs	r1, #173	; 0xad
9001318a:	980d      	ldr	r0, [sp, #52]	; 0x34
9001318c:	f7fe fcb9 	bl	90011b02 <EwGetGlyphMetrics>
90013190:	4607      	mov	r7, r0
90013192:	b1b8      	cbz	r0, 900131c4 <EwParseFlowString+0x360>
90013194:	f1ba 0f00 	cmp.w	sl, #0
90013198:	d021      	beq.n	900131de <EwParseFlowString+0x37a>
9001319a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001319c:	4650      	mov	r0, sl
9001319e:	1ae1      	subs	r1, r4, r3
900131a0:	1049      	asrs	r1, r1, #1
900131a2:	f002 faf5 	bl	90015790 <EwBidiGetCharLevel>
900131a6:	9b05      	ldr	r3, [sp, #20]
900131a8:	9f13      	ldr	r7, [sp, #76]	; 0x4c
900131aa:	4283      	cmp	r3, r0
900131ac:	d10a      	bne.n	900131c4 <EwParseFlowString+0x360>
900131ae:	07d9      	lsls	r1, r3, #31
900131b0:	ee18 0a10 	vmov	r0, s16
900131b4:	bf47      	ittee	mi
900131b6:	465a      	movmi	r2, fp
900131b8:	21ad      	movmi	r1, #173	; 0xad
900131ba:	22ad      	movpl	r2, #173	; 0xad
900131bc:	4659      	movpl	r1, fp
900131be:	f009 f8ed 	bl	9001c39c <EwFntGetKerning>
900131c2:	4407      	add	r7, r0
900131c4:	9b02      	ldr	r3, [sp, #8]
900131c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900131c8:	443b      	add	r3, r7
900131ca:	4293      	cmp	r3, r2
900131cc:	dc00      	bgt.n	900131d0 <EwParseFlowString+0x36c>
900131ce:	b947      	cbnz	r7, 900131e2 <EwParseFlowString+0x37e>
900131d0:	2e00      	cmp	r6, #0
900131d2:	f040 80e4 	bne.w	9001339e <EwParseFlowString+0x53a>
900131d6:	9b02      	ldr	r3, [sp, #8]
900131d8:	1bdb      	subs	r3, r3, r7
900131da:	9302      	str	r3, [sp, #8]
900131dc:	e7c9      	b.n	90013172 <EwParseFlowString+0x30e>
900131de:	4650      	mov	r0, sl
900131e0:	e7e1      	b.n	900131a6 <EwParseFlowString+0x342>
900131e2:	2e00      	cmp	r6, #0
900131e4:	d0f7      	beq.n	900131d6 <EwParseFlowString+0x372>
900131e6:	8833      	ldrh	r3, [r6, #0]
900131e8:	2bad      	cmp	r3, #173	; 0xad
900131ea:	bf04      	itt	eq
900131ec:	f64f 63ff 	movweq	r3, #65279	; 0xfeff
900131f0:	8033      	strheq	r3, [r6, #0]
900131f2:	e7f0      	b.n	900131d6 <EwParseFlowString+0x372>
900131f4:	4650      	mov	r0, sl
900131f6:	e0e5      	b.n	900133c4 <EwParseFlowString+0x560>
900131f8:	9305      	str	r3, [sp, #20]
900131fa:	e787      	b.n	9001310c <EwParseFlowString+0x2a8>
900131fc:	9005      	str	r0, [sp, #20]
900131fe:	e0f1      	b.n	900133e4 <EwParseFlowString+0x580>
90013200:	b376      	cbz	r6, 90013260 <EwParseFlowString+0x3fc>
90013202:	8833      	ldrh	r3, [r6, #0]
90013204:	3c02      	subs	r4, #2
90013206:	2b20      	cmp	r3, #32
90013208:	4622      	mov	r2, r4
9001320a:	bf04      	itt	eq
9001320c:	f64f 63ff 	movweq	r3, #65279	; 0xfeff
90013210:	8033      	strheq	r3, [r6, #0]
90013212:	1eab      	subs	r3, r5, #2
90013214:	42b3      	cmp	r3, r6
90013216:	d81e      	bhi.n	90013256 <EwParseFlowString+0x3f2>
90013218:	1e6a      	subs	r2, r5, #1
9001321a:	f06f 0101 	mvn.w	r1, #1
9001321e:	1b93      	subs	r3, r2, r6
90013220:	085b      	lsrs	r3, r3, #1
90013222:	434b      	muls	r3, r1
90013224:	4296      	cmp	r6, r2
90013226:	bf88      	it	hi
90013228:	2300      	movhi	r3, #0
9001322a:	2600      	movs	r6, #0
9001322c:	1c98      	adds	r0, r3, #2
9001322e:	441d      	add	r5, r3
90013230:	1822      	adds	r2, r4, r0
90013232:	9207      	str	r2, [sp, #28]
90013234:	9b07      	ldr	r3, [sp, #28]
90013236:	881b      	ldrh	r3, [r3, #0]
90013238:	2b20      	cmp	r3, #32
9001323a:	d106      	bne.n	9001324a <EwParseFlowString+0x3e6>
9001323c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013240:	f825 3b02 	strh.w	r3, [r5], #2
90013244:	9b07      	ldr	r3, [sp, #28]
90013246:	3302      	adds	r3, #2
90013248:	9307      	str	r3, [sp, #28]
9001324a:	9807      	ldr	r0, [sp, #28]
9001324c:	f240 6c1c 	movw	ip, #1564	; 0x61c
90013250:	f64f 67ff 	movw	r7, #65279	; 0xfeff
90013254:	e008      	b.n	90013268 <EwParseFlowString+0x404>
90013256:	f833 1902 	ldrh.w	r1, [r3], #-2
9001325a:	f822 1902 	strh.w	r1, [r2], #-2
9001325e:	e7d9      	b.n	90013214 <EwParseFlowString+0x3b0>
90013260:	9407      	str	r4, [sp, #28]
90013262:	e7e7      	b.n	90013234 <EwParseFlowString+0x3d0>
90013264:	f825 7b02 	strh.w	r7, [r5], #2
90013268:	8803      	ldrh	r3, [r0, #0]
9001326a:	4604      	mov	r4, r0
9001326c:	3002      	adds	r0, #2
9001326e:	2bad      	cmp	r3, #173	; 0xad
90013270:	d0f8      	beq.n	90013264 <EwParseFlowString+0x400>
90013272:	4563      	cmp	r3, ip
90013274:	d0f6      	beq.n	90013264 <EwParseFlowString+0x400>
90013276:	42bb      	cmp	r3, r7
90013278:	d0f4      	beq.n	90013264 <EwParseFlowString+0x400>
9001327a:	f5a3 5200 	sub.w	r2, r3, #8192	; 0x2000
9001327e:	f1a2 010b 	sub.w	r1, r2, #11
90013282:	b289      	uxth	r1, r1
90013284:	2904      	cmp	r1, #4
90013286:	d9ed      	bls.n	90013264 <EwParseFlowString+0x400>
90013288:	3a2a      	subs	r2, #42	; 0x2a
9001328a:	b292      	uxth	r2, r2
9001328c:	2a04      	cmp	r2, #4
9001328e:	d9e9      	bls.n	90013264 <EwParseFlowString+0x400>
90013290:	f5a3 5301 	sub.w	r3, r3, #8256	; 0x2040
90013294:	3b26      	subs	r3, #38	; 0x26
90013296:	2b03      	cmp	r3, #3
90013298:	d9e4      	bls.n	90013264 <EwParseFlowString+0x400>
9001329a:	9f02      	ldr	r7, [sp, #8]
9001329c:	e003      	b.n	900132a6 <EwParseFlowString+0x442>
9001329e:	9f02      	ldr	r7, [sp, #8]
900132a0:	9c07      	ldr	r4, [sp, #28]
900132a2:	f825 8b02 	strh.w	r8, [r5], #2
900132a6:	8823      	ldrh	r3, [r4, #0]
900132a8:	2b00      	cmp	r3, #0
900132aa:	d06d      	beq.n	90013388 <EwParseFlowString+0x524>
900132ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900132ae:	3b01      	subs	r3, #1
900132b0:	930b      	str	r3, [sp, #44]	; 0x2c
900132b2:	f43f ae5b 	beq.w	90012f6c <EwParseFlowString+0x108>
900132b6:	b12e      	cbz	r6, 900132c4 <EwParseFlowString+0x460>
900132b8:	8833      	ldrh	r3, [r6, #0]
900132ba:	2bad      	cmp	r3, #173	; 0xad
900132bc:	bf04      	itt	eq
900132be:	f64f 63ff 	movweq	r3, #65279	; 0xfeff
900132c2:	8033      	strheq	r3, [r6, #0]
900132c4:	1b63      	subs	r3, r4, r5
900132c6:	2b02      	cmp	r3, #2
900132c8:	dc33      	bgt.n	90013332 <EwParseFlowString+0x4ce>
900132ca:	9b08      	ldr	r3, [sp, #32]
900132cc:	2000      	movs	r0, #0
900132ce:	ea4f 08a3 	mov.w	r8, r3, asr #2
900132d2:	f108 0802 	add.w	r8, r8, #2
900132d6:	eb03 0708 	add.w	r7, r3, r8
900132da:	4639      	mov	r1, r7
900132dc:	f00d fc46 	bl	90020b6c <EwNewStringChar>
900132e0:	4606      	mov	r6, r0
900132e2:	2800      	cmp	r0, #0
900132e4:	f43f adfd 	beq.w	90012ee2 <EwParseFlowString+0x7e>
900132e8:	eba5 0509 	sub.w	r5, r5, r9
900132ec:	4649      	mov	r1, r9
900132ee:	462a      	mov	r2, r5
900132f0:	4435      	add	r5, r6
900132f2:	f013 fd0f 	bl	90026d14 <EwCopy>
900132f6:	9b08      	ldr	r3, [sp, #32]
900132f8:	4621      	mov	r1, r4
900132fa:	eb09 0243 	add.w	r2, r9, r3, lsl #1
900132fe:	1b12      	subs	r2, r2, r4
90013300:	eba4 0409 	sub.w	r4, r4, r9
90013304:	ebc2 0047 	rsb	r0, r2, r7, lsl #1
90013308:	eb04 0448 	add.w	r4, r4, r8, lsl #1
9001330c:	4430      	add	r0, r6
9001330e:	f013 fd01 	bl	90026d14 <EwCopy>
90013312:	9b04      	ldr	r3, [sp, #16]
90013314:	4434      	add	r4, r6
90013316:	9708      	str	r7, [sp, #32]
90013318:	eba3 0309 	sub.w	r3, r3, r9
9001331c:	18f3      	adds	r3, r6, r3
9001331e:	9304      	str	r3, [sp, #16]
90013320:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013322:	eba3 0909 	sub.w	r9, r3, r9
90013326:	eb09 0848 	add.w	r8, r9, r8, lsl #1
9001332a:	46b1      	mov	r9, r6
9001332c:	eb06 0308 	add.w	r3, r6, r8
90013330:	9309      	str	r3, [sp, #36]	; 0x24
90013332:	9b04      	ldr	r3, [sp, #16]
90013334:	1aee      	subs	r6, r5, r3
90013336:	1076      	asrs	r6, r6, #1
90013338:	f1ba 0f00 	cmp.w	sl, #0
9001333c:	d011      	beq.n	90013362 <EwParseFlowString+0x4fe>
9001333e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013340:	4650      	mov	r0, sl
90013342:	1ae1      	subs	r1, r4, r3
90013344:	104a      	asrs	r2, r1, #1
90013346:	ebc6 0161 	rsb	r1, r6, r1, asr #1
9001334a:	3101      	adds	r1, #1
9001334c:	e9cd 1202 	strd	r1, r2, [sp, #8]
90013350:	f003 f9e1 	bl	90016716 <EwBidiCompleteRow>
90013354:	9b04      	ldr	r3, [sp, #16]
90013356:	4650      	mov	r0, sl
90013358:	3302      	adds	r3, #2
9001335a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001335e:	f003 fa05 	bl	9001676c <EwBidiReorderChars>
90013362:	9b04      	ldr	r3, [sp, #16]
90013364:	f04f 0200 	mov.w	r2, #0
90013368:	2700      	movs	r7, #0
9001336a:	9504      	str	r5, [sp, #16]
9001336c:	801e      	strh	r6, [r3, #0]
9001336e:	462b      	mov	r3, r5
90013370:	46bb      	mov	fp, r7
90013372:	463e      	mov	r6, r7
90013374:	f823 2b02 	strh.w	r2, [r3], #2
90013378:	461d      	mov	r5, r3
9001337a:	9a06      	ldr	r2, [sp, #24]
9001337c:	f04f 33ff 	mov.w	r3, #4294967295
90013380:	9703      	str	r7, [sp, #12]
90013382:	3201      	adds	r2, #1
90013384:	9305      	str	r3, [sp, #20]
90013386:	9206      	str	r2, [sp, #24]
90013388:	9702      	str	r7, [sp, #8]
9001338a:	e5ea      	b.n	90012f62 <EwParseFlowString+0xfe>
9001338c:	9c07      	ldr	r4, [sp, #28]
9001338e:	e7fb      	b.n	90013388 <EwParseFlowString+0x524>
90013390:	f64f 68ff 	movw	r8, #65279	; 0xfeff
90013394:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013398:	4598      	cmp	r8, r3
9001339a:	f43f aedb 	beq.w	90013154 <EwParseFlowString+0x2f0>
9001339e:	aa0f      	add	r2, sp, #60	; 0x3c
900133a0:	4641      	mov	r1, r8
900133a2:	980d      	ldr	r0, [sp, #52]	; 0x34
900133a4:	f7fe fbad 	bl	90011b02 <EwGetGlyphMetrics>
900133a8:	4607      	mov	r7, r0
900133aa:	2800      	cmp	r0, #0
900133ac:	f43f aeb0 	beq.w	90013110 <EwParseFlowString+0x2ac>
900133b0:	f1ba 0f00 	cmp.w	sl, #0
900133b4:	f43f af1e 	beq.w	900131f4 <EwParseFlowString+0x390>
900133b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900133ba:	4650      	mov	r0, sl
900133bc:	1ae1      	subs	r1, r4, r3
900133be:	1049      	asrs	r1, r1, #1
900133c0:	f002 f9e6 	bl	90015790 <EwBidiGetCharLevel>
900133c4:	9b05      	ldr	r3, [sp, #20]
900133c6:	9f13      	ldr	r7, [sp, #76]	; 0x4c
900133c8:	4283      	cmp	r3, r0
900133ca:	f47f af17 	bne.w	900131fc <EwParseFlowString+0x398>
900133ce:	07db      	lsls	r3, r3, #31
900133d0:	ee18 0a10 	vmov	r0, s16
900133d4:	bf47      	ittee	mi
900133d6:	465a      	movmi	r2, fp
900133d8:	4641      	movmi	r1, r8
900133da:	4642      	movpl	r2, r8
900133dc:	4659      	movpl	r1, fp
900133de:	f008 ffdd 	bl	9001c39c <EwFntGetKerning>
900133e2:	4407      	add	r7, r0
900133e4:	46c3      	mov	fp, r8
900133e6:	e693      	b.n	90013110 <EwParseFlowString+0x2ac>

900133e8 <EwGetFlowTextAdvance>:
900133e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900133ec:	4607      	mov	r7, r0
900133ee:	4608      	mov	r0, r1
900133f0:	4688      	mov	r8, r1
900133f2:	f00d fd93 	bl	90020f1c <EwGetStringLength>
900133f6:	4606      	mov	r6, r0
900133f8:	b918      	cbnz	r0, 90013402 <EwGetFlowTextAdvance+0x1a>
900133fa:	2500      	movs	r5, #0
900133fc:	4628      	mov	r0, r5
900133fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90013402:	b9c7      	cbnz	r7, 90013436 <EwGetFlowTextAdvance+0x4e>
90013404:	20c9      	movs	r0, #201	; 0xc9
90013406:	f00a f823 	bl	9001d450 <EwError>
9001340a:	e7f6      	b.n	900133fa <EwGetFlowTextAdvance+0x12>
9001340c:	f838 9014 	ldrh.w	r9, [r8, r4, lsl #1]
90013410:	0061      	lsls	r1, r4, #1
90013412:	eb04 0309 	add.w	r3, r4, r9
90013416:	f109 32ff 	add.w	r2, r9, #4294967295
9001341a:	42b3      	cmp	r3, r6
9001341c:	dced      	bgt.n	900133fa <EwGetFlowTextAdvance+0x12>
9001341e:	3102      	adds	r1, #2
90013420:	4638      	mov	r0, r7
90013422:	444c      	add	r4, r9
90013424:	4441      	add	r1, r8
90013426:	f7fd fdc2 	bl	90010fae <EwGetTextAdvance>
9001342a:	4285      	cmp	r5, r0
9001342c:	bfb8      	it	lt
9001342e:	4605      	movlt	r5, r0
90013430:	42b4      	cmp	r4, r6
90013432:	dbeb      	blt.n	9001340c <EwGetFlowTextAdvance+0x24>
90013434:	e7e2      	b.n	900133fc <EwGetFlowTextAdvance+0x14>
90013436:	2500      	movs	r5, #0
90013438:	2401      	movs	r4, #1
9001343a:	e7f9      	b.n	90013430 <EwGetFlowTextAdvance+0x48>

9001343c <EwCreateAttrSet>:
9001343c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013440:	ea20 77e0 	bic.w	r7, r0, r0, asr #31
90013444:	ea21 76e1 	bic.w	r6, r1, r1, asr #31
90013448:	ea22 78e2 	bic.w	r8, r2, r2, asr #31
9001344c:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
90013450:	bfa8      	it	ge
90013452:	f44f 7780 	movge.w	r7, #256	; 0x100
90013456:	f5b6 7f80 	cmp.w	r6, #256	; 0x100
9001345a:	bfa8      	it	ge
9001345c:	f44f 7680 	movge.w	r6, #256	; 0x100
90013460:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
90013464:	ea4f 0a87 	mov.w	sl, r7, lsl #2
90013468:	bfa8      	it	ge
9001346a:	f44f 7880 	movge.w	r8, #256	; 0x100
9001346e:	ea4f 0986 	mov.w	r9, r6, lsl #2
90013472:	ea4f 0188 	mov.w	r1, r8, lsl #2
90013476:	3118      	adds	r1, #24
90013478:	eb01 0186 	add.w	r1, r1, r6, lsl #2
9001347c:	eb01 0487 	add.w	r4, r1, r7, lsl #2
90013480:	4620      	mov	r0, r4
90013482:	f013 fc17 	bl	90026cb4 <EwAlloc>
90013486:	4605      	mov	r5, r0
90013488:	b940      	cbnz	r0, 9001349c <EwCreateAttrSet+0x60>
9001348a:	2013      	movs	r0, #19
9001348c:	f00a ff92 	bl	9001e3b4 <EwImmediateReclaimMemory>
90013490:	2800      	cmp	r0, #0
90013492:	d1f5      	bne.n	90013480 <EwCreateAttrSet+0x44>
90013494:	2013      	movs	r0, #19
90013496:	f009 ffdb 	bl	9001d450 <EwError>
9001349a:	e021      	b.n	900134e0 <EwCreateAttrSet+0xa4>
9001349c:	4621      	mov	r1, r4
9001349e:	f013 fc31 	bl	90026d04 <EwZero>
900134a2:	f105 0318 	add.w	r3, r5, #24
900134a6:	f8c5 8008 	str.w	r8, [r5, #8]
900134aa:	60eb      	str	r3, [r5, #12]
900134ac:	4453      	add	r3, sl
900134ae:	612b      	str	r3, [r5, #16]
900134b0:	444b      	add	r3, r9
900134b2:	616b      	str	r3, [r5, #20]
900134b4:	4b0c      	ldr	r3, [pc, #48]	; (900134e8 <EwCreateAttrSet+0xac>)
900134b6:	6819      	ldr	r1, [r3, #0]
900134b8:	4421      	add	r1, r4
900134ba:	e9c5 7600 	strd	r7, r6, [r5]
900134be:	6019      	str	r1, [r3, #0]
900134c0:	4b0a      	ldr	r3, [pc, #40]	; (900134ec <EwCreateAttrSet+0xb0>)
900134c2:	681a      	ldr	r2, [r3, #0]
900134c4:	4291      	cmp	r1, r2
900134c6:	dd00      	ble.n	900134ca <EwCreateAttrSet+0x8e>
900134c8:	6019      	str	r1, [r3, #0]
900134ca:	4b09      	ldr	r3, [pc, #36]	; (900134f0 <EwCreateAttrSet+0xb4>)
900134cc:	4a09      	ldr	r2, [pc, #36]	; (900134f4 <EwCreateAttrSet+0xb8>)
900134ce:	681b      	ldr	r3, [r3, #0]
900134d0:	6812      	ldr	r2, [r2, #0]
900134d2:	4413      	add	r3, r2
900134d4:	4419      	add	r1, r3
900134d6:	4b08      	ldr	r3, [pc, #32]	; (900134f8 <EwCreateAttrSet+0xbc>)
900134d8:	681a      	ldr	r2, [r3, #0]
900134da:	4291      	cmp	r1, r2
900134dc:	dd00      	ble.n	900134e0 <EwCreateAttrSet+0xa4>
900134de:	6019      	str	r1, [r3, #0]
900134e0:	4628      	mov	r0, r5
900134e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900134e6:	bf00      	nop
900134e8:	200002bc 	.word	0x200002bc
900134ec:	200002d8 	.word	0x200002d8
900134f0:	200002ac 	.word	0x200002ac
900134f4:	200002b8 	.word	0x200002b8
900134f8:	200002c0 	.word	0x200002c0

900134fc <EwFreeAttrSet>:
900134fc:	b410      	push	{r4}
900134fe:	b1b8      	cbz	r0, 90013530 <EwFreeAttrSet+0x34>
90013500:	490d      	ldr	r1, [pc, #52]	; (90013538 <EwFreeAttrSet+0x3c>)
90013502:	6804      	ldr	r4, [r0, #0]
90013504:	680a      	ldr	r2, [r1, #0]
90013506:	3a18      	subs	r2, #24
90013508:	eba2 0284 	sub.w	r2, r2, r4, lsl #2
9001350c:	6844      	ldr	r4, [r0, #4]
9001350e:	eba2 0284 	sub.w	r2, r2, r4, lsl #2
90013512:	6884      	ldr	r4, [r0, #8]
90013514:	eba2 0284 	sub.w	r2, r2, r4, lsl #2
90013518:	f85d 4b04 	ldr.w	r4, [sp], #4
9001351c:	600a      	str	r2, [r1, #0]
9001351e:	2200      	movs	r2, #0
90013520:	e9c0 2200 	strd	r2, r2, [r0]
90013524:	e9c0 2202 	strd	r2, r2, [r0, #8]
90013528:	e9c0 2204 	strd	r2, r2, [r0, #16]
9001352c:	f013 bbc4 	b.w	90026cb8 <EwFree>
90013530:	f85d 4b04 	ldr.w	r4, [sp], #4
90013534:	4770      	bx	lr
90013536:	bf00      	nop
90013538:	200002bc 	.word	0x200002bc

9001353c <EwGetNoOfAttrFonts>:
9001353c:	b100      	cbz	r0, 90013540 <EwGetNoOfAttrFonts+0x4>
9001353e:	6800      	ldr	r0, [r0, #0]
90013540:	4770      	bx	lr

90013542 <EwGetNoOfAttrBitmaps>:
90013542:	b100      	cbz	r0, 90013546 <EwGetNoOfAttrBitmaps+0x4>
90013544:	6840      	ldr	r0, [r0, #4]
90013546:	4770      	bx	lr

90013548 <EwGetNoOfAttrColors>:
90013548:	b100      	cbz	r0, 9001354c <EwGetNoOfAttrColors+0x4>
9001354a:	6880      	ldr	r0, [r0, #8]
9001354c:	4770      	bx	lr

9001354e <EwGetAttrFont>:
9001354e:	b148      	cbz	r0, 90013564 <EwGetAttrFont+0x16>
90013550:	2900      	cmp	r1, #0
90013552:	db06      	blt.n	90013562 <EwGetAttrFont+0x14>
90013554:	6803      	ldr	r3, [r0, #0]
90013556:	428b      	cmp	r3, r1
90013558:	dd03      	ble.n	90013562 <EwGetAttrFont+0x14>
9001355a:	68c3      	ldr	r3, [r0, #12]
9001355c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90013560:	4770      	bx	lr
90013562:	2000      	movs	r0, #0
90013564:	4770      	bx	lr

90013566 <EwGetAttrBitmap>:
90013566:	b148      	cbz	r0, 9001357c <EwGetAttrBitmap+0x16>
90013568:	2900      	cmp	r1, #0
9001356a:	db06      	blt.n	9001357a <EwGetAttrBitmap+0x14>
9001356c:	6843      	ldr	r3, [r0, #4]
9001356e:	428b      	cmp	r3, r1
90013570:	dd03      	ble.n	9001357a <EwGetAttrBitmap+0x14>
90013572:	6903      	ldr	r3, [r0, #16]
90013574:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90013578:	4770      	bx	lr
9001357a:	2000      	movs	r0, #0
9001357c:	4770      	bx	lr
9001357e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013582:	460c      	mov	r4, r1
90013584:	4d9e      	ldr	r5, [pc, #632]	; (90013800 <EwGetAttrBitmap+0x29a>)
90013586:	4e9f      	ldr	r6, [pc, #636]	; (90013804 <EwGetAttrBitmap+0x29e>)
90013588:	4f9f      	ldr	r7, [pc, #636]	; (90013808 <EwGetAttrBitmap+0x2a2>)
9001358a:	ed2d 8b02 	vpush	{d8}
9001358e:	ee08 0a10 	vmov	s16, r0
90013592:	b0b5      	sub	sp, #212	; 0xd4
90013594:	9224      	str	r2, [sp, #144]	; 0x90
90013596:	9311      	str	r3, [sp, #68]	; 0x44
90013598:	910a      	str	r1, [sp, #40]	; 0x28
9001359a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001359c:	881b      	ldrh	r3, [r3, #0]
9001359e:	b1cb      	cbz	r3, 900135d4 <EwGetAttrBitmap+0x6e>
900135a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900135a2:	2b7b      	cmp	r3, #123	; 0x7b
900135a4:	f102 0802 	add.w	r8, r2, #2
900135a8:	d163      	bne.n	90013672 <EwGetAttrBitmap+0x10c>
900135aa:	4629      	mov	r1, r5
900135ac:	4640      	mov	r0, r8
900135ae:	f7ff fb53 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900135b2:	b978      	cbnz	r0, 900135d4 <EwGetAttrBitmap+0x6e>
900135b4:	4631      	mov	r1, r6
900135b6:	4640      	mov	r0, r8
900135b8:	f7ff fb4e 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900135bc:	b950      	cbnz	r0, 900135d4 <EwGetAttrBitmap+0x6e>
900135be:	4639      	mov	r1, r7
900135c0:	4640      	mov	r0, r8
900135c2:	f7ff fb49 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900135c6:	b928      	cbnz	r0, 900135d4 <EwGetAttrBitmap+0x6e>
900135c8:	4990      	ldr	r1, [pc, #576]	; (9001380c <EwGetAttrBitmap+0x2a6>)
900135ca:	4640      	mov	r0, r8
900135cc:	f7ff fb44 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900135d0:	2800      	cmp	r0, #0
900135d2:	d057      	beq.n	90013684 <EwGetAttrBitmap+0x11e>
900135d4:	2100      	movs	r1, #0
900135d6:	ee18 0a10 	vmov	r0, s16
900135da:	f7ff ffb8 	bl	9001354e <EwGetAttrFont>
900135de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900135e0:	900c      	str	r0, [sp, #48]	; 0x30
900135e2:	1b1e      	subs	r6, r3, r4
900135e4:	9105      	str	r1, [sp, #20]
900135e6:	9109      	str	r1, [sp, #36]	; 0x24
900135e8:	1075      	asrs	r5, r6, #1
900135ea:	3602      	adds	r6, #2
900135ec:	9104      	str	r1, [sp, #16]
900135ee:	3501      	adds	r5, #1
900135f0:	00eb      	lsls	r3, r5, #3
900135f2:	00ad      	lsls	r5, r5, #2
900135f4:	9328      	str	r3, [sp, #160]	; 0xa0
900135f6:	9b04      	ldr	r3, [sp, #16]
900135f8:	b91b      	cbnz	r3, 90013602 <EwGetAttrBitmap+0x9c>
900135fa:	4630      	mov	r0, r6
900135fc:	f013 fb5a 	bl	90026cb4 <EwAlloc>
90013600:	9004      	str	r0, [sp, #16]
90013602:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013604:	b91b      	cbnz	r3, 9001360e <EwGetAttrBitmap+0xa8>
90013606:	4628      	mov	r0, r5
90013608:	f013 fb54 	bl	90026cb4 <EwAlloc>
9001360c:	9009      	str	r0, [sp, #36]	; 0x24
9001360e:	9b05      	ldr	r3, [sp, #20]
90013610:	b91b      	cbnz	r3, 9001361a <EwGetAttrBitmap+0xb4>
90013612:	4630      	mov	r0, r6
90013614:	f013 fb4e 	bl	90026cb4 <EwAlloc>
90013618:	9005      	str	r0, [sp, #20]
9001361a:	9b04      	ldr	r3, [sp, #16]
9001361c:	b123      	cbz	r3, 90013628 <EwGetAttrBitmap+0xc2>
9001361e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013620:	b113      	cbz	r3, 90013628 <EwGetAttrBitmap+0xc2>
90013622:	9b05      	ldr	r3, [sp, #20]
90013624:	2b00      	cmp	r3, #0
90013626:	d131      	bne.n	9001368c <EwGetAttrBitmap+0x126>
90013628:	2017      	movs	r0, #23
9001362a:	f00a fec3 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001362e:	2800      	cmp	r0, #0
90013630:	d1e1      	bne.n	900135f6 <EwGetAttrBitmap+0x90>
90013632:	9b04      	ldr	r3, [sp, #16]
90013634:	b11b      	cbz	r3, 9001363e <EwGetAttrBitmap+0xd8>
90013636:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013638:	b10b      	cbz	r3, 9001363e <EwGetAttrBitmap+0xd8>
9001363a:	9b05      	ldr	r3, [sp, #20]
9001363c:	bb33      	cbnz	r3, 9001368c <EwGetAttrBitmap+0x126>
9001363e:	2017      	movs	r0, #23
90013640:	f009 ff06 	bl	9001d450 <EwError>
90013644:	9b04      	ldr	r3, [sp, #16]
90013646:	b113      	cbz	r3, 9001364e <EwGetAttrBitmap+0xe8>
90013648:	4618      	mov	r0, r3
9001364a:	f013 fb35 	bl	90026cb8 <EwFree>
9001364e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013650:	b113      	cbz	r3, 90013658 <EwGetAttrBitmap+0xf2>
90013652:	4618      	mov	r0, r3
90013654:	f013 fb30 	bl	90026cb8 <EwFree>
90013658:	9b05      	ldr	r3, [sp, #20]
9001365a:	b123      	cbz	r3, 90013666 <EwGetAttrBitmap+0x100>
9001365c:	4618      	mov	r0, r3
9001365e:	f013 fb2b 	bl	90026cb8 <EwFree>
90013662:	2300      	movs	r3, #0
90013664:	9305      	str	r3, [sp, #20]
90013666:	9805      	ldr	r0, [sp, #20]
90013668:	b035      	add	sp, #212	; 0xd4
9001366a:	ecbd 8b02 	vpop	{d8}
9001366e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013672:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013674:	2b25      	cmp	r3, #37	; 0x25
90013676:	8852      	ldrh	r2, [r2, #2]
90013678:	d104      	bne.n	90013684 <EwGetAttrBitmap+0x11e>
9001367a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001367c:	2a00      	cmp	r2, #0
9001367e:	bf18      	it	ne
90013680:	4643      	movne	r3, r8
90013682:	930a      	str	r3, [sp, #40]	; 0x28
90013684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90013686:	3302      	adds	r3, #2
90013688:	930a      	str	r3, [sp, #40]	; 0x28
9001368a:	e786      	b.n	9001359a <EwGetAttrBitmap+0x34>
9001368c:	4960      	ldr	r1, [pc, #384]	; (90013810 <EwGetAttrBitmap+0x2aa>)
9001368e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
90013690:	680b      	ldr	r3, [r1, #0]
90013692:	9e05      	ldr	r6, [sp, #20]
90013694:	441a      	add	r2, r3
90013696:	4b5f      	ldr	r3, [pc, #380]	; (90013814 <EwGetAttrBitmap+0x2ae>)
90013698:	9f09      	ldr	r7, [sp, #36]	; 0x24
9001369a:	600a      	str	r2, [r1, #0]
9001369c:	6819      	ldr	r1, [r3, #0]
9001369e:	9d04      	ldr	r5, [sp, #16]
900136a0:	428a      	cmp	r2, r1
900136a2:	495d      	ldr	r1, [pc, #372]	; (90013818 <EwGetAttrBitmap+0x2b2>)
900136a4:	f8df b184 	ldr.w	fp, [pc, #388]	; 9001382c <EwGetAttrBitmap+0x2c6>
900136a8:	bfc8      	it	gt
900136aa:	601a      	strgt	r2, [r3, #0]
900136ac:	4b5b      	ldr	r3, [pc, #364]	; (9001381c <EwGetAttrBitmap+0x2b6>)
900136ae:	6809      	ldr	r1, [r1, #0]
900136b0:	681b      	ldr	r3, [r3, #0]
900136b2:	440b      	add	r3, r1
900136b4:	4413      	add	r3, r2
900136b6:	4a5a      	ldr	r2, [pc, #360]	; (90013820 <EwGetAttrBitmap+0x2ba>)
900136b8:	6811      	ldr	r1, [r2, #0]
900136ba:	428b      	cmp	r3, r1
900136bc:	bfc8      	it	gt
900136be:	6013      	strgt	r3, [r2, #0]
900136c0:	2300      	movs	r3, #0
900136c2:	4698      	mov	r8, r3
900136c4:	469a      	mov	sl, r3
900136c6:	9310      	str	r3, [sp, #64]	; 0x40
900136c8:	e9cd 332c 	strd	r3, r3, [sp, #176]	; 0xb0
900136cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900136ce:	42a3      	cmp	r3, r4
900136d0:	d83c      	bhi.n	9001374c <EwGetAttrBitmap+0x1e6>
900136d2:	2300      	movs	r3, #0
900136d4:	802b      	strh	r3, [r5, #0]
900136d6:	603b      	str	r3, [r7, #0]
900136d8:	8033      	strh	r3, [r6, #0]
900136da:	9b04      	ldr	r3, [sp, #16]
900136dc:	1aeb      	subs	r3, r5, r3
900136de:	105b      	asrs	r3, r3, #1
900136e0:	ee08 3a90 	vmov	s17, r3
900136e4:	9b04      	ldr	r3, [sp, #16]
900136e6:	42ab      	cmp	r3, r5
900136e8:	f040 8148 	bne.w	9001397c <EwGetAttrBitmap+0x416>
900136ec:	f04f 0900 	mov.w	r9, #0
900136f0:	f8cd 9064 	str.w	r9, [sp, #100]	; 0x64
900136f4:	2300      	movs	r3, #0
900136f6:	9a42      	ldr	r2, [sp, #264]	; 0x108
900136f8:	6013      	str	r3, [r2, #0]
900136fa:	9a43      	ldr	r2, [sp, #268]	; 0x10c
900136fc:	930e      	str	r3, [sp, #56]	; 0x38
900136fe:	6013      	str	r3, [r2, #0]
90013700:	9315      	str	r3, [sp, #84]	; 0x54
90013702:	9325      	str	r3, [sp, #148]	; 0x94
90013704:	931e      	str	r3, [sp, #120]	; 0x78
90013706:	9303      	str	r3, [sp, #12]
90013708:	9b03      	ldr	r3, [sp, #12]
9001370a:	ee18 2a90 	vmov	r2, s17
9001370e:	4293      	cmp	r3, r2
90013710:	f2c0 8158 	blt.w	900139c4 <EwGetAttrBitmap+0x45e>
90013714:	9804      	ldr	r0, [sp, #16]
90013716:	f013 facf 	bl	90026cb8 <EwFree>
9001371a:	9809      	ldr	r0, [sp, #36]	; 0x24
9001371c:	f013 facc 	bl	90026cb8 <EwFree>
90013720:	9805      	ldr	r0, [sp, #20]
90013722:	f013 fac9 	bl	90026cb8 <EwFree>
90013726:	4a3a      	ldr	r2, [pc, #232]	; (90013810 <EwGetAttrBitmap+0x2aa>)
90013728:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001372a:	6813      	ldr	r3, [r2, #0]
9001372c:	1a5b      	subs	r3, r3, r1
9001372e:	6013      	str	r3, [r2, #0]
90013730:	f1b9 0f00 	cmp.w	r9, #0
90013734:	d002      	beq.n	9001373c <EwGetAttrBitmap+0x1d6>
90013736:	4648      	mov	r0, r9
90013738:	f002 f810 	bl	9001575c <EwFreeBidi>
9001373c:	9b45      	ldr	r3, [sp, #276]	; 0x114
9001373e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013740:	681b      	ldr	r3, [r3, #0]
90013742:	4413      	add	r3, r2
90013744:	9a45      	ldr	r2, [sp, #276]	; 0x114
90013746:	6013      	str	r3, [r2, #0]
90013748:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001374a:	e78b      	b.n	90013664 <EwGetAttrBitmap+0xfe>
9001374c:	f8b4 9000 	ldrh.w	r9, [r4]
90013750:	f1b9 0f7b 	cmp.w	r9, #123	; 0x7b
90013754:	f040 80d7 	bne.w	90013906 <EwGetAttrBitmap+0x3a0>
90013758:	4932      	ldr	r1, [pc, #200]	; (90013824 <EwGetAttrBitmap+0x2be>)
9001375a:	4620      	mov	r0, r4
9001375c:	f7ff fa7c 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
90013760:	2800      	cmp	r0, #0
90013762:	d067      	beq.n	90013834 <EwGetAttrBitmap+0x2ce>
90013764:	2300      	movs	r3, #0
90013766:	f8b4 9008 	ldrh.w	r9, [r4, #8]
9001376a:	e9cd 332e 	strd	r3, r3, [sp, #184]	; 0xb8
9001376e:	f1a9 0362 	sub.w	r3, r9, #98	; 0x62
90013772:	b29b      	uxth	r3, r3
90013774:	2b12      	cmp	r3, #18
90013776:	d804      	bhi.n	90013782 <EwGetAttrBitmap+0x21c>
90013778:	4a2b      	ldr	r2, [pc, #172]	; (90013828 <EwGetAttrBitmap+0x2c2>)
9001377a:	fa22 f303 	lsr.w	r3, r2, r3
9001377e:	07da      	lsls	r2, r3, #31
90013780:	d43b      	bmi.n	900137fa <EwGetAttrBitmap+0x294>
90013782:	f104 0008 	add.w	r0, r4, #8
90013786:	f04f 096d 	mov.w	r9, #109	; 0x6d
9001378a:	a92e      	add	r1, sp, #184	; 0xb8
9001378c:	f7ff fa06 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90013790:	8803      	ldrh	r3, [r0, #0]
90013792:	2b2e      	cmp	r3, #46	; 0x2e
90013794:	d103      	bne.n	9001379e <EwGetAttrBitmap+0x238>
90013796:	a92f      	add	r1, sp, #188	; 0xbc
90013798:	3002      	adds	r0, #2
9001379a:	f7ff f9ff 	bl	90012b9c <EwCanDiscardSurface+0x11c>
9001379e:	8803      	ldrh	r3, [r0, #0]
900137a0:	2b7d      	cmp	r3, #125	; 0x7d
900137a2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
900137a4:	bf08      	it	eq
900137a6:	3002      	addeq	r0, #2
900137a8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
900137ac:	bfa4      	itt	ge
900137ae:	2300      	movge	r3, #0
900137b0:	932f      	strge	r3, [sp, #188]	; 0xbc
900137b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900137b4:	2bff      	cmp	r3, #255	; 0xff
900137b6:	bfc4      	itt	gt
900137b8:	2300      	movgt	r3, #0
900137ba:	932e      	strgt	r3, [sp, #184]	; 0xb8
900137bc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900137c0:	f1b9 0f74 	cmp.w	r9, #116	; 0x74
900137c4:	f825 3b02 	strh.w	r3, [r5], #2
900137c8:	d032      	beq.n	90013830 <EwGetAttrBitmap+0x2ca>
900137ca:	f1b9 0f62 	cmp.w	r9, #98	; 0x62
900137ce:	bf0c      	ite	eq
900137d0:	2204      	moveq	r2, #4
900137d2:	2203      	movne	r2, #3
900137d4:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900137d6:	992c      	ldr	r1, [sp, #176]	; 0xb0
900137d8:	031b      	lsls	r3, r3, #12
900137da:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
900137de:	992f      	ldr	r1, [sp, #188]	; 0xbc
900137e0:	ea43 5101 	orr.w	r1, r3, r1, lsl #20
900137e4:	430a      	orrs	r2, r1
900137e6:	f847 2b04 	str.w	r2, [r7], #4
900137ea:	f1b8 0f00 	cmp.w	r8, #0
900137ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
900137f0:	bf08      	it	eq
900137f2:	2300      	moveq	r3, #0
900137f4:	f826 3b02 	strh.w	r3, [r6], #2
900137f8:	e02f      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
900137fa:	f104 000a 	add.w	r0, r4, #10
900137fe:	e7c4      	b.n	9001378a <EwGetAttrBitmap+0x224>
90013800:	90034971 	.word	0x90034971
90013804:	90034976 	.word	0x90034976
90013808:	9003497b 	.word	0x9003497b
9001380c:	90034945 	.word	0x90034945
90013810:	200002bc 	.word	0x200002bc
90013814:	200002d8 	.word	0x200002d8
90013818:	200002b8 	.word	0x200002b8
9001381c:	200002ac 	.word	0x200002ac
90013820:	200002c0 	.word	0x200002c0
90013824:	90034949 	.word	0x90034949
90013828:	00040801 	.word	0x00040801
9001382c:	90034953 	.word	0x90034953
90013830:	2205      	movs	r2, #5
90013832:	e7cf      	b.n	900137d4 <EwGetAttrBitmap+0x26e>
90013834:	495e      	ldr	r1, [pc, #376]	; (900139b0 <EwGetAttrBitmap+0x44a>)
90013836:	4620      	mov	r0, r4
90013838:	f7ff fa0e 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
9001383c:	b178      	cbz	r0, 9001385e <EwGetAttrBitmap+0x2f8>
9001383e:	a92d      	add	r1, sp, #180	; 0xb4
90013840:	f104 0008 	add.w	r0, r4, #8
90013844:	f7ff f9aa 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90013848:	8803      	ldrh	r3, [r0, #0]
9001384a:	2b7d      	cmp	r3, #125	; 0x7d
9001384c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001384e:	bf08      	it	eq
90013850:	3002      	addeq	r0, #2
90013852:	2bff      	cmp	r3, #255	; 0xff
90013854:	dd01      	ble.n	9001385a <EwGetAttrBitmap+0x2f4>
90013856:	2300      	movs	r3, #0
90013858:	932d      	str	r3, [sp, #180]	; 0xb4
9001385a:	4604      	mov	r4, r0
9001385c:	e736      	b.n	900136cc <EwGetAttrBitmap+0x166>
9001385e:	4659      	mov	r1, fp
90013860:	4620      	mov	r0, r4
90013862:	f7ff f9f9 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
90013866:	b170      	cbz	r0, 90013886 <EwGetAttrBitmap+0x320>
90013868:	a92c      	add	r1, sp, #176	; 0xb0
9001386a:	f104 0008 	add.w	r0, r4, #8
9001386e:	f7ff f995 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90013872:	8803      	ldrh	r3, [r0, #0]
90013874:	2b7d      	cmp	r3, #125	; 0x7d
90013876:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90013878:	bf08      	it	eq
9001387a:	3002      	addeq	r0, #2
9001387c:	2bff      	cmp	r3, #255	; 0xff
9001387e:	ddec      	ble.n	9001385a <EwGetAttrBitmap+0x2f4>
90013880:	2300      	movs	r3, #0
90013882:	932c      	str	r3, [sp, #176]	; 0xb0
90013884:	e7e9      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
90013886:	494b      	ldr	r1, [pc, #300]	; (900139b4 <EwGetAttrBitmap+0x44e>)
90013888:	4620      	mov	r0, r4
9001388a:	f7ff f9e5 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
9001388e:	b120      	cbz	r0, 9001389a <EwGetAttrBitmap+0x334>
90013890:	f104 000a 	add.w	r0, r4, #10
90013894:	f04f 0a01 	mov.w	sl, #1
90013898:	e7df      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
9001389a:	9003      	str	r0, [sp, #12]
9001389c:	4620      	mov	r0, r4
9001389e:	4946      	ldr	r1, [pc, #280]	; (900139b8 <EwGetAttrBitmap+0x452>)
900138a0:	f7ff f9da 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900138a4:	b120      	cbz	r0, 900138b0 <EwGetAttrBitmap+0x34a>
900138a6:	9b03      	ldr	r3, [sp, #12]
900138a8:	f104 000a 	add.w	r0, r4, #10
900138ac:	469a      	mov	sl, r3
900138ae:	e7d4      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
900138b0:	4942      	ldr	r1, [pc, #264]	; (900139bc <EwGetAttrBitmap+0x456>)
900138b2:	4620      	mov	r0, r4
900138b4:	f7ff f9d0 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900138b8:	b1d0      	cbz	r0, 900138f0 <EwGetAttrBitmap+0x38a>
900138ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
900138bc:	f104 000a 	add.w	r0, r4, #10
900138c0:	3301      	adds	r3, #1
900138c2:	9310      	str	r3, [sp, #64]	; 0x40
900138c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900138c6:	8803      	ldrh	r3, [r0, #0]
900138c8:	4282      	cmp	r2, r0
900138ca:	d90d      	bls.n	900138e8 <EwGetAttrBitmap+0x382>
900138cc:	2b7d      	cmp	r3, #125	; 0x7d
900138ce:	d00d      	beq.n	900138ec <EwGetAttrBitmap+0x386>
900138d0:	2b7b      	cmp	r3, #123	; 0x7b
900138d2:	d102      	bne.n	900138da <EwGetAttrBitmap+0x374>
900138d4:	f04f 0801 	mov.w	r8, #1
900138d8:	e7bf      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
900138da:	9b46      	ldr	r3, [sp, #280]	; 0x118
900138dc:	3002      	adds	r0, #2
900138de:	9a46      	ldr	r2, [sp, #280]	; 0x118
900138e0:	681b      	ldr	r3, [r3, #0]
900138e2:	3301      	adds	r3, #1
900138e4:	6013      	str	r3, [r2, #0]
900138e6:	e7ed      	b.n	900138c4 <EwGetAttrBitmap+0x35e>
900138e8:	2b7d      	cmp	r3, #125	; 0x7d
900138ea:	d1f3      	bne.n	900138d4 <EwGetAttrBitmap+0x36e>
900138ec:	3002      	adds	r0, #2
900138ee:	e7f1      	b.n	900138d4 <EwGetAttrBitmap+0x36e>
900138f0:	9003      	str	r0, [sp, #12]
900138f2:	4620      	mov	r0, r4
900138f4:	4932      	ldr	r1, [pc, #200]	; (900139c0 <EwGetAttrBitmap+0x45a>)
900138f6:	f7ff f9af 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900138fa:	9b03      	ldr	r3, [sp, #12]
900138fc:	b330      	cbz	r0, 9001394c <EwGetAttrBitmap+0x3e6>
900138fe:	f104 000a 	add.w	r0, r4, #10
90013902:	4698      	mov	r8, r3
90013904:	e7a9      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
90013906:	f1b9 0f5e 	cmp.w	r9, #94	; 0x5e
9001390a:	f104 0002 	add.w	r0, r4, #2
9001390e:	d10e      	bne.n	9001392e <EwGetAttrBitmap+0x3c8>
90013910:	f242 030b 	movw	r3, #8203	; 0x200b
90013914:	f825 3b02 	strh.w	r3, [r5], #2
90013918:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001391a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
9001391c:	031b      	lsls	r3, r3, #12
9001391e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
90013922:	f10a 0201 	add.w	r2, sl, #1
90013926:	4313      	orrs	r3, r2
90013928:	f847 3b04 	str.w	r3, [r7], #4
9001392c:	e75d      	b.n	900137ea <EwGetAttrBitmap+0x284>
9001392e:	f1b9 0f7e 	cmp.w	r9, #126	; 0x7e
90013932:	d101      	bne.n	90013938 <EwGetAttrBitmap+0x3d2>
90013934:	23ad      	movs	r3, #173	; 0xad
90013936:	e7ed      	b.n	90013914 <EwGetAttrBitmap+0x3ae>
90013938:	f1b9 0f25 	cmp.w	r9, #37	; 0x25
9001393c:	d106      	bne.n	9001394c <EwGetAttrBitmap+0x3e6>
9001393e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90013940:	f8b4 9002 	ldrh.w	r9, [r4, #2]
90013944:	4283      	cmp	r3, r0
90013946:	f43f aec4 	beq.w	900136d2 <EwGetAttrBitmap+0x16c>
9001394a:	4604      	mov	r4, r0
9001394c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001394e:	f1b8 0f00 	cmp.w	r8, #0
90013952:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90013954:	f104 0002 	add.w	r0, r4, #2
90013958:	ea4f 3303 	mov.w	r3, r3, lsl #12
9001395c:	f825 9b02 	strh.w	r9, [r5], #2
90013960:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
90013964:	f10a 0201 	add.w	r2, sl, #1
90013968:	ea43 0302 	orr.w	r3, r3, r2
9001396c:	f847 3b04 	str.w	r3, [r7], #4
90013970:	9b10      	ldr	r3, [sp, #64]	; 0x40
90013972:	bf08      	it	eq
90013974:	2300      	moveq	r3, #0
90013976:	f826 3b02 	strh.w	r3, [r6], #2
9001397a:	e76e      	b.n	9001385a <EwGetAttrBitmap+0x2f4>
9001397c:	9b40      	ldr	r3, [sp, #256]	; 0x100
9001397e:	2b00      	cmp	r3, #0
90013980:	f43f aeb4 	beq.w	900136ec <EwGetAttrBitmap+0x186>
90013984:	ee18 0a90 	vmov	r0, s17
90013988:	f001 feab 	bl	900156e2 <EwCreateBidi>
9001398c:	4681      	mov	r9, r0
9001398e:	2800      	cmp	r0, #0
90013990:	f43f aeac 	beq.w	900136ec <EwGetAttrBitmap+0x186>
90013994:	f04f 33ff 	mov.w	r3, #4294967295
90013998:	ee18 2a90 	vmov	r2, s17
9001399c:	9904      	ldr	r1, [sp, #16]
9001399e:	f001 ff05 	bl	900157ac <EwBidiInit>
900139a2:	2800      	cmp	r0, #0
900139a4:	f040 84f1 	bne.w	9001438a <EwGetAttrBitmap+0xe24>
900139a8:	4648      	mov	r0, r9
900139aa:	f001 fed7 	bl	9001575c <EwFreeBidi>
900139ae:	e69d      	b.n	900136ec <EwGetAttrBitmap+0x186>
900139b0:	9003494e 	.word	0x9003494e
900139b4:	90034958 	.word	0x90034958
900139b8:	9003495e 	.word	0x9003495e
900139bc:	90034964 	.word	0x90034964
900139c0:	9003496a 	.word	0x9003496a
900139c4:	9b03      	ldr	r3, [sp, #12]
900139c6:	f04f 0a00 	mov.w	sl, #0
900139ca:	005b      	lsls	r3, r3, #1
900139cc:	46d0      	mov	r8, sl
900139ce:	46d3      	mov	fp, sl
900139d0:	4654      	mov	r4, sl
900139d2:	932b      	str	r3, [sp, #172]	; 0xac
900139d4:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
900139d8:	f8cd a058 	str.w	sl, [sp, #88]	; 0x58
900139dc:	f8cd a018 	str.w	sl, [sp, #24]
900139e0:	f8cd a020 	str.w	sl, [sp, #32]
900139e4:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
900139e8:	f8cd a074 	str.w	sl, [sp, #116]	; 0x74
900139ec:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
900139f0:	f8cd a070 	str.w	sl, [sp, #112]	; 0x70
900139f4:	f8cd a08c 	str.w	sl, [sp, #140]	; 0x8c
900139f8:	f8cd a09c 	str.w	sl, [sp, #156]	; 0x9c
900139fc:	f8cd a088 	str.w	sl, [sp, #136]	; 0x88
90013a00:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
90013a04:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
90013a08:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013a0c:	9317      	str	r3, [sp, #92]	; 0x5c
90013a0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013a10:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90013a14:	f04f 32ff 	mov.w	r2, #4294967295
90013a18:	e9cd 3329 	strd	r3, r3, [sp, #164]	; 0xa4
90013a1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90013a1e:	920b      	str	r2, [sp, #44]	; 0x2c
90013a20:	9307      	str	r3, [sp, #28]
90013a22:	4653      	mov	r3, sl
90013a24:	9226      	str	r2, [sp, #152]	; 0x98
90013a26:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90013a28:	9212      	str	r2, [sp, #72]	; 0x48
90013a2a:	9a07      	ldr	r2, [sp, #28]
90013a2c:	8817      	ldrh	r7, [r2, #0]
90013a2e:	2f00      	cmp	r7, #0
90013a30:	d036      	beq.n	90013aa0 <EwGetAttrBitmap+0x53a>
90013a32:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90013a34:	f852 5b04 	ldr.w	r5, [r2], #4
90013a38:	9229      	str	r2, [sp, #164]	; 0xa4
90013a3a:	f005 020f 	and.w	r2, r5, #15
90013a3e:	1e51      	subs	r1, r2, #1
90013a40:	2901      	cmp	r1, #1
90013a42:	d81c      	bhi.n	90013a7e <EwGetAttrBitmap+0x518>
90013a44:	f3c5 3107 	ubfx	r1, r5, #12, #8
90013a48:	9826      	ldr	r0, [sp, #152]	; 0x98
90013a4a:	4281      	cmp	r1, r0
90013a4c:	d017      	beq.n	90013a7e <EwGetAttrBitmap+0x518>
90013a4e:	ee18 0a10 	vmov	r0, s16
90013a52:	930b      	str	r3, [sp, #44]	; 0x2c
90013a54:	9126      	str	r1, [sp, #152]	; 0x98
90013a56:	f7ff fd7a 	bl	9001354e <EwGetAttrFont>
90013a5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90013a5c:	4604      	mov	r4, r0
90013a5e:	2800      	cmp	r0, #0
90013a60:	f040 8468 	bne.w	90014334 <EwGetAttrBitmap+0xdce>
90013a64:	4601      	mov	r1, r0
90013a66:	ee18 0a10 	vmov	r0, s16
90013a6a:	9314      	str	r3, [sp, #80]	; 0x50
90013a6c:	f7ff fd6f 	bl	9001354e <EwGetAttrFont>
90013a70:	f04f 33ff 	mov.w	r3, #4294967295
90013a74:	4604      	mov	r4, r0
90013a76:	4688      	mov	r8, r1
90013a78:	9126      	str	r1, [sp, #152]	; 0x98
90013a7a:	930b      	str	r3, [sp, #44]	; 0x2c
90013a7c:	9b14      	ldr	r3, [sp, #80]	; 0x50
90013a7e:	2f0a      	cmp	r7, #10
90013a80:	d15d      	bne.n	90013b3e <EwGetAttrBitmap+0x5d8>
90013a82:	b16c      	cbz	r4, 90013aa0 <EwGetAttrBitmap+0x53a>
90013a84:	6821      	ldr	r1, [r4, #0]
90013a86:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
90013a8a:	4582      	cmp	sl, r0
90013a8c:	bfb8      	it	lt
90013a8e:	4682      	movlt	sl, r0
90013a90:	428b      	cmp	r3, r1
90013a92:	bfb8      	it	lt
90013a94:	460b      	movlt	r3, r1
90013a96:	9908      	ldr	r1, [sp, #32]
90013a98:	4291      	cmp	r1, r2
90013a9a:	bfb8      	it	lt
90013a9c:	4611      	movlt	r1, r2
90013a9e:	9108      	str	r1, [sp, #32]
90013aa0:	f1bb 0f00 	cmp.w	fp, #0
90013aa4:	d007      	beq.n	90013ab6 <EwGetAttrBitmap+0x550>
90013aa6:	f8bb 2000 	ldrh.w	r2, [fp]
90013aaa:	2aad      	cmp	r2, #173	; 0xad
90013aac:	d103      	bne.n	90013ab6 <EwGetAttrBitmap+0x550>
90013aae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90013ab2:	f8ab 2000 	strh.w	r2, [fp]
90013ab6:	9a08      	ldr	r2, [sp, #32]
90013ab8:	9916      	ldr	r1, [sp, #88]	; 0x58
90013aba:	441a      	add	r2, r3
90013abc:	4291      	cmp	r1, r2
90013abe:	bfb8      	it	lt
90013ac0:	4611      	movlt	r1, r2
90013ac2:	1aca      	subs	r2, r1, r3
90013ac4:	9116      	str	r1, [sp, #88]	; 0x58
90013ac6:	9908      	ldr	r1, [sp, #32]
90013ac8:	1a52      	subs	r2, r2, r1
90013aca:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
90013ace:	eb03 0362 	add.w	r3, r3, r2, asr #1
90013ad2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90013ad4:	931a      	str	r3, [sp, #104]	; 0x68
90013ad6:	9b07      	ldr	r3, [sp, #28]
90013ad8:	1a9b      	subs	r3, r3, r2
90013ada:	105b      	asrs	r3, r3, #1
90013adc:	9307      	str	r3, [sp, #28]
90013ade:	f1b9 0f00 	cmp.w	r9, #0
90013ae2:	d01b      	beq.n	90013b1c <EwGetAttrBitmap+0x5b6>
90013ae4:	9b03      	ldr	r3, [sp, #12]
90013ae6:	4648      	mov	r0, r9
90013ae8:	9a07      	ldr	r2, [sp, #28]
90013aea:	4619      	mov	r1, r3
90013aec:	189a      	adds	r2, r3, r2
90013aee:	9208      	str	r2, [sp, #32]
90013af0:	f002 fe11 	bl	90016716 <EwBidiCompleteRow>
90013af4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90013af6:	4648      	mov	r0, r9
90013af8:	9a08      	ldr	r2, [sp, #32]
90013afa:	9903      	ldr	r1, [sp, #12]
90013afc:	f002 fe36 	bl	9001676c <EwBidiReorderChars>
90013b00:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90013b02:	9a08      	ldr	r2, [sp, #32]
90013b04:	4648      	mov	r0, r9
90013b06:	9903      	ldr	r1, [sp, #12]
90013b08:	f002 fe9b 	bl	90016842 <EwBidiReorderDWords>
90013b0c:	9a05      	ldr	r2, [sp, #20]
90013b0e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90013b10:	4648      	mov	r0, r9
90013b12:	9903      	ldr	r1, [sp, #12]
90013b14:	4413      	add	r3, r2
90013b16:	9a08      	ldr	r2, [sp, #32]
90013b18:	f002 fe28 	bl	9001676c <EwBidiReorderChars>
90013b1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013b1e:	2b61      	cmp	r3, #97	; 0x61
90013b20:	f040 81c8 	bne.w	90013eb4 <EwGetAttrBitmap+0x94e>
90013b24:	9b19      	ldr	r3, [sp, #100]	; 0x64
90013b26:	2b00      	cmp	r3, #0
90013b28:	f040 81e0 	bne.w	90013eec <EwGetAttrBitmap+0x986>
90013b2c:	461d      	mov	r5, r3
90013b2e:	236c      	movs	r3, #108	; 0x6c
90013b30:	9308      	str	r3, [sp, #32]
90013b32:	2400      	movs	r4, #0
90013b34:	46a3      	mov	fp, r4
90013b36:	4626      	mov	r6, r4
90013b38:	941b      	str	r4, [sp, #108]	; 0x6c
90013b3a:	9414      	str	r4, [sp, #80]	; 0x50
90013b3c:	e3c1      	b.n	900142c2 <EwGetAttrBitmap+0xd5c>
90013b3e:	3a03      	subs	r2, #3
90013b40:	9908      	ldr	r1, [sp, #32]
90013b42:	2a02      	cmp	r2, #2
90013b44:	9121      	str	r1, [sp, #132]	; 0x84
90013b46:	e9cd 3a1f 	strd	r3, sl, [sp, #124]	; 0x7c
90013b4a:	f200 83ff 	bhi.w	9001434c <EwGetAttrBitmap+0xde6>
90013b4e:	f3c5 3107 	ubfx	r1, r5, #12, #8
90013b52:	ee18 0a10 	vmov	r0, s16
90013b56:	f7ff fd06 	bl	90013566 <EwGetAttrBitmap>
90013b5a:	b938      	cbnz	r0, 90013b6c <EwGetAttrBitmap+0x606>
90013b5c:	4601      	mov	r1, r0
90013b5e:	ee18 0a10 	vmov	r0, s16
90013b62:	f7ff fd00 	bl	90013566 <EwGetAttrBitmap>
90013b66:	2800      	cmp	r0, #0
90013b68:	f000 816b 	beq.w	90013e42 <EwGetAttrBitmap+0x8dc>
90013b6c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90013b6e:	2600      	movs	r6, #0
90013b70:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
90013b74:	9308      	str	r3, [sp, #32]
90013b76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90013b78:	9614      	str	r6, [sp, #80]	; 0x50
90013b7a:	e9d0 5201 	ldrd	r5, r2, [r0, #4]
90013b7e:	e9cd 661a 	strd	r6, r6, [sp, #104]	; 0x68
90013b82:	f04f 31ff 	mov.w	r1, #4294967295
90013b86:	46b0      	mov	r8, r6
90013b88:	910b      	str	r1, [sp, #44]	; 0x2c
90013b8a:	e12a      	b.n	90013de2 <EwGetAttrBitmap+0x87c>
90013b8c:	2fad      	cmp	r7, #173	; 0xad
90013b8e:	f040 8424 	bne.w	900143da <EwGetAttrBitmap+0xe74>
90013b92:	9a06      	ldr	r2, [sp, #24]
90013b94:	2a00      	cmp	r2, #0
90013b96:	f000 841b 	beq.w	900143d0 <EwGetAttrBitmap+0xe6a>
90013b9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90013b9c:	2a00      	cmp	r2, #0
90013b9e:	f040 8417 	bne.w	900143d0 <EwGetAttrBitmap+0xe6a>
90013ba2:	2c00      	cmp	r4, #0
90013ba4:	f040 80ae 	bne.w	90013d04 <EwGetAttrBitmap+0x79e>
90013ba8:	2500      	movs	r5, #0
90013baa:	462f      	mov	r7, r5
90013bac:	462e      	mov	r6, r5
90013bae:	9513      	str	r5, [sp, #76]	; 0x4c
90013bb0:	9a06      	ldr	r2, [sp, #24]
90013bb2:	9924      	ldr	r1, [sp, #144]	; 0x90
90013bb4:	18b2      	adds	r2, r6, r2
90013bb6:	4291      	cmp	r1, r2
90013bb8:	f2c0 8141 	blt.w	90013e3e <EwGetAttrBitmap+0x8d8>
90013bbc:	b316      	cbz	r6, 90013c04 <EwGetAttrBitmap+0x69e>
90013bbe:	f1bb 0f00 	cmp.w	fp, #0
90013bc2:	d007      	beq.n	90013bd4 <EwGetAttrBitmap+0x66e>
90013bc4:	f8bb 1000 	ldrh.w	r1, [fp]
90013bc8:	29ad      	cmp	r1, #173	; 0xad
90013bca:	bf04      	itt	eq
90013bcc:	f64f 61ff 	movweq	r1, #65279	; 0xfeff
90013bd0:	f8ab 1000 	strheq.w	r1, [fp]
90013bd4:	42bb      	cmp	r3, r7
90013bd6:	9908      	ldr	r1, [sp, #32]
90013bd8:	f8dd b01c 	ldr.w	fp, [sp, #28]
90013bdc:	f04f 0601 	mov.w	r6, #1
90013be0:	bfb8      	it	lt
90013be2:	463b      	movlt	r3, r7
90013be4:	4555      	cmp	r5, sl
90013be6:	931c      	str	r3, [sp, #112]	; 0x70
90013be8:	462b      	mov	r3, r5
90013bea:	bfb8      	it	lt
90013bec:	4653      	movlt	r3, sl
90013bee:	931d      	str	r3, [sp, #116]	; 0x74
90013bf0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013bf2:	428b      	cmp	r3, r1
90013bf4:	bfb8      	it	lt
90013bf6:	460b      	movlt	r3, r1
90013bf8:	9318      	str	r3, [sp, #96]	; 0x60
90013bfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013bfc:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
90013c00:	9b12      	ldr	r3, [sp, #72]	; 0x48
90013c02:	930f      	str	r3, [sp, #60]	; 0x3c
90013c04:	9d06      	ldr	r5, [sp, #24]
90013c06:	9613      	str	r6, [sp, #76]	; 0x4c
90013c08:	9b07      	ldr	r3, [sp, #28]
90013c0a:	3302      	adds	r3, #2
90013c0c:	e9cd 5306 	strd	r5, r3, [sp, #24]
90013c10:	e9dd a320 	ldrd	sl, r3, [sp, #128]	; 0x80
90013c14:	9308      	str	r3, [sp, #32]
90013c16:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90013c18:	e705      	b.n	90013a26 <EwGetAttrBitmap+0x4c0>
90013c1a:	9a06      	ldr	r2, [sp, #24]
90013c1c:	2a00      	cmp	r2, #0
90013c1e:	f040 83a0 	bne.w	90014362 <EwGetAttrBitmap+0xdfc>
90013c22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013c24:	27a0      	movs	r7, #160	; 0xa0
90013c26:	9312      	str	r3, [sp, #72]	; 0x48
90013c28:	f5a7 5301 	sub.w	r3, r7, #8256	; 0x2040
90013c2c:	3b26      	subs	r3, #38	; 0x26
90013c2e:	b29b      	uxth	r3, r3
90013c30:	2b03      	cmp	r3, #3
90013c32:	f240 83e9 	bls.w	90014408 <EwGetAttrBitmap+0xea2>
90013c36:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013c3a:	429f      	cmp	r7, r3
90013c3c:	f000 83e4 	beq.w	90014408 <EwGetAttrBitmap+0xea2>
90013c40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013c42:	9a07      	ldr	r2, [sp, #28]
90013c44:	455a      	cmp	r2, fp
90013c46:	bf18      	it	ne
90013c48:	2300      	movne	r3, #0
90013c4a:	9313      	str	r3, [sp, #76]	; 0x4c
90013c4c:	2c00      	cmp	r4, #0
90013c4e:	f000 80ed 	beq.w	90013e2c <EwGetAttrBitmap+0x8c6>
90013c52:	f242 0326 	movw	r3, #8230	; 0x2026
90013c56:	429f      	cmp	r7, r3
90013c58:	f040 835b 	bne.w	90014312 <EwGetAttrBitmap+0xdac>
90013c5c:	4639      	mov	r1, r7
90013c5e:	4620      	mov	r0, r4
90013c60:	f7fd ff2c 	bl	90011abc <EwIsGlyphAvailable>
90013c64:	9014      	str	r0, [sp, #80]	; 0x50
90013c66:	2800      	cmp	r0, #0
90013c68:	f040 8353 	bne.w	90014312 <EwGetAttrBitmap+0xdac>
90013c6c:	aa2f      	add	r2, sp, #188	; 0xbc
90013c6e:	212e      	movs	r1, #46	; 0x2e
90013c70:	4620      	mov	r0, r4
90013c72:	f7fd ff46 	bl	90011b02 <EwGetGlyphMetrics>
90013c76:	2800      	cmp	r0, #0
90013c78:	f000 834b 	beq.w	90014312 <EwGetAttrBitmap+0xdac>
90013c7c:	f1b9 0f00 	cmp.w	r9, #0
90013c80:	d072      	beq.n	90013d68 <EwGetAttrBitmap+0x802>
90013c82:	9b07      	ldr	r3, [sp, #28]
90013c84:	4648      	mov	r0, r9
90013c86:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90013c88:	1a99      	subs	r1, r3, r2
90013c8a:	9b03      	ldr	r3, [sp, #12]
90013c8c:	eb03 0161 	add.w	r1, r3, r1, asr #1
90013c90:	f001 fd7e 	bl	90015790 <EwBidiGetCharLevel>
90013c94:	4682      	mov	sl, r0
90013c96:	222e      	movs	r2, #46	; 0x2e
90013c98:	6960      	ldr	r0, [r4, #20]
90013c9a:	9d33      	ldr	r5, [sp, #204]	; 0xcc
90013c9c:	4611      	mov	r1, r2
90013c9e:	f008 fb7d 	bl	9001c39c <EwFntGetKerning>
90013ca2:	6823      	ldr	r3, [r4, #0]
90013ca4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90013ca8:	68a6      	ldr	r6, [r4, #8]
90013caa:	931a      	str	r3, [sp, #104]	; 0x68
90013cac:	6863      	ldr	r3, [r4, #4]
90013cae:	eb05 0540 	add.w	r5, r5, r0, lsl #1
90013cb2:	931b      	str	r3, [sp, #108]	; 0x6c
90013cb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90013cb6:	4553      	cmp	r3, sl
90013cb8:	d108      	bne.n	90013ccc <EwGetAttrBitmap+0x766>
90013cba:	f01a 0701 	ands.w	r7, sl, #1
90013cbe:	6960      	ldr	r0, [r4, #20]
90013cc0:	d054      	beq.n	90013d6c <EwGetAttrBitmap+0x806>
90013cc2:	4642      	mov	r2, r8
90013cc4:	212e      	movs	r1, #46	; 0x2e
90013cc6:	f008 fb69 	bl	9001c39c <EwFntGetKerning>
90013cca:	4405      	add	r5, r0
90013ccc:	272e      	movs	r7, #46	; 0x2e
90013cce:	e07d      	b.n	90013dcc <EwGetAttrBitmap+0x866>
90013cd0:	f8bb 2000 	ldrh.w	r2, [fp]
90013cd4:	2aad      	cmp	r2, #173	; 0xad
90013cd6:	d103      	bne.n	90013ce0 <EwGetAttrBitmap+0x77a>
90013cd8:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90013cdc:	f8ab 2000 	strh.w	r2, [fp]
90013ce0:	931c      	str	r3, [sp, #112]	; 0x70
90013ce2:	9b08      	ldr	r3, [sp, #32]
90013ce4:	f8dd b01c 	ldr.w	fp, [sp, #28]
90013ce8:	9318      	str	r3, [sp, #96]	; 0x60
90013cea:	9b12      	ldr	r3, [sp, #72]	; 0x48
90013cec:	f8cd a074 	str.w	sl, [sp, #116]	; 0x74
90013cf0:	930f      	str	r3, [sp, #60]	; 0x3c
90013cf2:	9b06      	ldr	r3, [sp, #24]
90013cf4:	9322      	str	r3, [sp, #136]	; 0x88
90013cf6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90013cf8:	9327      	str	r3, [sp, #156]	; 0x9c
90013cfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013cfc:	9323      	str	r3, [sp, #140]	; 0x8c
90013cfe:	2301      	movs	r3, #1
90013d00:	9313      	str	r3, [sp, #76]	; 0x4c
90013d02:	e372      	b.n	900143ea <EwGetAttrBitmap+0xe84>
90013d04:	aa2f      	add	r2, sp, #188	; 0xbc
90013d06:	4639      	mov	r1, r7
90013d08:	4620      	mov	r0, r4
90013d0a:	9313      	str	r3, [sp, #76]	; 0x4c
90013d0c:	f7fd fef9 	bl	90011b02 <EwGetGlyphMetrics>
90013d10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013d12:	2800      	cmp	r0, #0
90013d14:	f43f af48 	beq.w	90013ba8 <EwGetAttrBitmap+0x642>
90013d18:	f1b9 0f00 	cmp.w	r9, #0
90013d1c:	d01f      	beq.n	90013d5e <EwGetAttrBitmap+0x7f8>
90013d1e:	9b07      	ldr	r3, [sp, #28]
90013d20:	4648      	mov	r0, r9
90013d22:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90013d24:	1a99      	subs	r1, r3, r2
90013d26:	9b03      	ldr	r3, [sp, #12]
90013d28:	eb03 0161 	add.w	r1, r3, r1, asr #1
90013d2c:	f001 fd30 	bl	90015790 <EwBidiGetCharLevel>
90013d30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90013d32:	9e33      	ldr	r6, [sp, #204]	; 0xcc
90013d34:	68a5      	ldr	r5, [r4, #8]
90013d36:	e9d4 7200 	ldrd	r7, r2, [r4]
90013d3a:	9213      	str	r2, [sp, #76]	; 0x4c
90013d3c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013d3e:	4282      	cmp	r2, r0
90013d40:	f47f af36 	bne.w	90013bb0 <EwGetAttrBitmap+0x64a>
90013d44:	9314      	str	r3, [sp, #80]	; 0x50
90013d46:	07d3      	lsls	r3, r2, #31
90013d48:	6960      	ldr	r0, [r4, #20]
90013d4a:	bf47      	ittee	mi
90013d4c:	4642      	movmi	r2, r8
90013d4e:	21ad      	movmi	r1, #173	; 0xad
90013d50:	22ad      	movpl	r2, #173	; 0xad
90013d52:	4641      	movpl	r1, r8
90013d54:	f008 fb22 	bl	9001c39c <EwFntGetKerning>
90013d58:	9b14      	ldr	r3, [sp, #80]	; 0x50
90013d5a:	4406      	add	r6, r0
90013d5c:	e728      	b.n	90013bb0 <EwGetAttrBitmap+0x64a>
90013d5e:	4648      	mov	r0, r9
90013d60:	e7e7      	b.n	90013d32 <EwGetAttrBitmap+0x7cc>
90013d62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013d64:	9312      	str	r3, [sp, #72]	; 0x48
90013d66:	e34f      	b.n	90014408 <EwGetAttrBitmap+0xea2>
90013d68:	46ca      	mov	sl, r9
90013d6a:	e794      	b.n	90013c96 <EwGetAttrBitmap+0x730>
90013d6c:	222e      	movs	r2, #46	; 0x2e
90013d6e:	4641      	mov	r1, r8
90013d70:	f008 fb14 	bl	9001c39c <EwFntGetKerning>
90013d74:	9714      	str	r7, [sp, #80]	; 0x50
90013d76:	4405      	add	r5, r0
90013d78:	e7a8      	b.n	90013ccc <EwGetAttrBitmap+0x766>
90013d7a:	f1b9 0f00 	cmp.w	r9, #0
90013d7e:	d053      	beq.n	90013e28 <EwGetAttrBitmap+0x8c2>
90013d80:	9b07      	ldr	r3, [sp, #28]
90013d82:	4648      	mov	r0, r9
90013d84:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90013d86:	1a99      	subs	r1, r3, r2
90013d88:	9b03      	ldr	r3, [sp, #12]
90013d8a:	eb03 0161 	add.w	r1, r3, r1, asr #1
90013d8e:	f001 fcff 	bl	90015790 <EwBidiGetCharLevel>
90013d92:	4682      	mov	sl, r0
90013d94:	f027 0280 	bic.w	r2, r7, #128	; 0x80
90013d98:	6823      	ldr	r3, [r4, #0]
90013d9a:	9d33      	ldr	r5, [sp, #204]	; 0xcc
90013d9c:	b292      	uxth	r2, r2
90013d9e:	931a      	str	r3, [sp, #104]	; 0x68
90013da0:	6863      	ldr	r3, [r4, #4]
90013da2:	2a20      	cmp	r2, #32
90013da4:	68a6      	ldr	r6, [r4, #8]
90013da6:	931b      	str	r3, [sp, #108]	; 0x6c
90013da8:	bf0c      	ite	eq
90013daa:	462b      	moveq	r3, r5
90013dac:	2300      	movne	r3, #0
90013dae:	9314      	str	r3, [sp, #80]	; 0x50
90013db0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90013db2:	4553      	cmp	r3, sl
90013db4:	d10a      	bne.n	90013dcc <EwGetAttrBitmap+0x866>
90013db6:	f01a 0f01 	tst.w	sl, #1
90013dba:	6960      	ldr	r0, [r4, #20]
90013dbc:	bf19      	ittee	ne
90013dbe:	4642      	movne	r2, r8
90013dc0:	4639      	movne	r1, r7
90013dc2:	463a      	moveq	r2, r7
90013dc4:	4641      	moveq	r1, r8
90013dc6:	f008 fae9 	bl	9001c39c <EwFntGetKerning>
90013dca:	4405      	add	r5, r0
90013dcc:	9b18      	ldr	r3, [sp, #96]	; 0x60
90013dce:	46b8      	mov	r8, r7
90013dd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
90013dd2:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
90013dd6:	9308      	str	r3, [sp, #32]
90013dd8:	920f      	str	r2, [sp, #60]	; 0x3c
90013dda:	2200      	movs	r2, #0
90013ddc:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
90013de0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90013de2:	9906      	ldr	r1, [sp, #24]
90013de4:	440d      	add	r5, r1
90013de6:	9924      	ldr	r1, [sp, #144]	; 0x90
90013de8:	42a9      	cmp	r1, r5
90013dea:	da02      	bge.n	90013df2 <EwGetAttrBitmap+0x88c>
90013dec:	9906      	ldr	r1, [sp, #24]
90013dee:	2900      	cmp	r1, #0
90013df0:	d133      	bne.n	90013e5a <EwGetAttrBitmap+0x8f4>
90013df2:	9b16      	ldr	r3, [sp, #88]	; 0x58
90013df4:	4293      	cmp	r3, r2
90013df6:	bfb8      	it	lt
90013df8:	4613      	movlt	r3, r2
90013dfa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90013dfc:	9316      	str	r3, [sp, #88]	; 0x58
90013dfe:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90013e00:	4293      	cmp	r3, r2
90013e02:	bfb8      	it	lt
90013e04:	4613      	movlt	r3, r2
90013e06:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90013e08:	931f      	str	r3, [sp, #124]	; 0x7c
90013e0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90013e0c:	42b3      	cmp	r3, r6
90013e0e:	bfb8      	it	lt
90013e10:	4633      	movlt	r3, r6
90013e12:	9320      	str	r3, [sp, #128]	; 0x80
90013e14:	9b21      	ldr	r3, [sp, #132]	; 0x84
90013e16:	4293      	cmp	r3, r2
90013e18:	bfb8      	it	lt
90013e1a:	4613      	movlt	r3, r2
90013e1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
90013e1e:	9321      	str	r3, [sp, #132]	; 0x84
90013e20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013e22:	4413      	add	r3, r2
90013e24:	930d      	str	r3, [sp, #52]	; 0x34
90013e26:	e6ef      	b.n	90013c08 <EwGetAttrBitmap+0x6a2>
90013e28:	46ca      	mov	sl, r9
90013e2a:	e7b3      	b.n	90013d94 <EwGetAttrBitmap+0x82e>
90013e2c:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
90013e30:	4647      	mov	r7, r8
90013e32:	4626      	mov	r6, r4
90013e34:	4625      	mov	r5, r4
90013e36:	9414      	str	r4, [sp, #80]	; 0x50
90013e38:	e9cd 441a 	strd	r4, r4, [sp, #104]	; 0x68
90013e3c:	e7c6      	b.n	90013dcc <EwGetAttrBitmap+0x866>
90013e3e:	2600      	movs	r6, #0
90013e40:	e6e0      	b.n	90013c04 <EwGetAttrBitmap+0x69e>
90013e42:	9b18      	ldr	r3, [sp, #96]	; 0x60
90013e44:	4606      	mov	r6, r0
90013e46:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
90013e4a:	4602      	mov	r2, r0
90013e4c:	9308      	str	r3, [sp, #32]
90013e4e:	4605      	mov	r5, r0
90013e50:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90013e52:	9014      	str	r0, [sp, #80]	; 0x50
90013e54:	e9cd 001a 	strd	r0, r0, [sp, #104]	; 0x68
90013e58:	e693      	b.n	90013b82 <EwGetAttrBitmap+0x61c>
90013e5a:	f1bb 0f00 	cmp.w	fp, #0
90013e5e:	d024      	beq.n	90013eaa <EwGetAttrBitmap+0x944>
90013e60:	465a      	mov	r2, fp
90013e62:	980f      	ldr	r0, [sp, #60]	; 0x3c
90013e64:	f64f 64ff 	movw	r4, #65279	; 0xfeff
90013e68:	f242 050b 	movw	r5, #8203	; 0x200b
90013e6c:	f832 1b02 	ldrh.w	r1, [r2], #2
90013e70:	2920      	cmp	r1, #32
90013e72:	bf04      	itt	eq
90013e74:	f64f 61ff 	movweq	r1, #65279	; 0xfeff
90013e78:	f8ab 1000 	strheq.w	r1, [fp]
90013e7c:	f850 1f04 	ldr.w	r1, [r0, #4]!
90013e80:	9207      	str	r2, [sp, #28]
90013e82:	f001 010f 	and.w	r1, r1, #15
90013e86:	3901      	subs	r1, #1
90013e88:	2901      	cmp	r1, #1
90013e8a:	d807      	bhi.n	90013e9c <EwGetAttrBitmap+0x936>
90013e8c:	8811      	ldrh	r1, [r2, #0]
90013e8e:	3202      	adds	r2, #2
90013e90:	42a1      	cmp	r1, r4
90013e92:	d0f3      	beq.n	90013e7c <EwGetAttrBitmap+0x916>
90013e94:	42a9      	cmp	r1, r5
90013e96:	d0f1      	beq.n	90013e7c <EwGetAttrBitmap+0x916>
90013e98:	29ad      	cmp	r1, #173	; 0xad
90013e9a:	d0ef      	beq.n	90013e7c <EwGetAttrBitmap+0x916>
90013e9c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90013e9e:	920d      	str	r2, [sp, #52]	; 0x34
90013ea0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
90013ea2:	9216      	str	r2, [sp, #88]	; 0x58
90013ea4:	9a22      	ldr	r2, [sp, #136]	; 0x88
90013ea6:	9206      	str	r2, [sp, #24]
90013ea8:	e605      	b.n	90013ab6 <EwGetAttrBitmap+0x550>
90013eaa:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013eac:	e9dd 3a1f 	ldrd	r3, sl, [sp, #124]	; 0x7c
90013eb0:	9208      	str	r2, [sp, #32]
90013eb2:	e600      	b.n	90013ab6 <EwGetAttrBitmap+0x550>
90013eb4:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013eb6:	2b41      	cmp	r3, #65	; 0x41
90013eb8:	d11d      	bne.n	90013ef6 <EwGetAttrBitmap+0x990>
90013eba:	9b19      	ldr	r3, [sp, #100]	; 0x64
90013ebc:	2b00      	cmp	r3, #0
90013ebe:	bf0c      	ite	eq
90013ec0:	234c      	moveq	r3, #76	; 0x4c
90013ec2:	2352      	movne	r3, #82	; 0x52
90013ec4:	9907      	ldr	r1, [sp, #28]
90013ec6:	9a03      	ldr	r2, [sp, #12]
90013ec8:	440a      	add	r2, r1
90013eca:	9904      	ldr	r1, [sp, #16]
90013ecc:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
90013ed0:	b12a      	cbz	r2, 90013ede <EwGetAttrBitmap+0x978>
90013ed2:	2a0a      	cmp	r2, #10
90013ed4:	d003      	beq.n	90013ede <EwGetAttrBitmap+0x978>
90013ed6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90013ed8:	2a00      	cmp	r2, #0
90013eda:	f040 8211 	bne.w	90014300 <EwGetAttrBitmap+0xd9a>
90013ede:	3320      	adds	r3, #32
90013ee0:	9308      	str	r3, [sp, #32]
90013ee2:	2300      	movs	r3, #0
90013ee4:	930d      	str	r3, [sp, #52]	; 0x34
90013ee6:	9b08      	ldr	r3, [sp, #32]
90013ee8:	2b72      	cmp	r3, #114	; 0x72
90013eea:	d110      	bne.n	90013f0e <EwGetAttrBitmap+0x9a8>
90013eec:	9b24      	ldr	r3, [sp, #144]	; 0x90
90013eee:	9a06      	ldr	r2, [sp, #24]
90013ef0:	1a9d      	subs	r5, r3, r2
90013ef2:	2372      	movs	r3, #114	; 0x72
90013ef4:	e61c      	b.n	90013b30 <EwGetAttrBitmap+0x5ca>
90013ef6:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013ef8:	2b4c      	cmp	r3, #76	; 0x4c
90013efa:	d006      	beq.n	90013f0a <EwGetAttrBitmap+0x9a4>
90013efc:	2b52      	cmp	r3, #82	; 0x52
90013efe:	d004      	beq.n	90013f0a <EwGetAttrBitmap+0x9a4>
90013f00:	2b43      	cmp	r3, #67	; 0x43
90013f02:	d0df      	beq.n	90013ec4 <EwGetAttrBitmap+0x95e>
90013f04:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013f06:	9308      	str	r3, [sp, #32]
90013f08:	e7ed      	b.n	90013ee6 <EwGetAttrBitmap+0x980>
90013f0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
90013f0c:	e7da      	b.n	90013ec4 <EwGetAttrBitmap+0x95e>
90013f0e:	9b08      	ldr	r3, [sp, #32]
90013f10:	2b63      	cmp	r3, #99	; 0x63
90013f12:	f040 81f7 	bne.w	90014304 <EwGetAttrBitmap+0xd9e>
90013f16:	9b24      	ldr	r3, [sp, #144]	; 0x90
90013f18:	9a06      	ldr	r2, [sp, #24]
90013f1a:	1a9d      	subs	r5, r3, r2
90013f1c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
90013f20:	106d      	asrs	r5, r5, #1
90013f22:	e606      	b.n	90013b32 <EwGetAttrBitmap+0x5cc>
90013f24:	bf17      	itett	ne
90013f26:	e9dd 2303 	ldrdne	r2, r3, [sp, #12]
90013f2a:	9f07      	ldreq	r7, [sp, #28]
90013f2c:	f833 7012 	ldrhne.w	r7, [r3, r2, lsl #1]
90013f30:	9b09      	ldrne	r3, [sp, #36]	; 0x24
90013f32:	bf0c      	ite	eq
90013f34:	46b8      	moveq	r8, r7
90013f36:	f853 8022 	ldrne.w	r8, [r3, r2, lsl #2]
90013f3a:	f008 030f 	and.w	r3, r8, #15
90013f3e:	930f      	str	r3, [sp, #60]	; 0x3c
90013f40:	9b07      	ldr	r3, [sp, #28]
90013f42:	b303      	cbz	r3, 90013f86 <EwGetAttrBitmap+0xa20>
90013f44:	9b05      	ldr	r3, [sp, #20]
90013f46:	9a03      	ldr	r2, [sp, #12]
90013f48:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90013f4c:	2114      	movs	r1, #20
90013f4e:	9841      	ldr	r0, [sp, #260]	; 0x104
90013f50:	9312      	str	r3, [sp, #72]	; 0x48
90013f52:	f7fe ff21 	bl	90012d98 <EwCanDiscardSurface+0x318>
90013f56:	b9d8      	cbnz	r0, 90013f90 <EwGetAttrBitmap+0xa2a>
90013f58:	9804      	ldr	r0, [sp, #16]
90013f5a:	f012 fead 	bl	90026cb8 <EwFree>
90013f5e:	9809      	ldr	r0, [sp, #36]	; 0x24
90013f60:	f012 feaa 	bl	90026cb8 <EwFree>
90013f64:	9805      	ldr	r0, [sp, #20]
90013f66:	f012 fea7 	bl	90026cb8 <EwFree>
90013f6a:	4a08      	ldr	r2, [pc, #32]	; (90013f8c <EwGetAttrBitmap+0xa26>)
90013f6c:	9928      	ldr	r1, [sp, #160]	; 0xa0
90013f6e:	6813      	ldr	r3, [r2, #0]
90013f70:	1a5b      	subs	r3, r3, r1
90013f72:	6013      	str	r3, [r2, #0]
90013f74:	f1b9 0f00 	cmp.w	r9, #0
90013f78:	f43f ab73 	beq.w	90013662 <EwGetAttrBitmap+0xfc>
90013f7c:	4648      	mov	r0, r9
90013f7e:	f001 fbed 	bl	9001575c <EwFreeBidi>
90013f82:	f7ff bb6e 	b.w	90013662 <EwGetAttrBitmap+0xfc>
90013f86:	9b07      	ldr	r3, [sp, #28]
90013f88:	e7e0      	b.n	90013f4c <EwGetAttrBitmap+0x9e6>
90013f8a:	bf00      	nop
90013f8c:	200002bc 	.word	0x200002bc
90013f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013f92:	3b03      	subs	r3, #3
90013f94:	931c      	str	r3, [sp, #112]	; 0x70
90013f96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013f98:	3b01      	subs	r3, #1
90013f9a:	2b04      	cmp	r3, #4
90013f9c:	9317      	str	r3, [sp, #92]	; 0x5c
90013f9e:	f200 8150 	bhi.w	90014242 <EwGetAttrBitmap+0xcdc>
90013fa2:	f3c8 1307 	ubfx	r3, r8, #4, #8
90013fa6:	9313      	str	r3, [sp, #76]	; 0x4c
90013fa8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90013faa:	2b01      	cmp	r3, #1
90013fac:	f240 814c 	bls.w	90014248 <EwGetAttrBitmap+0xce2>
90013fb0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90013fb2:	930b      	str	r3, [sp, #44]	; 0x2c
90013fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013fb6:	2b01      	cmp	r3, #1
90013fb8:	f000 8149 	beq.w	9001424e <EwGetAttrBitmap+0xce8>
90013fbc:	2b02      	cmp	r3, #2
90013fbe:	9b15      	ldr	r3, [sp, #84]	; 0x54
90013fc0:	bf08      	it	eq
90013fc2:	2301      	moveq	r3, #1
90013fc4:	9318      	str	r3, [sp, #96]	; 0x60
90013fc6:	2e00      	cmp	r6, #0
90013fc8:	d075      	beq.n	900140b6 <EwGetAttrBitmap+0xb50>
90013fca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90013fcc:	2b01      	cmp	r3, #1
90013fce:	d810      	bhi.n	90013ff2 <EwGetAttrBitmap+0xa8c>
90013fd0:	9b25      	ldr	r3, [sp, #148]	; 0x94
90013fd2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90013fd4:	4293      	cmp	r3, r2
90013fd6:	d10c      	bne.n	90013ff2 <EwGetAttrBitmap+0xa8c>
90013fd8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90013fda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013fdc:	4293      	cmp	r3, r2
90013fde:	d108      	bne.n	90013ff2 <EwGetAttrBitmap+0xa8c>
90013fe0:	9b15      	ldr	r3, [sp, #84]	; 0x54
90013fe2:	9a18      	ldr	r2, [sp, #96]	; 0x60
90013fe4:	4293      	cmp	r3, r2
90013fe6:	d104      	bne.n	90013ff2 <EwGetAttrBitmap+0xa8c>
90013fe8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013fea:	9a12      	ldr	r2, [sp, #72]	; 0x48
90013fec:	4293      	cmp	r3, r2
90013fee:	f000 809e 	beq.w	9001412e <EwGetAttrBitmap+0xbc8>
90013ff2:	9b41      	ldr	r3, [sp, #260]	; 0x104
90013ff4:	681a      	ldr	r2, [r3, #0]
90013ff6:	f1bb 0f00 	cmp.w	fp, #0
90013ffa:	d01f      	beq.n	9001403c <EwGetAttrBitmap+0xad6>
90013ffc:	9b08      	ldr	r3, [sp, #32]
90013ffe:	2b4c      	cmp	r3, #76	; 0x4c
90014000:	d11c      	bne.n	9001403c <EwGetAttrBitmap+0xad6>
90014002:	9b41      	ldr	r3, [sp, #260]	; 0x104
90014004:	9806      	ldr	r0, [sp, #24]
90014006:	6859      	ldr	r1, [r3, #4]
90014008:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001400a:	1a1b      	subs	r3, r3, r0
9001400c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001400e:	fb0b 0b03 	mla	fp, fp, r3, r0
90014012:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014014:	980d      	ldr	r0, [sp, #52]	; 0x34
90014016:	fb9b f3f3 	sdiv	r3, fp, r3
9001401a:	fb00 b013 	mls	r0, r0, r3, fp
9001401e:	441d      	add	r5, r3
90014020:	234a      	movs	r3, #74	; 0x4a
90014022:	901b      	str	r0, [sp, #108]	; 0x6c
90014024:	1c88      	adds	r0, r1, #2
90014026:	f822 3016 	strh.w	r3, [r2, r6, lsl #1]
9001402a:	eb02 0346 	add.w	r3, r2, r6, lsl #1
9001402e:	f8b3 c002 	ldrh.w	ip, [r3, #2]
90014032:	9b41      	ldr	r3, [sp, #260]	; 0x104
90014034:	6058      	str	r0, [r3, #4]
90014036:	eba5 030c 	sub.w	r3, r5, ip
9001403a:	800b      	strh	r3, [r1, #0]
9001403c:	9b41      	ldr	r3, [sp, #260]	; 0x104
9001403e:	1cf1      	adds	r1, r6, #3
90014040:	685b      	ldr	r3, [r3, #4]
90014042:	ea4f 0b41 	mov.w	fp, r1, lsl #1
90014046:	1a9b      	subs	r3, r3, r2
90014048:	ebc6 0663 	rsb	r6, r6, r3, asr #1
9001404c:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001404e:	f822 6011 	strh.w	r6, [r2, r1, lsl #1]
90014052:	2b00      	cmp	r3, #0
90014054:	f000 80fd 	beq.w	90014252 <EwGetAttrBitmap+0xcec>
90014058:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001405a:	b13b      	cbz	r3, 9001406c <EwGetAttrBitmap+0xb06>
9001405c:	aa2f      	add	r2, sp, #188	; 0xbc
9001405e:	212d      	movs	r1, #45	; 0x2d
90014060:	4618      	mov	r0, r3
90014062:	f7fd fd4e 	bl	90011b02 <EwGetGlyphMetrics>
90014066:	b108      	cbz	r0, 9001406c <EwGetAttrBitmap+0xb06>
90014068:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001406a:	9315      	str	r3, [sp, #84]	; 0x54
9001406c:	9b41      	ldr	r3, [sp, #260]	; 0x104
9001406e:	9843      	ldr	r0, [sp, #268]	; 0x10c
90014070:	685a      	ldr	r2, [r3, #4]
90014072:	2352      	movs	r3, #82	; 0x52
90014074:	6800      	ldr	r0, [r0, #0]
90014076:	8013      	strh	r3, [r2, #0]
90014078:	9b41      	ldr	r3, [sp, #260]	; 0x104
9001407a:	9915      	ldr	r1, [sp, #84]	; 0x54
9001407c:	681b      	ldr	r3, [r3, #0]
9001407e:	2901      	cmp	r1, #1
90014080:	445b      	add	r3, fp
90014082:	f04f 0b00 	mov.w	fp, #0
90014086:	bfb8      	it	lt
90014088:	2101      	movlt	r1, #1
9001408a:	f833 3c04 	ldrh.w	r3, [r3, #-4]
9001408e:	8053      	strh	r3, [r2, #2]
90014090:	9b42      	ldr	r3, [sp, #264]	; 0x108
90014092:	681b      	ldr	r3, [r3, #0]
90014094:	80d5      	strh	r5, [r2, #6]
90014096:	4403      	add	r3, r0
90014098:	981a      	ldr	r0, [sp, #104]	; 0x68
9001409a:	4403      	add	r3, r0
9001409c:	fa13 f381 	uxtah	r3, r3, r1
900140a0:	b29b      	uxth	r3, r3
900140a2:	8093      	strh	r3, [r2, #4]
900140a4:	fa13 f381 	uxtah	r3, r3, r1
900140a8:	9941      	ldr	r1, [sp, #260]	; 0x104
900140aa:	8113      	strh	r3, [r2, #8]
900140ac:	f102 030c 	add.w	r3, r2, #12
900140b0:	604b      	str	r3, [r1, #4]
900140b2:	9b25      	ldr	r3, [sp, #148]	; 0x94
900140b4:	8153      	strh	r3, [r2, #10]
900140b6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900140b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900140ba:	4293      	cmp	r3, r2
900140bc:	d00c      	beq.n	900140d8 <EwGetAttrBitmap+0xb72>
900140be:	4611      	mov	r1, r2
900140c0:	ee18 0a10 	vmov	r0, s16
900140c4:	f7ff fa43 	bl	9001354e <EwGetAttrFont>
900140c8:	900c      	str	r0, [sp, #48]	; 0x30
900140ca:	b928      	cbnz	r0, 900140d8 <EwGetAttrBitmap+0xb72>
900140cc:	4601      	mov	r1, r0
900140ce:	ee18 0a10 	vmov	r0, s16
900140d2:	f7ff fa3c 	bl	9001354e <EwGetAttrFont>
900140d6:	900c      	str	r0, [sp, #48]	; 0x30
900140d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900140da:	2b00      	cmp	r3, #0
900140dc:	f000 80bc 	beq.w	90014258 <EwGetAttrBitmap+0xcf2>
900140e0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900140e2:	4293      	cmp	r3, r2
900140e4:	d01c      	beq.n	90014120 <EwGetAttrBitmap+0xbba>
900140e6:	9b41      	ldr	r3, [sp, #260]	; 0x104
900140e8:	2241      	movs	r2, #65	; 0x41
900140ea:	990e      	ldr	r1, [sp, #56]	; 0x38
900140ec:	685b      	ldr	r3, [r3, #4]
900140ee:	801a      	strh	r2, [r3, #0]
900140f0:	9a45      	ldr	r2, [sp, #276]	; 0x114
900140f2:	6812      	ldr	r2, [r2, #0]
900140f4:	440a      	add	r2, r1
900140f6:	9943      	ldr	r1, [sp, #268]	; 0x10c
900140f8:	805a      	strh	r2, [r3, #2]
900140fa:	9a14      	ldr	r2, [sp, #80]	; 0x50
900140fc:	6809      	ldr	r1, [r1, #0]
900140fe:	809a      	strh	r2, [r3, #4]
90014100:	9a42      	ldr	r2, [sp, #264]	; 0x108
90014102:	9514      	str	r5, [sp, #80]	; 0x50
90014104:	6812      	ldr	r2, [r2, #0]
90014106:	811d      	strh	r5, [r3, #8]
90014108:	440a      	add	r2, r1
9001410a:	9916      	ldr	r1, [sp, #88]	; 0x58
9001410c:	b292      	uxth	r2, r2
9001410e:	80da      	strh	r2, [r3, #6]
90014110:	440a      	add	r2, r1
90014112:	9941      	ldr	r1, [sp, #260]	; 0x104
90014114:	815a      	strh	r2, [r3, #10]
90014116:	f103 020e 	add.w	r2, r3, #14
9001411a:	604a      	str	r2, [r1, #4]
9001411c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001411e:	819a      	strh	r2, [r3, #12]
90014120:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90014122:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90014124:	4293      	cmp	r3, r2
90014126:	bf16      	itet	ne
90014128:	2400      	movne	r4, #0
9001412a:	2600      	moveq	r6, #0
9001412c:	4626      	movne	r6, r4
9001412e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90014130:	2b02      	cmp	r3, #2
90014132:	d83e      	bhi.n	900141b2 <EwGetAttrBitmap+0xc4c>
90014134:	f3c8 3307 	ubfx	r3, r8, #12, #8
90014138:	ee18 0a10 	vmov	r0, s16
9001413c:	4619      	mov	r1, r3
9001413e:	930e      	str	r3, [sp, #56]	; 0x38
90014140:	f7ff fa11 	bl	90013566 <EwGetAttrBitmap>
90014144:	b940      	cbnz	r0, 90014158 <EwGetAttrBitmap+0xbf2>
90014146:	4601      	mov	r1, r0
90014148:	ee18 0a10 	vmov	r0, s16
9001414c:	f7ff fa0b 	bl	90013566 <EwGetAttrBitmap>
90014150:	2800      	cmp	r0, #0
90014152:	f000 8088 	beq.w	90014266 <EwGetAttrBitmap+0xd00>
90014156:	910e      	str	r1, [sp, #56]	; 0x38
90014158:	6943      	ldr	r3, [r0, #20]
9001415a:	ea4f 5c18 	mov.w	ip, r8, lsr #20
9001415e:	6884      	ldr	r4, [r0, #8]
90014160:	ebb3 5f18 	cmp.w	r3, r8, lsr #20
90014164:	9b16      	ldr	r3, [sp, #88]	; 0x58
90014166:	eba3 0404 	sub.w	r4, r3, r4
9001416a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001416c:	bfd8      	it	le
9001416e:	f04f 0c00 	movle.w	ip, #0
90014172:	2b03      	cmp	r3, #3
90014174:	f040 80c8 	bne.w	90014308 <EwGetAttrBitmap+0xda2>
90014178:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
9001417c:	1064      	asrs	r4, r4, #1
9001417e:	9b41      	ldr	r3, [sp, #260]	; 0x104
90014180:	685a      	ldr	r2, [r3, #4]
90014182:	2349      	movs	r3, #73	; 0x49
90014184:	8013      	strh	r3, [r2, #0]
90014186:	9b42      	ldr	r3, [sp, #264]	; 0x108
90014188:	8055      	strh	r5, [r2, #2]
9001418a:	681b      	ldr	r3, [r3, #0]
9001418c:	4619      	mov	r1, r3
9001418e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
90014190:	681b      	ldr	r3, [r3, #0]
90014192:	f8a2 c008 	strh.w	ip, [r2, #8]
90014196:	4419      	add	r1, r3
90014198:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001419a:	440c      	add	r4, r1
9001419c:	80d3      	strh	r3, [r2, #6]
9001419e:	9941      	ldr	r1, [sp, #260]	; 0x104
900141a0:	f102 030c 	add.w	r3, r2, #12
900141a4:	8094      	strh	r4, [r2, #4]
900141a6:	2400      	movs	r4, #0
900141a8:	604b      	str	r3, [r1, #4]
900141aa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900141ac:	8153      	strh	r3, [r2, #10]
900141ae:	6843      	ldr	r3, [r0, #4]
900141b0:	441d      	add	r5, r3
900141b2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900141b4:	2b01      	cmp	r3, #1
900141b6:	d876      	bhi.n	900142a6 <EwGetAttrBitmap+0xd40>
900141b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900141ba:	2b00      	cmp	r3, #0
900141bc:	d073      	beq.n	900142a6 <EwGetAttrBitmap+0xd40>
900141be:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900141c2:	429f      	cmp	r7, r3
900141c4:	d06f      	beq.n	900142a6 <EwGetAttrBitmap+0xd40>
900141c6:	f242 0326 	movw	r3, #8230	; 0x2026
900141ca:	429f      	cmp	r7, r3
900141cc:	d14d      	bne.n	9001426a <EwGetAttrBitmap+0xd04>
900141ce:	4639      	mov	r1, r7
900141d0:	980c      	ldr	r0, [sp, #48]	; 0x30
900141d2:	f7fd fc73 	bl	90011abc <EwIsGlyphAvailable>
900141d6:	2800      	cmp	r0, #0
900141d8:	bf12      	itee	ne
900141da:	f04f 0801 	movne.w	r8, #1
900141de:	f04f 0803 	moveq.w	r8, #3
900141e2:	272e      	moveq	r7, #46	; 0x2e
900141e4:	aa2f      	add	r2, sp, #188	; 0xbc
900141e6:	4639      	mov	r1, r7
900141e8:	980c      	ldr	r0, [sp, #48]	; 0x30
900141ea:	f7fd fc8a 	bl	90011b02 <EwGetGlyphMetrics>
900141ee:	2800      	cmp	r0, #0
900141f0:	d059      	beq.n	900142a6 <EwGetAttrBitmap+0xd40>
900141f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900141f4:	463a      	mov	r2, r7
900141f6:	4621      	mov	r1, r4
900141f8:	6958      	ldr	r0, [r3, #20]
900141fa:	f008 f8cf 	bl	9001c39c <EwFntGetKerning>
900141fe:	b9e6      	cbnz	r6, 9001423a <EwGetAttrBitmap+0xcd4>
90014200:	9a41      	ldr	r2, [sp, #260]	; 0x104
90014202:	9b41      	ldr	r3, [sp, #260]	; 0x104
90014204:	6816      	ldr	r6, [r2, #0]
90014206:	2254      	movs	r2, #84	; 0x54
90014208:	685b      	ldr	r3, [r3, #4]
9001420a:	9943      	ldr	r1, [sp, #268]	; 0x10c
9001420c:	801a      	strh	r2, [r3, #0]
9001420e:	182a      	adds	r2, r5, r0
90014210:	6809      	ldr	r1, [r1, #0]
90014212:	1b9e      	subs	r6, r3, r6
90014214:	805a      	strh	r2, [r3, #2]
90014216:	9a42      	ldr	r2, [sp, #264]	; 0x108
90014218:	1076      	asrs	r6, r6, #1
9001421a:	6812      	ldr	r2, [r2, #0]
9001421c:	440a      	add	r2, r1
9001421e:	991a      	ldr	r1, [sp, #104]	; 0x68
90014220:	440a      	add	r2, r1
90014222:	9941      	ldr	r1, [sp, #260]	; 0x104
90014224:	809a      	strh	r2, [r3, #4]
90014226:	f04f 0200 	mov.w	r2, #0
9001422a:	80da      	strh	r2, [r3, #6]
9001422c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001422e:	811a      	strh	r2, [r3, #8]
90014230:	f103 020c 	add.w	r2, r3, #12
90014234:	604a      	str	r2, [r1, #4]
90014236:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014238:	815a      	strh	r2, [r3, #10]
9001423a:	f027 0480 	bic.w	r4, r7, #128	; 0x80
9001423e:	b2a4      	uxth	r4, r4
90014240:	e02d      	b.n	9001429e <EwGetAttrBitmap+0xd38>
90014242:	9b25      	ldr	r3, [sp, #148]	; 0x94
90014244:	9313      	str	r3, [sp, #76]	; 0x4c
90014246:	e6b3      	b.n	90013fb0 <EwGetAttrBitmap+0xa4a>
90014248:	f3c8 3307 	ubfx	r3, r8, #12, #8
9001424c:	e6b1      	b.n	90013fb2 <EwGetAttrBitmap+0xa4c>
9001424e:	2300      	movs	r3, #0
90014250:	e6b8      	b.n	90013fc4 <EwGetAttrBitmap+0xa5e>
90014252:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
90014256:	e72e      	b.n	900140b6 <EwGetAttrBitmap+0xb50>
90014258:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001425a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001425c:	2a00      	cmp	r2, #0
9001425e:	bf18      	it	ne
90014260:	462b      	movne	r3, r5
90014262:	9314      	str	r3, [sp, #80]	; 0x50
90014264:	e75c      	b.n	90014120 <EwGetAttrBitmap+0xbba>
90014266:	4604      	mov	r4, r0
90014268:	e7a3      	b.n	900141b2 <EwGetAttrBitmap+0xc4c>
9001426a:	f04f 0801 	mov.w	r8, #1
9001426e:	e7b9      	b.n	900141e4 <EwGetAttrBitmap+0xc7e>
90014270:	9b41      	ldr	r3, [sp, #260]	; 0x104
90014272:	2c20      	cmp	r4, #32
90014274:	9941      	ldr	r1, [sp, #260]	; 0x104
90014276:	685b      	ldr	r3, [r3, #4]
90014278:	f103 0202 	add.w	r2, r3, #2
9001427c:	604a      	str	r2, [r1, #4]
9001427e:	801f      	strh	r7, [r3, #0]
90014280:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90014282:	eb03 0200 	add.w	r2, r3, r0
90014286:	bf08      	it	eq
90014288:	449b      	addeq	fp, r3
9001428a:	4415      	add	r5, r2
9001428c:	f1b8 0f00 	cmp.w	r8, #0
90014290:	d005      	beq.n	9001429e <EwGetAttrBitmap+0xd38>
90014292:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014294:	463a      	mov	r2, r7
90014296:	4639      	mov	r1, r7
90014298:	6958      	ldr	r0, [r3, #20]
9001429a:	f008 f87f 	bl	9001c39c <EwFntGetKerning>
9001429e:	f1b8 0801 	subs.w	r8, r8, #1
900142a2:	d2e5      	bcs.n	90014270 <EwGetAttrBitmap+0xd0a>
900142a4:	463c      	mov	r4, r7
900142a6:	9b07      	ldr	r3, [sp, #28]
900142a8:	3b01      	subs	r3, #1
900142aa:	9307      	str	r3, [sp, #28]
900142ac:	9b03      	ldr	r3, [sp, #12]
900142ae:	3301      	adds	r3, #1
900142b0:	9303      	str	r3, [sp, #12]
900142b2:	9b12      	ldr	r3, [sp, #72]	; 0x48
900142b4:	930e      	str	r3, [sp, #56]	; 0x38
900142b6:	9b18      	ldr	r3, [sp, #96]	; 0x60
900142b8:	9315      	str	r3, [sp, #84]	; 0x54
900142ba:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900142bc:	9325      	str	r3, [sp, #148]	; 0x94
900142be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900142c0:	931e      	str	r3, [sp, #120]	; 0x78
900142c2:	9b07      	ldr	r3, [sp, #28]
900142c4:	2b00      	cmp	r3, #0
900142c6:	f6bf ae2d 	bge.w	90013f24 <EwGetAttrBitmap+0x9be>
900142ca:	9b03      	ldr	r3, [sp, #12]
900142cc:	9a04      	ldr	r2, [sp, #16]
900142ce:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
900142d2:	3b01      	subs	r3, #1
900142d4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
900142d8:	9a16      	ldr	r2, [sp, #88]	; 0x58
900142da:	2b0a      	cmp	r3, #10
900142dc:	bf1e      	ittt	ne
900142de:	9b03      	ldrne	r3, [sp, #12]
900142e0:	f103 33ff 	addne.w	r3, r3, #4294967295
900142e4:	9303      	strne	r3, [sp, #12]
900142e6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
900142e8:	681b      	ldr	r3, [r3, #0]
900142ea:	441a      	add	r2, r3
900142ec:	9b42      	ldr	r3, [sp, #264]	; 0x108
900142ee:	681b      	ldr	r3, [r3, #0]
900142f0:	4413      	add	r3, r2
900142f2:	9a42      	ldr	r2, [sp, #264]	; 0x108
900142f4:	6013      	str	r3, [r2, #0]
900142f6:	9b43      	ldr	r3, [sp, #268]	; 0x10c
900142f8:	f8c3 a000 	str.w	sl, [r3]
900142fc:	f7ff ba04 	b.w	90013708 <EwGetAttrBitmap+0x1a2>
90014300:	234c      	movs	r3, #76	; 0x4c
90014302:	9308      	str	r3, [sp, #32]
90014304:	2500      	movs	r5, #0
90014306:	e414      	b.n	90013b32 <EwGetAttrBitmap+0x5cc>
90014308:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001430a:	2b05      	cmp	r3, #5
9001430c:	bf08      	it	eq
9001430e:	2400      	moveq	r4, #0
90014310:	e735      	b.n	9001417e <EwGetAttrBitmap+0xc18>
90014312:	aa2f      	add	r2, sp, #188	; 0xbc
90014314:	4639      	mov	r1, r7
90014316:	4620      	mov	r0, r4
90014318:	f7fd fbf3 	bl	90011b02 <EwGetGlyphMetrics>
9001431c:	4605      	mov	r5, r0
9001431e:	2800      	cmp	r0, #0
90014320:	f47f ad2b 	bne.w	90013d7a <EwGetAttrBitmap+0x814>
90014324:	4606      	mov	r6, r0
90014326:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
9001432a:	4647      	mov	r7, r8
9001432c:	9014      	str	r0, [sp, #80]	; 0x50
9001432e:	e9cd 001a 	strd	r0, r0, [sp, #104]	; 0x68
90014332:	e54b      	b.n	90013dcc <EwGetAttrBitmap+0x866>
90014334:	2f0a      	cmp	r7, #10
90014336:	f43f aba5 	beq.w	90013a84 <EwGetAttrBitmap+0x51e>
9001433a:	9a08      	ldr	r2, [sp, #32]
9001433c:	f04f 0800 	mov.w	r8, #0
90014340:	931f      	str	r3, [sp, #124]	; 0x7c
90014342:	e9cd a220 	strd	sl, r2, [sp, #128]	; 0x80
90014346:	f04f 32ff 	mov.w	r2, #4294967295
9001434a:	920b      	str	r2, [sp, #44]	; 0x2c
9001434c:	f242 020b 	movw	r2, #8203	; 0x200b
90014350:	4297      	cmp	r7, r2
90014352:	f47f ac1b 	bne.w	90013b8c <EwGetAttrBitmap+0x626>
90014356:	9a06      	ldr	r2, [sp, #24]
90014358:	2a00      	cmp	r2, #0
9001435a:	d039      	beq.n	900143d0 <EwGetAttrBitmap+0xe6a>
9001435c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001435e:	2a00      	cmp	r2, #0
90014360:	d136      	bne.n	900143d0 <EwGetAttrBitmap+0xe6a>
90014362:	f1bb 0f00 	cmp.w	fp, #0
90014366:	f47f acb3 	bne.w	90013cd0 <EwGetAttrBitmap+0x76a>
9001436a:	931c      	str	r3, [sp, #112]	; 0x70
9001436c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001436e:	9a08      	ldr	r2, [sp, #32]
90014370:	9323      	str	r3, [sp, #140]	; 0x8c
90014372:	9b16      	ldr	r3, [sp, #88]	; 0x58
90014374:	f8dd b01c 	ldr.w	fp, [sp, #28]
90014378:	9327      	str	r3, [sp, #156]	; 0x9c
9001437a:	9b06      	ldr	r3, [sp, #24]
9001437c:	f8cd a074 	str.w	sl, [sp, #116]	; 0x74
90014380:	9322      	str	r3, [sp, #136]	; 0x88
90014382:	2301      	movs	r3, #1
90014384:	9218      	str	r2, [sp, #96]	; 0x60
90014386:	9313      	str	r3, [sp, #76]	; 0x4c
90014388:	e031      	b.n	900143ee <EwGetAttrBitmap+0xe88>
9001438a:	9904      	ldr	r1, [sp, #16]
9001438c:	4648      	mov	r0, r9
9001438e:	f001 fad3 	bl	90015938 <EwBidiProcess>
90014392:	9904      	ldr	r1, [sp, #16]
90014394:	4648      	mov	r0, r9
90014396:	f002 f9a1 	bl	900166dc <EwBidiMirrorGlyphs>
9001439a:	ee18 3a10 	vmov	r3, s16
9001439e:	9a09      	ldr	r2, [sp, #36]	; 0x24
900143a0:	4648      	mov	r0, r9
900143a2:	681b      	ldr	r3, [r3, #0]
900143a4:	9904      	ldr	r1, [sp, #16]
900143a6:	9300      	str	r3, [sp, #0]
900143a8:	ee18 3a10 	vmov	r3, s16
900143ac:	68db      	ldr	r3, [r3, #12]
900143ae:	f001 ffd7 	bl	90016360 <EwBidiApplyShaping>
900143b2:	4648      	mov	r0, r9
900143b4:	f001 f9e6 	bl	90015784 <EwBidiIsRTL>
900143b8:	9b44      	ldr	r3, [sp, #272]	; 0x110
900143ba:	9019      	str	r0, [sp, #100]	; 0x64
900143bc:	681b      	ldr	r3, [r3, #0]
900143be:	2b00      	cmp	r3, #0
900143c0:	f6bf a998 	bge.w	900136f4 <EwGetAttrBitmap+0x18e>
900143c4:	9b44      	ldr	r3, [sp, #272]	; 0x110
900143c6:	461a      	mov	r2, r3
900143c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
900143ca:	6013      	str	r3, [r2, #0]
900143cc:	f7ff b992 	b.w	900136f4 <EwGetAttrBitmap+0x18e>
900143d0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900143d2:	f64f 67ff 	movw	r7, #65279	; 0xfeff
900143d6:	9312      	str	r3, [sp, #72]	; 0x48
900143d8:	e00f      	b.n	900143fa <EwGetAttrBitmap+0xe94>
900143da:	2f20      	cmp	r7, #32
900143dc:	f43f ac1d 	beq.w	90013c1a <EwGetAttrBitmap+0x6b4>
900143e0:	f240 631c 	movw	r3, #1564	; 0x61c
900143e4:	429f      	cmp	r7, r3
900143e6:	f43f acbc 	beq.w	90013d62 <EwGetAttrBitmap+0x7fc>
900143ea:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900143ec:	9312      	str	r3, [sp, #72]	; 0x48
900143ee:	f5a7 5300 	sub.w	r3, r7, #8192	; 0x2000
900143f2:	3b0b      	subs	r3, #11
900143f4:	b29b      	uxth	r3, r3
900143f6:	2b04      	cmp	r3, #4
900143f8:	d906      	bls.n	90014408 <EwGetAttrBitmap+0xea2>
900143fa:	f5a7 5300 	sub.w	r3, r7, #8192	; 0x2000
900143fe:	3b2a      	subs	r3, #42	; 0x2a
90014400:	b29b      	uxth	r3, r3
90014402:	2b04      	cmp	r3, #4
90014404:	f63f ac10 	bhi.w	90013c28 <EwGetAttrBitmap+0x6c2>
90014408:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001440c:	9a07      	ldr	r2, [sp, #28]
9001440e:	8013      	strh	r3, [r2, #0]
90014410:	e9dd 3612 	ldrd	r3, r6, [sp, #72]	; 0x48
90014414:	930f      	str	r3, [sp, #60]	; 0x3c
90014416:	f7ff bbf5 	b.w	90013c04 <EwGetAttrBitmap+0x69e>
9001441a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001441e:	ed2d 8b02 	vpush	{d8}
90014422:	b0af      	sub	sp, #188	; 0xbc
90014424:	ee08 0a10 	vmov	s16, r0
90014428:	4688      	mov	r8, r1
9001442a:	2107      	movs	r1, #7
9001442c:	9c3a      	ldr	r4, [sp, #232]	; 0xe8
9001442e:	4693      	mov	fp, r2
90014430:	9310      	str	r3, [sp, #64]	; 0x40
90014432:	4620      	mov	r0, r4
90014434:	e9d4 6700 	ldrd	r6, r7, [r4]
90014438:	f7fe fcae 	bl	90012d98 <EwCanDiscardSurface+0x318>
9001443c:	2800      	cmp	r0, #0
9001443e:	f000 824d 	beq.w	900148dc <EwGetAttrBitmap+0x1376>
90014442:	6863      	ldr	r3, [r4, #4]
90014444:	fa1f f18b 	uxth.w	r1, fp
90014448:	2247      	movs	r2, #71	; 0x47
9001444a:	1bbe      	subs	r6, r7, r6
9001444c:	80d9      	strh	r1, [r3, #6]
9001444e:	ee18 0a10 	vmov	r0, s16
90014452:	801a      	strh	r2, [r3, #0]
90014454:	2200      	movs	r2, #0
90014456:	910a      	str	r1, [sp, #40]	; 0x28
90014458:	f103 010e 	add.w	r1, r3, #14
9001445c:	805a      	strh	r2, [r3, #2]
9001445e:	1077      	asrs	r7, r6, #1
90014460:	809a      	strh	r2, [r3, #4]
90014462:	811a      	strh	r2, [r3, #8]
90014464:	815a      	strh	r2, [r3, #10]
90014466:	6061      	str	r1, [r4, #4]
90014468:	4641      	mov	r1, r8
9001446a:	819a      	strh	r2, [r3, #12]
9001446c:	465a      	mov	r2, fp
9001446e:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
90014470:	9306      	str	r3, [sp, #24]
90014472:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
90014474:	9305      	str	r3, [sp, #20]
90014476:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
90014478:	9304      	str	r3, [sp, #16]
9001447a:	ab17      	add	r3, sp, #92	; 0x5c
9001447c:	9303      	str	r3, [sp, #12]
9001447e:	ab16      	add	r3, sp, #88	; 0x58
90014480:	e9cd 4301 	strd	r4, r3, [sp, #4]
90014484:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014486:	9300      	str	r3, [sp, #0]
90014488:	236c      	movs	r3, #108	; 0x6c
9001448a:	f7ff f878 	bl	9001357e <EwGetAttrBitmap+0x18>
9001448e:	f107 0c07 	add.w	ip, r7, #7
90014492:	4605      	mov	r5, r0
90014494:	e9d4 3200 	ldrd	r3, r2, [r4]
90014498:	1ad0      	subs	r0, r2, r3
9001449a:	ebbc 0f60 	cmp.w	ip, r0, asr #1
9001449e:	ea4f 0160 	mov.w	r1, r0, asr #1
900144a2:	bfb7      	itett	lt
900144a4:	18f6      	addlt	r6, r6, r3
900144a6:	3a0e      	subge	r2, #14
900144a8:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
900144aa:	1bcf      	sublt	r7, r1, r7
900144ac:	bfae      	itee	ge
900144ae:	6062      	strge	r2, [r4, #4]
900144b0:	8133      	strhlt	r3, [r6, #8]
900144b2:	8177      	strhlt	r7, [r6, #10]
900144b4:	b10d      	cbz	r5, 900144ba <EwGetAttrBitmap+0xf54>
900144b6:	882b      	ldrh	r3, [r5, #0]
900144b8:	b933      	cbnz	r3, 900144c8 <EwGetAttrBitmap+0xf62>
900144ba:	9b3b      	ldr	r3, [sp, #236]	; 0xec
900144bc:	9a16      	ldr	r2, [sp, #88]	; 0x58
900144be:	601a      	str	r2, [r3, #0]
900144c0:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
900144c2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
900144c4:	601a      	str	r2, [r3, #0]
900144c6:	e20a      	b.n	900148de <EwGetAttrBitmap+0x1378>
900144c8:	498e      	ldr	r1, [pc, #568]	; (90014704 <EwGetAttrBitmap+0x119e>)
900144ca:	4628      	mov	r0, r5
900144cc:	f7fe fbc4 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900144d0:	4606      	mov	r6, r0
900144d2:	b3a8      	cbz	r0, 90014540 <EwGetAttrBitmap+0xfda>
900144d4:	f04f 33ff 	mov.w	r3, #4294967295
900144d8:	892e      	ldrh	r6, [r5, #8]
900144da:	932b      	str	r3, [sp, #172]	; 0xac
900144dc:	b1de      	cbz	r6, 90014516 <EwGetAttrBitmap+0xfb0>
900144de:	2e6c      	cmp	r6, #108	; 0x6c
900144e0:	896b      	ldrh	r3, [r5, #10]
900144e2:	f000 8207 	beq.w	900148f4 <EwGetAttrBitmap+0x138e>
900144e6:	2e72      	cmp	r6, #114	; 0x72
900144e8:	f000 8204 	beq.w	900148f4 <EwGetAttrBitmap+0x138e>
900144ec:	2e63      	cmp	r6, #99	; 0x63
900144ee:	f000 8201 	beq.w	900148f4 <EwGetAttrBitmap+0x138e>
900144f2:	2e61      	cmp	r6, #97	; 0x61
900144f4:	f000 81fe 	beq.w	900148f4 <EwGetAttrBitmap+0x138e>
900144f8:	2e6a      	cmp	r6, #106	; 0x6a
900144fa:	d10c      	bne.n	90014516 <EwGetAttrBitmap+0xfb0>
900144fc:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
90014500:	b292      	uxth	r2, r2
90014502:	2a11      	cmp	r2, #17
90014504:	d818      	bhi.n	90014538 <EwGetAttrBitmap+0xfd2>
90014506:	4980      	ldr	r1, [pc, #512]	; (90014708 <EwGetAttrBitmap+0x11a2>)
90014508:	fa21 f202 	lsr.w	r2, r1, r2
9001450c:	07d1      	lsls	r1, r2, #31
9001450e:	d513      	bpl.n	90014538 <EwGetAttrBitmap+0xfd2>
90014510:	f1a3 0620 	sub.w	r6, r3, #32
90014514:	e1f2      	b.n	900148fc <EwGetAttrBitmap+0x1396>
90014516:	f1a6 0361 	sub.w	r3, r6, #97	; 0x61
9001451a:	b29b      	uxth	r3, r3
9001451c:	2b11      	cmp	r3, #17
9001451e:	d804      	bhi.n	9001452a <EwGetAttrBitmap+0xfc4>
90014520:	4a79      	ldr	r2, [pc, #484]	; (90014708 <EwGetAttrBitmap+0x11a2>)
90014522:	fa22 f303 	lsr.w	r3, r2, r3
90014526:	07da      	lsls	r2, r3, #31
90014528:	d403      	bmi.n	90014532 <EwGetAttrBitmap+0xfcc>
9001452a:	f105 0008 	add.w	r0, r5, #8
9001452e:	266c      	movs	r6, #108	; 0x6c
90014530:	e1e6      	b.n	90014900 <EwGetAttrBitmap+0x139a>
90014532:	f105 000a 	add.w	r0, r5, #10
90014536:	e1e3      	b.n	90014900 <EwGetAttrBitmap+0x139a>
90014538:	f105 000a 	add.w	r0, r5, #10
9001453c:	264c      	movs	r6, #76	; 0x4c
9001453e:	e1df      	b.n	90014900 <EwGetAttrBitmap+0x139a>
90014540:	4972      	ldr	r1, [pc, #456]	; (9001470c <EwGetAttrBitmap+0x11a6>)
90014542:	4628      	mov	r0, r5
90014544:	f7fe fb88 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
90014548:	2800      	cmp	r0, #0
9001454a:	d0b6      	beq.n	900144ba <EwGetAttrBitmap+0xf54>
9001454c:	af2b      	add	r7, sp, #172	; 0xac
9001454e:	46d8      	mov	r8, fp
90014550:	3508      	adds	r5, #8
90014552:	f04f 39ff 	mov.w	r9, #4294967295
90014556:	46ba      	mov	sl, r7
90014558:	962d      	str	r6, [sp, #180]	; 0xb4
9001455a:	9608      	str	r6, [sp, #32]
9001455c:	e9d4 3200 	ldrd	r3, r2, [r4]
90014560:	e9cd 662b 	strd	r6, r6, [sp, #172]	; 0xac
90014564:	1ad3      	subs	r3, r2, r3
90014566:	9311      	str	r3, [sp, #68]	; 0x44
90014568:	105b      	asrs	r3, r3, #1
9001456a:	9312      	str	r3, [sp, #72]	; 0x48
9001456c:	882b      	ldrh	r3, [r5, #0]
9001456e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
90014572:	2a09      	cmp	r2, #9
90014574:	d923      	bls.n	900145be <EwGetAttrBitmap+0x1058>
90014576:	2b2a      	cmp	r3, #42	; 0x2a
90014578:	d00f      	beq.n	9001459a <EwGetAttrBitmap+0x1034>
9001457a:	9b08      	ldr	r3, [sp, #32]
9001457c:	b91b      	cbnz	r3, 90014586 <EwGetAttrBitmap+0x1020>
9001457e:	2301      	movs	r3, #1
90014580:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
90014584:	9308      	str	r3, [sp, #32]
90014586:	2300      	movs	r3, #0
90014588:	992d      	ldr	r1, [sp, #180]	; 0xb4
9001458a:	f106 3eff 	add.w	lr, r6, #4294967295
9001458e:	4699      	mov	r9, r3
90014590:	469a      	mov	sl, r3
90014592:	9309      	str	r3, [sp, #36]	; 0x24
90014594:	e9dd c02b 	ldrd	ip, r0, [sp, #172]	; 0xac
90014598:	e032      	b.n	90014600 <EwGetAttrBitmap+0x109a>
9001459a:	3601      	adds	r6, #1
9001459c:	3502      	adds	r5, #2
9001459e:	f8ca 9000 	str.w	r9, [sl]
900145a2:	882b      	ldrh	r3, [r5, #0]
900145a4:	f10a 0a04 	add.w	sl, sl, #4
900145a8:	2b2c      	cmp	r3, #44	; 0x2c
900145aa:	9b08      	ldr	r3, [sp, #32]
900145ac:	f103 0301 	add.w	r3, r3, #1
900145b0:	bf08      	it	eq
900145b2:	3502      	addeq	r5, #2
900145b4:	2b03      	cmp	r3, #3
900145b6:	9308      	str	r3, [sp, #32]
900145b8:	d0e5      	beq.n	90014586 <EwGetAttrBitmap+0x1020>
900145ba:	882b      	ldrh	r3, [r5, #0]
900145bc:	e7d7      	b.n	9001456e <EwGetAttrBitmap+0x1008>
900145be:	4628      	mov	r0, r5
900145c0:	4652      	mov	r2, sl
900145c2:	4659      	mov	r1, fp
900145c4:	f7fe faf9 	bl	90012bba <EwCanDiscardSurface+0x13a>
900145c8:	f8da 3000 	ldr.w	r3, [sl]
900145cc:	4605      	mov	r5, r0
900145ce:	eba8 0803 	sub.w	r8, r8, r3
900145d2:	e7e6      	b.n	900145a2 <EwGetAttrBitmap+0x103c>
900145d4:	fb98 f2f6 	sdiv	r2, r8, r6
900145d8:	459e      	cmp	lr, r3
900145da:	bf08      	it	eq
900145dc:	fb0e 8212 	mlseq	r2, lr, r2, r8
900145e0:	f1bc 0f00 	cmp.w	ip, #0
900145e4:	db08      	blt.n	900145f8 <EwGetAttrBitmap+0x1092>
900145e6:	2800      	cmp	r0, #0
900145e8:	f2c0 8084 	blt.w	900146f4 <EwGetAttrBitmap+0x118e>
900145ec:	2900      	cmp	r1, #0
900145ee:	da06      	bge.n	900145fe <EwGetAttrBitmap+0x1098>
900145f0:	4611      	mov	r1, r2
900145f2:	2201      	movs	r2, #1
900145f4:	9209      	str	r2, [sp, #36]	; 0x24
900145f6:	e002      	b.n	900145fe <EwGetAttrBitmap+0x1098>
900145f8:	4694      	mov	ip, r2
900145fa:	f04f 0a01 	mov.w	sl, #1
900145fe:	3301      	adds	r3, #1
90014600:	42b3      	cmp	r3, r6
90014602:	d1e7      	bne.n	900145d4 <EwGetAttrBitmap+0x106e>
90014604:	f1ba 0f00 	cmp.w	sl, #0
90014608:	d001      	beq.n	9001460e <EwGetAttrBitmap+0x10a8>
9001460a:	f8cd c0ac 	str.w	ip, [sp, #172]	; 0xac
9001460e:	f1b9 0f00 	cmp.w	r9, #0
90014612:	d000      	beq.n	90014616 <EwGetAttrBitmap+0x10b0>
90014614:	902c      	str	r0, [sp, #176]	; 0xb0
90014616:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014618:	b103      	cbz	r3, 9001461c <EwGetAttrBitmap+0x10b6>
9001461a:	912d      	str	r1, [sp, #180]	; 0xb4
9001461c:	a81c      	add	r0, sp, #112	; 0x70
9001461e:	465b      	mov	r3, fp
90014620:	2203      	movs	r2, #3
90014622:	2600      	movs	r6, #0
90014624:	f857 1b04 	ldr.w	r1, [r7], #4
90014628:	2900      	cmp	r1, #0
9001462a:	bfb8      	it	lt
9001462c:	f847 6c04 	strlt.w	r6, [r7, #-4]
90014630:	f857 1c04 	ldr.w	r1, [r7, #-4]
90014634:	4299      	cmp	r1, r3
90014636:	bfc8      	it	gt
90014638:	f847 3c04 	strgt.w	r3, [r7, #-4]
9001463c:	3a01      	subs	r2, #1
9001463e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90014642:	eba3 0301 	sub.w	r3, r3, r1
90014646:	f840 1b04 	str.w	r1, [r0], #4
9001464a:	d1eb      	bne.n	90014624 <EwGetAttrBitmap+0x10be>
9001464c:	882b      	ldrh	r3, [r5, #0]
9001464e:	2107      	movs	r1, #7
90014650:	4620      	mov	r0, r4
90014652:	2b7d      	cmp	r3, #125	; 0x7d
90014654:	bf08      	it	eq
90014656:	3502      	addeq	r5, #2
90014658:	f7fe fb9e 	bl	90012d98 <EwCanDiscardSurface+0x318>
9001465c:	2800      	cmp	r0, #0
9001465e:	f000 813d 	beq.w	900148dc <EwGetAttrBitmap+0x1376>
90014662:	6860      	ldr	r0, [r4, #4]
90014664:	2347      	movs	r3, #71	; 0x47
90014666:	ae28      	add	r6, sp, #160	; 0xa0
90014668:	8003      	strh	r3, [r0, #0]
9001466a:	2300      	movs	r3, #0
9001466c:	4637      	mov	r7, r6
9001466e:	960f      	str	r6, [sp, #60]	; 0x3c
90014670:	8043      	strh	r3, [r0, #2]
90014672:	469a      	mov	sl, r3
90014674:	8103      	strh	r3, [r0, #8]
90014676:	4699      	mov	r9, r3
90014678:	8143      	strh	r3, [r0, #10]
9001467a:	9309      	str	r3, [sp, #36]	; 0x24
9001467c:	930d      	str	r3, [sp, #52]	; 0x34
9001467e:	e9dd 2116 	ldrd	r2, r1, [sp, #88]	; 0x58
90014682:	440a      	add	r2, r1
90014684:	8082      	strh	r2, [r0, #4]
90014686:	9216      	str	r2, [sp, #88]	; 0x58
90014688:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001468a:	80c2      	strh	r2, [r0, #6]
9001468c:	f100 020e 	add.w	r2, r0, #14
90014690:	6062      	str	r2, [r4, #4]
90014692:	4a1f      	ldr	r2, [pc, #124]	; (90014710 <EwGetAttrBitmap+0x11aa>)
90014694:	8183      	strh	r3, [r0, #12]
90014696:	932d      	str	r3, [sp, #180]	; 0xb4
90014698:	ca07      	ldmia	r2, {r0, r1, r2}
9001469a:	e886 0007 	stmia.w	r6, {r0, r1, r2}
9001469e:	aa25      	add	r2, sp, #148	; 0x94
900146a0:	920e      	str	r2, [sp, #56]	; 0x38
900146a2:	aa2b      	add	r2, sp, #172	; 0xac
900146a4:	920c      	str	r2, [sp, #48]	; 0x30
900146a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900146a8:	e9cd 332b 	strd	r3, r3, [sp, #172]	; 0xac
900146ac:	920b      	str	r2, [sp, #44]	; 0x2c
900146ae:	882b      	ldrh	r3, [r5, #0]
900146b0:	2b00      	cmp	r3, #0
900146b2:	d131      	bne.n	90014718 <EwGetAttrBitmap+0x11b2>
900146b4:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
900146b8:	f10d 0e7c 	add.w	lr, sp, #124	; 0x7c
900146bc:	2600      	movs	r6, #0
900146be:	454e      	cmp	r6, r9
900146c0:	f040 80df 	bne.w	90014882 <EwGetAttrBitmap+0x131c>
900146c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900146c6:	4628      	mov	r0, r5
900146c8:	4912      	ldr	r1, [pc, #72]	; (90014714 <EwGetAttrBitmap+0x11ae>)
900146ca:	eba3 030a 	sub.w	r3, r3, sl
900146ce:	9317      	str	r3, [sp, #92]	; 0x5c
900146d0:	f7fe fac2 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
900146d4:	b100      	cbz	r0, 900146d8 <EwGetAttrBitmap+0x1172>
900146d6:	350a      	adds	r5, #10
900146d8:	6821      	ldr	r1, [r4, #0]
900146da:	9b16      	ldr	r3, [sp, #88]	; 0x58
900146dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
900146de:	4453      	add	r3, sl
900146e0:	440a      	add	r2, r1
900146e2:	9316      	str	r3, [sp, #88]	; 0x58
900146e4:	8113      	strh	r3, [r2, #8]
900146e6:	6863      	ldr	r3, [r4, #4]
900146e8:	1a5b      	subs	r3, r3, r1
900146ea:	9912      	ldr	r1, [sp, #72]	; 0x48
900146ec:	ebc1 0363 	rsb	r3, r1, r3, asr #1
900146f0:	8153      	strh	r3, [r2, #10]
900146f2:	e6df      	b.n	900144b4 <EwGetAttrBitmap+0xf4e>
900146f4:	4610      	mov	r0, r2
900146f6:	f04f 0901 	mov.w	r9, #1
900146fa:	e780      	b.n	900145fe <EwGetAttrBitmap+0x1098>
900146fc:	f105 000a 	add.w	r0, r5, #10
90014700:	4613      	mov	r3, r2
90014702:	e020      	b.n	90014746 <EwGetAttrBitmap+0x11e0>
90014704:	90034970 	.word	0x90034970
90014708:	00020805 	.word	0x00020805
9001470c:	90034975 	.word	0x90034975
90014710:	90030ad8 	.word	0x90030ad8
90014714:	9003497f 	.word	0x9003497f
90014718:	9b08      	ldr	r3, [sp, #32]
9001471a:	454b      	cmp	r3, r9
9001471c:	d0ca      	beq.n	900146b4 <EwGetAttrBitmap+0x114e>
9001471e:	4973      	ldr	r1, [pc, #460]	; (900148ec <EwGetAttrBitmap+0x1386>)
90014720:	4628      	mov	r0, r5
90014722:	f7fe fa99 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
90014726:	2800      	cmp	r0, #0
90014728:	d0c4      	beq.n	900146b4 <EwGetAttrBitmap+0x114e>
9001472a:	892a      	ldrh	r2, [r5, #8]
9001472c:	f1a2 0362 	sub.w	r3, r2, #98	; 0x62
90014730:	b29b      	uxth	r3, r3
90014732:	2b12      	cmp	r3, #18
90014734:	d804      	bhi.n	90014740 <EwGetAttrBitmap+0x11da>
90014736:	496e      	ldr	r1, [pc, #440]	; (900148f0 <EwGetAttrBitmap+0x138a>)
90014738:	fa21 f303 	lsr.w	r3, r1, r3
9001473c:	07db      	lsls	r3, r3, #31
9001473e:	d4dd      	bmi.n	900146fc <EwGetAttrBitmap+0x1196>
90014740:	f105 0008 	add.w	r0, r5, #8
90014744:	236d      	movs	r3, #109	; 0x6d
90014746:	aa1f      	add	r2, sp, #124	; 0x7c
90014748:	f842 3029 	str.w	r3, [r2, r9, lsl #2]
9001474c:	ab1c      	add	r3, sp, #112	; 0x70
9001474e:	aa18      	add	r2, sp, #96	; 0x60
90014750:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
90014754:	ab1b      	add	r3, sp, #108	; 0x6c
90014756:	9301      	str	r3, [sp, #4]
90014758:	ab1a      	add	r3, sp, #104	; 0x68
9001475a:	4641      	mov	r1, r8
9001475c:	9300      	str	r3, [sp, #0]
9001475e:	ab19      	add	r3, sp, #100	; 0x64
90014760:	f7fe fa42 	bl	90012be8 <EwCanDiscardSurface+0x168>
90014764:	8803      	ldrh	r3, [r0, #0]
90014766:	4605      	mov	r5, r0
90014768:	2b3a      	cmp	r3, #58	; 0x3a
9001476a:	d104      	bne.n	90014776 <EwGetAttrBitmap+0x1210>
9001476c:	4639      	mov	r1, r7
9001476e:	3002      	adds	r0, #2
90014770:	f7fe fa14 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90014774:	4605      	mov	r5, r0
90014776:	882b      	ldrh	r3, [r5, #0]
90014778:	2b7d      	cmp	r3, #125	; 0x7d
9001477a:	683b      	ldr	r3, [r7, #0]
9001477c:	bf08      	it	eq
9001477e:	3502      	addeq	r5, #2
90014780:	3301      	adds	r3, #1
90014782:	d016      	beq.n	900147b2 <EwGetAttrBitmap+0x124c>
90014784:	2106      	movs	r1, #6
90014786:	4620      	mov	r0, r4
90014788:	f7fe fb06 	bl	90012d98 <EwCanDiscardSurface+0x318>
9001478c:	2800      	cmp	r0, #0
9001478e:	f000 80a5 	beq.w	900148dc <EwGetAttrBitmap+0x1376>
90014792:	6863      	ldr	r3, [r4, #4]
90014794:	2252      	movs	r2, #82	; 0x52
90014796:	2100      	movs	r1, #0
90014798:	801a      	strh	r2, [r3, #0]
9001479a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001479e:	8099      	strh	r1, [r3, #4]
900147a0:	805a      	strh	r2, [r3, #2]
900147a2:	4442      	add	r2, r8
900147a4:	8119      	strh	r1, [r3, #8]
900147a6:	f103 010c 	add.w	r1, r3, #12
900147aa:	80da      	strh	r2, [r3, #6]
900147ac:	683a      	ldr	r2, [r7, #0]
900147ae:	6061      	str	r1, [r4, #4]
900147b0:	815a      	strh	r2, [r3, #10]
900147b2:	2107      	movs	r1, #7
900147b4:	4620      	mov	r0, r4
900147b6:	e9d4 3600 	ldrd	r3, r6, [r4]
900147ba:	1af6      	subs	r6, r6, r3
900147bc:	1073      	asrs	r3, r6, #1
900147be:	1072      	asrs	r2, r6, #1
900147c0:	9315      	str	r3, [sp, #84]	; 0x54
900147c2:	ab22      	add	r3, sp, #136	; 0x88
900147c4:	f843 2029 	str.w	r2, [r3, r9, lsl #2]
900147c8:	f7fe fae6 	bl	90012d98 <EwCanDiscardSurface+0x318>
900147cc:	2800      	cmp	r0, #0
900147ce:	f000 8085 	beq.w	900148dc <EwGetAttrBitmap+0x1376>
900147d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900147d4:	2047      	movs	r0, #71	; 0x47
900147d6:	9a19      	ldr	r2, [sp, #100]	; 0x64
900147d8:	3704      	adds	r7, #4
900147da:	eba8 0103 	sub.w	r1, r8, r3
900147de:	1a8a      	subs	r2, r1, r2
900147e0:	6861      	ldr	r1, [r4, #4]
900147e2:	8008      	strh	r0, [r1, #0]
900147e4:	980d      	ldr	r0, [sp, #52]	; 0x34
900147e6:	4403      	add	r3, r0
900147e8:	981a      	ldr	r0, [sp, #104]	; 0x68
900147ea:	b29b      	uxth	r3, r3
900147ec:	8088      	strh	r0, [r1, #4]
900147ee:	f101 000e 	add.w	r0, r1, #14
900147f2:	804b      	strh	r3, [r1, #2]
900147f4:	4413      	add	r3, r2
900147f6:	80cb      	strh	r3, [r1, #6]
900147f8:	2300      	movs	r3, #0
900147fa:	810b      	strh	r3, [r1, #8]
900147fc:	814b      	strh	r3, [r1, #10]
900147fe:	6060      	str	r0, [r4, #4]
90014800:	ee18 0a10 	vmov	r0, s16
90014804:	818b      	strh	r3, [r1, #12]
90014806:	4629      	mov	r1, r5
90014808:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001480a:	9313      	str	r3, [sp, #76]	; 0x4c
9001480c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001480e:	9314      	str	r3, [sp, #80]	; 0x50
90014810:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
90014812:	9305      	str	r3, [sp, #20]
90014814:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
90014816:	9304      	str	r3, [sp, #16]
90014818:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
9001481a:	9303      	str	r3, [sp, #12]
9001481c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001481e:	9302      	str	r3, [sp, #8]
90014820:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90014822:	e9cd 4300 	strd	r4, r3, [sp]
90014826:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014828:	f7ff fdf7 	bl	9001441a <EwGetAttrBitmap+0xeb4>
9001482c:	4605      	mov	r5, r0
9001482e:	2800      	cmp	r0, #0
90014830:	d054      	beq.n	900148dc <EwGetAttrBitmap+0x1376>
90014832:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014834:	f109 0901 	add.w	r9, r9, #1
90014838:	9809      	ldr	r0, [sp, #36]	; 0x24
9001483a:	6812      	ldr	r2, [r2, #0]
9001483c:	e9dd 311a 	ldrd	r3, r1, [sp, #104]	; 0x68
90014840:	440b      	add	r3, r1
90014842:	4413      	add	r3, r2
90014844:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90014846:	f842 3b04 	str.w	r3, [r2], #4
9001484a:	459a      	cmp	sl, r3
9001484c:	920b      	str	r2, [sp, #44]	; 0x2c
9001484e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90014850:	bfb8      	it	lt
90014852:	469a      	movlt	sl, r3
90014854:	3204      	adds	r2, #4
90014856:	920c      	str	r2, [sp, #48]	; 0x30
90014858:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001485a:	6812      	ldr	r2, [r2, #0]
9001485c:	441a      	add	r2, r3
9001485e:	1a5b      	subs	r3, r3, r1
90014860:	4290      	cmp	r0, r2
90014862:	bfb8      	it	lt
90014864:	4610      	movlt	r0, r2
90014866:	6822      	ldr	r2, [r4, #0]
90014868:	4416      	add	r6, r2
9001486a:	9009      	str	r0, [sp, #36]	; 0x24
9001486c:	8133      	strh	r3, [r6, #8]
9001486e:	6863      	ldr	r3, [r4, #4]
90014870:	1a9b      	subs	r3, r3, r2
90014872:	9a15      	ldr	r2, [sp, #84]	; 0x54
90014874:	ebc2 0363 	rsb	r3, r2, r3, asr #1
90014878:	8173      	strh	r3, [r6, #10]
9001487a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001487c:	4443      	add	r3, r8
9001487e:	930d      	str	r3, [sp, #52]	; 0x34
90014880:	e715      	b.n	900146ae <EwGetAttrBitmap+0x1148>
90014882:	990e      	ldr	r1, [sp, #56]	; 0x38
90014884:	f85c 2b04 	ldr.w	r2, [ip], #4
90014888:	f851 3b04 	ldr.w	r3, [r1], #4
9001488c:	910e      	str	r1, [sp, #56]	; 0x38
9001488e:	ebaa 0303 	sub.w	r3, sl, r3
90014892:	f85e 1b04 	ldr.w	r1, [lr], #4
90014896:	296d      	cmp	r1, #109	; 0x6d
90014898:	d01c      	beq.n	900148d4 <EwGetAttrBitmap+0x136e>
9001489a:	2974      	cmp	r1, #116	; 0x74
9001489c:	bf08      	it	eq
9001489e:	2300      	moveq	r3, #0
900148a0:	6821      	ldr	r1, [r4, #0]
900148a2:	3202      	adds	r2, #2
900148a4:	3601      	adds	r6, #1
900148a6:	f831 7012 	ldrh.w	r7, [r1, r2, lsl #1]
900148aa:	0050      	lsls	r0, r2, #1
900148ac:	eb01 0842 	add.w	r8, r1, r2, lsl #1
900148b0:	fa17 f783 	uxtah	r7, r7, r3
900148b4:	3004      	adds	r0, #4
900148b6:	f821 7012 	strh.w	r7, [r1, r2, lsl #1]
900148ba:	5a0a      	ldrh	r2, [r1, r0]
900148bc:	fa12 f383 	uxtah	r3, r2, r3
900148c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900148c2:	520b      	strh	r3, [r1, r0]
900148c4:	f852 3b04 	ldr.w	r3, [r2], #4
900148c8:	3301      	adds	r3, #1
900148ca:	920f      	str	r2, [sp, #60]	; 0x3c
900148cc:	bf18      	it	ne
900148ce:	f828 ac08 	strhne.w	sl, [r8, #-8]
900148d2:	e6f4      	b.n	900146be <EwGetAttrBitmap+0x1158>
900148d4:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
900148d8:	105b      	asrs	r3, r3, #1
900148da:	e7e1      	b.n	900148a0 <EwGetAttrBitmap+0x133a>
900148dc:	2500      	movs	r5, #0
900148de:	4628      	mov	r0, r5
900148e0:	b02f      	add	sp, #188	; 0xbc
900148e2:	ecbd 8b02 	vpop	{d8}
900148e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900148ea:	bf00      	nop
900148ec:	9003497a 	.word	0x9003497a
900148f0:	00040801 	.word	0x00040801
900148f4:	2b6a      	cmp	r3, #106	; 0x6a
900148f6:	f47f ae1c 	bne.w	90014532 <EwGetAttrBitmap+0xfcc>
900148fa:	3e20      	subs	r6, #32
900148fc:	f105 000c 	add.w	r0, r5, #12
90014900:	ab25      	add	r3, sp, #148	; 0x94
90014902:	aa1c      	add	r2, sp, #112	; 0x70
90014904:	4659      	mov	r1, fp
90014906:	9301      	str	r3, [sp, #4]
90014908:	ab22      	add	r3, sp, #136	; 0x88
9001490a:	9300      	str	r3, [sp, #0]
9001490c:	ab1f      	add	r3, sp, #124	; 0x7c
9001490e:	f7fe f96b 	bl	90012be8 <EwCanDiscardSurface+0x168>
90014912:	8803      	ldrh	r3, [r0, #0]
90014914:	4605      	mov	r5, r0
90014916:	2b3a      	cmp	r3, #58	; 0x3a
90014918:	d104      	bne.n	90014924 <EwGetAttrBitmap+0x13be>
9001491a:	a92b      	add	r1, sp, #172	; 0xac
9001491c:	3002      	adds	r0, #2
9001491e:	f7fe f93d 	bl	90012b9c <EwCanDiscardSurface+0x11c>
90014922:	4605      	mov	r5, r0
90014924:	882b      	ldrh	r3, [r5, #0]
90014926:	2b7d      	cmp	r3, #125	; 0x7d
90014928:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001492a:	bf08      	it	eq
9001492c:	3502      	addeq	r5, #2
9001492e:	3301      	adds	r3, #1
90014930:	d016      	beq.n	90014960 <EwGetAttrBitmap+0x13fa>
90014932:	2106      	movs	r1, #6
90014934:	4620      	mov	r0, r4
90014936:	f7fe fa2f 	bl	90012d98 <EwCanDiscardSurface+0x318>
9001493a:	2800      	cmp	r0, #0
9001493c:	d0ce      	beq.n	900148dc <EwGetAttrBitmap+0x1376>
9001493e:	6863      	ldr	r3, [r4, #4]
90014940:	2252      	movs	r2, #82	; 0x52
90014942:	2100      	movs	r1, #0
90014944:	801a      	strh	r2, [r3, #0]
90014946:	8059      	strh	r1, [r3, #2]
90014948:	8119      	strh	r1, [r3, #8]
9001494a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001494e:	4402      	add	r2, r0
90014950:	809a      	strh	r2, [r3, #4]
90014952:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90014954:	80da      	strh	r2, [r3, #6]
90014956:	f103 020c 	add.w	r2, r3, #12
9001495a:	6062      	str	r2, [r4, #4]
9001495c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
9001495e:	815a      	strh	r2, [r3, #10]
90014960:	2107      	movs	r1, #7
90014962:	4620      	mov	r0, r4
90014964:	e9d4 3700 	ldrd	r3, r7, [r4]
90014968:	1aff      	subs	r7, r7, r3
9001496a:	ea4f 0867 	mov.w	r8, r7, asr #1
9001496e:	f7fe fa13 	bl	90012d98 <EwCanDiscardSurface+0x318>
90014972:	2800      	cmp	r0, #0
90014974:	d0b2      	beq.n	900148dc <EwGetAttrBitmap+0x1376>
90014976:	6863      	ldr	r3, [r4, #4]
90014978:	2147      	movs	r1, #71	; 0x47
9001497a:	f8dd e070 	ldr.w	lr, [sp, #112]	; 0x70
9001497e:	2000      	movs	r0, #0
90014980:	f8dd 907c 	ldr.w	r9, [sp, #124]	; 0x7c
90014984:	8019      	strh	r1, [r3, #0]
90014986:	ebab 0c0e 	sub.w	ip, fp, lr
9001498a:	8058      	strh	r0, [r3, #2]
9001498c:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	; 0x58
90014990:	4411      	add	r1, r2
90014992:	9a22      	ldr	r2, [sp, #136]	; 0x88
90014994:	8118      	strh	r0, [r3, #8]
90014996:	9116      	str	r1, [sp, #88]	; 0x58
90014998:	4411      	add	r1, r2
9001499a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001499c:	8099      	strh	r1, [r3, #4]
9001499e:	f103 010e 	add.w	r1, r3, #14
900149a2:	80da      	strh	r2, [r3, #6]
900149a4:	ebac 0209 	sub.w	r2, ip, r9
900149a8:	8158      	strh	r0, [r3, #10]
900149aa:	ee18 0a10 	vmov	r0, s16
900149ae:	6061      	str	r1, [r4, #4]
900149b0:	4629      	mov	r1, r5
900149b2:	f8a3 e00c 	strh.w	lr, [r3, #12]
900149b6:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
900149b8:	9306      	str	r3, [sp, #24]
900149ba:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
900149bc:	9305      	str	r3, [sp, #20]
900149be:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
900149c0:	9304      	str	r3, [sp, #16]
900149c2:	ab17      	add	r3, sp, #92	; 0x5c
900149c4:	9303      	str	r3, [sp, #12]
900149c6:	ab28      	add	r3, sp, #160	; 0xa0
900149c8:	e9cd 4301 	strd	r4, r3, [sp, #4]
900149cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
900149ce:	9300      	str	r3, [sp, #0]
900149d0:	4633      	mov	r3, r6
900149d2:	f7fe fdd4 	bl	9001357e <EwGetAttrBitmap+0x18>
900149d6:	4605      	mov	r5, r0
900149d8:	2800      	cmp	r0, #0
900149da:	f43f af7f 	beq.w	900148dc <EwGetAttrBitmap+0x1376>
900149de:	9928      	ldr	r1, [sp, #160]	; 0xa0
900149e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900149e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900149e4:	440b      	add	r3, r1
900149e6:	9916      	ldr	r1, [sp, #88]	; 0x58
900149e8:	4413      	add	r3, r2
900149ea:	440b      	add	r3, r1
900149ec:	6821      	ldr	r1, [r4, #0]
900149ee:	9316      	str	r3, [sp, #88]	; 0x58
900149f0:	b29b      	uxth	r3, r3
900149f2:	440f      	add	r7, r1
900149f4:	1a9a      	subs	r2, r3, r2
900149f6:	813a      	strh	r2, [r7, #8]
900149f8:	6862      	ldr	r2, [r4, #4]
900149fa:	1a52      	subs	r2, r2, r1
900149fc:	ebc8 0862 	rsb	r8, r8, r2, asr #1
90014a00:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90014a02:	3201      	adds	r2, #1
90014a04:	f8a7 800a 	strh.w	r8, [r7, #10]
90014a08:	f43f ad54 	beq.w	900144b4 <EwGetAttrBitmap+0xf4e>
90014a0c:	f827 3c04 	strh.w	r3, [r7, #-4]
90014a10:	e550      	b.n	900144b4 <EwGetAttrBitmap+0xf4e>

90014a12 <EwGetAttrColor>:
90014a12:	b082      	sub	sp, #8
90014a14:	b108      	cbz	r0, 90014a1a <EwGetAttrColor+0x8>
90014a16:	2900      	cmp	r1, #0
90014a18:	da06      	bge.n	90014a28 <EwGetAttrColor+0x16>
90014a1a:	2300      	movs	r3, #0
90014a1c:	461a      	mov	r2, r3
90014a1e:	4619      	mov	r1, r3
90014a20:	4618      	mov	r0, r3
90014a22:	b002      	add	sp, #8
90014a24:	f007 bf40 	b.w	9001c8a8 <EwNewColor>
90014a28:	6883      	ldr	r3, [r0, #8]
90014a2a:	428b      	cmp	r3, r1
90014a2c:	ddf5      	ble.n	90014a1a <EwGetAttrColor+0x8>
90014a2e:	6943      	ldr	r3, [r0, #20]
90014a30:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90014a34:	4602      	mov	r2, r0
90014a36:	4603      	mov	r3, r0
90014a38:	2000      	movs	r0, #0
90014a3a:	b2d2      	uxtb	r2, r2
90014a3c:	f362 0007 	bfi	r0, r2, #0, #8
90014a40:	f3c3 2207 	ubfx	r2, r3, #8, #8
90014a44:	f362 200f 	bfi	r0, r2, #8, #8
90014a48:	f3c3 4207 	ubfx	r2, r3, #16, #8
90014a4c:	0e1b      	lsrs	r3, r3, #24
90014a4e:	f362 4017 	bfi	r0, r2, #16, #8
90014a52:	f363 601f 	bfi	r0, r3, #24, #8
90014a56:	b002      	add	sp, #8
90014a58:	4770      	bx	lr
90014a5a:	b082      	sub	sp, #8
90014a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a60:	ed2d 8b02 	vpush	{d8}
90014a64:	b09f      	sub	sp, #124	; 0x7c
90014a66:	ee08 1a90 	vmov	s17, r1
90014a6a:	ee08 0a10 	vmov	s16, r0
90014a6e:	a92a      	add	r1, sp, #168	; 0xa8
90014a70:	9c33      	ldr	r4, [sp, #204]	; 0xcc
90014a72:	9d36      	ldr	r5, [sp, #216]	; 0xd8
90014a74:	e881 000c 	stmia.w	r1, {r2, r3}
90014a78:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
90014a7c:	9311      	str	r3, [sp, #68]	; 0x44
90014a7e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90014a80:	930f      	str	r3, [sp, #60]	; 0x3c
90014a82:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
90014a84:	930e      	str	r3, [sp, #56]	; 0x38
90014a86:	ab02      	add	r3, sp, #8
90014a88:	9312      	str	r3, [sp, #72]	; 0x48
90014a8a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
90014a8c:	429c      	cmp	r4, r3
90014a8e:	d306      	bcc.n	90014a9e <EwGetAttrColor+0x8c>
90014a90:	b01f      	add	sp, #124	; 0x7c
90014a92:	ecbd 8b02 	vpop	{d8}
90014a96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a9a:	b002      	add	sp, #8
90014a9c:	4770      	bx	lr
90014a9e:	8823      	ldrh	r3, [r4, #0]
90014aa0:	2b47      	cmp	r3, #71	; 0x47
90014aa2:	d002      	beq.n	90014aaa <EwGetAttrColor+0x98>
90014aa4:	2b52      	cmp	r3, #82	; 0x52
90014aa6:	f040 80af 	bne.w	90014c08 <EwGetAttrColor+0x1f6>
90014aaa:	9a30      	ldr	r2, [sp, #192]	; 0xc0
90014aac:	2b47      	cmp	r3, #71	; 0x47
90014aae:	f9b4 6002 	ldrsh.w	r6, [r4, #2]
90014ab2:	9931      	ldr	r1, [sp, #196]	; 0xc4
90014ab4:	4416      	add	r6, r2
90014ab6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90014aba:	440a      	add	r2, r1
90014abc:	920d      	str	r2, [sp, #52]	; 0x34
90014abe:	d071      	beq.n	90014ba4 <EwGetAttrColor+0x192>
90014ac0:	2b52      	cmp	r3, #82	; 0x52
90014ac2:	d1e2      	bne.n	90014a8a <EwGetAttrColor+0x78>
90014ac4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
90014ac6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90014aca:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
90014ace:	4413      	add	r3, r2
90014ad0:	8961      	ldrh	r1, [r4, #10]
90014ad2:	9832      	ldr	r0, [sp, #200]	; 0xc8
90014ad4:	9310      	str	r3, [sp, #64]	; 0x40
90014ad6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
90014ad8:	441f      	add	r7, r3
90014ada:	f7ff ff9a 	bl	90014a12 <EwGetAttrColor>
90014ade:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014ae0:	9015      	str	r0, [sp, #84]	; 0x54
90014ae2:	4628      	mov	r0, r5
90014ae4:	eba6 0b03 	sub.w	fp, r6, r3
90014ae8:	e9dd 230f 	ldrd	r2, r3, [sp, #60]	; 0x3c
90014aec:	4659      	mov	r1, fp
90014aee:	eba3 0802 	sub.w	r8, r3, r2
90014af2:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
90014af6:	1a9a      	subs	r2, r3, r2
90014af8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014afa:	eba7 0903 	sub.w	r9, r7, r3
90014afe:	9213      	str	r2, [sp, #76]	; 0x4c
90014b00:	f003 ffb3 	bl	90018a6a <EwGetOpacityFromGradient>
90014b04:	4641      	mov	r1, r8
90014b06:	4682      	mov	sl, r0
90014b08:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014b0a:	4628      	mov	r0, r5
90014b0c:	f003 ffad 	bl	90018a6a <EwGetOpacityFromGradient>
90014b10:	464a      	mov	r2, r9
90014b12:	4641      	mov	r1, r8
90014b14:	9013      	str	r0, [sp, #76]	; 0x4c
90014b16:	4628      	mov	r0, r5
90014b18:	f003 ffa7 	bl	90018a6a <EwGetOpacityFromGradient>
90014b1c:	464a      	mov	r2, r9
90014b1e:	4680      	mov	r8, r0
90014b20:	4659      	mov	r1, fp
90014b22:	4628      	mov	r0, r5
90014b24:	f003 ffa1 	bl	90018a6a <EwGetOpacityFromGradient>
90014b28:	4683      	mov	fp, r0
90014b2a:	ea4f 611a 	mov.w	r1, sl, lsr #24
90014b2e:	9815      	ldr	r0, [sp, #84]	; 0x54
90014b30:	f7fe f81a 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014b34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014b36:	4682      	mov	sl, r0
90014b38:	9016      	str	r0, [sp, #88]	; 0x58
90014b3a:	0e19      	lsrs	r1, r3, #24
90014b3c:	9815      	ldr	r0, [sp, #84]	; 0x54
90014b3e:	f7fe f813 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014b42:	4681      	mov	r9, r0
90014b44:	ea4f 6118 	mov.w	r1, r8, lsr #24
90014b48:	9017      	str	r0, [sp, #92]	; 0x5c
90014b4a:	9815      	ldr	r0, [sp, #84]	; 0x54
90014b4c:	f7fe f80c 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014b50:	4680      	mov	r8, r0
90014b52:	ea4f 611b 	mov.w	r1, fp, lsr #24
90014b56:	9018      	str	r0, [sp, #96]	; 0x60
90014b58:	9815      	ldr	r0, [sp, #84]	; 0x54
90014b5a:	f7fe f805 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014b5e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014b60:	f8cd a018 	str.w	sl, [sp, #24]
90014b64:	931b      	str	r3, [sp, #108]	; 0x6c
90014b66:	9b10      	ldr	r3, [sp, #64]	; 0x40
90014b68:	e9cd 371c 	strd	r3, r7, [sp, #112]	; 0x70
90014b6c:	9b11      	ldr	r3, [sp, #68]	; 0x44
90014b6e:	e9cd 0309 	strd	r0, r3, [sp, #36]	; 0x24
90014b72:	ab1e      	add	r3, sp, #120	; 0x78
90014b74:	e9cd 0619 	strd	r0, r6, [sp, #100]	; 0x64
90014b78:	e9cd 9807 	strd	r9, r8, [sp, #28]
90014b7c:	9e12      	ldr	r6, [sp, #72]	; 0x48
90014b7e:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
90014b82:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90014b86:	ab2c      	add	r3, sp, #176	; 0xb0
90014b88:	e893 0003 	ldmia.w	r3, {r0, r1}
90014b8c:	ab2a      	add	r3, sp, #168	; 0xa8
90014b8e:	e88d 0003 	stmia.w	sp, {r0, r1}
90014b92:	ee18 1a90 	vmov	r1, s17
90014b96:	ee18 0a10 	vmov	r0, s16
90014b9a:	cb0c      	ldmia	r3, {r2, r3}
90014b9c:	f7f7 ff6e 	bl	9000ca7c <EwFillRectangle>
90014ba0:	340c      	adds	r4, #12
90014ba2:	e772      	b.n	90014a8a <EwGetAttrColor+0x78>
90014ba4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90014ba6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90014ba8:	8967      	ldrh	r7, [r4, #10]
90014baa:	429a      	cmp	r2, r3
90014bac:	eb04 0747 	add.w	r7, r4, r7, lsl #1
90014bb0:	da28      	bge.n	90014c04 <EwGetAttrColor+0x1f2>
90014bb2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90014bb4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90014bb6:	429a      	cmp	r2, r3
90014bb8:	da24      	bge.n	90014c04 <EwGetAttrColor+0x1f2>
90014bba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90014bbe:	340e      	adds	r4, #14
90014bc0:	950a      	str	r5, [sp, #40]	; 0x28
90014bc2:	441e      	add	r6, r3
90014bc4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014bc6:	9407      	str	r4, [sp, #28]
90014bc8:	932e      	str	r3, [sp, #184]	; 0xb8
90014bca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014bcc:	932f      	str	r3, [sp, #188]	; 0xbc
90014bce:	9b11      	ldr	r3, [sp, #68]	; 0x44
90014bd0:	e9cd 7308 	strd	r7, r3, [sp, #32]
90014bd4:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90014bd6:	9306      	str	r3, [sp, #24]
90014bd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014bda:	e9cd 6304 	strd	r6, r3, [sp, #16]
90014bde:	ab2e      	add	r3, sp, #184	; 0xb8
90014be0:	e893 0003 	ldmia.w	r3, {r0, r1}
90014be4:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014be6:	e883 0003 	stmia.w	r3, {r0, r1}
90014bea:	ab2c      	add	r3, sp, #176	; 0xb0
90014bec:	e893 0003 	ldmia.w	r3, {r0, r1}
90014bf0:	ab2a      	add	r3, sp, #168	; 0xa8
90014bf2:	e88d 0003 	stmia.w	sp, {r0, r1}
90014bf6:	ee18 1a90 	vmov	r1, s17
90014bfa:	ee18 0a10 	vmov	r0, s16
90014bfe:	cb0c      	ldmia	r3, {r2, r3}
90014c00:	f7ff ff2b 	bl	90014a5a <EwGetAttrColor+0x48>
90014c04:	463c      	mov	r4, r7
90014c06:	e740      	b.n	90014a8a <EwGetAttrColor+0x78>
90014c08:	2b54      	cmp	r3, #84	; 0x54
90014c0a:	d001      	beq.n	90014c10 <EwGetAttrColor+0x1fe>
90014c0c:	2b4a      	cmp	r3, #74	; 0x4a
90014c0e:	d103      	bne.n	90014c18 <EwGetAttrColor+0x206>
90014c10:	88e3      	ldrh	r3, [r4, #6]
90014c12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90014c16:	e738      	b.n	90014a8a <EwGetAttrColor+0x78>
90014c18:	2b49      	cmp	r3, #73	; 0x49
90014c1a:	d0c1      	beq.n	90014ba0 <EwGetAttrColor+0x18e>
90014c1c:	2b41      	cmp	r3, #65	; 0x41
90014c1e:	bf08      	it	eq
90014c20:	340e      	addeq	r4, #14
90014c22:	e732      	b.n	90014a8a <EwGetAttrColor+0x78>
90014c24:	b082      	sub	sp, #8
90014c26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014c2a:	ed2d 8b02 	vpush	{d8}
90014c2e:	b0b9      	sub	sp, #228	; 0xe4
90014c30:	ee08 0a10 	vmov	s16, r0
90014c34:	911a      	str	r1, [sp, #104]	; 0x68
90014c36:	a944      	add	r1, sp, #272	; 0x110
90014c38:	9d50      	ldr	r5, [sp, #320]	; 0x140
90014c3a:	9213      	str	r2, [sp, #76]	; 0x4c
90014c3c:	e881 000c 	stmia.w	r1, {r2, r3}
90014c40:	f89d 313c 	ldrb.w	r3, [sp, #316]	; 0x13c
90014c44:	931b      	str	r3, [sp, #108]	; 0x6c
90014c46:	9b45      	ldr	r3, [sp, #276]	; 0x114
90014c48:	9312      	str	r3, [sp, #72]	; 0x48
90014c4a:	9b46      	ldr	r3, [sp, #280]	; 0x118
90014c4c:	9315      	str	r3, [sp, #84]	; 0x54
90014c4e:	9b47      	ldr	r3, [sp, #284]	; 0x11c
90014c50:	9314      	str	r3, [sp, #80]	; 0x50
90014c52:	9b48      	ldr	r3, [sp, #288]	; 0x120
90014c54:	9317      	str	r3, [sp, #92]	; 0x5c
90014c56:	9b49      	ldr	r3, [sp, #292]	; 0x124
90014c58:	e9dd b44c 	ldrd	fp, r4, [sp, #304]	; 0x130
90014c5c:	9316      	str	r3, [sp, #88]	; 0x58
90014c5e:	ab02      	add	r3, sp, #8
90014c60:	931f      	str	r3, [sp, #124]	; 0x7c
90014c62:	9b4e      	ldr	r3, [sp, #312]	; 0x138
90014c64:	429c      	cmp	r4, r3
90014c66:	d306      	bcc.n	90014c76 <EwGetAttrColor+0x264>
90014c68:	b039      	add	sp, #228	; 0xe4
90014c6a:	ecbd 8b02 	vpop	{d8}
90014c6e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014c72:	b002      	add	sp, #8
90014c74:	4770      	bx	lr
90014c76:	8823      	ldrh	r3, [r4, #0]
90014c78:	2b47      	cmp	r3, #71	; 0x47
90014c7a:	d003      	beq.n	90014c84 <EwGetAttrColor+0x272>
90014c7c:	2b52      	cmp	r3, #82	; 0x52
90014c7e:	d141      	bne.n	90014d04 <EwGetAttrColor+0x2f2>
90014c80:	340c      	adds	r4, #12
90014c82:	e7ee      	b.n	90014c62 <EwGetAttrColor+0x250>
90014c84:	9b15      	ldr	r3, [sp, #84]	; 0x54
90014c86:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014c88:	8966      	ldrh	r6, [r4, #10]
90014c8a:	4293      	cmp	r3, r2
90014c8c:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90014c90:	dd36      	ble.n	90014d00 <EwGetAttrColor+0x2ee>
90014c92:	9b14      	ldr	r3, [sp, #80]	; 0x50
90014c94:	9a12      	ldr	r2, [sp, #72]	; 0x48
90014c96:	4293      	cmp	r3, r2
90014c98:	dd32      	ble.n	90014d00 <EwGetAttrColor+0x2ee>
90014c9a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90014c9e:	340e      	adds	r4, #14
90014ca0:	994a      	ldr	r1, [sp, #296]	; 0x128
90014ca2:	f834 2c0a 	ldrh.w	r2, [r4, #-10]
90014ca6:	440b      	add	r3, r1
90014ca8:	f934 1c02 	ldrsh.w	r1, [r4, #-2]
90014cac:	950a      	str	r5, [sp, #40]	; 0x28
90014cae:	440b      	add	r3, r1
90014cb0:	9913      	ldr	r1, [sp, #76]	; 0x4c
90014cb2:	9144      	str	r1, [sp, #272]	; 0x110
90014cb4:	9912      	ldr	r1, [sp, #72]	; 0x48
90014cb6:	9145      	str	r1, [sp, #276]	; 0x114
90014cb8:	9915      	ldr	r1, [sp, #84]	; 0x54
90014cba:	9146      	str	r1, [sp, #280]	; 0x118
90014cbc:	9914      	ldr	r1, [sp, #80]	; 0x50
90014cbe:	9147      	str	r1, [sp, #284]	; 0x11c
90014cc0:	9917      	ldr	r1, [sp, #92]	; 0x5c
90014cc2:	9148      	str	r1, [sp, #288]	; 0x120
90014cc4:	9916      	ldr	r1, [sp, #88]	; 0x58
90014cc6:	9149      	str	r1, [sp, #292]	; 0x124
90014cc8:	991b      	ldr	r1, [sp, #108]	; 0x6c
90014cca:	e9cd 6108 	strd	r6, r1, [sp, #32]
90014cce:	994b      	ldr	r1, [sp, #300]	; 0x12c
90014cd0:	fa01 f282 	sxtah	r2, r1, r2
90014cd4:	e9cd 3204 	strd	r3, r2, [sp, #16]
90014cd8:	ab48      	add	r3, sp, #288	; 0x120
90014cda:	e9cd b406 	strd	fp, r4, [sp, #24]
90014cde:	e893 0003 	ldmia.w	r3, {r0, r1}
90014ce2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90014ce4:	e883 0003 	stmia.w	r3, {r0, r1}
90014ce8:	ab46      	add	r3, sp, #280	; 0x118
90014cea:	e893 0003 	ldmia.w	r3, {r0, r1}
90014cee:	ab44      	add	r3, sp, #272	; 0x110
90014cf0:	e88d 0003 	stmia.w	sp, {r0, r1}
90014cf4:	991a      	ldr	r1, [sp, #104]	; 0x68
90014cf6:	ee18 0a10 	vmov	r0, s16
90014cfa:	cb0c      	ldmia	r3, {r2, r3}
90014cfc:	f7ff ff92 	bl	90014c24 <EwGetAttrColor+0x212>
90014d00:	4634      	mov	r4, r6
90014d02:	e7ae      	b.n	90014c62 <EwGetAttrColor+0x250>
90014d04:	2b54      	cmp	r3, #84	; 0x54
90014d06:	d004      	beq.n	90014d12 <EwGetAttrColor+0x300>
90014d08:	f1a3 0249 	sub.w	r2, r3, #73	; 0x49
90014d0c:	2a01      	cmp	r2, #1
90014d0e:	f200 81c7 	bhi.w	900150a0 <EwGetAttrColor+0x68e>
90014d12:	994a      	ldr	r1, [sp, #296]	; 0x128
90014d14:	2b4a      	cmp	r3, #74	; 0x4a
90014d16:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90014d1a:	440a      	add	r2, r1
90014d1c:	994b      	ldr	r1, [sp, #300]	; 0x12c
90014d1e:	9218      	str	r2, [sp, #96]	; 0x60
90014d20:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90014d24:	440a      	add	r2, r1
90014d26:	9219      	str	r2, [sp, #100]	; 0x64
90014d28:	f000 8120 	beq.w	90014f6c <EwGetAttrColor+0x55a>
90014d2c:	2b54      	cmp	r3, #84	; 0x54
90014d2e:	f000 808d 	beq.w	90014e4c <EwGetAttrColor+0x43a>
90014d32:	2b49      	cmp	r3, #73	; 0x49
90014d34:	d195      	bne.n	90014c62 <EwGetAttrColor+0x250>
90014d36:	88e1      	ldrh	r1, [r4, #6]
90014d38:	4658      	mov	r0, fp
90014d3a:	f7fe fc14 	bl	90013566 <EwGetAttrBitmap>
90014d3e:	4606      	mov	r6, r0
90014d40:	b930      	cbnz	r0, 90014d50 <EwGetAttrColor+0x33e>
90014d42:	4601      	mov	r1, r0
90014d44:	4658      	mov	r0, fp
90014d46:	f7fe fc0e 	bl	90013566 <EwGetAttrBitmap>
90014d4a:	4606      	mov	r6, r0
90014d4c:	2800      	cmp	r0, #0
90014d4e:	d097      	beq.n	90014c80 <EwGetAttrColor+0x26e>
90014d50:	8923      	ldrh	r3, [r4, #8]
90014d52:	4628      	mov	r0, r5
90014d54:	9916      	ldr	r1, [sp, #88]	; 0x58
90014d56:	ee08 3a90 	vmov	s17, r3
90014d5a:	68b7      	ldr	r7, [r6, #8]
90014d5c:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
90014d60:	1a9b      	subs	r3, r3, r2
90014d62:	9a19      	ldr	r2, [sp, #100]	; 0x64
90014d64:	1a52      	subs	r2, r2, r1
90014d66:	6871      	ldr	r1, [r6, #4]
90014d68:	931c      	str	r3, [sp, #112]	; 0x70
90014d6a:	eb03 0801 	add.w	r8, r3, r1
90014d6e:	4417      	add	r7, r2
90014d70:	4619      	mov	r1, r3
90014d72:	921d      	str	r2, [sp, #116]	; 0x74
90014d74:	f003 fe79 	bl	90018a6a <EwGetOpacityFromGradient>
90014d78:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90014d7a:	4682      	mov	sl, r0
90014d7c:	4641      	mov	r1, r8
90014d7e:	4628      	mov	r0, r5
90014d80:	f003 fe73 	bl	90018a6a <EwGetOpacityFromGradient>
90014d84:	463a      	mov	r2, r7
90014d86:	4681      	mov	r9, r0
90014d88:	4641      	mov	r1, r8
90014d8a:	4628      	mov	r0, r5
90014d8c:	f003 fe6d 	bl	90018a6a <EwGetOpacityFromGradient>
90014d90:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90014d92:	463a      	mov	r2, r7
90014d94:	4680      	mov	r8, r0
90014d96:	4619      	mov	r1, r3
90014d98:	4628      	mov	r0, r5
90014d9a:	f003 fe66 	bl	90018a6a <EwGetOpacityFromGradient>
90014d9e:	8961      	ldrh	r1, [r4, #10]
90014da0:	901c      	str	r0, [sp, #112]	; 0x70
90014da2:	4658      	mov	r0, fp
90014da4:	f7ff fe35 	bl	90014a12 <EwGetAttrColor>
90014da8:	9b18      	ldr	r3, [sp, #96]	; 0x60
90014daa:	2200      	movs	r2, #0
90014dac:	4607      	mov	r7, r0
90014dae:	9334      	str	r3, [sp, #208]	; 0xd0
90014db0:	ea4f 611a 	mov.w	r1, sl, lsr #24
90014db4:	9b19      	ldr	r3, [sp, #100]	; 0x64
90014db6:	9023      	str	r0, [sp, #140]	; 0x8c
90014db8:	9335      	str	r3, [sp, #212]	; 0xd4
90014dba:	9b18      	ldr	r3, [sp, #96]	; 0x60
90014dbc:	e9cd 2232 	strd	r2, r2, [sp, #200]	; 0xc8
90014dc0:	6872      	ldr	r2, [r6, #4]
90014dc2:	441a      	add	r2, r3
90014dc4:	9b19      	ldr	r3, [sp, #100]	; 0x64
90014dc6:	9236      	str	r2, [sp, #216]	; 0xd8
90014dc8:	68b2      	ldr	r2, [r6, #8]
90014dca:	441a      	add	r2, r3
90014dcc:	9237      	str	r2, [sp, #220]	; 0xdc
90014dce:	f7fd fecb 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014dd2:	ea4f 6119 	mov.w	r1, r9, lsr #24
90014dd6:	4682      	mov	sl, r0
90014dd8:	902c      	str	r0, [sp, #176]	; 0xb0
90014dda:	4638      	mov	r0, r7
90014ddc:	f7fd fec4 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014de0:	4681      	mov	r9, r0
90014de2:	ea4f 6118 	mov.w	r1, r8, lsr #24
90014de6:	902d      	str	r0, [sp, #180]	; 0xb4
90014de8:	4638      	mov	r0, r7
90014dea:	f7fd febd 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014dee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90014df0:	4680      	mov	r8, r0
90014df2:	902e      	str	r0, [sp, #184]	; 0xb8
90014df4:	0e19      	lsrs	r1, r3, #24
90014df6:	4638      	mov	r0, r7
90014df8:	f7fd feb6 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014dfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014dfe:	2100      	movs	r1, #0
90014e00:	902f      	str	r0, [sp, #188]	; 0xbc
90014e02:	9344      	str	r3, [sp, #272]	; 0x110
90014e04:	af04      	add	r7, sp, #16
90014e06:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014e08:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
90014e0c:	9345      	str	r3, [sp, #276]	; 0x114
90014e0e:	9b15      	ldr	r3, [sp, #84]	; 0x54
90014e10:	9346      	str	r3, [sp, #280]	; 0x118
90014e12:	9b14      	ldr	r3, [sp, #80]	; 0x50
90014e14:	9347      	str	r3, [sp, #284]	; 0x11c
90014e16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90014e18:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
90014e1c:	ab08      	add	r3, sp, #32
90014e1e:	4608      	mov	r0, r1
90014e20:	e9cd 980b 	strd	r9, r8, [sp, #44]	; 0x2c
90014e24:	e883 0003 	stmia.w	r3, {r0, r1}
90014e28:	ab38      	add	r3, sp, #224	; 0xe0
90014e2a:	e913 000f 	ldmdb	r3, {r0, r1, r2, r3}
90014e2e:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90014e32:	ab44      	add	r3, sp, #272	; 0x110
90014e34:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90014e36:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
90014e3a:	ee18 3a90 	vmov	r3, s17
90014e3e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
90014e40:	4631      	mov	r1, r6
90014e42:	ee18 0a10 	vmov	r0, s16
90014e46:	f7fa fe47 	bl	9000fad8 <EwCopyBitmap>
90014e4a:	e719      	b.n	90014c80 <EwGetAttrColor+0x26e>
90014e4c:	8921      	ldrh	r1, [r4, #8]
90014e4e:	4658      	mov	r0, fp
90014e50:	f7fe fb7d 	bl	9001354e <EwGetAttrFont>
90014e54:	8961      	ldrh	r1, [r4, #10]
90014e56:	4606      	mov	r6, r0
90014e58:	4658      	mov	r0, fp
90014e5a:	f7ff fdda 	bl	90014a12 <EwGetAttrColor>
90014e5e:	88e3      	ldrh	r3, [r4, #6]
90014e60:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90014e62:	931c      	str	r3, [sp, #112]	; 0x70
90014e64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014e66:	9917      	ldr	r1, [sp, #92]	; 0x5c
90014e68:	1a9f      	subs	r7, r3, r2
90014e6a:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014e6c:	9a16      	ldr	r2, [sp, #88]	; 0x58
90014e6e:	9034      	str	r0, [sp, #208]	; 0xd0
90014e70:	4628      	mov	r0, r5
90014e72:	1a9a      	subs	r2, r3, r2
90014e74:	9b15      	ldr	r3, [sp, #84]	; 0x54
90014e76:	eba3 0901 	sub.w	r9, r3, r1
90014e7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
90014e7c:	9916      	ldr	r1, [sp, #88]	; 0x58
90014e7e:	921d      	str	r2, [sp, #116]	; 0x74
90014e80:	eba3 0801 	sub.w	r8, r3, r1
90014e84:	4639      	mov	r1, r7
90014e86:	f003 fdf0 	bl	90018a6a <EwGetOpacityFromGradient>
90014e8a:	4649      	mov	r1, r9
90014e8c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90014e8e:	4682      	mov	sl, r0
90014e90:	4628      	mov	r0, r5
90014e92:	f8cd 9078 	str.w	r9, [sp, #120]	; 0x78
90014e96:	f003 fde8 	bl	90018a6a <EwGetOpacityFromGradient>
90014e9a:	4642      	mov	r2, r8
90014e9c:	991e      	ldr	r1, [sp, #120]	; 0x78
90014e9e:	4681      	mov	r9, r0
90014ea0:	4628      	mov	r0, r5
90014ea2:	f8cd 8074 	str.w	r8, [sp, #116]	; 0x74
90014ea6:	f003 fde0 	bl	90018a6a <EwGetOpacityFromGradient>
90014eaa:	4639      	mov	r1, r7
90014eac:	4680      	mov	r8, r0
90014eae:	9a1d      	ldr	r2, [sp, #116]	; 0x74
90014eb0:	4628      	mov	r0, r5
90014eb2:	f003 fdda 	bl	90018a6a <EwGetOpacityFromGradient>
90014eb6:	4607      	mov	r7, r0
90014eb8:	b936      	cbnz	r6, 90014ec8 <EwGetAttrColor+0x4b6>
90014eba:	4631      	mov	r1, r6
90014ebc:	4658      	mov	r0, fp
90014ebe:	f7fe fb46 	bl	9001354e <EwGetAttrFont>
90014ec2:	4606      	mov	r6, r0
90014ec4:	2800      	cmp	r0, #0
90014ec6:	d04d      	beq.n	90014f64 <EwGetAttrColor+0x552>
90014ec8:	ea4f 611a 	mov.w	r1, sl, lsr #24
90014ecc:	9834      	ldr	r0, [sp, #208]	; 0xd0
90014ece:	f7fd fe4b 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014ed2:	4682      	mov	sl, r0
90014ed4:	ea4f 6119 	mov.w	r1, r9, lsr #24
90014ed8:	9024      	str	r0, [sp, #144]	; 0x90
90014eda:	9834      	ldr	r0, [sp, #208]	; 0xd0
90014edc:	f7fd fe44 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014ee0:	4681      	mov	r9, r0
90014ee2:	ea4f 6118 	mov.w	r1, r8, lsr #24
90014ee6:	9025      	str	r0, [sp, #148]	; 0x94
90014ee8:	9834      	ldr	r0, [sp, #208]	; 0xd0
90014eea:	f7fd fe3d 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014eee:	4680      	mov	r8, r0
90014ef0:	0e39      	lsrs	r1, r7, #24
90014ef2:	9026      	str	r0, [sp, #152]	; 0x98
90014ef4:	9834      	ldr	r0, [sp, #208]	; 0xd0
90014ef6:	af05      	add	r7, sp, #20
90014ef8:	f7fd fe36 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90014efc:	9a18      	ldr	r2, [sp, #96]	; 0x60
90014efe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014f00:	9027      	str	r0, [sp, #156]	; 0x9c
90014f02:	1a9b      	subs	r3, r3, r2
90014f04:	9a19      	ldr	r2, [sp, #100]	; 0x64
90014f06:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
90014f0a:	9330      	str	r3, [sp, #192]	; 0xc0
90014f0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014f0e:	1a9b      	subs	r3, r3, r2
90014f10:	9331      	str	r3, [sp, #196]	; 0xc4
90014f12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014f14:	9344      	str	r3, [sp, #272]	; 0x110
90014f16:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014f18:	9345      	str	r3, [sp, #276]	; 0x114
90014f1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
90014f1c:	9346      	str	r3, [sp, #280]	; 0x118
90014f1e:	9b14      	ldr	r3, [sp, #80]	; 0x50
90014f20:	9347      	str	r3, [sp, #284]	; 0x11c
90014f22:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90014f24:	e9cd 0310 	strd	r0, r3, [sp, #64]	; 0x40
90014f28:	2300      	movs	r3, #0
90014f2a:	e9cd 980e 	strd	r9, r8, [sp, #56]	; 0x38
90014f2e:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
90014f32:	e9dd 0130 	ldrd	r0, r1, [sp, #192]	; 0xc0
90014f36:	ab09      	add	r3, sp, #36	; 0x24
90014f38:	e883 0003 	stmia.w	r3, {r0, r1}
90014f3c:	ab44      	add	r3, sp, #272	; 0x110
90014f3e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90014f40:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90014f44:	ab44      	add	r3, sp, #272	; 0x110
90014f46:	af01      	add	r7, sp, #4
90014f48:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90014f4a:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90014f4e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90014f50:	f104 020c 	add.w	r2, r4, #12
90014f54:	4631      	mov	r1, r6
90014f56:	ee18 0a10 	vmov	r0, s16
90014f5a:	9300      	str	r3, [sp, #0]
90014f5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90014f5e:	3b06      	subs	r3, #6
90014f60:	f7fc f888 	bl	90011074 <EwDrawText>
90014f64:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90014f66:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90014f6a:	e67a      	b.n	90014c62 <EwGetAttrColor+0x250>
90014f6c:	8921      	ldrh	r1, [r4, #8]
90014f6e:	4658      	mov	r0, fp
90014f70:	f7fe faed 	bl	9001354e <EwGetAttrFont>
90014f74:	8961      	ldrh	r1, [r4, #10]
90014f76:	4606      	mov	r6, r0
90014f78:	4658      	mov	r0, fp
90014f7a:	f7ff fd4a 	bl	90014a12 <EwGetAttrColor>
90014f7e:	88e3      	ldrh	r3, [r4, #6]
90014f80:	9917      	ldr	r1, [sp, #92]	; 0x5c
90014f82:	931c      	str	r3, [sp, #112]	; 0x70
90014f84:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90014f88:	9034      	str	r0, [sp, #208]	; 0xd0
90014f8a:	4628      	mov	r0, r5
90014f8c:	3b01      	subs	r3, #1
90014f8e:	005a      	lsls	r2, r3, #1
90014f90:	f834 3013 	ldrh.w	r3, [r4, r3, lsl #1]
90014f94:	921d      	str	r2, [sp, #116]	; 0x74
90014f96:	931e      	str	r3, [sp, #120]	; 0x78
90014f98:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90014f9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90014f9c:	1a9f      	subs	r7, r3, r2
90014f9e:	9b12      	ldr	r3, [sp, #72]	; 0x48
90014fa0:	9a16      	ldr	r2, [sp, #88]	; 0x58
90014fa2:	1a9a      	subs	r2, r3, r2
90014fa4:	9b15      	ldr	r3, [sp, #84]	; 0x54
90014fa6:	eba3 0901 	sub.w	r9, r3, r1
90014faa:	9b14      	ldr	r3, [sp, #80]	; 0x50
90014fac:	9916      	ldr	r1, [sp, #88]	; 0x58
90014fae:	9220      	str	r2, [sp, #128]	; 0x80
90014fb0:	eba3 0801 	sub.w	r8, r3, r1
90014fb4:	4639      	mov	r1, r7
90014fb6:	f003 fd58 	bl	90018a6a <EwGetOpacityFromGradient>
90014fba:	4649      	mov	r1, r9
90014fbc:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014fbe:	4682      	mov	sl, r0
90014fc0:	4628      	mov	r0, r5
90014fc2:	f8cd 9084 	str.w	r9, [sp, #132]	; 0x84
90014fc6:	f003 fd50 	bl	90018a6a <EwGetOpacityFromGradient>
90014fca:	4642      	mov	r2, r8
90014fcc:	9921      	ldr	r1, [sp, #132]	; 0x84
90014fce:	4681      	mov	r9, r0
90014fd0:	4628      	mov	r0, r5
90014fd2:	f8cd 8080 	str.w	r8, [sp, #128]	; 0x80
90014fd6:	f003 fd48 	bl	90018a6a <EwGetOpacityFromGradient>
90014fda:	4639      	mov	r1, r7
90014fdc:	4680      	mov	r8, r0
90014fde:	9a20      	ldr	r2, [sp, #128]	; 0x80
90014fe0:	4628      	mov	r0, r5
90014fe2:	f003 fd42 	bl	90018a6a <EwGetOpacityFromGradient>
90014fe6:	4607      	mov	r7, r0
90014fe8:	b936      	cbnz	r6, 90014ff8 <EwGetAttrColor+0x5e6>
90014fea:	4631      	mov	r1, r6
90014fec:	4658      	mov	r0, fp
90014fee:	f7fe faae 	bl	9001354e <EwGetAttrFont>
90014ff2:	4606      	mov	r6, r0
90014ff4:	2800      	cmp	r0, #0
90014ff6:	d04f      	beq.n	90015098 <EwGetAttrColor+0x686>
90014ff8:	ea4f 611a 	mov.w	r1, sl, lsr #24
90014ffc:	9834      	ldr	r0, [sp, #208]	; 0xd0
90014ffe:	f7fd fdb3 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90015002:	4682      	mov	sl, r0
90015004:	ea4f 6119 	mov.w	r1, r9, lsr #24
90015008:	9028      	str	r0, [sp, #160]	; 0xa0
9001500a:	9834      	ldr	r0, [sp, #208]	; 0xd0
9001500c:	f7fd fdac 	bl	90012b68 <EwCanDiscardSurface+0xe8>
90015010:	4681      	mov	r9, r0
90015012:	ea4f 6118 	mov.w	r1, r8, lsr #24
90015016:	9029      	str	r0, [sp, #164]	; 0xa4
90015018:	9834      	ldr	r0, [sp, #208]	; 0xd0
9001501a:	f7fd fda5 	bl	90012b68 <EwCanDiscardSurface+0xe8>
9001501e:	4680      	mov	r8, r0
90015020:	0e39      	lsrs	r1, r7, #24
90015022:	902a      	str	r0, [sp, #168]	; 0xa8
90015024:	9834      	ldr	r0, [sp, #208]	; 0xd0
90015026:	af05      	add	r7, sp, #20
90015028:	f7fd fd9e 	bl	90012b68 <EwCanDiscardSurface+0xe8>
9001502c:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001502e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90015030:	902b      	str	r0, [sp, #172]	; 0xac
90015032:	1a9b      	subs	r3, r3, r2
90015034:	9a19      	ldr	r2, [sp, #100]	; 0x64
90015036:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
9001503a:	9330      	str	r3, [sp, #192]	; 0xc0
9001503c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001503e:	1a9b      	subs	r3, r3, r2
90015040:	9331      	str	r3, [sp, #196]	; 0xc4
90015042:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90015044:	9344      	str	r3, [sp, #272]	; 0x110
90015046:	9b12      	ldr	r3, [sp, #72]	; 0x48
90015048:	9345      	str	r3, [sp, #276]	; 0x114
9001504a:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001504c:	9346      	str	r3, [sp, #280]	; 0x118
9001504e:	9b14      	ldr	r3, [sp, #80]	; 0x50
90015050:	9347      	str	r3, [sp, #284]	; 0x11c
90015052:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90015054:	e9cd 0310 	strd	r0, r3, [sp, #64]	; 0x40
90015058:	2300      	movs	r3, #0
9001505a:	930c      	str	r3, [sp, #48]	; 0x30
9001505c:	f9bd 3078 	ldrsh.w	r3, [sp, #120]	; 0x78
90015060:	e9cd 980e 	strd	r9, r8, [sp, #56]	; 0x38
90015064:	930b      	str	r3, [sp, #44]	; 0x2c
90015066:	ab09      	add	r3, sp, #36	; 0x24
90015068:	e9dd 0130 	ldrd	r0, r1, [sp, #192]	; 0xc0
9001506c:	e883 0003 	stmia.w	r3, {r0, r1}
90015070:	ab44      	add	r3, sp, #272	; 0x110
90015072:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90015074:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90015078:	ab44      	add	r3, sp, #272	; 0x110
9001507a:	af01      	add	r7, sp, #4
9001507c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9001507e:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90015082:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90015084:	f104 020c 	add.w	r2, r4, #12
90015088:	4631      	mov	r1, r6
9001508a:	ee18 0a10 	vmov	r0, s16
9001508e:	9300      	str	r3, [sp, #0]
90015090:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90015092:	3b07      	subs	r3, #7
90015094:	f7fb ffee 	bl	90011074 <EwDrawText>
90015098:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001509a:	3302      	adds	r3, #2
9001509c:	441c      	add	r4, r3
9001509e:	e5e0      	b.n	90014c62 <EwGetAttrColor+0x250>
900150a0:	2b41      	cmp	r3, #65	; 0x41
900150a2:	bf08      	it	eq
900150a4:	340e      	addeq	r4, #14
900150a6:	e5dc      	b.n	90014c62 <EwGetAttrColor+0x250>

900150a8 <EwSetAttrFont>:
900150a8:	b138      	cbz	r0, 900150ba <EwSetAttrFont+0x12>
900150aa:	2900      	cmp	r1, #0
900150ac:	db05      	blt.n	900150ba <EwSetAttrFont+0x12>
900150ae:	6803      	ldr	r3, [r0, #0]
900150b0:	428b      	cmp	r3, r1
900150b2:	bfc4      	itt	gt
900150b4:	68c3      	ldrgt	r3, [r0, #12]
900150b6:	f843 2021 	strgt.w	r2, [r3, r1, lsl #2]
900150ba:	4770      	bx	lr

900150bc <EwSetAttrBitmap>:
900150bc:	b138      	cbz	r0, 900150ce <EwSetAttrBitmap+0x12>
900150be:	2900      	cmp	r1, #0
900150c0:	db05      	blt.n	900150ce <EwSetAttrBitmap+0x12>
900150c2:	6843      	ldr	r3, [r0, #4]
900150c4:	428b      	cmp	r3, r1
900150c6:	bfc4      	itt	gt
900150c8:	6903      	ldrgt	r3, [r0, #16]
900150ca:	f843 2021 	strgt.w	r2, [r3, r1, lsl #2]
900150ce:	4770      	bx	lr

900150d0 <EwSetAttrColor>:
900150d0:	b082      	sub	sp, #8
900150d2:	b140      	cbz	r0, 900150e6 <EwSetAttrColor+0x16>
900150d4:	2900      	cmp	r1, #0
900150d6:	db06      	blt.n	900150e6 <EwSetAttrColor+0x16>
900150d8:	6883      	ldr	r3, [r0, #8]
900150da:	428b      	cmp	r3, r1
900150dc:	bfc2      	ittt	gt
900150de:	6943      	ldrgt	r3, [r0, #20]
900150e0:	4610      	movgt	r0, r2
900150e2:	f843 0021 	strgt.w	r0, [r3, r1, lsl #2]
900150e6:	b002      	add	sp, #8
900150e8:	4770      	bx	lr

900150ea <EwParseAttrString>:
900150ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900150ee:	4617      	mov	r7, r2
900150f0:	b08f      	sub	sp, #60	; 0x3c
900150f2:	4698      	mov	r8, r3
900150f4:	f04f 32ff 	mov.w	r2, #4294967295
900150f8:	2300      	movs	r3, #0
900150fa:	460e      	mov	r6, r1
900150fc:	4604      	mov	r4, r0
900150fe:	930d      	str	r3, [sp, #52]	; 0x34
90015100:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
90015104:	e9cd 230b 	strd	r2, r3, [sp, #44]	; 0x2c
90015108:	b920      	cbnz	r0, 90015114 <EwParseAttrString+0x2a>
9001510a:	2400      	movs	r4, #0
9001510c:	4620      	mov	r0, r4
9001510e:	b00f      	add	sp, #60	; 0x3c
90015110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015114:	2900      	cmp	r1, #0
90015116:	d0f8      	beq.n	9001510a <EwParseAttrString+0x20>
90015118:	880b      	ldrh	r3, [r1, #0]
9001511a:	2b00      	cmp	r3, #0
9001511c:	d0f5      	beq.n	9001510a <EwParseAttrString+0x20>
9001511e:	2f00      	cmp	r7, #0
90015120:	ddf3      	ble.n	9001510a <EwParseAttrString+0x20>
90015122:	200c      	movs	r0, #12
90015124:	f011 fdc6 	bl	90026cb4 <EwAlloc>
90015128:	4605      	mov	r5, r0
9001512a:	2800      	cmp	r0, #0
9001512c:	f040 809b 	bne.w	90015266 <EwParseAttrString+0x17c>
90015130:	2015      	movs	r0, #21
90015132:	f009 f93f 	bl	9001e3b4 <EwImmediateReclaimMemory>
90015136:	2800      	cmp	r0, #0
90015138:	d1f3      	bne.n	90015122 <EwParseAttrString+0x38>
9001513a:	2015      	movs	r0, #21
9001513c:	f008 f988 	bl	9001d450 <EwError>
90015140:	e0a9      	b.n	90015296 <EwParseAttrString+0x1ac>
90015142:	2a7b      	cmp	r2, #123	; 0x7b
90015144:	d126      	bne.n	90015194 <EwParseAttrString+0xaa>
90015146:	4651      	mov	r1, sl
90015148:	4630      	mov	r0, r6
9001514a:	f7fd fd85 	bl	90012c58 <EwCanDiscardSurface+0x1d8>
9001514e:	b330      	cbz	r0, 9001519e <EwParseAttrString+0xb4>
90015150:	f106 010a 	add.w	r1, r6, #10
90015154:	4608      	mov	r0, r1
90015156:	4606      	mov	r6, r0
90015158:	f830 2b02 	ldrh.w	r2, [r0], #2
9001515c:	b11a      	cbz	r2, 90015166 <EwParseAttrString+0x7c>
9001515e:	2a7d      	cmp	r2, #125	; 0x7d
90015160:	d001      	beq.n	90015166 <EwParseAttrString+0x7c>
90015162:	2a7b      	cmp	r2, #123	; 0x7b
90015164:	d1f7      	bne.n	90015156 <EwParseAttrString+0x6c>
90015166:	1a72      	subs	r2, r6, r1
90015168:	4638      	mov	r0, r7
9001516a:	9207      	str	r2, [sp, #28]
9001516c:	f011 fdd2 	bl	90026d14 <EwCopy>
90015170:	9a07      	ldr	r2, [sp, #28]
90015172:	f06f 0301 	mvn.w	r3, #1
90015176:	f827 b002 	strh.w	fp, [r7, r2]
9001517a:	3202      	adds	r2, #2
9001517c:	f8c9 b008 	str.w	fp, [r9, #8]
90015180:	f8c9 3004 	str.w	r3, [r9, #4]
90015184:	f8c9 b014 	str.w	fp, [r9, #20]
90015188:	e9c9 bb03 	strd	fp, fp, [r9, #12]
9001518c:	f849 7b18 	str.w	r7, [r9], #24
90015190:	4417      	add	r7, r2
90015192:	e02b      	b.n	900151ec <EwParseAttrString+0x102>
90015194:	2a25      	cmp	r2, #37	; 0x25
90015196:	8871      	ldrh	r1, [r6, #2]
90015198:	d101      	bne.n	9001519e <EwParseAttrString+0xb4>
9001519a:	b101      	cbz	r1, 9001519e <EwParseAttrString+0xb4>
9001519c:	3602      	adds	r6, #2
9001519e:	3602      	adds	r6, #2
900151a0:	e024      	b.n	900151ec <EwParseAttrString+0x102>
900151a2:	2d00      	cmp	r5, #0
900151a4:	d0b1      	beq.n	9001510a <EwParseAttrString+0x20>
900151a6:	e049      	b.n	9001523c <EwParseAttrString+0x152>
900151a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900151aa:	f840 ab18 	str.w	sl, [r0], #24
900151ae:	1e5a      	subs	r2, r3, #1
900151b0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900151b4:	6060      	str	r0, [r4, #4]
900151b6:	4253      	negs	r3, r2
900151b8:	f8c4 900c 	str.w	r9, [r4, #12]
900151bc:	4153      	adcs	r3, r2
900151be:	4642      	mov	r2, r8
900151c0:	7223      	strb	r3, [r4, #8]
900151c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900151c4:	6829      	ldr	r1, [r5, #0]
900151c6:	6123      	str	r3, [r4, #16]
900151c8:	007b      	lsls	r3, r7, #1
900151ca:	eb00 0747 	add.w	r7, r0, r7, lsl #1
900151ce:	9306      	str	r3, [sp, #24]
900151d0:	6167      	str	r7, [r4, #20]
900151d2:	f011 fd9d 	bl	90026d10 <EwMove>
900151d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900151d8:	b19b      	cbz	r3, 90015202 <EwParseAttrString+0x118>
900151da:	2318      	movs	r3, #24
900151dc:	f8df a144 	ldr.w	sl, [pc, #324]	; 90015324 <EwParseAttrString+0x23a>
900151e0:	f04f 0b00 	mov.w	fp, #0
900151e4:	fb03 7709 	mla	r7, r3, r9, r7
900151e8:	f8d4 9014 	ldr.w	r9, [r4, #20]
900151ec:	8832      	ldrh	r2, [r6, #0]
900151ee:	2a00      	cmp	r2, #0
900151f0:	d1a7      	bne.n	90015142 <EwParseAttrString+0x58>
900151f2:	6863      	ldr	r3, [r4, #4]
900151f4:	eb03 0108 	add.w	r1, r3, r8
900151f8:	9100      	str	r1, [sp, #0]
900151fa:	4611      	mov	r1, r2
900151fc:	6960      	ldr	r0, [r4, #20]
900151fe:	f7fd fd38 	bl	90012c72 <EwCanDiscardSurface+0x1f2>
90015202:	4a43      	ldr	r2, [pc, #268]	; (90015310 <EwParseAttrString+0x226>)
90015204:	2018      	movs	r0, #24
90015206:	990c      	ldr	r1, [sp, #48]	; 0x30
90015208:	6813      	ldr	r3, [r2, #0]
9001520a:	3318      	adds	r3, #24
9001520c:	fb00 3301 	mla	r3, r0, r1, r3
90015210:	990d      	ldr	r1, [sp, #52]	; 0x34
90015212:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90015216:	9906      	ldr	r1, [sp, #24]
90015218:	440b      	add	r3, r1
9001521a:	6013      	str	r3, [r2, #0]
9001521c:	4a3d      	ldr	r2, [pc, #244]	; (90015314 <EwParseAttrString+0x22a>)
9001521e:	6811      	ldr	r1, [r2, #0]
90015220:	428b      	cmp	r3, r1
90015222:	493d      	ldr	r1, [pc, #244]	; (90015318 <EwParseAttrString+0x22e>)
90015224:	bfc8      	it	gt
90015226:	6013      	strgt	r3, [r2, #0]
90015228:	4a3c      	ldr	r2, [pc, #240]	; (9001531c <EwParseAttrString+0x232>)
9001522a:	6809      	ldr	r1, [r1, #0]
9001522c:	6812      	ldr	r2, [r2, #0]
9001522e:	440a      	add	r2, r1
90015230:	4413      	add	r3, r2
90015232:	4a3b      	ldr	r2, [pc, #236]	; (90015320 <EwParseAttrString+0x236>)
90015234:	6811      	ldr	r1, [r2, #0]
90015236:	428b      	cmp	r3, r1
90015238:	dd00      	ble.n	9001523c <EwParseAttrString+0x152>
9001523a:	6013      	str	r3, [r2, #0]
9001523c:	6828      	ldr	r0, [r5, #0]
9001523e:	4e34      	ldr	r6, [pc, #208]	; (90015310 <EwParseAttrString+0x226>)
90015240:	b130      	cbz	r0, 90015250 <EwParseAttrString+0x166>
90015242:	f011 fd39 	bl	90026cb8 <EwFree>
90015246:	6833      	ldr	r3, [r6, #0]
90015248:	68aa      	ldr	r2, [r5, #8]
9001524a:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001524e:	6033      	str	r3, [r6, #0]
90015250:	2300      	movs	r3, #0
90015252:	4628      	mov	r0, r5
90015254:	e9c5 3300 	strd	r3, r3, [r5]
90015258:	60ab      	str	r3, [r5, #8]
9001525a:	f011 fd2d 	bl	90026cb8 <EwFree>
9001525e:	6833      	ldr	r3, [r6, #0]
90015260:	3b0c      	subs	r3, #12
90015262:	6033      	str	r3, [r6, #0]
90015264:	e752      	b.n	9001510c <EwParseAttrString+0x22>
90015266:	2300      	movs	r3, #0
90015268:	e9c0 3300 	strd	r3, r3, [r0]
9001526c:	6083      	str	r3, [r0, #8]
9001526e:	4b28      	ldr	r3, [pc, #160]	; (90015310 <EwParseAttrString+0x226>)
90015270:	6819      	ldr	r1, [r3, #0]
90015272:	310c      	adds	r1, #12
90015274:	6019      	str	r1, [r3, #0]
90015276:	4b27      	ldr	r3, [pc, #156]	; (90015314 <EwParseAttrString+0x22a>)
90015278:	681a      	ldr	r2, [r3, #0]
9001527a:	4291      	cmp	r1, r2
9001527c:	dd00      	ble.n	90015280 <EwParseAttrString+0x196>
9001527e:	6019      	str	r1, [r3, #0]
90015280:	4b26      	ldr	r3, [pc, #152]	; (9001531c <EwParseAttrString+0x232>)
90015282:	4a25      	ldr	r2, [pc, #148]	; (90015318 <EwParseAttrString+0x22e>)
90015284:	681b      	ldr	r3, [r3, #0]
90015286:	6812      	ldr	r2, [r2, #0]
90015288:	4413      	add	r3, r2
9001528a:	4419      	add	r1, r3
9001528c:	4b24      	ldr	r3, [pc, #144]	; (90015320 <EwParseAttrString+0x236>)
9001528e:	681a      	ldr	r2, [r3, #0]
90015290:	4291      	cmp	r1, r2
90015292:	bfc8      	it	gt
90015294:	6019      	strgt	r1, [r3, #0]
90015296:	ab0d      	add	r3, sp, #52	; 0x34
90015298:	4620      	mov	r0, r4
9001529a:	463a      	mov	r2, r7
9001529c:	4631      	mov	r1, r6
9001529e:	9305      	str	r3, [sp, #20]
900152a0:	ab0c      	add	r3, sp, #48	; 0x30
900152a2:	9304      	str	r3, [sp, #16]
900152a4:	ab0b      	add	r3, sp, #44	; 0x2c
900152a6:	9303      	str	r3, [sp, #12]
900152a8:	ab0a      	add	r3, sp, #40	; 0x28
900152aa:	9302      	str	r3, [sp, #8]
900152ac:	ab09      	add	r3, sp, #36	; 0x24
900152ae:	e9cd 5300 	strd	r5, r3, [sp]
900152b2:	4643      	mov	r3, r8
900152b4:	f7ff f8b1 	bl	9001441a <EwGetAttrBitmap+0xeb4>
900152b8:	4604      	mov	r4, r0
900152ba:	2800      	cmp	r0, #0
900152bc:	f43f af71 	beq.w	900151a2 <EwParseAttrString+0xb8>
900152c0:	f04f 090c 	mov.w	r9, #12
900152c4:	e9d5 3200 	ldrd	r3, r2, [r5]
900152c8:	eba2 0803 	sub.w	r8, r2, r3
900152cc:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
900152d0:	ea4f 0a68 	mov.w	sl, r8, asr #1
900152d4:	f018 0f02 	tst.w	r8, #2
900152d8:	4413      	add	r3, r2
900152da:	bf14      	ite	ne
900152dc:	f10a 0701 	addne.w	r7, sl, #1
900152e0:	4657      	moveq	r7, sl
900152e2:	930d      	str	r3, [sp, #52]	; 0x34
900152e4:	980d      	ldr	r0, [sp, #52]	; 0x34
900152e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900152e8:	300c      	adds	r0, #12
900152ea:	fb09 0003 	mla	r0, r9, r3, r0
900152ee:	4438      	add	r0, r7
900152f0:	0040      	lsls	r0, r0, #1
900152f2:	f011 fcdf 	bl	90026cb4 <EwAlloc>
900152f6:	4604      	mov	r4, r0
900152f8:	2800      	cmp	r0, #0
900152fa:	f47f af55 	bne.w	900151a8 <EwParseAttrString+0xbe>
900152fe:	2014      	movs	r0, #20
90015300:	f009 f858 	bl	9001e3b4 <EwImmediateReclaimMemory>
90015304:	2800      	cmp	r0, #0
90015306:	d1ed      	bne.n	900152e4 <EwParseAttrString+0x1fa>
90015308:	2014      	movs	r0, #20
9001530a:	f008 f8a1 	bl	9001d450 <EwError>
9001530e:	e795      	b.n	9001523c <EwParseAttrString+0x152>
90015310:	200002bc 	.word	0x200002bc
90015314:	200002d8 	.word	0x200002d8
90015318:	200002b8 	.word	0x200002b8
9001531c:	200002ac 	.word	0x200002ac
90015320:	200002c0 	.word	0x200002c0
90015324:	90034964 	.word	0x90034964

90015328 <EwFreeAttrString>:
90015328:	b470      	push	{r4, r5, r6}
9001532a:	b1e0      	cbz	r0, 90015366 <EwFreeAttrString+0x3e>
9001532c:	4d0f      	ldr	r5, [pc, #60]	; (9001536c <EwFreeAttrString+0x44>)
9001532e:	2618      	movs	r6, #24
90015330:	68c1      	ldr	r1, [r0, #12]
90015332:	682a      	ldr	r2, [r5, #0]
90015334:	6804      	ldr	r4, [r0, #0]
90015336:	3a18      	subs	r2, #24
90015338:	2c00      	cmp	r4, #0
9001533a:	fb06 2211 	mls	r2, r6, r1, r2
9001533e:	6901      	ldr	r1, [r0, #16]
90015340:	eba2 0141 	sub.w	r1, r2, r1, lsl #1
90015344:	f004 0201 	and.w	r2, r4, #1
90015348:	bfb8      	it	lt
9001534a:	4252      	neglt	r2, r2
9001534c:	4422      	add	r2, r4
9001534e:	eba1 0242 	sub.w	r2, r1, r2, lsl #1
90015352:	602a      	str	r2, [r5, #0]
90015354:	2200      	movs	r2, #0
90015356:	bc70      	pop	{r4, r5, r6}
90015358:	e9c0 2200 	strd	r2, r2, [r0]
9001535c:	6142      	str	r2, [r0, #20]
9001535e:	e9c0 2203 	strd	r2, r2, [r0, #12]
90015362:	f011 bca9 	b.w	90026cb8 <EwFree>
90015366:	bc70      	pop	{r4, r5, r6}
90015368:	4770      	bx	lr
9001536a:	bf00      	nop
9001536c:	200002bc 	.word	0x200002bc

90015370 <EwDrawAttrText>:
90015370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015374:	b0a9      	sub	sp, #164	; 0xa4
90015376:	461d      	mov	r5, r3
90015378:	4616      	mov	r6, r2
9001537a:	4604      	mov	r4, r0
9001537c:	f89d 3100 	ldrb.w	r3, [sp, #256]	; 0x100
90015380:	910c      	str	r1, [sp, #48]	; 0x30
90015382:	930d      	str	r3, [sp, #52]	; 0x34
90015384:	2800      	cmp	r0, #0
90015386:	d070      	beq.n	9001546a <EwDrawAttrText+0xfa>
90015388:	2900      	cmp	r1, #0
9001538a:	d06e      	beq.n	9001546a <EwDrawAttrText+0xfa>
9001538c:	2a00      	cmp	r2, #0
9001538e:	d06c      	beq.n	9001546a <EwDrawAttrText+0xfa>
90015390:	2d00      	cmp	r5, #0
90015392:	db6a      	blt.n	9001546a <EwDrawAttrText+0xfa>
90015394:	6903      	ldr	r3, [r0, #16]
90015396:	42ab      	cmp	r3, r5
90015398:	dd67      	ble.n	9001546a <EwDrawAttrText+0xfa>
9001539a:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
9001539c:	aa0e      	add	r2, sp, #56	; 0x38
9001539e:	9939      	ldr	r1, [sp, #228]	; 0xe4
900153a0:	061b      	lsls	r3, r3, #24
900153a2:	9838      	ldr	r0, [sp, #224]	; 0xe0
900153a4:	930e      	str	r3, [sp, #56]	; 0x38
900153a6:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
900153a8:	061b      	lsls	r3, r3, #24
900153aa:	930f      	str	r3, [sp, #60]	; 0x3c
900153ac:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
900153ae:	061b      	lsls	r3, r3, #24
900153b0:	9310      	str	r3, [sp, #64]	; 0x40
900153b2:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
900153b4:	e9dd 7836 	ldrd	r7, r8, [sp, #216]	; 0xd8
900153b8:	061b      	lsls	r3, r3, #24
900153ba:	eba1 0108 	sub.w	r1, r1, r8
900153be:	1bc0      	subs	r0, r0, r7
900153c0:	9311      	str	r3, [sp, #68]	; 0x44
900153c2:	ab12      	add	r3, sp, #72	; 0x48
900153c4:	e9dd 9a3a 	ldrd	r9, sl, [sp, #232]	; 0xe8
900153c8:	f003 fa96 	bl	900188f8 <EwInitOpacityGradient>
900153cc:	ab36      	add	r3, sp, #216	; 0xd8
900153ce:	f10d 0c04 	add.w	ip, sp, #4
900153d2:	eba8 080a 	sub.w	r8, r8, sl
900153d6:	eba7 0709 	sub.w	r7, r7, r9
900153da:	f10d 0a08 	add.w	sl, sp, #8
900153de:	f10d 09d0 	add.w	r9, sp, #208	; 0xd0
900153e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900153e4:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
900153e8:	9b35      	ldr	r3, [sp, #212]	; 0xd4
900153ea:	a832      	add	r0, sp, #200	; 0xc8
900153ec:	9300      	str	r3, [sp, #0]
900153ee:	ab32      	add	r3, sp, #200	; 0xc8
900153f0:	cb0e      	ldmia	r3, {r1, r2, r3}
900153f2:	f009 f9c7 	bl	9001e784 <EwIntersectRect>
900153f6:	ab12      	add	r3, sp, #72	; 0x48
900153f8:	f8d6 b004 	ldr.w	fp, [r6, #4]
900153fc:	930a      	str	r3, [sp, #40]	; 0x28
900153fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90015400:	9704      	str	r7, [sp, #16]
90015402:	9309      	str	r3, [sp, #36]	; 0x24
90015404:	6833      	ldr	r3, [r6, #0]
90015406:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
9001540a:	e9cd b307 	strd	fp, r3, [sp, #28]
9001540e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90015410:	e9cd 8305 	strd	r8, r3, [sp, #20]
90015414:	ab36      	add	r3, sp, #216	; 0xd8
90015416:	e893 0003 	ldmia.w	r3, {r0, r1}
9001541a:	ab32      	add	r3, sp, #200	; 0xc8
9001541c:	e88a 0003 	stmia.w	sl, {r0, r1}
90015420:	e899 0003 	ldmia.w	r9, {r0, r1}
90015424:	e88d 0003 	stmia.w	sp, {r0, r1}
90015428:	4629      	mov	r1, r5
9001542a:	4620      	mov	r0, r4
9001542c:	cb0c      	ldmia	r3, {r2, r3}
9001542e:	f7ff fb14 	bl	90014a5a <EwGetAttrColor+0x48>
90015432:	ab12      	add	r3, sp, #72	; 0x48
90015434:	9704      	str	r7, [sp, #16]
90015436:	930a      	str	r3, [sp, #40]	; 0x28
90015438:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001543a:	9309      	str	r3, [sp, #36]	; 0x24
9001543c:	6833      	ldr	r3, [r6, #0]
9001543e:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
90015442:	e9cd b307 	strd	fp, r3, [sp, #28]
90015446:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90015448:	e9cd 8305 	strd	r8, r3, [sp, #20]
9001544c:	ab36      	add	r3, sp, #216	; 0xd8
9001544e:	e893 0003 	ldmia.w	r3, {r0, r1}
90015452:	ab32      	add	r3, sp, #200	; 0xc8
90015454:	e88a 0003 	stmia.w	sl, {r0, r1}
90015458:	e899 0003 	ldmia.w	r9, {r0, r1}
9001545c:	e88d 0003 	stmia.w	sp, {r0, r1}
90015460:	4629      	mov	r1, r5
90015462:	4620      	mov	r0, r4
90015464:	cb0c      	ldmia	r3, {r2, r3}
90015466:	f7ff fbdd 	bl	90014c24 <EwGetAttrColor+0x212>
9001546a:	b029      	add	sp, #164	; 0xa4
9001546c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90015470 <EwGetAttrTextSize>:
90015470:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015474:	b08f      	sub	sp, #60	; 0x3c
90015476:	460f      	mov	r7, r1
90015478:	4605      	mov	r5, r0
9001547a:	2210      	movs	r2, #16
9001547c:	ae06      	add	r6, sp, #24
9001547e:	2100      	movs	r1, #0
90015480:	4630      	mov	r0, r6
90015482:	f018 fda1 	bl	9002dfc8 <memset>
90015486:	b147      	cbz	r7, 9001549a <EwGetAttrTextSize+0x2a>
90015488:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001548c:	e9d7 3400 	ldrd	r3, r4, [r7]
90015490:	af01      	add	r7, sp, #4
90015492:	eb04 0943 	add.w	r9, r4, r3, lsl #1
90015496:	454c      	cmp	r4, r9
90015498:	d307      	bcc.n	900154aa <EwGetAttrTextSize+0x3a>
9001549a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
9001549e:	e885 0003 	stmia.w	r5, {r0, r1}
900154a2:	4628      	mov	r0, r5
900154a4:	b00f      	add	sp, #60	; 0x3c
900154a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900154aa:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
900154ae:	930a      	str	r3, [sp, #40]	; 0x28
900154b0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900154b4:	930b      	str	r3, [sp, #44]	; 0x2c
900154b6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900154ba:	930c      	str	r3, [sp, #48]	; 0x30
900154bc:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
900154c0:	930d      	str	r3, [sp, #52]	; 0x34
900154c2:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900154c6:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
900154ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
900154cc:	4630      	mov	r0, r6
900154ce:	9300      	str	r3, [sp, #0]
900154d0:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
900154d4:	f009 f98f 	bl	9001e7f6 <EwUnionRect>
900154d8:	8823      	ldrh	r3, [r4, #0]
900154da:	2b52      	cmp	r3, #82	; 0x52
900154dc:	bf16      	itet	ne
900154de:	8963      	ldrhne	r3, [r4, #10]
900154e0:	340c      	addeq	r4, #12
900154e2:	eb04 0443 	addne.w	r4, r4, r3, lsl #1
900154e6:	e7d6      	b.n	90015496 <EwGetAttrTextSize+0x26>

900154e8 <EwIsAttrTextRTL>:
900154e8:	b118      	cbz	r0, 900154f2 <EwIsAttrTextRTL+0xa>
900154ea:	7a00      	ldrb	r0, [r0, #8]
900154ec:	3800      	subs	r0, #0
900154ee:	bf18      	it	ne
900154f0:	2001      	movne	r0, #1
900154f2:	4770      	bx	lr

900154f4 <EwGetNoOfAttrLinks>:
900154f4:	b100      	cbz	r0, 900154f8 <EwGetNoOfAttrLinks+0x4>
900154f6:	68c0      	ldr	r0, [r0, #12]
900154f8:	4770      	bx	lr

900154fa <EwGetAttrLinkName>:
900154fa:	b150      	cbz	r0, 90015512 <EwGetAttrLinkName+0x18>
900154fc:	2900      	cmp	r1, #0
900154fe:	db08      	blt.n	90015512 <EwGetAttrLinkName+0x18>
90015500:	68c3      	ldr	r3, [r0, #12]
90015502:	428b      	cmp	r3, r1
90015504:	dd05      	ble.n	90015512 <EwGetAttrLinkName+0x18>
90015506:	2218      	movs	r2, #24
90015508:	6943      	ldr	r3, [r0, #20]
9001550a:	4351      	muls	r1, r2
9001550c:	5858      	ldr	r0, [r3, r1]
9001550e:	f00b ba20 	b.w	90020952 <EwNewString>
90015512:	2000      	movs	r0, #0
90015514:	4770      	bx	lr

90015516 <EwGetNoOfAttrLinkRegions>:
90015516:	b158      	cbz	r0, 90015530 <EwGetNoOfAttrLinkRegions+0x1a>
90015518:	2900      	cmp	r1, #0
9001551a:	db08      	blt.n	9001552e <EwGetNoOfAttrLinkRegions+0x18>
9001551c:	68c3      	ldr	r3, [r0, #12]
9001551e:	428b      	cmp	r3, r1
90015520:	dd05      	ble.n	9001552e <EwGetNoOfAttrLinkRegions+0x18>
90015522:	6943      	ldr	r3, [r0, #20]
90015524:	2218      	movs	r2, #24
90015526:	fb02 3101 	mla	r1, r2, r1, r3
9001552a:	68c8      	ldr	r0, [r1, #12]
9001552c:	4770      	bx	lr
9001552e:	2000      	movs	r0, #0
90015530:	4770      	bx	lr

90015532 <EwGetAttrLinkRect>:
90015532:	b570      	push	{r4, r5, r6, lr}
90015534:	4604      	mov	r4, r0
90015536:	461e      	mov	r6, r3
90015538:	4610      	mov	r0, r2
9001553a:	b931      	cbnz	r1, 9001554a <EwGetAttrLinkRect+0x18>
9001553c:	2300      	movs	r3, #0
9001553e:	e9c4 3300 	strd	r3, r3, [r4]
90015542:	e9c4 3302 	strd	r3, r3, [r4, #8]
90015546:	4620      	mov	r0, r4
90015548:	bd70      	pop	{r4, r5, r6, pc}
9001554a:	2a00      	cmp	r2, #0
9001554c:	dbf6      	blt.n	9001553c <EwGetAttrLinkRect+0xa>
9001554e:	68cb      	ldr	r3, [r1, #12]
90015550:	4293      	cmp	r3, r2
90015552:	ddf3      	ble.n	9001553c <EwGetAttrLinkRect+0xa>
90015554:	2e00      	cmp	r6, #0
90015556:	dbf1      	blt.n	9001553c <EwGetAttrLinkRect+0xa>
90015558:	2318      	movs	r3, #24
9001555a:	694d      	ldr	r5, [r1, #20]
9001555c:	fb03 5502 	mla	r5, r3, r2, r5
90015560:	68eb      	ldr	r3, [r5, #12]
90015562:	42b3      	cmp	r3, r6
90015564:	ddea      	ble.n	9001553c <EwGetAttrLinkRect+0xa>
90015566:	4631      	mov	r1, r6
90015568:	3001      	adds	r0, #1
9001556a:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
9001556e:	f7fd fbec 	bl	90012d4a <EwCanDiscardSurface+0x2ca>
90015572:	b190      	cbz	r0, 9001559a <EwGetAttrLinkRect+0x68>
90015574:	692b      	ldr	r3, [r5, #16]
90015576:	f9b0 6004 	ldrsh.w	r6, [r0, #4]
9001557a:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
9001557e:	696d      	ldr	r5, [r5, #20]
90015580:	441e      	add	r6, r3
90015582:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015586:	441a      	add	r2, r3
90015588:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001558c:	4429      	add	r1, r5
9001558e:	1958      	adds	r0, r3, r5
90015590:	e9c4 6100 	strd	r6, r1, [r4]
90015594:	e9c4 2002 	strd	r2, r0, [r4, #8]
90015598:	e7d5      	b.n	90015546 <EwGetAttrLinkRect+0x14>
9001559a:	4602      	mov	r2, r0
9001559c:	4601      	mov	r1, r0
9001559e:	4606      	mov	r6, r0
900155a0:	e7f6      	b.n	90015590 <EwGetAttrLinkRect+0x5e>

900155a2 <EwGetAttrLinkBaseline>:
900155a2:	b538      	push	{r3, r4, r5, lr}
900155a4:	460d      	mov	r5, r1
900155a6:	4611      	mov	r1, r2
900155a8:	b1b8      	cbz	r0, 900155da <EwGetAttrLinkBaseline+0x38>
900155aa:	2d00      	cmp	r5, #0
900155ac:	db16      	blt.n	900155dc <EwGetAttrLinkBaseline+0x3a>
900155ae:	68c3      	ldr	r3, [r0, #12]
900155b0:	42ab      	cmp	r3, r5
900155b2:	dd13      	ble.n	900155dc <EwGetAttrLinkBaseline+0x3a>
900155b4:	2a00      	cmp	r2, #0
900155b6:	db11      	blt.n	900155dc <EwGetAttrLinkBaseline+0x3a>
900155b8:	2318      	movs	r3, #24
900155ba:	6944      	ldr	r4, [r0, #20]
900155bc:	fb03 4405 	mla	r4, r3, r5, r4
900155c0:	68e3      	ldr	r3, [r4, #12]
900155c2:	4293      	cmp	r3, r2
900155c4:	dd0a      	ble.n	900155dc <EwGetAttrLinkBaseline+0x3a>
900155c6:	1c68      	adds	r0, r5, #1
900155c8:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
900155cc:	f7fd fbbd 	bl	90012d4a <EwCanDiscardSurface+0x2ca>
900155d0:	b118      	cbz	r0, 900155da <EwGetAttrLinkBaseline+0x38>
900155d2:	f9b0 000c 	ldrsh.w	r0, [r0, #12]
900155d6:	6963      	ldr	r3, [r4, #20]
900155d8:	4418      	add	r0, r3
900155da:	bd38      	pop	{r3, r4, r5, pc}
900155dc:	2000      	movs	r0, #0
900155de:	e7fc      	b.n	900155da <EwGetAttrLinkBaseline+0x38>
900155e0:	b570      	push	{r4, r5, r6, lr}
900155e2:	f240 126b 	movw	r2, #363	; 0x16b
900155e6:	2100      	movs	r1, #0
900155e8:	4d0a      	ldr	r5, [pc, #40]	; (90015614 <EwGetAttrLinkBaseline+0x72>)
900155ea:	188b      	adds	r3, r1, r2
900155ec:	105e      	asrs	r6, r3, #1
900155ee:	f023 0301 	bic.w	r3, r3, #1
900155f2:	f835 4013 	ldrh.w	r4, [r5, r3, lsl #1]
900155f6:	1b04      	subs	r4, r0, r4
900155f8:	2c00      	cmp	r4, #0
900155fa:	d103      	bne.n	90015604 <EwGetAttrLinkBaseline+0x62>
900155fc:	3301      	adds	r3, #1
900155fe:	f835 0013 	ldrh.w	r0, [r5, r3, lsl #1]
90015602:	bd70      	pop	{r4, r5, r6, pc}
90015604:	bfb4      	ite	lt
90015606:	f106 32ff 	addlt.w	r2, r6, #4294967295
9001560a:	1c71      	addge	r1, r6, #1
9001560c:	4291      	cmp	r1, r2
9001560e:	ddec      	ble.n	900155ea <EwGetAttrLinkBaseline+0x48>
90015610:	2000      	movs	r0, #0
90015612:	e7f6      	b.n	90015602 <EwGetAttrLinkBaseline+0x60>
90015614:	90030ae4 	.word	0x90030ae4
90015618:	b570      	push	{r4, r5, r6, lr}
9001561a:	224f      	movs	r2, #79	; 0x4f
9001561c:	2100      	movs	r1, #0
9001561e:	4e0c      	ldr	r6, [pc, #48]	; (90015650 <EwGetAttrLinkBaseline+0xae>)
90015620:	188b      	adds	r3, r1, r2
90015622:	105b      	asrs	r3, r3, #1
90015624:	eb06 05c3 	add.w	r5, r6, r3, lsl #3
90015628:	009c      	lsls	r4, r3, #2
9001562a:	f8b5 55b0 	ldrh.w	r5, [r5, #1456]	; 0x5b0
9001562e:	1b45      	subs	r5, r0, r5
90015630:	2d00      	cmp	r5, #0
90015632:	d104      	bne.n	9001563e <EwGetAttrLinkBaseline+0x9c>
90015634:	1c63      	adds	r3, r4, #1
90015636:	4807      	ldr	r0, [pc, #28]	; (90015654 <EwGetAttrLinkBaseline+0xb2>)
90015638:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001563c:	bd70      	pop	{r4, r5, r6, pc}
9001563e:	bfb4      	ite	lt
90015640:	f103 32ff 	addlt.w	r2, r3, #4294967295
90015644:	1c59      	addge	r1, r3, #1
90015646:	4291      	cmp	r1, r2
90015648:	ddea      	ble.n	90015620 <EwGetAttrLinkBaseline+0x7e>
9001564a:	2000      	movs	r0, #0
9001564c:	e7f6      	b.n	9001563c <EwGetAttrLinkBaseline+0x9a>
9001564e:	bf00      	nop
90015650:	90030ae4 	.word	0x90030ae4
90015654:	90031094 	.word	0x90031094
90015658:	7843      	ldrb	r3, [r0, #1]
9001565a:	4288      	cmp	r0, r1
9001565c:	ea4f 0353 	mov.w	r3, r3, lsr #1
90015660:	d301      	bcc.n	90015666 <EwGetAttrLinkBaseline+0xc4>
90015662:	2000      	movs	r0, #0
90015664:	4770      	bx	lr
90015666:	7842      	ldrb	r2, [r0, #1]
90015668:	ebb3 0f52 	cmp.w	r3, r2, lsr #1
9001566c:	d102      	bne.n	90015674 <EwGetAttrLinkBaseline+0xd2>
9001566e:	3002      	adds	r0, #2
90015670:	4281      	cmp	r1, r0
90015672:	d8f8      	bhi.n	90015666 <EwGetAttrLinkBaseline+0xc4>
90015674:	3802      	subs	r0, #2
90015676:	4770      	bx	lr
90015678:	7803      	ldrb	r3, [r0, #0]
9001567a:	f003 031f 	and.w	r3, r3, #31
9001567e:	3b14      	subs	r3, #20
90015680:	2b02      	cmp	r3, #2
90015682:	b510      	push	{r4, lr}
90015684:	d802      	bhi.n	9001568c <EwGetAttrLinkBaseline+0xea>
90015686:	2300      	movs	r3, #0
90015688:	4281      	cmp	r1, r0
9001568a:	d801      	bhi.n	90015690 <EwGetAttrLinkBaseline+0xee>
9001568c:	2000      	movs	r0, #0
9001568e:	bd10      	pop	{r4, pc}
90015690:	7802      	ldrb	r2, [r0, #0]
90015692:	f002 021f 	and.w	r2, r2, #31
90015696:	f1a2 0414 	sub.w	r4, r2, #20
9001569a:	2c02      	cmp	r4, #2
9001569c:	d802      	bhi.n	900156a4 <EwGetAttrLinkBaseline+0x102>
9001569e:	3301      	adds	r3, #1
900156a0:	3002      	adds	r0, #2
900156a2:	e7f1      	b.n	90015688 <EwGetAttrLinkBaseline+0xe6>
900156a4:	2b00      	cmp	r3, #0
900156a6:	d0fb      	beq.n	900156a0 <EwGetAttrLinkBaseline+0xfe>
900156a8:	2a17      	cmp	r2, #23
900156aa:	d1f9      	bne.n	900156a0 <EwGetAttrLinkBaseline+0xfe>
900156ac:	2b01      	cmp	r3, #1
900156ae:	d0ee      	beq.n	9001568e <EwGetAttrLinkBaseline+0xec>
900156b0:	3b01      	subs	r3, #1
900156b2:	e7f5      	b.n	900156a0 <EwGetAttrLinkBaseline+0xfe>
900156b4:	b508      	push	{r3, lr}
900156b6:	4288      	cmp	r0, r1
900156b8:	d301      	bcc.n	900156be <EwGetAttrLinkBaseline+0x11c>
900156ba:	2000      	movs	r0, #0
900156bc:	bd08      	pop	{r3, pc}
900156be:	7803      	ldrb	r3, [r0, #0]
900156c0:	f003 031f 	and.w	r3, r3, #31
900156c4:	1e5a      	subs	r2, r3, #1
900156c6:	2a02      	cmp	r2, #2
900156c8:	d9f8      	bls.n	900156bc <EwGetAttrLinkBaseline+0x11a>
900156ca:	3b14      	subs	r3, #20
900156cc:	2b02      	cmp	r3, #2
900156ce:	d804      	bhi.n	900156da <EwGetAttrLinkBaseline+0x138>
900156d0:	f7ff ffd2 	bl	90015678 <EwGetAttrLinkBaseline+0xd6>
900156d4:	2800      	cmp	r0, #0
900156d6:	bf08      	it	eq
900156d8:	4608      	moveq	r0, r1
900156da:	3002      	adds	r0, #2
900156dc:	e7eb      	b.n	900156b6 <EwGetAttrLinkBaseline+0x114>

900156de <EwInitBidi>:
900156de:	2001      	movs	r0, #1
900156e0:	4770      	bx	lr

900156e2 <EwCreateBidi>:
900156e2:	b570      	push	{r4, r5, r6, lr}
900156e4:	1e06      	subs	r6, r0, #0
900156e6:	dd11      	ble.n	9001570c <EwCreateBidi+0x2a>
900156e8:	f106 0309 	add.w	r3, r6, #9
900156ec:	005d      	lsls	r5, r3, #1
900156ee:	4628      	mov	r0, r5
900156f0:	f011 fae0 	bl	90026cb4 <EwAlloc>
900156f4:	b960      	cbnz	r0, 90015710 <EwCreateBidi+0x2e>
900156f6:	2011      	movs	r0, #17
900156f8:	f008 fe5c 	bl	9001e3b4 <EwImmediateReclaimMemory>
900156fc:	4604      	mov	r4, r0
900156fe:	2800      	cmp	r0, #0
90015700:	d1f5      	bne.n	900156ee <EwCreateBidi+0xc>
90015702:	2011      	movs	r0, #17
90015704:	f007 fea4 	bl	9001d450 <EwError>
90015708:	4620      	mov	r0, r4
9001570a:	e01c      	b.n	90015746 <EwCreateBidi+0x64>
9001570c:	2000      	movs	r0, #0
9001570e:	e01a      	b.n	90015746 <EwCreateBidi+0x64>
90015710:	f100 0310 	add.w	r3, r0, #16
90015714:	4a0c      	ldr	r2, [pc, #48]	; (90015748 <EwCreateBidi+0x66>)
90015716:	6006      	str	r6, [r0, #0]
90015718:	6083      	str	r3, [r0, #8]
9001571a:	2300      	movs	r3, #0
9001571c:	6043      	str	r3, [r0, #4]
9001571e:	8183      	strh	r3, [r0, #12]
90015720:	6813      	ldr	r3, [r2, #0]
90015722:	442b      	add	r3, r5
90015724:	6013      	str	r3, [r2, #0]
90015726:	4a09      	ldr	r2, [pc, #36]	; (9001574c <EwCreateBidi+0x6a>)
90015728:	6811      	ldr	r1, [r2, #0]
9001572a:	428b      	cmp	r3, r1
9001572c:	dd00      	ble.n	90015730 <EwCreateBidi+0x4e>
9001572e:	6013      	str	r3, [r2, #0]
90015730:	4a07      	ldr	r2, [pc, #28]	; (90015750 <EwCreateBidi+0x6e>)
90015732:	4908      	ldr	r1, [pc, #32]	; (90015754 <EwCreateBidi+0x72>)
90015734:	6812      	ldr	r2, [r2, #0]
90015736:	6809      	ldr	r1, [r1, #0]
90015738:	440a      	add	r2, r1
9001573a:	4413      	add	r3, r2
9001573c:	4a06      	ldr	r2, [pc, #24]	; (90015758 <EwCreateBidi+0x76>)
9001573e:	6811      	ldr	r1, [r2, #0]
90015740:	428b      	cmp	r3, r1
90015742:	dd00      	ble.n	90015746 <EwCreateBidi+0x64>
90015744:	6013      	str	r3, [r2, #0]
90015746:	bd70      	pop	{r4, r5, r6, pc}
90015748:	200002bc 	.word	0x200002bc
9001574c:	200002d8 	.word	0x200002d8
90015750:	200002ac 	.word	0x200002ac
90015754:	200002b8 	.word	0x200002b8
90015758:	200002c0 	.word	0x200002c0

9001575c <EwFreeBidi>:
9001575c:	b148      	cbz	r0, 90015772 <EwFreeBidi+0x16>
9001575e:	4905      	ldr	r1, [pc, #20]	; (90015774 <EwFreeBidi+0x18>)
90015760:	6802      	ldr	r2, [r0, #0]
90015762:	680b      	ldr	r3, [r1, #0]
90015764:	3201      	adds	r2, #1
90015766:	3b10      	subs	r3, #16
90015768:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001576c:	600b      	str	r3, [r1, #0]
9001576e:	f011 baa3 	b.w	90026cb8 <EwFree>
90015772:	4770      	bx	lr
90015774:	200002bc 	.word	0x200002bc

90015778 <EwBidiIsNeeded>:
90015778:	b118      	cbz	r0, 90015782 <EwBidiIsNeeded+0xa>
9001577a:	7b40      	ldrb	r0, [r0, #13]
9001577c:	3800      	subs	r0, #0
9001577e:	bf18      	it	ne
90015780:	2001      	movne	r0, #1
90015782:	4770      	bx	lr

90015784 <EwBidiIsRTL>:
90015784:	b118      	cbz	r0, 9001578e <EwBidiIsRTL+0xa>
90015786:	7b00      	ldrb	r0, [r0, #12]
90015788:	1e43      	subs	r3, r0, #1
9001578a:	4258      	negs	r0, r3
9001578c:	4158      	adcs	r0, r3
9001578e:	4770      	bx	lr

90015790 <EwBidiGetCharLevel>:
90015790:	b158      	cbz	r0, 900157aa <EwBidiGetCharLevel+0x1a>
90015792:	2900      	cmp	r1, #0
90015794:	db02      	blt.n	9001579c <EwBidiGetCharLevel+0xc>
90015796:	6843      	ldr	r3, [r0, #4]
90015798:	428b      	cmp	r3, r1
9001579a:	dc01      	bgt.n	900157a0 <EwBidiGetCharLevel+0x10>
9001579c:	7b00      	ldrb	r0, [r0, #12]
9001579e:	4770      	bx	lr
900157a0:	6883      	ldr	r3, [r0, #8]
900157a2:	eb03 0141 	add.w	r1, r3, r1, lsl #1
900157a6:	7848      	ldrb	r0, [r1, #1]
900157a8:	0840      	lsrs	r0, r0, #1
900157aa:	4770      	bx	lr

900157ac <EwBidiInit>:
900157ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900157b0:	4688      	mov	r8, r1
900157b2:	4699      	mov	r9, r3
900157b4:	4604      	mov	r4, r0
900157b6:	2800      	cmp	r0, #0
900157b8:	f000 80b3 	beq.w	90015922 <EwBidiInit+0x176>
900157bc:	2a00      	cmp	r2, #0
900157be:	6886      	ldr	r6, [r0, #8]
900157c0:	6805      	ldr	r5, [r0, #0]
900157c2:	da03      	bge.n	900157cc <EwBidiInit+0x20>
900157c4:	4640      	mov	r0, r8
900157c6:	f00b fba9 	bl	90020f1c <EwGetStringLength>
900157ca:	4602      	mov	r2, r0
900157cc:	b916      	cbnz	r6, 900157d4 <EwBidiInit+0x28>
900157ce:	2000      	movs	r0, #0
900157d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900157d4:	4295      	cmp	r5, r2
900157d6:	dbfa      	blt.n	900157ce <EwBidiInit+0x22>
900157d8:	f1b9 0f00 	cmp.w	r9, #0
900157dc:	f04f 0700 	mov.w	r7, #0
900157e0:	f8df a150 	ldr.w	sl, [pc, #336]	; 90015934 <EwBidiInit+0x188>
900157e4:	bfd4      	ite	le
900157e6:	2000      	movle	r0, #0
900157e8:	2001      	movgt	r0, #1
900157ea:	4605      	mov	r5, r0
900157ec:	4297      	cmp	r7, r2
900157ee:	db1c      	blt.n	9001582a <EwBidiInit+0x7e>
900157f0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
900157f4:	f04f 0100 	mov.w	r1, #0
900157f8:	f826 1013 	strh.w	r1, [r6, r3, lsl #1]
900157fc:	6062      	str	r2, [r4, #4]
900157fe:	7365      	strb	r5, [r4, #13]
90015800:	7320      	strb	r0, [r4, #12]
90015802:	2d00      	cmp	r5, #0
90015804:	d0e3      	beq.n	900157ce <EwBidiInit+0x22>
90015806:	f1b9 0f00 	cmp.w	r9, #0
9001580a:	da0c      	bge.n	90015826 <EwBidiInit+0x7a>
9001580c:	eb06 0142 	add.w	r1, r6, r2, lsl #1
90015810:	4630      	mov	r0, r6
90015812:	f7ff ff4f 	bl	900156b4 <EwGetAttrLinkBaseline+0x112>
90015816:	b130      	cbz	r0, 90015826 <EwBidiInit+0x7a>
90015818:	7803      	ldrb	r3, [r0, #0]
9001581a:	f003 031f 	and.w	r3, r3, #31
9001581e:	3b01      	subs	r3, #1
90015820:	bf18      	it	ne
90015822:	2301      	movne	r3, #1
90015824:	7323      	strb	r3, [r4, #12]
90015826:	2001      	movs	r0, #1
90015828:	e7d2      	b.n	900157d0 <EwBidiInit+0x24>
9001582a:	f838 b017 	ldrh.w	fp, [r8, r7, lsl #1]
9001582e:	f240 414b 	movw	r1, #1099	; 0x44b
90015832:	2300      	movs	r3, #0
90015834:	eb03 0c01 	add.w	ip, r3, r1
90015838:	ea4f 0e6c 	mov.w	lr, ip, asr #1
9001583c:	f02c 0c01 	bic.w	ip, ip, #1
90015840:	44d4      	add	ip, sl
90015842:	f8bc c830 	ldrh.w	ip, [ip, #2096]	; 0x830
90015846:	45e3      	cmp	fp, ip
90015848:	d00d      	beq.n	90015866 <EwBidiInit+0xba>
9001584a:	d204      	bcs.n	90015856 <EwBidiInit+0xaa>
9001584c:	f10e 31ff 	add.w	r1, lr, #4294967295
90015850:	4299      	cmp	r1, r3
90015852:	daef      	bge.n	90015834 <EwBidiInit+0x88>
90015854:	e007      	b.n	90015866 <EwBidiInit+0xba>
90015856:	f10e 0301 	add.w	r3, lr, #1
9001585a:	eb0a 0c43 	add.w	ip, sl, r3, lsl #1
9001585e:	f8bc c830 	ldrh.w	ip, [ip, #2096]	; 0x830
90015862:	45dc      	cmp	ip, fp
90015864:	d9f4      	bls.n	90015850 <EwBidiInit+0xa4>
90015866:	4b32      	ldr	r3, [pc, #200]	; (90015930 <EwBidiInit+0x184>)
90015868:	449e      	add	lr, r3
9001586a:	f81e 1c30 	ldrb.w	r1, [lr, #-48]
9001586e:	f001 031f 	and.w	r3, r1, #31
90015872:	2b18      	cmp	r3, #24
90015874:	d03c      	beq.n	900158f0 <EwBidiInit+0x144>
90015876:	2b19      	cmp	r3, #25
90015878:	d03c      	beq.n	900158f4 <EwBidiInit+0x148>
9001587a:	2b1a      	cmp	r3, #26
9001587c:	d03c      	beq.n	900158f8 <EwBidiInit+0x14c>
9001587e:	2b1b      	cmp	r3, #27
90015880:	d03c      	beq.n	900158fc <EwBidiInit+0x150>
90015882:	f001 0c60 	and.w	ip, r1, #96	; 0x60
90015886:	f1bc 0f20 	cmp.w	ip, #32
9001588a:	d039      	beq.n	90015900 <EwBidiInit+0x154>
9001588c:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
90015890:	d038      	beq.n	90015904 <EwBidiInit+0x158>
90015892:	f1bc 0f60 	cmp.w	ip, #96	; 0x60
90015896:	d037      	beq.n	90015908 <EwBidiInit+0x15c>
90015898:	2b09      	cmp	r3, #9
9001589a:	d037      	beq.n	9001590c <EwBidiInit+0x160>
9001589c:	2b0d      	cmp	r3, #13
9001589e:	d037      	beq.n	90015910 <EwBidiInit+0x164>
900158a0:	f1a3 0c0b 	sub.w	ip, r3, #11
900158a4:	f1bc 0f01 	cmp.w	ip, #1
900158a8:	d934      	bls.n	90015914 <EwBidiInit+0x168>
900158aa:	f1a3 0c14 	sub.w	ip, r3, #20
900158ae:	f1bc 0f03 	cmp.w	ip, #3
900158b2:	d931      	bls.n	90015918 <EwBidiInit+0x16c>
900158b4:	f011 0f80 	tst.w	r1, #128	; 0x80
900158b8:	bf0c      	ite	eq
900158ba:	2100      	moveq	r1, #0
900158bc:	210c      	movne	r1, #12
900158be:	f1a3 0c18 	sub.w	ip, r3, #24
900158c2:	f1bc 0f03 	cmp.w	ip, #3
900158c6:	d929      	bls.n	9001591c <EwBidiInit+0x170>
900158c8:	b965      	cbnz	r5, 900158e4 <EwBidiInit+0x138>
900158ca:	1e9d      	subs	r5, r3, #2
900158cc:	2d01      	cmp	r5, #1
900158ce:	d926      	bls.n	9001591e <EwBidiInit+0x172>
900158d0:	2b11      	cmp	r3, #17
900158d2:	d024      	beq.n	9001591e <EwBidiInit+0x172>
900158d4:	2b12      	cmp	r3, #18
900158d6:	d022      	beq.n	9001591e <EwBidiInit+0x172>
900158d8:	f1a3 0c15 	sub.w	ip, r3, #21
900158dc:	f1dc 0500 	rsbs	r5, ip, #0
900158e0:	eb45 050c 	adc.w	r5, r5, ip
900158e4:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
900158e8:	f826 3017 	strh.w	r3, [r6, r7, lsl #1]
900158ec:	3701      	adds	r7, #1
900158ee:	e77d      	b.n	900157ec <EwBidiInit+0x40>
900158f0:	2108      	movs	r1, #8
900158f2:	e7e4      	b.n	900158be <EwBidiInit+0x112>
900158f4:	2109      	movs	r1, #9
900158f6:	e7e2      	b.n	900158be <EwBidiInit+0x112>
900158f8:	210a      	movs	r1, #10
900158fa:	e7e0      	b.n	900158be <EwBidiInit+0x112>
900158fc:	210b      	movs	r1, #11
900158fe:	e7de      	b.n	900158be <EwBidiInit+0x112>
90015900:	2101      	movs	r1, #1
90015902:	e7dc      	b.n	900158be <EwBidiInit+0x112>
90015904:	2102      	movs	r1, #2
90015906:	e7da      	b.n	900158be <EwBidiInit+0x112>
90015908:	2103      	movs	r1, #3
9001590a:	e7d8      	b.n	900158be <EwBidiInit+0x112>
9001590c:	2104      	movs	r1, #4
9001590e:	e7d6      	b.n	900158be <EwBidiInit+0x112>
90015910:	2105      	movs	r1, #5
90015912:	e7d4      	b.n	900158be <EwBidiInit+0x112>
90015914:	2106      	movs	r1, #6
90015916:	e7d2      	b.n	900158be <EwBidiInit+0x112>
90015918:	2107      	movs	r1, #7
9001591a:	e7d0      	b.n	900158be <EwBidiInit+0x112>
9001591c:	2303      	movs	r3, #3
9001591e:	2501      	movs	r5, #1
90015920:	e7e0      	b.n	900158e4 <EwBidiInit+0x138>
90015922:	2a00      	cmp	r2, #0
90015924:	f6bf af53 	bge.w	900157ce <EwBidiInit+0x22>
90015928:	4626      	mov	r6, r4
9001592a:	4625      	mov	r5, r4
9001592c:	e74a      	b.n	900157c4 <EwBidiInit+0x18>
9001592e:	bf00      	nop
90015930:	90031bdc 	.word	0x90031bdc
90015934:	90030ae4 	.word	0x90030ae4

90015938 <EwBidiProcess>:
90015938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001593c:	f5ad 7d2f 	sub.w	sp, sp, #700	; 0x2bc
90015940:	9108      	str	r1, [sp, #32]
90015942:	2800      	cmp	r0, #0
90015944:	f000 84c9 	beq.w	900162da <EwBidiProcess+0x9a2>
90015948:	7b03      	ldrb	r3, [r0, #12]
9001594a:	6844      	ldr	r4, [r0, #4]
9001594c:	9305      	str	r3, [sp, #20]
9001594e:	6883      	ldr	r3, [r0, #8]
90015950:	9301      	str	r3, [sp, #4]
90015952:	2b00      	cmp	r3, #0
90015954:	f000 84c1 	beq.w	900162da <EwBidiProcess+0x9a2>
90015958:	1ca3      	adds	r3, r4, #2
9001595a:	9309      	str	r3, [sp, #36]	; 0x24
9001595c:	009b      	lsls	r3, r3, #2
9001595e:	9304      	str	r3, [sp, #16]
90015960:	9804      	ldr	r0, [sp, #16]
90015962:	f011 f9a7 	bl	90026cb4 <EwAlloc>
90015966:	9002      	str	r0, [sp, #8]
90015968:	2800      	cmp	r0, #0
9001596a:	f040 845a 	bne.w	90016222 <EwBidiProcess+0x8ea>
9001596e:	2012      	movs	r0, #18
90015970:	f008 fd20 	bl	9001e3b4 <EwImmediateReclaimMemory>
90015974:	2800      	cmp	r0, #0
90015976:	d1f3      	bne.n	90015960 <EwBidiProcess+0x28>
90015978:	2012      	movs	r0, #18
9001597a:	f50d 7d2f 	add.w	sp, sp, #700	; 0x2bc
9001597e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015982:	f007 bd65 	b.w	9001d450 <EwError>
90015986:	46b3      	mov	fp, r6
90015988:	f81b 3b02 	ldrb.w	r3, [fp], #2
9001598c:	f003 031f 	and.w	r3, r3, #31
90015990:	2b16      	cmp	r3, #22
90015992:	d145      	bne.n	90015a20 <EwBidiProcess+0xe8>
90015994:	4649      	mov	r1, r9
90015996:	4630      	mov	r0, r6
90015998:	f7ff fe6e 	bl	90015678 <EwGetAttrLinkBaseline+0xd6>
9001599c:	2800      	cmp	r0, #0
9001599e:	bf14      	ite	ne
900159a0:	4601      	movne	r1, r0
900159a2:	4649      	moveq	r1, r9
900159a4:	4658      	mov	r0, fp
900159a6:	f7ff fe85 	bl	900156b4 <EwGetAttrLinkBaseline+0x112>
900159aa:	2800      	cmp	r0, #0
900159ac:	d069      	beq.n	90015a82 <EwBidiProcess+0x14a>
900159ae:	7803      	ldrb	r3, [r0, #0]
900159b0:	f003 031e 	and.w	r3, r3, #30
900159b4:	2b02      	cmp	r3, #2
900159b6:	bf14      	ite	ne
900159b8:	2314      	movne	r3, #20
900159ba:	2315      	moveq	r3, #21
900159bc:	f1a3 0214 	sub.w	r2, r3, #20
900159c0:	2a01      	cmp	r2, #1
900159c2:	d862      	bhi.n	90015a8a <EwBidiProcess+0x152>
900159c4:	f815 2014 	ldrb.w	r2, [r5, r4, lsl #1]
900159c8:	7871      	ldrb	r1, [r6, #1]
900159ca:	f362 0147 	bfi	r1, r2, #1, #7
900159ce:	7071      	strb	r1, [r6, #1]
900159d0:	eb05 0144 	add.w	r1, r5, r4, lsl #1
900159d4:	7849      	ldrb	r1, [r1, #1]
900159d6:	f011 013f 	ands.w	r1, r1, #63	; 0x3f
900159da:	bf1c      	itt	ne
900159dc:	7830      	ldrbne	r0, [r6, #0]
900159de:	f361 0004 	bfine	r0, r1, #0, #5
900159e2:	f002 0101 	and.w	r1, r2, #1
900159e6:	bf18      	it	ne
900159e8:	7030      	strbne	r0, [r6, #0]
900159ea:	2b15      	cmp	r3, #21
900159ec:	bf0c      	ite	eq
900159ee:	1c4b      	addeq	r3, r1, #1
900159f0:	f1c1 0302 	rsbne	r3, r1, #2
900159f4:	4413      	add	r3, r2
900159f6:	2b7d      	cmp	r3, #125	; 0x7d
900159f8:	dc45      	bgt.n	90015a86 <EwBidiProcess+0x14e>
900159fa:	ea57 0208 	orrs.w	r2, r7, r8
900159fe:	d142      	bne.n	90015a86 <EwBidiProcess+0x14e>
90015a00:	3401      	adds	r4, #1
90015a02:	f10a 0a01 	add.w	sl, sl, #1
90015a06:	4690      	mov	r8, r2
90015a08:	4617      	mov	r7, r2
90015a0a:	eb05 0144 	add.w	r1, r5, r4, lsl #1
90015a0e:	f805 3014 	strb.w	r3, [r5, r4, lsl #1]
90015a12:	784b      	ldrb	r3, [r1, #1]
90015a14:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
90015a18:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90015a1c:	704b      	strb	r3, [r1, #1]
90015a1e:	e028      	b.n	90015a72 <EwBidiProcess+0x13a>
90015a20:	2b11      	cmp	r3, #17
90015a22:	d005      	beq.n	90015a30 <EwBidiProcess+0xf8>
90015a24:	2b0f      	cmp	r3, #15
90015a26:	d003      	beq.n	90015a30 <EwBidiProcess+0xf8>
90015a28:	2b12      	cmp	r3, #18
90015a2a:	d001      	beq.n	90015a30 <EwBidiProcess+0xf8>
90015a2c:	2b10      	cmp	r3, #16
90015a2e:	d1c5      	bne.n	900159bc <EwBidiProcess+0x84>
90015a30:	f1a3 0011 	sub.w	r0, r3, #17
90015a34:	f815 2014 	ldrb.w	r2, [r5, r4, lsl #1]
90015a38:	2801      	cmp	r0, #1
90015a3a:	f002 0101 	and.w	r1, r2, #1
90015a3e:	d81a      	bhi.n	90015a76 <EwBidiProcess+0x13e>
90015a40:	3101      	adds	r1, #1
90015a42:	2b12      	cmp	r3, #18
90015a44:	440a      	add	r2, r1
90015a46:	d01a      	beq.n	90015a7e <EwBidiProcess+0x146>
90015a48:	f1a3 0010 	sub.w	r0, r3, #16
90015a4c:	4241      	negs	r1, r0
90015a4e:	4141      	adcs	r1, r0
90015a50:	2a7d      	cmp	r2, #125	; 0x7d
90015a52:	f300 83dc 	bgt.w	9001620e <EwBidiProcess+0x8d6>
90015a56:	b967      	cbnz	r7, 90015a72 <EwBidiProcess+0x13a>
90015a58:	f1b8 0f00 	cmp.w	r8, #0
90015a5c:	d109      	bne.n	90015a72 <EwBidiProcess+0x13a>
90015a5e:	3401      	adds	r4, #1
90015a60:	f805 2014 	strb.w	r2, [r5, r4, lsl #1]
90015a64:	eb05 0244 	add.w	r2, r5, r4, lsl #1
90015a68:	7853      	ldrb	r3, [r2, #1]
90015a6a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
90015a6e:	430b      	orrs	r3, r1
90015a70:	7053      	strb	r3, [r2, #1]
90015a72:	465e      	mov	r6, fp
90015a74:	e3fa      	b.n	9001626c <EwBidiProcess+0x934>
90015a76:	f1c1 0102 	rsb	r1, r1, #2
90015a7a:	440a      	add	r2, r1
90015a7c:	e7e4      	b.n	90015a48 <EwBidiProcess+0x110>
90015a7e:	2102      	movs	r1, #2
90015a80:	e7e6      	b.n	90015a50 <EwBidiProcess+0x118>
90015a82:	2314      	movs	r3, #20
90015a84:	e79a      	b.n	900159bc <EwBidiProcess+0x84>
90015a86:	3701      	adds	r7, #1
90015a88:	e7f3      	b.n	90015a72 <EwBidiProcess+0x13a>
90015a8a:	2b17      	cmp	r3, #23
90015a8c:	d120      	bne.n	90015ad0 <EwBidiProcess+0x198>
90015a8e:	b18f      	cbz	r7, 90015ab4 <EwBidiProcess+0x17c>
90015a90:	3f01      	subs	r7, #1
90015a92:	f815 2014 	ldrb.w	r2, [r5, r4, lsl #1]
90015a96:	7873      	ldrb	r3, [r6, #1]
90015a98:	f362 0347 	bfi	r3, r2, #1, #7
90015a9c:	7073      	strb	r3, [r6, #1]
90015a9e:	eb05 0344 	add.w	r3, r5, r4, lsl #1
90015aa2:	785b      	ldrb	r3, [r3, #1]
90015aa4:	f013 033f 	ands.w	r3, r3, #63	; 0x3f
90015aa8:	bf1e      	ittt	ne
90015aaa:	7832      	ldrbne	r2, [r6, #0]
90015aac:	f363 0204 	bfine	r2, r3, #0, #5
90015ab0:	7032      	strbne	r2, [r6, #0]
90015ab2:	e7de      	b.n	90015a72 <EwBidiProcess+0x13a>
90015ab4:	f1ba 0f00 	cmp.w	sl, #0
90015ab8:	d0eb      	beq.n	90015a92 <EwBidiProcess+0x15a>
90015aba:	eb05 0344 	add.w	r3, r5, r4, lsl #1
90015abe:	3c01      	subs	r4, #1
90015ac0:	785b      	ldrb	r3, [r3, #1]
90015ac2:	065b      	lsls	r3, r3, #25
90015ac4:	d5f9      	bpl.n	90015aba <EwBidiProcess+0x182>
90015ac6:	f10a 3aff 	add.w	sl, sl, #4294967295
90015aca:	f04f 0800 	mov.w	r8, #0
90015ace:	e7e0      	b.n	90015a92 <EwBidiProcess+0x15a>
90015ad0:	2b13      	cmp	r3, #19
90015ad2:	d110      	bne.n	90015af6 <EwBidiProcess+0x1be>
90015ad4:	2f00      	cmp	r7, #0
90015ad6:	d1cc      	bne.n	90015a72 <EwBidiProcess+0x13a>
90015ad8:	f1b8 0f00 	cmp.w	r8, #0
90015adc:	d002      	beq.n	90015ae4 <EwBidiProcess+0x1ac>
90015ade:	f108 38ff 	add.w	r8, r8, #4294967295
90015ae2:	e7c6      	b.n	90015a72 <EwBidiProcess+0x13a>
90015ae4:	2c00      	cmp	r4, #0
90015ae6:	d0c4      	beq.n	90015a72 <EwBidiProcess+0x13a>
90015ae8:	eb05 0344 	add.w	r3, r5, r4, lsl #1
90015aec:	785b      	ldrb	r3, [r3, #1]
90015aee:	065e      	lsls	r6, r3, #25
90015af0:	d4bf      	bmi.n	90015a72 <EwBidiProcess+0x13a>
90015af2:	3c01      	subs	r4, #1
90015af4:	e7bd      	b.n	90015a72 <EwBidiProcess+0x13a>
90015af6:	3b0a      	subs	r3, #10
90015af8:	2b01      	cmp	r3, #1
90015afa:	d8ca      	bhi.n	90015a92 <EwBidiProcess+0x15a>
90015afc:	e7b9      	b.n	90015a72 <EwBidiProcess+0x13a>
90015afe:	781a      	ldrb	r2, [r3, #0]
90015b00:	f002 021f 	and.w	r2, r2, #31
90015b04:	f102 0111 	add.w	r1, r2, #17
90015b08:	f001 011f 	and.w	r1, r1, #31
90015b0c:	2904      	cmp	r1, #4
90015b0e:	d901      	bls.n	90015b14 <EwBidiProcess+0x1dc>
90015b10:	2a0a      	cmp	r2, #10
90015b12:	d10b      	bne.n	90015b2c <EwBidiProcess+0x1f4>
90015b14:	f10a 0a01 	add.w	sl, sl, #1
90015b18:	9a09      	ldr	r2, [sp, #36]	; 0x24
90015b1a:	9902      	ldr	r1, [sp, #8]
90015b1c:	3802      	subs	r0, #2
90015b1e:	eba2 020a 	sub.w	r2, r2, sl
90015b22:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
90015b26:	3302      	adds	r3, #2
90015b28:	3002      	adds	r0, #2
90015b2a:	e3a6      	b.n	9001627a <EwBidiProcess+0x942>
90015b2c:	4283      	cmp	r3, r0
90015b2e:	bf84      	itt	hi
90015b30:	881a      	ldrhhi	r2, [r3, #0]
90015b32:	8002      	strhhi	r2, [r0, #0]
90015b34:	e7f7      	b.n	90015b26 <EwBidiProcess+0x1ee>
90015b36:	2300      	movs	r3, #0
90015b38:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90015b3c:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90015b40:	782a      	ldrb	r2, [r5, #0]
90015b42:	f002 011f 	and.w	r1, r2, #31
90015b46:	2917      	cmp	r1, #23
90015b48:	d105      	bne.n	90015b56 <EwBidiProcess+0x21e>
90015b4a:	d104      	bne.n	90015b56 <EwBidiProcess+0x21e>
90015b4c:	4629      	mov	r1, r5
90015b4e:	9a01      	ldr	r2, [sp, #4]
90015b50:	428a      	cmp	r2, r1
90015b52:	f240 8090 	bls.w	90015c76 <EwBidiProcess+0x33e>
90015b56:	9a01      	ldr	r2, [sp, #4]
90015b58:	4628      	mov	r0, r5
90015b5a:	786b      	ldrb	r3, [r5, #1]
90015b5c:	4295      	cmp	r5, r2
90015b5e:	f8bd 7014 	ldrh.w	r7, [sp, #20]
90015b62:	ea4f 0353 	mov.w	r3, r3, lsr #1
90015b66:	aa0d      	add	r2, sp, #52	; 0x34
90015b68:	bf8c      	ite	hi
90015b6a:	f815 1c01 	ldrbhi.w	r1, [r5, #-1]
90015b6e:	4639      	movls	r1, r7
90015b70:	9e02      	ldr	r6, [sp, #8]
90015b72:	bf88      	it	hi
90015b74:	0849      	lsrhi	r1, r1, #1
90015b76:	428b      	cmp	r3, r1
90015b78:	bf38      	it	cc
90015b7a:	460b      	movcc	r3, r1
90015b7c:	f89d 1034 	ldrb.w	r1, [sp, #52]	; 0x34
90015b80:	f003 0301 	and.w	r3, r3, #1
90015b84:	3301      	adds	r3, #1
90015b86:	f363 0104 	bfi	r1, r3, #0, #5
90015b8a:	f88d 1034 	strb.w	r1, [sp, #52]	; 0x34
90015b8e:	4659      	mov	r1, fp
90015b90:	f846 2b04 	str.w	r2, [r6], #4
90015b94:	f7ff fd60 	bl	90015658 <EwGetAttrLinkBaseline+0xb6>
90015b98:	9c02      	ldr	r4, [sp, #8]
90015b9a:	4680      	mov	r8, r0
90015b9c:	462b      	mov	r3, r5
90015b9e:	4622      	mov	r2, r4
90015ba0:	4543      	cmp	r3, r8
90015ba2:	d97d      	bls.n	90015ca0 <EwBidiProcess+0x368>
90015ba4:	1e68      	subs	r0, r5, #1
90015ba6:	f1c5 0302 	rsb	r3, r5, #2
90015baa:	f108 0101 	add.w	r1, r8, #1
90015bae:	4443      	add	r3, r8
90015bb0:	4281      	cmp	r1, r0
90015bb2:	ea4f 0253 	mov.w	r2, r3, lsr #1
90015bb6:	f023 0301 	bic.w	r3, r3, #1
90015bba:	bf38      	it	cc
90015bbc:	2300      	movcc	r3, #0
90015bbe:	441d      	add	r5, r3
90015bc0:	ea4f 0382 	mov.w	r3, r2, lsl #2
90015bc4:	bf38      	it	cc
90015bc6:	2300      	movcc	r3, #0
90015bc8:	18f3      	adds	r3, r6, r3
90015bca:	4659      	mov	r1, fp
90015bcc:	4640      	mov	r0, r8
90015bce:	9303      	str	r3, [sp, #12]
90015bd0:	f7ff fd52 	bl	90015678 <EwGetAttrLinkBaseline+0xd6>
90015bd4:	4681      	mov	r9, r0
90015bd6:	2800      	cmp	r0, #0
90015bd8:	d166      	bne.n	90015ca8 <EwBidiProcess+0x370>
90015bda:	f1ab 0302 	sub.w	r3, fp, #2
90015bde:	f898 2001 	ldrb.w	r2, [r8, #1]
90015be2:	4598      	cmp	r8, r3
90015be4:	ea4f 0252 	mov.w	r2, r2, lsr #1
90015be8:	d209      	bcs.n	90015bfe <EwBidiProcess+0x2c6>
90015bea:	f898 3000 	ldrb.w	r3, [r8]
90015bee:	f003 031f 	and.w	r3, r3, #31
90015bf2:	3b14      	subs	r3, #20
90015bf4:	2b02      	cmp	r3, #2
90015bf6:	bf84      	itt	hi
90015bf8:	f898 7003 	ldrbhi.w	r7, [r8, #3]
90015bfc:	087f      	lsrhi	r7, r7, #1
90015bfe:	4297      	cmp	r7, r2
90015c00:	ab0e      	add	r3, sp, #56	; 0x38
90015c02:	f8dd 900c 	ldr.w	r9, [sp, #12]
90015c06:	46b4      	mov	ip, r6
90015c08:	bf38      	it	cc
90015c0a:	4617      	movcc	r7, r2
90015c0c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
90015c10:	4631      	mov	r1, r6
90015c12:	f007 0701 	and.w	r7, r7, #1
90015c16:	3701      	adds	r7, #1
90015c18:	f367 0204 	bfi	r2, r7, #0, #5
90015c1c:	f88d 2038 	strb.w	r2, [sp, #56]	; 0x38
90015c20:	f849 3b04 	str.w	r3, [r9], #4
90015c24:	4589      	cmp	r9, r1
90015c26:	d85b      	bhi.n	90015ce0 <EwBidiProcess+0x3a8>
90015c28:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
90015c2c:	4633      	mov	r3, r6
90015c2e:	f007 071f 	and.w	r7, r7, #31
90015c32:	454b      	cmp	r3, r9
90015c34:	d369      	bcc.n	90015d0a <EwBidiProcess+0x3d2>
90015c36:	2704      	movs	r7, #4
90015c38:	3404      	adds	r4, #4
90015c3a:	45a1      	cmp	r9, r4
90015c3c:	f200 80b5 	bhi.w	90015daa <EwBidiProcess+0x472>
90015c40:	4632      	mov	r2, r6
90015c42:	200e      	movs	r0, #14
90015c44:	4591      	cmp	r9, r2
90015c46:	f200 80d5 	bhi.w	90015df4 <EwBidiProcess+0x4bc>
90015c4a:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
90015c4e:	f003 031f 	and.w	r3, r3, #31
90015c52:	45e1      	cmp	r9, ip
90015c54:	f200 80de 	bhi.w	90015e14 <EwBidiProcess+0x4dc>
90015c58:	f04f 0800 	mov.w	r8, #0
90015c5c:	4637      	mov	r7, r6
90015c5e:	f04f 34ff 	mov.w	r4, #4294967295
90015c62:	f8cd a018 	str.w	sl, [sp, #24]
90015c66:	f8cd 801c 	str.w	r8, [sp, #28]
90015c6a:	9b03      	ldr	r3, [sp, #12]
90015c6c:	42bb      	cmp	r3, r7
90015c6e:	f240 8188 	bls.w	90015f82 <EwBidiProcess+0x64a>
90015c72:	683b      	ldr	r3, [r7, #0]
90015c74:	e0e9      	b.n	90015e4a <EwBidiProcess+0x512>
90015c76:	780a      	ldrb	r2, [r1, #0]
90015c78:	f002 021f 	and.w	r2, r2, #31
90015c7c:	2a17      	cmp	r2, #23
90015c7e:	d102      	bne.n	90015c86 <EwBidiProcess+0x34e>
90015c80:	3b01      	subs	r3, #1
90015c82:	3902      	subs	r1, #2
90015c84:	e763      	b.n	90015b4e <EwBidiProcess+0x216>
90015c86:	2b00      	cmp	r3, #0
90015c88:	d0fb      	beq.n	90015c82 <EwBidiProcess+0x34a>
90015c8a:	3a14      	subs	r2, #20
90015c8c:	2a02      	cmp	r2, #2
90015c8e:	d8f8      	bhi.n	90015c82 <EwBidiProcess+0x34a>
90015c90:	3301      	adds	r3, #1
90015c92:	d1f6      	bne.n	90015c82 <EwBidiProcess+0x34a>
90015c94:	4628      	mov	r0, r5
90015c96:	4659      	mov	r1, fp
90015c98:	f7ff fcde 	bl	90015658 <EwGetAttrLinkBaseline+0xb6>
90015c9c:	1c85      	adds	r5, r0, #2
90015c9e:	e2fa      	b.n	90016296 <EwBidiProcess+0x95e>
90015ca0:	f842 3f04 	str.w	r3, [r2, #4]!
90015ca4:	3302      	adds	r3, #2
90015ca6:	e77b      	b.n	90015ba0 <EwBidiProcess+0x268>
90015ca8:	f7ff fcd6 	bl	90015658 <EwGetAttrLinkBaseline+0xb6>
90015cac:	9b03      	ldr	r3, [sp, #12]
90015cae:	4680      	mov	r8, r0
90015cb0:	1f1a      	subs	r2, r3, #4
90015cb2:	464b      	mov	r3, r9
90015cb4:	4543      	cmp	r3, r8
90015cb6:	d90f      	bls.n	90015cd8 <EwBidiProcess+0x3a0>
90015cb8:	f1c9 0302 	rsb	r3, r9, #2
90015cbc:	f108 0201 	add.w	r2, r8, #1
90015cc0:	f109 39ff 	add.w	r9, r9, #4294967295
90015cc4:	4443      	add	r3, r8
90015cc6:	085b      	lsrs	r3, r3, #1
90015cc8:	009b      	lsls	r3, r3, #2
90015cca:	454a      	cmp	r2, r9
90015ccc:	bf38      	it	cc
90015cce:	2300      	movcc	r3, #0
90015cd0:	9a03      	ldr	r2, [sp, #12]
90015cd2:	441a      	add	r2, r3
90015cd4:	4613      	mov	r3, r2
90015cd6:	e778      	b.n	90015bca <EwBidiProcess+0x292>
90015cd8:	f842 3f04 	str.w	r3, [r2, #4]!
90015cdc:	3302      	adds	r3, #2
90015cde:	e7e9      	b.n	90015cb4 <EwBidiProcess+0x37c>
90015ce0:	f851 0b04 	ldr.w	r0, [r1], #4
90015ce4:	7802      	ldrb	r2, [r0, #0]
90015ce6:	f002 031f 	and.w	r3, r2, #31
90015cea:	2b09      	cmp	r3, #9
90015cec:	d19a      	bne.n	90015c24 <EwBidiProcess+0x2ec>
90015cee:	f851 3c08 	ldr.w	r3, [r1, #-8]
90015cf2:	781b      	ldrb	r3, [r3, #0]
90015cf4:	f003 031f 	and.w	r3, r3, #31
90015cf8:	f1a3 0714 	sub.w	r7, r3, #20
90015cfc:	2f03      	cmp	r7, #3
90015cfe:	bf98      	it	ls
90015d00:	230e      	movls	r3, #14
90015d02:	f363 0204 	bfi	r2, r3, #0, #5
90015d06:	7002      	strb	r2, [r0, #0]
90015d08:	e78c      	b.n	90015c24 <EwBidiProcess+0x2ec>
90015d0a:	681a      	ldr	r2, [r3, #0]
90015d0c:	7811      	ldrb	r1, [r2, #0]
90015d0e:	f001 001f 	and.w	r0, r1, #31
90015d12:	f100 3eff 	add.w	lr, r0, #4294967295
90015d16:	f1be 0f02 	cmp.w	lr, #2
90015d1a:	d83d      	bhi.n	90015d98 <EwBidiProcess+0x460>
90015d1c:	4607      	mov	r7, r0
90015d1e:	7811      	ldrb	r1, [r2, #0]
90015d20:	f001 001f 	and.w	r0, r1, #31
90015d24:	2803      	cmp	r0, #3
90015d26:	bf02      	ittt	eq
90015d28:	2002      	moveq	r0, #2
90015d2a:	f360 0104 	bfieq	r1, r0, #0, #5
90015d2e:	7011      	strbeq	r1, [r2, #0]
90015d30:	f892 e000 	ldrb.w	lr, [r2]
90015d34:	f00e 011f 	and.w	r1, lr, #31
90015d38:	2904      	cmp	r1, #4
90015d3a:	d112      	bne.n	90015d62 <EwBidiProcess+0x42a>
90015d3c:	f853 8c04 	ldr.w	r8, [r3, #-4]
90015d40:	f898 1000 	ldrb.w	r1, [r8]
90015d44:	f001 001f 	and.w	r0, r1, #31
90015d48:	2805      	cmp	r0, #5
90015d4a:	d10a      	bne.n	90015d62 <EwBidiProcess+0x42a>
90015d4c:	f853 0c08 	ldr.w	r0, [r3, #-8]
90015d50:	7800      	ldrb	r0, [r0, #0]
90015d52:	ea8e 0000 	eor.w	r0, lr, r0
90015d56:	06c0      	lsls	r0, r0, #27
90015d58:	bf04      	itt	eq
90015d5a:	f36e 0104 	bfieq	r1, lr, #0, #5
90015d5e:	f888 1000 	strbeq.w	r1, [r8]
90015d62:	7810      	ldrb	r0, [r2, #0]
90015d64:	f000 021f 	and.w	r2, r0, #31
90015d68:	2a07      	cmp	r2, #7
90015d6a:	d001      	beq.n	90015d70 <EwBidiProcess+0x438>
90015d6c:	2a04      	cmp	r2, #4
90015d6e:	d111      	bne.n	90015d94 <EwBidiProcess+0x45c>
90015d70:	f853 ec04 	ldr.w	lr, [r3, #-4]
90015d74:	f89e 1000 	ldrb.w	r1, [lr]
90015d78:	f001 021f 	and.w	r2, r1, #31
90015d7c:	2a08      	cmp	r2, #8
90015d7e:	d109      	bne.n	90015d94 <EwBidiProcess+0x45c>
90015d80:	f853 2c08 	ldr.w	r2, [r3, #-8]
90015d84:	7812      	ldrb	r2, [r2, #0]
90015d86:	4042      	eors	r2, r0
90015d88:	06d2      	lsls	r2, r2, #27
90015d8a:	bf04      	itt	eq
90015d8c:	f360 0104 	bfieq	r1, r0, #0, #5
90015d90:	f88e 1000 	strbeq.w	r1, [lr]
90015d94:	3304      	adds	r3, #4
90015d96:	e74c      	b.n	90015c32 <EwBidiProcess+0x2fa>
90015d98:	2804      	cmp	r0, #4
90015d9a:	d1c0      	bne.n	90015d1e <EwBidiProcess+0x3e6>
90015d9c:	2f03      	cmp	r7, #3
90015d9e:	bf02      	ittt	eq
90015da0:	2007      	moveq	r0, #7
90015da2:	f360 0104 	bfieq	r1, r0, #0, #5
90015da6:	7011      	strbeq	r1, [r2, #0]
90015da8:	e7b9      	b.n	90015d1e <EwBidiProcess+0x3e6>
90015daa:	6822      	ldr	r2, [r4, #0]
90015dac:	7813      	ldrb	r3, [r2, #0]
90015dae:	f003 031f 	and.w	r3, r3, #31
90015db2:	2b04      	cmp	r3, #4
90015db4:	d01c      	beq.n	90015df0 <EwBidiProcess+0x4b8>
90015db6:	7811      	ldrb	r1, [r2, #0]
90015db8:	f001 031f 	and.w	r3, r1, #31
90015dbc:	2b06      	cmp	r3, #6
90015dbe:	f47f af3b 	bne.w	90015c38 <EwBidiProcess+0x300>
90015dc2:	f854 3c04 	ldr.w	r3, [r4, #-4]
90015dc6:	781b      	ldrb	r3, [r3, #0]
90015dc8:	f003 031f 	and.w	r3, r3, #31
90015dcc:	2b04      	cmp	r3, #4
90015dce:	bf04      	itt	eq
90015dd0:	f363 0104 	bfieq	r1, r3, #0, #5
90015dd4:	7011      	strbeq	r1, [r2, #0]
90015dd6:	e72f      	b.n	90015c38 <EwBidiProcess+0x300>
90015dd8:	f367 0304 	bfi	r3, r7, #0, #5
90015ddc:	700b      	strb	r3, [r1, #0]
90015dde:	f850 1d04 	ldr.w	r1, [r0, #-4]!
90015de2:	780b      	ldrb	r3, [r1, #0]
90015de4:	f003 0e1f 	and.w	lr, r3, #31
90015de8:	f1be 0f06 	cmp.w	lr, #6
90015dec:	d0f4      	beq.n	90015dd8 <EwBidiProcess+0x4a0>
90015dee:	e7e2      	b.n	90015db6 <EwBidiProcess+0x47e>
90015df0:	4620      	mov	r0, r4
90015df2:	e7f4      	b.n	90015dde <EwBidiProcess+0x4a6>
90015df4:	f852 1b04 	ldr.w	r1, [r2], #4
90015df8:	780b      	ldrb	r3, [r1, #0]
90015dfa:	f003 031f 	and.w	r3, r3, #31
90015dfe:	1f5c      	subs	r4, r3, #5
90015e00:	2c01      	cmp	r4, #1
90015e02:	d902      	bls.n	90015e0a <EwBidiProcess+0x4d2>
90015e04:	2b08      	cmp	r3, #8
90015e06:	f47f af1d 	bne.w	90015c44 <EwBidiProcess+0x30c>
90015e0a:	780b      	ldrb	r3, [r1, #0]
90015e0c:	f360 0304 	bfi	r3, r0, #0, #5
90015e10:	700b      	strb	r3, [r1, #0]
90015e12:	e717      	b.n	90015c44 <EwBidiProcess+0x30c>
90015e14:	f85c 1b04 	ldr.w	r1, [ip], #4
90015e18:	780a      	ldrb	r2, [r1, #0]
90015e1a:	f002 001f 	and.w	r0, r2, #31
90015e1e:	2804      	cmp	r0, #4
90015e20:	d105      	bne.n	90015e2e <EwBidiProcess+0x4f6>
90015e22:	2b01      	cmp	r3, #1
90015e24:	f47f af15 	bne.w	90015c52 <EwBidiProcess+0x31a>
90015e28:	f363 0204 	bfi	r2, r3, #0, #5
90015e2c:	700a      	strb	r2, [r1, #0]
90015e2e:	7809      	ldrb	r1, [r1, #0]
90015e30:	f001 021f 	and.w	r2, r1, #31
90015e34:	3a01      	subs	r2, #1
90015e36:	2a02      	cmp	r2, #2
90015e38:	bf98      	it	ls
90015e3a:	f001 031f 	andls.w	r3, r1, #31
90015e3e:	e708      	b.n	90015c52 <EwBidiProcess+0x31a>
90015e40:	9a06      	ldr	r2, [sp, #24]
90015e42:	f108 0801 	add.w	r8, r8, #1
90015e46:	3a01      	subs	r2, #1
90015e48:	9206      	str	r2, [sp, #24]
90015e4a:	9a06      	ldr	r2, [sp, #24]
90015e4c:	b14a      	cbz	r2, 90015e62 <EwBidiProcess+0x52a>
90015e4e:	f06f 0103 	mvn.w	r1, #3
90015e52:	980b      	ldr	r0, [sp, #44]	; 0x2c
90015e54:	eb03 0248 	add.w	r2, r3, r8, lsl #1
90015e58:	fb01 f108 	mul.w	r1, r1, r8
90015e5c:	5841      	ldr	r1, [r0, r1]
90015e5e:	4291      	cmp	r1, r2
90015e60:	d9ee      	bls.n	90015e40 <EwBidiProcess+0x508>
90015e62:	781a      	ldrb	r2, [r3, #0]
90015e64:	f002 021f 	and.w	r2, r2, #31
90015e68:	2a0e      	cmp	r2, #14
90015e6a:	d117      	bne.n	90015e9c <EwBidiProcess+0x564>
90015e6c:	881a      	ldrh	r2, [r3, #0]
90015e6e:	f402 72f0 	and.w	r2, r2, #480	; 0x1e0
90015e72:	2a20      	cmp	r2, #32
90015e74:	d114      	bne.n	90015ea0 <EwBidiProcess+0x568>
90015e76:	2c3d      	cmp	r4, #61	; 0x3d
90015e78:	f300 8083 	bgt.w	90015f82 <EwBidiProcess+0x64a>
90015e7c:	3401      	adds	r4, #1
90015e7e:	aa2f      	add	r2, sp, #188	; 0xbc
90015e80:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
90015e84:	9a01      	ldr	r2, [sp, #4]
90015e86:	1a9b      	subs	r3, r3, r2
90015e88:	9a08      	ldr	r2, [sp, #32]
90015e8a:	eb08 0363 	add.w	r3, r8, r3, asr #1
90015e8e:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
90015e92:	f7ff fba5 	bl	900155e0 <EwGetAttrLinkBaseline+0x3e>
90015e96:	ab0f      	add	r3, sp, #60	; 0x3c
90015e98:	f823 0014 	strh.w	r0, [r3, r4, lsl #1]
90015e9c:	3704      	adds	r7, #4
90015e9e:	e6e4      	b.n	90015c6a <EwBidiProcess+0x332>
90015ea0:	2a40      	cmp	r2, #64	; 0x40
90015ea2:	d1fb      	bne.n	90015e9c <EwBidiProcess+0x564>
90015ea4:	9a01      	ldr	r2, [sp, #4]
90015ea6:	f242 3c2a 	movw	ip, #9002	; 0x232a
90015eaa:	9908      	ldr	r1, [sp, #32]
90015eac:	f243 0e09 	movw	lr, #12297	; 0x3009
90015eb0:	1a9a      	subs	r2, r3, r2
90015eb2:	eb08 0262 	add.w	r2, r8, r2, asr #1
90015eb6:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
90015eba:	4622      	mov	r2, r4
90015ebc:	2a00      	cmp	r2, #0
90015ebe:	dd21      	ble.n	90015f04 <EwBidiProcess+0x5cc>
90015ec0:	a80f      	add	r0, sp, #60	; 0x3c
90015ec2:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
90015ec6:	4281      	cmp	r1, r0
90015ec8:	d003      	beq.n	90015ed2 <EwBidiProcess+0x59a>
90015eca:	4561      	cmp	r1, ip
90015ecc:	d116      	bne.n	90015efc <EwBidiProcess+0x5c4>
90015ece:	4570      	cmp	r0, lr
90015ed0:	d112      	bne.n	90015ef8 <EwBidiProcess+0x5c0>
90015ed2:	a80f      	add	r0, sp, #60	; 0x3c
90015ed4:	f830 0012 	ldrh.w	r0, [r0, r2, lsl #1]
90015ed8:	4281      	cmp	r1, r0
90015eda:	d007      	beq.n	90015eec <EwBidiProcess+0x5b4>
90015edc:	f242 3c2a 	movw	ip, #9002	; 0x232a
90015ee0:	f243 0e09 	movw	lr, #12297	; 0x3009
90015ee4:	4561      	cmp	r1, ip
90015ee6:	d114      	bne.n	90015f12 <EwBidiProcess+0x5da>
90015ee8:	4570      	cmp	r0, lr
90015eea:	d10c      	bne.n	90015f06 <EwBidiProcess+0x5ce>
90015eec:	4623      	mov	r3, r4
90015eee:	f10d 0cbc 	add.w	ip, sp, #188	; 0xbc
90015ef2:	f04f 0e03 	mov.w	lr, #3
90015ef6:	e017      	b.n	90015f28 <EwBidiProcess+0x5f0>
90015ef8:	3a01      	subs	r2, #1
90015efa:	e7df      	b.n	90015ebc <EwBidiProcess+0x584>
90015efc:	4571      	cmp	r1, lr
90015efe:	d1fb      	bne.n	90015ef8 <EwBidiProcess+0x5c0>
90015f00:	4560      	cmp	r0, ip
90015f02:	e7e5      	b.n	90015ed0 <EwBidiProcess+0x598>
90015f04:	d0e5      	beq.n	90015ed2 <EwBidiProcess+0x59a>
90015f06:	881a      	ldrh	r2, [r3, #0]
90015f08:	2103      	movs	r1, #3
90015f0a:	f361 1248 	bfi	r2, r1, #5, #4
90015f0e:	801a      	strh	r2, [r3, #0]
90015f10:	e7c4      	b.n	90015e9c <EwBidiProcess+0x564>
90015f12:	4571      	cmp	r1, lr
90015f14:	d1f7      	bne.n	90015f06 <EwBidiProcess+0x5ce>
90015f16:	4560      	cmp	r0, ip
90015f18:	e7e7      	b.n	90015eea <EwBidiProcess+0x5b2>
90015f1a:	f85c 1023 	ldr.w	r1, [ip, r3, lsl #2]
90015f1e:	3b01      	subs	r3, #1
90015f20:	8808      	ldrh	r0, [r1, #0]
90015f22:	f36e 1048 	bfi	r0, lr, #5, #4
90015f26:	8008      	strh	r0, [r1, #0]
90015f28:	4293      	cmp	r3, r2
90015f2a:	dcf6      	bgt.n	90015f1a <EwBidiProcess+0x5e2>
90015f2c:	1b13      	subs	r3, r2, r4
90015f2e:	4294      	cmp	r4, r2
90015f30:	bfb8      	it	lt
90015f32:	2300      	movlt	r3, #0
90015f34:	3c01      	subs	r4, #1
90015f36:	441c      	add	r4, r3
90015f38:	9b07      	ldr	r3, [sp, #28]
90015f3a:	3301      	adds	r3, #1
90015f3c:	9307      	str	r3, [sp, #28]
90015f3e:	e7ad      	b.n	90015e9c <EwBidiProcess+0x564>
90015f40:	f851 3024 	ldr.w	r3, [r1, r4, lsl #2]
90015f44:	3c01      	subs	r4, #1
90015f46:	881a      	ldrh	r2, [r3, #0]
90015f48:	f360 1248 	bfi	r2, r0, #5, #4
90015f4c:	801a      	strh	r2, [r3, #0]
90015f4e:	2c00      	cmp	r4, #0
90015f50:	daf6      	bge.n	90015f40 <EwBidiProcess+0x608>
90015f52:	2103      	movs	r1, #3
90015f54:	9b03      	ldr	r3, [sp, #12]
90015f56:	42bb      	cmp	r3, r7
90015f58:	d816      	bhi.n	90015f88 <EwBidiProcess+0x650>
90015f5a:	9b07      	ldr	r3, [sp, #28]
90015f5c:	b17b      	cbz	r3, 90015f7e <EwBidiProcess+0x646>
90015f5e:	9b02      	ldr	r3, [sp, #8]
90015f60:	4637      	mov	r7, r6
90015f62:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90015f66:	685b      	ldr	r3, [r3, #4]
90015f68:	f00c 0c1f 	and.w	ip, ip, #31
90015f6c:	7859      	ldrb	r1, [r3, #1]
90015f6e:	f3c1 0140 	ubfx	r1, r1, #1, #1
90015f72:	1c4b      	adds	r3, r1, #1
90015f74:	e9cd 3306 	strd	r3, r3, [sp, #24]
90015f78:	9303      	str	r3, [sp, #12]
90015f7a:	454f      	cmp	r7, r9
90015f7c:	d317      	bcc.n	90015fae <EwBidiProcess+0x676>
90015f7e:	2200      	movs	r2, #0
90015f80:	e098      	b.n	900160b4 <EwBidiProcess+0x77c>
90015f82:	a92f      	add	r1, sp, #188	; 0xbc
90015f84:	2003      	movs	r0, #3
90015f86:	e7e2      	b.n	90015f4e <EwBidiProcess+0x616>
90015f88:	f857 3b04 	ldr.w	r3, [r7], #4
90015f8c:	781a      	ldrb	r2, [r3, #0]
90015f8e:	f002 021f 	and.w	r2, r2, #31
90015f92:	2a0e      	cmp	r2, #14
90015f94:	d1de      	bne.n	90015f54 <EwBidiProcess+0x61c>
90015f96:	881a      	ldrh	r2, [r3, #0]
90015f98:	f402 72f0 	and.w	r2, r2, #480	; 0x1e0
90015f9c:	2a20      	cmp	r2, #32
90015f9e:	d001      	beq.n	90015fa4 <EwBidiProcess+0x66c>
90015fa0:	2a40      	cmp	r2, #64	; 0x40
90015fa2:	d1d7      	bne.n	90015f54 <EwBidiProcess+0x61c>
90015fa4:	881a      	ldrh	r2, [r3, #0]
90015fa6:	f361 1248 	bfi	r2, r1, #5, #4
90015faa:	801a      	strh	r2, [r3, #0]
90015fac:	e7d2      	b.n	90015f54 <EwBidiProcess+0x61c>
90015fae:	f857 4b04 	ldr.w	r4, [r7], #4
90015fb2:	8823      	ldrh	r3, [r4, #0]
90015fb4:	f3c3 0308 	ubfx	r3, r3, #0, #9
90015fb8:	2b2e      	cmp	r3, #46	; 0x2e
90015fba:	d104      	bne.n	90015fc6 <EwBidiProcess+0x68e>
90015fbc:	46be      	mov	lr, r7
90015fbe:	2001      	movs	r0, #1
90015fc0:	45f1      	cmp	r9, lr
90015fc2:	4672      	mov	r2, lr
90015fc4:	d801      	bhi.n	90015fca <EwBidiProcess+0x692>
90015fc6:	2200      	movs	r2, #0
90015fc8:	e00d      	b.n	90015fe6 <EwBidiProcess+0x6ae>
90015fca:	6813      	ldr	r3, [r2, #0]
90015fcc:	f10e 0e04 	add.w	lr, lr, #4
90015fd0:	881b      	ldrh	r3, [r3, #0]
90015fd2:	f3c3 0308 	ubfx	r3, r3, #0, #9
90015fd6:	2b2e      	cmp	r3, #46	; 0x2e
90015fd8:	d101      	bne.n	90015fde <EwBidiProcess+0x6a6>
90015fda:	3001      	adds	r0, #1
90015fdc:	e7f0      	b.n	90015fc0 <EwBidiProcess+0x688>
90015fde:	2b4e      	cmp	r3, #78	; 0x4e
90015fe0:	d1ee      	bne.n	90015fc0 <EwBidiProcess+0x688>
90015fe2:	3801      	subs	r0, #1
90015fe4:	d1ec      	bne.n	90015fc0 <EwBidiProcess+0x688>
90015fe6:	7823      	ldrb	r3, [r4, #0]
90015fe8:	f003 031f 	and.w	r3, r3, #31
90015fec:	2b04      	cmp	r3, #4
90015fee:	d01d      	beq.n	9001602c <EwBidiProcess+0x6f4>
90015ff0:	2b07      	cmp	r3, #7
90015ff2:	d01b      	beq.n	9001602c <EwBidiProcess+0x6f4>
90015ff4:	1e58      	subs	r0, r3, #1
90015ff6:	2801      	cmp	r0, #1
90015ff8:	bf88      	it	hi
90015ffa:	4663      	movhi	r3, ip
90015ffc:	2a00      	cmp	r2, #0
90015ffe:	d040      	beq.n	90016082 <EwBidiProcess+0x74a>
90016000:	2000      	movs	r0, #0
90016002:	46b8      	mov	r8, r7
90016004:	4686      	mov	lr, r0
90016006:	4590      	cmp	r8, r2
90016008:	46c4      	mov	ip, r8
9001600a:	d22a      	bcs.n	90016062 <EwBidiProcess+0x72a>
9001600c:	f1be 0f00 	cmp.w	lr, #0
90016010:	d00e      	beq.n	90016030 <EwBidiProcess+0x6f8>
90016012:	b168      	cbz	r0, 90016030 <EwBidiProcess+0x6f8>
90016014:	7823      	ldrb	r3, [r4, #0]
90016016:	9903      	ldr	r1, [sp, #12]
90016018:	f361 0304 	bfi	r3, r1, #0, #5
9001601c:	7023      	strb	r3, [r4, #0]
9001601e:	6813      	ldr	r3, [r2, #0]
90016020:	7818      	ldrb	r0, [r3, #0]
90016022:	f361 0004 	bfi	r0, r1, #0, #5
90016026:	7018      	strb	r0, [r3, #0]
90016028:	9b06      	ldr	r3, [sp, #24]
9001602a:	e16f      	b.n	9001630c <EwBidiProcess+0x9d4>
9001602c:	2302      	movs	r3, #2
9001602e:	e7e5      	b.n	90015ffc <EwBidiProcess+0x6c4>
90016030:	f8dc c000 	ldr.w	ip, [ip]
90016034:	f108 0804 	add.w	r8, r8, #4
90016038:	f89c c000 	ldrb.w	ip, [ip]
9001603c:	f00c 0c1f 	and.w	ip, ip, #31
90016040:	f1bc 0f01 	cmp.w	ip, #1
90016044:	d102      	bne.n	9001604c <EwBidiProcess+0x714>
90016046:	f10e 0e01 	add.w	lr, lr, #1
9001604a:	e7dc      	b.n	90016006 <EwBidiProcess+0x6ce>
9001604c:	f1bc 0f02 	cmp.w	ip, #2
90016050:	d005      	beq.n	9001605e <EwBidiProcess+0x726>
90016052:	f1bc 0f07 	cmp.w	ip, #7
90016056:	d002      	beq.n	9001605e <EwBidiProcess+0x726>
90016058:	f1bc 0f04 	cmp.w	ip, #4
9001605c:	d1d3      	bne.n	90016006 <EwBidiProcess+0x6ce>
9001605e:	3001      	adds	r0, #1
90016060:	e7d1      	b.n	90016006 <EwBidiProcess+0x6ce>
90016062:	9907      	ldr	r1, [sp, #28]
90016064:	2901      	cmp	r1, #1
90016066:	d006      	beq.n	90016076 <EwBidiProcess+0x73e>
90016068:	2800      	cmp	r0, #0
9001606a:	d1d3      	bne.n	90016014 <EwBidiProcess+0x6dc>
9001606c:	f1be 0f00 	cmp.w	lr, #0
90016070:	d007      	beq.n	90016082 <EwBidiProcess+0x74a>
90016072:	2b02      	cmp	r3, #2
90016074:	e136      	b.n	900162e4 <EwBidiProcess+0x9ac>
90016076:	f1be 0f00 	cmp.w	lr, #0
9001607a:	d1cb      	bne.n	90016014 <EwBidiProcess+0x6dc>
9001607c:	2800      	cmp	r0, #0
9001607e:	f040 8130 	bne.w	900162e2 <EwBidiProcess+0x9aa>
90016082:	469c      	mov	ip, r3
90016084:	e779      	b.n	90015f7a <EwBidiProcess+0x642>
90016086:	7820      	ldrb	r0, [r4, #0]
90016088:	f363 0004 	bfi	r0, r3, #0, #5
9001608c:	7020      	strb	r0, [r4, #0]
9001608e:	e13f      	b.n	90016310 <EwBidiProcess+0x9d8>
90016090:	6833      	ldr	r3, [r6, #0]
90016092:	7819      	ldrb	r1, [r3, #0]
90016094:	f001 031f 	and.w	r3, r1, #31
90016098:	f1a3 000b 	sub.w	r0, r3, #11
9001609c:	b2c0      	uxtb	r0, r0
9001609e:	2a00      	cmp	r2, #0
900160a0:	f040 80bb 	bne.w	9001621a <EwBidiProcess+0x8e2>
900160a4:	2803      	cmp	r0, #3
900160a6:	d935      	bls.n	90016114 <EwBidiProcess+0x7dc>
900160a8:	f1a3 0214 	sub.w	r2, r3, #20
900160ac:	2a03      	cmp	r2, #3
900160ae:	d904      	bls.n	900160ba <EwBidiProcess+0x782>
900160b0:	2200      	movs	r2, #0
900160b2:	3604      	adds	r6, #4
900160b4:	454e      	cmp	r6, r9
900160b6:	d3eb      	bcc.n	90016090 <EwBidiProcess+0x758>
900160b8:	e0ed      	b.n	90016296 <EwBidiProcess+0x95e>
900160ba:	4632      	mov	r2, r6
900160bc:	3b14      	subs	r3, #20
900160be:	2b03      	cmp	r3, #3
900160c0:	d9f7      	bls.n	900160b2 <EwBidiProcess+0x77a>
900160c2:	f852 3c04 	ldr.w	r3, [r2, #-4]
900160c6:	7818      	ldrb	r0, [r3, #0]
900160c8:	f001 031f 	and.w	r3, r1, #31
900160cc:	f000 001f 	and.w	r0, r0, #31
900160d0:	2804      	cmp	r0, #4
900160d2:	f000 8132 	beq.w	9001633a <EwBidiProcess+0xa02>
900160d6:	2807      	cmp	r0, #7
900160d8:	f000 812f 	beq.w	9001633a <EwBidiProcess+0xa02>
900160dc:	2b04      	cmp	r3, #4
900160de:	d015      	beq.n	9001610c <EwBidiProcess+0x7d4>
900160e0:	2b07      	cmp	r3, #7
900160e2:	bf08      	it	eq
900160e4:	2302      	moveq	r3, #2
900160e6:	4298      	cmp	r0, r3
900160e8:	d102      	bne.n	900160f0 <EwBidiProcess+0x7b8>
900160ea:	1e59      	subs	r1, r3, #1
900160ec:	2901      	cmp	r1, #1
900160ee:	d904      	bls.n	900160fa <EwBidiProcess+0x7c2>
900160f0:	6813      	ldr	r3, [r2, #0]
900160f2:	785b      	ldrb	r3, [r3, #1]
900160f4:	f3c3 0340 	ubfx	r3, r3, #1, #1
900160f8:	3301      	adds	r3, #1
900160fa:	4296      	cmp	r6, r2
900160fc:	d9d8      	bls.n	900160b0 <EwBidiProcess+0x778>
900160fe:	f852 1b04 	ldr.w	r1, [r2], #4
90016102:	7808      	ldrb	r0, [r1, #0]
90016104:	f363 0004 	bfi	r0, r3, #0, #5
90016108:	7008      	strb	r0, [r1, #0]
9001610a:	e7f6      	b.n	900160fa <EwBidiProcess+0x7c2>
9001610c:	2302      	movs	r3, #2
9001610e:	e7ea      	b.n	900160e6 <EwBidiProcess+0x7ae>
90016110:	2302      	movs	r3, #2
90016112:	e7f2      	b.n	900160fa <EwBidiProcess+0x7c2>
90016114:	4632      	mov	r2, r6
90016116:	e7cc      	b.n	900160b2 <EwBidiProcess+0x77a>
90016118:	7853      	ldrb	r3, [r2, #1]
9001611a:	7810      	ldrb	r0, [r2, #0]
9001611c:	079c      	lsls	r4, r3, #30
9001611e:	ea4f 0153 	mov.w	r1, r3, lsr #1
90016122:	f000 001f 	and.w	r0, r0, #31
90016126:	d50b      	bpl.n	90016140 <EwBidiProcess+0x808>
90016128:	2807      	cmp	r0, #7
9001612a:	d807      	bhi.n	9001613c <EwBidiProcess+0x804>
9001612c:	fa25 f000 	lsr.w	r0, r5, r0
90016130:	07c0      	lsls	r0, r0, #31
90016132:	d503      	bpl.n	9001613c <EwBidiProcess+0x804>
90016134:	3101      	adds	r1, #1
90016136:	f361 0347 	bfi	r3, r1, #1, #7
9001613a:	7053      	strb	r3, [r2, #1]
9001613c:	3202      	adds	r2, #2
9001613e:	e0af      	b.n	900162a0 <EwBidiProcess+0x968>
90016140:	2802      	cmp	r0, #2
90016142:	b284      	uxth	r4, r0
90016144:	d0f6      	beq.n	90016134 <EwBidiProcess+0x7fc>
90016146:	2c04      	cmp	r4, #4
90016148:	d001      	beq.n	9001614e <EwBidiProcess+0x816>
9001614a:	2c07      	cmp	r4, #7
9001614c:	d1f6      	bne.n	9001613c <EwBidiProcess+0x804>
9001614e:	3102      	adds	r1, #2
90016150:	7853      	ldrb	r3, [r2, #1]
90016152:	e7f0      	b.n	90016136 <EwBidiProcess+0x7fe>
90016154:	9a09      	ldr	r2, [sp, #36]	; 0x24
90016156:	9902      	ldr	r1, [sp, #8]
90016158:	eba2 020a 	sub.w	r2, r2, sl
9001615c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
90016160:	429a      	cmp	r2, r3
90016162:	d14f      	bne.n	90016204 <EwBidiProcess+0x8cc>
90016164:	9a01      	ldr	r2, [sp, #4]
90016166:	4629      	mov	r1, r5
90016168:	9c08      	ldr	r4, [sp, #32]
9001616a:	1a9a      	subs	r2, r3, r2
9001616c:	5aa4      	ldrh	r4, [r4, r2]
9001616e:	9a01      	ldr	r2, [sp, #4]
90016170:	4290      	cmp	r0, r2
90016172:	d308      	bcc.n	90016186 <EwBidiProcess+0x84e>
90016174:	7842      	ldrb	r2, [r0, #1]
90016176:	9e05      	ldr	r6, [sp, #20]
90016178:	ea4f 0952 	mov.w	r9, r2, lsr #1
9001617c:	ebb6 0f52 	cmp.w	r6, r2, lsr #1
90016180:	bfb8      	it	lt
90016182:	fa1f f189 	uxthlt.w	r1, r9
90016186:	f1ab 0202 	sub.w	r2, fp, #2
9001618a:	4293      	cmp	r3, r2
9001618c:	d207      	bcs.n	9001619e <EwBidiProcess+0x866>
9001618e:	78da      	ldrb	r2, [r3, #3]
90016190:	ea4f 0952 	mov.w	r9, r2, lsr #1
90016194:	ebb1 0f52 	cmp.w	r1, r2, lsr #1
90016198:	bfb8      	it	lt
9001619a:	fa1f f189 	uxthlt.w	r1, r9
9001619e:	f242 020d 	movw	r2, #8205	; 0x200d
900161a2:	4294      	cmp	r4, r2
900161a4:	881a      	ldrh	r2, [r3, #0]
900161a6:	d112      	bne.n	900161ce <EwBidiProcess+0x896>
900161a8:	f368 1248 	bfi	r2, r8, #5, #4
900161ac:	801a      	strh	r2, [r3, #0]
900161ae:	0249      	lsls	r1, r1, #9
900161b0:	881a      	ldrh	r2, [r3, #0]
900161b2:	3002      	adds	r0, #2
900161b4:	f041 011f 	orr.w	r1, r1, #31
900161b8:	f10a 3aff 	add.w	sl, sl, #4294967295
900161bc:	f402 72f0 	and.w	r2, r2, #480	; 0x1e0
900161c0:	f10b 0b02 	add.w	fp, fp, #2
900161c4:	4311      	orrs	r1, r2
900161c6:	8019      	strh	r1, [r3, #0]
900161c8:	3802      	subs	r0, #2
900161ca:	3b02      	subs	r3, #2
900161cc:	e079      	b.n	900162c2 <EwBidiProcess+0x98a>
900161ce:	2c08      	cmp	r4, #8
900161d0:	d915      	bls.n	900161fe <EwBidiProcess+0x8c6>
900161d2:	f1a4 090e 	sub.w	r9, r4, #14
900161d6:	f1b9 0f0d 	cmp.w	r9, #13
900161da:	d910      	bls.n	900161fe <EwBidiProcess+0x8c6>
900161dc:	f1a4 097f 	sub.w	r9, r4, #127	; 0x7f
900161e0:	f1b9 0f05 	cmp.w	r9, #5
900161e4:	d90b      	bls.n	900161fe <EwBidiProcess+0x8c6>
900161e6:	f1a4 0986 	sub.w	r9, r4, #134	; 0x86
900161ea:	f1b9 0f19 	cmp.w	r9, #25
900161ee:	d906      	bls.n	900161fe <EwBidiProcess+0x8c6>
900161f0:	42bc      	cmp	r4, r7
900161f2:	d004      	beq.n	900161fe <EwBidiProcess+0x8c6>
900161f4:	4564      	cmp	r4, ip
900161f6:	d002      	beq.n	900161fe <EwBidiProcess+0x8c6>
900161f8:	f36e 1248 	bfi	r2, lr, #5, #4
900161fc:	e7d6      	b.n	900161ac <EwBidiProcess+0x874>
900161fe:	f36f 1248 	bfc	r2, #5, #4
90016202:	e7d3      	b.n	900161ac <EwBidiProcess+0x874>
90016204:	4298      	cmp	r0, r3
90016206:	bf3c      	itt	cc
90016208:	8802      	ldrhcc	r2, [r0, #0]
9001620a:	801a      	strhcc	r2, [r3, #0]
9001620c:	e7dc      	b.n	900161c8 <EwBidiProcess+0x890>
9001620e:	2f00      	cmp	r7, #0
90016210:	f47f ac2f 	bne.w	90015a72 <EwBidiProcess+0x13a>
90016214:	f108 0801 	add.w	r8, r8, #1
90016218:	e42b      	b.n	90015a72 <EwBidiProcess+0x13a>
9001621a:	2803      	cmp	r0, #3
9001621c:	f63f af4e 	bhi.w	900160bc <EwBidiProcess+0x784>
90016220:	e747      	b.n	900160b2 <EwBidiProcess+0x77a>
90016222:	4a4a      	ldr	r2, [pc, #296]	; (9001634c <EwBidiProcess+0xa14>)
90016224:	9904      	ldr	r1, [sp, #16]
90016226:	6813      	ldr	r3, [r2, #0]
90016228:	440b      	add	r3, r1
9001622a:	6013      	str	r3, [r2, #0]
9001622c:	4a48      	ldr	r2, [pc, #288]	; (90016350 <EwBidiProcess+0xa18>)
9001622e:	6811      	ldr	r1, [r2, #0]
90016230:	428b      	cmp	r3, r1
90016232:	dd00      	ble.n	90016236 <EwBidiProcess+0x8fe>
90016234:	6013      	str	r3, [r2, #0]
90016236:	4a47      	ldr	r2, [pc, #284]	; (90016354 <EwBidiProcess+0xa1c>)
90016238:	ad6e      	add	r5, sp, #440	; 0x1b8
9001623a:	4947      	ldr	r1, [pc, #284]	; (90016358 <EwBidiProcess+0xa20>)
9001623c:	f04f 0a00 	mov.w	sl, #0
90016240:	6812      	ldr	r2, [r2, #0]
90016242:	6809      	ldr	r1, [r1, #0]
90016244:	46d0      	mov	r8, sl
90016246:	9e01      	ldr	r6, [sp, #4]
90016248:	4657      	mov	r7, sl
9001624a:	440a      	add	r2, r1
9001624c:	4413      	add	r3, r2
9001624e:	4a43      	ldr	r2, [pc, #268]	; (9001635c <EwBidiProcess+0xa24>)
90016250:	6811      	ldr	r1, [r2, #0]
90016252:	428b      	cmp	r3, r1
90016254:	bfc8      	it	gt
90016256:	6013      	strgt	r3, [r2, #0]
90016258:	9b01      	ldr	r3, [sp, #4]
9001625a:	eb03 0944 	add.w	r9, r3, r4, lsl #1
9001625e:	9b05      	ldr	r3, [sp, #20]
90016260:	4654      	mov	r4, sl
90016262:	702b      	strb	r3, [r5, #0]
90016264:	786b      	ldrb	r3, [r5, #1]
90016266:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
9001626a:	706b      	strb	r3, [r5, #1]
9001626c:	454e      	cmp	r6, r9
9001626e:	f4ff ab8a 	bcc.w	90015986 <EwBidiProcess+0x4e>
90016272:	9801      	ldr	r0, [sp, #4]
90016274:	f04f 0a00 	mov.w	sl, #0
90016278:	4603      	mov	r3, r0
9001627a:	454b      	cmp	r3, r9
9001627c:	f4ff ac3f 	bcc.w	90015afe <EwBidiProcess+0x1c6>
90016280:	ea4f 034a 	mov.w	r3, sl, lsl #1
90016284:	eba9 0b4a 	sub.w	fp, r9, sl, lsl #1
90016288:	930a      	str	r3, [sp, #40]	; 0x28
9001628a:	9b04      	ldr	r3, [sp, #16]
9001628c:	e9dd 5201 	ldrd	r5, r2, [sp, #4]
90016290:	3b04      	subs	r3, #4
90016292:	18d3      	adds	r3, r2, r3
90016294:	930b      	str	r3, [sp, #44]	; 0x2c
90016296:	455d      	cmp	r5, fp
90016298:	f4ff ac4d 	bcc.w	90015b36 <EwBidiProcess+0x1fe>
9001629c:	9a01      	ldr	r2, [sp, #4]
9001629e:	2592      	movs	r5, #146	; 0x92
900162a0:	455a      	cmp	r2, fp
900162a2:	f4ff af39 	bcc.w	90016118 <EwBidiProcess+0x7e0>
900162a6:	f1ab 0002 	sub.w	r0, fp, #2
900162aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900162ac:	f8bd 5014 	ldrh.w	r5, [sp, #20]
900162b0:	f641 070e 	movw	r7, #6158	; 0x180e
900162b4:	4403      	add	r3, r0
900162b6:	f242 0c0c 	movw	ip, #8204	; 0x200c
900162ba:	f04f 0e0c 	mov.w	lr, #12
900162be:	f04f 080b 	mov.w	r8, #11
900162c2:	f1ba 0f00 	cmp.w	sl, #0
900162c6:	f47f af45 	bne.w	90016154 <EwBidiProcess+0x81c>
900162ca:	9802      	ldr	r0, [sp, #8]
900162cc:	f010 fcf4 	bl	90026cb8 <EwFree>
900162d0:	4a1e      	ldr	r2, [pc, #120]	; (9001634c <EwBidiProcess+0xa14>)
900162d2:	9904      	ldr	r1, [sp, #16]
900162d4:	6813      	ldr	r3, [r2, #0]
900162d6:	1a5b      	subs	r3, r3, r1
900162d8:	6013      	str	r3, [r2, #0]
900162da:	f50d 7d2f 	add.w	sp, sp, #700	; 0x2bc
900162de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900162e2:	2b01      	cmp	r3, #1
900162e4:	f43f ae96 	beq.w	90016014 <EwBidiProcess+0x6dc>
900162e8:	f894 c000 	ldrb.w	ip, [r4]
900162ec:	f003 001f 	and.w	r0, r3, #31
900162f0:	f360 0c04 	bfi	ip, r0, #0, #5
900162f4:	f884 c000 	strb.w	ip, [r4]
900162f8:	6814      	ldr	r4, [r2, #0]
900162fa:	f894 c000 	ldrb.w	ip, [r4]
900162fe:	f360 0c04 	bfi	ip, r0, #0, #5
90016302:	f884 c000 	strb.w	ip, [r4]
90016306:	2b00      	cmp	r3, #0
90016308:	f43f aebb 	beq.w	90016082 <EwBidiProcess+0x74a>
9001630c:	f1a7 0c04 	sub.w	ip, r7, #4
90016310:	f85c 4f04 	ldr.w	r4, [ip, #4]!
90016314:	8820      	ldrh	r0, [r4, #0]
90016316:	f400 70f0 	and.w	r0, r0, #480	; 0x1e0
9001631a:	2880      	cmp	r0, #128	; 0x80
9001631c:	f43f aeb3 	beq.w	90016086 <EwBidiProcess+0x74e>
90016320:	f852 4f04 	ldr.w	r4, [r2, #4]!
90016324:	8820      	ldrh	r0, [r4, #0]
90016326:	f400 70f0 	and.w	r0, r0, #480	; 0x1e0
9001632a:	2880      	cmp	r0, #128	; 0x80
9001632c:	f47f aea9 	bne.w	90016082 <EwBidiProcess+0x74a>
90016330:	7820      	ldrb	r0, [r4, #0]
90016332:	f363 0004 	bfi	r0, r3, #0, #5
90016336:	7020      	strb	r0, [r4, #0]
90016338:	e7f2      	b.n	90016320 <EwBidiProcess+0x9e8>
9001633a:	2b04      	cmp	r3, #4
9001633c:	f43f aee8 	beq.w	90016110 <EwBidiProcess+0x7d8>
90016340:	2b07      	cmp	r3, #7
90016342:	f43f aee5 	beq.w	90016110 <EwBidiProcess+0x7d8>
90016346:	2002      	movs	r0, #2
90016348:	e6cd      	b.n	900160e6 <EwBidiProcess+0x7ae>
9001634a:	bf00      	nop
9001634c:	200002bc 	.word	0x200002bc
90016350:	200002d8 	.word	0x200002d8
90016354:	200002ac 	.word	0x200002ac
90016358:	200002b8 	.word	0x200002b8
9001635c:	200002c0 	.word	0x200002c0

90016360 <EwBidiApplyShaping>:
90016360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016364:	b08b      	sub	sp, #44	; 0x2c
90016366:	460d      	mov	r5, r1
90016368:	4616      	mov	r6, r2
9001636a:	9302      	str	r3, [sp, #8]
9001636c:	b1d0      	cbz	r0, 900163a4 <EwBidiApplyShaping+0x44>
9001636e:	e9d0 3901 	ldrd	r3, r9, [r0, #4]
90016372:	eb09 0343 	add.w	r3, r9, r3, lsl #1
90016376:	9306      	str	r3, [sp, #24]
90016378:	f1b9 0f00 	cmp.w	r9, #0
9001637c:	d00f      	beq.n	9001639e <EwBidiApplyShaping+0x3e>
9001637e:	9a14      	ldr	r2, [sp, #80]	; 0x50
90016380:	f899 3001 	ldrb.w	r3, [r9, #1]
90016384:	3a01      	subs	r2, #1
90016386:	f8cd 900c 	str.w	r9, [sp, #12]
9001638a:	085b      	lsrs	r3, r3, #1
9001638c:	f8cd 9004 	str.w	r9, [sp, #4]
90016390:	9204      	str	r2, [sp, #16]
90016392:	0092      	lsls	r2, r2, #2
90016394:	9205      	str	r2, [sp, #20]
90016396:	9a01      	ldr	r2, [sp, #4]
90016398:	9906      	ldr	r1, [sp, #24]
9001639a:	428a      	cmp	r2, r1
9001639c:	d905      	bls.n	900163aa <EwBidiApplyShaping+0x4a>
9001639e:	b00b      	add	sp, #44	; 0x2c
900163a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900163a4:	4603      	mov	r3, r0
900163a6:	4681      	mov	r9, r0
900163a8:	e7e3      	b.n	90016372 <EwBidiApplyShaping+0x12>
900163aa:	9a01      	ldr	r2, [sp, #4]
900163ac:	7852      	ldrb	r2, [r2, #1]
900163ae:	ebb3 0f52 	cmp.w	r3, r2, lsr #1
900163b2:	d104      	bne.n	900163be <EwBidiApplyShaping+0x5e>
900163b4:	9a01      	ldr	r2, [sp, #4]
900163b6:	9906      	ldr	r1, [sp, #24]
900163b8:	428a      	cmp	r2, r1
900163ba:	f0c0 8120 	bcc.w	900165fe <EwBidiApplyShaping+0x29e>
900163be:	2400      	movs	r4, #0
900163c0:	f003 0301 	and.w	r3, r3, #1
900163c4:	4627      	mov	r7, r4
900163c6:	46a0      	mov	r8, r4
900163c8:	9307      	str	r3, [sp, #28]
900163ca:	e105      	b.n	900165d8 <EwBidiApplyShaping+0x278>
900163cc:	9b03      	ldr	r3, [sp, #12]
900163ce:	881b      	ldrh	r3, [r3, #0]
900163d0:	f3c3 1342 	ubfx	r3, r3, #5, #3
900163d4:	2b04      	cmp	r3, #4
900163d6:	f000 8164 	beq.w	900166a2 <EwBidiApplyShaping+0x342>
900163da:	f8dd 800c 	ldr.w	r8, [sp, #12]
900163de:	9b07      	ldr	r3, [sp, #28]
900163e0:	2b00      	cmp	r3, #0
900163e2:	d146      	bne.n	90016472 <EwBidiApplyShaping+0x112>
900163e4:	4642      	mov	r2, r8
900163e6:	463b      	mov	r3, r7
900163e8:	2c00      	cmp	r4, #0
900163ea:	f000 80ee 	beq.w	900165ca <EwBidiApplyShaping+0x26a>
900163ee:	8821      	ldrh	r1, [r4, #0]
900163f0:	f401 71f0 	and.w	r1, r1, #480	; 0x1e0
900163f4:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
900163f8:	d140      	bne.n	9001647c <EwBidiApplyShaping+0x11c>
900163fa:	eba4 0b09 	sub.w	fp, r4, r9
900163fe:	9208      	str	r2, [sp, #32]
90016400:	f835 000b 	ldrh.w	r0, [r5, fp]
90016404:	f7ff f908 	bl	90015618 <EwGetAttrLinkBaseline+0x76>
90016408:	9a08      	ldr	r2, [sp, #32]
9001640a:	4682      	mov	sl, r0
9001640c:	b3a6      	cbz	r6, 90016478 <EwBidiApplyShaping+0x118>
9001640e:	ea4f 036b 	mov.w	r3, fp, asr #1
90016412:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90016416:	f3c3 3307 	ubfx	r3, r3, #12, #8
9001641a:	9904      	ldr	r1, [sp, #16]
9001641c:	4299      	cmp	r1, r3
9001641e:	9902      	ldr	r1, [sp, #8]
90016420:	bfcc      	ite	gt
90016422:	009b      	lslgt	r3, r3, #2
90016424:	9b05      	ldrle	r3, [sp, #20]
90016426:	58c8      	ldr	r0, [r1, r3]
90016428:	b900      	cbnz	r0, 9001642c <EwBidiApplyShaping+0xcc>
9001642a:	6808      	ldr	r0, [r1, #0]
9001642c:	f1ba 0f00 	cmp.w	sl, #0
90016430:	f000 80ab 	beq.w	9001658a <EwBidiApplyShaping+0x22a>
90016434:	f8ba 1004 	ldrh.w	r1, [sl, #4]
90016438:	2900      	cmp	r1, #0
9001643a:	f000 80a6 	beq.w	9001658a <EwBidiApplyShaping+0x22a>
9001643e:	2a00      	cmp	r2, #0
90016440:	f000 80a3 	beq.w	9001658a <EwBidiApplyShaping+0x22a>
90016444:	8813      	ldrh	r3, [r2, #0]
90016446:	f403 72d0 	and.w	r2, r3, #416	; 0x1a0
9001644a:	f5b2 7f90 	cmp.w	r2, #288	; 0x120
9001644e:	d005      	beq.n	9001645c <EwBidiApplyShaping+0xfc>
90016450:	f403 73f0 	and.w	r3, r3, #480	; 0x1e0
90016454:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
90016458:	f040 8097 	bne.w	9001658a <EwBidiApplyShaping+0x22a>
9001645c:	2800      	cmp	r0, #0
9001645e:	f040 80e8 	bne.w	90016632 <EwBidiApplyShaping+0x2d2>
90016462:	f8ba 3004 	ldrh.w	r3, [sl, #4]
90016466:	e087      	b.n	90016578 <EwBidiApplyShaping+0x218>
90016468:	f04f 0800 	mov.w	r8, #0
9001646c:	e7b7      	b.n	900163de <EwBidiApplyShaping+0x7e>
9001646e:	46b8      	mov	r8, r7
90016470:	e7b5      	b.n	900163de <EwBidiApplyShaping+0x7e>
90016472:	463a      	mov	r2, r7
90016474:	4643      	mov	r3, r8
90016476:	e7b7      	b.n	900163e8 <EwBidiApplyShaping+0x88>
90016478:	4633      	mov	r3, r6
9001647a:	e7ce      	b.n	9001641a <EwBidiApplyShaping+0xba>
9001647c:	f5b1 7f90 	cmp.w	r1, #288	; 0x120
90016480:	d134      	bne.n	900164ec <EwBidiApplyShaping+0x18c>
90016482:	eba4 0b09 	sub.w	fp, r4, r9
90016486:	9308      	str	r3, [sp, #32]
90016488:	f835 000b 	ldrh.w	r0, [r5, fp]
9001648c:	f7ff f8c4 	bl	90015618 <EwGetAttrLinkBaseline+0x76>
90016490:	9b08      	ldr	r3, [sp, #32]
90016492:	4682      	mov	sl, r0
90016494:	b346      	cbz	r6, 900164e8 <EwBidiApplyShaping+0x188>
90016496:	ea4f 026b 	mov.w	r2, fp, asr #1
9001649a:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
9001649e:	f3c2 3207 	ubfx	r2, r2, #12, #8
900164a2:	9904      	ldr	r1, [sp, #16]
900164a4:	4291      	cmp	r1, r2
900164a6:	9902      	ldr	r1, [sp, #8]
900164a8:	bfcc      	ite	gt
900164aa:	0092      	lslgt	r2, r2, #2
900164ac:	9a05      	ldrle	r2, [sp, #20]
900164ae:	5888      	ldr	r0, [r1, r2]
900164b0:	b900      	cbnz	r0, 900164b4 <EwBidiApplyShaping+0x154>
900164b2:	6808      	ldr	r0, [r1, #0]
900164b4:	f1ba 0f00 	cmp.w	sl, #0
900164b8:	d067      	beq.n	9001658a <EwBidiApplyShaping+0x22a>
900164ba:	f8ba 1000 	ldrh.w	r1, [sl]
900164be:	2900      	cmp	r1, #0
900164c0:	d063      	beq.n	9001658a <EwBidiApplyShaping+0x22a>
900164c2:	2b00      	cmp	r3, #0
900164c4:	d061      	beq.n	9001658a <EwBidiApplyShaping+0x22a>
900164c6:	881b      	ldrh	r3, [r3, #0]
900164c8:	f403 72d0 	and.w	r2, r3, #416	; 0x1a0
900164cc:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
900164d0:	d004      	beq.n	900164dc <EwBidiApplyShaping+0x17c>
900164d2:	f403 73f0 	and.w	r3, r3, #480	; 0x1e0
900164d6:	f5b3 7fb0 	cmp.w	r3, #352	; 0x160
900164da:	d156      	bne.n	9001658a <EwBidiApplyShaping+0x22a>
900164dc:	2800      	cmp	r0, #0
900164de:	f040 80ae 	bne.w	9001663e <EwBidiApplyShaping+0x2de>
900164e2:	f8ba 3000 	ldrh.w	r3, [sl]
900164e6:	e047      	b.n	90016578 <EwBidiApplyShaping+0x218>
900164e8:	4632      	mov	r2, r6
900164ea:	e7da      	b.n	900164a2 <EwBidiApplyShaping+0x142>
900164ec:	f5b1 7fa0 	cmp.w	r1, #320	; 0x140
900164f0:	d14b      	bne.n	9001658a <EwBidiApplyShaping+0x22a>
900164f2:	eba4 0b09 	sub.w	fp, r4, r9
900164f6:	f835 000b 	ldrh.w	r0, [r5, fp]
900164fa:	e9cd 3208 	strd	r3, r2, [sp, #32]
900164fe:	f7ff f88b 	bl	90015618 <EwGetAttrLinkBaseline+0x76>
90016502:	4682      	mov	sl, r0
90016504:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90016508:	2e00      	cmp	r6, #0
9001650a:	d038      	beq.n	9001657e <EwBidiApplyShaping+0x21e>
9001650c:	ea4f 016b 	mov.w	r1, fp, asr #1
90016510:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90016514:	f3c1 3107 	ubfx	r1, r1, #12, #8
90016518:	9804      	ldr	r0, [sp, #16]
9001651a:	4288      	cmp	r0, r1
9001651c:	9802      	ldr	r0, [sp, #8]
9001651e:	bfcc      	ite	gt
90016520:	0089      	lslgt	r1, r1, #2
90016522:	9905      	ldrle	r1, [sp, #20]
90016524:	5840      	ldr	r0, [r0, r1]
90016526:	b908      	cbnz	r0, 9001652c <EwBidiApplyShaping+0x1cc>
90016528:	9902      	ldr	r1, [sp, #8]
9001652a:	6808      	ldr	r0, [r1, #0]
9001652c:	f1ba 0f00 	cmp.w	sl, #0
90016530:	d02b      	beq.n	9001658a <EwBidiApplyShaping+0x22a>
90016532:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90016536:	2900      	cmp	r1, #0
90016538:	d065      	beq.n	90016606 <EwBidiApplyShaping+0x2a6>
9001653a:	2a00      	cmp	r2, #0
9001653c:	d063      	beq.n	90016606 <EwBidiApplyShaping+0x2a6>
9001653e:	2b00      	cmp	r3, #0
90016540:	d061      	beq.n	90016606 <EwBidiApplyShaping+0x2a6>
90016542:	f8b2 c000 	ldrh.w	ip, [r2]
90016546:	f40c 7ed0 	and.w	lr, ip, #416	; 0x1a0
9001654a:	f5be 7f90 	cmp.w	lr, #288	; 0x120
9001654e:	d004      	beq.n	9001655a <EwBidiApplyShaping+0x1fa>
90016550:	f40c 7cf0 	and.w	ip, ip, #480	; 0x1e0
90016554:	f5bc 7fa0 	cmp.w	ip, #320	; 0x140
90016558:	d155      	bne.n	90016606 <EwBidiApplyShaping+0x2a6>
9001655a:	f8b3 c000 	ldrh.w	ip, [r3]
9001655e:	f40c 7ed0 	and.w	lr, ip, #416	; 0x1a0
90016562:	f5be 7f80 	cmp.w	lr, #256	; 0x100
90016566:	d004      	beq.n	90016572 <EwBidiApplyShaping+0x212>
90016568:	f40c 7cf0 	and.w	ip, ip, #480	; 0x1e0
9001656c:	f5bc 7fb0 	cmp.w	ip, #352	; 0x160
90016570:	d149      	bne.n	90016606 <EwBidiApplyShaping+0x2a6>
90016572:	b930      	cbnz	r0, 90016582 <EwBidiApplyShaping+0x222>
90016574:	f8ba 3002 	ldrh.w	r3, [sl, #2]
90016578:	f825 300b 	strh.w	r3, [r5, fp]
9001657c:	e005      	b.n	9001658a <EwBidiApplyShaping+0x22a>
9001657e:	4631      	mov	r1, r6
90016580:	e7ca      	b.n	90016518 <EwBidiApplyShaping+0x1b8>
90016582:	f7fb fa9b 	bl	90011abc <EwIsGlyphAvailable>
90016586:	2800      	cmp	r0, #0
90016588:	d1f4      	bne.n	90016574 <EwBidiApplyShaping+0x214>
9001658a:	b1f7      	cbz	r7, 900165ca <EwBidiApplyShaping+0x26a>
9001658c:	9b07      	ldr	r3, [sp, #28]
9001658e:	f64f 61df 	movw	r1, #65247	; 0xfedf
90016592:	2b00      	cmp	r3, #0
90016594:	bf15      	itete	ne
90016596:	46bb      	movne	fp, r7
90016598:	46a3      	moveq	fp, r4
9001659a:	46a2      	movne	sl, r4
9001659c:	46ba      	moveq	sl, r7
9001659e:	ebab 0b09 	sub.w	fp, fp, r9
900165a2:	ebaa 0a09 	sub.w	sl, sl, r9
900165a6:	f835 200b 	ldrh.w	r2, [r5, fp]
900165aa:	f835 300a 	ldrh.w	r3, [r5, sl]
900165ae:	428a      	cmp	r2, r1
900165b0:	d17c      	bne.n	900166ac <EwBidiApplyShaping+0x34c>
900165b2:	f503 73bf 	add.w	r3, r3, #382	; 0x17e
900165b6:	b29b      	uxth	r3, r3
900165b8:	2b0c      	cmp	r3, #12
900165ba:	d806      	bhi.n	900165ca <EwBidiApplyShaping+0x26a>
900165bc:	4a46      	ldr	r2, [pc, #280]	; (900166d8 <EwBidiApplyShaping+0x378>)
900165be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900165c2:	f8b3 141c 	ldrh.w	r1, [r3, #1052]	; 0x41c
900165c6:	2900      	cmp	r1, #0
900165c8:	d145      	bne.n	90016656 <EwBidiApplyShaping+0x2f6>
900165ca:	9b03      	ldr	r3, [sp, #12]
900165cc:	3302      	adds	r3, #2
900165ce:	9303      	str	r3, [sp, #12]
900165d0:	4643      	mov	r3, r8
900165d2:	46b8      	mov	r8, r7
900165d4:	4627      	mov	r7, r4
900165d6:	461c      	mov	r4, r3
900165d8:	9b01      	ldr	r3, [sp, #4]
900165da:	9a03      	ldr	r2, [sp, #12]
900165dc:	4293      	cmp	r3, r2
900165de:	f63f aef5 	bhi.w	900163cc <EwBidiApplyShaping+0x6c>
900165e2:	2f00      	cmp	r7, #0
900165e4:	f47f af40 	bne.w	90016468 <EwBidiApplyShaping+0x108>
900165e8:	f1b8 0f00 	cmp.w	r8, #0
900165ec:	f47f af3f 	bne.w	9001646e <EwBidiApplyShaping+0x10e>
900165f0:	2c00      	cmp	r4, #0
900165f2:	f47f aef4 	bne.w	900163de <EwBidiApplyShaping+0x7e>
900165f6:	785b      	ldrb	r3, [r3, #1]
900165f8:	9a01      	ldr	r2, [sp, #4]
900165fa:	085b      	lsrs	r3, r3, #1
900165fc:	9203      	str	r2, [sp, #12]
900165fe:	9a01      	ldr	r2, [sp, #4]
90016600:	3202      	adds	r2, #2
90016602:	9201      	str	r2, [sp, #4]
90016604:	e6c7      	b.n	90016396 <EwBidiApplyShaping+0x36>
90016606:	f8ba 1004 	ldrh.w	r1, [sl, #4]
9001660a:	2900      	cmp	r1, #0
9001660c:	f43f af55 	beq.w	900164ba <EwBidiApplyShaping+0x15a>
90016610:	2a00      	cmp	r2, #0
90016612:	f43f af52 	beq.w	900164ba <EwBidiApplyShaping+0x15a>
90016616:	8812      	ldrh	r2, [r2, #0]
90016618:	f402 7cd0 	and.w	ip, r2, #416	; 0x1a0
9001661c:	f5bc 7f90 	cmp.w	ip, #288	; 0x120
90016620:	f43f af1c 	beq.w	9001645c <EwBidiApplyShaping+0xfc>
90016624:	f402 72f0 	and.w	r2, r2, #480	; 0x1e0
90016628:	f5b2 7fa0 	cmp.w	r2, #320	; 0x140
9001662c:	f47f af45 	bne.w	900164ba <EwBidiApplyShaping+0x15a>
90016630:	e714      	b.n	9001645c <EwBidiApplyShaping+0xfc>
90016632:	f7fb fa43 	bl	90011abc <EwIsGlyphAvailable>
90016636:	2800      	cmp	r0, #0
90016638:	f47f af13 	bne.w	90016462 <EwBidiApplyShaping+0x102>
9001663c:	e7a5      	b.n	9001658a <EwBidiApplyShaping+0x22a>
9001663e:	f7fb fa3d 	bl	90011abc <EwIsGlyphAvailable>
90016642:	2800      	cmp	r0, #0
90016644:	f47f af4d 	bne.w	900164e2 <EwBidiApplyShaping+0x182>
90016648:	e79f      	b.n	9001658a <EwBidiApplyShaping+0x22a>
9001664a:	f64f 628e 	movw	r2, #65166	; 0xfe8e
9001664e:	4293      	cmp	r3, r2
90016650:	d1bb      	bne.n	900165ca <EwBidiApplyShaping+0x26a>
90016652:	f64f 61fc 	movw	r1, #65276	; 0xfefc
90016656:	b316      	cbz	r6, 9001669e <EwBidiApplyShaping+0x33e>
90016658:	ea4f 036a 	mov.w	r3, sl, asr #1
9001665c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90016660:	f3c3 3307 	ubfx	r3, r3, #12, #8
90016664:	9a04      	ldr	r2, [sp, #16]
90016666:	429a      	cmp	r2, r3
90016668:	9a02      	ldr	r2, [sp, #8]
9001666a:	bfcc      	ite	gt
9001666c:	009b      	lslgt	r3, r3, #2
9001666e:	9b05      	ldrle	r3, [sp, #20]
90016670:	58d0      	ldr	r0, [r2, r3]
90016672:	b908      	cbnz	r0, 90016678 <EwBidiApplyShaping+0x318>
90016674:	6810      	ldr	r0, [r2, #0]
90016676:	b128      	cbz	r0, 90016684 <EwBidiApplyShaping+0x324>
90016678:	9108      	str	r1, [sp, #32]
9001667a:	f7fb fa1f 	bl	90011abc <EwIsGlyphAvailable>
9001667e:	9908      	ldr	r1, [sp, #32]
90016680:	2800      	cmp	r0, #0
90016682:	d0a2      	beq.n	900165ca <EwBidiApplyShaping+0x26a>
90016684:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90016688:	f825 100a 	strh.w	r1, [r5, sl]
9001668c:	f825 300b 	strh.w	r3, [r5, fp]
90016690:	e79b      	b.n	900165ca <EwBidiApplyShaping+0x26a>
90016692:	f64f 61fa 	movw	r1, #65274	; 0xfefa
90016696:	e7de      	b.n	90016656 <EwBidiApplyShaping+0x2f6>
90016698:	f64f 61f6 	movw	r1, #65270	; 0xfef6
9001669c:	e7db      	b.n	90016656 <EwBidiApplyShaping+0x2f6>
9001669e:	4633      	mov	r3, r6
900166a0:	e7e0      	b.n	90016664 <EwBidiApplyShaping+0x304>
900166a2:	463b      	mov	r3, r7
900166a4:	4647      	mov	r7, r8
900166a6:	46a0      	mov	r8, r4
900166a8:	461c      	mov	r4, r3
900166aa:	e78e      	b.n	900165ca <EwBidiApplyShaping+0x26a>
900166ac:	f64f 61e0 	movw	r1, #65248	; 0xfee0
900166b0:	428a      	cmp	r2, r1
900166b2:	d18a      	bne.n	900165ca <EwBidiApplyShaping+0x26a>
900166b4:	f64f 6288 	movw	r2, #65160	; 0xfe88
900166b8:	4293      	cmp	r3, r2
900166ba:	d0ea      	beq.n	90016692 <EwBidiApplyShaping+0x332>
900166bc:	d8c5      	bhi.n	9001664a <EwBidiApplyShaping+0x2ea>
900166be:	f64f 6282 	movw	r2, #65154	; 0xfe82
900166c2:	4293      	cmp	r3, r2
900166c4:	d0e8      	beq.n	90016698 <EwBidiApplyShaping+0x338>
900166c6:	f64f 6284 	movw	r2, #65156	; 0xfe84
900166ca:	4293      	cmp	r3, r2
900166cc:	f47f af7d 	bne.w	900165ca <EwBidiApplyShaping+0x26a>
900166d0:	f64f 61f8 	movw	r1, #65272	; 0xfef8
900166d4:	e7bf      	b.n	90016656 <EwBidiApplyShaping+0x2f6>
900166d6:	bf00      	nop
900166d8:	90031bdc 	.word	0x90031bdc

900166dc <EwBidiMirrorGlyphs>:
900166dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900166de:	460e      	mov	r6, r1
900166e0:	b138      	cbz	r0, 900166f2 <EwBidiMirrorGlyphs+0x16>
900166e2:	e9d0 4501 	ldrd	r4, r5, [r0, #4]
900166e6:	0064      	lsls	r4, r4, #1
900166e8:	b11d      	cbz	r5, 900166f2 <EwBidiMirrorGlyphs+0x16>
900166ea:	3c02      	subs	r4, #2
900166ec:	442c      	add	r4, r5
900166ee:	42ac      	cmp	r4, r5
900166f0:	d200      	bcs.n	900166f4 <EwBidiMirrorGlyphs+0x18>
900166f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900166f4:	7863      	ldrb	r3, [r4, #1]
900166f6:	079b      	lsls	r3, r3, #30
900166f8:	d50b      	bpl.n	90016712 <EwBidiMirrorGlyphs+0x36>
900166fa:	8823      	ldrh	r3, [r4, #0]
900166fc:	f3c3 1343 	ubfx	r3, r3, #5, #4
90016700:	3b01      	subs	r3, #1
90016702:	2b02      	cmp	r3, #2
90016704:	d805      	bhi.n	90016712 <EwBidiMirrorGlyphs+0x36>
90016706:	1b67      	subs	r7, r4, r5
90016708:	5bf0      	ldrh	r0, [r6, r7]
9001670a:	f7fe ff69 	bl	900155e0 <EwGetAttrLinkBaseline+0x3e>
9001670e:	b100      	cbz	r0, 90016712 <EwBidiMirrorGlyphs+0x36>
90016710:	53f0      	strh	r0, [r6, r7]
90016712:	3c02      	subs	r4, #2
90016714:	e7eb      	b.n	900166ee <EwBidiMirrorGlyphs+0x12>

90016716 <EwBidiCompleteRow>:
90016716:	b510      	push	{r4, lr}
90016718:	b150      	cbz	r0, 90016730 <EwBidiCompleteRow+0x1a>
9001671a:	6883      	ldr	r3, [r0, #8]
9001671c:	7b00      	ldrb	r0, [r0, #12]
9001671e:	eb13 0242 	adds.w	r2, r3, r2, lsl #1
90016722:	eb03 0441 	add.w	r4, r3, r1, lsl #1
90016726:	d003      	beq.n	90016730 <EwBidiCompleteRow+0x1a>
90016728:	3a02      	subs	r2, #2
9001672a:	2101      	movs	r1, #1
9001672c:	42a2      	cmp	r2, r4
9001672e:	d200      	bcs.n	90016732 <EwBidiCompleteRow+0x1c>
90016730:	bd10      	pop	{r4, pc}
90016732:	8813      	ldrh	r3, [r2, #0]
90016734:	f3c3 1343 	ubfx	r3, r3, #5, #4
90016738:	2b06      	cmp	r3, #6
9001673a:	d106      	bne.n	9001674a <EwBidiCompleteRow+0x34>
9001673c:	7853      	ldrb	r3, [r2, #1]
9001673e:	2101      	movs	r1, #1
90016740:	f360 0347 	bfi	r3, r0, #1, #7
90016744:	7053      	strb	r3, [r2, #1]
90016746:	3a02      	subs	r2, #2
90016748:	e7f0      	b.n	9001672c <EwBidiCompleteRow+0x16>
9001674a:	b141      	cbz	r1, 9001675e <EwBidiCompleteRow+0x48>
9001674c:	f003 030d 	and.w	r3, r3, #13
90016750:	2b05      	cmp	r3, #5
90016752:	d104      	bne.n	9001675e <EwBidiCompleteRow+0x48>
90016754:	7853      	ldrb	r3, [r2, #1]
90016756:	f360 0347 	bfi	r3, r0, #1, #7
9001675a:	7053      	strb	r3, [r2, #1]
9001675c:	e7f3      	b.n	90016746 <EwBidiCompleteRow+0x30>
9001675e:	7813      	ldrb	r3, [r2, #0]
90016760:	f003 031f 	and.w	r3, r3, #31
90016764:	2b1f      	cmp	r3, #31
90016766:	bf18      	it	ne
90016768:	2100      	movne	r1, #0
9001676a:	e7ec      	b.n	90016746 <EwBidiCompleteRow+0x30>

9001676c <EwBidiReorderChars>:
9001676c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016770:	f5ad 7d03 	sub.w	sp, sp, #524	; 0x20c
90016774:	9300      	str	r3, [sp, #0]
90016776:	b198      	cbz	r0, 900167a0 <EwBidiReorderChars+0x34>
90016778:	6884      	ldr	r4, [r0, #8]
9001677a:	eb04 0041 	add.w	r0, r4, r1, lsl #1
9001677e:	eb04 0842 	add.w	r8, r4, r2, lsl #1
90016782:	2100      	movs	r1, #0
90016784:	4606      	mov	r6, r0
90016786:	4605      	mov	r5, r0
90016788:	f10d 090c 	add.w	r9, sp, #12
9001678c:	460a      	mov	r2, r1
9001678e:	460c      	mov	r4, r1
90016790:	4546      	cmp	r6, r8
90016792:	d907      	bls.n	900167a4 <EwBidiReorderChars+0x38>
90016794:	4291      	cmp	r1, r2
90016796:	d84d      	bhi.n	90016834 <EwBidiReorderChars+0xc8>
90016798:	f50d 7d03 	add.w	sp, sp, #524	; 0x20c
9001679c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900167a0:	4680      	mov	r8, r0
900167a2:	e7ee      	b.n	90016782 <EwBidiReorderChars+0x16>
900167a4:	d244      	bcs.n	90016830 <EwBidiReorderChars+0xc4>
900167a6:	7877      	ldrb	r7, [r6, #1]
900167a8:	eb09 0c84 	add.w	ip, r9, r4, lsl #2
900167ac:	087f      	lsrs	r7, r7, #1
900167ae:	42bc      	cmp	r4, r7
900167b0:	d307      	bcc.n	900167c2 <EwBidiReorderChars+0x56>
900167b2:	eba6 0e00 	sub.w	lr, r6, r0
900167b6:	9b00      	ldr	r3, [sp, #0]
900167b8:	46a4      	mov	ip, r4
900167ba:	f1ae 0e02 	sub.w	lr, lr, #2
900167be:	449e      	add	lr, r3
900167c0:	e01d      	b.n	900167fe <EwBidiReorderChars+0x92>
900167c2:	3401      	adds	r4, #1
900167c4:	f84c 5b04 	str.w	r5, [ip], #4
900167c8:	4635      	mov	r5, r6
900167ca:	b2e4      	uxtb	r4, r4
900167cc:	e7ef      	b.n	900167ae <EwBidiReorderChars+0x42>
900167ce:	f10c 3cff 	add.w	ip, ip, #4294967295
900167d2:	eba6 0a05 	sub.w	sl, r6, r5
900167d6:	fa5f fc8c 	uxtb.w	ip, ip
900167da:	f1ba 0f02 	cmp.w	sl, #2
900167de:	f859 302c 	ldr.w	r3, [r9, ip, lsl #2]
900167e2:	9301      	str	r3, [sp, #4]
900167e4:	dd0a      	ble.n	900167fc <EwBidiReorderChars+0x90>
900167e6:	1a2d      	subs	r5, r5, r0
900167e8:	9b00      	ldr	r3, [sp, #0]
900167ea:	441d      	add	r5, r3
900167ec:	42aa      	cmp	r2, r5
900167ee:	d101      	bne.n	900167f4 <EwBidiReorderChars+0x88>
900167f0:	4571      	cmp	r1, lr
900167f2:	d01a      	beq.n	9001682a <EwBidiReorderChars+0xbe>
900167f4:	4291      	cmp	r1, r2
900167f6:	d80f      	bhi.n	90016818 <EwBidiReorderChars+0xac>
900167f8:	4671      	mov	r1, lr
900167fa:	462a      	mov	r2, r5
900167fc:	9d01      	ldr	r5, [sp, #4]
900167fe:	45bc      	cmp	ip, r7
90016800:	d8e5      	bhi.n	900167ce <EwBidiReorderChars+0x62>
90016802:	eba7 0c04 	sub.w	ip, r7, r4
90016806:	3602      	adds	r6, #2
90016808:	42a7      	cmp	r7, r4
9001680a:	bf88      	it	hi
9001680c:	f04f 0c00 	movhi.w	ip, #0
90016810:	fa54 f48c 	uxtab	r4, r4, ip
90016814:	b2e4      	uxtb	r4, r4
90016816:	e7bb      	b.n	90016790 <EwBidiReorderChars+0x24>
90016818:	f8b2 a000 	ldrh.w	sl, [r2]
9001681c:	f8b1 b000 	ldrh.w	fp, [r1]
90016820:	f822 bb02 	strh.w	fp, [r2], #2
90016824:	f821 a902 	strh.w	sl, [r1], #-2
90016828:	e7e4      	b.n	900167f4 <EwBidiReorderChars+0x88>
9001682a:	2100      	movs	r1, #0
9001682c:	460a      	mov	r2, r1
9001682e:	e7e5      	b.n	900167fc <EwBidiReorderChars+0x90>
90016830:	2700      	movs	r7, #0
90016832:	e7be      	b.n	900167b2 <EwBidiReorderChars+0x46>
90016834:	8813      	ldrh	r3, [r2, #0]
90016836:	8808      	ldrh	r0, [r1, #0]
90016838:	f822 0b02 	strh.w	r0, [r2], #2
9001683c:	f821 3902 	strh.w	r3, [r1], #-2
90016840:	e7a8      	b.n	90016794 <EwBidiReorderChars+0x28>

90016842 <EwBidiReorderDWords>:
90016842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016846:	f5ad 7d03 	sub.w	sp, sp, #524	; 0x20c
9001684a:	9300      	str	r3, [sp, #0]
9001684c:	b1a8      	cbz	r0, 9001687a <EwBidiReorderDWords+0x38>
9001684e:	6880      	ldr	r0, [r0, #8]
90016850:	eb00 0441 	add.w	r4, r0, r1, lsl #1
90016854:	eb00 0842 	add.w	r8, r0, r2, lsl #1
90016858:	2000      	movs	r0, #0
9001685a:	4626      	mov	r6, r4
9001685c:	4621      	mov	r1, r4
9001685e:	f10d 090c 	add.w	r9, sp, #12
90016862:	4602      	mov	r2, r0
90016864:	4605      	mov	r5, r0
90016866:	f06f 4a40 	mvn.w	sl, #3221225472	; 0xc0000000
9001686a:	4546      	cmp	r6, r8
9001686c:	d908      	bls.n	90016880 <EwBidiReorderDWords+0x3e>
9001686e:	4290      	cmp	r0, r2
90016870:	d850      	bhi.n	90016914 <EwBidiReorderDWords+0xd2>
90016872:	f50d 7d03 	add.w	sp, sp, #524	; 0x20c
90016876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001687a:	4604      	mov	r4, r0
9001687c:	4680      	mov	r8, r0
9001687e:	e7eb      	b.n	90016858 <EwBidiReorderDWords+0x16>
90016880:	d246      	bcs.n	90016910 <EwBidiReorderDWords+0xce>
90016882:	7877      	ldrb	r7, [r6, #1]
90016884:	eb09 0c85 	add.w	ip, r9, r5, lsl #2
90016888:	087f      	lsrs	r7, r7, #1
9001688a:	42bd      	cmp	r5, r7
9001688c:	d308      	bcc.n	900168a0 <EwBidiReorderDWords+0x5e>
9001688e:	eba6 0e04 	sub.w	lr, r6, r4
90016892:	9b00      	ldr	r3, [sp, #0]
90016894:	46ac      	mov	ip, r5
90016896:	eb0a 0e6e 	add.w	lr, sl, lr, asr #1
9001689a:	eb03 0e8e 	add.w	lr, r3, lr, lsl #2
9001689e:	e01f      	b.n	900168e0 <EwBidiReorderDWords+0x9e>
900168a0:	3501      	adds	r5, #1
900168a2:	f84c 1b04 	str.w	r1, [ip], #4
900168a6:	4631      	mov	r1, r6
900168a8:	b2ed      	uxtb	r5, r5
900168aa:	e7ee      	b.n	9001688a <EwBidiReorderDWords+0x48>
900168ac:	f10c 3cff 	add.w	ip, ip, #4294967295
900168b0:	eba6 0b01 	sub.w	fp, r6, r1
900168b4:	fa5f fc8c 	uxtb.w	ip, ip
900168b8:	f1bb 0f02 	cmp.w	fp, #2
900168bc:	f859 302c 	ldr.w	r3, [r9, ip, lsl #2]
900168c0:	9301      	str	r3, [sp, #4]
900168c2:	dd0c      	ble.n	900168de <EwBidiReorderDWords+0x9c>
900168c4:	1b09      	subs	r1, r1, r4
900168c6:	9b00      	ldr	r3, [sp, #0]
900168c8:	1049      	asrs	r1, r1, #1
900168ca:	eb03 0181 	add.w	r1, r3, r1, lsl #2
900168ce:	428a      	cmp	r2, r1
900168d0:	d101      	bne.n	900168d6 <EwBidiReorderDWords+0x94>
900168d2:	4570      	cmp	r0, lr
900168d4:	d019      	beq.n	9001690a <EwBidiReorderDWords+0xc8>
900168d6:	4290      	cmp	r0, r2
900168d8:	d80f      	bhi.n	900168fa <EwBidiReorderDWords+0xb8>
900168da:	4670      	mov	r0, lr
900168dc:	460a      	mov	r2, r1
900168de:	9901      	ldr	r1, [sp, #4]
900168e0:	45bc      	cmp	ip, r7
900168e2:	d8e3      	bhi.n	900168ac <EwBidiReorderDWords+0x6a>
900168e4:	eba7 0c05 	sub.w	ip, r7, r5
900168e8:	3602      	adds	r6, #2
900168ea:	42af      	cmp	r7, r5
900168ec:	bf88      	it	hi
900168ee:	f04f 0c00 	movhi.w	ip, #0
900168f2:	fa55 f58c 	uxtab	r5, r5, ip
900168f6:	b2ed      	uxtb	r5, r5
900168f8:	e7b7      	b.n	9001686a <EwBidiReorderDWords+0x28>
900168fa:	f8d2 b000 	ldr.w	fp, [r2]
900168fe:	6803      	ldr	r3, [r0, #0]
90016900:	f842 3b04 	str.w	r3, [r2], #4
90016904:	f840 b904 	str.w	fp, [r0], #-4
90016908:	e7e5      	b.n	900168d6 <EwBidiReorderDWords+0x94>
9001690a:	2000      	movs	r0, #0
9001690c:	4602      	mov	r2, r0
9001690e:	e7e6      	b.n	900168de <EwBidiReorderDWords+0x9c>
90016910:	2700      	movs	r7, #0
90016912:	e7bc      	b.n	9001688e <EwBidiReorderDWords+0x4c>
90016914:	6813      	ldr	r3, [r2, #0]
90016916:	6801      	ldr	r1, [r0, #0]
90016918:	f842 1b04 	str.w	r1, [r2], #4
9001691c:	f840 3904 	str.w	r3, [r0], #-4
90016920:	e7a5      	b.n	9001686e <EwBidiReorderDWords+0x2c>

90016922 <EwBidiReorderIndex>:
90016922:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016926:	f5ad 7d01 	sub.w	sp, sp, #516	; 0x204
9001692a:	b180      	cbz	r0, 9001694e <EwBidiReorderIndex+0x2c>
9001692c:	6880      	ldr	r0, [r0, #8]
9001692e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90016932:	eb00 0c42 	add.w	ip, r0, r2, lsl #1
90016936:	4618      	mov	r0, r3
90016938:	460c      	mov	r4, r1
9001693a:	460a      	mov	r2, r1
9001693c:	2300      	movs	r3, #0
9001693e:	f10d 0e04 	add.w	lr, sp, #4
90016942:	4564      	cmp	r4, ip
90016944:	d906      	bls.n	90016954 <EwBidiReorderIndex+0x32>
90016946:	f50d 7d01 	add.w	sp, sp, #516	; 0x204
9001694a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001694e:	4601      	mov	r1, r0
90016950:	4684      	mov	ip, r0
90016952:	e7f0      	b.n	90016936 <EwBidiReorderIndex+0x14>
90016954:	d230      	bcs.n	900169b8 <EwBidiReorderIndex+0x96>
90016956:	7865      	ldrb	r5, [r4, #1]
90016958:	eb0e 0683 	add.w	r6, lr, r3, lsl #2
9001695c:	086d      	lsrs	r5, r5, #1
9001695e:	42ab      	cmp	r3, r5
90016960:	d304      	bcc.n	9001696c <EwBidiReorderIndex+0x4a>
90016962:	1a67      	subs	r7, r4, r1
90016964:	461e      	mov	r6, r3
90016966:	107f      	asrs	r7, r7, #1
90016968:	3f01      	subs	r7, #1
9001696a:	e01a      	b.n	900169a2 <EwBidiReorderIndex+0x80>
9001696c:	3301      	adds	r3, #1
9001696e:	f846 2b04 	str.w	r2, [r6], #4
90016972:	4622      	mov	r2, r4
90016974:	b2db      	uxtb	r3, r3
90016976:	e7f2      	b.n	9001695e <EwBidiReorderIndex+0x3c>
90016978:	3e01      	subs	r6, #1
9001697a:	eba4 0802 	sub.w	r8, r4, r2
9001697e:	b2f6      	uxtb	r6, r6
90016980:	f1b8 0f02 	cmp.w	r8, #2
90016984:	f85e 9026 	ldr.w	r9, [lr, r6, lsl #2]
90016988:	dd0a      	ble.n	900169a0 <EwBidiReorderIndex+0x7e>
9001698a:	1a52      	subs	r2, r2, r1
9001698c:	ebb0 0f62 	cmp.w	r0, r2, asr #1
90016990:	ea4f 0862 	mov.w	r8, r2, asr #1
90016994:	db04      	blt.n	900169a0 <EwBidiReorderIndex+0x7e>
90016996:	42b8      	cmp	r0, r7
90016998:	bfdc      	itt	le
9001699a:	eba0 0008 	suble.w	r0, r0, r8
9001699e:	1a38      	suble	r0, r7, r0
900169a0:	464a      	mov	r2, r9
900169a2:	42ae      	cmp	r6, r5
900169a4:	d8e8      	bhi.n	90016978 <EwBidiReorderIndex+0x56>
900169a6:	1aee      	subs	r6, r5, r3
900169a8:	3402      	adds	r4, #2
900169aa:	42ab      	cmp	r3, r5
900169ac:	bf38      	it	cc
900169ae:	2600      	movcc	r6, #0
900169b0:	fa53 f386 	uxtab	r3, r3, r6
900169b4:	b2db      	uxtb	r3, r3
900169b6:	e7c4      	b.n	90016942 <EwBidiReorderIndex+0x20>
900169b8:	2500      	movs	r5, #0
900169ba:	e7d2      	b.n	90016962 <EwBidiReorderIndex+0x40>

900169bc <EwBidiReverseReorderIndex>:
900169bc:	b5f0      	push	{r4, r5, r6, r7, lr}
900169be:	f5ad 7d01 	sub.w	sp, sp, #516	; 0x204
900169c2:	b1c8      	cbz	r0, 900169f8 <EwBidiReverseReorderIndex+0x3c>
900169c4:	1a52      	subs	r2, r2, r1
900169c6:	6880      	ldr	r0, [r0, #8]
900169c8:	3a01      	subs	r2, #1
900169ca:	eb00 0041 	add.w	r0, r0, r1, lsl #1
900169ce:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
900169d2:	da11      	bge.n	900169f8 <EwBidiReverseReorderIndex+0x3c>
900169d4:	2100      	movs	r1, #0
900169d6:	af40      	add	r7, sp, #256	; 0x100
900169d8:	460d      	mov	r5, r1
900169da:	4295      	cmp	r5, r2
900169dc:	db10      	blt.n	90016a00 <EwBidiReverseReorderIndex+0x44>
900169de:	af40      	add	r7, sp, #256	; 0x100
900169e0:	46ec      	mov	ip, sp
900169e2:	2500      	movs	r5, #0
900169e4:	42a9      	cmp	r1, r5
900169e6:	d007      	beq.n	900169f8 <EwBidiReverseReorderIndex+0x3c>
900169e8:	f83c 4b02 	ldrh.w	r4, [ip], #2
900169ec:	429c      	cmp	r4, r3
900169ee:	dc03      	bgt.n	900169f8 <EwBidiReverseReorderIndex+0x3c>
900169f0:	f837 6b02 	ldrh.w	r6, [r7], #2
900169f4:	429e      	cmp	r6, r3
900169f6:	da2f      	bge.n	90016a58 <EwBidiReverseReorderIndex+0x9c>
900169f8:	4618      	mov	r0, r3
900169fa:	f50d 7d01 	add.w	sp, sp, #516	; 0x204
900169fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90016a00:	eb00 0445 	add.w	r4, r0, r5, lsl #1
90016a04:	eb00 0642 	add.w	r6, r0, r2, lsl #1
90016a08:	7864      	ldrb	r4, [r4, #1]
90016a0a:	7876      	ldrb	r6, [r6, #1]
90016a0c:	ebb1 0f54 	cmp.w	r1, r4, lsr #1
90016a10:	ea4f 0c54 	mov.w	ip, r4, lsr #1
90016a14:	ea4f 0656 	mov.w	r6, r6, lsr #1
90016a18:	da09      	bge.n	90016a2e <EwBidiReverseReorderIndex+0x72>
90016a1a:	42b1      	cmp	r1, r6
90016a1c:	da0e      	bge.n	90016a3c <EwBidiReverseReorderIndex+0x80>
90016a1e:	1c4c      	adds	r4, r1, #1
90016a20:	f82d 5011 	strh.w	r5, [sp, r1, lsl #1]
90016a24:	f827 2011 	strh.w	r2, [r7, r1, lsl #1]
90016a28:	45a4      	cmp	ip, r4
90016a2a:	dc02      	bgt.n	90016a32 <EwBidiReverseReorderIndex+0x76>
90016a2c:	4621      	mov	r1, r4
90016a2e:	3501      	adds	r5, #1
90016a30:	460c      	mov	r4, r1
90016a32:	42a6      	cmp	r6, r4
90016a34:	dc00      	bgt.n	90016a38 <EwBidiReverseReorderIndex+0x7c>
90016a36:	3a01      	subs	r2, #1
90016a38:	4621      	mov	r1, r4
90016a3a:	e7ce      	b.n	900169da <EwBidiReverseReorderIndex+0x1e>
90016a3c:	460c      	mov	r4, r1
90016a3e:	e7fa      	b.n	90016a36 <EwBidiReverseReorderIndex+0x7a>
90016a40:	3a01      	subs	r2, #1
90016a42:	4294      	cmp	r4, r2
90016a44:	da06      	bge.n	90016a54 <EwBidiReverseReorderIndex+0x98>
90016a46:	eb00 0e42 	add.w	lr, r0, r2, lsl #1
90016a4a:	f81e ec01 	ldrb.w	lr, [lr, #-1]
90016a4e:	ebb5 0f5e 	cmp.w	r5, lr, lsr #1
90016a52:	dbf5      	blt.n	90016a40 <EwBidiReverseReorderIndex+0x84>
90016a54:	461c      	mov	r4, r3
90016a56:	e009      	b.n	90016a6c <EwBidiReverseReorderIndex+0xb0>
90016a58:	461a      	mov	r2, r3
90016a5a:	e7f2      	b.n	90016a42 <EwBidiReverseReorderIndex+0x86>
90016a5c:	eb00 0e44 	add.w	lr, r0, r4, lsl #1
90016a60:	f89e e003 	ldrb.w	lr, [lr, #3]
90016a64:	ebb5 0f5e 	cmp.w	r5, lr, lsr #1
90016a68:	da02      	bge.n	90016a70 <EwBidiReverseReorderIndex+0xb4>
90016a6a:	3401      	adds	r4, #1
90016a6c:	42a6      	cmp	r6, r4
90016a6e:	dcf5      	bgt.n	90016a5c <EwBidiReverseReorderIndex+0xa0>
90016a70:	1a9b      	subs	r3, r3, r2
90016a72:	3501      	adds	r5, #1
90016a74:	1ae3      	subs	r3, r4, r3
90016a76:	e7b5      	b.n	900169e4 <EwBidiReverseReorderIndex+0x28>

90016a78 <EwBidiGetTypesAndLevels>:
90016a78:	b510      	push	{r4, lr}
90016a7a:	b128      	cbz	r0, 90016a88 <EwBidiGetTypesAndLevels+0x10>
90016a7c:	e9d0 0301 	ldrd	r0, r3, [r0, #4]
90016a80:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90016a84:	4283      	cmp	r3, r0
90016a86:	d300      	bcc.n	90016a8a <EwBidiGetTypesAndLevels+0x12>
90016a88:	bd10      	pop	{r4, pc}
90016a8a:	781c      	ldrb	r4, [r3, #0]
90016a8c:	3302      	adds	r3, #2
90016a8e:	f3c4 0404 	ubfx	r4, r4, #0, #5
90016a92:	f801 4b01 	strb.w	r4, [r1], #1
90016a96:	f813 4c01 	ldrb.w	r4, [r3, #-1]
90016a9a:	f3c4 0446 	ubfx	r4, r4, #1, #7
90016a9e:	f802 4b01 	strb.w	r4, [r2], #1
90016aa2:	e7ef      	b.n	90016a84 <EwBidiGetTypesAndLevels+0xc>
90016aa4:	4b07      	ldr	r3, [pc, #28]	; (90016ac4 <EwBidiGetTypesAndLevels+0x4c>)
90016aa6:	2100      	movs	r1, #0
90016aa8:	681a      	ldr	r2, [r3, #0]
90016aaa:	6001      	str	r1, [r0, #0]
90016aac:	6042      	str	r2, [r0, #4]
90016aae:	b132      	cbz	r2, 90016abe <EwBidiGetTypesAndLevels+0x46>
90016ab0:	6010      	str	r0, [r2, #0]
90016ab2:	6899      	ldr	r1, [r3, #8]
90016ab4:	6a82      	ldr	r2, [r0, #40]	; 0x28
90016ab6:	6018      	str	r0, [r3, #0]
90016ab8:	440a      	add	r2, r1
90016aba:	609a      	str	r2, [r3, #8]
90016abc:	4770      	bx	lr
90016abe:	6058      	str	r0, [r3, #4]
90016ac0:	e7f7      	b.n	90016ab2 <EwBidiGetTypesAndLevels+0x3a>
90016ac2:	bf00      	nop
90016ac4:	200001bc 	.word	0x200001bc
90016ac8:	e9d0 1200 	ldrd	r1, r2, [r0]
90016acc:	4b08      	ldr	r3, [pc, #32]	; (90016af0 <EwBidiGetTypesAndLevels+0x78>)
90016ace:	b15a      	cbz	r2, 90016ae8 <EwBidiGetTypesAndLevels+0x70>
90016ad0:	6011      	str	r1, [r2, #0]
90016ad2:	6801      	ldr	r1, [r0, #0]
90016ad4:	b151      	cbz	r1, 90016aec <EwBidiGetTypesAndLevels+0x74>
90016ad6:	604a      	str	r2, [r1, #4]
90016ad8:	2200      	movs	r2, #0
90016ada:	6a81      	ldr	r1, [r0, #40]	; 0x28
90016adc:	e9c0 2200 	strd	r2, r2, [r0]
90016ae0:	689a      	ldr	r2, [r3, #8]
90016ae2:	1a52      	subs	r2, r2, r1
90016ae4:	609a      	str	r2, [r3, #8]
90016ae6:	4770      	bx	lr
90016ae8:	6059      	str	r1, [r3, #4]
90016aea:	e7f2      	b.n	90016ad2 <EwBidiGetTypesAndLevels+0x5a>
90016aec:	601a      	str	r2, [r3, #0]
90016aee:	e7f3      	b.n	90016ad8 <EwBidiGetTypesAndLevels+0x60>
90016af0:	200001bc 	.word	0x200001bc
90016af4:	4a0f      	ldr	r2, [pc, #60]	; (90016b34 <EwBidiGetTypesAndLevels+0xbc>)
90016af6:	6981      	ldr	r1, [r0, #24]
90016af8:	68d3      	ldr	r3, [r2, #12]
90016afa:	b570      	push	{r4, r5, r6, lr}
90016afc:	3b01      	subs	r3, #1
90016afe:	6994      	ldr	r4, [r2, #24]
90016b00:	2600      	movs	r6, #0
90016b02:	400b      	ands	r3, r1
90016b04:	6044      	str	r4, [r0, #4]
90016b06:	e9d2 1504 	ldrd	r1, r5, [r2, #16]
90016b0a:	6006      	str	r6, [r0, #0]
90016b0c:	b16c      	cbz	r4, 90016b2a <EwBidiGetTypesAndLevels+0xb2>
90016b0e:	6020      	str	r0, [r4, #0]
90016b10:	6190      	str	r0, [r2, #24]
90016b12:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
90016b16:	6082      	str	r2, [r0, #8]
90016b18:	2200      	movs	r2, #0
90016b1a:	60c2      	str	r2, [r0, #12]
90016b1c:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
90016b20:	b12a      	cbz	r2, 90016b2e <EwBidiGetTypesAndLevels+0xb6>
90016b22:	60d0      	str	r0, [r2, #12]
90016b24:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
90016b28:	bd70      	pop	{r4, r5, r6, pc}
90016b2a:	61d0      	str	r0, [r2, #28]
90016b2c:	e7f0      	b.n	90016b10 <EwBidiGetTypesAndLevels+0x98>
90016b2e:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
90016b32:	e7f7      	b.n	90016b24 <EwBidiGetTypesAndLevels+0xac>
90016b34:	200001bc 	.word	0x200001bc
90016b38:	4a13      	ldr	r2, [pc, #76]	; (90016b88 <EwBidiGetTypesAndLevels+0x110>)
90016b3a:	6981      	ldr	r1, [r0, #24]
90016b3c:	b570      	push	{r4, r5, r6, lr}
90016b3e:	e9d2 3503 	ldrd	r3, r5, [r2, #12]
90016b42:	6956      	ldr	r6, [r2, #20]
90016b44:	3b01      	subs	r3, #1
90016b46:	400b      	ands	r3, r1
90016b48:	e9d0 4100 	ldrd	r4, r1, [r0]
90016b4c:	b189      	cbz	r1, 90016b72 <EwBidiGetTypesAndLevels+0xfa>
90016b4e:	600c      	str	r4, [r1, #0]
90016b50:	6804      	ldr	r4, [r0, #0]
90016b52:	b184      	cbz	r4, 90016b76 <EwBidiGetTypesAndLevels+0xfe>
90016b54:	6061      	str	r1, [r4, #4]
90016b56:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
90016b5a:	b171      	cbz	r1, 90016b7a <EwBidiGetTypesAndLevels+0x102>
90016b5c:	60ca      	str	r2, [r1, #12]
90016b5e:	e9d0 2102 	ldrd	r2, r1, [r0, #8]
90016b62:	b169      	cbz	r1, 90016b80 <EwBidiGetTypesAndLevels+0x108>
90016b64:	608a      	str	r2, [r1, #8]
90016b66:	2300      	movs	r3, #0
90016b68:	e9c0 3300 	strd	r3, r3, [r0]
90016b6c:	e9c0 3302 	strd	r3, r3, [r0, #8]
90016b70:	bd70      	pop	{r4, r5, r6, pc}
90016b72:	61d4      	str	r4, [r2, #28]
90016b74:	e7ec      	b.n	90016b50 <EwBidiGetTypesAndLevels+0xd8>
90016b76:	6191      	str	r1, [r2, #24]
90016b78:	e7ed      	b.n	90016b56 <EwBidiGetTypesAndLevels+0xde>
90016b7a:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
90016b7e:	e7ee      	b.n	90016b5e <EwBidiGetTypesAndLevels+0xe6>
90016b80:	f845 2023 	str.w	r2, [r5, r3, lsl #2]
90016b84:	e7ef      	b.n	90016b66 <EwBidiGetTypesAndLevels+0xee>
90016b86:	bf00      	nop
90016b88:	200001bc 	.word	0x200001bc
90016b8c:	680b      	ldr	r3, [r1, #0]
90016b8e:	2200      	movs	r2, #0
90016b90:	6043      	str	r3, [r0, #4]
90016b92:	6082      	str	r2, [r0, #8]
90016b94:	b11b      	cbz	r3, 90016b9e <EwBidiGetTypesAndLevels+0x126>
90016b96:	6098      	str	r0, [r3, #8]
90016b98:	6008      	str	r0, [r1, #0]
90016b9a:	6001      	str	r1, [r0, #0]
90016b9c:	4770      	bx	lr
90016b9e:	6048      	str	r0, [r1, #4]
90016ba0:	e7fa      	b.n	90016b98 <EwBidiGetTypesAndLevels+0x120>
90016ba2:	6802      	ldr	r2, [r0, #0]
90016ba4:	b152      	cbz	r2, 90016bbc <EwBidiGetTypesAndLevels+0x144>
90016ba6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90016baa:	b143      	cbz	r3, 90016bbe <EwBidiGetTypesAndLevels+0x146>
90016bac:	6099      	str	r1, [r3, #8]
90016bae:	6881      	ldr	r1, [r0, #8]
90016bb0:	b139      	cbz	r1, 90016bc2 <EwBidiGetTypesAndLevels+0x14a>
90016bb2:	604b      	str	r3, [r1, #4]
90016bb4:	2300      	movs	r3, #0
90016bb6:	e9c0 3301 	strd	r3, r3, [r0, #4]
90016bba:	6003      	str	r3, [r0, #0]
90016bbc:	4770      	bx	lr
90016bbe:	6051      	str	r1, [r2, #4]
90016bc0:	e7f5      	b.n	90016bae <EwBidiGetTypesAndLevels+0x136>
90016bc2:	6013      	str	r3, [r2, #0]
90016bc4:	e7f6      	b.n	90016bb4 <EwBidiGetTypesAndLevels+0x13c>
90016bc6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90016bca:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 90016c90 <EwBidiGetTypesAndLevels+0x218>
90016bce:	4605      	mov	r5, r0
90016bd0:	f9b0 4028 	ldrsh.w	r4, [r0, #40]	; 0x28
90016bd4:	f8d9 2020 	ldr.w	r2, [r9, #32]
90016bd8:	f9b0 801e 	ldrsh.w	r8, [r0, #30]
90016bdc:	f9b0 601c 	ldrsh.w	r6, [r0, #28]
90016be0:	4490      	add	r8, r2
90016be2:	f9b0 3026 	ldrsh.w	r3, [r0, #38]	; 0x26
90016be6:	4416      	add	r6, r2
90016be8:	f108 38ff 	add.w	r8, r8, #4294967295
90016bec:	3e01      	subs	r6, #1
90016bee:	fb94 f4f2 	sdiv	r4, r4, r2
90016bf2:	fb93 f7f2 	sdiv	r7, r3, r2
90016bf6:	fb98 f8f2 	sdiv	r8, r8, r2
90016bfa:	fb96 f6f2 	sdiv	r6, r6, r2
90016bfe:	f7ff ff9b 	bl	90016b38 <EwBidiGetTypesAndLevels+0xc0>
90016c02:	4262      	negs	r2, r4
90016c04:	f004 031f 	and.w	r3, r4, #31
90016c08:	f002 021f 	and.w	r2, r2, #31
90016c0c:	bf58      	it	pl
90016c0e:	4253      	negpl	r3, r2
90016c10:	4a1d      	ldr	r2, [pc, #116]	; (90016c88 <EwBidiGetTypesAndLevels+0x210>)
90016c12:	2c00      	cmp	r4, #0
90016c14:	f852 2028 	ldr.w	r2, [r2, r8, lsl #2]
90016c18:	bfb8      	it	lt
90016c1a:	341f      	addlt	r4, #31
90016c1c:	409a      	lsls	r2, r3
90016c1e:	1164      	asrs	r4, r4, #5
90016c20:	43d2      	mvns	r2, r2
90016c22:	e9d9 ce09 	ldrd	ip, lr, [r9, #36]	; 0x24
90016c26:	fb0e f307 	mul.w	r3, lr, r7
90016c2a:	2e00      	cmp	r6, #0
90016c2c:	dc1b      	bgt.n	90016c66 <EwBidiGetTypesAndLevels+0x1ee>
90016c2e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
90016c30:	4c16      	ldr	r4, [pc, #88]	; (90016c8c <EwBidiGetTypesAndLevels+0x214>)
90016c32:	b148      	cbz	r0, 90016c48 <EwBidiGetTypesAndLevels+0x1d0>
90016c34:	f010 f840 	bl	90026cb8 <EwFree>
90016c38:	8bab      	ldrh	r3, [r5, #28]
90016c3a:	8be9      	ldrh	r1, [r5, #30]
90016c3c:	2201      	movs	r2, #1
90016c3e:	fb13 2201 	smlabb	r2, r3, r1, r2
90016c42:	6823      	ldr	r3, [r4, #0]
90016c44:	1a9b      	subs	r3, r3, r2
90016c46:	6023      	str	r3, [r4, #0]
90016c48:	2300      	movs	r3, #0
90016c4a:	4628      	mov	r0, r5
90016c4c:	62eb      	str	r3, [r5, #44]	; 0x2c
90016c4e:	f010 f833 	bl	90026cb8 <EwFree>
90016c52:	6823      	ldr	r3, [r4, #0]
90016c54:	3b30      	subs	r3, #48	; 0x30
90016c56:	6023      	str	r3, [r4, #0]
90016c58:	f8d9 302c 	ldr.w	r3, [r9, #44]	; 0x2c
90016c5c:	3b01      	subs	r3, #1
90016c5e:	f8c9 302c 	str.w	r3, [r9, #44]	; 0x2c
90016c62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90016c66:	2b00      	cmp	r3, #0
90016c68:	4619      	mov	r1, r3
90016c6a:	f106 36ff 	add.w	r6, r6, #4294967295
90016c6e:	bfb8      	it	lt
90016c70:	f103 011f 	addlt.w	r1, r3, #31
90016c74:	4473      	add	r3, lr
90016c76:	eb04 1161 	add.w	r1, r4, r1, asr #5
90016c7a:	f85c 0021 	ldr.w	r0, [ip, r1, lsl #2]
90016c7e:	4010      	ands	r0, r2
90016c80:	f84c 0021 	str.w	r0, [ip, r1, lsl #2]
90016c84:	e7d1      	b.n	90016c2a <EwBidiGetTypesAndLevels+0x1b2>
90016c86:	bf00      	nop
90016c88:	90032014 	.word	0x90032014
90016c8c:	200002bc 	.word	0x200002bc
90016c90:	200001bc 	.word	0x200001bc
90016c94:	b508      	push	{r3, lr}
90016c96:	f7ff ff84 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90016c9a:	f010 f80d 	bl	90026cb8 <EwFree>
90016c9e:	4a04      	ldr	r2, [pc, #16]	; (90016cb0 <EwBidiGetTypesAndLevels+0x238>)
90016ca0:	4904      	ldr	r1, [pc, #16]	; (90016cb4 <EwBidiGetTypesAndLevels+0x23c>)
90016ca2:	6813      	ldr	r3, [r2, #0]
90016ca4:	6b09      	ldr	r1, [r1, #48]	; 0x30
90016ca6:	3b28      	subs	r3, #40	; 0x28
90016ca8:	1a5b      	subs	r3, r3, r1
90016caa:	6013      	str	r3, [r2, #0]
90016cac:	bd08      	pop	{r3, pc}
90016cae:	bf00      	nop
90016cb0:	200002bc 	.word	0x200002bc
90016cb4:	200001bc 	.word	0x200001bc
90016cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016cba:	4c15      	ldr	r4, [pc, #84]	; (90016d10 <EwBidiGetTypesAndLevels+0x298>)
90016cbc:	f104 0744 	add.w	r7, r4, #68	; 0x44
90016cc0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90016cc4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90016cc6:	6c23      	ldr	r3, [r4, #64]	; 0x40
90016cc8:	b140      	cbz	r0, 90016cdc <EwBidiGetTypesAndLevels+0x264>
90016cca:	b943      	cbnz	r3, 90016cde <EwBidiGetTypesAndLevels+0x266>
90016ccc:	f7ff ff69 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90016cd0:	4910      	ldr	r1, [pc, #64]	; (90016d14 <EwBidiGetTypesAndLevels+0x29c>)
90016cd2:	f7ff ff5b 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
90016cd6:	f003 fd36 	bl	9001a746 <EwExecuteTasks>
90016cda:	e7f3      	b.n	90016cc4 <EwBidiGetTypesAndLevels+0x24c>
90016cdc:	b133      	cbz	r3, 90016cec <EwBidiGetTypesAndLevels+0x274>
90016cde:	4618      	mov	r0, r3
90016ce0:	f7ff ff5f 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90016ce4:	4639      	mov	r1, r7
90016ce6:	f7ff ff51 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
90016cea:	e7eb      	b.n	90016cc4 <EwBidiGetTypesAndLevels+0x24c>
90016cec:	6ca5      	ldr	r5, [r4, #72]	; 0x48
90016cee:	b175      	cbz	r5, 90016d0e <EwBidiGetTypesAndLevels+0x296>
90016cf0:	4628      	mov	r0, r5
90016cf2:	f005 f83f 	bl	9001bd74 <EwCompleteTasks>
90016cf6:	68eb      	ldr	r3, [r5, #12]
90016cf8:	4628      	mov	r0, r5
90016cfa:	691a      	ldr	r2, [r3, #16]
90016cfc:	3a01      	subs	r2, #1
90016cfe:	611a      	str	r2, [r3, #16]
90016d00:	68da      	ldr	r2, [r3, #12]
90016d02:	3a01      	subs	r2, #1
90016d04:	60da      	str	r2, [r3, #12]
90016d06:	f7ff ff4c 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90016d0a:	4631      	mov	r1, r6
90016d0c:	e7eb      	b.n	90016ce6 <EwBidiGetTypesAndLevels+0x26e>
90016d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016d10:	200001bc 	.word	0x200001bc
90016d14:	200001f8 	.word	0x200001f8
90016d18:	4a18      	ldr	r2, [pc, #96]	; (90016d7c <EwBidiGetTypesAndLevels+0x304>)
90016d1a:	6813      	ldr	r3, [r2, #0]
90016d1c:	3b3c      	subs	r3, #60	; 0x3c
90016d1e:	b510      	push	{r4, lr}
90016d20:	4604      	mov	r4, r0
90016d22:	6013      	str	r3, [r2, #0]
90016d24:	f7ff fed0 	bl	90016ac8 <EwBidiGetTypesAndLevels+0x50>
90016d28:	6b40      	ldr	r0, [r0, #52]	; 0x34
90016d2a:	b138      	cbz	r0, 90016d3c <EwBidiGetTypesAndLevels+0x2c4>
90016d2c:	f7ff ff39 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90016d30:	4913      	ldr	r1, [pc, #76]	; (90016d80 <EwBidiGetTypesAndLevels+0x308>)
90016d32:	6b60      	ldr	r0, [r4, #52]	; 0x34
90016d34:	f7ff ff2a 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
90016d38:	2300      	movs	r3, #0
90016d3a:	6363      	str	r3, [r4, #52]	; 0x34
90016d3c:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90016d40:	b913      	cbnz	r3, 90016d48 <EwBidiGetTypesAndLevels+0x2d0>
90016d42:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90016d44:	f00f fcbc 	bl	900266c0 <GfxDestroySurface>
90016d48:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90016d4c:	2b02      	cmp	r3, #2
90016d4e:	d102      	bne.n	90016d56 <EwBidiGetTypesAndLevels+0x2de>
90016d50:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90016d52:	f00f fcb5 	bl	900266c0 <GfxDestroySurface>
90016d56:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90016d5a:	2b01      	cmp	r3, #1
90016d5c:	d102      	bne.n	90016d64 <EwBidiGetTypesAndLevels+0x2ec>
90016d5e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90016d60:	f00f fcae 	bl	900266c0 <GfxDestroySurface>
90016d64:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90016d68:	2b03      	cmp	r3, #3
90016d6a:	d102      	bne.n	90016d72 <EwBidiGetTypesAndLevels+0x2fa>
90016d6c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90016d6e:	f00f fca7 	bl	900266c0 <GfxDestroySurface>
90016d72:	4620      	mov	r0, r4
90016d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016d78:	f00f bf9e 	b.w	90026cb8 <EwFree>
90016d7c:	200002bc 	.word	0x200002bc
90016d80:	20000208 	.word	0x20000208
90016d84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016d88:	4f35      	ldr	r7, [pc, #212]	; (90016e60 <EwBidiGetTypesAndLevels+0x3e8>)
90016d8a:	4605      	mov	r5, r0
90016d8c:	460e      	mov	r6, r1
90016d8e:	eb00 0901 	add.w	r9, r0, r1
90016d92:	687c      	ldr	r4, [r7, #4]
90016d94:	f8d7 801c 	ldr.w	r8, [r7, #28]
90016d98:	6bbb      	ldr	r3, [r7, #56]	; 0x38
90016d9a:	b933      	cbnz	r3, 90016daa <EwBidiGetTypesAndLevels+0x332>
90016d9c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
90016d9e:	b923      	cbnz	r3, 90016daa <EwBidiGetTypesAndLevels+0x332>
90016da0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
90016da2:	b913      	cbnz	r3, 90016daa <EwBidiGetTypesAndLevels+0x332>
90016da4:	2e01      	cmp	r6, #1
90016da6:	d00a      	beq.n	90016dbe <EwBidiGetTypesAndLevels+0x346>
90016da8:	e011      	b.n	90016dce <EwBidiGetTypesAndLevels+0x356>
90016daa:	f7ff ff85 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90016dae:	e7f3      	b.n	90016d98 <EwBidiGetTypesAndLevels+0x320>
90016db0:	f8d8 a010 	ldr.w	sl, [r8, #16]
90016db4:	f1ba 0f00 	cmp.w	sl, #0
90016db8:	d005      	beq.n	90016dc6 <EwBidiGetTypesAndLevels+0x34e>
90016dba:	f8d8 8000 	ldr.w	r8, [r8]
90016dbe:	f1b8 0f00 	cmp.w	r8, #0
90016dc2:	d1f5      	bne.n	90016db0 <EwBidiGetTypesAndLevels+0x338>
90016dc4:	e003      	b.n	90016dce <EwBidiGetTypesAndLevels+0x356>
90016dc6:	4656      	mov	r6, sl
90016dc8:	4640      	mov	r0, r8
90016dca:	f7ff fefc 	bl	90016bc6 <EwBidiGetTypesAndLevels+0x14e>
90016dce:	2d01      	cmp	r5, #1
90016dd0:	d012      	beq.n	90016df8 <EwBidiGetTypesAndLevels+0x380>
90016dd2:	f04f 0800 	mov.w	r8, #0
90016dd6:	46c2      	mov	sl, r8
90016dd8:	2d01      	cmp	r5, #1
90016dda:	d102      	bne.n	90016de2 <EwBidiGetTypesAndLevels+0x36a>
90016ddc:	f1b8 0f03 	cmp.w	r8, #3
90016de0:	d112      	bne.n	90016e08 <EwBidiGetTypesAndLevels+0x390>
90016de2:	eba9 0005 	sub.w	r0, r9, r5
90016de6:	1b80      	subs	r0, r0, r6
90016de8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016dec:	f8d4 800c 	ldr.w	r8, [r4, #12]
90016df0:	f1b8 0f00 	cmp.w	r8, #0
90016df4:	d003      	beq.n	90016dfe <EwBidiGetTypesAndLevels+0x386>
90016df6:	6824      	ldr	r4, [r4, #0]
90016df8:	2c00      	cmp	r4, #0
90016dfa:	d1f7      	bne.n	90016dec <EwBidiGetTypesAndLevels+0x374>
90016dfc:	e7e9      	b.n	90016dd2 <EwBidiGetTypesAndLevels+0x35a>
90016dfe:	4620      	mov	r0, r4
90016e00:	4645      	mov	r5, r8
90016e02:	f7ff ff89 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
90016e06:	e7e4      	b.n	90016dd2 <EwBidiGetTypesAndLevels+0x35a>
90016e08:	687c      	ldr	r4, [r7, #4]
90016e0a:	b32c      	cbz	r4, 90016e58 <EwBidiGetTypesAndLevels+0x3e0>
90016e0c:	6963      	ldr	r3, [r4, #20]
90016e0e:	f8d4 b000 	ldr.w	fp, [r4]
90016e12:	b90b      	cbnz	r3, 90016e18 <EwBidiGetTypesAndLevels+0x3a0>
90016e14:	465c      	mov	r4, fp
90016e16:	e7f8      	b.n	90016e0a <EwBidiGetTypesAndLevels+0x392>
90016e18:	69a3      	ldr	r3, [r4, #24]
90016e1a:	b913      	cbnz	r3, 90016e22 <EwBidiGetTypesAndLevels+0x3aa>
90016e1c:	69e3      	ldr	r3, [r4, #28]
90016e1e:	2b00      	cmp	r3, #0
90016e20:	d0f8      	beq.n	90016e14 <EwBidiGetTypesAndLevels+0x39c>
90016e22:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016e24:	2b00      	cmp	r3, #0
90016e26:	ddf5      	ble.n	90016e14 <EwBidiGetTypesAndLevels+0x39c>
90016e28:	68e3      	ldr	r3, [r4, #12]
90016e2a:	2b01      	cmp	r3, #1
90016e2c:	d1f2      	bne.n	90016e14 <EwBidiGetTypesAndLevels+0x39c>
90016e2e:	68a3      	ldr	r3, [r4, #8]
90016e30:	2b01      	cmp	r3, #1
90016e32:	d1ef      	bne.n	90016e14 <EwBidiGetTypesAndLevels+0x39c>
90016e34:	4641      	mov	r1, r8
90016e36:	4620      	mov	r0, r4
90016e38:	f7fb fe22 	bl	90012a80 <EwCanDiscardSurface>
90016e3c:	2800      	cmp	r0, #0
90016e3e:	d0e9      	beq.n	90016e14 <EwBidiGetTypesAndLevels+0x39c>
90016e40:	68e3      	ldr	r3, [r4, #12]
90016e42:	2500      	movs	r5, #0
90016e44:	4620      	mov	r0, r4
90016e46:	f8c4 a014 	str.w	sl, [r4, #20]
90016e4a:	3b01      	subs	r3, #1
90016e4c:	60e3      	str	r3, [r4, #12]
90016e4e:	68a3      	ldr	r3, [r4, #8]
90016e50:	3b01      	subs	r3, #1
90016e52:	60a3      	str	r3, [r4, #8]
90016e54:	f7ff ff60 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
90016e58:	f108 0801 	add.w	r8, r8, #1
90016e5c:	e7bc      	b.n	90016dd8 <EwBidiGetTypesAndLevels+0x360>
90016e5e:	bf00      	nop
90016e60:	200001bc 	.word	0x200001bc
90016e64:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016e68:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 90016f20 <EwBidiGetTypesAndLevels+0x4a8>
90016e6c:	4606      	mov	r6, r0
90016e6e:	2700      	movs	r7, #0
90016e70:	4c2a      	ldr	r4, [pc, #168]	; (90016f1c <EwBidiGetTypesAndLevels+0x4a4>)
90016e72:	f8d8 0004 	ldr.w	r0, [r8, #4]
90016e76:	b926      	cbnz	r6, 90016e82 <EwBidiGetTypesAndLevels+0x40a>
90016e78:	f8d8 2008 	ldr.w	r2, [r8, #8]
90016e7c:	6823      	ldr	r3, [r4, #0]
90016e7e:	429a      	cmp	r2, r3
90016e80:	dd4a      	ble.n	90016f18 <EwBidiGetTypesAndLevels+0x4a0>
90016e82:	b928      	cbnz	r0, 90016e90 <EwBidiGetTypesAndLevels+0x418>
90016e84:	4605      	mov	r5, r0
90016e86:	f8df a094 	ldr.w	sl, [pc, #148]	; 90016f1c <EwBidiGetTypesAndLevels+0x4a4>
90016e8a:	f04f 0900 	mov.w	r9, #0
90016e8e:	e011      	b.n	90016eb4 <EwBidiGetTypesAndLevels+0x43c>
90016e90:	68c3      	ldr	r3, [r0, #12]
90016e92:	6805      	ldr	r5, [r0, #0]
90016e94:	b913      	cbnz	r3, 90016e9c <EwBidiGetTypesAndLevels+0x424>
90016e96:	3701      	adds	r7, #1
90016e98:	f7ff ff3e 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
90016e9c:	4628      	mov	r0, r5
90016e9e:	e7ea      	b.n	90016e76 <EwBidiGetTypesAndLevels+0x3fe>
90016ea0:	f8d8 4004 	ldr.w	r4, [r8, #4]
90016ea4:	b996      	cbnz	r6, 90016ecc <EwBidiGetTypesAndLevels+0x454>
90016ea6:	f8d8 2008 	ldr.w	r2, [r8, #8]
90016eaa:	f8da 3000 	ldr.w	r3, [sl]
90016eae:	429a      	cmp	r2, r3
90016eb0:	dc0c      	bgt.n	90016ecc <EwBidiGetTypesAndLevels+0x454>
90016eb2:	3501      	adds	r5, #1
90016eb4:	b92e      	cbnz	r6, 90016ec2 <EwBidiGetTypesAndLevels+0x44a>
90016eb6:	f8d8 2008 	ldr.w	r2, [r8, #8]
90016eba:	f8da 3000 	ldr.w	r3, [sl]
90016ebe:	429a      	cmp	r2, r3
90016ec0:	dd01      	ble.n	90016ec6 <EwBidiGetTypesAndLevels+0x44e>
90016ec2:	2d03      	cmp	r5, #3
90016ec4:	d1ec      	bne.n	90016ea0 <EwBidiGetTypesAndLevels+0x428>
90016ec6:	4638      	mov	r0, r7
90016ec8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016ecc:	2c00      	cmp	r4, #0
90016ece:	d0f0      	beq.n	90016eb2 <EwBidiGetTypesAndLevels+0x43a>
90016ed0:	6963      	ldr	r3, [r4, #20]
90016ed2:	f8d4 b000 	ldr.w	fp, [r4]
90016ed6:	b1eb      	cbz	r3, 90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016ed8:	69a3      	ldr	r3, [r4, #24]
90016eda:	b90b      	cbnz	r3, 90016ee0 <EwBidiGetTypesAndLevels+0x468>
90016edc:	69e3      	ldr	r3, [r4, #28]
90016ede:	b1cb      	cbz	r3, 90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016ee0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016ee2:	2b00      	cmp	r3, #0
90016ee4:	dd16      	ble.n	90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016ee6:	68e3      	ldr	r3, [r4, #12]
90016ee8:	2b01      	cmp	r3, #1
90016eea:	d113      	bne.n	90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016eec:	68a3      	ldr	r3, [r4, #8]
90016eee:	2b01      	cmp	r3, #1
90016ef0:	d110      	bne.n	90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016ef2:	4629      	mov	r1, r5
90016ef4:	4620      	mov	r0, r4
90016ef6:	f7fb fdc3 	bl	90012a80 <EwCanDiscardSurface>
90016efa:	b158      	cbz	r0, 90016f14 <EwBidiGetTypesAndLevels+0x49c>
90016efc:	68e3      	ldr	r3, [r4, #12]
90016efe:	4620      	mov	r0, r4
90016f00:	f8c4 9014 	str.w	r9, [r4, #20]
90016f04:	3701      	adds	r7, #1
90016f06:	3b01      	subs	r3, #1
90016f08:	60e3      	str	r3, [r4, #12]
90016f0a:	68a3      	ldr	r3, [r4, #8]
90016f0c:	3b01      	subs	r3, #1
90016f0e:	60a3      	str	r3, [r4, #8]
90016f10:	f7ff ff02 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
90016f14:	465c      	mov	r4, fp
90016f16:	e7c5      	b.n	90016ea4 <EwBidiGetTypesAndLevels+0x42c>
90016f18:	4635      	mov	r5, r6
90016f1a:	e7b4      	b.n	90016e86 <EwBidiGetTypesAndLevels+0x40e>
90016f1c:	20000014 	.word	0x20000014
90016f20:	200001bc 	.word	0x200001bc

90016f24 <EwDoneGfxCore>:
90016f24:	b510      	push	{r4, lr}
90016f26:	4c29      	ldr	r4, [pc, #164]	; (90016fcc <EwDoneGfxCore+0xa8>)
90016f28:	6b63      	ldr	r3, [r4, #52]	; 0x34
90016f2a:	2b00      	cmp	r3, #0
90016f2c:	d136      	bne.n	90016f9c <EwDoneGfxCore+0x78>
90016f2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90016f30:	2b00      	cmp	r3, #0
90016f32:	d133      	bne.n	90016f9c <EwDoneGfxCore+0x78>
90016f34:	6c63      	ldr	r3, [r4, #68]	; 0x44
90016f36:	2b00      	cmp	r3, #0
90016f38:	d130      	bne.n	90016f9c <EwDoneGfxCore+0x78>
90016f3a:	6d60      	ldr	r0, [r4, #84]	; 0x54
90016f3c:	b108      	cbz	r0, 90016f42 <EwDoneGfxCore+0x1e>
90016f3e:	f7ff fdb1 	bl	90016aa4 <EwBidiGetTypesAndLevels+0x2c>
90016f42:	69a0      	ldr	r0, [r4, #24]
90016f44:	bb68      	cbnz	r0, 90016fa2 <EwDoneGfxCore+0x7e>
90016f46:	6820      	ldr	r0, [r4, #0]
90016f48:	bb70      	cbnz	r0, 90016fa8 <EwDoneGfxCore+0x84>
90016f4a:	6da0      	ldr	r0, [r4, #88]	; 0x58
90016f4c:	bb78      	cbnz	r0, 90016fae <EwDoneGfxCore+0x8a>
90016f4e:	6b60      	ldr	r0, [r4, #52]	; 0x34
90016f50:	bb80      	cbnz	r0, 90016fb4 <EwDoneGfxCore+0x90>
90016f52:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90016f54:	bb88      	cbnz	r0, 90016fba <EwDoneGfxCore+0x96>
90016f56:	6c60      	ldr	r0, [r4, #68]	; 0x44
90016f58:	bb90      	cbnz	r0, 90016fc0 <EwDoneGfxCore+0x9c>
90016f5a:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90016f5c:	bb98      	cbnz	r0, 90016fc6 <EwDoneGfxCore+0xa2>
90016f5e:	6a60      	ldr	r0, [r4, #36]	; 0x24
90016f60:	b108      	cbz	r0, 90016f66 <EwDoneGfxCore+0x42>
90016f62:	f00f fea9 	bl	90026cb8 <EwFree>
90016f66:	6920      	ldr	r0, [r4, #16]
90016f68:	b108      	cbz	r0, 90016f6e <EwDoneGfxCore+0x4a>
90016f6a:	f00f fea5 	bl	90026cb8 <EwFree>
90016f6e:	6960      	ldr	r0, [r4, #20]
90016f70:	b108      	cbz	r0, 90016f76 <EwDoneGfxCore+0x52>
90016f72:	f00f fea1 	bl	90026cb8 <EwFree>
90016f76:	2300      	movs	r3, #0
90016f78:	4915      	ldr	r1, [pc, #84]	; (90016fd0 <EwDoneGfxCore+0xac>)
90016f7a:	68e2      	ldr	r2, [r4, #12]
90016f7c:	6263      	str	r3, [r4, #36]	; 0x24
90016f7e:	6563      	str	r3, [r4, #84]	; 0x54
90016f80:	6e20      	ldr	r0, [r4, #96]	; 0x60
90016f82:	e9c4 3304 	strd	r3, r3, [r4, #16]
90016f86:	680b      	ldr	r3, [r1, #0]
90016f88:	eba3 02c2 	sub.w	r2, r3, r2, lsl #3
90016f8c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90016f8e:	4343      	muls	r3, r0
90016f90:	bf48      	it	mi
90016f92:	3307      	addmi	r3, #7
90016f94:	eba2 03e3 	sub.w	r3, r2, r3, asr #3
90016f98:	600b      	str	r3, [r1, #0]
90016f9a:	bd10      	pop	{r4, pc}
90016f9c:	f7ff fe8c 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90016fa0:	e7c2      	b.n	90016f28 <EwDoneGfxCore+0x4>
90016fa2:	f7ff fe10 	bl	90016bc6 <EwBidiGetTypesAndLevels+0x14e>
90016fa6:	e7cc      	b.n	90016f42 <EwDoneGfxCore+0x1e>
90016fa8:	f7ff feb6 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
90016fac:	e7cb      	b.n	90016f46 <EwDoneGfxCore+0x22>
90016fae:	f7ff fe71 	bl	90016c94 <EwBidiGetTypesAndLevels+0x21c>
90016fb2:	e7ca      	b.n	90016f4a <EwDoneGfxCore+0x26>
90016fb4:	f7ff fe6e 	bl	90016c94 <EwBidiGetTypesAndLevels+0x21c>
90016fb8:	e7c9      	b.n	90016f4e <EwDoneGfxCore+0x2a>
90016fba:	f7ff fe6b 	bl	90016c94 <EwBidiGetTypesAndLevels+0x21c>
90016fbe:	e7c8      	b.n	90016f52 <EwDoneGfxCore+0x2e>
90016fc0:	f7ff fe68 	bl	90016c94 <EwBidiGetTypesAndLevels+0x21c>
90016fc4:	e7c7      	b.n	90016f56 <EwDoneGfxCore+0x32>
90016fc6:	f7ff fe65 	bl	90016c94 <EwBidiGetTypesAndLevels+0x21c>
90016fca:	e7c6      	b.n	90016f5a <EwDoneGfxCore+0x36>
90016fcc:	200001bc 	.word	0x200001bc
90016fd0:	200002bc 	.word	0x200002bc

90016fd4 <EwCreateSurface>:
90016fd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90016fd8:	4699      	mov	r9, r3
90016fda:	1c43      	adds	r3, r0, #1
90016fdc:	4605      	mov	r5, r0
90016fde:	460f      	mov	r7, r1
90016fe0:	4690      	mov	r8, r2
90016fe2:	d026      	beq.n	90017032 <EwCreateSurface+0x5e>
90016fe4:	f7ff fe68 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90016fe8:	2000      	movs	r0, #0
90016fea:	f7ff ff3b 	bl	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
90016fee:	203c      	movs	r0, #60	; 0x3c
90016ff0:	f00f fe60 	bl	90026cb4 <EwAlloc>
90016ff4:	4604      	mov	r4, r0
90016ff6:	bba8      	cbnz	r0, 90017064 <EwCreateSurface+0x90>
90016ff8:	2101      	movs	r1, #1
90016ffa:	4608      	mov	r0, r1
90016ffc:	f7ff fec2 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
90017000:	2800      	cmp	r0, #0
90017002:	d1f4      	bne.n	90016fee <EwCreateSurface+0x1a>
90017004:	2025      	movs	r0, #37	; 0x25
90017006:	f007 f9d5 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001700a:	2800      	cmp	r0, #0
9001700c:	d1ef      	bne.n	90016fee <EwCreateSurface+0x1a>
9001700e:	2025      	movs	r0, #37	; 0x25
90017010:	f006 fa1e 	bl	9001d450 <EwError>
90017014:	e06e      	b.n	900170f4 <EwCreateSurface+0x120>
90017016:	2d02      	cmp	r5, #2
90017018:	d029      	beq.n	9001706e <EwCreateSurface+0x9a>
9001701a:	2d01      	cmp	r5, #1
9001701c:	d027      	beq.n	9001706e <EwCreateSurface+0x9a>
9001701e:	2d03      	cmp	r5, #3
90017020:	d025      	beq.n	9001706e <EwCreateSurface+0x9a>
90017022:	2100      	movs	r1, #0
90017024:	2001      	movs	r0, #1
90017026:	f7ff fead 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
9001702a:	b9f0      	cbnz	r0, 9001706a <EwCreateSurface+0x96>
9001702c:	4620      	mov	r0, r4
9001702e:	f00f fe43 	bl	90026cb8 <EwFree>
90017032:	2400      	movs	r4, #0
90017034:	e05e      	b.n	900170f4 <EwCreateSurface+0x120>
90017036:	2d02      	cmp	r5, #2
90017038:	d104      	bne.n	90017044 <EwCreateSurface+0x70>
9001703a:	4641      	mov	r1, r8
9001703c:	4638      	mov	r0, r7
9001703e:	f001 fbba 	bl	900187b6 <EwGetAlpha8SurfaceMemSize>
90017042:	e022      	b.n	9001708a <EwCreateSurface+0xb6>
90017044:	2d01      	cmp	r5, #1
90017046:	d104      	bne.n	90017052 <EwCreateSurface+0x7e>
90017048:	4641      	mov	r1, r8
9001704a:	4638      	mov	r0, r7
9001704c:	f001 fb83 	bl	90018756 <EwGetIndex8SurfaceMemSize>
90017050:	e01b      	b.n	9001708a <EwCreateSurface+0xb6>
90017052:	2d03      	cmp	r5, #3
90017054:	f04f 0000 	mov.w	r0, #0
90017058:	d117      	bne.n	9001708a <EwCreateSurface+0xb6>
9001705a:	4641      	mov	r1, r8
9001705c:	4638      	mov	r0, r7
9001705e:	f7ed fe44 	bl	90004cea <EwGetRGB565SurfaceMemSize>
90017062:	e012      	b.n	9001708a <EwCreateSurface+0xb6>
90017064:	213c      	movs	r1, #60	; 0x3c
90017066:	f00f fe4d 	bl	90026d04 <EwZero>
9001706a:	2d00      	cmp	r5, #0
9001706c:	d1d3      	bne.n	90017016 <EwCreateSurface+0x42>
9001706e:	4642      	mov	r2, r8
90017070:	4639      	mov	r1, r7
90017072:	4628      	mov	r0, r5
90017074:	f00f fa56 	bl	90026524 <GfxCreateSurface>
90017078:	4606      	mov	r6, r0
9001707a:	2800      	cmp	r0, #0
9001707c:	d0d1      	beq.n	90017022 <EwCreateSurface+0x4e>
9001707e:	2d00      	cmp	r5, #0
90017080:	d1d9      	bne.n	90017036 <EwCreateSurface+0x62>
90017082:	4641      	mov	r1, r8
90017084:	4638      	mov	r0, r7
90017086:	f7ed fd32 	bl	90004aee <EwGetNativeSurfaceMemSize>
9001708a:	9b08      	ldr	r3, [sp, #32]
9001708c:	62a0      	str	r0, [r4, #40]	; 0x28
9001708e:	4620      	mov	r0, r4
90017090:	61a3      	str	r3, [r4, #24]
90017092:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017094:	8425      	strh	r5, [r4, #32]
90017096:	61e3      	str	r3, [r4, #28]
90017098:	2301      	movs	r3, #1
9001709a:	8467      	strh	r7, [r4, #34]	; 0x22
9001709c:	62e3      	str	r3, [r4, #44]	; 0x2c
9001709e:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
900170a2:	63a6      	str	r6, [r4, #56]	; 0x38
900170a4:	f7ff fcfe 	bl	90016aa4 <EwBidiGetTypesAndLevels+0x2c>
900170a8:	2000      	movs	r0, #0
900170aa:	f8c4 9014 	str.w	r9, [r4, #20]
900170ae:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
900170b2:	3202      	adds	r2, #2
900170b4:	3302      	adds	r3, #2
900170b6:	60a2      	str	r2, [r4, #8]
900170b8:	60e3      	str	r3, [r4, #12]
900170ba:	f7ff fed3 	bl	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
900170be:	68e3      	ldr	r3, [r4, #12]
900170c0:	490e      	ldr	r1, [pc, #56]	; (900170fc <EwCreateSurface+0x128>)
900170c2:	3b01      	subs	r3, #1
900170c4:	60e3      	str	r3, [r4, #12]
900170c6:	68a3      	ldr	r3, [r4, #8]
900170c8:	3b01      	subs	r3, #1
900170ca:	60a3      	str	r3, [r4, #8]
900170cc:	680b      	ldr	r3, [r1, #0]
900170ce:	f103 023c 	add.w	r2, r3, #60	; 0x3c
900170d2:	4b0b      	ldr	r3, [pc, #44]	; (90017100 <EwCreateSurface+0x12c>)
900170d4:	600a      	str	r2, [r1, #0]
900170d6:	6819      	ldr	r1, [r3, #0]
900170d8:	428a      	cmp	r2, r1
900170da:	490a      	ldr	r1, [pc, #40]	; (90017104 <EwCreateSurface+0x130>)
900170dc:	bfc8      	it	gt
900170de:	601a      	strgt	r2, [r3, #0]
900170e0:	4b09      	ldr	r3, [pc, #36]	; (90017108 <EwCreateSurface+0x134>)
900170e2:	6809      	ldr	r1, [r1, #0]
900170e4:	681b      	ldr	r3, [r3, #0]
900170e6:	440b      	add	r3, r1
900170e8:	4413      	add	r3, r2
900170ea:	4a08      	ldr	r2, [pc, #32]	; (9001710c <EwCreateSurface+0x138>)
900170ec:	6811      	ldr	r1, [r2, #0]
900170ee:	428b      	cmp	r3, r1
900170f0:	dd00      	ble.n	900170f4 <EwCreateSurface+0x120>
900170f2:	6013      	str	r3, [r2, #0]
900170f4:	4620      	mov	r0, r4
900170f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900170fa:	bf00      	nop
900170fc:	200002bc 	.word	0x200002bc
90017100:	200002d8 	.word	0x200002d8
90017104:	200002b8 	.word	0x200002b8
90017108:	200002ac 	.word	0x200002ac
9001710c:	200002c0 	.word	0x200002c0

90017110 <EwInitGfxCore>:
90017110:	2300      	movs	r3, #0
90017112:	b573      	push	{r0, r1, r4, r5, r6, lr}
90017114:	4c70      	ldr	r4, [pc, #448]	; (900172d8 <EwInitGfxCore+0x1c8>)
90017116:	4d71      	ldr	r5, [pc, #452]	; (900172dc <EwInitGfxCore+0x1cc>)
90017118:	60a3      	str	r3, [r4, #8]
9001711a:	6563      	str	r3, [r4, #84]	; 0x54
9001711c:	6263      	str	r3, [r4, #36]	; 0x24
9001711e:	62e3      	str	r3, [r4, #44]	; 0x2c
90017120:	e9c4 3300 	strd	r3, r3, [r4]
90017124:	e9c4 3306 	strd	r3, r3, [r4, #24]
90017128:	e9c4 3304 	strd	r3, r3, [r4, #16]
9001712c:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
90017130:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
90017134:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
90017138:	e9c4 330f 	strd	r3, r3, [r4, #60]	; 0x3c
9001713c:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90017140:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
90017144:	686b      	ldr	r3, [r5, #4]
90017146:	2b00      	cmp	r3, #0
90017148:	dc16      	bgt.n	90017178 <EwInitGfxCore+0x68>
9001714a:	2301      	movs	r3, #1
9001714c:	606b      	str	r3, [r5, #4]
9001714e:	68ab      	ldr	r3, [r5, #8]
90017150:	4a63      	ldr	r2, [pc, #396]	; (900172e0 <EwInitGfxCore+0x1d0>)
90017152:	2b1f      	cmp	r3, #31
90017154:	bfdc      	itt	le
90017156:	2320      	movle	r3, #32
90017158:	60ab      	strle	r3, [r5, #8]
9001715a:	68eb      	ldr	r3, [r5, #12]
9001715c:	2b1f      	cmp	r3, #31
9001715e:	bfdc      	itt	le
90017160:	2320      	movle	r3, #32
90017162:	60eb      	strle	r3, [r5, #12]
90017164:	686b      	ldr	r3, [r5, #4]
90017166:	3308      	adds	r3, #8
90017168:	019b      	lsls	r3, r3, #6
9001716a:	4293      	cmp	r3, r2
9001716c:	6323      	str	r3, [r4, #48]	; 0x30
9001716e:	dd09      	ble.n	90017184 <EwInitGfxCore+0x74>
90017170:	f44f 5300 	mov.w	r3, #8192	; 0x2000
90017174:	66e3      	str	r3, [r4, #108]	; 0x6c
90017176:	e010      	b.n	9001719a <EwInitGfxCore+0x8a>
90017178:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
9001717c:	dde7      	ble.n	9001714e <EwInitGfxCore+0x3e>
9001717e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
90017182:	e7e3      	b.n	9001714c <EwInitGfxCore+0x3c>
90017184:	2b00      	cmp	r3, #0
90017186:	461a      	mov	r2, r3
90017188:	bfb8      	it	lt
9001718a:	f103 020f 	addlt.w	r2, r3, #15
9001718e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90017192:	ea4f 1222 	mov.w	r2, r2, asr #4
90017196:	db48      	blt.n	9001722a <EwInitGfxCore+0x11a>
90017198:	66e2      	str	r2, [r4, #108]	; 0x6c
9001719a:	68eb      	ldr	r3, [r5, #12]
9001719c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
900171a0:	dc45      	bgt.n	9001722e <EwInitGfxCore+0x11e>
900171a2:	2220      	movs	r2, #32
900171a4:	62a2      	str	r2, [r4, #40]	; 0x28
900171a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900171a8:	68a8      	ldr	r0, [r5, #8]
900171aa:	4413      	add	r3, r2
900171ac:	3b01      	subs	r3, #1
900171ae:	fb93 f3f2 	sdiv	r3, r3, r2
900171b2:	fb90 f0f3 	sdiv	r0, r0, r3
900171b6:	4606      	mov	r6, r0
900171b8:	6223      	str	r3, [r4, #32]
900171ba:	6620      	str	r0, [r4, #96]	; 0x60
900171bc:	4356      	muls	r6, r2
900171be:	fb03 f202 	mul.w	r2, r3, r2
900171c2:	fb00 f303 	mul.w	r3, r0, r3
900171c6:	bf48      	it	mi
900171c8:	3607      	addmi	r6, #7
900171ca:	60ea      	str	r2, [r5, #12]
900171cc:	60ab      	str	r3, [r5, #8]
900171ce:	10f6      	asrs	r6, r6, #3
900171d0:	4353      	muls	r3, r2
900171d2:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
900171d6:	db36      	blt.n	90017246 <EwInitGfxCore+0x136>
900171d8:	f44f 7380 	mov.w	r3, #256	; 0x100
900171dc:	60e3      	str	r3, [r4, #12]
900171de:	68e0      	ldr	r0, [r4, #12]
900171e0:	0080      	lsls	r0, r0, #2
900171e2:	f00f fd67 	bl	90026cb4 <EwAlloc>
900171e6:	6120      	str	r0, [r4, #16]
900171e8:	68e0      	ldr	r0, [r4, #12]
900171ea:	0080      	lsls	r0, r0, #2
900171ec:	f00f fd62 	bl	90026cb4 <EwAlloc>
900171f0:	6160      	str	r0, [r4, #20]
900171f2:	4630      	mov	r0, r6
900171f4:	f00f fd5e 	bl	90026cb4 <EwAlloc>
900171f8:	6a21      	ldr	r1, [r4, #32]
900171fa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900171fc:	2300      	movs	r3, #0
900171fe:	6260      	str	r0, [r4, #36]	; 0x24
90017200:	6e20      	ldr	r0, [r4, #96]	; 0x60
90017202:	434a      	muls	r2, r1
90017204:	e9cd 3300 	strd	r3, r3, [sp]
90017208:	4341      	muls	r1, r0
9001720a:	2002      	movs	r0, #2
9001720c:	f7ff fee2 	bl	90016fd4 <EwCreateSurface>
90017210:	6922      	ldr	r2, [r4, #16]
90017212:	6560      	str	r0, [r4, #84]	; 0x54
90017214:	b122      	cbz	r2, 90017220 <EwInitGfxCore+0x110>
90017216:	6962      	ldr	r2, [r4, #20]
90017218:	b112      	cbz	r2, 90017220 <EwInitGfxCore+0x110>
9001721a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9001721c:	b102      	cbz	r2, 90017220 <EwInitGfxCore+0x110>
9001721e:	bb88      	cbnz	r0, 90017284 <EwInitGfxCore+0x174>
90017220:	f7ff fe80 	bl	90016f24 <EwDoneGfxCore>
90017224:	2000      	movs	r0, #0
90017226:	b002      	add	sp, #8
90017228:	bd70      	pop	{r4, r5, r6, pc}
9001722a:	2380      	movs	r3, #128	; 0x80
9001722c:	e7a2      	b.n	90017174 <EwInitGfxCore+0x64>
9001722e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90017232:	dc01      	bgt.n	90017238 <EwInitGfxCore+0x128>
90017234:	2240      	movs	r2, #64	; 0x40
90017236:	e7b5      	b.n	900171a4 <EwInitGfxCore+0x94>
90017238:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
9001723c:	bfd4      	ite	le
9001723e:	2280      	movle	r2, #128	; 0x80
90017240:	f44f 7280 	movgt.w	r2, #256	; 0x100
90017244:	e7ae      	b.n	900171a4 <EwInitGfxCore+0x94>
90017246:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
9001724a:	db01      	blt.n	90017250 <EwInitGfxCore+0x140>
9001724c:	2380      	movs	r3, #128	; 0x80
9001724e:	e7c5      	b.n	900171dc <EwInitGfxCore+0xcc>
90017250:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
90017254:	db01      	blt.n	9001725a <EwInitGfxCore+0x14a>
90017256:	2340      	movs	r3, #64	; 0x40
90017258:	e7c0      	b.n	900171dc <EwInitGfxCore+0xcc>
9001725a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9001725e:	db01      	blt.n	90017264 <EwInitGfxCore+0x154>
90017260:	2320      	movs	r3, #32
90017262:	e7bb      	b.n	900171dc <EwInitGfxCore+0xcc>
90017264:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
90017268:	db01      	blt.n	9001726e <EwInitGfxCore+0x15e>
9001726a:	2310      	movs	r3, #16
9001726c:	e7b6      	b.n	900171dc <EwInitGfxCore+0xcc>
9001726e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
90017272:	db01      	blt.n	90017278 <EwInitGfxCore+0x168>
90017274:	2308      	movs	r3, #8
90017276:	e7b1      	b.n	900171dc <EwInitGfxCore+0xcc>
90017278:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
9001727c:	bfac      	ite	ge
9001727e:	2304      	movge	r3, #4
90017280:	2302      	movlt	r3, #2
90017282:	e7ab      	b.n	900171dc <EwInitGfxCore+0xcc>
90017284:	f7ff fc20 	bl	90016ac8 <EwBidiGetTypesAndLevels+0x50>
90017288:	4631      	mov	r1, r6
9001728a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9001728c:	f00f fd3a 	bl	90026d04 <EwZero>
90017290:	68e1      	ldr	r1, [r4, #12]
90017292:	6920      	ldr	r0, [r4, #16]
90017294:	0089      	lsls	r1, r1, #2
90017296:	f00f fd35 	bl	90026d04 <EwZero>
9001729a:	68e1      	ldr	r1, [r4, #12]
9001729c:	6960      	ldr	r0, [r4, #20]
9001729e:	0089      	lsls	r1, r1, #2
900172a0:	f00f fd30 	bl	90026d04 <EwZero>
900172a4:	4b0f      	ldr	r3, [pc, #60]	; (900172e4 <EwInitGfxCore+0x1d4>)
900172a6:	68e2      	ldr	r2, [r4, #12]
900172a8:	2001      	movs	r0, #1
900172aa:	6819      	ldr	r1, [r3, #0]
900172ac:	eb01 01c2 	add.w	r1, r1, r2, lsl #3
900172b0:	4431      	add	r1, r6
900172b2:	6019      	str	r1, [r3, #0]
900172b4:	4b0c      	ldr	r3, [pc, #48]	; (900172e8 <EwInitGfxCore+0x1d8>)
900172b6:	681a      	ldr	r2, [r3, #0]
900172b8:	4291      	cmp	r1, r2
900172ba:	4a0c      	ldr	r2, [pc, #48]	; (900172ec <EwInitGfxCore+0x1dc>)
900172bc:	bfc8      	it	gt
900172be:	6019      	strgt	r1, [r3, #0]
900172c0:	4b0b      	ldr	r3, [pc, #44]	; (900172f0 <EwInitGfxCore+0x1e0>)
900172c2:	6812      	ldr	r2, [r2, #0]
900172c4:	681b      	ldr	r3, [r3, #0]
900172c6:	4413      	add	r3, r2
900172c8:	4419      	add	r1, r3
900172ca:	4b0a      	ldr	r3, [pc, #40]	; (900172f4 <EwInitGfxCore+0x1e4>)
900172cc:	681a      	ldr	r2, [r3, #0]
900172ce:	4291      	cmp	r1, r2
900172d0:	bfc8      	it	gt
900172d2:	6019      	strgt	r1, [r3, #0]
900172d4:	e7a7      	b.n	90017226 <EwInitGfxCore+0x116>
900172d6:	bf00      	nop
900172d8:	200001bc 	.word	0x200001bc
900172dc:	20000014 	.word	0x20000014
900172e0:	0002000f 	.word	0x0002000f
900172e4:	200002bc 	.word	0x200002bc
900172e8:	200002d8 	.word	0x200002d8
900172ec:	200002b8 	.word	0x200002b8
900172f0:	200002ac 	.word	0x200002ac
900172f4:	200002c0 	.word	0x200002c0

900172f8 <EwCreateConstSurface>:
900172f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900172fc:	4699      	mov	r9, r3
900172fe:	1c43      	adds	r3, r0, #1
90017300:	4605      	mov	r5, r0
90017302:	460e      	mov	r6, r1
90017304:	4617      	mov	r7, r2
90017306:	e9dd b80b 	ldrd	fp, r8, [sp, #44]	; 0x2c
9001730a:	d026      	beq.n	9001735a <EwCreateConstSurface+0x62>
9001730c:	f7ff fcd4 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017310:	2000      	movs	r0, #0
90017312:	f7ff fda7 	bl	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
90017316:	203c      	movs	r0, #60	; 0x3c
90017318:	f00f fccc 	bl	90026cb4 <EwAlloc>
9001731c:	4604      	mov	r4, r0
9001731e:	b9f0      	cbnz	r0, 9001735e <EwCreateConstSurface+0x66>
90017320:	2101      	movs	r1, #1
90017322:	4608      	mov	r0, r1
90017324:	f7ff fd2e 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
90017328:	2800      	cmp	r0, #0
9001732a:	d1f4      	bne.n	90017316 <EwCreateConstSurface+0x1e>
9001732c:	2026      	movs	r0, #38	; 0x26
9001732e:	f007 f841 	bl	9001e3b4 <EwImmediateReclaimMemory>
90017332:	2800      	cmp	r0, #0
90017334:	d1ef      	bne.n	90017316 <EwCreateConstSurface+0x1e>
90017336:	2026      	movs	r0, #38	; 0x26
90017338:	f006 f88a 	bl	9001d450 <EwError>
9001733c:	e053      	b.n	900173e6 <EwCreateConstSurface+0xee>
9001733e:	2d02      	cmp	r5, #2
90017340:	d012      	beq.n	90017368 <EwCreateConstSurface+0x70>
90017342:	2d01      	cmp	r5, #1
90017344:	d010      	beq.n	90017368 <EwCreateConstSurface+0x70>
90017346:	2d03      	cmp	r5, #3
90017348:	d00e      	beq.n	90017368 <EwCreateConstSurface+0x70>
9001734a:	2100      	movs	r1, #0
9001734c:	2001      	movs	r0, #1
9001734e:	f7ff fd19 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
90017352:	b938      	cbnz	r0, 90017364 <EwCreateConstSurface+0x6c>
90017354:	4620      	mov	r0, r4
90017356:	f00f fcaf 	bl	90026cb8 <EwFree>
9001735a:	2400      	movs	r4, #0
9001735c:	e043      	b.n	900173e6 <EwCreateConstSurface+0xee>
9001735e:	213c      	movs	r1, #60	; 0x3c
90017360:	f00f fcd0 	bl	90026d04 <EwZero>
90017364:	2d00      	cmp	r5, #0
90017366:	d1ea      	bne.n	9001733e <EwCreateConstSurface+0x46>
90017368:	4643      	mov	r3, r8
9001736a:	463a      	mov	r2, r7
9001736c:	4631      	mov	r1, r6
9001736e:	4628      	mov	r0, r5
90017370:	f00f f946 	bl	90026600 <GfxCreateConstSurface>
90017374:	2800      	cmp	r0, #0
90017376:	d0e8      	beq.n	9001734a <EwCreateConstSurface+0x52>
90017378:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001737a:	8425      	strh	r5, [r4, #32]
9001737c:	2500      	movs	r5, #0
9001737e:	63a0      	str	r0, [r4, #56]	; 0x38
90017380:	4620      	mov	r0, r4
90017382:	8466      	strh	r6, [r4, #34]	; 0x22
90017384:	84a7      	strh	r7, [r4, #36]	; 0x24
90017386:	62a5      	str	r5, [r4, #40]	; 0x28
90017388:	e9c4 3b06 	strd	r3, fp, [r4, #24]
9001738c:	ea53 030b 	orrs.w	r3, r3, fp
90017390:	bf14      	ite	ne
90017392:	2301      	movne	r3, #1
90017394:	462b      	moveq	r3, r5
90017396:	62e3      	str	r3, [r4, #44]	; 0x2c
90017398:	f7ff fb84 	bl	90016aa4 <EwBidiGetTypesAndLevels+0x2c>
9001739c:	4628      	mov	r0, r5
9001739e:	f8c4 9014 	str.w	r9, [r4, #20]
900173a2:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
900173a6:	3202      	adds	r2, #2
900173a8:	3302      	adds	r3, #2
900173aa:	60a2      	str	r2, [r4, #8]
900173ac:	60e3      	str	r3, [r4, #12]
900173ae:	f7ff fd59 	bl	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
900173b2:	68e3      	ldr	r3, [r4, #12]
900173b4:	4a0d      	ldr	r2, [pc, #52]	; (900173ec <EwCreateConstSurface+0xf4>)
900173b6:	3b01      	subs	r3, #1
900173b8:	60e3      	str	r3, [r4, #12]
900173ba:	68a3      	ldr	r3, [r4, #8]
900173bc:	3b01      	subs	r3, #1
900173be:	60a3      	str	r3, [r4, #8]
900173c0:	6813      	ldr	r3, [r2, #0]
900173c2:	333c      	adds	r3, #60	; 0x3c
900173c4:	6013      	str	r3, [r2, #0]
900173c6:	4a0a      	ldr	r2, [pc, #40]	; (900173f0 <EwCreateConstSurface+0xf8>)
900173c8:	6811      	ldr	r1, [r2, #0]
900173ca:	428b      	cmp	r3, r1
900173cc:	dd00      	ble.n	900173d0 <EwCreateConstSurface+0xd8>
900173ce:	6013      	str	r3, [r2, #0]
900173d0:	4a08      	ldr	r2, [pc, #32]	; (900173f4 <EwCreateConstSurface+0xfc>)
900173d2:	4909      	ldr	r1, [pc, #36]	; (900173f8 <EwCreateConstSurface+0x100>)
900173d4:	6812      	ldr	r2, [r2, #0]
900173d6:	6809      	ldr	r1, [r1, #0]
900173d8:	440a      	add	r2, r1
900173da:	4413      	add	r3, r2
900173dc:	4a07      	ldr	r2, [pc, #28]	; (900173fc <EwCreateConstSurface+0x104>)
900173de:	6811      	ldr	r1, [r2, #0]
900173e0:	428b      	cmp	r3, r1
900173e2:	dd00      	ble.n	900173e6 <EwCreateConstSurface+0xee>
900173e4:	6013      	str	r3, [r2, #0]
900173e6:	4620      	mov	r0, r4
900173e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900173ec:	200002bc 	.word	0x200002bc
900173f0:	200002d8 	.word	0x200002d8
900173f4:	200002ac 	.word	0x200002ac
900173f8:	200002b8 	.word	0x200002b8
900173fc:	200002c0 	.word	0x200002c0

90017400 <EwFindSurface>:
90017400:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
90017404:	461e      	mov	r6, r3
90017406:	1c43      	adds	r3, r0, #1
90017408:	4605      	mov	r5, r0
9001740a:	4689      	mov	r9, r1
9001740c:	4692      	mov	sl, r2
9001740e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90017410:	d103      	bne.n	9001741a <EwFindSurface+0x1a>
90017412:	2400      	movs	r4, #0
90017414:	4620      	mov	r0, r4
90017416:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}
9001741a:	4b18      	ldr	r3, [pc, #96]	; (9001747c <EwFindSurface+0x7c>)
9001741c:	681c      	ldr	r4, [r3, #0]
9001741e:	f7ff fc4b 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017422:	2000      	movs	r0, #0
90017424:	b1d4      	cbz	r4, 9001745c <EwFindSurface+0x5c>
90017426:	68a3      	ldr	r3, [r4, #8]
90017428:	2b00      	cmp	r3, #0
9001742a:	dc15      	bgt.n	90017458 <EwFindSurface+0x58>
9001742c:	69a3      	ldr	r3, [r4, #24]
9001742e:	9a08      	ldr	r2, [sp, #32]
90017430:	4293      	cmp	r3, r2
90017432:	d111      	bne.n	90017458 <EwFindSurface+0x58>
90017434:	69e3      	ldr	r3, [r4, #28]
90017436:	42bb      	cmp	r3, r7
90017438:	d10e      	bne.n	90017458 <EwFindSurface+0x58>
9001743a:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
9001743e:	42ab      	cmp	r3, r5
90017440:	d10a      	bne.n	90017458 <EwFindSurface+0x58>
90017442:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
90017446:	454b      	cmp	r3, r9
90017448:	d106      	bne.n	90017458 <EwFindSurface+0x58>
9001744a:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
9001744e:	4553      	cmp	r3, sl
90017450:	d102      	bne.n	90017458 <EwFindSurface+0x58>
90017452:	68e3      	ldr	r3, [r4, #12]
90017454:	b12b      	cbz	r3, 90017462 <EwFindSurface+0x62>
90017456:	4620      	mov	r0, r4
90017458:	6864      	ldr	r4, [r4, #4]
9001745a:	e7e3      	b.n	90017424 <EwFindSurface+0x24>
9001745c:	2800      	cmp	r0, #0
9001745e:	d0d8      	beq.n	90017412 <EwFindSurface+0x12>
90017460:	4604      	mov	r4, r0
90017462:	4620      	mov	r0, r4
90017464:	f7ff fb30 	bl	90016ac8 <EwBidiGetTypesAndLevels+0x50>
90017468:	f7ff fb1c 	bl	90016aa4 <EwBidiGetTypesAndLevels+0x2c>
9001746c:	68a3      	ldr	r3, [r4, #8]
9001746e:	6166      	str	r6, [r4, #20]
90017470:	3301      	adds	r3, #1
90017472:	60a3      	str	r3, [r4, #8]
90017474:	68e3      	ldr	r3, [r4, #12]
90017476:	3301      	adds	r3, #1
90017478:	60e3      	str	r3, [r4, #12]
9001747a:	e7cb      	b.n	90017414 <EwFindSurface+0x14>
9001747c:	200001bc 	.word	0x200001bc

90017480 <EwFreeSurface>:
90017480:	6883      	ldr	r3, [r0, #8]
90017482:	2b00      	cmp	r3, #0
90017484:	b510      	push	{r4, lr}
90017486:	dd14      	ble.n	900174b2 <EwFreeSurface+0x32>
90017488:	3b01      	subs	r3, #1
9001748a:	2200      	movs	r2, #0
9001748c:	6083      	str	r3, [r0, #8]
9001748e:	68c3      	ldr	r3, [r0, #12]
90017490:	6142      	str	r2, [r0, #20]
90017492:	3b01      	subs	r3, #1
90017494:	60c3      	str	r3, [r0, #12]
90017496:	f7ff fb17 	bl	90016ac8 <EwBidiGetTypesAndLevels+0x50>
9001749a:	f7ff fb03 	bl	90016aa4 <EwBidiGetTypesAndLevels+0x2c>
9001749e:	68c3      	ldr	r3, [r0, #12]
900174a0:	b91b      	cbnz	r3, 900174aa <EwFreeSurface+0x2a>
900174a2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900174a4:	b90b      	cbnz	r3, 900174aa <EwFreeSurface+0x2a>
900174a6:	f7ff fc37 	bl	90016d18 <EwBidiGetTypesAndLevels+0x2a0>
900174aa:	2000      	movs	r0, #0
900174ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900174b0:	e4d8      	b.n	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
900174b2:	bd10      	pop	{r4, pc}

900174b4 <EwUnlockSurface>:
900174b4:	6883      	ldr	r3, [r0, #8]
900174b6:	2b01      	cmp	r3, #1
900174b8:	b530      	push	{r4, r5, lr}
900174ba:	4605      	mov	r5, r0
900174bc:	b087      	sub	sp, #28
900174be:	460c      	mov	r4, r1
900174c0:	f340 808d 	ble.w	900175de <EwUnlockSurface+0x12a>
900174c4:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900174c8:	3301      	adds	r3, #1
900174ca:	d115      	bne.n	900174f8 <EwUnlockSurface+0x44>
900174cc:	2300      	movs	r3, #0
900174ce:	9305      	str	r3, [sp, #20]
900174d0:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
900174d2:	9302      	str	r3, [sp, #8]
900174d4:	f002 0202 	and.w	r2, r2, #2
900174d8:	e9cd 3203 	strd	r3, r2, [sp, #12]
900174dc:	f9b1 3022 	ldrsh.w	r3, [r1, #34]	; 0x22
900174e0:	9301      	str	r3, [sp, #4]
900174e2:	f9b1 3020 	ldrsh.w	r3, [r1, #32]
900174e6:	9300      	str	r3, [sp, #0]
900174e8:	f9b1 301e 	ldrsh.w	r3, [r1, #30]
900174ec:	f9b1 201c 	ldrsh.w	r2, [r1, #28]
900174f0:	6b80      	ldr	r0, [r0, #56]	; 0x38
900174f2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
900174f4:	f00f f94e 	bl	90026794 <GfxUnlockSurface>
900174f8:	f9b5 3020 	ldrsh.w	r3, [r5, #32]
900174fc:	b9a3      	cbnz	r3, 90017528 <EwUnlockSurface+0x74>
900174fe:	8d22      	ldrh	r2, [r4, #40]	; 0x28
90017500:	9305      	str	r3, [sp, #20]
90017502:	f002 0202 	and.w	r2, r2, #2
90017506:	9302      	str	r3, [sp, #8]
90017508:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001750a:	6ba8      	ldr	r0, [r5, #56]	; 0x38
9001750c:	e9cd 3203 	strd	r3, r2, [sp, #12]
90017510:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
90017514:	f9b4 201c 	ldrsh.w	r2, [r4, #28]
90017518:	9301      	str	r3, [sp, #4]
9001751a:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
9001751e:	9300      	str	r3, [sp, #0]
90017520:	f9b4 301e 	ldrsh.w	r3, [r4, #30]
90017524:	f00f f936 	bl	90026794 <GfxUnlockSurface>
90017528:	f9b5 3020 	ldrsh.w	r3, [r5, #32]
9001752c:	2b02      	cmp	r3, #2
9001752e:	d115      	bne.n	9001755c <EwUnlockSurface+0xa8>
90017530:	8d22      	ldrh	r2, [r4, #40]	; 0x28
90017532:	2300      	movs	r3, #0
90017534:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90017536:	f002 0202 	and.w	r2, r2, #2
9001753a:	9305      	str	r3, [sp, #20]
9001753c:	9302      	str	r3, [sp, #8]
9001753e:	6ba8      	ldr	r0, [r5, #56]	; 0x38
90017540:	e9cd 3203 	strd	r3, r2, [sp, #12]
90017544:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
90017548:	f9b4 201c 	ldrsh.w	r2, [r4, #28]
9001754c:	9301      	str	r3, [sp, #4]
9001754e:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90017552:	9300      	str	r3, [sp, #0]
90017554:	f9b4 301e 	ldrsh.w	r3, [r4, #30]
90017558:	f00f f91c 	bl	90026794 <GfxUnlockSurface>
9001755c:	f9b5 3020 	ldrsh.w	r3, [r5, #32]
90017560:	2b01      	cmp	r3, #1
90017562:	d11a      	bne.n	9001759a <EwUnlockSurface+0xe6>
90017564:	8d23      	ldrh	r3, [r4, #40]	; 0x28
90017566:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90017568:	f003 0208 	and.w	r2, r3, #8
9001756c:	f003 0302 	and.w	r3, r3, #2
90017570:	6ba8      	ldr	r0, [r5, #56]	; 0x38
90017572:	9304      	str	r3, [sp, #16]
90017574:	f9b4 3026 	ldrsh.w	r3, [r4, #38]	; 0x26
90017578:	9205      	str	r2, [sp, #20]
9001757a:	9303      	str	r3, [sp, #12]
9001757c:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
90017580:	f9b4 201c 	ldrsh.w	r2, [r4, #28]
90017584:	9302      	str	r3, [sp, #8]
90017586:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
9001758a:	9301      	str	r3, [sp, #4]
9001758c:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
90017590:	9300      	str	r3, [sp, #0]
90017592:	f9b4 301e 	ldrsh.w	r3, [r4, #30]
90017596:	f00f f8fd 	bl	90026794 <GfxUnlockSurface>
9001759a:	f9b5 3020 	ldrsh.w	r3, [r5, #32]
9001759e:	2b03      	cmp	r3, #3
900175a0:	d115      	bne.n	900175ce <EwUnlockSurface+0x11a>
900175a2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
900175a4:	2300      	movs	r3, #0
900175a6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900175a8:	f002 0202 	and.w	r2, r2, #2
900175ac:	9305      	str	r3, [sp, #20]
900175ae:	9302      	str	r3, [sp, #8]
900175b0:	6ba8      	ldr	r0, [r5, #56]	; 0x38
900175b2:	e9cd 3203 	strd	r3, r2, [sp, #12]
900175b6:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
900175ba:	f9b4 201c 	ldrsh.w	r2, [r4, #28]
900175be:	9301      	str	r3, [sp, #4]
900175c0:	f9b4 3020 	ldrsh.w	r3, [r4, #32]
900175c4:	9300      	str	r3, [sp, #0]
900175c6:	f9b4 301e 	ldrsh.w	r3, [r4, #30]
900175ca:	f00f f8e3 	bl	90026794 <GfxUnlockSurface>
900175ce:	2300      	movs	r3, #0
900175d0:	62e3      	str	r3, [r4, #44]	; 0x2c
900175d2:	68ab      	ldr	r3, [r5, #8]
900175d4:	3b01      	subs	r3, #1
900175d6:	60ab      	str	r3, [r5, #8]
900175d8:	68eb      	ldr	r3, [r5, #12]
900175da:	3b01      	subs	r3, #1
900175dc:	60eb      	str	r3, [r5, #12]
900175de:	b007      	add	sp, #28
900175e0:	bd30      	pop	{r4, r5, pc}

900175e2 <EwCreateGlyph>:
900175e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900175e6:	f8df 8238 	ldr.w	r8, [pc, #568]	; 90017820 <EwCreateGlyph+0x23e>
900175ea:	b08f      	sub	sp, #60	; 0x3c
900175ec:	e9cd 230b 	strd	r2, r3, [sp, #44]	; 0x2c
900175f0:	f8d8 3020 	ldr.w	r3, [r8, #32]
900175f4:	185f      	adds	r7, r3, r1
900175f6:	181d      	adds	r5, r3, r0
900175f8:	3f01      	subs	r7, #1
900175fa:	3d01      	subs	r5, #1
900175fc:	fb97 f7f3 	sdiv	r7, r7, r3
90017600:	fb95 f5f3 	sdiv	r5, r5, r3
90017604:	e9cd 0102 	strd	r0, r1, [sp, #8]
90017608:	f7ff fb56 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
9001760c:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
90017610:	42bb      	cmp	r3, r7
90017612:	da05      	bge.n	90017620 <EwCreateGlyph+0x3e>
90017614:	f04f 0a00 	mov.w	sl, #0
90017618:	4650      	mov	r0, sl
9001761a:	b00f      	add	sp, #60	; 0x3c
9001761c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017620:	f8d8 3060 	ldr.w	r3, [r8, #96]	; 0x60
90017624:	42ab      	cmp	r3, r5
90017626:	dbf5      	blt.n	90017614 <EwCreateGlyph+0x32>
90017628:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
9001762c:	f04f 0c00 	mov.w	ip, #0
90017630:	f8d8 2060 	ldr.w	r2, [r8, #96]	; 0x60
90017634:	2b00      	cmp	r3, #0
90017636:	4666      	mov	r6, ip
90017638:	eba2 0205 	sub.w	r2, r2, r5
9001763c:	bfb8      	it	lt
9001763e:	331f      	addlt	r3, #31
90017640:	9209      	str	r2, [sp, #36]	; 0x24
90017642:	115b      	asrs	r3, r3, #5
90017644:	f8d8 2024 	ldr.w	r2, [r8, #36]	; 0x24
90017648:	9206      	str	r2, [sp, #24]
9001764a:	009a      	lsls	r2, r3, #2
9001764c:	9204      	str	r2, [sp, #16]
9001764e:	9a06      	ldr	r2, [sp, #24]
90017650:	eb02 0983 	add.w	r9, r2, r3, lsl #2
90017654:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017656:	4296      	cmp	r6, r2
90017658:	f300 80cd 	bgt.w	900177f6 <EwCreateGlyph+0x214>
9001765c:	9a06      	ldr	r2, [sp, #24]
9001765e:	46ce      	mov	lr, r9
90017660:	eb02 028c 	add.w	r2, r2, ip, lsl #2
90017664:	9207      	str	r2, [sp, #28]
90017666:	2200      	movs	r2, #0
90017668:	9201      	str	r2, [sp, #4]
9001766a:	19aa      	adds	r2, r5, r6
9001766c:	920d      	str	r2, [sp, #52]	; 0x34
9001766e:	9a01      	ldr	r2, [sp, #4]
90017670:	4293      	cmp	r3, r2
90017672:	dc04      	bgt.n	9001767e <EwCreateGlyph+0x9c>
90017674:	9a04      	ldr	r2, [sp, #16]
90017676:	3601      	adds	r6, #1
90017678:	449c      	add	ip, r3
9001767a:	4491      	add	r9, r2
9001767c:	e7ea      	b.n	90017654 <EwCreateGlyph+0x72>
9001767e:	4a67      	ldr	r2, [pc, #412]	; (9001781c <EwCreateGlyph+0x23a>)
90017680:	f1c7 001f 	rsb	r0, r7, #31
90017684:	f852 2027 	ldr.w	r2, [r2, r7, lsl #2]
90017688:	9205      	str	r2, [sp, #20]
9001768a:	9a07      	ldr	r2, [sp, #28]
9001768c:	4611      	mov	r1, r2
9001768e:	f851 2b04 	ldr.w	r2, [r1], #4
90017692:	9107      	str	r1, [sp, #28]
90017694:	9905      	ldr	r1, [sp, #20]
90017696:	9208      	str	r2, [sp, #32]
90017698:	9a08      	ldr	r2, [sp, #32]
9001769a:	1c44      	adds	r4, r0, #1
9001769c:	ea02 0201 	and.w	r2, r2, r1
900176a0:	940a      	str	r4, [sp, #40]	; 0x28
900176a2:	d000      	beq.n	900176a6 <EwCreateGlyph+0xc4>
900176a4:	bb02      	cbnz	r2, 900176e8 <EwCreateGlyph+0x106>
900176a6:	fab2 f282 	clz	r2, r2
900176aa:	f106 0a01 	add.w	sl, r6, #1
900176ae:	46f3      	mov	fp, lr
900176b0:	0952      	lsrs	r2, r2, #5
900176b2:	2a00      	cmp	r2, #0
900176b4:	f000 80a7 	beq.w	90017806 <EwCreateGlyph+0x224>
900176b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900176ba:	4592      	cmp	sl, r2
900176bc:	db17      	blt.n	900176ee <EwCreateGlyph+0x10c>
900176be:	2030      	movs	r0, #48	; 0x30
900176c0:	f00f faf8 	bl	90026cb4 <EwAlloc>
900176c4:	4682      	mov	sl, r0
900176c6:	2800      	cmp	r0, #0
900176c8:	d172      	bne.n	900177b0 <EwCreateGlyph+0x1ce>
900176ca:	2101      	movs	r1, #1
900176cc:	4608      	mov	r0, r1
900176ce:	f7ff fb59 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
900176d2:	2800      	cmp	r0, #0
900176d4:	d1f3      	bne.n	900176be <EwCreateGlyph+0xdc>
900176d6:	2027      	movs	r0, #39	; 0x27
900176d8:	f006 fe6c 	bl	9001e3b4 <EwImmediateReclaimMemory>
900176dc:	2800      	cmp	r0, #0
900176de:	d1a3      	bne.n	90017628 <EwCreateGlyph+0x46>
900176e0:	2027      	movs	r0, #39	; 0x27
900176e2:	f005 feb5 	bl	9001d450 <EwError>
900176e6:	e797      	b.n	90017618 <EwCreateGlyph+0x36>
900176e8:	0049      	lsls	r1, r1, #1
900176ea:	3801      	subs	r0, #1
900176ec:	e7d4      	b.n	90017698 <EwCreateGlyph+0xb6>
900176ee:	f8db 2000 	ldr.w	r2, [fp]
900176f2:	f10a 0a01 	add.w	sl, sl, #1
900176f6:	9c04      	ldr	r4, [sp, #16]
900176f8:	4211      	tst	r1, r2
900176fa:	44a3      	add	fp, r4
900176fc:	bf0c      	ite	eq
900176fe:	2201      	moveq	r2, #1
90017700:	2200      	movne	r2, #0
90017702:	e7d6      	b.n	900176b2 <EwCreateGlyph+0xd0>
90017704:	2a00      	cmp	r2, #0
90017706:	4610      	mov	r0, r2
90017708:	f105 35ff 	add.w	r5, r5, #4294967295
9001770c:	bfb8      	it	lt
9001770e:	f102 001f 	addlt.w	r0, r2, #31
90017712:	4462      	add	r2, ip
90017714:	eb07 1060 	add.w	r0, r7, r0, asr #5
90017718:	f85e 3020 	ldr.w	r3, [lr, r0, lsl #2]
9001771c:	430b      	orrs	r3, r1
9001771e:	f84e 3020 	str.w	r3, [lr, r0, lsl #2]
90017722:	2d00      	cmp	r5, #0
90017724:	dcee      	bgt.n	90017704 <EwCreateGlyph+0x122>
90017726:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90017728:	4650      	mov	r0, sl
9001772a:	8c27      	ldrh	r7, [r4, #32]
9001772c:	f8ca 3014 	str.w	r3, [sl, #20]
90017730:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90017732:	fb16 f607 	smulbb	r6, r6, r7
90017736:	fb19 f907 	smulbb	r9, r9, r7
9001773a:	f8ca 3018 	str.w	r3, [sl, #24]
9001773e:	9b02      	ldr	r3, [sp, #8]
90017740:	f8aa 6026 	strh.w	r6, [sl, #38]	; 0x26
90017744:	f8aa 301c 	strh.w	r3, [sl, #28]
90017748:	9b03      	ldr	r3, [sp, #12]
9001774a:	f8aa 9028 	strh.w	r9, [sl, #40]	; 0x28
9001774e:	f8aa 301e 	strh.w	r3, [sl, #30]
90017752:	f7ff f9cf 	bl	90016af4 <EwBidiGetTypesAndLevels+0x7c>
90017756:	f8da 3010 	ldr.w	r3, [sl, #16]
9001775a:	9a02      	ldr	r2, [sp, #8]
9001775c:	3301      	adds	r3, #1
9001775e:	9903      	ldr	r1, [sp, #12]
90017760:	f8ca 3010 	str.w	r3, [sl, #16]
90017764:	6e63      	ldr	r3, [r4, #100]	; 0x64
90017766:	4293      	cmp	r3, r2
90017768:	bfbc      	itt	lt
9001776a:	4613      	movlt	r3, r2
9001776c:	6663      	strlt	r3, [r4, #100]	; 0x64
9001776e:	4b2c      	ldr	r3, [pc, #176]	; (90017820 <EwCreateGlyph+0x23e>)
90017770:	6e9a      	ldr	r2, [r3, #104]	; 0x68
90017772:	428a      	cmp	r2, r1
90017774:	bfb8      	it	lt
90017776:	460a      	movlt	r2, r1
90017778:	492a      	ldr	r1, [pc, #168]	; (90017824 <EwCreateGlyph+0x242>)
9001777a:	bfb8      	it	lt
9001777c:	669a      	strlt	r2, [r3, #104]	; 0x68
9001777e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90017780:	3301      	adds	r3, #1
90017782:	62e3      	str	r3, [r4, #44]	; 0x2c
90017784:	680b      	ldr	r3, [r1, #0]
90017786:	f103 0230 	add.w	r2, r3, #48	; 0x30
9001778a:	4b27      	ldr	r3, [pc, #156]	; (90017828 <EwCreateGlyph+0x246>)
9001778c:	600a      	str	r2, [r1, #0]
9001778e:	6819      	ldr	r1, [r3, #0]
90017790:	428a      	cmp	r2, r1
90017792:	4926      	ldr	r1, [pc, #152]	; (9001782c <EwCreateGlyph+0x24a>)
90017794:	bfc8      	it	gt
90017796:	601a      	strgt	r2, [r3, #0]
90017798:	4b25      	ldr	r3, [pc, #148]	; (90017830 <EwCreateGlyph+0x24e>)
9001779a:	6809      	ldr	r1, [r1, #0]
9001779c:	681b      	ldr	r3, [r3, #0]
9001779e:	440b      	add	r3, r1
900177a0:	4413      	add	r3, r2
900177a2:	4a24      	ldr	r2, [pc, #144]	; (90017834 <EwCreateGlyph+0x252>)
900177a4:	6811      	ldr	r1, [r2, #0]
900177a6:	428b      	cmp	r3, r1
900177a8:	f77f af36 	ble.w	90017618 <EwCreateGlyph+0x36>
900177ac:	6013      	str	r3, [r2, #0]
900177ae:	e733      	b.n	90017618 <EwCreateGlyph+0x36>
900177b0:	9c01      	ldr	r4, [sp, #4]
900177b2:	2130      	movs	r1, #48	; 0x30
900177b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900177b6:	3401      	adds	r4, #1
900177b8:	ebc7 1744 	rsb	r7, r7, r4, lsl #5
900177bc:	4c18      	ldr	r4, [pc, #96]	; (90017820 <EwCreateGlyph+0x23e>)
900177be:	eba7 0903 	sub.w	r9, r7, r3
900177c2:	f00f fa9f 	bl	90026d04 <EwZero>
900177c6:	f1d9 0300 	rsbs	r3, r9, #0
900177ca:	f009 011f 	and.w	r1, r9, #31
900177ce:	464f      	mov	r7, r9
900177d0:	f003 031f 	and.w	r3, r3, #31
900177d4:	bf58      	it	pl
900177d6:	4259      	negpl	r1, r3
900177d8:	9b05      	ldr	r3, [sp, #20]
900177da:	f1b9 0f00 	cmp.w	r9, #0
900177de:	fa03 f301 	lsl.w	r3, r3, r1
900177e2:	bfb8      	it	lt
900177e4:	f109 071f 	addlt.w	r7, r9, #31
900177e8:	4619      	mov	r1, r3
900177ea:	117f      	asrs	r7, r7, #5
900177ec:	e9d4 ec09 	ldrd	lr, ip, [r4, #36]	; 0x24
900177f0:	fb0c f206 	mul.w	r2, ip, r6
900177f4:	e795      	b.n	90017722 <EwCreateGlyph+0x140>
900177f6:	2101      	movs	r1, #1
900177f8:	2000      	movs	r0, #0
900177fa:	f7ff fac3 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
900177fe:	2800      	cmp	r0, #0
90017800:	f47f af12 	bne.w	90017628 <EwCreateGlyph+0x46>
90017804:	e706      	b.n	90017614 <EwCreateGlyph+0x32>
90017806:	2800      	cmp	r0, #0
90017808:	ea4f 0141 	mov.w	r1, r1, lsl #1
9001780c:	f73f af6d 	bgt.w	900176ea <EwCreateGlyph+0x108>
90017810:	9a01      	ldr	r2, [sp, #4]
90017812:	f10e 0e04 	add.w	lr, lr, #4
90017816:	3201      	adds	r2, #1
90017818:	9201      	str	r2, [sp, #4]
9001781a:	e728      	b.n	9001766e <EwCreateGlyph+0x8c>
9001781c:	90032014 	.word	0x90032014
90017820:	200001bc 	.word	0x200001bc
90017824:	200002bc 	.word	0x200002bc
90017828:	200002d8 	.word	0x200002d8
9001782c:	200002b8 	.word	0x200002b8
90017830:	200002ac 	.word	0x200002ac
90017834:	200002c0 	.word	0x200002c0

90017838 <EwFindGlyph>:
90017838:	4a0f      	ldr	r2, [pc, #60]	; (90017878 <EwFindGlyph+0x40>)
9001783a:	68d3      	ldr	r3, [r2, #12]
9001783c:	6912      	ldr	r2, [r2, #16]
9001783e:	3b01      	subs	r3, #1
90017840:	400b      	ands	r3, r1
90017842:	b570      	push	{r4, r5, r6, lr}
90017844:	4606      	mov	r6, r0
90017846:	460d      	mov	r5, r1
90017848:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
9001784c:	f7ff fa34 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017850:	b16c      	cbz	r4, 9001786e <EwFindGlyph+0x36>
90017852:	6963      	ldr	r3, [r4, #20]
90017854:	42b3      	cmp	r3, r6
90017856:	d10c      	bne.n	90017872 <EwFindGlyph+0x3a>
90017858:	69a3      	ldr	r3, [r4, #24]
9001785a:	42ab      	cmp	r3, r5
9001785c:	d109      	bne.n	90017872 <EwFindGlyph+0x3a>
9001785e:	4620      	mov	r0, r4
90017860:	f7ff f96a 	bl	90016b38 <EwBidiGetTypesAndLevels+0xc0>
90017864:	f7ff f946 	bl	90016af4 <EwBidiGetTypesAndLevels+0x7c>
90017868:	6923      	ldr	r3, [r4, #16]
9001786a:	3301      	adds	r3, #1
9001786c:	6123      	str	r3, [r4, #16]
9001786e:	4620      	mov	r0, r4
90017870:	bd70      	pop	{r4, r5, r6, pc}
90017872:	68a4      	ldr	r4, [r4, #8]
90017874:	e7ec      	b.n	90017850 <EwFindGlyph+0x18>
90017876:	bf00      	nop
90017878:	200001bc 	.word	0x200001bc

9001787c <EwFreeGlyph>:
9001787c:	6903      	ldr	r3, [r0, #16]
9001787e:	3b01      	subs	r3, #1
90017880:	6103      	str	r3, [r0, #16]
90017882:	4770      	bx	lr

90017884 <EwDiscardGlyph>:
90017884:	6903      	ldr	r3, [r0, #16]
90017886:	b90b      	cbnz	r3, 9001788c <EwDiscardGlyph+0x8>
90017888:	f7ff b99d 	b.w	90016bc6 <EwBidiGetTypesAndLevels+0x14e>
9001788c:	4770      	bx	lr

9001788e <EwUnlockGlyphCache>:
9001788e:	b119      	cbz	r1, 90017898 <EwUnlockGlyphCache+0xa>
90017890:	4b02      	ldr	r3, [pc, #8]	; (9001789c <EwUnlockGlyphCache+0xe>)
90017892:	6d58      	ldr	r0, [r3, #84]	; 0x54
90017894:	f7ff be0e 	b.w	900174b4 <EwUnlockSurface>
90017898:	4770      	bx	lr
9001789a:	bf00      	nop
9001789c:	200001bc 	.word	0x200001bc

900178a0 <EwInitIssue>:
900178a0:	b570      	push	{r4, r5, r6, lr}
900178a2:	6b44      	ldr	r4, [r0, #52]	; 0x34
900178a4:	4605      	mov	r5, r0
900178a6:	f7ff fa07 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
900178aa:	b9cc      	cbnz	r4, 900178e0 <EwInitIssue+0x40>
900178ac:	4e29      	ldr	r6, [pc, #164]	; (90017954 <EwInitIssue+0xb4>)
900178ae:	6cf4      	ldr	r4, [r6, #76]	; 0x4c
900178b0:	b30c      	cbz	r4, 900178f6 <EwInitIssue+0x56>
900178b2:	4620      	mov	r0, r4
900178b4:	f7ff f975 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
900178b8:	f104 0328 	add.w	r3, r4, #40	; 0x28
900178bc:	6b32      	ldr	r2, [r6, #48]	; 0x30
900178be:	60e5      	str	r5, [r4, #12]
900178c0:	4620      	mov	r0, r4
900178c2:	6163      	str	r3, [r4, #20]
900178c4:	4413      	add	r3, r2
900178c6:	4924      	ldr	r1, [pc, #144]	; (90017958 <EwInitIssue+0xb8>)
900178c8:	e9c4 3306 	strd	r3, r3, [r4, #24]
900178cc:	2300      	movs	r3, #0
900178ce:	e9c4 3300 	strd	r3, r3, [r4]
900178d2:	60a3      	str	r3, [r4, #8]
900178d4:	6123      	str	r3, [r4, #16]
900178d6:	6223      	str	r3, [r4, #32]
900178d8:	636c      	str	r4, [r5, #52]	; 0x34
900178da:	f7ff f957 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
900178de:	e008      	b.n	900178f2 <EwInitIssue+0x52>
900178e0:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
900178e4:	f104 0128 	add.w	r1, r4, #40	; 0x28
900178e8:	1a9b      	subs	r3, r3, r2
900178ea:	6962      	ldr	r2, [r4, #20]
900178ec:	1a52      	subs	r2, r2, r1
900178ee:	4413      	add	r3, r2
900178f0:	6223      	str	r3, [r4, #32]
900178f2:	4620      	mov	r0, r4
900178f4:	bd70      	pop	{r4, r5, r6, pc}
900178f6:	6b30      	ldr	r0, [r6, #48]	; 0x30
900178f8:	3028      	adds	r0, #40	; 0x28
900178fa:	f00f f9db 	bl	90026cb4 <EwAlloc>
900178fe:	4604      	mov	r4, r0
90017900:	b1c0      	cbz	r0, 90017934 <EwInitIssue+0x94>
90017902:	4a16      	ldr	r2, [pc, #88]	; (9001795c <EwInitIssue+0xbc>)
90017904:	2300      	movs	r3, #0
90017906:	6811      	ldr	r1, [r2, #0]
90017908:	6243      	str	r3, [r0, #36]	; 0x24
9001790a:	6b33      	ldr	r3, [r6, #48]	; 0x30
9001790c:	440b      	add	r3, r1
9001790e:	3328      	adds	r3, #40	; 0x28
90017910:	6013      	str	r3, [r2, #0]
90017912:	4a13      	ldr	r2, [pc, #76]	; (90017960 <EwInitIssue+0xc0>)
90017914:	6811      	ldr	r1, [r2, #0]
90017916:	428b      	cmp	r3, r1
90017918:	4912      	ldr	r1, [pc, #72]	; (90017964 <EwInitIssue+0xc4>)
9001791a:	bfc8      	it	gt
9001791c:	6013      	strgt	r3, [r2, #0]
9001791e:	4a12      	ldr	r2, [pc, #72]	; (90017968 <EwInitIssue+0xc8>)
90017920:	6809      	ldr	r1, [r1, #0]
90017922:	6812      	ldr	r2, [r2, #0]
90017924:	440a      	add	r2, r1
90017926:	4413      	add	r3, r2
90017928:	4a10      	ldr	r2, [pc, #64]	; (9001796c <EwInitIssue+0xcc>)
9001792a:	6811      	ldr	r1, [r2, #0]
9001792c:	428b      	cmp	r3, r1
9001792e:	ddc3      	ble.n	900178b8 <EwInitIssue+0x18>
90017930:	6013      	str	r3, [r2, #0]
90017932:	e7c1      	b.n	900178b8 <EwInitIssue+0x18>
90017934:	2101      	movs	r1, #1
90017936:	4608      	mov	r0, r1
90017938:	f7ff fa24 	bl	90016d84 <EwBidiGetTypesAndLevels+0x30c>
9001793c:	2800      	cmp	r0, #0
9001793e:	d1b6      	bne.n	900178ae <EwInitIssue+0xe>
90017940:	2028      	movs	r0, #40	; 0x28
90017942:	f006 fd37 	bl	9001e3b4 <EwImmediateReclaimMemory>
90017946:	2800      	cmp	r0, #0
90017948:	d1b1      	bne.n	900178ae <EwInitIssue+0xe>
9001794a:	2028      	movs	r0, #40	; 0x28
9001794c:	f005 fd80 	bl	9001d450 <EwError>
90017950:	e7cf      	b.n	900178f2 <EwInitIssue+0x52>
90017952:	bf00      	nop
90017954:	200001bc 	.word	0x200001bc
90017958:	20000214 	.word	0x20000214
9001795c:	200002bc 	.word	0x200002bc
90017960:	200002d8 	.word	0x200002d8
90017964:	200002b8 	.word	0x200002b8
90017968:	200002ac 	.word	0x200002ac
9001796c:	200002c0 	.word	0x200002c0

90017970 <EwAllocTask>:
90017970:	e9d0 3c05 	ldrd	r3, ip, [r0, #20]
90017974:	b5f0      	push	{r4, r5, r6, r7, lr}
90017976:	ebac 0303 	sub.w	r3, ip, r3
9001797a:	460f      	mov	r7, r1
9001797c:	2b13      	cmp	r3, #19
9001797e:	dd14      	ble.n	900179aa <EwAllocTask+0x3a>
90017980:	f1ac 0614 	sub.w	r6, ip, #20
90017984:	6186      	str	r6, [r0, #24]
90017986:	b159      	cbz	r1, 900179a0 <EwAllocTask+0x30>
90017988:	460d      	mov	r5, r1
9001798a:	4634      	mov	r4, r6
9001798c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001798e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90017990:	682b      	ldr	r3, [r5, #0]
90017992:	6023      	str	r3, [r4, #0]
90017994:	683b      	ldr	r3, [r7, #0]
90017996:	f84c 3c14 	str.w	r3, [ip, #-20]
9001799a:	603e      	str	r6, [r7, #0]
9001799c:	4630      	mov	r0, r6
9001799e:	bdf0      	pop	{r4, r5, r6, r7, pc}
900179a0:	6903      	ldr	r3, [r0, #16]
900179a2:	f84c 3c14 	str.w	r3, [ip, #-20]
900179a6:	6106      	str	r6, [r0, #16]
900179a8:	e7f8      	b.n	9001799c <EwAllocTask+0x2c>
900179aa:	2600      	movs	r6, #0
900179ac:	e7f6      	b.n	9001799c <EwAllocTask+0x2c>

900179ae <EwAllocTasks>:
900179ae:	b570      	push	{r4, r5, r6, lr}
900179b0:	4616      	mov	r6, r2
900179b2:	2900      	cmp	r1, #0
900179b4:	4605      	mov	r5, r0
900179b6:	460c      	mov	r4, r1
900179b8:	e9d0 2305 	ldrd	r2, r3, [r0, #20]
900179bc:	f04f 0000 	mov.w	r0, #0
900179c0:	eba3 0202 	sub.w	r2, r3, r2
900179c4:	f04f 0314 	mov.w	r3, #20
900179c8:	fb01 f303 	mul.w	r3, r1, r3
900179cc:	dd03      	ble.n	900179d6 <EwAllocTasks+0x28>
900179ce:	429a      	cmp	r2, r3
900179d0:	db01      	blt.n	900179d6 <EwAllocTasks+0x28>
900179d2:	3c01      	subs	r4, #1
900179d4:	d200      	bcs.n	900179d8 <EwAllocTasks+0x2a>
900179d6:	bd70      	pop	{r4, r5, r6, pc}
900179d8:	4631      	mov	r1, r6
900179da:	4628      	mov	r0, r5
900179dc:	f7ff ffc8 	bl	90017970 <EwAllocTask>
900179e0:	e7f7      	b.n	900179d2 <EwAllocTasks+0x24>

900179e2 <EwAllocTaskData>:
900179e2:	b530      	push	{r4, r5, lr}
900179e4:	e9d0 2405 	ldrd	r2, r4, [r0, #20]
900179e8:	f101 0513 	add.w	r5, r1, #19
900179ec:	1aa3      	subs	r3, r4, r2
900179ee:	429d      	cmp	r5, r3
900179f0:	da0f      	bge.n	90017a12 <EwAllocTaskData+0x30>
900179f2:	69c3      	ldr	r3, [r0, #28]
900179f4:	4411      	add	r1, r2
900179f6:	1b1b      	subs	r3, r3, r4
900179f8:	f100 0428 	add.w	r4, r0, #40	; 0x28
900179fc:	6141      	str	r1, [r0, #20]
900179fe:	1b09      	subs	r1, r1, r4
90017a00:	4419      	add	r1, r3
90017a02:	6a03      	ldr	r3, [r0, #32]
90017a04:	1ac9      	subs	r1, r1, r3
90017a06:	6a43      	ldr	r3, [r0, #36]	; 0x24
90017a08:	428b      	cmp	r3, r1
90017a0a:	da00      	bge.n	90017a0e <EwAllocTaskData+0x2c>
90017a0c:	6241      	str	r1, [r0, #36]	; 0x24
90017a0e:	4610      	mov	r0, r2
90017a10:	bd30      	pop	{r4, r5, pc}
90017a12:	2200      	movs	r2, #0
90017a14:	e7fb      	b.n	90017a0e <EwAllocTaskData+0x2c>

90017a16 <EwFreeTaskData>:
90017a16:	6943      	ldr	r3, [r0, #20]
90017a18:	428b      	cmp	r3, r1
90017a1a:	d904      	bls.n	90017a26 <EwFreeTaskData+0x10>
90017a1c:	f100 0328 	add.w	r3, r0, #40	; 0x28
90017a20:	4299      	cmp	r1, r3
90017a22:	bf28      	it	cs
90017a24:	6141      	strcs	r1, [r0, #20]
90017a26:	4770      	bx	lr

90017a28 <EwFlushTasks>:
90017a28:	b570      	push	{r4, r5, r6, lr}
90017a2a:	b1e8      	cbz	r0, 90017a68 <EwFlushTasks+0x40>
90017a2c:	6b45      	ldr	r5, [r0, #52]	; 0x34
90017a2e:	2d00      	cmp	r5, #0
90017a30:	d03c      	beq.n	90017aac <EwFlushTasks+0x84>
90017a32:	68ec      	ldr	r4, [r5, #12]
90017a34:	2c00      	cmp	r4, #0
90017a36:	d03b      	beq.n	90017ab0 <EwFlushTasks+0x88>
90017a38:	6922      	ldr	r2, [r4, #16]
90017a3a:	68a3      	ldr	r3, [r4, #8]
90017a3c:	4413      	add	r3, r2
90017a3e:	68e2      	ldr	r2, [r4, #12]
90017a40:	429a      	cmp	r2, r3
90017a42:	dd18      	ble.n	90017a76 <EwFlushTasks+0x4e>
90017a44:	4e1b      	ldr	r6, [pc, #108]	; (90017ab4 <EwFlushTasks+0x8c>)
90017a46:	4628      	mov	r0, r5
90017a48:	f7ff f8ab 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90017a4c:	f7ff f934 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017a50:	6922      	ldr	r2, [r4, #16]
90017a52:	68a3      	ldr	r3, [r4, #8]
90017a54:	4413      	add	r3, r2
90017a56:	68e2      	ldr	r2, [r4, #12]
90017a58:	429a      	cmp	r2, r3
90017a5a:	dd08      	ble.n	90017a6e <EwFlushTasks+0x46>
90017a5c:	6df3      	ldr	r3, [r6, #92]	; 0x5c
90017a5e:	b133      	cbz	r3, 90017a6e <EwFlushTasks+0x46>
90017a60:	68d8      	ldr	r0, [r3, #12]
90017a62:	f7ff ffe1 	bl	90017a28 <EwFlushTasks>
90017a66:	e7f1      	b.n	90017a4c <EwFlushTasks+0x24>
90017a68:	4b12      	ldr	r3, [pc, #72]	; (90017ab4 <EwFlushTasks+0x8c>)
90017a6a:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
90017a6c:	e7df      	b.n	90017a2e <EwFlushTasks+0x6>
90017a6e:	4912      	ldr	r1, [pc, #72]	; (90017ab8 <EwFlushTasks+0x90>)
90017a70:	4628      	mov	r0, r5
90017a72:	f7ff f88b 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
90017a76:	4628      	mov	r0, r5
90017a78:	f002 fcfc 	bl	9001a474 <EwEliminateTasks>
90017a7c:	4628      	mov	r0, r5
90017a7e:	f002 fbdd 	bl	9001a23c <EwReorderTasks>
90017a82:	4628      	mov	r0, r5
90017a84:	f7ff f88d 	bl	90016ba2 <EwBidiGetTypesAndLevels+0x12a>
90017a88:	490c      	ldr	r1, [pc, #48]	; (90017abc <EwFlushTasks+0x94>)
90017a8a:	f7ff f87f 	bl	90016b8c <EwBidiGetTypesAndLevels+0x114>
90017a8e:	6923      	ldr	r3, [r4, #16]
90017a90:	2500      	movs	r5, #0
90017a92:	3301      	adds	r3, #1
90017a94:	6365      	str	r5, [r4, #52]	; 0x34
90017a96:	6123      	str	r3, [r4, #16]
90017a98:	68e3      	ldr	r3, [r4, #12]
90017a9a:	3301      	adds	r3, #1
90017a9c:	60e3      	str	r3, [r4, #12]
90017a9e:	f7ff f90b 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017aa2:	4628      	mov	r0, r5
90017aa4:	f7ff f9de 	bl	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
90017aa8:	2001      	movs	r0, #1
90017aaa:	bd70      	pop	{r4, r5, r6, pc}
90017aac:	4628      	mov	r0, r5
90017aae:	e7fc      	b.n	90017aaa <EwFlushTasks+0x82>
90017ab0:	4620      	mov	r0, r4
90017ab2:	e7fa      	b.n	90017aaa <EwFlushTasks+0x82>
90017ab4:	200001bc 	.word	0x200001bc
90017ab8:	20000214 	.word	0x20000214
90017abc:	200001f0 	.word	0x200001f0

90017ac0 <EwDoneIssue>:
90017ac0:	6b41      	ldr	r1, [r0, #52]	; 0x34
90017ac2:	b430      	push	{r4, r5}
90017ac4:	e9d1 3205 	ldrd	r3, r2, [r1, #20]
90017ac8:	69cd      	ldr	r5, [r1, #28]
90017aca:	1ad4      	subs	r4, r2, r3
90017acc:	1aaa      	subs	r2, r5, r2
90017ace:	eb02 75d2 	add.w	r5, r2, r2, lsr #31
90017ad2:	eba4 0465 	sub.w	r4, r4, r5, asr #1
90017ad6:	f101 0528 	add.w	r5, r1, #40	; 0x28
90017ada:	1b5b      	subs	r3, r3, r5
90017adc:	6a0d      	ldr	r5, [r1, #32]
90017ade:	4413      	add	r3, r2
90017ae0:	1b5b      	subs	r3, r3, r5
90017ae2:	6a4d      	ldr	r5, [r1, #36]	; 0x24
90017ae4:	429d      	cmp	r5, r3
90017ae6:	bfb8      	it	lt
90017ae8:	624b      	strlt	r3, [r1, #36]	; 0x24
90017aea:	4b08      	ldr	r3, [pc, #32]	; (90017b0c <EwDoneIssue+0x4c>)
90017aec:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90017aee:	42a3      	cmp	r3, r4
90017af0:	dc06      	bgt.n	90017b00 <EwDoneIssue+0x40>
90017af2:	2314      	movs	r3, #20
90017af4:	fbb2 f2f3 	udiv	r2, r2, r3
90017af8:	4b05      	ldr	r3, [pc, #20]	; (90017b10 <EwDoneIssue+0x50>)
90017afa:	685b      	ldr	r3, [r3, #4]
90017afc:	4293      	cmp	r3, r2
90017afe:	dc02      	bgt.n	90017b06 <EwDoneIssue+0x46>
90017b00:	bc30      	pop	{r4, r5}
90017b02:	f7ff bf91 	b.w	90017a28 <EwFlushTasks>
90017b06:	bc30      	pop	{r4, r5}
90017b08:	4770      	bx	lr
90017b0a:	bf00      	nop
90017b0c:	200001bc 	.word	0x200001bc
90017b10:	20000014 	.word	0x20000014

90017b14 <EwWaitForSurface>:
90017b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017b16:	4605      	mov	r5, r0
90017b18:	460f      	mov	r7, r1
90017b1a:	4e0e      	ldr	r6, [pc, #56]	; (90017b54 <EwWaitForSurface+0x40>)
90017b1c:	f7ff ff84 	bl	90017a28 <EwFlushTasks>
90017b20:	4604      	mov	r4, r0
90017b22:	692b      	ldr	r3, [r5, #16]
90017b24:	b98b      	cbnz	r3, 90017b4a <EwWaitForSurface+0x36>
90017b26:	b19f      	cbz	r7, 90017b50 <EwWaitForSurface+0x3c>
90017b28:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
90017b2c:	429a      	cmp	r2, r3
90017b2e:	dd0f      	ble.n	90017b50 <EwWaitForSurface+0x3c>
90017b30:	6bb3      	ldr	r3, [r6, #56]	; 0x38
90017b32:	b953      	cbnz	r3, 90017b4a <EwWaitForSurface+0x36>
90017b34:	6c33      	ldr	r3, [r6, #64]	; 0x40
90017b36:	b943      	cbnz	r3, 90017b4a <EwWaitForSurface+0x36>
90017b38:	6cb3      	ldr	r3, [r6, #72]	; 0x48
90017b3a:	b933      	cbnz	r3, 90017b4a <EwWaitForSurface+0x36>
90017b3c:	6df3      	ldr	r3, [r6, #92]	; 0x5c
90017b3e:	b13b      	cbz	r3, 90017b50 <EwWaitForSurface+0x3c>
90017b40:	68d8      	ldr	r0, [r3, #12]
90017b42:	f7ff ff71 	bl	90017a28 <EwFlushTasks>
90017b46:	4304      	orrs	r4, r0
90017b48:	e7eb      	b.n	90017b22 <EwWaitForSurface+0xe>
90017b4a:	f7ff f8b5 	bl	90016cb8 <EwBidiGetTypesAndLevels+0x240>
90017b4e:	e7e8      	b.n	90017b22 <EwWaitForSurface+0xe>
90017b50:	4620      	mov	r0, r4
90017b52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017b54:	200001bc 	.word	0x200001bc

90017b58 <EwLockSurface>:
90017b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017b5c:	460f      	mov	r7, r1
90017b5e:	6881      	ldr	r1, [r0, #8]
90017b60:	b089      	sub	sp, #36	; 0x24
90017b62:	469a      	mov	sl, r3
90017b64:	3101      	adds	r1, #1
90017b66:	4604      	mov	r4, r0
90017b68:	f8bd 5054 	ldrh.w	r5, [sp, #84]	; 0x54
90017b6c:	4693      	mov	fp, r2
90017b6e:	6081      	str	r1, [r0, #8]
90017b70:	68c1      	ldr	r1, [r0, #12]
90017b72:	062b      	lsls	r3, r5, #24
90017b74:	f8dd 8048 	ldr.w	r8, [sp, #72]	; 0x48
90017b78:	f101 0101 	add.w	r1, r1, #1
90017b7c:	9e16      	ldr	r6, [sp, #88]	; 0x58
90017b7e:	f8d0 9038 	ldr.w	r9, [r0, #56]	; 0x38
90017b82:	60c1      	str	r1, [r0, #12]
90017b84:	d403      	bmi.n	90017b8e <EwLockSurface+0x36>
90017b86:	f005 010a 	and.w	r1, r5, #10
90017b8a:	f7ff ffc3 	bl	90017b14 <EwWaitForSurface>
90017b8e:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
90017b92:	2000      	movs	r0, #0
90017b94:	3101      	adds	r1, #1
90017b96:	d111      	bne.n	90017bbc <EwLockSurface+0x64>
90017b98:	f005 0102 	and.w	r1, r5, #2
90017b9c:	9005      	str	r0, [sp, #20]
90017b9e:	4653      	mov	r3, sl
90017ba0:	465a      	mov	r2, fp
90017ba2:	9104      	str	r1, [sp, #16]
90017ba4:	f005 0101 	and.w	r1, r5, #1
90017ba8:	e9cd 0606 	strd	r0, r6, [sp, #24]
90017bac:	e9cd 0102 	strd	r0, r1, [sp, #8]
90017bb0:	e9cd 8000 	strd	r8, r0, [sp]
90017bb4:	4639      	mov	r1, r7
90017bb6:	4648      	mov	r0, r9
90017bb8:	f00e fd9c 	bl	900266f4 <GfxLockSurface>
90017bbc:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
90017bc0:	b989      	cbnz	r1, 90017be6 <EwLockSurface+0x8e>
90017bc2:	f005 0002 	and.w	r0, r5, #2
90017bc6:	9105      	str	r1, [sp, #20]
90017bc8:	4653      	mov	r3, sl
90017bca:	465a      	mov	r2, fp
90017bcc:	9004      	str	r0, [sp, #16]
90017bce:	f005 0001 	and.w	r0, r5, #1
90017bd2:	e9cd 1606 	strd	r1, r6, [sp, #24]
90017bd6:	e9cd 1002 	strd	r1, r0, [sp, #8]
90017bda:	e9cd 8100 	strd	r8, r1, [sp]
90017bde:	4648      	mov	r0, r9
90017be0:	4639      	mov	r1, r7
90017be2:	f00e fd87 	bl	900266f4 <GfxLockSurface>
90017be6:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
90017bea:	2902      	cmp	r1, #2
90017bec:	d112      	bne.n	90017c14 <EwLockSurface+0xbc>
90017bee:	f005 0002 	and.w	r0, r5, #2
90017bf2:	2100      	movs	r1, #0
90017bf4:	4653      	mov	r3, sl
90017bf6:	465a      	mov	r2, fp
90017bf8:	9004      	str	r0, [sp, #16]
90017bfa:	f005 0001 	and.w	r0, r5, #1
90017bfe:	9607      	str	r6, [sp, #28]
90017c00:	e9cd 1002 	strd	r1, r0, [sp, #8]
90017c04:	e9cd 1105 	strd	r1, r1, [sp, #20]
90017c08:	e9cd 8100 	strd	r8, r1, [sp]
90017c0c:	4648      	mov	r0, r9
90017c0e:	4639      	mov	r1, r7
90017c10:	f00e fd70 	bl	900266f4 <GfxLockSurface>
90017c14:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
90017c18:	2901      	cmp	r1, #1
90017c1a:	d117      	bne.n	90017c4c <EwLockSurface+0xf4>
90017c1c:	f005 0108 	and.w	r1, r5, #8
90017c20:	9b14      	ldr	r3, [sp, #80]	; 0x50
90017c22:	465a      	mov	r2, fp
90017c24:	4648      	mov	r0, r9
90017c26:	9106      	str	r1, [sp, #24]
90017c28:	f005 0104 	and.w	r1, r5, #4
90017c2c:	9302      	str	r3, [sp, #8]
90017c2e:	9105      	str	r1, [sp, #20]
90017c30:	f005 0102 	and.w	r1, r5, #2
90017c34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90017c36:	9104      	str	r1, [sp, #16]
90017c38:	f005 0101 	and.w	r1, r5, #1
90017c3c:	9607      	str	r6, [sp, #28]
90017c3e:	9103      	str	r1, [sp, #12]
90017c40:	4639      	mov	r1, r7
90017c42:	e9cd 8300 	strd	r8, r3, [sp]
90017c46:	4653      	mov	r3, sl
90017c48:	f00e fd54 	bl	900266f4 <GfxLockSurface>
90017c4c:	f9b4 1020 	ldrsh.w	r1, [r4, #32]
90017c50:	2903      	cmp	r1, #3
90017c52:	d112      	bne.n	90017c7a <EwLockSurface+0x122>
90017c54:	f005 0002 	and.w	r0, r5, #2
90017c58:	2100      	movs	r1, #0
90017c5a:	4653      	mov	r3, sl
90017c5c:	465a      	mov	r2, fp
90017c5e:	9004      	str	r0, [sp, #16]
90017c60:	f005 0001 	and.w	r0, r5, #1
90017c64:	9607      	str	r6, [sp, #28]
90017c66:	e9cd 1002 	strd	r1, r0, [sp, #8]
90017c6a:	e9cd 1105 	strd	r1, r1, [sp, #20]
90017c6e:	e9cd 8100 	strd	r8, r1, [sp]
90017c72:	4648      	mov	r0, r9
90017c74:	4639      	mov	r1, r7
90017c76:	f00e fd3d 	bl	900266f4 <GfxLockSurface>
90017c7a:	b940      	cbnz	r0, 90017c8e <EwLockSurface+0x136>
90017c7c:	68a3      	ldr	r3, [r4, #8]
90017c7e:	3b01      	subs	r3, #1
90017c80:	60a3      	str	r3, [r4, #8]
90017c82:	68e3      	ldr	r3, [r4, #12]
90017c84:	3b01      	subs	r3, #1
90017c86:	60e3      	str	r3, [r4, #12]
90017c88:	b009      	add	sp, #36	; 0x24
90017c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017c8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90017c90:	62f0      	str	r0, [r6, #44]	; 0x2c
90017c92:	2001      	movs	r0, #1
90017c94:	84b3      	strh	r3, [r6, #36]	; 0x24
90017c96:	9b14      	ldr	r3, [sp, #80]	; 0x50
90017c98:	83b7      	strh	r7, [r6, #28]
90017c9a:	f8a6 b01e 	strh.w	fp, [r6, #30]
90017c9e:	f8a6 a020 	strh.w	sl, [r6, #32]
90017ca2:	f8a6 8022 	strh.w	r8, [r6, #34]	; 0x22
90017ca6:	84f3      	strh	r3, [r6, #38]	; 0x26
90017ca8:	8535      	strh	r5, [r6, #40]	; 0x28
90017caa:	e7ed      	b.n	90017c88 <EwLockSurface+0x130>

90017cac <EwLockGlyphCache>:
90017cac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90017cae:	2300      	movs	r3, #0
90017cb0:	e9cd 1203 	strd	r1, r2, [sp, #12]
90017cb4:	e9cd 3301 	strd	r3, r3, [sp, #4]
90017cb8:	f9b0 301e 	ldrsh.w	r3, [r0, #30]
90017cbc:	9300      	str	r3, [sp, #0]
90017cbe:	f9b0 301c 	ldrsh.w	r3, [r0, #28]
90017cc2:	f9b0 2028 	ldrsh.w	r2, [r0, #40]	; 0x28
90017cc6:	f9b0 1026 	ldrsh.w	r1, [r0, #38]	; 0x26
90017cca:	4803      	ldr	r0, [pc, #12]	; (90017cd8 <EwLockGlyphCache+0x2c>)
90017ccc:	6d40      	ldr	r0, [r0, #84]	; 0x54
90017cce:	f7ff ff43 	bl	90017b58 <EwLockSurface>
90017cd2:	b007      	add	sp, #28
90017cd4:	f85d fb04 	ldr.w	pc, [sp], #4
90017cd8:	200001bc 	.word	0x200001bc

90017cdc <EwCleanSurfaceCache>:
90017cdc:	2001      	movs	r0, #1
90017cde:	f7ff b8c1 	b.w	90016e64 <EwBidiGetTypesAndLevels+0x3ec>
90017ce2:	bf00      	nop
90017ce4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017ce8:	2800      	cmp	r0, #0
90017cea:	ea82 77e2 	eor.w	r7, r2, r2, asr #31
90017cee:	ea4f 75d2 	mov.w	r5, r2, lsr #31
90017cf2:	ea4f 74d0 	mov.w	r4, r0, lsr #31
90017cf6:	eba7 77e2 	sub.w	r7, r7, r2, asr #31
90017cfa:	da04      	bge.n	90017d06 <EwCleanSurfaceCache+0x2a>
90017cfc:	4249      	negs	r1, r1
90017cfe:	43c0      	mvns	r0, r0
90017d00:	2900      	cmp	r1, #0
90017d02:	bf08      	it	eq
90017d04:	3001      	addeq	r0, #1
90017d06:	fa1f fc87 	uxth.w	ip, r7
90017d0a:	42a5      	cmp	r5, r4
90017d0c:	fa1f fe80 	uxth.w	lr, r0
90017d10:	ea4f 4811 	mov.w	r8, r1, lsr #16
90017d14:	ea4f 4717 	mov.w	r7, r7, lsr #16
90017d18:	fb0e f20c 	mul.w	r2, lr, ip
90017d1c:	b28e      	uxth	r6, r1
90017d1e:	fb08 f30c 	mul.w	r3, r8, ip
90017d22:	fb08 2207 	mla	r2, r8, r7, r2
90017d26:	ea4f 4010 	mov.w	r0, r0, lsr #16
90017d2a:	fb06 f10c 	mul.w	r1, r6, ip
90017d2e:	fb07 f606 	mul.w	r6, r7, r6
90017d32:	fb0e f707 	mul.w	r7, lr, r7
90017d36:	eb02 4216 	add.w	r2, r2, r6, lsr #16
90017d3a:	fb0c f000 	mul.w	r0, ip, r0
90017d3e:	eb02 4213 	add.w	r2, r2, r3, lsr #16
90017d42:	eb02 4207 	add.w	r2, r2, r7, lsl #16
90017d46:	eb02 4200 	add.w	r2, r2, r0, lsl #16
90017d4a:	b298      	uxth	r0, r3
90017d4c:	ea4f 4303 	mov.w	r3, r3, lsl #16
90017d50:	eb00 4011 	add.w	r0, r0, r1, lsr #16
90017d54:	fa10 f086 	uxtah	r0, r0, r6
90017d58:	eb02 4210 	add.w	r2, r2, r0, lsr #16
90017d5c:	eb03 4006 	add.w	r0, r3, r6, lsl #16
90017d60:	4408      	add	r0, r1
90017d62:	ea4f 70d0 	mov.w	r0, r0, lsr #31
90017d66:	ea40 0042 	orr.w	r0, r0, r2, lsl #1
90017d6a:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
90017d6e:	bf18      	it	ne
90017d70:	4240      	negne	r0, r0
90017d72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017d76:	b5f0      	push	{r4, r5, r6, r7, lr}
90017d78:	ea81 73e1 	eor.w	r3, r1, r1, asr #31
90017d7c:	4604      	mov	r4, r0
90017d7e:	ea80 70e0 	eor.w	r0, r0, r0, asr #31
90017d82:	eba3 73e1 	sub.w	r3, r3, r1, asr #31
90017d86:	eba0 70e4 	sub.w	r0, r0, r4, asr #31
90017d8a:	b29a      	uxth	r2, r3
90017d8c:	b286      	uxth	r6, r0
90017d8e:	0c00      	lsrs	r0, r0, #16
90017d90:	0fcd      	lsrs	r5, r1, #31
90017d92:	fb00 f702 	mul.w	r7, r0, r2
90017d96:	0c19      	lsrs	r1, r3, #16
90017d98:	ebb5 7fd4 	cmp.w	r5, r4, lsr #31
90017d9c:	fb01 f306 	mul.w	r3, r1, r6
90017da0:	fb02 f606 	mul.w	r6, r2, r6
90017da4:	b2ba      	uxth	r2, r7
90017da6:	eb02 4216 	add.w	r2, r2, r6, lsr #16
90017daa:	fa12 f283 	uxtah	r2, r2, r3
90017dae:	ea4f 4313 	mov.w	r3, r3, lsr #16
90017db2:	eb03 4317 	add.w	r3, r3, r7, lsr #16
90017db6:	fb00 3301 	mla	r3, r0, r1, r3
90017dba:	eb03 4312 	add.w	r3, r3, r2, lsr #16
90017dbe:	ea4f 0043 	mov.w	r0, r3, lsl #1
90017dc2:	bf18      	it	ne
90017dc4:	4240      	negne	r0, r0
90017dc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017dcc:	b08d      	sub	sp, #52	; 0x34
90017dce:	4688      	mov	r8, r1
90017dd0:	f04f 0b00 	mov.w	fp, #0
90017dd4:	f04f 3aff 	mov.w	sl, #4294967295
90017dd8:	9201      	str	r2, [sp, #4]
90017dda:	9309      	str	r3, [sp, #36]	; 0x24
90017ddc:	9003      	str	r0, [sp, #12]
90017dde:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
90017de2:	f022 020f 	bic.w	r2, r2, #15
90017de6:	f102 010e 	add.w	r1, r2, #14
90017dea:	1c95      	adds	r5, r2, #2
90017dec:	3212      	adds	r2, #18
90017dee:	9104      	str	r1, [sp, #16]
90017df0:	9901      	ldr	r1, [sp, #4]
90017df2:	920b      	str	r2, [sp, #44]	; 0x2c
90017df4:	ea4f 1c01 	mov.w	ip, r1, lsl #4
90017df8:	681a      	ldr	r2, [r3, #0]
90017dfa:	2a00      	cmp	r2, #0
90017dfc:	dc2f      	bgt.n	90017e5e <EwCleanSurfaceCache+0x182>
90017dfe:	ea4f 142c 	mov.w	r4, ip, asr #4
90017e02:	ea4f 162a 	mov.w	r6, sl, asr #4
90017e06:	f1bb 0f00 	cmp.w	fp, #0
90017e0a:	f000 8095 	beq.w	90017f38 <EwCleanSurfaceCache+0x25c>
90017e0e:	2c00      	cmp	r4, #0
90017e10:	f000 8092 	beq.w	90017f38 <EwCleanSurfaceCache+0x25c>
90017e14:	ea8b 71eb 	eor.w	r1, fp, fp, asr #31
90017e18:	2500      	movs	r5, #0
90017e1a:	4622      	mov	r2, r4
90017e1c:	9803      	ldr	r0, [sp, #12]
90017e1e:	eba1 71eb 	sub.w	r1, r1, fp, asr #31
90017e22:	2903      	cmp	r1, #3
90017e24:	bfd6      	itet	le
90017e26:	0189      	lslle	r1, r1, #6
90017e28:	21ff      	movgt	r1, #255	; 0xff
90017e2a:	b2c9      	uxtble	r1, r1
90017e2c:	f00e ff6e 	bl	90026d0c <EwFill>
90017e30:	1c73      	adds	r3, r6, #1
90017e32:	9304      	str	r3, [sp, #16]
90017e34:	f108 0304 	add.w	r3, r8, #4
90017e38:	42b4      	cmp	r4, r6
90017e3a:	dd7f      	ble.n	90017f3c <EwCleanSurfaceCache+0x260>
90017e3c:	f1bb 0f00 	cmp.w	fp, #0
90017e40:	f000 8105 	beq.w	9001804e <EwCleanSurfaceCache+0x372>
90017e44:	42b5      	cmp	r5, r6
90017e46:	f300 80eb 	bgt.w	90018020 <EwCleanSurfaceCache+0x344>
90017e4a:	9b01      	ldr	r3, [sp, #4]
90017e4c:	429c      	cmp	r4, r3
90017e4e:	f2c0 80eb 	blt.w	90018028 <EwCleanSurfaceCache+0x34c>
90017e52:	9b18      	ldr	r3, [sp, #96]	; 0x60
90017e54:	b103      	cbz	r3, 90017e58 <EwCleanSurfaceCache+0x17c>
90017e56:	601d      	str	r5, [r3, #0]
90017e58:	1b70      	subs	r0, r6, r5
90017e5a:	3001      	adds	r0, #1
90017e5c:	e0fb      	b.n	90018056 <EwCleanSurfaceCache+0x37a>
90017e5e:	f102 0901 	add.w	r9, r2, #1
90017e62:	6899      	ldr	r1, [r3, #8]
90017e64:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
90017e68:	3310      	adds	r3, #16
90017e6a:	454b      	cmp	r3, r9
90017e6c:	d901      	bls.n	90017e72 <EwCleanSurfaceCache+0x196>
90017e6e:	3b04      	subs	r3, #4
90017e70:	e7c2      	b.n	90017df8 <EwCleanSurfaceCache+0x11c>
90017e72:	42a9      	cmp	r1, r5
90017e74:	681a      	ldr	r2, [r3, #0]
90017e76:	da2b      	bge.n	90017ed0 <EwCleanSurfaceCache+0x1f4>
90017e78:	4295      	cmp	r5, r2
90017e7a:	dd29      	ble.n	90017ed0 <EwCleanSurfaceCache+0x1f4>
90017e7c:	4619      	mov	r1, r3
90017e7e:	42aa      	cmp	r2, r5
90017e80:	460b      	mov	r3, r1
90017e82:	da01      	bge.n	90017e88 <EwCleanSurfaceCache+0x1ac>
90017e84:	4549      	cmp	r1, r9
90017e86:	d320      	bcc.n	90017eca <EwCleanSurfaceCache+0x1ee>
90017e88:	f851 1c08 	ldr.w	r1, [r1, #-8]
90017e8c:	f853 6c0c 	ldr.w	r6, [r3, #-12]
90017e90:	9809      	ldr	r0, [sp, #36]	; 0x24
90017e92:	1a30      	subs	r0, r6, r0
90017e94:	9007      	str	r0, [sp, #28]
90017e96:	4291      	cmp	r1, r2
90017e98:	bfb4      	ite	lt
90017e9a:	2001      	movlt	r0, #1
90017e9c:	f04f 30ff 	movge.w	r0, #4294967295
90017ea0:	9005      	str	r0, [sp, #20]
90017ea2:	f8bd 0014 	ldrh.w	r0, [sp, #20]
90017ea6:	9006      	str	r0, [sp, #24]
90017ea8:	f853 0c04 	ldr.w	r0, [r3, #-4]
90017eac:	1b80      	subs	r0, r0, r6
90017eae:	1a6e      	subs	r6, r5, r1
90017eb0:	0084      	lsls	r4, r0, #2
90017eb2:	4370      	muls	r0, r6
90017eb4:	9408      	str	r4, [sp, #32]
90017eb6:	462c      	mov	r4, r5
90017eb8:	9002      	str	r0, [sp, #8]
90017eba:	1a50      	subs	r0, r2, r1
90017ebc:	900a      	str	r0, [sp, #40]	; 0x28
90017ebe:	980b      	ldr	r0, [sp, #44]	; 0x2c
90017ec0:	42a0      	cmp	r0, r4
90017ec2:	d112      	bne.n	90017eea <EwCleanSurfaceCache+0x20e>
90017ec4:	3308      	adds	r3, #8
90017ec6:	4611      	mov	r1, r2
90017ec8:	e7cf      	b.n	90017e6a <EwCleanSurfaceCache+0x18e>
90017eca:	f851 2f08 	ldr.w	r2, [r1, #8]!
90017ece:	e7d6      	b.n	90017e7e <EwCleanSurfaceCache+0x1a2>
90017ed0:	9804      	ldr	r0, [sp, #16]
90017ed2:	4281      	cmp	r1, r0
90017ed4:	ddda      	ble.n	90017e8c <EwCleanSurfaceCache+0x1b0>
90017ed6:	4619      	mov	r1, r3
90017ed8:	9804      	ldr	r0, [sp, #16]
90017eda:	460b      	mov	r3, r1
90017edc:	4282      	cmp	r2, r0
90017ede:	ddd3      	ble.n	90017e88 <EwCleanSurfaceCache+0x1ac>
90017ee0:	4549      	cmp	r1, r9
90017ee2:	d2d1      	bcs.n	90017e88 <EwCleanSurfaceCache+0x1ac>
90017ee4:	f851 2f08 	ldr.w	r2, [r1, #8]!
90017ee8:	e7f6      	b.n	90017ed8 <EwCleanSurfaceCache+0x1fc>
90017eea:	42a1      	cmp	r1, r4
90017eec:	f300 808e 	bgt.w	9001800c <EwCleanSurfaceCache+0x330>
90017ef0:	42a2      	cmp	r2, r4
90017ef2:	dd08      	ble.n	90017f06 <EwCleanSurfaceCache+0x22a>
90017ef4:	980a      	ldr	r0, [sp, #40]	; 0x28
90017ef6:	9e02      	ldr	r6, [sp, #8]
90017ef8:	9f07      	ldr	r7, [sp, #28]
90017efa:	fb96 f0f0 	sdiv	r0, r6, r0
90017efe:	19c0      	adds	r0, r0, r7
90017f00:	d507      	bpl.n	90017f12 <EwCleanSurfaceCache+0x236>
90017f02:	9805      	ldr	r0, [sp, #20]
90017f04:	4483      	add	fp, r0
90017f06:	9e02      	ldr	r6, [sp, #8]
90017f08:	3404      	adds	r4, #4
90017f0a:	9808      	ldr	r0, [sp, #32]
90017f0c:	4406      	add	r6, r0
90017f0e:	9602      	str	r6, [sp, #8]
90017f10:	e7d5      	b.n	90017ebe <EwCleanSurfaceCache+0x1e2>
90017f12:	9f01      	ldr	r7, [sp, #4]
90017f14:	ebb7 1f20 	cmp.w	r7, r0, asr #4
90017f18:	ddf5      	ble.n	90017f06 <EwCleanSurfaceCache+0x22a>
90017f1a:	ea4f 0ea0 	mov.w	lr, r0, asr #2
90017f1e:	4584      	cmp	ip, r0
90017f20:	9f06      	ldr	r7, [sp, #24]
90017f22:	f838 601e 	ldrh.w	r6, [r8, lr, lsl #1]
90017f26:	bfa8      	it	ge
90017f28:	4684      	movge	ip, r0
90017f2a:	4582      	cmp	sl, r0
90017f2c:	443e      	add	r6, r7
90017f2e:	bfb8      	it	lt
90017f30:	4682      	movlt	sl, r0
90017f32:	f828 601e 	strh.w	r6, [r8, lr, lsl #1]
90017f36:	e7e6      	b.n	90017f06 <EwCleanSurfaceCache+0x22a>
90017f38:	4625      	mov	r5, r4
90017f3a:	e779      	b.n	90017e30 <EwCleanSurfaceCache+0x154>
90017f3c:	eb08 02c4 	add.w	r2, r8, r4, lsl #3
90017f40:	f858 9034 	ldr.w	r9, [r8, r4, lsl #3]
90017f44:	4627      	mov	r7, r4
90017f46:	6852      	ldr	r2, [r2, #4]
90017f48:	9202      	str	r2, [sp, #8]
90017f4a:	f107 0a01 	add.w	sl, r7, #1
90017f4e:	f1b9 0f00 	cmp.w	r9, #0
90017f52:	d15f      	bne.n	90018014 <EwCleanSurfaceCache+0x338>
90017f54:	9a02      	ldr	r2, [sp, #8]
90017f56:	2a00      	cmp	r2, #0
90017f58:	d15c      	bne.n	90018014 <EwCleanSurfaceCache+0x338>
90017f5a:	9a04      	ldr	r2, [sp, #16]
90017f5c:	4552      	cmp	r2, sl
90017f5e:	d14e      	bne.n	90017ffe <EwCleanSurfaceCache+0x322>
90017f60:	f1bb 0f00 	cmp.w	fp, #0
90017f64:	d049      	beq.n	90017ffa <EwCleanSurfaceCache+0x31e>
90017f66:	42a7      	cmp	r7, r4
90017f68:	dd47      	ble.n	90017ffa <EwCleanSurfaceCache+0x31e>
90017f6a:	ea8b 71eb 	eor.w	r1, fp, fp, asr #31
90017f6e:	9305      	str	r3, [sp, #20]
90017f70:	9b03      	ldr	r3, [sp, #12]
90017f72:	1b3a      	subs	r2, r7, r4
90017f74:	eba1 71eb 	sub.w	r1, r1, fp, asr #31
90017f78:	1918      	adds	r0, r3, r4
90017f7a:	2903      	cmp	r1, #3
90017f7c:	bfd4      	ite	le
90017f7e:	0189      	lslle	r1, r1, #6
90017f80:	21ff      	movgt	r1, #255	; 0xff
90017f82:	b2c9      	uxtb	r1, r1
90017f84:	f00e fec2 	bl	90026d0c <EwFill>
90017f88:	9b02      	ldr	r3, [sp, #8]
90017f8a:	ea53 0309 	orrs.w	r3, r3, r9
90017f8e:	9b05      	ldr	r3, [sp, #20]
90017f90:	d033      	beq.n	90017ffa <EwCleanSurfaceCache+0x31e>
90017f92:	fa0b f189 	sxtah	r1, fp, r9
90017f96:	eb01 4929 	add.w	r9, r1, r9, asr #16
90017f9a:	ea81 70e1 	eor.w	r0, r1, r1, asr #31
90017f9e:	ea89 72e9 	eor.w	r2, r9, r9, asr #31
90017fa2:	eba0 70e1 	sub.w	r0, r0, r1, asr #31
90017fa6:	9902      	ldr	r1, [sp, #8]
90017fa8:	eba2 72e9 	sub.w	r2, r2, r9, asr #31
90017fac:	fa09 f981 	sxtah	r9, r9, r1
90017fb0:	2a04      	cmp	r2, #4
90017fb2:	ea89 71e9 	eor.w	r1, r9, r9, asr #31
90017fb6:	bfa8      	it	ge
90017fb8:	2204      	movge	r2, #4
90017fba:	eba1 71e9 	sub.w	r1, r1, r9, asr #31
90017fbe:	2804      	cmp	r0, #4
90017fc0:	bfd4      	ite	le
90017fc2:	1812      	addle	r2, r2, r0
90017fc4:	3204      	addgt	r2, #4
90017fc6:	2904      	cmp	r1, #4
90017fc8:	bfd4      	ite	le
90017fca:	1852      	addle	r2, r2, r1
90017fcc:	3204      	addgt	r2, #4
90017fce:	9902      	ldr	r1, [sp, #8]
90017fd0:	eb09 4b21 	add.w	fp, r9, r1, asr #16
90017fd4:	ea8b 71eb 	eor.w	r1, fp, fp, asr #31
90017fd8:	eba1 71eb 	sub.w	r1, r1, fp, asr #31
90017fdc:	2904      	cmp	r1, #4
90017fde:	bfd4      	ite	le
90017fe0:	1852      	addle	r2, r2, r1
90017fe2:	3204      	addgt	r2, #4
90017fe4:	b11a      	cbz	r2, 90017fee <EwCleanSurfaceCache+0x312>
90017fe6:	0112      	lsls	r2, r2, #4
90017fe8:	9903      	ldr	r1, [sp, #12]
90017fea:	3a01      	subs	r2, #1
90017fec:	55ca      	strb	r2, [r1, r7]
90017fee:	2200      	movs	r2, #0
90017ff0:	f848 2037 	str.w	r2, [r8, r7, lsl #3]
90017ff4:	eb08 07c7 	add.w	r7, r8, r7, lsl #3
90017ff8:	607a      	str	r2, [r7, #4]
90017ffa:	4654      	mov	r4, sl
90017ffc:	e71c      	b.n	90017e38 <EwCleanSurfaceCache+0x15c>
90017ffe:	f853 203a 	ldr.w	r2, [r3, sl, lsl #3]
90018002:	4657      	mov	r7, sl
90018004:	f858 903a 	ldr.w	r9, [r8, sl, lsl #3]
90018008:	9202      	str	r2, [sp, #8]
9001800a:	e79e      	b.n	90017f4a <EwCleanSurfaceCache+0x26e>
9001800c:	42a2      	cmp	r2, r4
9001800e:	f77f af71 	ble.w	90017ef4 <EwCleanSurfaceCache+0x218>
90018012:	e778      	b.n	90017f06 <EwCleanSurfaceCache+0x22a>
90018014:	f1bb 0f00 	cmp.w	fp, #0
90018018:	d0bb      	beq.n	90017f92 <EwCleanSurfaceCache+0x2b6>
9001801a:	42a7      	cmp	r7, r4
9001801c:	ddb9      	ble.n	90017f92 <EwCleanSurfaceCache+0x2b6>
9001801e:	e7a4      	b.n	90017f6a <EwCleanSurfaceCache+0x28e>
90018020:	9b01      	ldr	r3, [sp, #4]
90018022:	2b00      	cmp	r3, #0
90018024:	dd16      	ble.n	90018054 <EwCleanSurfaceCache+0x378>
90018026:	2400      	movs	r4, #0
90018028:	ea8b 71eb 	eor.w	r1, fp, fp, asr #31
9001802c:	9b01      	ldr	r3, [sp, #4]
9001802e:	eba1 71eb 	sub.w	r1, r1, fp, asr #31
90018032:	1b1a      	subs	r2, r3, r4
90018034:	9b03      	ldr	r3, [sp, #12]
90018036:	2903      	cmp	r1, #3
90018038:	4423      	add	r3, r4
9001803a:	bfd4      	ite	le
9001803c:	0189      	lslle	r1, r1, #6
9001803e:	21ff      	movgt	r1, #255	; 0xff
90018040:	4618      	mov	r0, r3
90018042:	bfd8      	it	le
90018044:	b2c9      	uxtble	r1, r1
90018046:	f00e fe61 	bl	90026d0c <EwFill>
9001804a:	9b01      	ldr	r3, [sp, #4]
9001804c:	1e5e      	subs	r6, r3, #1
9001804e:	42ae      	cmp	r6, r5
90018050:	f6bf aeff 	bge.w	90017e52 <EwCleanSurfaceCache+0x176>
90018054:	2000      	movs	r0, #0
90018056:	b00d      	add	sp, #52	; 0x34
90018058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001805c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018060:	b087      	sub	sp, #28
90018062:	468a      	mov	sl, r1
90018064:	f04f 0b00 	mov.w	fp, #0
90018068:	f04f 35ff 	mov.w	r5, #4294967295
9001806c:	f64f 79ff 	movw	r9, #65535	; 0xffff
90018070:	9003      	str	r0, [sp, #12]
90018072:	e9cd 2301 	strd	r2, r3, [sp, #4]
90018076:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
9001807a:	9901      	ldr	r1, [sp, #4]
9001807c:	f022 020f 	bic.w	r2, r2, #15
90018080:	ea4f 1801 	mov.w	r8, r1, lsl #4
90018084:	3208      	adds	r2, #8
90018086:	681f      	ldr	r7, [r3, #0]
90018088:	2f00      	cmp	r7, #0
9001808a:	dc27      	bgt.n	900180dc <EwCleanSurfaceCache+0x400>
9001808c:	ea4f 1428 	mov.w	r4, r8, asr #4
90018090:	112d      	asrs	r5, r5, #4
90018092:	f1bb 0f00 	cmp.w	fp, #0
90018096:	d073      	beq.n	90018180 <EwCleanSurfaceCache+0x4a4>
90018098:	2c00      	cmp	r4, #0
9001809a:	d071      	beq.n	90018180 <EwCleanSurfaceCache+0x4a4>
9001809c:	f04f 0900 	mov.w	r9, #0
900180a0:	4622      	mov	r2, r4
900180a2:	21ff      	movs	r1, #255	; 0xff
900180a4:	9803      	ldr	r0, [sp, #12]
900180a6:	f00e fe31 	bl	90026d0c <EwFill>
900180aa:	1c6b      	adds	r3, r5, #1
900180ac:	9304      	str	r3, [sp, #16]
900180ae:	f10a 0304 	add.w	r3, sl, #4
900180b2:	42ac      	cmp	r4, r5
900180b4:	dd66      	ble.n	90018184 <EwCleanSurfaceCache+0x4a8>
900180b6:	f1bb 0f00 	cmp.w	fp, #0
900180ba:	f000 80cc 	beq.w	90018256 <EwCleanSurfaceCache+0x57a>
900180be:	45a9      	cmp	r9, r5
900180c0:	f300 80bb 	bgt.w	9001823a <EwCleanSurfaceCache+0x55e>
900180c4:	9b01      	ldr	r3, [sp, #4]
900180c6:	429c      	cmp	r4, r3
900180c8:	f2c0 80bb 	blt.w	90018242 <EwCleanSurfaceCache+0x566>
900180cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
900180ce:	b10b      	cbz	r3, 900180d4 <EwCleanSurfaceCache+0x3f8>
900180d0:	f8c3 9000 	str.w	r9, [r3]
900180d4:	eba5 0009 	sub.w	r0, r5, r9
900180d8:	3001      	adds	r0, #1
900180da:	e0c0      	b.n	9001825e <EwCleanSurfaceCache+0x582>
900180dc:	3701      	adds	r7, #1
900180de:	689e      	ldr	r6, [r3, #8]
900180e0:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
900180e4:	3310      	adds	r3, #16
900180e6:	42bb      	cmp	r3, r7
900180e8:	d901      	bls.n	900180ee <EwCleanSurfaceCache+0x412>
900180ea:	3b04      	subs	r3, #4
900180ec:	e7cb      	b.n	90018086 <EwCleanSurfaceCache+0x3aa>
900180ee:	4296      	cmp	r6, r2
900180f0:	6819      	ldr	r1, [r3, #0]
900180f2:	da64      	bge.n	900181be <EwCleanSurfaceCache+0x4e2>
900180f4:	428a      	cmp	r2, r1
900180f6:	dd13      	ble.n	90018120 <EwCleanSurfaceCache+0x444>
900180f8:	4618      	mov	r0, r3
900180fa:	4291      	cmp	r1, r2
900180fc:	4603      	mov	r3, r0
900180fe:	da01      	bge.n	90018104 <EwCleanSurfaceCache+0x428>
90018100:	42b8      	cmp	r0, r7
90018102:	d308      	bcc.n	90018116 <EwCleanSurfaceCache+0x43a>
90018104:	f850 6c08 	ldr.w	r6, [r0, #-8]
90018108:	4296      	cmp	r6, r2
9001810a:	db07      	blt.n	9001811c <EwCleanSurfaceCache+0x440>
9001810c:	428a      	cmp	r2, r1
9001810e:	dc07      	bgt.n	90018120 <EwCleanSurfaceCache+0x444>
90018110:	3308      	adds	r3, #8
90018112:	460e      	mov	r6, r1
90018114:	e7e7      	b.n	900180e6 <EwCleanSurfaceCache+0x40a>
90018116:	f850 1f08 	ldr.w	r1, [r0, #8]!
9001811a:	e7ee      	b.n	900180fa <EwCleanSurfaceCache+0x41e>
9001811c:	4291      	cmp	r1, r2
9001811e:	dbf7      	blt.n	90018110 <EwCleanSurfaceCache+0x434>
90018120:	f853 0c0c 	ldr.w	r0, [r3, #-12]
90018124:	eba2 0c06 	sub.w	ip, r2, r6
90018128:	f853 4c04 	ldr.w	r4, [r3, #-4]
9001812c:	1a24      	subs	r4, r4, r0
9001812e:	fb0c f404 	mul.w	r4, ip, r4
90018132:	eba1 0c06 	sub.w	ip, r1, r6
90018136:	fb94 fcfc 	sdiv	ip, r4, ip
9001813a:	9c02      	ldr	r4, [sp, #8]
9001813c:	1b00      	subs	r0, r0, r4
9001813e:	eb1c 0400 	adds.w	r4, ip, r0
90018142:	d506      	bpl.n	90018152 <EwCleanSurfaceCache+0x476>
90018144:	428e      	cmp	r6, r1
90018146:	bfb4      	ite	lt
90018148:	2601      	movlt	r6, #1
9001814a:	f04f 36ff 	movge.w	r6, #4294967295
9001814e:	44b3      	add	fp, r6
90018150:	e7de      	b.n	90018110 <EwCleanSurfaceCache+0x434>
90018152:	9801      	ldr	r0, [sp, #4]
90018154:	ebb0 1f24 	cmp.w	r0, r4, asr #4
90018158:	ddda      	ble.n	90018110 <EwCleanSurfaceCache+0x434>
9001815a:	ea4f 0ca4 	mov.w	ip, r4, asr #2
9001815e:	428e      	cmp	r6, r1
90018160:	bfac      	ite	ge
90018162:	46ce      	movge	lr, r9
90018164:	f04f 0e01 	movlt.w	lr, #1
90018168:	45a0      	cmp	r8, r4
9001816a:	f83a 001c 	ldrh.w	r0, [sl, ip, lsl #1]
9001816e:	bfa8      	it	ge
90018170:	46a0      	movge	r8, r4
90018172:	42a5      	cmp	r5, r4
90018174:	4470      	add	r0, lr
90018176:	bfb8      	it	lt
90018178:	4625      	movlt	r5, r4
9001817a:	f82a 001c 	strh.w	r0, [sl, ip, lsl #1]
9001817e:	e7c7      	b.n	90018110 <EwCleanSurfaceCache+0x434>
90018180:	46a1      	mov	r9, r4
90018182:	e792      	b.n	900180aa <EwCleanSurfaceCache+0x3ce>
90018184:	eb0a 02c4 	add.w	r2, sl, r4, lsl #3
90018188:	f85a 6034 	ldr.w	r6, [sl, r4, lsl #3]
9001818c:	4627      	mov	r7, r4
9001818e:	f8d2 8004 	ldr.w	r8, [r2, #4]
90018192:	1c7a      	adds	r2, r7, #1
90018194:	9202      	str	r2, [sp, #8]
90018196:	b9f6      	cbnz	r6, 900181d6 <EwCleanSurfaceCache+0x4fa>
90018198:	f1b8 0f00 	cmp.w	r8, #0
9001819c:	d11b      	bne.n	900181d6 <EwCleanSurfaceCache+0x4fa>
9001819e:	9904      	ldr	r1, [sp, #16]
900181a0:	428a      	cmp	r2, r1
900181a2:	d105      	bne.n	900181b0 <EwCleanSurfaceCache+0x4d4>
900181a4:	f1bb 0f00 	cmp.w	fp, #0
900181a8:	d045      	beq.n	90018236 <EwCleanSurfaceCache+0x55a>
900181aa:	42a7      	cmp	r7, r4
900181ac:	dd43      	ble.n	90018236 <EwCleanSurfaceCache+0x55a>
900181ae:	e017      	b.n	900181e0 <EwCleanSurfaceCache+0x504>
900181b0:	9a02      	ldr	r2, [sp, #8]
900181b2:	f85a 6032 	ldr.w	r6, [sl, r2, lsl #3]
900181b6:	4617      	mov	r7, r2
900181b8:	f853 8032 	ldr.w	r8, [r3, r2, lsl #3]
900181bc:	e7e9      	b.n	90018192 <EwCleanSurfaceCache+0x4b6>
900181be:	dda5      	ble.n	9001810c <EwCleanSurfaceCache+0x430>
900181c0:	428a      	cmp	r2, r1
900181c2:	daa3      	bge.n	9001810c <EwCleanSurfaceCache+0x430>
900181c4:	4618      	mov	r0, r3
900181c6:	4291      	cmp	r1, r2
900181c8:	4603      	mov	r3, r0
900181ca:	dd9b      	ble.n	90018104 <EwCleanSurfaceCache+0x428>
900181cc:	42b8      	cmp	r0, r7
900181ce:	d299      	bcs.n	90018104 <EwCleanSurfaceCache+0x428>
900181d0:	f850 1f08 	ldr.w	r1, [r0, #8]!
900181d4:	e7f7      	b.n	900181c6 <EwCleanSurfaceCache+0x4ea>
900181d6:	f1bb 0f00 	cmp.w	fp, #0
900181da:	d00c      	beq.n	900181f6 <EwCleanSurfaceCache+0x51a>
900181dc:	42a7      	cmp	r7, r4
900181de:	dd0a      	ble.n	900181f6 <EwCleanSurfaceCache+0x51a>
900181e0:	9305      	str	r3, [sp, #20]
900181e2:	1b3a      	subs	r2, r7, r4
900181e4:	9b03      	ldr	r3, [sp, #12]
900181e6:	21ff      	movs	r1, #255	; 0xff
900181e8:	1918      	adds	r0, r3, r4
900181ea:	f00e fd8f 	bl	90026d0c <EwFill>
900181ee:	ea56 0308 	orrs.w	r3, r6, r8
900181f2:	9b05      	ldr	r3, [sp, #20]
900181f4:	d01f      	beq.n	90018236 <EwCleanSurfaceCache+0x55a>
900181f6:	fa0b f186 	sxtah	r1, fp, r6
900181fa:	eb11 4626 	adds.w	r6, r1, r6, asr #16
900181fe:	bf14      	ite	ne
90018200:	2201      	movne	r2, #1
90018202:	2200      	moveq	r2, #0
90018204:	fa06 f688 	sxtah	r6, r6, r8
90018208:	2900      	cmp	r1, #0
9001820a:	bf18      	it	ne
9001820c:	3201      	addne	r2, #1
9001820e:	2e00      	cmp	r6, #0
90018210:	bf18      	it	ne
90018212:	3201      	addne	r2, #1
90018214:	eb16 4b28 	adds.w	fp, r6, r8, asr #16
90018218:	bf14      	ite	ne
9001821a:	2101      	movne	r1, #1
9001821c:	2100      	moveq	r1, #0
9001821e:	440a      	add	r2, r1
90018220:	2a02      	cmp	r2, #2
90018222:	bfc2      	ittt	gt
90018224:	22ff      	movgt	r2, #255	; 0xff
90018226:	9903      	ldrgt	r1, [sp, #12]
90018228:	55ca      	strbgt	r2, [r1, r7]
9001822a:	2200      	movs	r2, #0
9001822c:	f84a 2037 	str.w	r2, [sl, r7, lsl #3]
90018230:	eb0a 07c7 	add.w	r7, sl, r7, lsl #3
90018234:	607a      	str	r2, [r7, #4]
90018236:	9c02      	ldr	r4, [sp, #8]
90018238:	e73b      	b.n	900180b2 <EwCleanSurfaceCache+0x3d6>
9001823a:	9b01      	ldr	r3, [sp, #4]
9001823c:	2b00      	cmp	r3, #0
9001823e:	dd0d      	ble.n	9001825c <EwCleanSurfaceCache+0x580>
90018240:	2400      	movs	r4, #0
90018242:	9b01      	ldr	r3, [sp, #4]
90018244:	21ff      	movs	r1, #255	; 0xff
90018246:	1b1a      	subs	r2, r3, r4
90018248:	9b03      	ldr	r3, [sp, #12]
9001824a:	4423      	add	r3, r4
9001824c:	4618      	mov	r0, r3
9001824e:	f00e fd5d 	bl	90026d0c <EwFill>
90018252:	9b01      	ldr	r3, [sp, #4]
90018254:	1e5d      	subs	r5, r3, #1
90018256:	454d      	cmp	r5, r9
90018258:	f6bf af38 	bge.w	900180cc <EwCleanSurfaceCache+0x3f0>
9001825c:	2000      	movs	r0, #0
9001825e:	b007      	add	sp, #28
90018260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018268:	b08b      	sub	sp, #44	; 0x2c
9001826a:	f04f 0b00 	mov.w	fp, #0
9001826e:	f04f 38ff 	mov.w	r8, #4294967295
90018272:	9201      	str	r2, [sp, #4]
90018274:	9307      	str	r3, [sp, #28]
90018276:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
9001827a:	e9cd 1002 	strd	r1, r0, [sp, #8]
9001827e:	f022 020f 	bic.w	r2, r2, #15
90018282:	9901      	ldr	r1, [sp, #4]
90018284:	1c95      	adds	r5, r2, #2
90018286:	f102 090e 	add.w	r9, r2, #14
9001828a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
9001828e:	3212      	adds	r2, #18
90018290:	9209      	str	r2, [sp, #36]	; 0x24
90018292:	681a      	ldr	r2, [r3, #0]
90018294:	2a00      	cmp	r2, #0
90018296:	dc2d      	bgt.n	900182f4 <EwCleanSurfaceCache+0x618>
90018298:	ea4f 142e 	mov.w	r4, lr, asr #4
9001829c:	ea4f 1628 	mov.w	r6, r8, asr #4
900182a0:	f1bb 0f00 	cmp.w	fp, #0
900182a4:	f000 8092 	beq.w	900183cc <EwCleanSurfaceCache+0x6f0>
900182a8:	2c00      	cmp	r4, #0
900182aa:	f000 808f 	beq.w	900183cc <EwCleanSurfaceCache+0x6f0>
900182ae:	4b7d      	ldr	r3, [pc, #500]	; (900184a4 <EwCleanSurfaceCache+0x7c8>)
900182b0:	2500      	movs	r5, #0
900182b2:	4622      	mov	r2, r4
900182b4:	9803      	ldr	r0, [sp, #12]
900182b6:	f813 100b 	ldrb.w	r1, [r3, fp]
900182ba:	0189      	lsls	r1, r1, #6
900182bc:	3901      	subs	r1, #1
900182be:	b2c9      	uxtb	r1, r1
900182c0:	f00e fd24 	bl	90026d0c <EwFill>
900182c4:	1c73      	adds	r3, r6, #1
900182c6:	f8df 91dc 	ldr.w	r9, [pc, #476]	; 900184a4 <EwCleanSurfaceCache+0x7c8>
900182ca:	9304      	str	r3, [sp, #16]
900182cc:	2300      	movs	r3, #0
900182ce:	42b4      	cmp	r4, r6
900182d0:	dd7e      	ble.n	900183d0 <EwCleanSurfaceCache+0x6f4>
900182d2:	f1bb 0f00 	cmp.w	fp, #0
900182d6:	f000 80dd 	beq.w	90018494 <EwCleanSurfaceCache+0x7b8>
900182da:	42b5      	cmp	r5, r6
900182dc:	f300 80c7 	bgt.w	9001846e <EwCleanSurfaceCache+0x792>
900182e0:	9b01      	ldr	r3, [sp, #4]
900182e2:	429c      	cmp	r4, r3
900182e4:	f2c0 80c7 	blt.w	90018476 <EwCleanSurfaceCache+0x79a>
900182e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
900182ea:	b103      	cbz	r3, 900182ee <EwCleanSurfaceCache+0x612>
900182ec:	601d      	str	r5, [r3, #0]
900182ee:	1b70      	subs	r0, r6, r5
900182f0:	3001      	adds	r0, #1
900182f2:	e0d3      	b.n	9001849c <EwCleanSurfaceCache+0x7c0>
900182f4:	f102 0a01 	add.w	sl, r2, #1
900182f8:	6899      	ldr	r1, [r3, #8]
900182fa:	eb03 0aca 	add.w	sl, r3, sl, lsl #3
900182fe:	3310      	adds	r3, #16
90018300:	4553      	cmp	r3, sl
90018302:	d901      	bls.n	90018308 <EwCleanSurfaceCache+0x62c>
90018304:	3b04      	subs	r3, #4
90018306:	e7c4      	b.n	90018292 <EwCleanSurfaceCache+0x5b6>
90018308:	42a9      	cmp	r1, r5
9001830a:	681a      	ldr	r2, [r3, #0]
9001830c:	da22      	bge.n	90018354 <EwCleanSurfaceCache+0x678>
9001830e:	4295      	cmp	r5, r2
90018310:	dd20      	ble.n	90018354 <EwCleanSurfaceCache+0x678>
90018312:	4619      	mov	r1, r3
90018314:	42aa      	cmp	r2, r5
90018316:	460b      	mov	r3, r1
90018318:	da01      	bge.n	9001831e <EwCleanSurfaceCache+0x642>
9001831a:	4551      	cmp	r1, sl
9001831c:	d317      	bcc.n	9001834e <EwCleanSurfaceCache+0x672>
9001831e:	f851 1c08 	ldr.w	r1, [r1, #-8]
90018322:	f853 6c0c 	ldr.w	r6, [r3, #-12]
90018326:	9807      	ldr	r0, [sp, #28]
90018328:	1a30      	subs	r0, r6, r0
9001832a:	9005      	str	r0, [sp, #20]
9001832c:	f853 0c04 	ldr.w	r0, [r3, #-4]
90018330:	1b80      	subs	r0, r0, r6
90018332:	1a6e      	subs	r6, r5, r1
90018334:	0084      	lsls	r4, r0, #2
90018336:	4370      	muls	r0, r6
90018338:	9406      	str	r4, [sp, #24]
9001833a:	1a54      	subs	r4, r2, r1
9001833c:	9004      	str	r0, [sp, #16]
9001833e:	4628      	mov	r0, r5
90018340:	9408      	str	r4, [sp, #32]
90018342:	9c09      	ldr	r4, [sp, #36]	; 0x24
90018344:	4284      	cmp	r4, r0
90018346:	d110      	bne.n	9001836a <EwCleanSurfaceCache+0x68e>
90018348:	3308      	adds	r3, #8
9001834a:	4611      	mov	r1, r2
9001834c:	e7d8      	b.n	90018300 <EwCleanSurfaceCache+0x624>
9001834e:	f851 2f08 	ldr.w	r2, [r1, #8]!
90018352:	e7df      	b.n	90018314 <EwCleanSurfaceCache+0x638>
90018354:	4549      	cmp	r1, r9
90018356:	dde4      	ble.n	90018322 <EwCleanSurfaceCache+0x646>
90018358:	4619      	mov	r1, r3
9001835a:	454a      	cmp	r2, r9
9001835c:	460b      	mov	r3, r1
9001835e:	ddde      	ble.n	9001831e <EwCleanSurfaceCache+0x642>
90018360:	4551      	cmp	r1, sl
90018362:	d2dc      	bcs.n	9001831e <EwCleanSurfaceCache+0x642>
90018364:	f851 2f08 	ldr.w	r2, [r1, #8]!
90018368:	e7f7      	b.n	9001835a <EwCleanSurfaceCache+0x67e>
9001836a:	4281      	cmp	r1, r0
9001836c:	dc76      	bgt.n	9001845c <EwCleanSurfaceCache+0x780>
9001836e:	4282      	cmp	r2, r0
90018370:	dd0d      	ble.n	9001838e <EwCleanSurfaceCache+0x6b2>
90018372:	9c08      	ldr	r4, [sp, #32]
90018374:	9e04      	ldr	r6, [sp, #16]
90018376:	9f05      	ldr	r7, [sp, #20]
90018378:	fb96 f4f4 	sdiv	r4, r6, r4
9001837c:	19e4      	adds	r4, r4, r7
9001837e:	d50c      	bpl.n	9001839a <EwCleanSurfaceCache+0x6be>
90018380:	f3c0 0481 	ubfx	r4, r0, #2, #2
90018384:	2601      	movs	r6, #1
90018386:	fa06 f404 	lsl.w	r4, r6, r4
9001838a:	ea8b 0b04 	eor.w	fp, fp, r4
9001838e:	9e04      	ldr	r6, [sp, #16]
90018390:	3004      	adds	r0, #4
90018392:	9c06      	ldr	r4, [sp, #24]
90018394:	4426      	add	r6, r4
90018396:	9604      	str	r6, [sp, #16]
90018398:	e7d3      	b.n	90018342 <EwCleanSurfaceCache+0x666>
9001839a:	9f01      	ldr	r7, [sp, #4]
9001839c:	ebb7 1f24 	cmp.w	r7, r4, asr #4
900183a0:	ddf5      	ble.n	9001838e <EwCleanSurfaceCache+0x6b2>
900183a2:	2601      	movs	r6, #1
900183a4:	f3c0 0781 	ubfx	r7, r0, #2, #2
900183a8:	ea4f 0ca4 	mov.w	ip, r4, asr #2
900183ac:	45a6      	cmp	lr, r4
900183ae:	fa06 f707 	lsl.w	r7, r6, r7
900183b2:	9e02      	ldr	r6, [sp, #8]
900183b4:	bfa8      	it	ge
900183b6:	46a6      	movge	lr, r4
900183b8:	45a0      	cmp	r8, r4
900183ba:	f816 600c 	ldrb.w	r6, [r6, ip]
900183be:	bfb8      	it	lt
900183c0:	46a0      	movlt	r8, r4
900183c2:	4077      	eors	r7, r6
900183c4:	9e02      	ldr	r6, [sp, #8]
900183c6:	f806 700c 	strb.w	r7, [r6, ip]
900183ca:	e7e0      	b.n	9001838e <EwCleanSurfaceCache+0x6b2>
900183cc:	4625      	mov	r5, r4
900183ce:	e779      	b.n	900182c4 <EwCleanSurfaceCache+0x5e8>
900183d0:	9a02      	ldr	r2, [sp, #8]
900183d2:	4627      	mov	r7, r4
900183d4:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
900183d8:	f107 0a01 	add.w	sl, r7, #1
900183dc:	f1b8 0f00 	cmp.w	r8, #0
900183e0:	d13f      	bne.n	90018462 <EwCleanSurfaceCache+0x786>
900183e2:	9a04      	ldr	r2, [sp, #16]
900183e4:	4552      	cmp	r2, sl
900183e6:	d134      	bne.n	90018452 <EwCleanSurfaceCache+0x776>
900183e8:	f1bb 0f00 	cmp.w	fp, #0
900183ec:	d02f      	beq.n	9001844e <EwCleanSurfaceCache+0x772>
900183ee:	42a7      	cmp	r7, r4
900183f0:	dd2d      	ble.n	9001844e <EwCleanSurfaceCache+0x772>
900183f2:	f819 100b 	ldrb.w	r1, [r9, fp]
900183f6:	1b3a      	subs	r2, r7, r4
900183f8:	9b03      	ldr	r3, [sp, #12]
900183fa:	0189      	lsls	r1, r1, #6
900183fc:	1918      	adds	r0, r3, r4
900183fe:	3901      	subs	r1, #1
90018400:	b2c9      	uxtb	r1, r1
90018402:	f00e fc83 	bl	90026d0c <EwFill>
90018406:	2300      	movs	r3, #0
90018408:	f1b8 0f00 	cmp.w	r8, #0
9001840c:	d01f      	beq.n	9001844e <EwCleanSurfaceCache+0x772>
9001840e:	fa4f f488 	sxtb.w	r4, r8
90018412:	f348 2007 	sbfx	r0, r8, #8, #8
90018416:	ea84 040b 	eor.w	r4, r4, fp
9001841a:	f919 2004 	ldrsb.w	r2, [r9, r4]
9001841e:	4044      	eors	r4, r0
90018420:	f348 4007 	sbfx	r0, r8, #16, #8
90018424:	f919 1004 	ldrsb.w	r1, [r9, r4]
90018428:	4060      	eors	r0, r4
9001842a:	4411      	add	r1, r2
9001842c:	ea80 6b28 	eor.w	fp, r0, r8, asr #24
90018430:	f919 2000 	ldrsb.w	r2, [r9, r0]
90018434:	4411      	add	r1, r2
90018436:	f919 200b 	ldrsb.w	r2, [r9, fp]
9001843a:	1852      	adds	r2, r2, r1
9001843c:	bf1f      	itttt	ne
9001843e:	0112      	lslne	r2, r2, #4
90018440:	9903      	ldrne	r1, [sp, #12]
90018442:	f102 32ff 	addne.w	r2, r2, #4294967295
90018446:	55ca      	strbne	r2, [r1, r7]
90018448:	9a02      	ldr	r2, [sp, #8]
9001844a:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
9001844e:	4654      	mov	r4, sl
90018450:	e73d      	b.n	900182ce <EwCleanSurfaceCache+0x5f2>
90018452:	9a02      	ldr	r2, [sp, #8]
90018454:	4657      	mov	r7, sl
90018456:	f852 802a 	ldr.w	r8, [r2, sl, lsl #2]
9001845a:	e7bd      	b.n	900183d8 <EwCleanSurfaceCache+0x6fc>
9001845c:	4282      	cmp	r2, r0
9001845e:	dd88      	ble.n	90018372 <EwCleanSurfaceCache+0x696>
90018460:	e795      	b.n	9001838e <EwCleanSurfaceCache+0x6b2>
90018462:	f1bb 0f00 	cmp.w	fp, #0
90018466:	d0d2      	beq.n	9001840e <EwCleanSurfaceCache+0x732>
90018468:	42a7      	cmp	r7, r4
9001846a:	ddd0      	ble.n	9001840e <EwCleanSurfaceCache+0x732>
9001846c:	e7c1      	b.n	900183f2 <EwCleanSurfaceCache+0x716>
9001846e:	9b01      	ldr	r3, [sp, #4]
90018470:	2b00      	cmp	r3, #0
90018472:	dd12      	ble.n	9001849a <EwCleanSurfaceCache+0x7be>
90018474:	2400      	movs	r4, #0
90018476:	4b0b      	ldr	r3, [pc, #44]	; (900184a4 <EwCleanSurfaceCache+0x7c8>)
90018478:	f813 100b 	ldrb.w	r1, [r3, fp]
9001847c:	9b01      	ldr	r3, [sp, #4]
9001847e:	0189      	lsls	r1, r1, #6
90018480:	1b1a      	subs	r2, r3, r4
90018482:	9b03      	ldr	r3, [sp, #12]
90018484:	3901      	subs	r1, #1
90018486:	4423      	add	r3, r4
90018488:	b2c9      	uxtb	r1, r1
9001848a:	4618      	mov	r0, r3
9001848c:	f00e fc3e 	bl	90026d0c <EwFill>
90018490:	9b01      	ldr	r3, [sp, #4]
90018492:	1e5e      	subs	r6, r3, #1
90018494:	42ae      	cmp	r6, r5
90018496:	f6bf af27 	bge.w	900182e8 <EwCleanSurfaceCache+0x60c>
9001849a:	2000      	movs	r0, #0
9001849c:	b00b      	add	sp, #44	; 0x2c
9001849e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900184a2:	bf00      	nop
900184a4:	90032098 	.word	0x90032098
900184a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900184ac:	b085      	sub	sp, #20
900184ae:	4690      	mov	r8, r2
900184b0:	468b      	mov	fp, r1
900184b2:	2700      	movs	r7, #0
900184b4:	ea4f 1408 	mov.w	r4, r8, lsl #4
900184b8:	f04f 35ff 	mov.w	r5, #4294967295
900184bc:	f04f 0a01 	mov.w	sl, #1
900184c0:	9001      	str	r0, [sp, #4]
900184c2:	9302      	str	r3, [sp, #8]
900184c4:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
900184c8:	f021 010f 	bic.w	r1, r1, #15
900184cc:	3108      	adds	r1, #8
900184ce:	6813      	ldr	r3, [r2, #0]
900184d0:	2b00      	cmp	r3, #0
900184d2:	dc21      	bgt.n	90018518 <EwCleanSurfaceCache+0x83c>
900184d4:	1124      	asrs	r4, r4, #4
900184d6:	112d      	asrs	r5, r5, #4
900184d8:	2f00      	cmp	r7, #0
900184da:	d06d      	beq.n	900185b8 <EwCleanSurfaceCache+0x8dc>
900184dc:	2c00      	cmp	r4, #0
900184de:	d06b      	beq.n	900185b8 <EwCleanSurfaceCache+0x8dc>
900184e0:	f04f 0a00 	mov.w	sl, #0
900184e4:	4622      	mov	r2, r4
900184e6:	21ff      	movs	r1, #255	; 0xff
900184e8:	9801      	ldr	r0, [sp, #4]
900184ea:	f00e fc0f 	bl	90026d0c <EwFill>
900184ee:	1c6b      	adds	r3, r5, #1
900184f0:	9302      	str	r3, [sp, #8]
900184f2:	42ac      	cmp	r4, r5
900184f4:	dd62      	ble.n	900185bc <EwCleanSurfaceCache+0x8e0>
900184f6:	2f00      	cmp	r7, #0
900184f8:	f000 80c7 	beq.w	9001868a <EwCleanSurfaceCache+0x9ae>
900184fc:	45aa      	cmp	sl, r5
900184fe:	f300 80b6 	bgt.w	9001866e <EwCleanSurfaceCache+0x992>
90018502:	4544      	cmp	r4, r8
90018504:	f2c0 80b7 	blt.w	90018676 <EwCleanSurfaceCache+0x99a>
90018508:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001850a:	b10b      	cbz	r3, 90018510 <EwCleanSurfaceCache+0x834>
9001850c:	f8c3 a000 	str.w	sl, [r3]
90018510:	eba5 000a 	sub.w	r0, r5, sl
90018514:	3001      	adds	r0, #1
90018516:	e0bc      	b.n	90018692 <EwCleanSurfaceCache+0x9b6>
90018518:	f103 0c01 	add.w	ip, r3, #1
9001851c:	6893      	ldr	r3, [r2, #8]
9001851e:	eb02 0ccc 	add.w	ip, r2, ip, lsl #3
90018522:	3210      	adds	r2, #16
90018524:	4562      	cmp	r2, ip
90018526:	d901      	bls.n	9001852c <EwCleanSurfaceCache+0x850>
90018528:	3a04      	subs	r2, #4
9001852a:	e7d0      	b.n	900184ce <EwCleanSurfaceCache+0x7f2>
9001852c:	428b      	cmp	r3, r1
9001852e:	6810      	ldr	r0, [r2, #0]
90018530:	f280 8089 	bge.w	90018646 <EwCleanSurfaceCache+0x96a>
90018534:	4281      	cmp	r1, r0
90018536:	dd13      	ble.n	90018560 <EwCleanSurfaceCache+0x884>
90018538:	4613      	mov	r3, r2
9001853a:	4288      	cmp	r0, r1
9001853c:	461a      	mov	r2, r3
9001853e:	da01      	bge.n	90018544 <EwCleanSurfaceCache+0x868>
90018540:	4563      	cmp	r3, ip
90018542:	d308      	bcc.n	90018556 <EwCleanSurfaceCache+0x87a>
90018544:	f853 3c08 	ldr.w	r3, [r3, #-8]
90018548:	428b      	cmp	r3, r1
9001854a:	db07      	blt.n	9001855c <EwCleanSurfaceCache+0x880>
9001854c:	4281      	cmp	r1, r0
9001854e:	dc07      	bgt.n	90018560 <EwCleanSurfaceCache+0x884>
90018550:	3208      	adds	r2, #8
90018552:	4603      	mov	r3, r0
90018554:	e7e6      	b.n	90018524 <EwCleanSurfaceCache+0x848>
90018556:	f853 0f08 	ldr.w	r0, [r3, #8]!
9001855a:	e7ee      	b.n	9001853a <EwCleanSurfaceCache+0x85e>
9001855c:	4288      	cmp	r0, r1
9001855e:	dbf7      	blt.n	90018550 <EwCleanSurfaceCache+0x874>
90018560:	f852 ec0c 	ldr.w	lr, [r2, #-12]
90018564:	eba1 0903 	sub.w	r9, r1, r3
90018568:	f852 6c04 	ldr.w	r6, [r2, #-4]
9001856c:	1ac3      	subs	r3, r0, r3
9001856e:	eba6 060e 	sub.w	r6, r6, lr
90018572:	fb09 f606 	mul.w	r6, r9, r6
90018576:	fb96 f3f3 	sdiv	r3, r6, r3
9001857a:	9e02      	ldr	r6, [sp, #8]
9001857c:	ebae 0e06 	sub.w	lr, lr, r6
90018580:	eb13 030e 	adds.w	r3, r3, lr
90018584:	d502      	bpl.n	9001858c <EwCleanSurfaceCache+0x8b0>
90018586:	f087 0701 	eor.w	r7, r7, #1
9001858a:	e7e1      	b.n	90018550 <EwCleanSurfaceCache+0x874>
9001858c:	ebb8 1f23 	cmp.w	r8, r3, asr #4
90018590:	ea4f 1e23 	mov.w	lr, r3, asr #4
90018594:	dddc      	ble.n	90018550 <EwCleanSurfaceCache+0x874>
90018596:	f3c3 0681 	ubfx	r6, r3, #2, #2
9001859a:	f81b 900e 	ldrb.w	r9, [fp, lr]
9001859e:	429c      	cmp	r4, r3
900185a0:	fa0a f606 	lsl.w	r6, sl, r6
900185a4:	bfa8      	it	ge
900185a6:	461c      	movge	r4, r3
900185a8:	429d      	cmp	r5, r3
900185aa:	ea86 0609 	eor.w	r6, r6, r9
900185ae:	bfb8      	it	lt
900185b0:	461d      	movlt	r5, r3
900185b2:	f80b 600e 	strb.w	r6, [fp, lr]
900185b6:	e7cb      	b.n	90018550 <EwCleanSurfaceCache+0x874>
900185b8:	46a2      	mov	sl, r4
900185ba:	e798      	b.n	900184ee <EwCleanSurfaceCache+0x812>
900185bc:	f81b 6004 	ldrb.w	r6, [fp, r4]
900185c0:	46a1      	mov	r9, r4
900185c2:	f109 0301 	add.w	r3, r9, #1
900185c6:	2e00      	cmp	r6, #0
900185c8:	d14c      	bne.n	90018664 <EwCleanSurfaceCache+0x988>
900185ca:	9a02      	ldr	r2, [sp, #8]
900185cc:	4293      	cmp	r3, r2
900185ce:	d136      	bne.n	9001863e <EwCleanSurfaceCache+0x962>
900185d0:	2f00      	cmp	r7, #0
900185d2:	d032      	beq.n	9001863a <EwCleanSurfaceCache+0x95e>
900185d4:	45a1      	cmp	r9, r4
900185d6:	dd30      	ble.n	9001863a <EwCleanSurfaceCache+0x95e>
900185d8:	9303      	str	r3, [sp, #12]
900185da:	eba9 0204 	sub.w	r2, r9, r4
900185de:	9b01      	ldr	r3, [sp, #4]
900185e0:	21ff      	movs	r1, #255	; 0xff
900185e2:	1918      	adds	r0, r3, r4
900185e4:	f00e fb92 	bl	90026d0c <EwFill>
900185e8:	9b03      	ldr	r3, [sp, #12]
900185ea:	b336      	cbz	r6, 9001863a <EwCleanSurfaceCache+0x95e>
900185ec:	f006 0001 	and.w	r0, r6, #1
900185f0:	f3c6 0240 	ubfx	r2, r6, #1, #1
900185f4:	ea80 0407 	eor.w	r4, r0, r7
900185f8:	ea82 0104 	eor.w	r1, r2, r4
900185fc:	1b12      	subs	r2, r2, r4
900185fe:	f3c6 0480 	ubfx	r4, r6, #2, #1
90018602:	f3c6 06c0 	ubfx	r6, r6, #3, #1
90018606:	bf18      	it	ne
90018608:	2201      	movne	r2, #1
9001860a:	42b8      	cmp	r0, r7
9001860c:	bf18      	it	ne
9001860e:	3201      	addne	r2, #1
90018610:	ea84 0001 	eor.w	r0, r4, r1
90018614:	428c      	cmp	r4, r1
90018616:	bf18      	it	ne
90018618:	3201      	addne	r2, #1
9001861a:	ea86 0700 	eor.w	r7, r6, r0
9001861e:	4286      	cmp	r6, r0
90018620:	bf18      	it	ne
90018622:	3201      	addne	r2, #1
90018624:	2a02      	cmp	r2, #2
90018626:	bfc2      	ittt	gt
90018628:	9a01      	ldrgt	r2, [sp, #4]
9001862a:	f04f 31ff 	movgt.w	r1, #4294967295
9001862e:	f802 1009 	strbgt.w	r1, [r2, r9]
90018632:	f04f 0200 	mov.w	r2, #0
90018636:	f80b 2009 	strb.w	r2, [fp, r9]
9001863a:	461c      	mov	r4, r3
9001863c:	e759      	b.n	900184f2 <EwCleanSurfaceCache+0x816>
9001863e:	f81b 6003 	ldrb.w	r6, [fp, r3]
90018642:	4699      	mov	r9, r3
90018644:	e7bd      	b.n	900185c2 <EwCleanSurfaceCache+0x8e6>
90018646:	dd81      	ble.n	9001854c <EwCleanSurfaceCache+0x870>
90018648:	4281      	cmp	r1, r0
9001864a:	f6bf af7f 	bge.w	9001854c <EwCleanSurfaceCache+0x870>
9001864e:	4613      	mov	r3, r2
90018650:	4288      	cmp	r0, r1
90018652:	461a      	mov	r2, r3
90018654:	f77f af76 	ble.w	90018544 <EwCleanSurfaceCache+0x868>
90018658:	4563      	cmp	r3, ip
9001865a:	f4bf af73 	bcs.w	90018544 <EwCleanSurfaceCache+0x868>
9001865e:	f853 0f08 	ldr.w	r0, [r3, #8]!
90018662:	e7f5      	b.n	90018650 <EwCleanSurfaceCache+0x974>
90018664:	2f00      	cmp	r7, #0
90018666:	d0c1      	beq.n	900185ec <EwCleanSurfaceCache+0x910>
90018668:	45a1      	cmp	r9, r4
9001866a:	ddbf      	ble.n	900185ec <EwCleanSurfaceCache+0x910>
9001866c:	e7b4      	b.n	900185d8 <EwCleanSurfaceCache+0x8fc>
9001866e:	f1b8 0f00 	cmp.w	r8, #0
90018672:	dd0d      	ble.n	90018690 <EwCleanSurfaceCache+0x9b4>
90018674:	2400      	movs	r4, #0
90018676:	9b01      	ldr	r3, [sp, #4]
90018678:	f108 35ff 	add.w	r5, r8, #4294967295
9001867c:	eba8 0204 	sub.w	r2, r8, r4
90018680:	21ff      	movs	r1, #255	; 0xff
90018682:	4423      	add	r3, r4
90018684:	4618      	mov	r0, r3
90018686:	f00e fb41 	bl	90026d0c <EwFill>
9001868a:	4555      	cmp	r5, sl
9001868c:	f6bf af3c 	bge.w	90018508 <EwCleanSurfaceCache+0x82c>
90018690:	2000      	movs	r0, #0
90018692:	b005      	add	sp, #20
90018694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018698:	2800      	cmp	r0, #0
9001869a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001869c:	d027      	beq.n	900186ee <EwCleanSurfaceCache+0xa12>
9001869e:	f04f 0601 	mov.w	r6, #1
900186a2:	f04f 0300 	mov.w	r3, #0
900186a6:	bfb4      	ite	lt
900186a8:	4247      	neglt	r7, r0
900186aa:	4607      	movge	r7, r0
900186ac:	253d      	movs	r5, #61	; 0x3d
900186ae:	461c      	mov	r4, r3
900186b0:	46b6      	mov	lr, r6
900186b2:	0076      	lsls	r6, r6, #1
900186b4:	42be      	cmp	r6, r7
900186b6:	d30e      	bcc.n	900186d6 <EwCleanSurfaceCache+0x9fa>
900186b8:	2d1f      	cmp	r5, #31
900186ba:	eba6 0607 	sub.w	r6, r6, r7
900186be:	bfcb      	itete	gt
900186c0:	f1a5 0c20 	subgt.w	ip, r5, #32
900186c4:	fa0e fc05 	lslle.w	ip, lr, r5
900186c8:	fa0e fc0c 	lslgt.w	ip, lr, ip
900186cc:	ea44 040c 	orrle.w	r4, r4, ip
900186d0:	bfc8      	it	gt
900186d2:	ea43 030c 	orrgt.w	r3, r3, ip
900186d6:	3d01      	subs	r5, #1
900186d8:	d2eb      	bcs.n	900186b2 <EwCleanSurfaceCache+0x9d6>
900186da:	2800      	cmp	r0, #0
900186dc:	da02      	bge.n	900186e4 <EwCleanSurfaceCache+0xa08>
900186de:	4264      	negs	r4, r4
900186e0:	b11c      	cbz	r4, 900186ea <EwCleanSurfaceCache+0xa0e>
900186e2:	43db      	mvns	r3, r3
900186e4:	600b      	str	r3, [r1, #0]
900186e6:	6014      	str	r4, [r2, #0]
900186e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
900186ea:	425b      	negs	r3, r3
900186ec:	e7fa      	b.n	900186e4 <EwCleanSurfaceCache+0xa08>
900186ee:	6008      	str	r0, [r1, #0]
900186f0:	6010      	str	r0, [r2, #0]
900186f2:	e7f9      	b.n	900186e8 <EwCleanSurfaceCache+0xa0c>

900186f4 <EwDestroyIndex8Surface>:
900186f4:	b410      	push	{r4}
900186f6:	b168      	cbz	r0, 90018714 <EwDestroyIndex8Surface+0x20>
900186f8:	6943      	ldr	r3, [r0, #20]
900186fa:	4a08      	ldr	r2, [pc, #32]	; (9001871c <EwDestroyIndex8Surface+0x28>)
900186fc:	b93b      	cbnz	r3, 9001870e <EwDestroyIndex8Surface+0x1a>
900186fe:	6813      	ldr	r3, [r2, #0]
90018700:	e9d0 1400 	ldrd	r1, r4, [r0]
90018704:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
90018708:	fb04 3311 	mls	r3, r4, r1, r3
9001870c:	6013      	str	r3, [r2, #0]
9001870e:	6813      	ldr	r3, [r2, #0]
90018710:	3b18      	subs	r3, #24
90018712:	6013      	str	r3, [r2, #0]
90018714:	f85d 4b04 	ldr.w	r4, [sp], #4
90018718:	f00e bace 	b.w	90026cb8 <EwFree>
9001871c:	200002bc 	.word	0x200002bc

90018720 <EwGetIndex8SurfaceMemory>:
90018720:	b530      	push	{r4, r5, lr}
90018722:	e9dd 5403 	ldrd	r5, r4, [sp, #12]
90018726:	b10d      	cbz	r5, 9001872c <EwGetIndex8SurfaceMemory+0xc>
90018728:	6945      	ldr	r5, [r0, #20]
9001872a:	b995      	cbnz	r5, 90018752 <EwGetIndex8SurfaceMemory+0x32>
9001872c:	6905      	ldr	r5, [r0, #16]
9001872e:	fb02 1105 	mla	r1, r2, r5, r1
90018732:	6882      	ldr	r2, [r0, #8]
90018734:	60a5      	str	r5, [r4, #8]
90018736:	4411      	add	r1, r2
90018738:	2201      	movs	r2, #1
9001873a:	6021      	str	r1, [r4, #0]
9001873c:	2100      	movs	r1, #0
9001873e:	6062      	str	r2, [r4, #4]
90018740:	60e1      	str	r1, [r4, #12]
90018742:	e9c4 1104 	strd	r1, r1, [r4, #16]
90018746:	68c1      	ldr	r1, [r0, #12]
90018748:	4610      	mov	r0, r2
9001874a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001874e:	61a3      	str	r3, [r4, #24]
90018750:	bd30      	pop	{r4, r5, pc}
90018752:	2000      	movs	r0, #0
90018754:	e7fc      	b.n	90018750 <EwGetIndex8SurfaceMemory+0x30>

90018756 <EwGetIndex8SurfaceMemSize>:
90018756:	4348      	muls	r0, r1
90018758:	f500 6083 	add.w	r0, r0, #1048	; 0x418
9001875c:	4770      	bx	lr

9001875e <EwDestroyAlpha8Surface>:
9001875e:	b410      	push	{r4}
90018760:	b148      	cbz	r0, 90018776 <EwDestroyAlpha8Surface+0x18>
90018762:	4908      	ldr	r1, [pc, #32]	; (90018784 <EwDestroyAlpha8Surface+0x26>)
90018764:	6903      	ldr	r3, [r0, #16]
90018766:	680a      	ldr	r2, [r1, #0]
90018768:	b94b      	cbnz	r3, 9001877e <EwDestroyAlpha8Surface+0x20>
9001876a:	e9d0 3400 	ldrd	r3, r4, [r0]
9001876e:	4363      	muls	r3, r4
90018770:	3314      	adds	r3, #20
90018772:	1ad3      	subs	r3, r2, r3
90018774:	600b      	str	r3, [r1, #0]
90018776:	f85d 4b04 	ldr.w	r4, [sp], #4
9001877a:	f00e ba9d 	b.w	90026cb8 <EwFree>
9001877e:	2314      	movs	r3, #20
90018780:	e7f7      	b.n	90018772 <EwDestroyAlpha8Surface+0x14>
90018782:	bf00      	nop
90018784:	200002bc 	.word	0x200002bc

90018788 <EwGetAlpha8SurfaceMemory>:
90018788:	b510      	push	{r4, lr}
9001878a:	e9dd 4302 	ldrd	r4, r3, [sp, #8]
9001878e:	b10c      	cbz	r4, 90018794 <EwGetAlpha8SurfaceMemory+0xc>
90018790:	6904      	ldr	r4, [r0, #16]
90018792:	b974      	cbnz	r4, 900187b2 <EwGetAlpha8SurfaceMemory+0x2a>
90018794:	68c4      	ldr	r4, [r0, #12]
90018796:	fb02 1104 	mla	r1, r2, r4, r1
9001879a:	6882      	ldr	r2, [r0, #8]
9001879c:	2001      	movs	r0, #1
9001879e:	609c      	str	r4, [r3, #8]
900187a0:	4411      	add	r1, r2
900187a2:	2200      	movs	r2, #0
900187a4:	6058      	str	r0, [r3, #4]
900187a6:	6019      	str	r1, [r3, #0]
900187a8:	60da      	str	r2, [r3, #12]
900187aa:	619a      	str	r2, [r3, #24]
900187ac:	e9c3 2204 	strd	r2, r2, [r3, #16]
900187b0:	bd10      	pop	{r4, pc}
900187b2:	2000      	movs	r0, #0
900187b4:	e7fc      	b.n	900187b0 <EwGetAlpha8SurfaceMemory+0x28>

900187b6 <EwGetAlpha8SurfaceMemSize>:
900187b6:	4348      	muls	r0, r1
900187b8:	3014      	adds	r0, #20
900187ba:	4770      	bx	lr

900187bc <EwInitColorGradient>:
900187bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900187c0:	e9d2 4500 	ldrd	r4, r5, [r2]
900187c4:	e9d2 7c02 	ldrd	r7, ip, [r2, #8]
900187c8:	4564      	cmp	r4, ip
900187ca:	f040 808a 	bne.w	900188e2 <EwInitColorGradient+0x126>
900187ce:	ebb5 0e07 	subs.w	lr, r5, r7
900187d2:	bf18      	it	ne
900187d4:	f04f 0e01 	movne.w	lr, #1
900187d8:	42ac      	cmp	r4, r5
900187da:	f040 8085 	bne.w	900188e8 <EwInitColorGradient+0x12c>
900187de:	45bc      	cmp	ip, r7
900187e0:	f040 8082 	bne.w	900188e8 <EwInitColorGradient+0x12c>
900187e4:	f04f 0800 	mov.w	r8, #0
900187e8:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
900187ec:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
900187f0:	b121      	cbz	r1, 900187fc <EwInitColorGradient+0x40>
900187f2:	f1be 0f00 	cmp.w	lr, #0
900187f6:	d001      	beq.n	900187fc <EwInitColorGradient+0x40>
900187f8:	fb92 f2f1 	sdiv	r2, r2, r1
900187fc:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
90018800:	0521      	lsls	r1, r4, #20
90018802:	f3cc 4007 	ubfx	r0, ip, #16, #8
90018806:	fa5f fa8c 	uxtb.w	sl, ip
9001880a:	f3c7 4b07 	ubfx	fp, r7, #16, #8
9001880e:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90018812:	fa5f f987 	uxtb.w	r9, r7
90018816:	6019      	str	r1, [r3, #0]
90018818:	b2e1      	uxtb	r1, r4
9001881a:	ebaa 0a01 	sub.w	sl, sl, r1
9001881e:	0529      	lsls	r1, r5, #20
90018820:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90018824:	f8c3 a004 	str.w	sl, [r3, #4]
90018828:	6099      	str	r1, [r3, #8]
9001882a:	b2e9      	uxtb	r1, r5
9001882c:	eba9 0901 	sub.w	r9, r9, r1
90018830:	0321      	lsls	r1, r4, #12
90018832:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90018836:	f8c3 900c 	str.w	r9, [r3, #12]
9001883a:	e9c3 e814 	strd	lr, r8, [r3, #80]	; 0x50
9001883e:	6119      	str	r1, [r3, #16]
90018840:	f3cc 2807 	ubfx	r8, ip, #8, #8
90018844:	f3c4 2107 	ubfx	r1, r4, #8, #8
90018848:	eba8 0801 	sub.w	r8, r8, r1
9001884c:	0329      	lsls	r1, r5, #12
9001884e:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
90018852:	f8c3 8014 	str.w	r8, [r3, #20]
90018856:	e9c3 6212 	strd	r6, r2, [r3, #72]	; 0x48
9001885a:	6199      	str	r1, [r3, #24]
9001885c:	f3c7 2607 	ubfx	r6, r7, #8, #8
90018860:	f3c5 2107 	ubfx	r1, r5, #8, #8
90018864:	1a76      	subs	r6, r6, r1
90018866:	0121      	lsls	r1, r4, #4
90018868:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9001886c:	61de      	str	r6, [r3, #28]
9001886e:	6219      	str	r1, [r3, #32]
90018870:	f3c4 4107 	ubfx	r1, r4, #16, #8
90018874:	1a40      	subs	r0, r0, r1
90018876:	0129      	lsls	r1, r5, #4
90018878:	f001 617f 	and.w	r1, r1, #267386880	; 0xff00000
9001887c:	6258      	str	r0, [r3, #36]	; 0x24
9001887e:	6299      	str	r1, [r3, #40]	; 0x28
90018880:	f3c5 4107 	ubfx	r1, r5, #16, #8
90018884:	ebab 0101 	sub.w	r1, fp, r1
90018888:	ea4f 1b14 	mov.w	fp, r4, lsr #4
9001888c:	0e24      	lsrs	r4, r4, #24
9001888e:	f00b 6b7f 	and.w	fp, fp, #267386880	; 0xff00000
90018892:	62d9      	str	r1, [r3, #44]	; 0x2c
90018894:	ebc4 641c 	rsb	r4, r4, ip, lsr #24
90018898:	ea4f 1c15 	mov.w	ip, r5, lsr #4
9001889c:	f8c3 b030 	str.w	fp, [r3, #48]	; 0x30
900188a0:	0e2d      	lsrs	r5, r5, #24
900188a2:	635c      	str	r4, [r3, #52]	; 0x34
900188a4:	f00c 6c7f 	and.w	ip, ip, #267386880	; 0xff00000
900188a8:	ebc5 6717 	rsb	r7, r5, r7, lsr #24
900188ac:	f8c3 c038 	str.w	ip, [r3, #56]	; 0x38
900188b0:	63df      	str	r7, [r3, #60]	; 0x3c
900188b2:	f1be 0f00 	cmp.w	lr, #0
900188b6:	d012      	beq.n	900188de <EwInitColorGradient+0x122>
900188b8:	fb02 f50a 	mul.w	r5, r2, sl
900188bc:	4356      	muls	r6, r2
900188be:	605d      	str	r5, [r3, #4]
900188c0:	fb02 f509 	mul.w	r5, r2, r9
900188c4:	4350      	muls	r0, r2
900188c6:	4351      	muls	r1, r2
900188c8:	4354      	muls	r4, r2
900188ca:	4357      	muls	r7, r2
900188cc:	60dd      	str	r5, [r3, #12]
900188ce:	fb02 f508 	mul.w	r5, r2, r8
900188d2:	61de      	str	r6, [r3, #28]
900188d4:	615d      	str	r5, [r3, #20]
900188d6:	6258      	str	r0, [r3, #36]	; 0x24
900188d8:	62d9      	str	r1, [r3, #44]	; 0x2c
900188da:	635c      	str	r4, [r3, #52]	; 0x34
900188dc:	63df      	str	r7, [r3, #60]	; 0x3c
900188de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900188e2:	f04f 0e01 	mov.w	lr, #1
900188e6:	e777      	b.n	900187d8 <EwInitColorGradient+0x1c>
900188e8:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
900188ec:	b108      	cbz	r0, 900188f2 <EwInitColorGradient+0x136>
900188ee:	fb96 f6f0 	sdiv	r6, r6, r0
900188f2:	f04f 0801 	mov.w	r8, #1
900188f6:	e779      	b.n	900187ec <EwInitColorGradient+0x30>

900188f8 <EwInitOpacityGradient>:
900188f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900188fc:	e9d2 4500 	ldrd	r4, r5, [r2]
90018900:	e9d2 ce02 	ldrd	ip, lr, [r2, #8]
90018904:	4574      	cmp	r4, lr
90018906:	d13b      	bne.n	90018980 <EwInitOpacityGradient+0x88>
90018908:	ebb5 070c 	subs.w	r7, r5, ip
9001890c:	bf18      	it	ne
9001890e:	2701      	movne	r7, #1
90018910:	42ac      	cmp	r4, r5
90018912:	d137      	bne.n	90018984 <EwInitOpacityGradient+0x8c>
90018914:	45e6      	cmp	lr, ip
90018916:	d135      	bne.n	90018984 <EwInitOpacityGradient+0x8c>
90018918:	f04f 0800 	mov.w	r8, #0
9001891c:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
90018920:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
90018924:	b111      	cbz	r1, 9001892c <EwInitOpacityGradient+0x34>
90018926:	b10f      	cbz	r7, 9001892c <EwInitOpacityGradient+0x34>
90018928:	fb96 f6f1 	sdiv	r6, r6, r1
9001892c:	e9c3 2612 	strd	r2, r6, [r3, #72]	; 0x48
90018930:	2200      	movs	r2, #0
90018932:	e9c3 2200 	strd	r2, r2, [r3]
90018936:	e9c3 2202 	strd	r2, r2, [r3, #8]
9001893a:	e9c3 2204 	strd	r2, r2, [r3, #16]
9001893e:	e9c3 2206 	strd	r2, r2, [r3, #24]
90018942:	e9c3 2208 	strd	r2, r2, [r3, #32]
90018946:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
9001894a:	0922      	lsrs	r2, r4, #4
9001894c:	0e24      	lsrs	r4, r4, #24
9001894e:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90018952:	ebc4 641e 	rsb	r4, r4, lr, lsr #24
90018956:	631a      	str	r2, [r3, #48]	; 0x30
90018958:	092a      	lsrs	r2, r5, #4
9001895a:	635c      	str	r4, [r3, #52]	; 0x34
9001895c:	f002 627f 	and.w	r2, r2, #267386880	; 0xff00000
90018960:	e9c3 0110 	strd	r0, r1, [r3, #64]	; 0x40
90018964:	0e29      	lsrs	r1, r5, #24
90018966:	639a      	str	r2, [r3, #56]	; 0x38
90018968:	ebc1 621c 	rsb	r2, r1, ip, lsr #24
9001896c:	e9c3 7814 	strd	r7, r8, [r3, #80]	; 0x50
90018970:	63da      	str	r2, [r3, #60]	; 0x3c
90018972:	b11f      	cbz	r7, 9001897c <EwInitOpacityGradient+0x84>
90018974:	4374      	muls	r4, r6
90018976:	4372      	muls	r2, r6
90018978:	635c      	str	r4, [r3, #52]	; 0x34
9001897a:	63da      	str	r2, [r3, #60]	; 0x3c
9001897c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018980:	2701      	movs	r7, #1
90018982:	e7c5      	b.n	90018910 <EwInitOpacityGradient+0x18>
90018984:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
90018988:	b108      	cbz	r0, 9001898e <EwInitOpacityGradient+0x96>
9001898a:	fb92 f2f0 	sdiv	r2, r2, r0
9001898e:	f04f 0801 	mov.w	r8, #1
90018992:	e7c5      	b.n	90018920 <EwInitOpacityGradient+0x28>

90018994 <EwGetColorFromGradient>:
90018994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018998:	e9d0 7914 	ldrd	r7, r9, [r0, #80]	; 0x50
9001899c:	468a      	mov	sl, r1
9001899e:	6805      	ldr	r5, [r0, #0]
900189a0:	6903      	ldr	r3, [r0, #16]
900189a2:	6a01      	ldr	r1, [r0, #32]
900189a4:	6b04      	ldr	r4, [r0, #48]	; 0x30
900189a6:	f8d0 8008 	ldr.w	r8, [r0, #8]
900189aa:	f8d0 e018 	ldr.w	lr, [r0, #24]
900189ae:	f8d0 c028 	ldr.w	ip, [r0, #40]	; 0x28
900189b2:	6b86      	ldr	r6, [r0, #56]	; 0x38
900189b4:	b317      	cbz	r7, 900189fc <EwGetColorFromGradient+0x68>
900189b6:	ea22 77e2 	bic.w	r7, r2, r2, asr #31
900189ba:	6c42      	ldr	r2, [r0, #68]	; 0x44
900189bc:	42ba      	cmp	r2, r7
900189be:	bfa8      	it	ge
900189c0:	463a      	movge	r2, r7
900189c2:	b15a      	cbz	r2, 900189dc <EwGetColorFromGradient+0x48>
900189c4:	6847      	ldr	r7, [r0, #4]
900189c6:	fb07 5502 	mla	r5, r7, r2, r5
900189ca:	6947      	ldr	r7, [r0, #20]
900189cc:	fb07 3302 	mla	r3, r7, r2, r3
900189d0:	6a47      	ldr	r7, [r0, #36]	; 0x24
900189d2:	fb07 1102 	mla	r1, r7, r2, r1
900189d6:	6b47      	ldr	r7, [r0, #52]	; 0x34
900189d8:	fb07 4402 	mla	r4, r7, r2, r4
900189dc:	f1b9 0f00 	cmp.w	r9, #0
900189e0:	d034      	beq.n	90018a4c <EwGetColorFromGradient+0xb8>
900189e2:	b15a      	cbz	r2, 900189fc <EwGetColorFromGradient+0x68>
900189e4:	68c7      	ldr	r7, [r0, #12]
900189e6:	fb07 8802 	mla	r8, r7, r2, r8
900189ea:	69c7      	ldr	r7, [r0, #28]
900189ec:	fb07 ee02 	mla	lr, r7, r2, lr
900189f0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900189f2:	fb07 cc02 	mla	ip, r7, r2, ip
900189f6:	6bc7      	ldr	r7, [r0, #60]	; 0x3c
900189f8:	fb07 6602 	mla	r6, r7, r2, r6
900189fc:	f1b9 0f00 	cmp.w	r9, #0
90018a00:	d024      	beq.n	90018a4c <EwGetColorFromGradient+0xb8>
90018a02:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
90018a06:	6c02      	ldr	r2, [r0, #64]	; 0x40
90018a08:	4552      	cmp	r2, sl
90018a0a:	bfa8      	it	ge
90018a0c:	4652      	movge	r2, sl
90018a0e:	b1ea      	cbz	r2, 90018a4c <EwGetColorFromGradient+0xb8>
90018a10:	6c80      	ldr	r0, [r0, #72]	; 0x48
90018a12:	4342      	muls	r2, r0
90018a14:	f005 607f 	and.w	r0, r5, #267386880	; 0xff00000
90018a18:	152d      	asrs	r5, r5, #20
90018a1a:	ebc5 5528 	rsb	r5, r5, r8, asr #20
90018a1e:	fb02 0505 	mla	r5, r2, r5, r0
90018a22:	f003 607f 	and.w	r0, r3, #267386880	; 0xff00000
90018a26:	151b      	asrs	r3, r3, #20
90018a28:	ebc3 532e 	rsb	r3, r3, lr, asr #20
90018a2c:	fb02 0303 	mla	r3, r2, r3, r0
90018a30:	f001 607f 	and.w	r0, r1, #267386880	; 0xff00000
90018a34:	1509      	asrs	r1, r1, #20
90018a36:	ebc1 512c 	rsb	r1, r1, ip, asr #20
90018a3a:	fb02 0101 	mla	r1, r2, r1, r0
90018a3e:	f004 607f 	and.w	r0, r4, #267386880	; 0xff00000
90018a42:	1524      	asrs	r4, r4, #20
90018a44:	ebc4 5426 	rsb	r4, r4, r6, asr #20
90018a48:	fb02 0404 	mla	r4, r2, r4, r0
90018a4c:	1318      	asrs	r0, r3, #12
90018a4e:	1109      	asrs	r1, r1, #4
90018a50:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90018a54:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
90018a58:	4308      	orrs	r0, r1
90018a5a:	ea40 5525 	orr.w	r5, r0, r5, asr #20
90018a5e:	0120      	lsls	r0, r4, #4
90018a60:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
90018a64:	4328      	orrs	r0, r5
90018a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90018a6a <EwGetOpacityFromGradient>:
90018a6a:	b570      	push	{r4, r5, r6, lr}
90018a6c:	e9d0 6514 	ldrd	r6, r5, [r0, #80]	; 0x50
90018a70:	6b03      	ldr	r3, [r0, #48]	; 0x30
90018a72:	6b84      	ldr	r4, [r0, #56]	; 0x38
90018a74:	b176      	cbz	r6, 90018a94 <EwGetOpacityFromGradient+0x2a>
90018a76:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
90018a7a:	6c46      	ldr	r6, [r0, #68]	; 0x44
90018a7c:	42b2      	cmp	r2, r6
90018a7e:	bfa8      	it	ge
90018a80:	4632      	movge	r2, r6
90018a82:	b112      	cbz	r2, 90018a8a <EwGetOpacityFromGradient+0x20>
90018a84:	6b46      	ldr	r6, [r0, #52]	; 0x34
90018a86:	fb06 3302 	mla	r3, r6, r2, r3
90018a8a:	b1a5      	cbz	r5, 90018ab6 <EwGetOpacityFromGradient+0x4c>
90018a8c:	b112      	cbz	r2, 90018a94 <EwGetOpacityFromGradient+0x2a>
90018a8e:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
90018a90:	fb06 4402 	mla	r4, r6, r2, r4
90018a94:	b17d      	cbz	r5, 90018ab6 <EwGetOpacityFromGradient+0x4c>
90018a96:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
90018a9a:	6c02      	ldr	r2, [r0, #64]	; 0x40
90018a9c:	4291      	cmp	r1, r2
90018a9e:	bfa8      	it	ge
90018aa0:	4611      	movge	r1, r2
90018aa2:	b141      	cbz	r1, 90018ab6 <EwGetOpacityFromGradient+0x4c>
90018aa4:	f003 627f 	and.w	r2, r3, #267386880	; 0xff00000
90018aa8:	151b      	asrs	r3, r3, #20
90018aaa:	6c80      	ldr	r0, [r0, #72]	; 0x48
90018aac:	ebc3 5324 	rsb	r3, r3, r4, asr #20
90018ab0:	4343      	muls	r3, r0
90018ab2:	fb01 2303 	mla	r3, r1, r3, r2
90018ab6:	0118      	lsls	r0, r3, #4
90018ab8:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
90018abc:	bd70      	pop	{r4, r5, r6, pc}

90018abe <EwRasterAlpha8Polygon>:
90018abe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018ac2:	b089      	sub	sp, #36	; 0x24
90018ac4:	4615      	mov	r5, r2
90018ac6:	4680      	mov	r8, r0
90018ac8:	460e      	mov	r6, r1
90018aca:	e9dd b212 	ldrd	fp, r2, [sp, #72]	; 0x48
90018ace:	e9dd a714 	ldrd	sl, r7, [sp, #80]	; 0x50
90018ad2:	9205      	str	r2, [sp, #20]
90018ad4:	e9dd 9216 	ldrd	r9, r2, [sp, #88]	; 0x58
90018ad8:	9206      	str	r2, [sp, #24]
90018ada:	bb0a      	cbnz	r2, 90018b20 <EwRasterAlpha8Polygon+0x62>
90018adc:	f1b9 0f00 	cmp.w	r9, #0
90018ae0:	bf14      	ite	ne
90018ae2:	2104      	movne	r1, #4
90018ae4:	2101      	moveq	r1, #1
90018ae6:	f8d8 0008 	ldr.w	r0, [r8, #8]
90018aea:	fb0b f101 	mul.w	r1, fp, r1
90018aee:	f8d8 4000 	ldr.w	r4, [r8]
90018af2:	fb00 5003 	mla	r0, r0, r3, r5
90018af6:	4404      	add	r4, r0
90018af8:	4608      	mov	r0, r1
90018afa:	9107      	str	r1, [sp, #28]
90018afc:	f00e f8da 	bl	90026cb4 <EwAlloc>
90018b00:	9907      	ldr	r1, [sp, #28]
90018b02:	4605      	mov	r5, r0
90018b04:	2800      	cmp	r0, #0
90018b06:	d162      	bne.n	90018bce <EwRasterAlpha8Polygon+0x110>
90018b08:	200f      	movs	r0, #15
90018b0a:	f005 fc53 	bl	9001e3b4 <EwImmediateReclaimMemory>
90018b0e:	9907      	ldr	r1, [sp, #28]
90018b10:	2800      	cmp	r0, #0
90018b12:	d1f1      	bne.n	90018af8 <EwRasterAlpha8Polygon+0x3a>
90018b14:	200f      	movs	r0, #15
90018b16:	b009      	add	sp, #36	; 0x24
90018b18:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b1c:	f004 bc98 	b.w	9001d450 <EwError>
90018b20:	2108      	movs	r1, #8
90018b22:	e7e0      	b.n	90018ae6 <EwRasterAlpha8Polygon+0x28>
90018b24:	9b06      	ldr	r3, [sp, #24]
90018b26:	2b00      	cmp	r3, #0
90018b28:	d039      	beq.n	90018b9e <EwRasterAlpha8Polygon+0xe0>
90018b2a:	f1b9 0f00 	cmp.w	r9, #0
90018b2e:	d02c      	beq.n	90018b8a <EwRasterAlpha8Polygon+0xcc>
90018b30:	2300      	movs	r3, #0
90018b32:	465a      	mov	r2, fp
90018b34:	4629      	mov	r1, r5
90018b36:	4620      	mov	r0, r4
90018b38:	9700      	str	r7, [sp, #0]
90018b3a:	e9cd 6301 	strd	r6, r3, [sp, #4]
90018b3e:	4653      	mov	r3, sl
90018b40:	f7ff f942 	bl	90017dc8 <EwCleanSurfaceCache+0xec>
90018b44:	9b05      	ldr	r3, [sp, #20]
90018b46:	3710      	adds	r7, #16
90018b48:	3b01      	subs	r3, #1
90018b4a:	9305      	str	r3, [sp, #20]
90018b4c:	f8d8 3008 	ldr.w	r3, [r8, #8]
90018b50:	441c      	add	r4, r3
90018b52:	9b05      	ldr	r3, [sp, #20]
90018b54:	2b00      	cmp	r3, #0
90018b56:	dce5      	bgt.n	90018b24 <EwRasterAlpha8Polygon+0x66>
90018b58:	4b1e      	ldr	r3, [pc, #120]	; (90018bd4 <EwRasterAlpha8Polygon+0x116>)
90018b5a:	4628      	mov	r0, r5
90018b5c:	681a      	ldr	r2, [r3, #0]
90018b5e:	4b1e      	ldr	r3, [pc, #120]	; (90018bd8 <EwRasterAlpha8Polygon+0x11a>)
90018b60:	3204      	adds	r2, #4
90018b62:	6819      	ldr	r1, [r3, #0]
90018b64:	428a      	cmp	r2, r1
90018b66:	491d      	ldr	r1, [pc, #116]	; (90018bdc <EwRasterAlpha8Polygon+0x11e>)
90018b68:	bfc8      	it	gt
90018b6a:	601a      	strgt	r2, [r3, #0]
90018b6c:	4b1c      	ldr	r3, [pc, #112]	; (90018be0 <EwRasterAlpha8Polygon+0x122>)
90018b6e:	6809      	ldr	r1, [r1, #0]
90018b70:	681b      	ldr	r3, [r3, #0]
90018b72:	440b      	add	r3, r1
90018b74:	4413      	add	r3, r2
90018b76:	4a1b      	ldr	r2, [pc, #108]	; (90018be4 <EwRasterAlpha8Polygon+0x126>)
90018b78:	6811      	ldr	r1, [r2, #0]
90018b7a:	428b      	cmp	r3, r1
90018b7c:	bfc8      	it	gt
90018b7e:	6013      	strgt	r3, [r2, #0]
90018b80:	b009      	add	sp, #36	; 0x24
90018b82:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018b86:	f00e b897 	b.w	90026cb8 <EwFree>
90018b8a:	4653      	mov	r3, sl
90018b8c:	465a      	mov	r2, fp
90018b8e:	4629      	mov	r1, r5
90018b90:	4620      	mov	r0, r4
90018b92:	9700      	str	r7, [sp, #0]
90018b94:	e9cd 6901 	strd	r6, r9, [sp, #4]
90018b98:	f7ff fa60 	bl	9001805c <EwCleanSurfaceCache+0x380>
90018b9c:	e7d2      	b.n	90018b44 <EwRasterAlpha8Polygon+0x86>
90018b9e:	f1b9 0f00 	cmp.w	r9, #0
90018ba2:	d00a      	beq.n	90018bba <EwRasterAlpha8Polygon+0xfc>
90018ba4:	9b06      	ldr	r3, [sp, #24]
90018ba6:	465a      	mov	r2, fp
90018ba8:	4629      	mov	r1, r5
90018baa:	4620      	mov	r0, r4
90018bac:	9700      	str	r7, [sp, #0]
90018bae:	e9cd 6301 	strd	r6, r3, [sp, #4]
90018bb2:	4653      	mov	r3, sl
90018bb4:	f7ff fb56 	bl	90018264 <EwCleanSurfaceCache+0x588>
90018bb8:	e7c4      	b.n	90018b44 <EwRasterAlpha8Polygon+0x86>
90018bba:	4653      	mov	r3, sl
90018bbc:	465a      	mov	r2, fp
90018bbe:	4629      	mov	r1, r5
90018bc0:	4620      	mov	r0, r4
90018bc2:	9700      	str	r7, [sp, #0]
90018bc4:	e9cd 6901 	strd	r6, r9, [sp, #4]
90018bc8:	f7ff fc6e 	bl	900184a8 <EwCleanSurfaceCache+0x7cc>
90018bcc:	e7ba      	b.n	90018b44 <EwRasterAlpha8Polygon+0x86>
90018bce:	f00e f899 	bl	90026d04 <EwZero>
90018bd2:	e7be      	b.n	90018b52 <EwRasterAlpha8Polygon+0x94>
90018bd4:	200002bc 	.word	0x200002bc
90018bd8:	200002d8 	.word	0x200002d8
90018bdc:	200002b8 	.word	0x200002b8
90018be0:	200002ac 	.word	0x200002ac
90018be4:	200002c0 	.word	0x200002c0

90018be8 <EwEmulateLine>:
90018be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018bec:	b097      	sub	sp, #92	; 0x5c
90018bee:	1a5c      	subs	r4, r3, r1
90018bf0:	4682      	mov	sl, r0
90018bf2:	040e      	lsls	r6, r1, #16
90018bf4:	f8dd c080 	ldr.w	ip, [sp, #128]	; 0x80
90018bf8:	2c00      	cmp	r4, #0
90018bfa:	9d25      	ldr	r5, [sp, #148]	; 0x94
90018bfc:	ea4f 4702 	mov.w	r7, r2, lsl #16
90018c00:	ebac 0e02 	sub.w	lr, ip, r2
90018c04:	bfb8      	it	lt
90018c06:	4264      	neglt	r4, r4
90018c08:	6828      	ldr	r0, [r5, #0]
90018c0a:	f506 4600 	add.w	r6, r6, #32768	; 0x8000
90018c0e:	f1be 0f00 	cmp.w	lr, #0
90018c12:	46a1      	mov	r9, r4
90018c14:	9000      	str	r0, [sp, #0]
90018c16:	f507 4700 	add.w	r7, r7, #32768	; 0x8000
90018c1a:	bfb8      	it	lt
90018c1c:	f1ce 0e00 	rsblt	lr, lr, #0
90018c20:	6928      	ldr	r0, [r5, #16]
90018c22:	4574      	cmp	r4, lr
90018c24:	9004      	str	r0, [sp, #16]
90018c26:	6a28      	ldr	r0, [r5, #32]
90018c28:	bfb8      	it	lt
90018c2a:	46f1      	movlt	r9, lr
90018c2c:	4574      	cmp	r4, lr
90018c2e:	9008      	str	r0, [sp, #32]
90018c30:	bfcc      	ite	gt
90018c32:	ea4f 480e 	movgt.w	r8, lr, lsl #16
90018c36:	f44f 3880 	movle.w	r8, #65536	; 0x10000
90018c3a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90018c3c:	bfc8      	it	gt
90018c3e:	fb98 f8f4 	sdivgt	r8, r8, r4
90018c42:	4574      	cmp	r4, lr
90018c44:	900c      	str	r0, [sp, #48]	; 0x30
90018c46:	bfb6      	itet	lt
90018c48:	0424      	lsllt	r4, r4, #16
90018c4a:	f44f 3b80 	movge.w	fp, #65536	; 0x10000
90018c4e:	fb94 fbfe 	sdivlt	fp, r4, lr
90018c52:	428b      	cmp	r3, r1
90018c54:	bfb8      	it	lt
90018c56:	f1cb 0b00 	rsblt	fp, fp, #0
90018c5a:	4594      	cmp	ip, r2
90018c5c:	da01      	bge.n	90018c62 <EwEmulateLine+0x7a>
90018c5e:	f1c8 0800 	rsb	r8, r8, #0
90018c62:	f1b9 0f00 	cmp.w	r9, #0
90018c66:	d102      	bne.n	90018c6e <EwEmulateLine+0x86>
90018c68:	b017      	add	sp, #92	; 0x5c
90018c6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018c6e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90018c70:	1431      	asrs	r1, r6, #16
90018c72:	ebb3 4f26 	cmp.w	r3, r6, asr #16
90018c76:	dc0e      	bgt.n	90018c96 <EwEmulateLine+0xae>
90018c78:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90018c7a:	4299      	cmp	r1, r3
90018c7c:	da0b      	bge.n	90018c96 <EwEmulateLine+0xae>
90018c7e:	9b22      	ldr	r3, [sp, #136]	; 0x88
90018c80:	143a      	asrs	r2, r7, #16
90018c82:	ebb3 4f27 	cmp.w	r3, r7, asr #16
90018c86:	dc06      	bgt.n	90018c96 <EwEmulateLine+0xae>
90018c88:	9b24      	ldr	r3, [sp, #144]	; 0x90
90018c8a:	429a      	cmp	r2, r3
90018c8c:	da03      	bge.n	90018c96 <EwEmulateLine+0xae>
90018c8e:	466b      	mov	r3, sp
90018c90:	4650      	mov	r0, sl
90018c92:	9c26      	ldr	r4, [sp, #152]	; 0x98
90018c94:	47a0      	blx	r4
90018c96:	6d2b      	ldr	r3, [r5, #80]	; 0x50
90018c98:	445e      	add	r6, fp
90018c9a:	4447      	add	r7, r8
90018c9c:	b17b      	cbz	r3, 90018cbe <EwEmulateLine+0xd6>
90018c9e:	686a      	ldr	r2, [r5, #4]
90018ca0:	9b00      	ldr	r3, [sp, #0]
90018ca2:	4413      	add	r3, r2
90018ca4:	696a      	ldr	r2, [r5, #20]
90018ca6:	9300      	str	r3, [sp, #0]
90018ca8:	9b04      	ldr	r3, [sp, #16]
90018caa:	4413      	add	r3, r2
90018cac:	6a6a      	ldr	r2, [r5, #36]	; 0x24
90018cae:	9304      	str	r3, [sp, #16]
90018cb0:	9b08      	ldr	r3, [sp, #32]
90018cb2:	4413      	add	r3, r2
90018cb4:	6b6a      	ldr	r2, [r5, #52]	; 0x34
90018cb6:	9308      	str	r3, [sp, #32]
90018cb8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90018cba:	4413      	add	r3, r2
90018cbc:	930c      	str	r3, [sp, #48]	; 0x30
90018cbe:	f109 39ff 	add.w	r9, r9, #4294967295
90018cc2:	e7ce      	b.n	90018c62 <EwEmulateLine+0x7a>

90018cc4 <EwEmulateFill>:
90018cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018cc8:	ed2d 8b02 	vpush	{d8}
90018ccc:	b09d      	sub	sp, #116	; 0x74
90018cce:	4605      	mov	r5, r0
90018cd0:	ee08 3a10 	vmov	s16, r3
90018cd4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90018cd6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90018cd8:	6d60      	ldr	r0, [r4, #84]	; 0x54
90018cda:	f8d4 9000 	ldr.w	r9, [r4]
90018cde:	9003      	str	r0, [sp, #12]
90018ce0:	6828      	ldr	r0, [r5, #0]
90018ce2:	f8d4 8010 	ldr.w	r8, [r4, #16]
90018ce6:	9004      	str	r0, [sp, #16]
90018ce8:	68e8      	ldr	r0, [r5, #12]
90018cea:	6a27      	ldr	r7, [r4, #32]
90018cec:	9005      	str	r0, [sp, #20]
90018cee:	f8d4 b028 	ldr.w	fp, [r4, #40]	; 0x28
90018cf2:	f8d4 a038 	ldr.w	sl, [r4, #56]	; 0x38
90018cf6:	e9d5 0601 	ldrd	r0, r6, [r5, #4]
90018cfa:	4348      	muls	r0, r1
90018cfc:	fb06 0602 	mla	r6, r6, r2, r0
90018d00:	9804      	ldr	r0, [sp, #16]
90018d02:	4406      	add	r6, r0
90018d04:	602e      	str	r6, [r5, #0]
90018d06:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
90018d0a:	4371      	muls	r1, r6
90018d0c:	6b26      	ldr	r6, [r4, #48]	; 0x30
90018d0e:	fb00 1202 	mla	r2, r0, r2, r1
90018d12:	9905      	ldr	r1, [sp, #20]
90018d14:	440a      	add	r2, r1
90018d16:	60ea      	str	r2, [r5, #12]
90018d18:	68a2      	ldr	r2, [r4, #8]
90018d1a:	9201      	str	r2, [sp, #4]
90018d1c:	69a2      	ldr	r2, [r4, #24]
90018d1e:	9200      	str	r2, [sp, #0]
90018d20:	6d22      	ldr	r2, [r4, #80]	; 0x50
90018d22:	b1e2      	cbz	r2, 90018d5e <EwEmulateFill+0x9a>
90018d24:	b1db      	cbz	r3, 90018d5e <EwEmulateFill+0x9a>
90018d26:	6862      	ldr	r2, [r4, #4]
90018d28:	9901      	ldr	r1, [sp, #4]
90018d2a:	fb02 9903 	mla	r9, r2, r3, r9
90018d2e:	68e2      	ldr	r2, [r4, #12]
90018d30:	fb02 1203 	mla	r2, r2, r3, r1
90018d34:	9900      	ldr	r1, [sp, #0]
90018d36:	9201      	str	r2, [sp, #4]
90018d38:	6962      	ldr	r2, [r4, #20]
90018d3a:	fb02 8803 	mla	r8, r2, r3, r8
90018d3e:	69e2      	ldr	r2, [r4, #28]
90018d40:	fb02 1203 	mla	r2, r2, r3, r1
90018d44:	9200      	str	r2, [sp, #0]
90018d46:	6a62      	ldr	r2, [r4, #36]	; 0x24
90018d48:	fb02 7703 	mla	r7, r2, r3, r7
90018d4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90018d4e:	fb02 bb03 	mla	fp, r2, r3, fp
90018d52:	6b62      	ldr	r2, [r4, #52]	; 0x34
90018d54:	fb02 6603 	mla	r6, r2, r3, r6
90018d58:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90018d5a:	fb02 aa03 	mla	sl, r2, r3, sl
90018d5e:	f009 637f 	and.w	r3, r9, #267386880	; 0xff00000
90018d62:	9306      	str	r3, [sp, #24]
90018d64:	f008 637f 	and.w	r3, r8, #267386880	; 0xff00000
90018d68:	930a      	str	r3, [sp, #40]	; 0x28
90018d6a:	f007 637f 	and.w	r3, r7, #267386880	; 0xff00000
90018d6e:	930e      	str	r3, [sp, #56]	; 0x38
90018d70:	f006 637f 	and.w	r3, r6, #267386880	; 0xff00000
90018d74:	9312      	str	r3, [sp, #72]	; 0x48
90018d76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90018d78:	9302      	str	r3, [sp, #8]
90018d7a:	9b02      	ldr	r3, [sp, #8]
90018d7c:	2b00      	cmp	r3, #0
90018d7e:	dc08      	bgt.n	90018d92 <EwEmulateFill+0xce>
90018d80:	9b04      	ldr	r3, [sp, #16]
90018d82:	602b      	str	r3, [r5, #0]
90018d84:	9b05      	ldr	r3, [sp, #20]
90018d86:	60eb      	str	r3, [r5, #12]
90018d88:	b01d      	add	sp, #116	; 0x74
90018d8a:	ecbd 8b02 	vpop	{d8}
90018d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018d92:	9a03      	ldr	r2, [sp, #12]
90018d94:	2a00      	cmp	r2, #0
90018d96:	d033      	beq.n	90018e00 <EwEmulateFill+0x13c>
90018d98:	9901      	ldr	r1, [sp, #4]
90018d9a:	ea4f 5029 	mov.w	r0, r9, asr #20
90018d9e:	9b00      	ldr	r3, [sp, #0]
90018da0:	ea4f 5c27 	mov.w	ip, r7, asr #20
90018da4:	ebc0 5021 	rsb	r0, r0, r1, asr #20
90018da8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
90018daa:	ea4f 5128 	mov.w	r1, r8, asr #20
90018dae:	ea4f 5e26 	mov.w	lr, r6, asr #20
90018db2:	4350      	muls	r0, r2
90018db4:	ebc1 5123 	rsb	r1, r1, r3, asr #20
90018db8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018dba:	ebcc 5c2b 	rsb	ip, ip, fp, asr #20
90018dbe:	9007      	str	r0, [sp, #28]
90018dc0:	ebce 5e2a 	rsb	lr, lr, sl, asr #20
90018dc4:	4351      	muls	r1, r2
90018dc6:	fb02 fc0c 	mul.w	ip, r2, ip
90018dca:	fb02 f20e 	mul.w	r2, r2, lr
90018dce:	910b      	str	r1, [sp, #44]	; 0x2c
90018dd0:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
90018dd4:	9213      	str	r2, [sp, #76]	; 0x4c
90018dd6:	b18b      	cbz	r3, 90018dfc <EwEmulateFill+0x138>
90018dd8:	9b06      	ldr	r3, [sp, #24]
90018dda:	469e      	mov	lr, r3
90018ddc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90018dde:	fb03 e000 	mla	r0, r3, r0, lr
90018de2:	9006      	str	r0, [sp, #24]
90018de4:	980a      	ldr	r0, [sp, #40]	; 0x28
90018de6:	fb03 0101 	mla	r1, r3, r1, r0
90018dea:	910a      	str	r1, [sp, #40]	; 0x28
90018dec:	990e      	ldr	r1, [sp, #56]	; 0x38
90018dee:	fb03 110c 	mla	r1, r3, ip, r1
90018df2:	910e      	str	r1, [sp, #56]	; 0x38
90018df4:	9912      	ldr	r1, [sp, #72]	; 0x48
90018df6:	fb03 1202 	mla	r2, r3, r2, r1
90018dfa:	9212      	str	r2, [sp, #72]	; 0x48
90018dfc:	6d23      	ldr	r3, [r4, #80]	; 0x50
90018dfe:	9303      	str	r3, [sp, #12]
90018e00:	aa06      	add	r2, sp, #24
90018e02:	ee18 1a10 	vmov	r1, s16
90018e06:	4628      	mov	r0, r5
90018e08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90018e0a:	4798      	blx	r3
90018e0c:	682a      	ldr	r2, [r5, #0]
90018e0e:	68a9      	ldr	r1, [r5, #8]
90018e10:	440a      	add	r2, r1
90018e12:	6969      	ldr	r1, [r5, #20]
90018e14:	602a      	str	r2, [r5, #0]
90018e16:	68ea      	ldr	r2, [r5, #12]
90018e18:	440a      	add	r2, r1
90018e1a:	60ea      	str	r2, [r5, #12]
90018e1c:	6d22      	ldr	r2, [r4, #80]	; 0x50
90018e1e:	b1fa      	cbz	r2, 90018e60 <EwEmulateFill+0x19c>
90018e20:	6862      	ldr	r2, [r4, #4]
90018e22:	9b01      	ldr	r3, [sp, #4]
90018e24:	4491      	add	r9, r2
90018e26:	f009 627f 	and.w	r2, r9, #267386880	; 0xff00000
90018e2a:	9206      	str	r2, [sp, #24]
90018e2c:	68e2      	ldr	r2, [r4, #12]
90018e2e:	4413      	add	r3, r2
90018e30:	6962      	ldr	r2, [r4, #20]
90018e32:	4490      	add	r8, r2
90018e34:	9301      	str	r3, [sp, #4]
90018e36:	9b00      	ldr	r3, [sp, #0]
90018e38:	f008 627f 	and.w	r2, r8, #267386880	; 0xff00000
90018e3c:	920a      	str	r2, [sp, #40]	; 0x28
90018e3e:	69e2      	ldr	r2, [r4, #28]
90018e40:	4413      	add	r3, r2
90018e42:	6a62      	ldr	r2, [r4, #36]	; 0x24
90018e44:	4417      	add	r7, r2
90018e46:	9300      	str	r3, [sp, #0]
90018e48:	f007 627f 	and.w	r2, r7, #267386880	; 0xff00000
90018e4c:	920e      	str	r2, [sp, #56]	; 0x38
90018e4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90018e50:	4493      	add	fp, r2
90018e52:	6b62      	ldr	r2, [r4, #52]	; 0x34
90018e54:	4416      	add	r6, r2
90018e56:	f006 627f 	and.w	r2, r6, #267386880	; 0xff00000
90018e5a:	9212      	str	r2, [sp, #72]	; 0x48
90018e5c:	6be2      	ldr	r2, [r4, #60]	; 0x3c
90018e5e:	4492      	add	sl, r2
90018e60:	9b02      	ldr	r3, [sp, #8]
90018e62:	3b01      	subs	r3, #1
90018e64:	e788      	b.n	90018d78 <EwEmulateFill+0xb4>

90018e66 <EwEmulateCopy>:
90018e66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018e6a:	b0a1      	sub	sp, #132	; 0x84
90018e6c:	460d      	mov	r5, r1
90018e6e:	6887      	ldr	r7, [r0, #8]
90018e70:	9c2e      	ldr	r4, [sp, #184]	; 0xb8
90018e72:	9930      	ldr	r1, [sp, #192]	; 0xc0
90018e74:	6d66      	ldr	r6, [r4, #84]	; 0x54
90018e76:	f8d4 9000 	ldr.w	r9, [r4]
90018e7a:	9604      	str	r6, [sp, #16]
90018e7c:	6806      	ldr	r6, [r0, #0]
90018e7e:	9605      	str	r6, [sp, #20]
90018e80:	68c6      	ldr	r6, [r0, #12]
90018e82:	9606      	str	r6, [sp, #24]
90018e84:	682e      	ldr	r6, [r5, #0]
90018e86:	9607      	str	r6, [sp, #28]
90018e88:	68ee      	ldr	r6, [r5, #12]
90018e8a:	9608      	str	r6, [sp, #32]
90018e8c:	6846      	ldr	r6, [r0, #4]
90018e8e:	4356      	muls	r6, r2
90018e90:	fb07 6603 	mla	r6, r7, r3, r6
90018e94:	9f05      	ldr	r7, [sp, #20]
90018e96:	443e      	add	r6, r7
90018e98:	6006      	str	r6, [r0, #0]
90018e9a:	e9d0 7604 	ldrd	r7, r6, [r0, #16]
90018e9e:	e9dd ec2c 	ldrd	lr, ip, [sp, #176]	; 0xb0
90018ea2:	437a      	muls	r2, r7
90018ea4:	fb06 2203 	mla	r2, r6, r3, r2
90018ea8:	9b06      	ldr	r3, [sp, #24]
90018eaa:	682e      	ldr	r6, [r5, #0]
90018eac:	441a      	add	r2, r3
90018eae:	60c2      	str	r2, [r0, #12]
90018eb0:	e9d5 3201 	ldrd	r3, r2, [r5, #4]
90018eb4:	fb0e f303 	mul.w	r3, lr, r3
90018eb8:	fb02 320c 	mla	r2, r2, ip, r3
90018ebc:	4432      	add	r2, r6
90018ebe:	68ee      	ldr	r6, [r5, #12]
90018ec0:	602a      	str	r2, [r5, #0]
90018ec2:	e9d5 2304 	ldrd	r2, r3, [r5, #16]
90018ec6:	fb0e f202 	mul.w	r2, lr, r2
90018eca:	fb03 230c 	mla	r3, r3, ip, r2
90018ece:	4433      	add	r3, r6
90018ed0:	60eb      	str	r3, [r5, #12]
90018ed2:	68a3      	ldr	r3, [r4, #8]
90018ed4:	f8d4 8010 	ldr.w	r8, [r4, #16]
90018ed8:	9302      	str	r3, [sp, #8]
90018eda:	69a3      	ldr	r3, [r4, #24]
90018edc:	6a27      	ldr	r7, [r4, #32]
90018ede:	9301      	str	r3, [sp, #4]
90018ee0:	6b23      	ldr	r3, [r4, #48]	; 0x30
90018ee2:	f8d4 b028 	ldr.w	fp, [r4, #40]	; 0x28
90018ee6:	9300      	str	r3, [sp, #0]
90018ee8:	6d23      	ldr	r3, [r4, #80]	; 0x50
90018eea:	f8d4 a038 	ldr.w	sl, [r4, #56]	; 0x38
90018eee:	b1f3      	cbz	r3, 90018f2e <EwEmulateCopy+0xc8>
90018ef0:	b1e9      	cbz	r1, 90018f2e <EwEmulateCopy+0xc8>
90018ef2:	6863      	ldr	r3, [r4, #4]
90018ef4:	9a02      	ldr	r2, [sp, #8]
90018ef6:	fb03 9901 	mla	r9, r3, r1, r9
90018efa:	68e3      	ldr	r3, [r4, #12]
90018efc:	fb03 2301 	mla	r3, r3, r1, r2
90018f00:	9a01      	ldr	r2, [sp, #4]
90018f02:	9302      	str	r3, [sp, #8]
90018f04:	6963      	ldr	r3, [r4, #20]
90018f06:	fb03 8801 	mla	r8, r3, r1, r8
90018f0a:	69e3      	ldr	r3, [r4, #28]
90018f0c:	fb03 2301 	mla	r3, r3, r1, r2
90018f10:	9a00      	ldr	r2, [sp, #0]
90018f12:	9301      	str	r3, [sp, #4]
90018f14:	6a63      	ldr	r3, [r4, #36]	; 0x24
90018f16:	fb03 7701 	mla	r7, r3, r1, r7
90018f1a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90018f1c:	fb03 bb01 	mla	fp, r3, r1, fp
90018f20:	6b63      	ldr	r3, [r4, #52]	; 0x34
90018f22:	fb03 2301 	mla	r3, r3, r1, r2
90018f26:	9300      	str	r3, [sp, #0]
90018f28:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90018f2a:	fb03 aa01 	mla	sl, r3, r1, sl
90018f2e:	f009 637f 	and.w	r3, r9, #267386880	; 0xff00000
90018f32:	930a      	str	r3, [sp, #40]	; 0x28
90018f34:	f008 637f 	and.w	r3, r8, #267386880	; 0xff00000
90018f38:	930e      	str	r3, [sp, #56]	; 0x38
90018f3a:	f007 637f 	and.w	r3, r7, #267386880	; 0xff00000
90018f3e:	9312      	str	r3, [sp, #72]	; 0x48
90018f40:	9b00      	ldr	r3, [sp, #0]
90018f42:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90018f46:	9316      	str	r3, [sp, #88]	; 0x58
90018f48:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90018f4a:	9303      	str	r3, [sp, #12]
90018f4c:	9b03      	ldr	r3, [sp, #12]
90018f4e:	2b00      	cmp	r3, #0
90018f50:	dc0a      	bgt.n	90018f68 <EwEmulateCopy+0x102>
90018f52:	9b05      	ldr	r3, [sp, #20]
90018f54:	6003      	str	r3, [r0, #0]
90018f56:	9b06      	ldr	r3, [sp, #24]
90018f58:	60c3      	str	r3, [r0, #12]
90018f5a:	9b07      	ldr	r3, [sp, #28]
90018f5c:	602b      	str	r3, [r5, #0]
90018f5e:	9b08      	ldr	r3, [sp, #32]
90018f60:	60eb      	str	r3, [r5, #12]
90018f62:	b021      	add	sp, #132	; 0x84
90018f64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018f68:	9b04      	ldr	r3, [sp, #16]
90018f6a:	2b00      	cmp	r3, #0
90018f6c:	d034      	beq.n	90018fd8 <EwEmulateCopy+0x172>
90018f6e:	9a02      	ldr	r2, [sp, #8]
90018f70:	ea4f 5129 	mov.w	r1, r9, asr #20
90018f74:	9e01      	ldr	r6, [sp, #4]
90018f76:	ea4f 5c27 	mov.w	ip, r7, asr #20
90018f7a:	ebc1 5122 	rsb	r1, r1, r2, asr #20
90018f7e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
90018f80:	ea4f 5228 	mov.w	r2, r8, asr #20
90018f84:	ebcc 5c2b 	rsb	ip, ip, fp, asr #20
90018f88:	4359      	muls	r1, r3
90018f8a:	ebc2 5226 	rsb	r2, r2, r6, asr #20
90018f8e:	9e00      	ldr	r6, [sp, #0]
90018f90:	fb03 fc0c 	mul.w	ip, r3, ip
90018f94:	ea4f 5e26 	mov.w	lr, r6, asr #20
90018f98:	435a      	muls	r2, r3
90018f9a:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
90018f9c:	ebce 5e2a 	rsb	lr, lr, sl, asr #20
90018fa0:	910b      	str	r1, [sp, #44]	; 0x2c
90018fa2:	920f      	str	r2, [sp, #60]	; 0x3c
90018fa4:	fb03 f30e 	mul.w	r3, r3, lr
90018fa8:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
90018fac:	9317      	str	r3, [sp, #92]	; 0x5c
90018fae:	b18e      	cbz	r6, 90018fd4 <EwEmulateCopy+0x16e>
90018fb0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
90018fb2:	46b6      	mov	lr, r6
90018fb4:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
90018fb6:	fb06 e101 	mla	r1, r6, r1, lr
90018fba:	910a      	str	r1, [sp, #40]	; 0x28
90018fbc:	990e      	ldr	r1, [sp, #56]	; 0x38
90018fbe:	fb06 1202 	mla	r2, r6, r2, r1
90018fc2:	920e      	str	r2, [sp, #56]	; 0x38
90018fc4:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018fc6:	fb06 220c 	mla	r2, r6, ip, r2
90018fca:	9212      	str	r2, [sp, #72]	; 0x48
90018fcc:	9a16      	ldr	r2, [sp, #88]	; 0x58
90018fce:	fb06 2303 	mla	r3, r6, r3, r2
90018fd2:	9316      	str	r3, [sp, #88]	; 0x58
90018fd4:	6d23      	ldr	r3, [r4, #80]	; 0x50
90018fd6:	9304      	str	r3, [sp, #16]
90018fd8:	ab0a      	add	r3, sp, #40	; 0x28
90018fda:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
90018fdc:	9009      	str	r0, [sp, #36]	; 0x24
90018fde:	4629      	mov	r1, r5
90018fe0:	9e31      	ldr	r6, [sp, #196]	; 0xc4
90018fe2:	47b0      	blx	r6
90018fe4:	9809      	ldr	r0, [sp, #36]	; 0x24
90018fe6:	6803      	ldr	r3, [r0, #0]
90018fe8:	6882      	ldr	r2, [r0, #8]
90018fea:	4413      	add	r3, r2
90018fec:	6942      	ldr	r2, [r0, #20]
90018fee:	6003      	str	r3, [r0, #0]
90018ff0:	68c3      	ldr	r3, [r0, #12]
90018ff2:	4413      	add	r3, r2
90018ff4:	68aa      	ldr	r2, [r5, #8]
90018ff6:	60c3      	str	r3, [r0, #12]
90018ff8:	682b      	ldr	r3, [r5, #0]
90018ffa:	4413      	add	r3, r2
90018ffc:	696a      	ldr	r2, [r5, #20]
90018ffe:	602b      	str	r3, [r5, #0]
90019000:	68eb      	ldr	r3, [r5, #12]
90019002:	4413      	add	r3, r2
90019004:	60eb      	str	r3, [r5, #12]
90019006:	6d23      	ldr	r3, [r4, #80]	; 0x50
90019008:	b30b      	cbz	r3, 9001904e <EwEmulateCopy+0x1e8>
9001900a:	6863      	ldr	r3, [r4, #4]
9001900c:	9a02      	ldr	r2, [sp, #8]
9001900e:	4499      	add	r9, r3
90019010:	f009 637f 	and.w	r3, r9, #267386880	; 0xff00000
90019014:	930a      	str	r3, [sp, #40]	; 0x28
90019016:	68e3      	ldr	r3, [r4, #12]
90019018:	441a      	add	r2, r3
9001901a:	6963      	ldr	r3, [r4, #20]
9001901c:	4498      	add	r8, r3
9001901e:	9202      	str	r2, [sp, #8]
90019020:	9a01      	ldr	r2, [sp, #4]
90019022:	f008 637f 	and.w	r3, r8, #267386880	; 0xff00000
90019026:	930e      	str	r3, [sp, #56]	; 0x38
90019028:	69e3      	ldr	r3, [r4, #28]
9001902a:	441a      	add	r2, r3
9001902c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001902e:	441f      	add	r7, r3
90019030:	9201      	str	r2, [sp, #4]
90019032:	9a00      	ldr	r2, [sp, #0]
90019034:	f007 637f 	and.w	r3, r7, #267386880	; 0xff00000
90019038:	9312      	str	r3, [sp, #72]	; 0x48
9001903a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001903c:	449b      	add	fp, r3
9001903e:	6b63      	ldr	r3, [r4, #52]	; 0x34
90019040:	441a      	add	r2, r3
90019042:	f002 637f 	and.w	r3, r2, #267386880	; 0xff00000
90019046:	9200      	str	r2, [sp, #0]
90019048:	9316      	str	r3, [sp, #88]	; 0x58
9001904a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001904c:	449a      	add	sl, r3
9001904e:	9b03      	ldr	r3, [sp, #12]
90019050:	3b01      	subs	r3, #1
90019052:	e77a      	b.n	90018f4a <EwEmulateCopy+0xe4>

90019054 <EwEmulateWarp>:
90019054:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019058:	4684      	mov	ip, r0
9001905a:	b0d5      	sub	sp, #340	; 0x154
9001905c:	460c      	mov	r4, r1
9001905e:	9029      	str	r0, [sp, #164]	; 0xa4
90019060:	ae46      	add	r6, sp, #280	; 0x118
90019062:	9211      	str	r2, [sp, #68]	; 0x44
90019064:	930d      	str	r3, [sp, #52]	; 0x34
90019066:	9d62      	ldr	r5, [sp, #392]	; 0x188
90019068:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
9001906c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9001906e:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
90019072:	e886 0007 	stmia.w	r6, {r0, r1, r2}
90019076:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90019078:	ae4d      	add	r6, sp, #308	; 0x134
9001907a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
9001907c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
90019080:	e9dd 7e68 	ldrd	r7, lr, [sp, #416]	; 0x1a0
90019084:	e886 0007 	stmia.w	r6, {r0, r1, r2}
90019088:	9a61      	ldr	r2, [sp, #388]	; 0x184
9001908a:	2300      	movs	r3, #0
9001908c:	995e      	ldr	r1, [sp, #376]	; 0x178
9001908e:	428a      	cmp	r2, r1
90019090:	e9cd 333c 	strd	r3, r3, [sp, #240]	; 0xf0
90019094:	e9cd 333e 	strd	r3, r3, [sp, #248]	; 0xf8
90019098:	e9cd 3340 	strd	r3, r3, [sp, #256]	; 0x100
9001909c:	e9cd 3342 	strd	r3, r3, [sp, #264]	; 0x108
900190a0:	d107      	bne.n	900190b2 <EwEmulateWarp+0x5e>
900190a2:	9a64      	ldr	r2, [sp, #400]	; 0x190
900190a4:	9961      	ldr	r1, [sp, #388]	; 0x184
900190a6:	428a      	cmp	r2, r1
900190a8:	d103      	bne.n	900190b2 <EwEmulateWarp+0x5e>
900190aa:	9b67      	ldr	r3, [sp, #412]	; 0x19c
900190ac:	1a9a      	subs	r2, r3, r2
900190ae:	4253      	negs	r3, r2
900190b0:	4153      	adcs	r3, r2
900190b2:	9313      	str	r3, [sp, #76]	; 0x4c
900190b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900190b6:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
900190ba:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
900190be:	f200 8135 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
900190c2:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
900190c4:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
900190c8:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
900190cc:	f200 812e 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
900190d0:	f505 43fa 	add.w	r3, r5, #32000	; 0x7d00
900190d4:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
900190d8:	f200 8128 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
900190dc:	9b65      	ldr	r3, [sp, #404]	; 0x194
900190de:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
900190e2:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
900190e6:	f200 8121 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
900190ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900190ec:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
900190f0:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
900190f4:	f200 811a 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
900190f8:	9b60      	ldr	r3, [sp, #384]	; 0x180
900190fa:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
900190fe:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
90019102:	f200 8113 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
90019106:	9b63      	ldr	r3, [sp, #396]	; 0x18c
90019108:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
9001910c:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
90019110:	f200 810c 	bhi.w	9001932c <EwEmulateWarp+0x2d8>
90019114:	9b66      	ldr	r3, [sp, #408]	; 0x198
90019116:	f503 43fa 	add.w	r3, r3, #32000	; 0x7d00
9001911a:	f5b3 4f7a 	cmp.w	r3, #64000	; 0xfa00
9001911e:	bf94      	ite	ls
90019120:	2300      	movls	r3, #0
90019122:	2301      	movhi	r3, #1
90019124:	930a      	str	r3, [sp, #40]	; 0x28
90019126:	9b4e      	ldr	r3, [sp, #312]	; 0x138
90019128:	9a4f      	ldr	r2, [sp, #316]	; 0x13c
9001912a:	437b      	muls	r3, r7
9001912c:	9966      	ldr	r1, [sp, #408]	; 0x198
9001912e:	fb02 330e 	mla	r3, r2, lr, r3
90019132:	9a4d      	ldr	r2, [sp, #308]	; 0x134
90019134:	4413      	add	r3, r2
90019136:	9a66      	ldr	r2, [sp, #408]	; 0x198
90019138:	934d      	str	r3, [sp, #308]	; 0x134
9001913a:	9b51      	ldr	r3, [sp, #324]	; 0x144
9001913c:	435f      	muls	r7, r3
9001913e:	9b52      	ldr	r3, [sp, #328]	; 0x148
90019140:	fb03 7e0e 	mla	lr, r3, lr, r7
90019144:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90019146:	9f50      	ldr	r7, [sp, #320]	; 0x140
90019148:	00db      	lsls	r3, r3, #3
9001914a:	4477      	add	r7, lr
9001914c:	932b      	str	r3, [sp, #172]	; 0xac
9001914e:	9b6e      	ldr	r3, [sp, #440]	; 0x1b8
90019150:	9750      	str	r7, [sp, #320]	; 0x140
90019152:	00db      	lsls	r3, r3, #3
90019154:	932c      	str	r3, [sp, #176]	; 0xb0
90019156:	9b63      	ldr	r3, [sp, #396]	; 0x18c
90019158:	4293      	cmp	r3, r2
9001915a:	bfa8      	it	ge
9001915c:	4613      	movge	r3, r2
9001915e:	461c      	mov	r4, r3
90019160:	9b60      	ldr	r3, [sp, #384]	; 0x180
90019162:	429c      	cmp	r4, r3
90019164:	bfa8      	it	ge
90019166:	461c      	movge	r4, r3
90019168:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001916a:	429c      	cmp	r4, r3
9001916c:	bfa8      	it	ge
9001916e:	461c      	movge	r4, r3
90019170:	9b63      	ldr	r3, [sp, #396]	; 0x18c
90019172:	428b      	cmp	r3, r1
90019174:	f104 0403 	add.w	r4, r4, #3
90019178:	bfb8      	it	lt
9001917a:	460b      	movlt	r3, r1
9001917c:	9960      	ldr	r1, [sp, #384]	; 0x180
9001917e:	f024 0207 	bic.w	r2, r4, #7
90019182:	9c6d      	ldr	r4, [sp, #436]	; 0x1b4
90019184:	428b      	cmp	r3, r1
90019186:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001918a:	bfb8      	it	lt
9001918c:	460b      	movlt	r3, r1
9001918e:	990d      	ldr	r1, [sp, #52]	; 0x34
90019190:	428b      	cmp	r3, r1
90019192:	bfb8      	it	lt
90019194:	460b      	movlt	r3, r1
90019196:	4294      	cmp	r4, r2
90019198:	f103 0303 	add.w	r3, r3, #3
9001919c:	bfb8      	it	lt
9001919e:	4614      	movlt	r4, r2
900191a0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
900191a2:	f023 0307 	bic.w	r3, r3, #7
900191a6:	00d2      	lsls	r2, r2, #3
900191a8:	429a      	cmp	r2, r3
900191aa:	bfa8      	it	ge
900191ac:	461a      	movge	r2, r3
900191ae:	9b60      	ldr	r3, [sp, #384]	; 0x180
900191b0:	1a5b      	subs	r3, r3, r1
900191b2:	922d      	str	r2, [sp, #180]	; 0xb4
900191b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
900191b6:	930b      	str	r3, [sp, #44]	; 0x2c
900191b8:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
900191ba:	1a9b      	subs	r3, r3, r2
900191bc:	9a5e      	ldr	r2, [sp, #376]	; 0x178
900191be:	9314      	str	r3, [sp, #80]	; 0x50
900191c0:	9b61      	ldr	r3, [sp, #388]	; 0x184
900191c2:	1a9b      	subs	r3, r3, r2
900191c4:	9315      	str	r3, [sp, #84]	; 0x54
900191c6:	9b63      	ldr	r3, [sp, #396]	; 0x18c
900191c8:	9a60      	ldr	r2, [sp, #384]	; 0x180
900191ca:	1a9b      	subs	r3, r3, r2
900191cc:	9a61      	ldr	r2, [sp, #388]	; 0x184
900191ce:	930c      	str	r3, [sp, #48]	; 0x30
900191d0:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
900191d2:	1aeb      	subs	r3, r5, r3
900191d4:	9316      	str	r3, [sp, #88]	; 0x58
900191d6:	9b64      	ldr	r3, [sp, #400]	; 0x190
900191d8:	1a9b      	subs	r3, r3, r2
900191da:	9a66      	ldr	r2, [sp, #408]	; 0x198
900191dc:	9317      	str	r3, [sp, #92]	; 0x5c
900191de:	9b63      	ldr	r3, [sp, #396]	; 0x18c
900191e0:	1a9b      	subs	r3, r3, r2
900191e2:	9a67      	ldr	r2, [sp, #412]	; 0x19c
900191e4:	9310      	str	r3, [sp, #64]	; 0x40
900191e6:	9b65      	ldr	r3, [sp, #404]	; 0x194
900191e8:	1aeb      	subs	r3, r5, r3
900191ea:	9318      	str	r3, [sp, #96]	; 0x60
900191ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
900191ee:	1a9b      	subs	r3, r3, r2
900191f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
900191f2:	9319      	str	r3, [sp, #100]	; 0x64
900191f4:	9b66      	ldr	r3, [sp, #408]	; 0x198
900191f6:	1a5b      	subs	r3, r3, r1
900191f8:	930e      	str	r3, [sp, #56]	; 0x38
900191fa:	9b65      	ldr	r3, [sp, #404]	; 0x194
900191fc:	1a9b      	subs	r3, r3, r2
900191fe:	9a5e      	ldr	r2, [sp, #376]	; 0x178
90019200:	931a      	str	r3, [sp, #104]	; 0x68
90019202:	9b67      	ldr	r3, [sp, #412]	; 0x19c
90019204:	1a9b      	subs	r3, r3, r2
90019206:	931b      	str	r3, [sp, #108]	; 0x6c
90019208:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001920a:	b19b      	cbz	r3, 90019234 <EwEmulateWarp+0x1e0>
9001920c:	aa3d      	add	r2, sp, #244	; 0xf4
9001920e:	a93c      	add	r1, sp, #240	; 0xf0
90019210:	980b      	ldr	r0, [sp, #44]	; 0x2c
90019212:	f7ff fa41 	bl	90018698 <EwCleanSurfaceCache+0x9bc>
90019216:	aa3f      	add	r2, sp, #252	; 0xfc
90019218:	a93e      	add	r1, sp, #248	; 0xf8
9001921a:	980c      	ldr	r0, [sp, #48]	; 0x30
9001921c:	f7ff fa3c 	bl	90018698 <EwCleanSurfaceCache+0x9bc>
90019220:	aa41      	add	r2, sp, #260	; 0x104
90019222:	a940      	add	r1, sp, #256	; 0x100
90019224:	9810      	ldr	r0, [sp, #64]	; 0x40
90019226:	f7ff fa37 	bl	90018698 <EwCleanSurfaceCache+0x9bc>
9001922a:	aa43      	add	r2, sp, #268	; 0x10c
9001922c:	a942      	add	r1, sp, #264	; 0x108
9001922e:	980e      	ldr	r0, [sp, #56]	; 0x38
90019230:	f7ff fa32 	bl	90018698 <EwCleanSurfaceCache+0x9bc>
90019234:	1d23      	adds	r3, r4, #4
90019236:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019238:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001923a:	9307      	str	r3, [sp, #28]
9001923c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001923e:	980c      	ldr	r0, [sp, #48]	; 0x30
90019240:	105b      	asrs	r3, r3, #1
90019242:	932e      	str	r3, [sp, #184]	; 0xb8
90019244:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019246:	105b      	asrs	r3, r3, #1
90019248:	932f      	str	r3, [sp, #188]	; 0xbc
9001924a:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001924c:	00db      	lsls	r3, r3, #3
9001924e:	9339      	str	r3, [sp, #228]	; 0xe4
90019250:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019252:	f1c3 0304 	rsb	r3, r3, #4
90019256:	4423      	add	r3, r4
90019258:	435a      	muls	r2, r3
9001925a:	eb02 0261 	add.w	r2, r2, r1, asr #1
9001925e:	9228      	str	r2, [sp, #160]	; 0xa0
90019260:	9a61      	ldr	r2, [sp, #388]	; 0x184
90019262:	00d2      	lsls	r2, r2, #3
90019264:	9238      	str	r2, [sp, #224]	; 0xe0
90019266:	9a61      	ldr	r2, [sp, #388]	; 0x184
90019268:	435a      	muls	r2, r3
9001926a:	eb02 0261 	add.w	r2, r2, r1, asr #1
9001926e:	9227      	str	r2, [sp, #156]	; 0x9c
90019270:	9a15      	ldr	r2, [sp, #84]	; 0x54
90019272:	00d2      	lsls	r2, r2, #3
90019274:	9236      	str	r2, [sp, #216]	; 0xd8
90019276:	9a15      	ldr	r2, [sp, #84]	; 0x54
90019278:	435a      	muls	r2, r3
9001927a:	eb02 0261 	add.w	r2, r2, r1, asr #1
9001927e:	9916      	ldr	r1, [sp, #88]	; 0x58
90019280:	9226      	str	r2, [sp, #152]	; 0x98
90019282:	9a16      	ldr	r2, [sp, #88]	; 0x58
90019284:	00d2      	lsls	r2, r2, #3
90019286:	9233      	str	r2, [sp, #204]	; 0xcc
90019288:	9a60      	ldr	r2, [sp, #384]	; 0x180
9001928a:	f1c2 0204 	rsb	r2, r2, #4
9001928e:	4422      	add	r2, r4
90019290:	4351      	muls	r1, r2
90019292:	eb01 0160 	add.w	r1, r1, r0, asr #1
90019296:	9124      	str	r1, [sp, #144]	; 0x90
90019298:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001929a:	00c9      	lsls	r1, r1, #3
9001929c:	9132      	str	r1, [sp, #200]	; 0xc8
9001929e:	9917      	ldr	r1, [sp, #92]	; 0x5c
900192a0:	4351      	muls	r1, r2
900192a2:	eb01 0160 	add.w	r1, r1, r0, asr #1
900192a6:	9122      	str	r1, [sp, #136]	; 0x88
900192a8:	9964      	ldr	r1, [sp, #400]	; 0x190
900192aa:	00c9      	lsls	r1, r1, #3
900192ac:	912a      	str	r1, [sp, #168]	; 0xa8
900192ae:	9964      	ldr	r1, [sp, #400]	; 0x190
900192b0:	434a      	muls	r2, r1
900192b2:	eb02 0260 	add.w	r2, r2, r0, asr #1
900192b6:	9221      	str	r2, [sp, #132]	; 0x84
900192b8:	9a18      	ldr	r2, [sp, #96]	; 0x60
900192ba:	9910      	ldr	r1, [sp, #64]	; 0x40
900192bc:	00d2      	lsls	r2, r2, #3
900192be:	9231      	str	r2, [sp, #196]	; 0xc4
900192c0:	9a66      	ldr	r2, [sp, #408]	; 0x198
900192c2:	f1c2 0204 	rsb	r2, r2, #4
900192c6:	4414      	add	r4, r2
900192c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
900192ca:	4362      	muls	r2, r4
900192cc:	eb02 0261 	add.w	r2, r2, r1, asr #1
900192d0:	921f      	str	r2, [sp, #124]	; 0x7c
900192d2:	9a64      	ldr	r2, [sp, #400]	; 0x190
900192d4:	4362      	muls	r2, r4
900192d6:	eb02 0261 	add.w	r2, r2, r1, asr #1
900192da:	9220      	str	r2, [sp, #128]	; 0x80
900192dc:	9a19      	ldr	r2, [sp, #100]	; 0x64
900192de:	00d2      	lsls	r2, r2, #3
900192e0:	9230      	str	r2, [sp, #192]	; 0xc0
900192e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
900192e4:	4354      	muls	r4, r2
900192e6:	eb04 0261 	add.w	r2, r4, r1, asr #1
900192ea:	990e      	ldr	r1, [sp, #56]	; 0x38
900192ec:	921e      	str	r2, [sp, #120]	; 0x78
900192ee:	9a1a      	ldr	r2, [sp, #104]	; 0x68
900192f0:	00d2      	lsls	r2, r2, #3
900192f2:	9237      	str	r2, [sp, #220]	; 0xdc
900192f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
900192f6:	435a      	muls	r2, r3
900192f8:	eb02 0261 	add.w	r2, r2, r1, asr #1
900192fc:	9225      	str	r2, [sp, #148]	; 0x94
900192fe:	9a67      	ldr	r2, [sp, #412]	; 0x19c
90019300:	00d2      	lsls	r2, r2, #3
90019302:	9235      	str	r2, [sp, #212]	; 0xd4
90019304:	9a67      	ldr	r2, [sp, #412]	; 0x19c
90019306:	435a      	muls	r2, r3
90019308:	eb02 0261 	add.w	r2, r2, r1, asr #1
9001930c:	9223      	str	r2, [sp, #140]	; 0x8c
9001930e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90019310:	00d2      	lsls	r2, r2, #3
90019312:	9234      	str	r2, [sp, #208]	; 0xd0
90019314:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90019316:	4353      	muls	r3, r2
90019318:	eb03 0361 	add.w	r3, r3, r1, asr #1
9001931c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001931e:	931d      	str	r3, [sp, #116]	; 0x74
90019320:	9b07      	ldr	r3, [sp, #28]
90019322:	4293      	cmp	r3, r2
90019324:	db04      	blt.n	90019330 <EwEmulateWarp+0x2dc>
90019326:	b055      	add	sp, #340	; 0x154
90019328:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001932c:	2301      	movs	r3, #1
9001932e:	e6f9      	b.n	90019124 <EwEmulateWarp+0xd0>
90019330:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90019332:	2b00      	cmp	r3, #0
90019334:	f000 81d1 	beq.w	900196da <EwEmulateWarp+0x686>
90019338:	9b07      	ldr	r3, [sp, #28]
9001933a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001933c:	4293      	cmp	r3, r2
9001933e:	f2c0 8339 	blt.w	900199b4 <EwEmulateWarp+0x960>
90019342:	9a60      	ldr	r2, [sp, #384]	; 0x180
90019344:	4293      	cmp	r3, r2
90019346:	dd03      	ble.n	90019350 <EwEmulateWarp+0x2fc>
90019348:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001934a:	4293      	cmp	r3, r2
9001934c:	f300 8323 	bgt.w	90019996 <EwEmulateWarp+0x942>
90019350:	9b07      	ldr	r3, [sp, #28]
90019352:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019354:	1a9a      	subs	r2, r3, r2
90019356:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90019358:	bb1b      	cbnz	r3, 900193a2 <EwEmulateWarp+0x34e>
9001935a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001935c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001935e:	fb93 f9f2 	sdiv	r9, r3, r2
90019362:	9b11      	ldr	r3, [sp, #68]	; 0x44
90019364:	4499      	add	r9, r3
90019366:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90019368:	fb93 fbf2 	sdiv	fp, r3, r2
9001936c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001936e:	fb93 f4f2 	sdiv	r4, r3, r2
90019372:	9b26      	ldr	r3, [sp, #152]	; 0x98
90019374:	fb93 f0f2 	sdiv	r0, r3, r2
90019378:	9b5e      	ldr	r3, [sp, #376]	; 0x178
9001937a:	18c3      	adds	r3, r0, r3
9001937c:	9308      	str	r3, [sp, #32]
9001937e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90019382:	4599      	cmp	r9, r3
90019384:	f000 81b4 	beq.w	900196f0 <EwEmulateWarp+0x69c>
90019388:	f1b9 4f00 	cmp.w	r9, #2147483648	; 0x80000000
9001938c:	4625      	mov	r5, r4
9001938e:	f040 81b5 	bne.w	900196fc <EwEmulateWarp+0x6a8>
90019392:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90019394:	465e      	mov	r6, fp
90019396:	9b08      	ldr	r3, [sp, #32]
90019398:	46a3      	mov	fp, r4
9001939a:	9408      	str	r4, [sp, #32]
9001939c:	9309      	str	r3, [sp, #36]	; 0x24
9001939e:	46ca      	mov	sl, r9
900193a0:	e02c      	b.n	900193fc <EwEmulateWarp+0x3a8>
900193a2:	e9dd 013c 	ldrd	r0, r1, [sp, #240]	; 0xf0
900193a6:	f7fe fc9d 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
900193aa:	4601      	mov	r1, r0
900193ac:	9008      	str	r0, [sp, #32]
900193ae:	9814      	ldr	r0, [sp, #80]	; 0x50
900193b0:	f7fe fce1 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900193b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900193b6:	9908      	ldr	r1, [sp, #32]
900193b8:	eb00 0903 	add.w	r9, r0, r3
900193bc:	9861      	ldr	r0, [sp, #388]	; 0x184
900193be:	f7fe fcda 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900193c2:	9908      	ldr	r1, [sp, #32]
900193c4:	4683      	mov	fp, r0
900193c6:	2000      	movs	r0, #0
900193c8:	f7fe fcd5 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900193cc:	9908      	ldr	r1, [sp, #32]
900193ce:	4604      	mov	r4, r0
900193d0:	9815      	ldr	r0, [sp, #84]	; 0x54
900193d2:	f7fe fcd0 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900193d6:	9b5e      	ldr	r3, [sp, #376]	; 0x178
900193d8:	18c3      	adds	r3, r0, r3
900193da:	9308      	str	r3, [sp, #32]
900193dc:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
900193e0:	4599      	cmp	r9, r3
900193e2:	f000 818f 	beq.w	90019704 <EwEmulateWarp+0x6b0>
900193e6:	9b08      	ldr	r3, [sp, #32]
900193e8:	f1b9 4f00 	cmp.w	r9, #2147483648	; 0x80000000
900193ec:	4625      	mov	r5, r4
900193ee:	465e      	mov	r6, fp
900193f0:	46ca      	mov	sl, r9
900193f2:	9309      	str	r3, [sp, #36]	; 0x24
900193f4:	d102      	bne.n	900193fc <EwEmulateWarp+0x3a8>
900193f6:	2400      	movs	r4, #0
900193f8:	46a3      	mov	fp, r4
900193fa:	9408      	str	r4, [sp, #32]
900193fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900193fe:	2b00      	cmp	r3, #0
90019400:	d030      	beq.n	90019464 <EwEmulateWarp+0x410>
90019402:	9b07      	ldr	r3, [sp, #28]
90019404:	9a60      	ldr	r2, [sp, #384]	; 0x180
90019406:	4293      	cmp	r3, r2
90019408:	f2c0 82bf 	blt.w	9001998a <EwEmulateWarp+0x936>
9001940c:	9b07      	ldr	r3, [sp, #28]
9001940e:	9a63      	ldr	r2, [sp, #396]	; 0x18c
90019410:	4293      	cmp	r3, r2
90019412:	dd03      	ble.n	9001941c <EwEmulateWarp+0x3c8>
90019414:	9a60      	ldr	r2, [sp, #384]	; 0x180
90019416:	4293      	cmp	r3, r2
90019418:	f300 82b2 	bgt.w	90019980 <EwEmulateWarp+0x92c>
9001941c:	9b07      	ldr	r3, [sp, #28]
9001941e:	9a60      	ldr	r2, [sp, #384]	; 0x180
90019420:	1a9a      	subs	r2, r3, r2
90019422:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90019424:	2b00      	cmp	r3, #0
90019426:	f040 817e 	bne.w	90019726 <EwEmulateWarp+0x6d2>
9001942a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001942c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001942e:	990c      	ldr	r1, [sp, #48]	; 0x30
90019430:	980c      	ldr	r0, [sp, #48]	; 0x30
90019432:	fb93 f3f2 	sdiv	r3, r3, r2
90019436:	9a5f      	ldr	r2, [sp, #380]	; 0x17c
90019438:	4413      	add	r3, r2
9001943a:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001943c:	fb92 f2f1 	sdiv	r2, r2, r1
90019440:	9961      	ldr	r1, [sp, #388]	; 0x184
90019442:	454b      	cmp	r3, r9
90019444:	440a      	add	r2, r1
90019446:	9921      	ldr	r1, [sp, #132]	; 0x84
90019448:	bfbc      	itt	lt
9001944a:	4699      	movlt	r9, r3
9001944c:	4616      	movlt	r6, r2
9001944e:	fb91 f1f0 	sdiv	r1, r1, r0
90019452:	bfbc      	itt	lt
90019454:	9609      	strlt	r6, [sp, #36]	; 0x24
90019456:	460d      	movlt	r5, r1
90019458:	4553      	cmp	r3, sl
9001945a:	dd03      	ble.n	90019464 <EwEmulateWarp+0x410>
9001945c:	460c      	mov	r4, r1
9001945e:	4693      	mov	fp, r2
90019460:	469a      	mov	sl, r3
90019462:	9208      	str	r2, [sp, #32]
90019464:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019466:	2b00      	cmp	r3, #0
90019468:	d030      	beq.n	900194cc <EwEmulateWarp+0x478>
9001946a:	9b07      	ldr	r3, [sp, #28]
9001946c:	9a63      	ldr	r2, [sp, #396]	; 0x18c
9001946e:	4293      	cmp	r3, r2
90019470:	f2c0 8280 	blt.w	90019974 <EwEmulateWarp+0x920>
90019474:	9b07      	ldr	r3, [sp, #28]
90019476:	9a66      	ldr	r2, [sp, #408]	; 0x198
90019478:	4293      	cmp	r3, r2
9001947a:	dd03      	ble.n	90019484 <EwEmulateWarp+0x430>
9001947c:	9a63      	ldr	r2, [sp, #396]	; 0x18c
9001947e:	4293      	cmp	r3, r2
90019480:	f300 8273 	bgt.w	9001996a <EwEmulateWarp+0x916>
90019484:	9b07      	ldr	r3, [sp, #28]
90019486:	9a66      	ldr	r2, [sp, #408]	; 0x198
90019488:	1a9a      	subs	r2, r3, r2
9001948a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001948c:	2b00      	cmp	r3, #0
9001948e:	f040 816e 	bne.w	9001976e <EwEmulateWarp+0x71a>
90019492:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019494:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90019496:	9910      	ldr	r1, [sp, #64]	; 0x40
90019498:	9810      	ldr	r0, [sp, #64]	; 0x40
9001949a:	fb93 f3f2 	sdiv	r3, r3, r2
9001949e:	9a65      	ldr	r2, [sp, #404]	; 0x194
900194a0:	4413      	add	r3, r2
900194a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900194a4:	fb92 f1f1 	sdiv	r1, r2, r1
900194a8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900194aa:	454b      	cmp	r3, r9
900194ac:	fb92 f2f0 	sdiv	r2, r2, r0
900194b0:	9867      	ldr	r0, [sp, #412]	; 0x19c
900194b2:	bfbc      	itt	lt
900194b4:	460e      	movlt	r6, r1
900194b6:	4699      	movlt	r9, r3
900194b8:	4402      	add	r2, r0
900194ba:	bfbc      	itt	lt
900194bc:	4615      	movlt	r5, r2
900194be:	9509      	strlt	r5, [sp, #36]	; 0x24
900194c0:	4553      	cmp	r3, sl
900194c2:	dd03      	ble.n	900194cc <EwEmulateWarp+0x478>
900194c4:	4614      	mov	r4, r2
900194c6:	468b      	mov	fp, r1
900194c8:	469a      	mov	sl, r3
900194ca:	9208      	str	r2, [sp, #32]
900194cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900194ce:	2b00      	cmp	r3, #0
900194d0:	d033      	beq.n	9001953a <EwEmulateWarp+0x4e6>
900194d2:	9b07      	ldr	r3, [sp, #28]
900194d4:	9a66      	ldr	r2, [sp, #408]	; 0x198
900194d6:	4293      	cmp	r3, r2
900194d8:	f2c0 8241 	blt.w	9001995e <EwEmulateWarp+0x90a>
900194dc:	9b07      	ldr	r3, [sp, #28]
900194de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900194e0:	4293      	cmp	r3, r2
900194e2:	dd02      	ble.n	900194ea <EwEmulateWarp+0x496>
900194e4:	9a66      	ldr	r2, [sp, #408]	; 0x198
900194e6:	4293      	cmp	r3, r2
900194e8:	dc27      	bgt.n	9001953a <EwEmulateWarp+0x4e6>
900194ea:	9b07      	ldr	r3, [sp, #28]
900194ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
900194ee:	1a9a      	subs	r2, r3, r2
900194f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900194f2:	2b00      	cmp	r3, #0
900194f4:	f040 815e 	bne.w	900197b4 <EwEmulateWarp+0x760>
900194f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900194fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
900194fc:	990e      	ldr	r1, [sp, #56]	; 0x38
900194fe:	980e      	ldr	r0, [sp, #56]	; 0x38
90019500:	9f0e      	ldr	r7, [sp, #56]	; 0x38
90019502:	fb93 f3f2 	sdiv	r3, r3, r2
90019506:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019508:	4413      	add	r3, r2
9001950a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
9001950c:	fb92 f1f1 	sdiv	r1, r2, r1
90019510:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90019512:	454b      	cmp	r3, r9
90019514:	fb92 f0f0 	sdiv	r0, r2, r0
90019518:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001951a:	bfbe      	ittt	lt
9001951c:	4605      	movlt	r5, r0
9001951e:	460e      	movlt	r6, r1
90019520:	4699      	movlt	r9, r3
90019522:	fb92 f2f7 	sdiv	r2, r2, r7
90019526:	9f5e      	ldr	r7, [sp, #376]	; 0x178
90019528:	443a      	add	r2, r7
9001952a:	bfb8      	it	lt
9001952c:	9209      	strlt	r2, [sp, #36]	; 0x24
9001952e:	4553      	cmp	r3, sl
90019530:	dd03      	ble.n	9001953a <EwEmulateWarp+0x4e6>
90019532:	4604      	mov	r4, r0
90019534:	468b      	mov	fp, r1
90019536:	469a      	mov	sl, r3
90019538:	9208      	str	r2, [sp, #32]
9001953a:	f109 0703 	add.w	r7, r9, #3
9001953e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90019540:	f10a 0803 	add.w	r8, sl, #3
90019544:	f027 0707 	bic.w	r7, r7, #7
90019548:	f028 0807 	bic.w	r8, r8, #7
9001954c:	429f      	cmp	r7, r3
9001954e:	bfb8      	it	lt
90019550:	461f      	movlt	r7, r3
90019552:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90019554:	4598      	cmp	r8, r3
90019556:	bfa8      	it	ge
90019558:	4698      	movge	r8, r3
9001955a:	4547      	cmp	r7, r8
9001955c:	f280 808a 	bge.w	90019674 <EwEmulateWarp+0x620>
90019560:	9b07      	ldr	r3, [sp, #28]
90019562:	10f9      	asrs	r1, r7, #3
90019564:	9a48      	ldr	r2, [sp, #288]	; 0x120
90019566:	10d8      	asrs	r0, r3, #3
90019568:	ea4f 03e8 	mov.w	r3, r8, asr #3
9001956c:	eba8 080a 	sub.w	r8, r8, sl
90019570:	eba3 03e7 	sub.w	r3, r3, r7, asr #3
90019574:	eba7 0709 	sub.w	r7, r7, r9
90019578:	f108 0804 	add.w	r8, r8, #4
9001957c:	930f      	str	r3, [sp, #60]	; 0x3c
9001957e:	105b      	asrs	r3, r3, #1
90019580:	3704      	adds	r7, #4
90019582:	931c      	str	r3, [sp, #112]	; 0x70
90019584:	9b47      	ldr	r3, [sp, #284]	; 0x11c
90019586:	434b      	muls	r3, r1
90019588:	fb02 3300 	mla	r3, r2, r0, r3
9001958c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001958e:	6812      	ldr	r2, [r2, #0]
90019590:	4413      	add	r3, r2
90019592:	9a4b      	ldr	r2, [sp, #300]	; 0x12c
90019594:	9346      	str	r3, [sp, #280]	; 0x118
90019596:	9b4a      	ldr	r3, [sp, #296]	; 0x128
90019598:	434b      	muls	r3, r1
9001959a:	fb02 3200 	mla	r2, r2, r0, r3
9001959e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900195a0:	ebaa 0009 	sub.w	r0, sl, r9
900195a4:	eba4 0a05 	sub.w	sl, r4, r5
900195a8:	68db      	ldr	r3, [r3, #12]
900195aa:	441a      	add	r2, r3
900195ac:	ebab 0306 	sub.w	r3, fp, r6
900195b0:	9249      	str	r2, [sp, #292]	; 0x124
900195b2:	9312      	str	r3, [sp, #72]	; 0x48
900195b4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900195b8:	eba3 0902 	sub.w	r9, r3, r2
900195bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900195be:	2b00      	cmp	r3, #0
900195c0:	f040 8122 	bne.w	90019808 <EwEmulateWarp+0x7b4>
900195c4:	b370      	cbz	r0, 90019624 <EwEmulateWarp+0x5d0>
900195c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
900195c8:	437b      	muls	r3, r7
900195ca:	eb03 0360 	add.w	r3, r3, r0, asr #1
900195ce:	fb93 f3f0 	sdiv	r3, r3, r0
900195d2:	441e      	add	r6, r3
900195d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
900195d6:	fb03 f308 	mul.w	r3, r3, r8
900195da:	eb03 0360 	add.w	r3, r3, r0, asr #1
900195de:	fb93 f3f0 	sdiv	r3, r3, r0
900195e2:	449b      	add	fp, r3
900195e4:	fb0a f307 	mul.w	r3, sl, r7
900195e8:	fb09 f707 	mul.w	r7, r9, r7
900195ec:	eb03 0360 	add.w	r3, r3, r0, asr #1
900195f0:	fb0a fa08 	mul.w	sl, sl, r8
900195f4:	eb07 0760 	add.w	r7, r7, r0, asr #1
900195f8:	fb09 f908 	mul.w	r9, r9, r8
900195fc:	eb0a 0a60 	add.w	sl, sl, r0, asr #1
90019600:	eb09 0960 	add.w	r9, r9, r0, asr #1
90019604:	fb93 f3f0 	sdiv	r3, r3, r0
90019608:	fb97 f7f0 	sdiv	r7, r7, r0
9001960c:	441d      	add	r5, r3
9001960e:	4613      	mov	r3, r2
90019610:	fb9a faf0 	sdiv	sl, sl, r0
90019614:	443b      	add	r3, r7
90019616:	4454      	add	r4, sl
90019618:	fb99 f9f0 	sdiv	r9, r9, r0
9001961c:	9309      	str	r3, [sp, #36]	; 0x24
9001961e:	9b08      	ldr	r3, [sp, #32]
90019620:	444b      	add	r3, r9
90019622:	9308      	str	r3, [sp, #32]
90019624:	ebab 0306 	sub.w	r3, fp, r6
90019628:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001962a:	eba4 0a05 	sub.w	sl, r4, r5
9001962e:	032d      	lsls	r5, r5, #12
90019630:	eb02 3303 	add.w	r3, r2, r3, lsl #12
90019634:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019636:	f505 55c0 	add.w	r5, r5, #6144	; 0x1800
9001963a:	fb93 fbf2 	sdiv	fp, r3, r2
9001963e:	0333      	lsls	r3, r6, #12
90019640:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90019642:	f503 54c0 	add.w	r4, r3, #6144	; 0x1800
90019646:	eb02 3a0a 	add.w	sl, r2, sl, lsl #12
9001964a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001964c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001964e:	fb9a faf2 	sdiv	sl, sl, r2
90019652:	2b00      	cmp	r3, #0
90019654:	f000 810e 	beq.w	90019874 <EwEmulateWarp+0x820>
90019658:	9b70      	ldr	r3, [sp, #448]	; 0x1c0
9001965a:	a94d      	add	r1, sp, #308	; 0x134
9001965c:	a846      	add	r0, sp, #280	; 0x118
9001965e:	9305      	str	r3, [sp, #20]
90019660:	9b6b      	ldr	r3, [sp, #428]	; 0x1ac
90019662:	9304      	str	r3, [sp, #16]
90019664:	9b6a      	ldr	r3, [sp, #424]	; 0x1a8
90019666:	e9cd 5b00 	strd	r5, fp, [sp]
9001966a:	e9cd a302 	strd	sl, r3, [sp, #8]
9001966e:	4623      	mov	r3, r4
90019670:	9c71      	ldr	r4, [sp, #452]	; 0x1c4
90019672:	47a0      	blx	r4
90019674:	9b07      	ldr	r3, [sp, #28]
90019676:	9a39      	ldr	r2, [sp, #228]	; 0xe4
90019678:	3308      	adds	r3, #8
9001967a:	9307      	str	r3, [sp, #28]
9001967c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001967e:	4413      	add	r3, r2
90019680:	9a38      	ldr	r2, [sp, #224]	; 0xe0
90019682:	9328      	str	r3, [sp, #160]	; 0xa0
90019684:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90019686:	4413      	add	r3, r2
90019688:	9a36      	ldr	r2, [sp, #216]	; 0xd8
9001968a:	9327      	str	r3, [sp, #156]	; 0x9c
9001968c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001968e:	4413      	add	r3, r2
90019690:	9a33      	ldr	r2, [sp, #204]	; 0xcc
90019692:	9326      	str	r3, [sp, #152]	; 0x98
90019694:	9b24      	ldr	r3, [sp, #144]	; 0x90
90019696:	4413      	add	r3, r2
90019698:	9a32      	ldr	r2, [sp, #200]	; 0xc8
9001969a:	9324      	str	r3, [sp, #144]	; 0x90
9001969c:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001969e:	4413      	add	r3, r2
900196a0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
900196a2:	9322      	str	r3, [sp, #136]	; 0x88
900196a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
900196a6:	4413      	add	r3, r2
900196a8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
900196aa:	9321      	str	r3, [sp, #132]	; 0x84
900196ac:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900196ae:	4413      	add	r3, r2
900196b0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
900196b2:	931f      	str	r3, [sp, #124]	; 0x7c
900196b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900196b6:	4413      	add	r3, r2
900196b8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
900196ba:	9320      	str	r3, [sp, #128]	; 0x80
900196bc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900196be:	4413      	add	r3, r2
900196c0:	9a37      	ldr	r2, [sp, #220]	; 0xdc
900196c2:	931e      	str	r3, [sp, #120]	; 0x78
900196c4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900196c6:	4413      	add	r3, r2
900196c8:	9325      	str	r3, [sp, #148]	; 0x94
900196ca:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900196cc:	9a35      	ldr	r2, [sp, #212]	; 0xd4
900196ce:	4413      	add	r3, r2
900196d0:	9a34      	ldr	r2, [sp, #208]	; 0xd0
900196d2:	9323      	str	r3, [sp, #140]	; 0x8c
900196d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900196d6:	4413      	add	r3, r2
900196d8:	e620      	b.n	9001931c <EwEmulateWarp+0x2c8>
900196da:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900196dc:	4625      	mov	r5, r4
900196de:	46a3      	mov	fp, r4
900196e0:	4626      	mov	r6, r4
900196e2:	e9cd 4408 	strd	r4, r4, [sp, #32]
900196e6:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
900196ea:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
900196ee:	e685      	b.n	900193fc <EwEmulateWarp+0x3a8>
900196f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
900196f2:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
900196f6:	462e      	mov	r6, r5
900196f8:	9509      	str	r5, [sp, #36]	; 0x24
900196fa:	e67f      	b.n	900193fc <EwEmulateWarp+0x3a8>
900196fc:	9b08      	ldr	r3, [sp, #32]
900196fe:	465e      	mov	r6, fp
90019700:	9309      	str	r3, [sp, #36]	; 0x24
90019702:	e64c      	b.n	9001939e <EwEmulateWarp+0x34a>
90019704:	2500      	movs	r5, #0
90019706:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
9001970a:	462e      	mov	r6, r5
9001970c:	9509      	str	r5, [sp, #36]	; 0x24
9001970e:	e675      	b.n	900193fc <EwEmulateWarp+0x3a8>
90019710:	2400      	movs	r4, #0
90019712:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
90019716:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
9001971a:	4625      	mov	r5, r4
9001971c:	46a3      	mov	fp, r4
9001971e:	4626      	mov	r6, r4
90019720:	e9cd 4408 	strd	r4, r4, [sp, #32]
90019724:	e672      	b.n	9001940c <EwEmulateWarp+0x3b8>
90019726:	e9dd 013e 	ldrd	r0, r1, [sp, #248]	; 0xf8
9001972a:	f7fe fadb 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
9001972e:	4601      	mov	r1, r0
90019730:	900f      	str	r0, [sp, #60]	; 0x3c
90019732:	9816      	ldr	r0, [sp, #88]	; 0x58
90019734:	f7fe fb1f 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019738:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
9001973a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001973c:	18c7      	adds	r7, r0, r3
9001973e:	9817      	ldr	r0, [sp, #92]	; 0x5c
90019740:	f7fe fb19 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019744:	9b61      	ldr	r3, [sp, #388]	; 0x184
90019746:	990f      	ldr	r1, [sp, #60]	; 0x3c
90019748:	eb00 0803 	add.w	r8, r0, r3
9001974c:	9864      	ldr	r0, [sp, #400]	; 0x190
9001974e:	f7fe fb12 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019752:	454f      	cmp	r7, r9
90019754:	bfbf      	itttt	lt
90019756:	4646      	movlt	r6, r8
90019758:	4605      	movlt	r5, r0
9001975a:	46b9      	movlt	r9, r7
9001975c:	9609      	strlt	r6, [sp, #36]	; 0x24
9001975e:	4557      	cmp	r7, sl
90019760:	bfc1      	itttt	gt
90019762:	46c3      	movgt	fp, r8
90019764:	4604      	movgt	r4, r0
90019766:	46ba      	movgt	sl, r7
90019768:	f8cd b020 	strgt.w	fp, [sp, #32]
9001976c:	e67a      	b.n	90019464 <EwEmulateWarp+0x410>
9001976e:	e9dd 0140 	ldrd	r0, r1, [sp, #256]	; 0x100
90019772:	f7fe fab7 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
90019776:	4601      	mov	r1, r0
90019778:	900f      	str	r0, [sp, #60]	; 0x3c
9001977a:	9818      	ldr	r0, [sp, #96]	; 0x60
9001977c:	f7fe fafb 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019780:	9b65      	ldr	r3, [sp, #404]	; 0x194
90019782:	990f      	ldr	r1, [sp, #60]	; 0x3c
90019784:	18c7      	adds	r7, r0, r3
90019786:	9864      	ldr	r0, [sp, #400]	; 0x190
90019788:	f7fe faf5 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
9001978c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001978e:	4680      	mov	r8, r0
90019790:	9819      	ldr	r0, [sp, #100]	; 0x64
90019792:	f7fe faf0 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019796:	9b67      	ldr	r3, [sp, #412]	; 0x19c
90019798:	454f      	cmp	r7, r9
9001979a:	4418      	add	r0, r3
9001979c:	bfbf      	itttt	lt
9001979e:	4646      	movlt	r6, r8
900197a0:	46b9      	movlt	r9, r7
900197a2:	4605      	movlt	r5, r0
900197a4:	9509      	strlt	r5, [sp, #36]	; 0x24
900197a6:	4557      	cmp	r7, sl
900197a8:	bfc1      	itttt	gt
900197aa:	4604      	movgt	r4, r0
900197ac:	46c3      	movgt	fp, r8
900197ae:	46ba      	movgt	sl, r7
900197b0:	9408      	strgt	r4, [sp, #32]
900197b2:	e68b      	b.n	900194cc <EwEmulateWarp+0x478>
900197b4:	e9dd 0142 	ldrd	r0, r1, [sp, #264]	; 0x108
900197b8:	f7fe fa94 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
900197bc:	4601      	mov	r1, r0
900197be:	900f      	str	r0, [sp, #60]	; 0x3c
900197c0:	981a      	ldr	r0, [sp, #104]	; 0x68
900197c2:	f7fe fad8 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900197c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
900197c8:	990f      	ldr	r1, [sp, #60]	; 0x3c
900197ca:	18c7      	adds	r7, r0, r3
900197cc:	2000      	movs	r0, #0
900197ce:	f7fe fad2 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900197d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
900197d4:	4680      	mov	r8, r0
900197d6:	9867      	ldr	r0, [sp, #412]	; 0x19c
900197d8:	9112      	str	r1, [sp, #72]	; 0x48
900197da:	f7fe facc 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900197de:	9912      	ldr	r1, [sp, #72]	; 0x48
900197e0:	900f      	str	r0, [sp, #60]	; 0x3c
900197e2:	981b      	ldr	r0, [sp, #108]	; 0x6c
900197e4:	f7fe fac7 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
900197e8:	9b5e      	ldr	r3, [sp, #376]	; 0x178
900197ea:	454f      	cmp	r7, r9
900197ec:	4418      	add	r0, r3
900197ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900197f0:	bfbf      	itttt	lt
900197f2:	4646      	movlt	r6, r8
900197f4:	46b9      	movlt	r9, r7
900197f6:	461d      	movlt	r5, r3
900197f8:	9009      	strlt	r0, [sp, #36]	; 0x24
900197fa:	4557      	cmp	r7, sl
900197fc:	bfc1      	itttt	gt
900197fe:	461c      	movgt	r4, r3
90019800:	46c3      	movgt	fp, r8
90019802:	46ba      	movgt	sl, r7
90019804:	9008      	strgt	r0, [sp, #32]
90019806:	e698      	b.n	9001953a <EwEmulateWarp+0x4e6>
90019808:	aa45      	add	r2, sp, #276	; 0x114
9001980a:	a944      	add	r1, sp, #272	; 0x110
9001980c:	f7fe ff44 	bl	90018698 <EwCleanSurfaceCache+0x9bc>
90019810:	463a      	mov	r2, r7
90019812:	e9dd 3144 	ldrd	r3, r1, [sp, #272]	; 0x110
90019816:	4618      	mov	r0, r3
90019818:	913b      	str	r1, [sp, #236]	; 0xec
9001981a:	933a      	str	r3, [sp, #232]	; 0xe8
9001981c:	f7fe fa62 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
90019820:	4642      	mov	r2, r8
90019822:	4607      	mov	r7, r0
90019824:	e9dd 313a 	ldrd	r3, r1, [sp, #232]	; 0xe8
90019828:	4618      	mov	r0, r3
9001982a:	f7fe fa5b 	bl	90017ce4 <EwCleanSurfaceCache+0x8>
9001982e:	4680      	mov	r8, r0
90019830:	4639      	mov	r1, r7
90019832:	9812      	ldr	r0, [sp, #72]	; 0x48
90019834:	f7fe fa9f 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019838:	4641      	mov	r1, r8
9001983a:	4406      	add	r6, r0
9001983c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001983e:	f7fe fa9a 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019842:	4639      	mov	r1, r7
90019844:	4483      	add	fp, r0
90019846:	4650      	mov	r0, sl
90019848:	f7fe fa95 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
9001984c:	4641      	mov	r1, r8
9001984e:	4405      	add	r5, r0
90019850:	4650      	mov	r0, sl
90019852:	f7fe fa90 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019856:	4639      	mov	r1, r7
90019858:	4404      	add	r4, r0
9001985a:	4648      	mov	r0, r9
9001985c:	f7fe fa8b 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
90019860:	9b09      	ldr	r3, [sp, #36]	; 0x24
90019862:	4641      	mov	r1, r8
90019864:	4403      	add	r3, r0
90019866:	4648      	mov	r0, r9
90019868:	9309      	str	r3, [sp, #36]	; 0x24
9001986a:	f7fe fa84 	bl	90017d76 <EwCleanSurfaceCache+0x9a>
9001986e:	9b08      	ldr	r3, [sp, #32]
90019870:	4403      	add	r3, r0
90019872:	e6d6      	b.n	90019622 <EwEmulateWarp+0x5ce>
90019874:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90019878:	1a98      	subs	r0, r3, r2
9001987a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001987c:	0316      	lsls	r6, r2, #12
9001987e:	eb03 3000 	add.w	r0, r3, r0, lsl #12
90019882:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019884:	f506 56c0 	add.w	r6, r6, #6144	; 0x1800
90019888:	fb90 f3f3 	sdiv	r3, r0, r3
9001988c:	1332      	asrs	r2, r6, #12
9001988e:	9312      	str	r3, [sp, #72]	; 0x48
90019890:	eb05 3066 	add.w	r0, r5, r6, asr #13
90019894:	eb04 3366 	add.w	r3, r4, r6, asr #13
90019898:	fb90 f0f2 	sdiv	r0, r0, r2
9001989c:	fb93 f3f2 	sdiv	r3, r3, r2
900198a0:	0400      	lsls	r0, r0, #16
900198a2:	041b      	lsls	r3, r3, #16
900198a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900198a6:	9912      	ldr	r1, [sp, #72]	; 0x48
900198a8:	2a10      	cmp	r2, #16
900198aa:	bfa8      	it	ge
900198ac:	2210      	movge	r2, #16
900198ae:	4691      	mov	r9, r2
900198b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900198b2:	3a02      	subs	r2, #2
900198b4:	2a0e      	cmp	r2, #14
900198b6:	bf94      	ite	ls
900198b8:	f109 32ff 	addls.w	r2, r9, #4294967295
900198bc:	464a      	movhi	r2, r9
900198be:	fb01 6602 	mla	r6, r1, r2, r6
900198c2:	2a10      	cmp	r2, #16
900198c4:	fb0a 5502 	mla	r5, sl, r2, r5
900198c8:	ea4f 0c62 	mov.w	ip, r2, asr #1
900198cc:	ea4f 3e26 	mov.w	lr, r6, asr #12
900198d0:	fb0b 4402 	mla	r4, fp, r2, r4
900198d4:	eb05 3766 	add.w	r7, r5, r6, asr #13
900198d8:	eb04 3166 	add.w	r1, r4, r6, asr #13
900198dc:	fb97 f7fe 	sdiv	r7, r7, lr
900198e0:	fb91 f1fe 	sdiv	r1, r1, lr
900198e4:	ea4f 4707 	mov.w	r7, r7, lsl #16
900198e8:	ea4f 4801 	mov.w	r8, r1, lsl #16
900198ec:	9708      	str	r7, [sp, #32]
900198ee:	ebc3 4101 	rsb	r1, r3, r1, lsl #16
900198f2:	9f08      	ldr	r7, [sp, #32]
900198f4:	f503 53c0 	add.w	r3, r3, #6144	; 0x1800
900198f8:	eb01 0162 	add.w	r1, r1, r2, asr #1
900198fc:	eba7 0e00 	sub.w	lr, r7, r0
90019900:	9f70      	ldr	r7, [sp, #448]	; 0x1c0
90019902:	bf08      	it	eq
90019904:	1109      	asreq	r1, r1, #4
90019906:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
9001990a:	44f4      	add	ip, lr
9001990c:	9705      	str	r7, [sp, #20]
9001990e:	9f6b      	ldr	r7, [sp, #428]	; 0x1ac
90019910:	9000      	str	r0, [sp, #0]
90019912:	a846      	add	r0, sp, #280	; 0x118
90019914:	9704      	str	r7, [sp, #16]
90019916:	9f6a      	ldr	r7, [sp, #424]	; 0x1a8
90019918:	bf18      	it	ne
9001991a:	fb91 f1f2 	sdivne	r1, r1, r2
9001991e:	2a10      	cmp	r2, #16
90019920:	9101      	str	r1, [sp, #4]
90019922:	a94d      	add	r1, sp, #308	; 0x134
90019924:	bf0c      	ite	eq
90019926:	ea4f 122c 	moveq.w	r2, ip, asr #4
9001992a:	fb9c f2f2 	sdivne	r2, ip, r2
9001992e:	e9cd 2702 	strd	r2, r7, [sp, #8]
90019932:	464a      	mov	r2, r9
90019934:	9f71      	ldr	r7, [sp, #452]	; 0x1c4
90019936:	47b8      	blx	r7
90019938:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001993a:	ebb3 0309 	subs.w	r3, r3, r9
9001993e:	930f      	str	r3, [sp, #60]	; 0x3c
90019940:	f43f ae98 	beq.w	90019674 <EwEmulateWarp+0x620>
90019944:	9808      	ldr	r0, [sp, #32]
90019946:	e9dd 3246 	ldrd	r3, r2, [sp, #280]	; 0x118
9001994a:	fb02 3309 	mla	r3, r2, r9, r3
9001994e:	9346      	str	r3, [sp, #280]	; 0x118
90019950:	e9dd 3249 	ldrd	r3, r2, [sp, #292]	; 0x124
90019954:	fb02 3309 	mla	r3, r2, r9, r3
90019958:	9349      	str	r3, [sp, #292]	; 0x124
9001995a:	4643      	mov	r3, r8
9001995c:	e7a2      	b.n	900198a4 <EwEmulateWarp+0x850>
9001995e:	9b07      	ldr	r3, [sp, #28]
90019960:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90019962:	4293      	cmp	r3, r2
90019964:	f6ff ade9 	blt.w	9001953a <EwEmulateWarp+0x4e6>
90019968:	e5bf      	b.n	900194ea <EwEmulateWarp+0x496>
9001996a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001996c:	2b00      	cmp	r3, #0
9001996e:	f47f adb5 	bne.w	900194dc <EwEmulateWarp+0x488>
90019972:	e5e2      	b.n	9001953a <EwEmulateWarp+0x4e6>
90019974:	9b07      	ldr	r3, [sp, #28]
90019976:	9a66      	ldr	r2, [sp, #408]	; 0x198
90019978:	4293      	cmp	r3, r2
9001997a:	f6ff ada7 	blt.w	900194cc <EwEmulateWarp+0x478>
9001997e:	e581      	b.n	90019484 <EwEmulateWarp+0x430>
90019980:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019982:	2b00      	cmp	r3, #0
90019984:	f47f ad76 	bne.w	90019474 <EwEmulateWarp+0x420>
90019988:	e5a0      	b.n	900194cc <EwEmulateWarp+0x478>
9001998a:	9b07      	ldr	r3, [sp, #28]
9001998c:	9a63      	ldr	r2, [sp, #396]	; 0x18c
9001998e:	4293      	cmp	r3, r2
90019990:	f6ff ad68 	blt.w	90019464 <EwEmulateWarp+0x410>
90019994:	e542      	b.n	9001941c <EwEmulateWarp+0x3c8>
90019996:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90019998:	2b00      	cmp	r3, #0
9001999a:	f47f aeb9 	bne.w	90019710 <EwEmulateWarp+0x6bc>
9001999e:	461c      	mov	r4, r3
900199a0:	461d      	mov	r5, r3
900199a2:	469b      	mov	fp, r3
900199a4:	461e      	mov	r6, r3
900199a6:	f04f 4a00 	mov.w	sl, #2147483648	; 0x80000000
900199aa:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
900199ae:	e9cd 3308 	strd	r3, r3, [sp, #32]
900199b2:	e557      	b.n	90019464 <EwEmulateWarp+0x410>
900199b4:	9b07      	ldr	r3, [sp, #28]
900199b6:	9a60      	ldr	r2, [sp, #384]	; 0x180
900199b8:	4293      	cmp	r3, r2
900199ba:	f6bf acc9 	bge.w	90019350 <EwEmulateWarp+0x2fc>
900199be:	2400      	movs	r4, #0
900199c0:	4625      	mov	r5, r4
900199c2:	46a3      	mov	fp, r4
900199c4:	4626      	mov	r6, r4
900199c6:	e9cd 4408 	strd	r4, r4, [sp, #32]
900199ca:	e68c      	b.n	900196e6 <EwEmulateWarp+0x692>

900199cc <EwEmulateFillPolygon>:
900199cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900199d0:	ed2d 8b02 	vpush	{d8}
900199d4:	b0b5      	sub	sp, #212	; 0xd4
900199d6:	4605      	mov	r5, r0
900199d8:	930b      	str	r3, [sp, #44]	; 0x2c
900199da:	9b43      	ldr	r3, [sp, #268]	; 0x10c
900199dc:	9c44      	ldr	r4, [sp, #272]	; 0x110
900199de:	f8dd 9118 	ldr.w	r9, [sp, #280]	; 0x118
900199e2:	910c      	str	r1, [sp, #48]	; 0x30
900199e4:	9214      	str	r2, [sp, #80]	; 0x50
900199e6:	bb3b      	cbnz	r3, 90019a38 <EwEmulateFillPolygon+0x6c>
900199e8:	9b42      	ldr	r3, [sp, #264]	; 0x108
900199ea:	2b00      	cmp	r3, #0
900199ec:	bf14      	ite	ne
900199ee:	f04f 0805 	movne.w	r8, #5
900199f2:	f04f 0802 	moveq.w	r8, #2
900199f6:	9b40      	ldr	r3, [sp, #256]	; 0x100
900199f8:	221c      	movs	r2, #28
900199fa:	2100      	movs	r1, #0
900199fc:	a817      	add	r0, sp, #92	; 0x5c
900199fe:	fb03 f808 	mul.w	r8, r3, r8
90019a02:	f014 fae1 	bl	9002dfc8 <memset>
90019a06:	6d63      	ldr	r3, [r4, #84]	; 0x54
90019a08:	9313      	str	r3, [sp, #76]	; 0x4c
90019a0a:	682b      	ldr	r3, [r5, #0]
90019a0c:	930d      	str	r3, [sp, #52]	; 0x34
90019a0e:	68eb      	ldr	r3, [r5, #12]
90019a10:	930e      	str	r3, [sp, #56]	; 0x38
90019a12:	9b14      	ldr	r3, [sp, #80]	; 0x50
90019a14:	ea4f 1a03 	mov.w	sl, r3, lsl #4
90019a18:	4640      	mov	r0, r8
90019a1a:	f00d f94b 	bl	90026cb4 <EwAlloc>
90019a1e:	4606      	mov	r6, r0
90019a20:	2800      	cmp	r0, #0
90019a22:	f040 8111 	bne.w	90019c48 <EwEmulateFillPolygon+0x27c>
90019a26:	2010      	movs	r0, #16
90019a28:	f004 fcc4 	bl	9001e3b4 <EwImmediateReclaimMemory>
90019a2c:	2800      	cmp	r0, #0
90019a2e:	d1f3      	bne.n	90019a18 <EwEmulateFillPolygon+0x4c>
90019a30:	2010      	movs	r0, #16
90019a32:	f003 fd0d 	bl	9001d450 <EwError>
90019a36:	e17f      	b.n	90019d38 <EwEmulateFillPolygon+0x36c>
90019a38:	f04f 0809 	mov.w	r8, #9
90019a3c:	e7db      	b.n	900199f6 <EwEmulateFillPolygon+0x2a>
90019a3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90019a40:	9a43      	ldr	r2, [sp, #268]	; 0x10c
90019a42:	011b      	lsls	r3, r3, #4
90019a44:	f8cd 9058 	str.w	r9, [sp, #88]	; 0x58
90019a48:	2a00      	cmp	r2, #0
90019a4a:	f000 80ae 	beq.w	90019baa <EwEmulateFillPolygon+0x1de>
90019a4e:	9a42      	ldr	r2, [sp, #264]	; 0x108
90019a50:	2a00      	cmp	r2, #0
90019a52:	f000 809d 	beq.w	90019b90 <EwEmulateFillPolygon+0x1c4>
90019a56:	aa16      	add	r2, sp, #88	; 0x58
90019a58:	4631      	mov	r1, r6
90019a5a:	ee18 0a10 	vmov	r0, s16
90019a5e:	9202      	str	r2, [sp, #8]
90019a60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90019a62:	e9cd 3200 	strd	r3, r2, [sp]
90019a66:	4653      	mov	r3, sl
90019a68:	9a40      	ldr	r2, [sp, #256]	; 0x100
90019a6a:	f7fe f9ad 	bl	90017dc8 <EwCleanSurfaceCache+0xec>
90019a6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90019a70:	4602      	mov	r2, r0
90019a72:	2b00      	cmp	r3, #0
90019a74:	f000 80b5 	beq.w	90019be2 <EwEmulateFillPolygon+0x216>
90019a78:	2800      	cmp	r0, #0
90019a7a:	f000 80b4 	beq.w	90019be6 <EwEmulateFillPolygon+0x21a>
90019a7e:	9907      	ldr	r1, [sp, #28]
90019a80:	ea4f 5028 	mov.w	r0, r8, asr #20
90019a84:	9f09      	ldr	r7, [sp, #36]	; 0x24
90019a86:	ebc0 5021 	rsb	r0, r0, r1, asr #20
90019a8a:	9905      	ldr	r1, [sp, #20]
90019a8c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
90019a8e:	ea4f 5c21 	mov.w	ip, r1, asr #20
90019a92:	9908      	ldr	r1, [sp, #32]
90019a94:	4358      	muls	r0, r3
90019a96:	ebcc 5c21 	rsb	ip, ip, r1, asr #20
90019a9a:	ea4f 512b 	mov.w	r1, fp, asr #20
90019a9e:	901f      	str	r0, [sp, #124]	; 0x7c
90019aa0:	fb03 fc0c 	mul.w	ip, r3, ip
90019aa4:	ebc1 5127 	rsb	r1, r1, r7, asr #20
90019aa8:	9f06      	ldr	r7, [sp, #24]
90019aaa:	f8cd c08c 	str.w	ip, [sp, #140]	; 0x8c
90019aae:	ea4f 5e27 	mov.w	lr, r7, asr #20
90019ab2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90019ab4:	4359      	muls	r1, r3
90019ab6:	ebce 5e27 	rsb	lr, lr, r7, asr #20
90019aba:	9f45      	ldr	r7, [sp, #276]	; 0x114
90019abc:	9127      	str	r1, [sp, #156]	; 0x9c
90019abe:	fb03 f30e 	mul.w	r3, r3, lr
90019ac2:	932b      	str	r3, [sp, #172]	; 0xac
90019ac4:	b18f      	cbz	r7, 90019aea <EwEmulateFillPolygon+0x11e>
90019ac6:	9f1e      	ldr	r7, [sp, #120]	; 0x78
90019ac8:	46be      	mov	lr, r7
90019aca:	9f45      	ldr	r7, [sp, #276]	; 0x114
90019acc:	fb07 e000 	mla	r0, r7, r0, lr
90019ad0:	901e      	str	r0, [sp, #120]	; 0x78
90019ad2:	9822      	ldr	r0, [sp, #136]	; 0x88
90019ad4:	fb07 000c 	mla	r0, r7, ip, r0
90019ad8:	9022      	str	r0, [sp, #136]	; 0x88
90019ada:	9826      	ldr	r0, [sp, #152]	; 0x98
90019adc:	fb07 0101 	mla	r1, r7, r1, r0
90019ae0:	9126      	str	r1, [sp, #152]	; 0x98
90019ae2:	992a      	ldr	r1, [sp, #168]	; 0xa8
90019ae4:	fb07 1303 	mla	r3, r7, r3, r1
90019ae8:	932a      	str	r3, [sp, #168]	; 0xa8
90019aea:	6d23      	ldr	r3, [r4, #80]	; 0x50
90019aec:	9313      	str	r3, [sp, #76]	; 0x4c
90019aee:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90019af0:	6d61      	ldr	r1, [r4, #84]	; 0x54
90019af2:	930f      	str	r3, [sp, #60]	; 0x3c
90019af4:	9b22      	ldr	r3, [sp, #136]	; 0x88
90019af6:	9310      	str	r3, [sp, #64]	; 0x40
90019af8:	9b26      	ldr	r3, [sp, #152]	; 0x98
90019afa:	9311      	str	r3, [sp, #68]	; 0x44
90019afc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90019afe:	9312      	str	r3, [sp, #72]	; 0x48
90019b00:	9b16      	ldr	r3, [sp, #88]	; 0x58
90019b02:	b1a1      	cbz	r1, 90019b2e <EwEmulateFillPolygon+0x162>
90019b04:	b19b      	cbz	r3, 90019b2e <EwEmulateFillPolygon+0x162>
90019b06:	980f      	ldr	r0, [sp, #60]	; 0x3c
90019b08:	991f      	ldr	r1, [sp, #124]	; 0x7c
90019b0a:	fb01 0103 	mla	r1, r1, r3, r0
90019b0e:	9810      	ldr	r0, [sp, #64]	; 0x40
90019b10:	911e      	str	r1, [sp, #120]	; 0x78
90019b12:	9923      	ldr	r1, [sp, #140]	; 0x8c
90019b14:	fb01 0103 	mla	r1, r1, r3, r0
90019b18:	9811      	ldr	r0, [sp, #68]	; 0x44
90019b1a:	9122      	str	r1, [sp, #136]	; 0x88
90019b1c:	9927      	ldr	r1, [sp, #156]	; 0x9c
90019b1e:	fb01 0103 	mla	r1, r1, r3, r0
90019b22:	9812      	ldr	r0, [sp, #72]	; 0x48
90019b24:	9126      	str	r1, [sp, #152]	; 0x98
90019b26:	992b      	ldr	r1, [sp, #172]	; 0xac
90019b28:	fb01 0103 	mla	r1, r1, r3, r0
90019b2c:	912a      	str	r1, [sp, #168]	; 0xa8
90019b2e:	ee18 1a10 	vmov	r1, s16
90019b32:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90019b34:	9215      	str	r2, [sp, #84]	; 0x54
90019b36:	4419      	add	r1, r3
90019b38:	9117      	str	r1, [sp, #92]	; 0x5c
90019b3a:	9914      	ldr	r1, [sp, #80]	; 0x50
90019b3c:	440b      	add	r3, r1
90019b3e:	e9d5 1001 	ldrd	r1, r0, [r5, #4]
90019b42:	4359      	muls	r1, r3
90019b44:	fb00 1107 	mla	r1, r0, r7, r1
90019b48:	980d      	ldr	r0, [sp, #52]	; 0x34
90019b4a:	4401      	add	r1, r0
90019b4c:	6029      	str	r1, [r5, #0]
90019b4e:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
90019b52:	4343      	muls	r3, r0
90019b54:	4628      	mov	r0, r5
90019b56:	fb01 3307 	mla	r3, r1, r7, r3
90019b5a:	990e      	ldr	r1, [sp, #56]	; 0x38
90019b5c:	9f47      	ldr	r7, [sp, #284]	; 0x11c
90019b5e:	440b      	add	r3, r1
90019b60:	a917      	add	r1, sp, #92	; 0x5c
90019b62:	60eb      	str	r3, [r5, #12]
90019b64:	ab1e      	add	r3, sp, #120	; 0x78
90019b66:	47b8      	blx	r7
90019b68:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90019b6a:	931e      	str	r3, [sp, #120]	; 0x78
90019b6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019b6e:	9322      	str	r3, [sp, #136]	; 0x88
90019b70:	9b11      	ldr	r3, [sp, #68]	; 0x44
90019b72:	9326      	str	r3, [sp, #152]	; 0x98
90019b74:	9b12      	ldr	r3, [sp, #72]	; 0x48
90019b76:	932a      	str	r3, [sp, #168]	; 0xa8
90019b78:	9b41      	ldr	r3, [sp, #260]	; 0x104
90019b7a:	2b01      	cmp	r3, #1
90019b7c:	d033      	beq.n	90019be6 <EwEmulateFillPolygon+0x21a>
90019b7e:	9a15      	ldr	r2, [sp, #84]	; 0x54
90019b80:	ee18 3a10 	vmov	r3, s16
90019b84:	9816      	ldr	r0, [sp, #88]	; 0x58
90019b86:	4611      	mov	r1, r2
90019b88:	4418      	add	r0, r3
90019b8a:	f00d f8bb 	bl	90026d04 <EwZero>
90019b8e:	e02a      	b.n	90019be6 <EwEmulateFillPolygon+0x21a>
90019b90:	aa16      	add	r2, sp, #88	; 0x58
90019b92:	4631      	mov	r1, r6
90019b94:	ee18 0a10 	vmov	r0, s16
90019b98:	9202      	str	r2, [sp, #8]
90019b9a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90019b9c:	e9cd 3200 	strd	r3, r2, [sp]
90019ba0:	4653      	mov	r3, sl
90019ba2:	9a40      	ldr	r2, [sp, #256]	; 0x100
90019ba4:	f7fe fa5a 	bl	9001805c <EwCleanSurfaceCache+0x380>
90019ba8:	e761      	b.n	90019a6e <EwEmulateFillPolygon+0xa2>
90019baa:	9a42      	ldr	r2, [sp, #264]	; 0x108
90019bac:	b162      	cbz	r2, 90019bc8 <EwEmulateFillPolygon+0x1fc>
90019bae:	aa16      	add	r2, sp, #88	; 0x58
90019bb0:	4631      	mov	r1, r6
90019bb2:	ee18 0a10 	vmov	r0, s16
90019bb6:	9202      	str	r2, [sp, #8]
90019bb8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90019bba:	e9cd 3200 	strd	r3, r2, [sp]
90019bbe:	4653      	mov	r3, sl
90019bc0:	9a40      	ldr	r2, [sp, #256]	; 0x100
90019bc2:	f7fe fb4f 	bl	90018264 <EwCleanSurfaceCache+0x588>
90019bc6:	e752      	b.n	90019a6e <EwEmulateFillPolygon+0xa2>
90019bc8:	aa16      	add	r2, sp, #88	; 0x58
90019bca:	4631      	mov	r1, r6
90019bcc:	ee18 0a10 	vmov	r0, s16
90019bd0:	9202      	str	r2, [sp, #8]
90019bd2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90019bd4:	e9cd 3200 	strd	r3, r2, [sp]
90019bd8:	4653      	mov	r3, sl
90019bda:	9a40      	ldr	r2, [sp, #256]	; 0x100
90019bdc:	f7fe fc64 	bl	900184a8 <EwCleanSurfaceCache+0x7cc>
90019be0:	e745      	b.n	90019a6e <EwEmulateFillPolygon+0xa2>
90019be2:	2800      	cmp	r0, #0
90019be4:	d183      	bne.n	90019aee <EwEmulateFillPolygon+0x122>
90019be6:	6d23      	ldr	r3, [r4, #80]	; 0x50
90019be8:	b33b      	cbz	r3, 90019c3a <EwEmulateFillPolygon+0x26e>
90019bea:	6863      	ldr	r3, [r4, #4]
90019bec:	9a07      	ldr	r2, [sp, #28]
90019bee:	4498      	add	r8, r3
90019bf0:	f008 637f 	and.w	r3, r8, #267386880	; 0xff00000
90019bf4:	931e      	str	r3, [sp, #120]	; 0x78
90019bf6:	68e3      	ldr	r3, [r4, #12]
90019bf8:	441a      	add	r2, r3
90019bfa:	6963      	ldr	r3, [r4, #20]
90019bfc:	9207      	str	r2, [sp, #28]
90019bfe:	9a05      	ldr	r2, [sp, #20]
90019c00:	441a      	add	r2, r3
90019c02:	f002 637f 	and.w	r3, r2, #267386880	; 0xff00000
90019c06:	9205      	str	r2, [sp, #20]
90019c08:	9a08      	ldr	r2, [sp, #32]
90019c0a:	9322      	str	r3, [sp, #136]	; 0x88
90019c0c:	69e3      	ldr	r3, [r4, #28]
90019c0e:	441a      	add	r2, r3
90019c10:	6a63      	ldr	r3, [r4, #36]	; 0x24
90019c12:	449b      	add	fp, r3
90019c14:	9208      	str	r2, [sp, #32]
90019c16:	9a09      	ldr	r2, [sp, #36]	; 0x24
90019c18:	f00b 637f 	and.w	r3, fp, #267386880	; 0xff00000
90019c1c:	9326      	str	r3, [sp, #152]	; 0x98
90019c1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90019c20:	441a      	add	r2, r3
90019c22:	6b63      	ldr	r3, [r4, #52]	; 0x34
90019c24:	9209      	str	r2, [sp, #36]	; 0x24
90019c26:	9a06      	ldr	r2, [sp, #24]
90019c28:	441a      	add	r2, r3
90019c2a:	f002 637f 	and.w	r3, r2, #267386880	; 0xff00000
90019c2e:	9206      	str	r2, [sp, #24]
90019c30:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90019c32:	932a      	str	r3, [sp, #168]	; 0xa8
90019c34:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90019c36:	441a      	add	r2, r3
90019c38:	920a      	str	r2, [sp, #40]	; 0x28
90019c3a:	9b41      	ldr	r3, [sp, #260]	; 0x104
90019c3c:	3b01      	subs	r3, #1
90019c3e:	9341      	str	r3, [sp, #260]	; 0x104
90019c40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90019c42:	3301      	adds	r3, #1
90019c44:	930b      	str	r3, [sp, #44]	; 0x2c
90019c46:	e059      	b.n	90019cfc <EwEmulateFillPolygon+0x330>
90019c48:	9b40      	ldr	r3, [sp, #256]	; 0x100
90019c4a:	4641      	mov	r1, r8
90019c4c:	eba8 0703 	sub.w	r7, r8, r3
90019c50:	183b      	adds	r3, r7, r0
90019c52:	ee08 3a10 	vmov	s16, r3
90019c56:	f00d f855 	bl	90026d04 <EwZero>
90019c5a:	68a3      	ldr	r3, [r4, #8]
90019c5c:	f8d4 8000 	ldr.w	r8, [r4]
90019c60:	9307      	str	r3, [sp, #28]
90019c62:	6923      	ldr	r3, [r4, #16]
90019c64:	f8d4 b020 	ldr.w	fp, [r4, #32]
90019c68:	9305      	str	r3, [sp, #20]
90019c6a:	69a3      	ldr	r3, [r4, #24]
90019c6c:	9308      	str	r3, [sp, #32]
90019c6e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90019c70:	9309      	str	r3, [sp, #36]	; 0x24
90019c72:	6b23      	ldr	r3, [r4, #48]	; 0x30
90019c74:	9306      	str	r3, [sp, #24]
90019c76:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90019c78:	930a      	str	r3, [sp, #40]	; 0x28
90019c7a:	6d23      	ldr	r3, [r4, #80]	; 0x50
90019c7c:	b333      	cbz	r3, 90019ccc <EwEmulateFillPolygon+0x300>
90019c7e:	f1b9 0f00 	cmp.w	r9, #0
90019c82:	d023      	beq.n	90019ccc <EwEmulateFillPolygon+0x300>
90019c84:	6863      	ldr	r3, [r4, #4]
90019c86:	9a07      	ldr	r2, [sp, #28]
90019c88:	fb03 8809 	mla	r8, r3, r9, r8
90019c8c:	68e3      	ldr	r3, [r4, #12]
90019c8e:	fb03 2309 	mla	r3, r3, r9, r2
90019c92:	9a05      	ldr	r2, [sp, #20]
90019c94:	9307      	str	r3, [sp, #28]
90019c96:	6963      	ldr	r3, [r4, #20]
90019c98:	fb03 2309 	mla	r3, r3, r9, r2
90019c9c:	9a08      	ldr	r2, [sp, #32]
90019c9e:	9305      	str	r3, [sp, #20]
90019ca0:	69e3      	ldr	r3, [r4, #28]
90019ca2:	fb03 2309 	mla	r3, r3, r9, r2
90019ca6:	9a09      	ldr	r2, [sp, #36]	; 0x24
90019ca8:	9308      	str	r3, [sp, #32]
90019caa:	6a63      	ldr	r3, [r4, #36]	; 0x24
90019cac:	fb03 bb09 	mla	fp, r3, r9, fp
90019cb0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90019cb2:	fb03 2309 	mla	r3, r3, r9, r2
90019cb6:	9a06      	ldr	r2, [sp, #24]
90019cb8:	9309      	str	r3, [sp, #36]	; 0x24
90019cba:	6b63      	ldr	r3, [r4, #52]	; 0x34
90019cbc:	fb03 2309 	mla	r3, r3, r9, r2
90019cc0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90019cc2:	9306      	str	r3, [sp, #24]
90019cc4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90019cc6:	fb03 2309 	mla	r3, r3, r9, r2
90019cca:	930a      	str	r3, [sp, #40]	; 0x28
90019ccc:	f008 637f 	and.w	r3, r8, #267386880	; 0xff00000
90019cd0:	f04f 0900 	mov.w	r9, #0
90019cd4:	931e      	str	r3, [sp, #120]	; 0x78
90019cd6:	9b05      	ldr	r3, [sp, #20]
90019cd8:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
90019cdc:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90019ce0:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
90019ce4:	f8cd 909c 	str.w	r9, [sp, #156]	; 0x9c
90019ce8:	9322      	str	r3, [sp, #136]	; 0x88
90019cea:	f00b 637f 	and.w	r3, fp, #267386880	; 0xff00000
90019cee:	f8cd 90ac 	str.w	r9, [sp, #172]	; 0xac
90019cf2:	9326      	str	r3, [sp, #152]	; 0x98
90019cf4:	9b06      	ldr	r3, [sp, #24]
90019cf6:	f003 637f 	and.w	r3, r3, #267386880	; 0xff00000
90019cfa:	932a      	str	r3, [sp, #168]	; 0xa8
90019cfc:	9b41      	ldr	r3, [sp, #260]	; 0x104
90019cfe:	2b00      	cmp	r3, #0
90019d00:	f73f ae9d 	bgt.w	90019a3e <EwEmulateFillPolygon+0x72>
90019d04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90019d06:	4630      	mov	r0, r6
90019d08:	602b      	str	r3, [r5, #0]
90019d0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019d0c:	60eb      	str	r3, [r5, #12]
90019d0e:	4b0d      	ldr	r3, [pc, #52]	; (90019d44 <EwEmulateFillPolygon+0x378>)
90019d10:	681a      	ldr	r2, [r3, #0]
90019d12:	4b0d      	ldr	r3, [pc, #52]	; (90019d48 <EwEmulateFillPolygon+0x37c>)
90019d14:	3204      	adds	r2, #4
90019d16:	6819      	ldr	r1, [r3, #0]
90019d18:	428a      	cmp	r2, r1
90019d1a:	490c      	ldr	r1, [pc, #48]	; (90019d4c <EwEmulateFillPolygon+0x380>)
90019d1c:	bfc8      	it	gt
90019d1e:	601a      	strgt	r2, [r3, #0]
90019d20:	4b0b      	ldr	r3, [pc, #44]	; (90019d50 <EwEmulateFillPolygon+0x384>)
90019d22:	6809      	ldr	r1, [r1, #0]
90019d24:	681b      	ldr	r3, [r3, #0]
90019d26:	440b      	add	r3, r1
90019d28:	4413      	add	r3, r2
90019d2a:	4a0a      	ldr	r2, [pc, #40]	; (90019d54 <EwEmulateFillPolygon+0x388>)
90019d2c:	6811      	ldr	r1, [r2, #0]
90019d2e:	428b      	cmp	r3, r1
90019d30:	bfc8      	it	gt
90019d32:	6013      	strgt	r3, [r2, #0]
90019d34:	f00c ffc0 	bl	90026cb8 <EwFree>
90019d38:	b035      	add	sp, #212	; 0xd4
90019d3a:	ecbd 8b02 	vpop	{d8}
90019d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019d42:	bf00      	nop
90019d44:	200002bc 	.word	0x200002bc
90019d48:	200002d8 	.word	0x200002d8
90019d4c:	200002b8 	.word	0x200002b8
90019d50:	200002ac 	.word	0x200002ac
90019d54:	200002c0 	.word	0x200002c0

90019d58 <EwAllocVideo>:
90019d58:	b538      	push	{r3, r4, r5, lr}
90019d5a:	4605      	mov	r5, r0
90019d5c:	4628      	mov	r0, r5
90019d5e:	f00c ffa9 	bl	90026cb4 <EwAlloc>
90019d62:	4604      	mov	r4, r0
90019d64:	b940      	cbnz	r0, 90019d78 <EwAllocVideo+0x20>
90019d66:	b13d      	cbz	r5, 90019d78 <EwAllocVideo+0x20>
90019d68:	2029      	movs	r0, #41	; 0x29
90019d6a:	f004 fb23 	bl	9001e3b4 <EwImmediateReclaimMemory>
90019d6e:	2800      	cmp	r0, #0
90019d70:	d1f4      	bne.n	90019d5c <EwAllocVideo+0x4>
90019d72:	2029      	movs	r0, #41	; 0x29
90019d74:	f003 fb6c 	bl	9001d450 <EwError>
90019d78:	4620      	mov	r0, r4
90019d7a:	bd38      	pop	{r3, r4, r5, pc}

90019d7c <EwCreateIndex8Surface>:
90019d7c:	b570      	push	{r4, r5, r6, lr}
90019d7e:	fb01 f600 	mul.w	r6, r1, r0
90019d82:	4604      	mov	r4, r0
90019d84:	460d      	mov	r5, r1
90019d86:	f506 6083 	add.w	r0, r6, #1048	; 0x418
90019d8a:	f7ff ffe5 	bl	90019d58 <EwAllocVideo>
90019d8e:	b300      	cbz	r0, 90019dd2 <EwCreateIndex8Surface+0x56>
90019d90:	f100 0318 	add.w	r3, r0, #24
90019d94:	4a0f      	ldr	r2, [pc, #60]	; (90019dd4 <EwCreateIndex8Surface+0x58>)
90019d96:	6104      	str	r4, [r0, #16]
90019d98:	60c3      	str	r3, [r0, #12]
90019d9a:	f500 6383 	add.w	r3, r0, #1048	; 0x418
90019d9e:	6083      	str	r3, [r0, #8]
90019da0:	2300      	movs	r3, #0
90019da2:	6143      	str	r3, [r0, #20]
90019da4:	6813      	ldr	r3, [r2, #0]
90019da6:	f503 6383 	add.w	r3, r3, #1048	; 0x418
90019daa:	4433      	add	r3, r6
90019dac:	e9c0 4500 	strd	r4, r5, [r0]
90019db0:	6013      	str	r3, [r2, #0]
90019db2:	4a09      	ldr	r2, [pc, #36]	; (90019dd8 <EwCreateIndex8Surface+0x5c>)
90019db4:	6811      	ldr	r1, [r2, #0]
90019db6:	428b      	cmp	r3, r1
90019db8:	4908      	ldr	r1, [pc, #32]	; (90019ddc <EwCreateIndex8Surface+0x60>)
90019dba:	bfc8      	it	gt
90019dbc:	6013      	strgt	r3, [r2, #0]
90019dbe:	4a08      	ldr	r2, [pc, #32]	; (90019de0 <EwCreateIndex8Surface+0x64>)
90019dc0:	6809      	ldr	r1, [r1, #0]
90019dc2:	6812      	ldr	r2, [r2, #0]
90019dc4:	440a      	add	r2, r1
90019dc6:	4413      	add	r3, r2
90019dc8:	4a06      	ldr	r2, [pc, #24]	; (90019de4 <EwCreateIndex8Surface+0x68>)
90019dca:	6811      	ldr	r1, [r2, #0]
90019dcc:	428b      	cmp	r3, r1
90019dce:	bfc8      	it	gt
90019dd0:	6013      	strgt	r3, [r2, #0]
90019dd2:	bd70      	pop	{r4, r5, r6, pc}
90019dd4:	200002bc 	.word	0x200002bc
90019dd8:	200002d8 	.word	0x200002d8
90019ddc:	200002b8 	.word	0x200002b8
90019de0:	200002ac 	.word	0x200002ac
90019de4:	200002c0 	.word	0x200002c0

90019de8 <EwCreateConstIndex8Surface>:
90019de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019dea:	4605      	mov	r5, r0
90019dec:	460e      	mov	r6, r1
90019dee:	4614      	mov	r4, r2
90019df0:	2a00      	cmp	r2, #0
90019df2:	d02c      	beq.n	90019e4e <EwCreateConstIndex8Surface+0x66>
90019df4:	6810      	ldr	r0, [r2, #0]
90019df6:	b348      	cbz	r0, 90019e4c <EwCreateConstIndex8Surface+0x64>
90019df8:	6990      	ldr	r0, [r2, #24]
90019dfa:	b338      	cbz	r0, 90019e4c <EwCreateConstIndex8Surface+0x64>
90019dfc:	6857      	ldr	r7, [r2, #4]
90019dfe:	2f01      	cmp	r7, #1
90019e00:	d125      	bne.n	90019e4e <EwCreateConstIndex8Surface+0x66>
90019e02:	6893      	ldr	r3, [r2, #8]
90019e04:	42ab      	cmp	r3, r5
90019e06:	db22      	blt.n	90019e4e <EwCreateConstIndex8Surface+0x66>
90019e08:	2018      	movs	r0, #24
90019e0a:	f7ff ffa5 	bl	90019d58 <EwAllocVideo>
90019e0e:	b1e8      	cbz	r0, 90019e4c <EwCreateConstIndex8Surface+0x64>
90019e10:	69a3      	ldr	r3, [r4, #24]
90019e12:	4910      	ldr	r1, [pc, #64]	; (90019e54 <EwCreateConstIndex8Surface+0x6c>)
90019e14:	60c3      	str	r3, [r0, #12]
90019e16:	6823      	ldr	r3, [r4, #0]
90019e18:	6083      	str	r3, [r0, #8]
90019e1a:	68a3      	ldr	r3, [r4, #8]
90019e1c:	e9c0 3704 	strd	r3, r7, [r0, #16]
90019e20:	680b      	ldr	r3, [r1, #0]
90019e22:	f103 0218 	add.w	r2, r3, #24
90019e26:	4b0c      	ldr	r3, [pc, #48]	; (90019e58 <EwCreateConstIndex8Surface+0x70>)
90019e28:	e9c0 5600 	strd	r5, r6, [r0]
90019e2c:	600a      	str	r2, [r1, #0]
90019e2e:	6819      	ldr	r1, [r3, #0]
90019e30:	428a      	cmp	r2, r1
90019e32:	490a      	ldr	r1, [pc, #40]	; (90019e5c <EwCreateConstIndex8Surface+0x74>)
90019e34:	bfc8      	it	gt
90019e36:	601a      	strgt	r2, [r3, #0]
90019e38:	4b09      	ldr	r3, [pc, #36]	; (90019e60 <EwCreateConstIndex8Surface+0x78>)
90019e3a:	6809      	ldr	r1, [r1, #0]
90019e3c:	681b      	ldr	r3, [r3, #0]
90019e3e:	440b      	add	r3, r1
90019e40:	4413      	add	r3, r2
90019e42:	4a08      	ldr	r2, [pc, #32]	; (90019e64 <EwCreateConstIndex8Surface+0x7c>)
90019e44:	6811      	ldr	r1, [r2, #0]
90019e46:	428b      	cmp	r3, r1
90019e48:	dd00      	ble.n	90019e4c <EwCreateConstIndex8Surface+0x64>
90019e4a:	6013      	str	r3, [r2, #0]
90019e4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019e4e:	2000      	movs	r0, #0
90019e50:	e7fc      	b.n	90019e4c <EwCreateConstIndex8Surface+0x64>
90019e52:	bf00      	nop
90019e54:	200002bc 	.word	0x200002bc
90019e58:	200002d8 	.word	0x200002d8
90019e5c:	200002b8 	.word	0x200002b8
90019e60:	200002ac 	.word	0x200002ac
90019e64:	200002c0 	.word	0x200002c0

90019e68 <EwCreateAlpha8Surface>:
90019e68:	b570      	push	{r4, r5, r6, lr}
90019e6a:	fb01 f600 	mul.w	r6, r1, r0
90019e6e:	4604      	mov	r4, r0
90019e70:	460d      	mov	r5, r1
90019e72:	f106 0014 	add.w	r0, r6, #20
90019e76:	f7ff ff6f 	bl	90019d58 <EwAllocVideo>
90019e7a:	b1e0      	cbz	r0, 90019eb6 <EwCreateAlpha8Surface+0x4e>
90019e7c:	f100 0314 	add.w	r3, r0, #20
90019e80:	4a0d      	ldr	r2, [pc, #52]	; (90019eb8 <EwCreateAlpha8Surface+0x50>)
90019e82:	e9c0 3402 	strd	r3, r4, [r0, #8]
90019e86:	2300      	movs	r3, #0
90019e88:	6103      	str	r3, [r0, #16]
90019e8a:	6813      	ldr	r3, [r2, #0]
90019e8c:	3314      	adds	r3, #20
90019e8e:	4433      	add	r3, r6
90019e90:	e9c0 4500 	strd	r4, r5, [r0]
90019e94:	6013      	str	r3, [r2, #0]
90019e96:	4a09      	ldr	r2, [pc, #36]	; (90019ebc <EwCreateAlpha8Surface+0x54>)
90019e98:	6811      	ldr	r1, [r2, #0]
90019e9a:	428b      	cmp	r3, r1
90019e9c:	4908      	ldr	r1, [pc, #32]	; (90019ec0 <EwCreateAlpha8Surface+0x58>)
90019e9e:	bfc8      	it	gt
90019ea0:	6013      	strgt	r3, [r2, #0]
90019ea2:	4a08      	ldr	r2, [pc, #32]	; (90019ec4 <EwCreateAlpha8Surface+0x5c>)
90019ea4:	6809      	ldr	r1, [r1, #0]
90019ea6:	6812      	ldr	r2, [r2, #0]
90019ea8:	440a      	add	r2, r1
90019eaa:	4413      	add	r3, r2
90019eac:	4a06      	ldr	r2, [pc, #24]	; (90019ec8 <EwCreateAlpha8Surface+0x60>)
90019eae:	6811      	ldr	r1, [r2, #0]
90019eb0:	428b      	cmp	r3, r1
90019eb2:	bfc8      	it	gt
90019eb4:	6013      	strgt	r3, [r2, #0]
90019eb6:	bd70      	pop	{r4, r5, r6, pc}
90019eb8:	200002bc 	.word	0x200002bc
90019ebc:	200002d8 	.word	0x200002d8
90019ec0:	200002b8 	.word	0x200002b8
90019ec4:	200002ac 	.word	0x200002ac
90019ec8:	200002c0 	.word	0x200002c0

90019ecc <EwCreateConstAlpha8Surface>:
90019ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90019ece:	4605      	mov	r5, r0
90019ed0:	460e      	mov	r6, r1
90019ed2:	4614      	mov	r4, r2
90019ed4:	b342      	cbz	r2, 90019f28 <EwCreateConstAlpha8Surface+0x5c>
90019ed6:	6810      	ldr	r0, [r2, #0]
90019ed8:	b328      	cbz	r0, 90019f26 <EwCreateConstAlpha8Surface+0x5a>
90019eda:	6857      	ldr	r7, [r2, #4]
90019edc:	2f01      	cmp	r7, #1
90019ede:	d123      	bne.n	90019f28 <EwCreateConstAlpha8Surface+0x5c>
90019ee0:	6893      	ldr	r3, [r2, #8]
90019ee2:	42ab      	cmp	r3, r5
90019ee4:	db20      	blt.n	90019f28 <EwCreateConstAlpha8Surface+0x5c>
90019ee6:	2014      	movs	r0, #20
90019ee8:	f7ff ff36 	bl	90019d58 <EwAllocVideo>
90019eec:	b1d8      	cbz	r0, 90019f26 <EwCreateConstAlpha8Surface+0x5a>
90019eee:	6823      	ldr	r3, [r4, #0]
90019ef0:	490e      	ldr	r1, [pc, #56]	; (90019f2c <EwCreateConstAlpha8Surface+0x60>)
90019ef2:	6083      	str	r3, [r0, #8]
90019ef4:	68a3      	ldr	r3, [r4, #8]
90019ef6:	e9c0 3703 	strd	r3, r7, [r0, #12]
90019efa:	680b      	ldr	r3, [r1, #0]
90019efc:	f103 0214 	add.w	r2, r3, #20
90019f00:	4b0b      	ldr	r3, [pc, #44]	; (90019f30 <EwCreateConstAlpha8Surface+0x64>)
90019f02:	e9c0 5600 	strd	r5, r6, [r0]
90019f06:	600a      	str	r2, [r1, #0]
90019f08:	6819      	ldr	r1, [r3, #0]
90019f0a:	428a      	cmp	r2, r1
90019f0c:	4909      	ldr	r1, [pc, #36]	; (90019f34 <EwCreateConstAlpha8Surface+0x68>)
90019f0e:	bfc8      	it	gt
90019f10:	601a      	strgt	r2, [r3, #0]
90019f12:	4b09      	ldr	r3, [pc, #36]	; (90019f38 <EwCreateConstAlpha8Surface+0x6c>)
90019f14:	6809      	ldr	r1, [r1, #0]
90019f16:	681b      	ldr	r3, [r3, #0]
90019f18:	440b      	add	r3, r1
90019f1a:	4413      	add	r3, r2
90019f1c:	4a07      	ldr	r2, [pc, #28]	; (90019f3c <EwCreateConstAlpha8Surface+0x70>)
90019f1e:	6811      	ldr	r1, [r2, #0]
90019f20:	428b      	cmp	r3, r1
90019f22:	dd00      	ble.n	90019f26 <EwCreateConstAlpha8Surface+0x5a>
90019f24:	6013      	str	r3, [r2, #0]
90019f26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90019f28:	2000      	movs	r0, #0
90019f2a:	e7fc      	b.n	90019f26 <EwCreateConstAlpha8Surface+0x5a>
90019f2c:	200002bc 	.word	0x200002bc
90019f30:	200002d8 	.word	0x200002d8
90019f34:	200002b8 	.word	0x200002b8
90019f38:	200002ac 	.word	0x200002ac
90019f3c:	200002c0 	.word	0x200002c0

90019f40 <EwFreeVideo>:
90019f40:	f00c beba 	b.w	90026cb8 <EwFree>
90019f44:	b530      	push	{r4, r5, lr}
90019f46:	4d18      	ldr	r5, [pc, #96]	; (90019fa8 <EwFreeVideo+0x68>)
90019f48:	b087      	sub	sp, #28
90019f4a:	4604      	mov	r4, r0
90019f4c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90019f4e:	b148      	cbz	r0, 90019f64 <EwFreeVideo+0x24>
90019f50:	4298      	cmp	r0, r3
90019f52:	d126      	bne.n	90019fa2 <EwFreeVideo+0x62>
90019f54:	4814      	ldr	r0, [pc, #80]	; (90019fa8 <EwFreeVideo+0x68>)
90019f56:	e003      	b.n	90019f60 <EwFreeVideo+0x20>
90019f58:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90019f5a:	2b00      	cmp	r3, #0
90019f5c:	d1fa      	bne.n	90019f54 <EwFreeVideo+0x14>
90019f5e:	2000      	movs	r0, #0
90019f60:	b007      	add	sp, #28
90019f62:	bd30      	pop	{r4, r5, pc}
90019f64:	2b00      	cmp	r3, #0
90019f66:	d0fa      	beq.n	90019f5e <EwFreeVideo+0x1e>
90019f68:	4618      	mov	r0, r3
90019f6a:	490f      	ldr	r1, [pc, #60]	; (90019fa8 <EwFreeVideo+0x68>)
90019f6c:	f7fd faa2 	bl	900174b4 <EwUnlockSurface>
90019f70:	2300      	movs	r3, #0
90019f72:	632b      	str	r3, [r5, #48]	; 0x30
90019f74:	2c00      	cmp	r4, #0
90019f76:	d0f2      	beq.n	90019f5e <EwFreeVideo+0x1e>
90019f78:	f44f 7380 	mov.w	r3, #256	; 0x100
90019f7c:	2283      	movs	r2, #131	; 0x83
90019f7e:	9504      	str	r5, [sp, #16]
90019f80:	4620      	mov	r0, r4
90019f82:	e9cd 3202 	strd	r3, r2, [sp, #8]
90019f86:	2200      	movs	r2, #0
90019f88:	9201      	str	r2, [sp, #4]
90019f8a:	4611      	mov	r1, r2
90019f8c:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
90019f90:	9300      	str	r3, [sp, #0]
90019f92:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
90019f96:	f7fd fddf 	bl	90017b58 <EwLockSurface>
90019f9a:	2800      	cmp	r0, #0
90019f9c:	d0dc      	beq.n	90019f58 <EwFreeVideo+0x18>
90019f9e:	632c      	str	r4, [r5, #48]	; 0x30
90019fa0:	e7d8      	b.n	90019f54 <EwFreeVideo+0x14>
90019fa2:	2b00      	cmp	r3, #0
90019fa4:	d1e0      	bne.n	90019f68 <EwFreeVideo+0x28>
90019fa6:	e7e7      	b.n	90019f78 <EwFreeVideo+0x38>
90019fa8:	2000022c 	.word	0x2000022c
90019fac:	b570      	push	{r4, r5, r6, lr}
90019fae:	4e19      	ldr	r6, [pc, #100]	; (9001a014 <EwFreeVideo+0xd4>)
90019fb0:	b086      	sub	sp, #24
90019fb2:	4604      	mov	r4, r0
90019fb4:	6e73      	ldr	r3, [r6, #100]	; 0x64
90019fb6:	b140      	cbz	r0, 90019fca <EwFreeVideo+0x8a>
90019fb8:	4298      	cmp	r0, r3
90019fba:	d128      	bne.n	9001a00e <EwFreeVideo+0xce>
90019fbc:	4816      	ldr	r0, [pc, #88]	; (9001a018 <EwFreeVideo+0xd8>)
90019fbe:	e024      	b.n	9001a00a <EwFreeVideo+0xca>
90019fc0:	6e73      	ldr	r3, [r6, #100]	; 0x64
90019fc2:	2b00      	cmp	r3, #0
90019fc4:	d1fa      	bne.n	90019fbc <EwFreeVideo+0x7c>
90019fc6:	2000      	movs	r0, #0
90019fc8:	e01f      	b.n	9001a00a <EwFreeVideo+0xca>
90019fca:	2b00      	cmp	r3, #0
90019fcc:	d0fb      	beq.n	90019fc6 <EwFreeVideo+0x86>
90019fce:	4618      	mov	r0, r3
90019fd0:	4911      	ldr	r1, [pc, #68]	; (9001a018 <EwFreeVideo+0xd8>)
90019fd2:	f7fd fa6f 	bl	900174b4 <EwUnlockSurface>
90019fd6:	2300      	movs	r3, #0
90019fd8:	6673      	str	r3, [r6, #100]	; 0x64
90019fda:	2c00      	cmp	r4, #0
90019fdc:	d0f3      	beq.n	90019fc6 <EwFreeVideo+0x86>
90019fde:	f44f 7380 	mov.w	r3, #256	; 0x100
90019fe2:	2285      	movs	r2, #133	; 0x85
90019fe4:	4d0c      	ldr	r5, [pc, #48]	; (9001a018 <EwFreeVideo+0xd8>)
90019fe6:	4620      	mov	r0, r4
90019fe8:	e9cd 3202 	strd	r3, r2, [sp, #8]
90019fec:	2200      	movs	r2, #0
90019fee:	9504      	str	r5, [sp, #16]
90019ff0:	9201      	str	r2, [sp, #4]
90019ff2:	4611      	mov	r1, r2
90019ff4:	f9b4 3024 	ldrsh.w	r3, [r4, #36]	; 0x24
90019ff8:	9300      	str	r3, [sp, #0]
90019ffa:	f9b4 3022 	ldrsh.w	r3, [r4, #34]	; 0x22
90019ffe:	f7fd fdab 	bl	90017b58 <EwLockSurface>
9001a002:	2800      	cmp	r0, #0
9001a004:	d0dc      	beq.n	90019fc0 <EwFreeVideo+0x80>
9001a006:	4628      	mov	r0, r5
9001a008:	6674      	str	r4, [r6, #100]	; 0x64
9001a00a:	b006      	add	sp, #24
9001a00c:	bd70      	pop	{r4, r5, r6, pc}
9001a00e:	2b00      	cmp	r3, #0
9001a010:	d1dd      	bne.n	90019fce <EwFreeVideo+0x8e>
9001a012:	e7e4      	b.n	90019fde <EwFreeVideo+0x9e>
9001a014:	2000022c 	.word	0x2000022c
9001a018:	20000260 	.word	0x20000260
9001a01c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001a020:	690c      	ldr	r4, [r1, #16]
9001a022:	b08b      	sub	sp, #44	; 0x2c
9001a024:	460d      	mov	r5, r1
9001a026:	4606      	mov	r6, r0
9001a028:	2000      	movs	r0, #0
9001a02a:	4617      	mov	r7, r2
9001a02c:	4698      	mov	r8, r3
9001a02e:	f7ff ff89 	bl	90019f44 <EwFreeVideo+0x4>
9001a032:	2000      	movs	r0, #0
9001a034:	f104 093c 	add.w	r9, r4, #60	; 0x3c
9001a038:	f7ff ffb8 	bl	90019fac <EwFreeVideo+0x6c>
9001a03c:	88e9      	ldrh	r1, [r5, #6]
9001a03e:	f9b5 c008 	ldrsh.w	ip, [r5, #8]
9001a042:	f9b5 e00a 	ldrsh.w	lr, [r5, #10]
9001a046:	f9b4 2030 	ldrsh.w	r2, [r4, #48]	; 0x30
9001a04a:	f9b4 3032 	ldrsh.w	r3, [r4, #50]	; 0x32
9001a04e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9001a050:	f8cd 9020 	str.w	r9, [sp, #32]
9001a054:	f001 0908 	and.w	r9, r1, #8
9001a058:	f001 0101 	and.w	r1, r1, #1
9001a05c:	f8cd 901c 	str.w	r9, [sp, #28]
9001a060:	9106      	str	r1, [sp, #24]
9001a062:	f9b5 100e 	ldrsh.w	r1, [r5, #14]
9001a066:	eba1 010e 	sub.w	r1, r1, lr
9001a06a:	9105      	str	r1, [sp, #20]
9001a06c:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
9001a070:	f8cd c008 	str.w	ip, [sp, #8]
9001a074:	eba1 010c 	sub.w	r1, r1, ip
9001a078:	f857 5028 	ldr.w	r5, [r7, r8, lsl #2]
9001a07c:	e9cd e103 	strd	lr, r1, [sp, #12]
9001a080:	f9b4 1036 	ldrsh.w	r1, [r4, #54]	; 0x36
9001a084:	1ac9      	subs	r1, r1, r3
9001a086:	9101      	str	r1, [sp, #4]
9001a088:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
9001a08c:	1a89      	subs	r1, r1, r2
9001a08e:	9100      	str	r1, [sp, #0]
9001a090:	edd4 5a0b 	vldr	s11, [r4, #44]	; 0x2c
9001a094:	ed94 5a0a 	vldr	s10, [r4, #40]	; 0x28
9001a098:	edd4 4a09 	vldr	s9, [r4, #36]	; 0x24
9001a09c:	ed94 4a08 	vldr	s8, [r4, #32]
9001a0a0:	edd4 3a07 	vldr	s7, [r4, #28]
9001a0a4:	ed94 3a06 	vldr	s6, [r4, #24]
9001a0a8:	edd4 2a05 	vldr	s5, [r4, #20]
9001a0ac:	ed94 2a04 	vldr	s4, [r4, #16]
9001a0b0:	edd4 1a03 	vldr	s3, [r4, #12]
9001a0b4:	ed94 1a02 	vldr	s2, [r4, #8]
9001a0b8:	edd4 0a01 	vldr	s1, [r4, #4]
9001a0bc:	ed94 0a00 	vldr	s0, [r4]
9001a0c0:	6b81      	ldr	r1, [r0, #56]	; 0x38
9001a0c2:	6bb0      	ldr	r0, [r6, #56]	; 0x38
9001a0c4:	47a8      	blx	r5
9001a0c6:	b00b      	add	sp, #44	; 0x2c
9001a0c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001a0cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a0d0:	690c      	ldr	r4, [r1, #16]
9001a0d2:	b0aa      	sub	sp, #168	; 0xa8
9001a0d4:	460d      	mov	r5, r1
9001a0d6:	4690      	mov	r8, r2
9001a0d8:	4699      	mov	r9, r3
9001a0da:	f7ff ff33 	bl	90019f44 <EwFreeVideo+0x4>
9001a0de:	4606      	mov	r6, r0
9001a0e0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9001a0e2:	f7ff ff63 	bl	90019fac <EwFreeVideo+0x6c>
9001a0e6:	4607      	mov	r7, r0
9001a0e8:	2e00      	cmp	r6, #0
9001a0ea:	f000 80a2 	beq.w	9001a232 <EwFreeVideo+0x2f2>
9001a0ee:	2800      	cmp	r0, #0
9001a0f0:	f000 809f 	beq.w	9001a232 <EwFreeVideo+0x2f2>
9001a0f4:	f10d 0a50 	add.w	sl, sp, #80	; 0x50
9001a0f8:	f9b4 e036 	ldrsh.w	lr, [r4, #54]	; 0x36
9001a0fc:	f9b4 1032 	ldrsh.w	r1, [r4, #50]	; 0x32
9001a100:	f104 023c 	add.w	r2, r4, #60	; 0x3c
9001a104:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
9001a108:	4653      	mov	r3, sl
9001a10a:	f9b4 0030 	ldrsh.w	r0, [r4, #48]	; 0x30
9001a10e:	ebae 0101 	sub.w	r1, lr, r1
9001a112:	ebac 0000 	sub.w	r0, ip, r0
9001a116:	f7fe fb51 	bl	900187bc <EwInitColorGradient>
9001a11a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
9001a11e:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
9001a122:	edd4 6a00 	vldr	s13, [r4]
9001a126:	ed94 6a03 	vldr	s12, [r4, #12]
9001a12a:	4630      	mov	r0, r6
9001a12c:	eeb0 4a67 	vmov.f32	s8, s15
9001a130:	edd4 5a04 	vldr	s11, [r4, #16]
9001a134:	eef0 3a67 	vmov.f32	s7, s15
9001a138:	ed94 5a06 	vldr	s10, [r4, #24]
9001a13c:	edd4 4a07 	vldr	s9, [r4, #28]
9001a140:	eea6 4a87 	vfma.f32	s8, s13, s14
9001a144:	edd4 6a01 	vldr	s13, [r4, #4]
9001a148:	ed94 3a09 	vldr	s6, [r4, #36]	; 0x24
9001a14c:	eee6 3a87 	vfma.f32	s7, s13, s14
9001a150:	f858 3029 	ldr.w	r3, [r8, r9, lsl #2]
9001a154:	eef0 6a67 	vmov.f32	s13, s15
9001a158:	f9b4 2030 	ldrsh.w	r2, [r4, #48]	; 0x30
9001a15c:	f9b4 1032 	ldrsh.w	r1, [r4, #50]	; 0x32
9001a160:	eee6 6a07 	vfma.f32	s13, s12, s14
9001a164:	eeb0 6a67 	vmov.f32	s12, s15
9001a168:	eea5 6a87 	vfma.f32	s12, s11, s14
9001a16c:	eef0 5a67 	vmov.f32	s11, s15
9001a170:	eefd 6ae6 	vcvt.s32.f32	s13, s13
9001a174:	eee5 5a07 	vfma.f32	s11, s10, s14
9001a178:	eeb0 5a67 	vmov.f32	s10, s15
9001a17c:	eebd 6ac6 	vcvt.s32.f32	s12, s12
9001a180:	eea4 5a87 	vfma.f32	s10, s9, s14
9001a184:	eef0 4a67 	vmov.f32	s9, s15
9001a188:	eefd 5ae5 	vcvt.s32.f32	s11, s11
9001a18c:	eee3 4a07 	vfma.f32	s9, s6, s14
9001a190:	ed94 3a0a 	vldr	s6, [r4, #40]	; 0x28
9001a194:	e9cd a312 	strd	sl, r3, [sp, #72]	; 0x48
9001a198:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9001a19c:	eee3 7a07 	vfma.f32	s15, s6, s14
9001a1a0:	eebd 5ac5 	vcvt.s32.f32	s10, s10
9001a1a4:	9311      	str	r3, [sp, #68]	; 0x44
9001a1a6:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
9001a1aa:	eefd 4ae4 	vcvt.s32.f32	s9, s9
9001a1ae:	9310      	str	r3, [sp, #64]	; 0x40
9001a1b0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001a1b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
9001a1b8:	930f      	str	r3, [sp, #60]	; 0x3c
9001a1ba:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
9001a1be:	930e      	str	r3, [sp, #56]	; 0x38
9001a1c0:	f9b4 3036 	ldrsh.w	r3, [r4, #54]	; 0x36
9001a1c4:	1a5b      	subs	r3, r3, r1
9001a1c6:	930d      	str	r3, [sp, #52]	; 0x34
9001a1c8:	f9b4 3034 	ldrsh.w	r3, [r4, #52]	; 0x34
9001a1cc:	920a      	str	r2, [sp, #40]	; 0x28
9001a1ce:	1a9b      	subs	r3, r3, r2
9001a1d0:	e9cd 130b 	strd	r1, r3, [sp, #44]	; 0x2c
9001a1d4:	ed94 7a0b 	vldr	s14, [r4, #44]	; 0x2c
9001a1d8:	4639      	mov	r1, r7
9001a1da:	edcd 7a08 	vstr	s15, [sp, #32]
9001a1de:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
9001a1e2:	edcd 4a07 	vstr	s9, [sp, #28]
9001a1e6:	ed8d 7a09 	vstr	s14, [sp, #36]	; 0x24
9001a1ea:	edd4 7a08 	vldr	s15, [r4, #32]
9001a1ee:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001a1f2:	edcd 7a06 	vstr	s15, [sp, #24]
9001a1f6:	ed8d 5a05 	vstr	s10, [sp, #20]
9001a1fa:	edcd 5a04 	vstr	s11, [sp, #16]
9001a1fe:	edd4 7a05 	vldr	s15, [r4, #20]
9001a202:	ed8d 6a02 	vstr	s12, [sp, #8]
9001a206:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001a20a:	edcd 6a01 	vstr	s13, [sp, #4]
9001a20e:	edcd 7a03 	vstr	s15, [sp, #12]
9001a212:	edd4 7a02 	vldr	s15, [r4, #8]
9001a216:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
9001a21a:	edcd 7a00 	vstr	s15, [sp]
9001a21e:	eefd 7ae3 	vcvt.s32.f32	s15, s7
9001a222:	ee17 3a90 	vmov	r3, s15
9001a226:	eefd 7ac4 	vcvt.s32.f32	s15, s8
9001a22a:	ee17 2a90 	vmov	r2, s15
9001a22e:	f7fe ff11 	bl	90019054 <EwEmulateWarp>
9001a232:	b02a      	add	sp, #168	; 0xa8
9001a234:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001a238 <EwGfxTasksInit>:
9001a238:	2001      	movs	r0, #1
9001a23a:	4770      	bx	lr

9001a23c <EwReorderTasks>:
9001a23c:	6902      	ldr	r2, [r0, #16]
9001a23e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a242:	2a00      	cmp	r2, #0
9001a244:	f000 80ff 	beq.w	9001a446 <EwReorderTasks+0x20a>
9001a248:	6811      	ldr	r1, [r2, #0]
9001a24a:	4614      	mov	r4, r2
9001a24c:	f8df e20c 	ldr.w	lr, [pc, #524]	; 9001a45c <EwReorderTasks+0x220>
9001a250:	f04f 0c10 	mov.w	ip, #16
9001a254:	4e80      	ldr	r6, [pc, #512]	; (9001a458 <EwReorderTasks+0x21c>)
9001a256:	f04f 0808 	mov.w	r8, #8
9001a25a:	f9b4 9006 	ldrsh.w	r9, [r4, #6]
9001a25e:	f9b4 7004 	ldrsh.w	r7, [r4, #4]
9001a262:	f009 050f 	and.w	r5, r9, #15
9001a266:	3f01      	subs	r7, #1
9001a268:	462b      	mov	r3, r5
9001a26a:	2f08      	cmp	r7, #8
9001a26c:	f200 80e1 	bhi.w	9001a432 <EwReorderTasks+0x1f6>
9001a270:	e8df f017 	tbh	[pc, r7, lsl #1]
9001a274:	0025001a 	.word	0x0025001a
9001a278:	00a00036 	.word	0x00a00036
9001a27c:	00c200b1 	.word	0x00c200b1
9001a280:	00830009 	.word	0x00830009
9001a284:	00d3      	.short	0x00d3
9001a286:	68c7      	ldr	r7, [r0, #12]
9001a288:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a28c:	3701      	adds	r7, #1
9001a28e:	bf08      	it	eq
9001a290:	f105 0308 	addeq.w	r3, r5, #8
9001a294:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001a298:	fab3 f383 	clz	r3, r3
9001a29c:	095b      	lsrs	r3, r3, #5
9001a29e:	2b00      	cmp	r3, #0
9001a2a0:	bf0c      	ite	eq
9001a2a2:	2300      	moveq	r3, #0
9001a2a4:	4673      	movne	r3, lr
9001a2a6:	e034      	b.n	9001a312 <EwReorderTasks+0xd6>
9001a2a8:	68c7      	ldr	r7, [r0, #12]
9001a2aa:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a2ae:	3701      	adds	r7, #1
9001a2b0:	bf08      	it	eq
9001a2b2:	f105 0308 	addeq.w	r3, r5, #8
9001a2b6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a2ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001a2bc:	e7ec      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a2be:	68c7      	ldr	r7, [r0, #12]
9001a2c0:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a2c4:	3701      	adds	r7, #1
9001a2c6:	bf08      	it	eq
9001a2c8:	f105 0320 	addeq.w	r3, r5, #32
9001a2cc:	6925      	ldr	r5, [r4, #16]
9001a2ce:	68ed      	ldr	r5, [r5, #12]
9001a2d0:	8c2d      	ldrh	r5, [r5, #32]
9001a2d2:	fb15 3308 	smlabb	r3, r5, r8, r3
9001a2d6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a2da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001a2de:	e7db      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a2e0:	68c7      	ldr	r7, [r0, #12]
9001a2e2:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a2e6:	3701      	adds	r7, #1
9001a2e8:	bf08      	it	eq
9001a2ea:	f105 0320 	addeq.w	r3, r5, #32
9001a2ee:	6925      	ldr	r5, [r4, #16]
9001a2f0:	696d      	ldr	r5, [r5, #20]
9001a2f2:	8c2d      	ldrh	r5, [r5, #32]
9001a2f4:	fb15 3308 	smlabb	r3, r5, r8, r3
9001a2f8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a2fc:	f8d3 5184 	ldr.w	r5, [r3, #388]	; 0x184
9001a300:	2d00      	cmp	r5, #0
9001a302:	f040 8096 	bne.w	9001a432 <EwReorderTasks+0x1f6>
9001a306:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001a30a:	2b00      	cmp	r3, #0
9001a30c:	bf14      	ite	ne
9001a30e:	2300      	movne	r3, #0
9001a310:	4673      	moveq	r3, lr
9001a312:	ea49 0303 	orr.w	r3, r9, r3
9001a316:	80e3      	strh	r3, [r4, #6]
9001a318:	6824      	ldr	r4, [r4, #0]
9001a31a:	2c00      	cmp	r4, #0
9001a31c:	d19d      	bne.n	9001a25a <EwReorderTasks+0x1e>
9001a31e:	2900      	cmp	r1, #0
9001a320:	f000 8091 	beq.w	9001a446 <EwReorderTasks+0x20a>
9001a324:	6014      	str	r4, [r2, #0]
9001a326:	f9b2 4006 	ldrsh.w	r4, [r2, #6]
9001a32a:	4613      	mov	r3, r2
9001a32c:	2c00      	cmp	r4, #0
9001a32e:	f2c0 808d 	blt.w	9001a44c <EwReorderTasks+0x210>
9001a332:	f9b1 4006 	ldrsh.w	r4, [r1, #6]
9001a336:	2c00      	cmp	r4, #0
9001a338:	f280 8088 	bge.w	9001a44c <EwReorderTasks+0x210>
9001a33c:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001a340:	f9b1 400c 	ldrsh.w	r4, [r1, #12]
9001a344:	42a5      	cmp	r5, r4
9001a346:	da11      	bge.n	9001a36c <EwReorderTasks+0x130>
9001a348:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
9001a34c:	f9b1 400e 	ldrsh.w	r4, [r1, #14]
9001a350:	42a5      	cmp	r5, r4
9001a352:	da0b      	bge.n	9001a36c <EwReorderTasks+0x130>
9001a354:	f9b1 5008 	ldrsh.w	r5, [r1, #8]
9001a358:	f9b2 400c 	ldrsh.w	r4, [r2, #12]
9001a35c:	42a5      	cmp	r5, r4
9001a35e:	da05      	bge.n	9001a36c <EwReorderTasks+0x130>
9001a360:	f9b1 500a 	ldrsh.w	r5, [r1, #10]
9001a364:	f9b2 400e 	ldrsh.w	r4, [r2, #14]
9001a368:	42a5      	cmp	r5, r4
9001a36a:	db6f      	blt.n	9001a44c <EwReorderTasks+0x210>
9001a36c:	6812      	ldr	r2, [r2, #0]
9001a36e:	2a00      	cmp	r2, #0
9001a370:	d061      	beq.n	9001a436 <EwReorderTasks+0x1fa>
9001a372:	680c      	ldr	r4, [r1, #0]
9001a374:	601c      	str	r4, [r3, #0]
9001a376:	600b      	str	r3, [r1, #0]
9001a378:	e7d5      	b.n	9001a326 <EwReorderTasks+0xea>
9001a37a:	6927      	ldr	r7, [r4, #16]
9001a37c:	f9b7 a016 	ldrsh.w	sl, [r7, #22]
9001a380:	68c7      	ldr	r7, [r0, #12]
9001a382:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a386:	3701      	adds	r7, #1
9001a388:	d110      	bne.n	9001a3ac <EwReorderTasks+0x170>
9001a38a:	f1ba 0f00 	cmp.w	sl, #0
9001a38e:	d006      	beq.n	9001a39e <EwReorderTasks+0x162>
9001a390:	f105 0340 	add.w	r3, r5, #64	; 0x40
9001a394:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a398:	f8d3 3308 	ldr.w	r3, [r3, #776]	; 0x308
9001a39c:	e77c      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a39e:	f105 0320 	add.w	r3, r5, #32
9001a3a2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a3a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
9001a3aa:	e775      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a3ac:	f1ba 0f00 	cmp.w	sl, #0
9001a3b0:	d0f7      	beq.n	9001a3a2 <EwReorderTasks+0x166>
9001a3b2:	e7ef      	b.n	9001a394 <EwReorderTasks+0x158>
9001a3b4:	68c7      	ldr	r7, [r0, #12]
9001a3b6:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a3ba:	3701      	adds	r7, #1
9001a3bc:	bf08      	it	eq
9001a3be:	f105 0340 	addeq.w	r3, r5, #64	; 0x40
9001a3c2:	6925      	ldr	r5, [r4, #16]
9001a3c4:	6bad      	ldr	r5, [r5, #56]	; 0x38
9001a3c6:	8c2d      	ldrh	r5, [r5, #32]
9001a3c8:	fb15 330c 	smlabb	r3, r5, ip, r3
9001a3cc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a3d0:	f8d3 3484 	ldr.w	r3, [r3, #1156]	; 0x484
9001a3d4:	e760      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a3d6:	68c7      	ldr	r7, [r0, #12]
9001a3d8:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a3dc:	3701      	adds	r7, #1
9001a3de:	bf08      	it	eq
9001a3e0:	f105 0340 	addeq.w	r3, r5, #64	; 0x40
9001a3e4:	6925      	ldr	r5, [r4, #16]
9001a3e6:	6bad      	ldr	r5, [r5, #56]	; 0x38
9001a3e8:	8c2d      	ldrh	r5, [r5, #32]
9001a3ea:	fb15 330c 	smlabb	r3, r5, ip, r3
9001a3ee:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a3f2:	f8d3 3288 	ldr.w	r3, [r3, #648]	; 0x288
9001a3f6:	e74f      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a3f8:	68c7      	ldr	r7, [r0, #12]
9001a3fa:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a3fe:	3701      	adds	r7, #1
9001a400:	bf08      	it	eq
9001a402:	f105 0340 	addeq.w	r3, r5, #64	; 0x40
9001a406:	6925      	ldr	r5, [r4, #16]
9001a408:	6bad      	ldr	r5, [r5, #56]	; 0x38
9001a40a:	8c2d      	ldrh	r5, [r5, #32]
9001a40c:	fb15 330c 	smlabb	r3, r5, ip, r3
9001a410:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a414:	f8d3 3680 	ldr.w	r3, [r3, #1664]	; 0x680
9001a418:	e73e      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a41a:	68c7      	ldr	r7, [r0, #12]
9001a41c:	f9b7 7020 	ldrsh.w	r7, [r7, #32]
9001a420:	3701      	adds	r7, #1
9001a422:	bf08      	it	eq
9001a424:	f105 0320 	addeq.w	r3, r5, #32
9001a428:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9001a42c:	f8d3 3884 	ldr.w	r3, [r3, #2180]	; 0x884
9001a430:	e732      	b.n	9001a298 <EwReorderTasks+0x5c>
9001a432:	2300      	movs	r3, #0
9001a434:	e76d      	b.n	9001a312 <EwReorderTasks+0xd6>
9001a436:	6019      	str	r1, [r3, #0]
9001a438:	680c      	ldr	r4, [r1, #0]
9001a43a:	600a      	str	r2, [r1, #0]
9001a43c:	461a      	mov	r2, r3
9001a43e:	4621      	mov	r1, r4
9001a440:	2900      	cmp	r1, #0
9001a442:	f47f af70 	bne.w	9001a326 <EwReorderTasks+0xea>
9001a446:	6102      	str	r2, [r0, #16]
9001a448:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a44c:	680b      	ldr	r3, [r1, #0]
9001a44e:	600a      	str	r2, [r1, #0]
9001a450:	460a      	mov	r2, r1
9001a452:	4619      	mov	r1, r3
9001a454:	e7f4      	b.n	9001a440 <EwReorderTasks+0x204>
9001a456:	bf00      	nop
9001a458:	900320a8 	.word	0x900320a8
9001a45c:	ffff8000 	.word	0xffff8000

9001a460 <EwReverseTasks>:
9001a460:	6903      	ldr	r3, [r0, #16]
9001a462:	2200      	movs	r2, #0
9001a464:	b90b      	cbnz	r3, 9001a46a <EwReverseTasks+0xa>
9001a466:	6102      	str	r2, [r0, #16]
9001a468:	4770      	bx	lr
9001a46a:	6819      	ldr	r1, [r3, #0]
9001a46c:	601a      	str	r2, [r3, #0]
9001a46e:	461a      	mov	r2, r3
9001a470:	460b      	mov	r3, r1
9001a472:	e7f7      	b.n	9001a464 <EwReverseTasks+0x4>

9001a474 <EwEliminateTasks>:
9001a474:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a478:	2500      	movs	r5, #0
9001a47a:	4681      	mov	r9, r0
9001a47c:	6904      	ldr	r4, [r0, #16]
9001a47e:	462e      	mov	r6, r5
9001a480:	46a8      	mov	r8, r5
9001a482:	462f      	mov	r7, r5
9001a484:	46aa      	mov	sl, r5
9001a486:	46ae      	mov	lr, r5
9001a488:	b90c      	cbnz	r4, 9001a48e <EwEliminateTasks+0x1a>
9001a48a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a48e:	f1ba 0f00 	cmp.w	sl, #0
9001a492:	d11f      	bne.n	9001a4d4 <EwEliminateTasks+0x60>
9001a494:	88e3      	ldrh	r3, [r4, #6]
9001a496:	f023 03fe 	bic.w	r3, r3, #254	; 0xfe
9001a49a:	05db      	lsls	r3, r3, #23
9001a49c:	0ddb      	lsrs	r3, r3, #23
9001a49e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9001a4a2:	d114      	bne.n	9001a4ce <EwEliminateTasks+0x5a>
9001a4a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9001a4a8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
9001a4ac:	1ad1      	subs	r1, r2, r3
9001a4ae:	290f      	cmp	r1, #15
9001a4b0:	dd0d      	ble.n	9001a4ce <EwEliminateTasks+0x5a>
9001a4b2:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
9001a4b6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001a4ba:	eba0 0c01 	sub.w	ip, r0, r1
9001a4be:	f1bc 0f0f 	cmp.w	ip, #15
9001a4c2:	dd04      	ble.n	9001a4ce <EwEliminateTasks+0x5a>
9001a4c4:	4605      	mov	r5, r0
9001a4c6:	460e      	mov	r6, r1
9001a4c8:	4690      	mov	r8, r2
9001a4ca:	461f      	mov	r7, r3
9001a4cc:	46a2      	mov	sl, r4
9001a4ce:	46a6      	mov	lr, r4
9001a4d0:	6824      	ldr	r4, [r4, #0]
9001a4d2:	e7d9      	b.n	9001a488 <EwEliminateTasks+0x14>
9001a4d4:	f9b4 0008 	ldrsh.w	r0, [r4, #8]
9001a4d8:	4540      	cmp	r0, r8
9001a4da:	da0b      	bge.n	9001a4f4 <EwEliminateTasks+0x80>
9001a4dc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
9001a4e0:	42aa      	cmp	r2, r5
9001a4e2:	da07      	bge.n	9001a4f4 <EwEliminateTasks+0x80>
9001a4e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9001a4e8:	42bb      	cmp	r3, r7
9001a4ea:	dd03      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a4ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9001a4f0:	42b1      	cmp	r1, r6
9001a4f2:	dc05      	bgt.n	9001a500 <EwEliminateTasks+0x8c>
9001a4f4:	6823      	ldr	r3, [r4, #0]
9001a4f6:	2b00      	cmp	r3, #0
9001a4f8:	d1e9      	bne.n	9001a4ce <EwEliminateTasks+0x5a>
9001a4fa:	4654      	mov	r4, sl
9001a4fc:	469a      	mov	sl, r3
9001a4fe:	e7e6      	b.n	9001a4ce <EwEliminateTasks+0x5a>
9001a500:	42b8      	cmp	r0, r7
9001a502:	bfac      	ite	ge
9001a504:	f04f 0c01 	movge.w	ip, #1
9001a508:	f04f 0c00 	movlt.w	ip, #0
9001a50c:	42b2      	cmp	r2, r6
9001a50e:	bfa8      	it	ge
9001a510:	f04c 0c02 	orrge.w	ip, ip, #2
9001a514:	4543      	cmp	r3, r8
9001a516:	bfd8      	it	le
9001a518:	f04c 0c04 	orrle.w	ip, ip, #4
9001a51c:	42a9      	cmp	r1, r5
9001a51e:	bfd8      	it	le
9001a520:	f04c 0c08 	orrle.w	ip, ip, #8
9001a524:	f10c 3cff 	add.w	ip, ip, #4294967295
9001a528:	f1bc 0f0e 	cmp.w	ip, #14
9001a52c:	d810      	bhi.n	9001a550 <EwEliminateTasks+0xdc>
9001a52e:	e8df f01c 	tbh	[pc, ip, lsl #1]
9001a532:	002a      	.short	0x002a
9001a534:	00580042 	.word	0x00580042
9001a538:	0082006c 	.word	0x0082006c
9001a53c:	00a90095 	.word	0x00a90095
9001a540:	00c400ab 	.word	0x00c400ab
9001a544:	00eb00d8 	.word	0x00eb00d8
9001a548:	010100ee 	.word	0x010100ee
9001a54c:	01050103 	.word	0x01050103
9001a550:	eba8 0307 	sub.w	r3, r8, r7
9001a554:	2b0f      	cmp	r3, #15
9001a556:	ddcd      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a558:	1bab      	subs	r3, r5, r6
9001a55a:	2b0f      	cmp	r3, #15
9001a55c:	ddca      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a55e:	4622      	mov	r2, r4
9001a560:	2103      	movs	r1, #3
9001a562:	4648      	mov	r0, r9
9001a564:	f7fd fa23 	bl	900179ae <EwAllocTasks>
9001a568:	2800      	cmp	r0, #0
9001a56a:	d0c3      	beq.n	9001a4f4 <EwEliminateTasks+0x80>
9001a56c:	6803      	ldr	r3, [r0, #0]
9001a56e:	681a      	ldr	r2, [r3, #0]
9001a570:	81e6      	strh	r6, [r4, #14]
9001a572:	8145      	strh	r5, [r0, #10]
9001a574:	815e      	strh	r6, [r3, #10]
9001a576:	81dd      	strh	r5, [r3, #14]
9001a578:	819f      	strh	r7, [r3, #12]
9001a57a:	8156      	strh	r6, [r2, #10]
9001a57c:	81d5      	strh	r5, [r2, #14]
9001a57e:	f8a2 8008 	strh.w	r8, [r2, #8]
9001a582:	4604      	mov	r4, r0
9001a584:	e7b6      	b.n	9001a4f4 <EwEliminateTasks+0x80>
9001a586:	eba8 0300 	sub.w	r3, r8, r0
9001a58a:	2b0f      	cmp	r3, #15
9001a58c:	ddb2      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a58e:	1bab      	subs	r3, r5, r6
9001a590:	2b0f      	cmp	r3, #15
9001a592:	ddaf      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a594:	4622      	mov	r2, r4
9001a596:	2102      	movs	r1, #2
9001a598:	4648      	mov	r0, r9
9001a59a:	f7fd fa08 	bl	900179ae <EwAllocTasks>
9001a59e:	2800      	cmp	r0, #0
9001a5a0:	d0a8      	beq.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5a2:	6803      	ldr	r3, [r0, #0]
9001a5a4:	f8a4 8008 	strh.w	r8, [r4, #8]
9001a5a8:	f8a0 800c 	strh.w	r8, [r0, #12]
9001a5ac:	81c6      	strh	r6, [r0, #14]
9001a5ae:	f8a3 800c 	strh.w	r8, [r3, #12]
9001a5b2:	815d      	strh	r5, [r3, #10]
9001a5b4:	e7e5      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a5b6:	eba8 0307 	sub.w	r3, r8, r7
9001a5ba:	2b0f      	cmp	r3, #15
9001a5bc:	dd9a      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5be:	1aaa      	subs	r2, r5, r2
9001a5c0:	2a0f      	cmp	r2, #15
9001a5c2:	dd97      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5c4:	4622      	mov	r2, r4
9001a5c6:	2102      	movs	r1, #2
9001a5c8:	4648      	mov	r0, r9
9001a5ca:	f7fd f9f0 	bl	900179ae <EwAllocTasks>
9001a5ce:	2800      	cmp	r0, #0
9001a5d0:	d090      	beq.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5d2:	6803      	ldr	r3, [r0, #0]
9001a5d4:	8165      	strh	r5, [r4, #10]
9001a5d6:	8187      	strh	r7, [r0, #12]
9001a5d8:	81c5      	strh	r5, [r0, #14]
9001a5da:	f8a3 8008 	strh.w	r8, [r3, #8]
9001a5de:	81dd      	strh	r5, [r3, #14]
9001a5e0:	e7cf      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a5e2:	eba8 0300 	sub.w	r3, r8, r0
9001a5e6:	2b0f      	cmp	r3, #15
9001a5e8:	dd84      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5ea:	1aaa      	subs	r2, r5, r2
9001a5ec:	2a0f      	cmp	r2, #15
9001a5ee:	dd81      	ble.n	9001a4f4 <EwEliminateTasks+0x80>
9001a5f0:	4622      	mov	r2, r4
9001a5f2:	2101      	movs	r1, #1
9001a5f4:	4648      	mov	r0, r9
9001a5f6:	f7fd f9da 	bl	900179ae <EwAllocTasks>
9001a5fa:	2800      	cmp	r0, #0
9001a5fc:	f43f af7a 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a600:	8165      	strh	r5, [r4, #10]
9001a602:	81c5      	strh	r5, [r0, #14]
9001a604:	f8a0 8008 	strh.w	r8, [r0, #8]
9001a608:	e7bb      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a60a:	1bdb      	subs	r3, r3, r7
9001a60c:	2b0f      	cmp	r3, #15
9001a60e:	f77f af71 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a612:	1bab      	subs	r3, r5, r6
9001a614:	2b0f      	cmp	r3, #15
9001a616:	f77f af6d 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a61a:	4622      	mov	r2, r4
9001a61c:	2102      	movs	r1, #2
9001a61e:	4648      	mov	r0, r9
9001a620:	f7fd f9c5 	bl	900179ae <EwAllocTasks>
9001a624:	2800      	cmp	r0, #0
9001a626:	f43f af65 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a62a:	6803      	ldr	r3, [r0, #0]
9001a62c:	81a7      	strh	r7, [r4, #12]
9001a62e:	8107      	strh	r7, [r0, #8]
9001a630:	81c6      	strh	r6, [r0, #14]
9001a632:	811f      	strh	r7, [r3, #8]
9001a634:	e7bd      	b.n	9001a5b2 <EwEliminateTasks+0x13e>
9001a636:	1a1b      	subs	r3, r3, r0
9001a638:	2b0f      	cmp	r3, #15
9001a63a:	f77f af5b 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a63e:	1bab      	subs	r3, r5, r6
9001a640:	2b0f      	cmp	r3, #15
9001a642:	f77f af57 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a646:	4622      	mov	r2, r4
9001a648:	2101      	movs	r1, #1
9001a64a:	4648      	mov	r0, r9
9001a64c:	f7fd f9af 	bl	900179ae <EwAllocTasks>
9001a650:	2800      	cmp	r0, #0
9001a652:	f43f af4f 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a656:	81e6      	strh	r6, [r4, #14]
9001a658:	8145      	strh	r5, [r0, #10]
9001a65a:	e792      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a65c:	1bdb      	subs	r3, r3, r7
9001a65e:	2b0f      	cmp	r3, #15
9001a660:	f77f af48 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a664:	1aaa      	subs	r2, r5, r2
9001a666:	2a0f      	cmp	r2, #15
9001a668:	f77f af44 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a66c:	4622      	mov	r2, r4
9001a66e:	2101      	movs	r1, #1
9001a670:	4648      	mov	r0, r9
9001a672:	f7fd f99c 	bl	900179ae <EwAllocTasks>
9001a676:	2800      	cmp	r0, #0
9001a678:	f43f af3c 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a67c:	8165      	strh	r5, [r4, #10]
9001a67e:	81c5      	strh	r5, [r0, #14]
9001a680:	8187      	strh	r7, [r0, #12]
9001a682:	e77e      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a684:	8165      	strh	r5, [r4, #10]
9001a686:	e735      	b.n	9001a4f4 <EwEliminateTasks+0x80>
9001a688:	eba8 0307 	sub.w	r3, r8, r7
9001a68c:	2b0f      	cmp	r3, #15
9001a68e:	f77f af31 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a692:	1b89      	subs	r1, r1, r6
9001a694:	290f      	cmp	r1, #15
9001a696:	f77f af2d 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a69a:	4622      	mov	r2, r4
9001a69c:	2102      	movs	r1, #2
9001a69e:	4648      	mov	r0, r9
9001a6a0:	f7fd f985 	bl	900179ae <EwAllocTasks>
9001a6a4:	2800      	cmp	r0, #0
9001a6a6:	f43f af25 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6aa:	6803      	ldr	r3, [r0, #0]
9001a6ac:	81e6      	strh	r6, [r4, #14]
9001a6ae:	8187      	strh	r7, [r0, #12]
9001a6b0:	8146      	strh	r6, [r0, #10]
9001a6b2:	f8a3 8008 	strh.w	r8, [r3, #8]
9001a6b6:	815e      	strh	r6, [r3, #10]
9001a6b8:	e763      	b.n	9001a582 <EwEliminateTasks+0x10e>
9001a6ba:	eba8 0300 	sub.w	r3, r8, r0
9001a6be:	2b0f      	cmp	r3, #15
9001a6c0:	f77f af18 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6c4:	1b89      	subs	r1, r1, r6
9001a6c6:	290f      	cmp	r1, #15
9001a6c8:	f77f af14 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6cc:	4622      	mov	r2, r4
9001a6ce:	2101      	movs	r1, #1
9001a6d0:	4648      	mov	r0, r9
9001a6d2:	f7fd f96c 	bl	900179ae <EwAllocTasks>
9001a6d6:	2800      	cmp	r0, #0
9001a6d8:	f43f af0c 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6dc:	81e6      	strh	r6, [r4, #14]
9001a6de:	8146      	strh	r6, [r0, #10]
9001a6e0:	e790      	b.n	9001a604 <EwEliminateTasks+0x190>
9001a6e2:	eba8 0307 	sub.w	r3, r8, r7
9001a6e6:	2b0f      	cmp	r3, #15
9001a6e8:	f77f af04 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6ec:	1a8a      	subs	r2, r1, r2
9001a6ee:	2a0f      	cmp	r2, #15
9001a6f0:	f77f af00 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a6f4:	4622      	mov	r2, r4
9001a6f6:	2101      	movs	r1, #1
9001a6f8:	4648      	mov	r0, r9
9001a6fa:	f7fd f958 	bl	900179ae <EwAllocTasks>
9001a6fe:	2800      	cmp	r0, #0
9001a700:	f43f aef8 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a704:	81a7      	strh	r7, [r4, #12]
9001a706:	e77d      	b.n	9001a604 <EwEliminateTasks+0x190>
9001a708:	f8a4 8008 	strh.w	r8, [r4, #8]
9001a70c:	e6f2      	b.n	9001a4f4 <EwEliminateTasks+0x80>
9001a70e:	1bdb      	subs	r3, r3, r7
9001a710:	2b0f      	cmp	r3, #15
9001a712:	f77f aeef 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a716:	1b89      	subs	r1, r1, r6
9001a718:	290f      	cmp	r1, #15
9001a71a:	f77f aeeb 	ble.w	9001a4f4 <EwEliminateTasks+0x80>
9001a71e:	4622      	mov	r2, r4
9001a720:	2101      	movs	r1, #1
9001a722:	4648      	mov	r0, r9
9001a724:	f7fd f943 	bl	900179ae <EwAllocTasks>
9001a728:	2800      	cmp	r0, #0
9001a72a:	f43f aee3 	beq.w	9001a4f4 <EwEliminateTasks+0x80>
9001a72e:	81e6      	strh	r6, [r4, #14]
9001a730:	8146      	strh	r6, [r0, #10]
9001a732:	e7a5      	b.n	9001a680 <EwEliminateTasks+0x20c>
9001a734:	81e6      	strh	r6, [r4, #14]
9001a736:	e6dd      	b.n	9001a4f4 <EwEliminateTasks+0x80>
9001a738:	81a7      	strh	r7, [r4, #12]
9001a73a:	e6db      	b.n	9001a4f4 <EwEliminateTasks+0x80>
9001a73c:	6823      	ldr	r3, [r4, #0]
9001a73e:	4674      	mov	r4, lr
9001a740:	f8ce 3000 	str.w	r3, [lr]
9001a744:	e6d6      	b.n	9001a4f4 <EwEliminateTasks+0x80>

9001a746 <EwExecuteTasks>:
9001a746:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a74a:	f8d0 b010 	ldr.w	fp, [r0, #16]
9001a74e:	ed2d 8b02 	vpush	{d8}
9001a752:	b0e3      	sub	sp, #396	; 0x18c
9001a754:	9016      	str	r0, [sp, #88]	; 0x58
9001a756:	f1bb 0f00 	cmp.w	fp, #0
9001a75a:	d109      	bne.n	9001a770 <EwExecuteTasks+0x2a>
9001a75c:	4658      	mov	r0, fp
9001a75e:	f7ff fbf1 	bl	90019f44 <EwFreeVideo+0x4>
9001a762:	4658      	mov	r0, fp
9001a764:	b063      	add	sp, #396	; 0x18c
9001a766:	ecbd 8b02 	vpop	{d8}
9001a76a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a76e:	e41d      	b.n	90019fac <EwFreeVideo+0x6c>
9001a770:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001a774:	f9bb 2004 	ldrsh.w	r2, [fp, #4]
9001a778:	f003 030f 	and.w	r3, r3, #15
9001a77c:	3a01      	subs	r2, #1
9001a77e:	461d      	mov	r5, r3
9001a780:	2a08      	cmp	r2, #8
9001a782:	d844      	bhi.n	9001a80e <EwExecuteTasks+0xc8>
9001a784:	e8df f012 	tbh	[pc, r2, lsl #1]
9001a788:	01640097 	.word	0x01640097
9001a78c:	09b4025a 	.word	0x09b4025a
9001a790:	09ee09d5 	.word	0x09ee09d5
9001a794:	04430009 	.word	0x04430009
9001a798:	0a06      	.short	0x0a06
9001a79a:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001a79c:	f8db 4010 	ldr.w	r4, [fp, #16]
9001a7a0:	68d6      	ldr	r6, [r2, #12]
9001a7a2:	f9b6 2020 	ldrsh.w	r2, [r6, #32]
9001a7a6:	3201      	adds	r2, #1
9001a7a8:	bf08      	it	eq
9001a7aa:	f103 0508 	addeq.w	r5, r3, #8
9001a7ae:	4ba6      	ldr	r3, [pc, #664]	; (9001aa48 <EwExecuteTasks+0x302>)
9001a7b0:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
9001a7b4:	2f00      	cmp	r7, #0
9001a7b6:	d036      	beq.n	9001a826 <EwExecuteTasks+0xe0>
9001a7b8:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001a7bc:	2000      	movs	r0, #0
9001a7be:	f9bb 500c 	ldrsh.w	r5, [fp, #12]
9001a7c2:	f9bb 800e 	ldrsh.w	r8, [fp, #14]
9001a7c6:	1aed      	subs	r5, r5, r3
9001a7c8:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001a7cc:	eba8 0803 	sub.w	r8, r8, r3
9001a7d0:	f7ff fbb8 	bl	90019f44 <EwFreeVideo+0x4>
9001a7d4:	2000      	movs	r0, #0
9001a7d6:	f7ff fbe9 	bl	90019fac <EwFreeVideo+0x6c>
9001a7da:	4620      	mov	r0, r4
9001a7dc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a7e0:	f930 1b08 	ldrsh.w	r1, [r0], #8
9001a7e4:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a7e8:	9006      	str	r0, [sp, #24]
9001a7ea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001a7ee:	9503      	str	r5, [sp, #12]
9001a7f0:	f000 0001 	and.w	r0, r0, #1
9001a7f4:	e9cd 8004 	strd	r8, r0, [sp, #16]
9001a7f8:	f9bb 000a 	ldrsh.w	r0, [fp, #10]
9001a7fc:	9002      	str	r0, [sp, #8]
9001a7fe:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
9001a802:	9001      	str	r0, [sp, #4]
9001a804:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9001a808:	9000      	str	r0, [sp, #0]
9001a80a:	6bb0      	ldr	r0, [r6, #56]	; 0x38
9001a80c:	47b8      	blx	r7
9001a80e:	4a8f      	ldr	r2, [pc, #572]	; (9001aa4c <EwExecuteTasks+0x306>)
9001a810:	6e94      	ldr	r4, [r2, #104]	; 0x68
9001a812:	b12c      	cbz	r4, 9001a820 <EwExecuteTasks+0xda>
9001a814:	9816      	ldr	r0, [sp, #88]	; 0x58
9001a816:	4659      	mov	r1, fp
9001a818:	e9d2 321b 	ldrd	r3, r2, [r2, #108]	; 0x6c
9001a81c:	68c0      	ldr	r0, [r0, #12]
9001a81e:	47a0      	blx	r4
9001a820:	f8db b000 	ldr.w	fp, [fp]
9001a824:	e797      	b.n	9001a756 <EwExecuteTasks+0x10>
9001a826:	4630      	mov	r0, r6
9001a828:	f7ff fb8c 	bl	90019f44 <EwFreeVideo+0x4>
9001a82c:	4606      	mov	r6, r0
9001a82e:	2800      	cmp	r0, #0
9001a830:	d0ed      	beq.n	9001a80e <EwExecuteTasks+0xc8>
9001a832:	f9b4 7000 	ldrsh.w	r7, [r4]
9001a836:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001a83a:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9001a83e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a842:	1bc9      	subs	r1, r1, r7
9001a844:	68a2      	ldr	r2, [r4, #8]
9001a846:	af4c      	add	r7, sp, #304	; 0x130
9001a848:	1a1b      	subs	r3, r3, r0
9001a84a:	2900      	cmp	r1, #0
9001a84c:	bfb8      	it	lt
9001a84e:	4249      	neglt	r1, r1
9001a850:	2b00      	cmp	r3, #0
9001a852:	bfb8      	it	lt
9001a854:	425b      	neglt	r3, r3
9001a856:	3101      	adds	r1, #1
9001a858:	3301      	adds	r3, #1
9001a85a:	e9cd 2236 	strd	r2, r2, [sp, #216]	; 0xd8
9001a85e:	4299      	cmp	r1, r3
9001a860:	68e2      	ldr	r2, [r4, #12]
9001a862:	bfb8      	it	lt
9001a864:	4619      	movlt	r1, r3
9001a866:	9239      	str	r2, [sp, #228]	; 0xe4
9001a868:	68e2      	ldr	r2, [r4, #12]
9001a86a:	463b      	mov	r3, r7
9001a86c:	4608      	mov	r0, r1
9001a86e:	9238      	str	r2, [sp, #224]	; 0xe0
9001a870:	aa36      	add	r2, sp, #216	; 0xd8
9001a872:	f7fd ffa3 	bl	900187bc <EwInitColorGradient>
9001a876:	4874      	ldr	r0, [pc, #464]	; (9001aa48 <EwExecuteTasks+0x302>)
9001a878:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a87c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
9001a880:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001a884:	f9b4 1000 	ldrsh.w	r1, [r4]
9001a888:	f8d5 0950 	ldr.w	r0, [r5, #2384]	; 0x950
9001a88c:	e9cd 7005 	strd	r7, r0, [sp, #20]
9001a890:	f9bb 000e 	ldrsh.w	r0, [fp, #14]
9001a894:	9004      	str	r0, [sp, #16]
9001a896:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
9001a89a:	9003      	str	r0, [sp, #12]
9001a89c:	f9bb 000a 	ldrsh.w	r0, [fp, #10]
9001a8a0:	9002      	str	r0, [sp, #8]
9001a8a2:	f9bb 0008 	ldrsh.w	r0, [fp, #8]
9001a8a6:	9001      	str	r0, [sp, #4]
9001a8a8:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9001a8ac:	9000      	str	r0, [sp, #0]
9001a8ae:	4630      	mov	r0, r6
9001a8b0:	f7fe f99a 	bl	90018be8 <EwEmulateLine>
9001a8b4:	e7ab      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001a8b6:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001a8b8:	f9bb 700c 	ldrsh.w	r7, [fp, #12]
9001a8bc:	f8d2 a00c 	ldr.w	sl, [r2, #12]
9001a8c0:	f8db 4010 	ldr.w	r4, [fp, #16]
9001a8c4:	f9ba 2020 	ldrsh.w	r2, [sl, #32]
9001a8c8:	3201      	adds	r2, #1
9001a8ca:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001a8ce:	bf08      	it	eq
9001a8d0:	f103 0508 	addeq.w	r5, r3, #8
9001a8d4:	4b5c      	ldr	r3, [pc, #368]	; (9001aa48 <EwExecuteTasks+0x302>)
9001a8d6:	eb03 0385 	add.w	r3, r3, r5, lsl #2
9001a8da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001a8dc:	9314      	str	r3, [sp, #80]	; 0x50
9001a8de:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001a8e2:	1afb      	subs	r3, r7, r3
9001a8e4:	ee08 3a10 	vmov	s16, r3
9001a8e8:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001a8ec:	1ad3      	subs	r3, r2, r3
9001a8ee:	9315      	str	r3, [sp, #84]	; 0x54
9001a8f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001a8f2:	2b00      	cmp	r3, #0
9001a8f4:	d064      	beq.n	9001a9c0 <EwExecuteTasks+0x27a>
9001a8f6:	2000      	movs	r0, #0
9001a8f8:	f104 0708 	add.w	r7, r4, #8
9001a8fc:	f7ff fb22 	bl	90019f44 <EwFreeVideo+0x4>
9001a900:	2000      	movs	r0, #0
9001a902:	f7ff fb53 	bl	90019fac <EwFreeVideo+0x6c>
9001a906:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001a90a:	075d      	lsls	r5, r3, #29
9001a90c:	d545      	bpl.n	9001a99a <EwExecuteTasks+0x254>
9001a90e:	f9bb 5008 	ldrsh.w	r5, [fp, #8]
9001a912:	f9b4 0000 	ldrsh.w	r0, [r4]
9001a916:	f9bb 600a 	ldrsh.w	r6, [fp, #10]
9001a91a:	4285      	cmp	r5, r0
9001a91c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001a920:	dc0d      	bgt.n	9001a93e <EwExecuteTasks+0x1f8>
9001a922:	428e      	cmp	r6, r1
9001a924:	dc0b      	bgt.n	9001a93e <EwExecuteTasks+0x1f8>
9001a926:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001a92a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001a92e:	429a      	cmp	r2, r3
9001a930:	db05      	blt.n	9001a93e <EwExecuteTasks+0x1f8>
9001a932:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001a936:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001a93a:	429a      	cmp	r2, r3
9001a93c:	da2d      	bge.n	9001a99a <EwExecuteTasks+0x254>
9001a93e:	f9b4 c006 	ldrsh.w	ip, [r4, #6]
9001a942:	1a2d      	subs	r5, r5, r0
9001a944:	f9bb 900c 	ldrsh.w	r9, [fp, #12]
9001a948:	1a76      	subs	r6, r6, r1
9001a94a:	f9bb 800e 	ldrsh.w	r8, [fp, #14]
9001a94e:	ab4c      	add	r3, sp, #304	; 0x130
9001a950:	f9b4 4004 	ldrsh.w	r4, [r4, #4]
9001a954:	eba9 0900 	sub.w	r9, r9, r0
9001a958:	eba8 0801 	sub.w	r8, r8, r1
9001a95c:	463a      	mov	r2, r7
9001a95e:	ebac 0101 	sub.w	r1, ip, r1
9001a962:	1a20      	subs	r0, r4, r0
9001a964:	f7fd ff2a 	bl	900187bc <EwInitColorGradient>
9001a968:	4632      	mov	r2, r6
9001a96a:	4629      	mov	r1, r5
9001a96c:	a84c      	add	r0, sp, #304	; 0x130
9001a96e:	f7fe f811 	bl	90018994 <EwGetColorFromGradient>
9001a972:	4632      	mov	r2, r6
9001a974:	4649      	mov	r1, r9
9001a976:	9036      	str	r0, [sp, #216]	; 0xd8
9001a978:	a84c      	add	r0, sp, #304	; 0x130
9001a97a:	af36      	add	r7, sp, #216	; 0xd8
9001a97c:	f7fe f80a 	bl	90018994 <EwGetColorFromGradient>
9001a980:	4642      	mov	r2, r8
9001a982:	4649      	mov	r1, r9
9001a984:	9037      	str	r0, [sp, #220]	; 0xdc
9001a986:	a84c      	add	r0, sp, #304	; 0x130
9001a988:	f7fe f804 	bl	90018994 <EwGetColorFromGradient>
9001a98c:	4642      	mov	r2, r8
9001a98e:	9038      	str	r0, [sp, #224]	; 0xe0
9001a990:	4629      	mov	r1, r5
9001a992:	a84c      	add	r0, sp, #304	; 0x130
9001a994:	f7fd fffe 	bl	90018994 <EwGetColorFromGradient>
9001a998:	9039      	str	r0, [sp, #228]	; 0xe4
9001a99a:	f9bb 200a 	ldrsh.w	r2, [fp, #10]
9001a99e:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
9001a9a2:	9702      	str	r7, [sp, #8]
9001a9a4:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001a9a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001a9aa:	f003 0301 	and.w	r3, r3, #1
9001a9ae:	9301      	str	r3, [sp, #4]
9001a9b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001a9b2:	9300      	str	r3, [sp, #0]
9001a9b4:	ee18 3a10 	vmov	r3, s16
9001a9b8:	f8da 0038 	ldr.w	r0, [sl, #56]	; 0x38
9001a9bc:	47a0      	blx	r4
9001a9be:	e726      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001a9c0:	4650      	mov	r0, sl
9001a9c2:	f7ff fabf 	bl	90019f44 <EwFreeVideo+0x4>
9001a9c6:	4606      	mov	r6, r0
9001a9c8:	2800      	cmp	r0, #0
9001a9ca:	f43f af20 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001a9ce:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001a9d2:	f003 0306 	and.w	r3, r3, #6
9001a9d6:	2b06      	cmp	r3, #6
9001a9d8:	d108      	bne.n	9001a9ec <EwExecuteTasks+0x2a6>
9001a9da:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
9001a9de:	429a      	cmp	r2, r3
9001a9e0:	d104      	bne.n	9001a9ec <EwExecuteTasks+0x2a6>
9001a9e2:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
9001a9e6:	429a      	cmp	r2, r3
9001a9e8:	bf08      	it	eq
9001a9ea:	3d04      	subeq	r5, #4
9001a9ec:	f50d 7898 	add.w	r8, sp, #304	; 0x130
9001a9f0:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001a9f4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001a9f8:	f104 0208 	add.w	r2, r4, #8
9001a9fc:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001aa00:	4643      	mov	r3, r8
9001aa02:	f9b4 0000 	ldrsh.w	r0, [r4]
9001aa06:	ebae 0101 	sub.w	r1, lr, r1
9001aa0a:	ebac 0000 	sub.w	r0, ip, r0
9001aa0e:	f7fd fed5 	bl	900187bc <EwInitColorGradient>
9001aa12:	4b0d      	ldr	r3, [pc, #52]	; (9001aa48 <EwExecuteTasks+0x302>)
9001aa14:	f9bb 1008 	ldrsh.w	r1, [fp, #8]
9001aa18:	4630      	mov	r0, r6
9001aa1a:	eb03 0585 	add.w	r5, r3, r5, lsl #2
9001aa1e:	f9bb 200a 	ldrsh.w	r2, [fp, #10]
9001aa22:	f8d5 398c 	ldr.w	r3, [r5, #2444]	; 0x98c
9001aa26:	9304      	str	r3, [sp, #16]
9001aa28:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001aa2c:	1ad3      	subs	r3, r2, r3
9001aa2e:	9303      	str	r3, [sp, #12]
9001aa30:	f9b4 3000 	ldrsh.w	r3, [r4]
9001aa34:	1acb      	subs	r3, r1, r3
9001aa36:	e9cd 8301 	strd	r8, r3, [sp, #4]
9001aa3a:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001aa3c:	9300      	str	r3, [sp, #0]
9001aa3e:	ee18 3a10 	vmov	r3, s16
9001aa42:	f7fe f93f 	bl	90018cc4 <EwEmulateFill>
9001aa46:	e6e2      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001aa48:	900320a8 	.word	0x900320a8
9001aa4c:	2000022c 	.word	0x2000022c
9001aa50:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001aa52:	f8db 4010 	ldr.w	r4, [fp, #16]
9001aa56:	f8d2 900c 	ldr.w	r9, [r2, #12]
9001aa5a:	f9b9 2020 	ldrsh.w	r2, [r9, #32]
9001aa5e:	3201      	adds	r2, #1
9001aa60:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001aa64:	bf08      	it	eq
9001aa66:	f103 0520 	addeq.w	r5, r3, #32
9001aa6a:	68e3      	ldr	r3, [r4, #12]
9001aa6c:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001aa70:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
9001aa74:	4b70      	ldr	r3, [pc, #448]	; (9001ac38 <EwExecuteTasks+0x4f2>)
9001aa76:	eb03 0385 	add.w	r3, r3, r5, lsl #2
9001aa7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001aa7e:	9314      	str	r3, [sp, #80]	; 0x50
9001aa80:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001aa84:	1ad3      	subs	r3, r2, r3
9001aa86:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001aa8a:	9315      	str	r3, [sp, #84]	; 0x54
9001aa8c:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001aa90:	1ad3      	subs	r3, r2, r3
9001aa92:	9317      	str	r3, [sp, #92]	; 0x5c
9001aa94:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001aa96:	2b00      	cmp	r3, #0
9001aa98:	d076      	beq.n	9001ab88 <EwExecuteTasks+0x442>
9001aa9a:	2000      	movs	r0, #0
9001aa9c:	f104 0a10 	add.w	sl, r4, #16
9001aaa0:	f7ff fa50 	bl	90019f44 <EwFreeVideo+0x4>
9001aaa4:	2000      	movs	r0, #0
9001aaa6:	f7ff fa81 	bl	90019fac <EwFreeVideo+0x6c>
9001aaaa:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001aaae:	0758      	lsls	r0, r3, #29
9001aab0:	d546      	bpl.n	9001ab40 <EwExecuteTasks+0x3fa>
9001aab2:	f9bb 5008 	ldrsh.w	r5, [fp, #8]
9001aab6:	f9b4 0000 	ldrsh.w	r0, [r4]
9001aaba:	f9bb 600a 	ldrsh.w	r6, [fp, #10]
9001aabe:	4285      	cmp	r5, r0
9001aac0:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001aac4:	dc0d      	bgt.n	9001aae2 <EwExecuteTasks+0x39c>
9001aac6:	428e      	cmp	r6, r1
9001aac8:	dc0b      	bgt.n	9001aae2 <EwExecuteTasks+0x39c>
9001aaca:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001aace:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001aad2:	429a      	cmp	r2, r3
9001aad4:	db05      	blt.n	9001aae2 <EwExecuteTasks+0x39c>
9001aad6:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001aada:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001aade:	429a      	cmp	r2, r3
9001aae0:	da2e      	bge.n	9001ab40 <EwExecuteTasks+0x3fa>
9001aae2:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001aae6:	1a2d      	subs	r5, r5, r0
9001aae8:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001aaec:	1a76      	subs	r6, r6, r1
9001aaee:	f9bb 800c 	ldrsh.w	r8, [fp, #12]
9001aaf2:	ab4c      	add	r3, sp, #304	; 0x130
9001aaf4:	f9bb 700e 	ldrsh.w	r7, [fp, #14]
9001aaf8:	4652      	mov	r2, sl
9001aafa:	eba8 0800 	sub.w	r8, r8, r0
9001aafe:	ebac 0000 	sub.w	r0, ip, r0
9001ab02:	1a7f      	subs	r7, r7, r1
9001ab04:	ebae 0101 	sub.w	r1, lr, r1
9001ab08:	f7fd fe58 	bl	900187bc <EwInitColorGradient>
9001ab0c:	4632      	mov	r2, r6
9001ab0e:	4629      	mov	r1, r5
9001ab10:	a84c      	add	r0, sp, #304	; 0x130
9001ab12:	f7fd ff3f 	bl	90018994 <EwGetColorFromGradient>
9001ab16:	4632      	mov	r2, r6
9001ab18:	4641      	mov	r1, r8
9001ab1a:	9036      	str	r0, [sp, #216]	; 0xd8
9001ab1c:	a84c      	add	r0, sp, #304	; 0x130
9001ab1e:	f10d 0ad8 	add.w	sl, sp, #216	; 0xd8
9001ab22:	f7fd ff37 	bl	90018994 <EwGetColorFromGradient>
9001ab26:	463a      	mov	r2, r7
9001ab28:	4641      	mov	r1, r8
9001ab2a:	9037      	str	r0, [sp, #220]	; 0xdc
9001ab2c:	a84c      	add	r0, sp, #304	; 0x130
9001ab2e:	f7fd ff31 	bl	90018994 <EwGetColorFromGradient>
9001ab32:	463a      	mov	r2, r7
9001ab34:	9038      	str	r0, [sp, #224]	; 0xe0
9001ab36:	4629      	mov	r1, r5
9001ab38:	a84c      	add	r0, sp, #304	; 0x130
9001ab3a:	f7fd ff2b 	bl	90018994 <EwGetColorFromGradient>
9001ab3e:	9039      	str	r0, [sp, #228]	; 0xe4
9001ab40:	68e0      	ldr	r0, [r4, #12]
9001ab42:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001ab46:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001ab4a:	f8cd a014 	str.w	sl, [sp, #20]
9001ab4e:	f8bb 1006 	ldrh.w	r1, [fp, #6]
9001ab52:	f001 0101 	and.w	r1, r1, #1
9001ab56:	9104      	str	r1, [sp, #16]
9001ab58:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001ab5a:	9103      	str	r1, [sp, #12]
9001ab5c:	9915      	ldr	r1, [sp, #84]	; 0x54
9001ab5e:	9102      	str	r1, [sp, #8]
9001ab60:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001ab64:	f9b4 5002 	ldrsh.w	r5, [r4, #2]
9001ab68:	4419      	add	r1, r3
9001ab6a:	1b49      	subs	r1, r1, r5
9001ab6c:	9101      	str	r1, [sp, #4]
9001ab6e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001ab72:	f9b4 4000 	ldrsh.w	r4, [r4]
9001ab76:	4411      	add	r1, r2
9001ab78:	1b09      	subs	r1, r1, r4
9001ab7a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001ab7c:	9100      	str	r1, [sp, #0]
9001ab7e:	6b81      	ldr	r1, [r0, #56]	; 0x38
9001ab80:	f8d9 0038 	ldr.w	r0, [r9, #56]	; 0x38
9001ab84:	47a0      	blx	r4
9001ab86:	e642      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001ab88:	4648      	mov	r0, r9
9001ab8a:	f7ff f9db 	bl	90019f44 <EwFreeVideo+0x4>
9001ab8e:	4606      	mov	r6, r0
9001ab90:	68e0      	ldr	r0, [r4, #12]
9001ab92:	f7ff fa0b 	bl	90019fac <EwFreeVideo+0x6c>
9001ab96:	4607      	mov	r7, r0
9001ab98:	2e00      	cmp	r6, #0
9001ab9a:	f43f ae38 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001ab9e:	2800      	cmp	r0, #0
9001aba0:	f43f ae35 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001aba4:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001aba8:	f003 0306 	and.w	r3, r3, #6
9001abac:	2b06      	cmp	r3, #6
9001abae:	d108      	bne.n	9001abc2 <EwExecuteTasks+0x47c>
9001abb0:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
9001abb4:	429a      	cmp	r2, r3
9001abb6:	d104      	bne.n	9001abc2 <EwExecuteTasks+0x47c>
9001abb8:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
9001abbc:	429a      	cmp	r2, r3
9001abbe:	bf08      	it	eq
9001abc0:	3d04      	subeq	r5, #4
9001abc2:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001abc6:	f50d 7898 	add.w	r8, sp, #304	; 0x130
9001abca:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001abce:	f104 0210 	add.w	r2, r4, #16
9001abd2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001abd6:	4643      	mov	r3, r8
9001abd8:	f9b4 0000 	ldrsh.w	r0, [r4]
9001abdc:	ebae 0101 	sub.w	r1, lr, r1
9001abe0:	ebac 0000 	sub.w	r0, ip, r0
9001abe4:	f7fd fdea 	bl	900187bc <EwInitColorGradient>
9001abe8:	4913      	ldr	r1, [pc, #76]	; (9001ac38 <EwExecuteTasks+0x4f2>)
9001abea:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001abee:	eb01 0585 	add.w	r5, r1, r5, lsl #2
9001abf2:	f9b4 c002 	ldrsh.w	ip, [r4, #2]
9001abf6:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001abfa:	f8d5 19d0 	ldr.w	r1, [r5, #2512]	; 0x9d0
9001abfe:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ac02:	9107      	str	r1, [sp, #28]
9001ac04:	eba3 010c 	sub.w	r1, r3, ip
9001ac08:	9106      	str	r1, [sp, #24]
9001ac0a:	1a11      	subs	r1, r2, r0
9001ac0c:	e9cd 8104 	strd	r8, r1, [sp, #16]
9001ac10:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001ac14:	4419      	add	r1, r3
9001ac16:	eba1 010c 	sub.w	r1, r1, ip
9001ac1a:	9103      	str	r1, [sp, #12]
9001ac1c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001ac20:	4411      	add	r1, r2
9001ac22:	1a08      	subs	r0, r1, r0
9001ac24:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001ac26:	9101      	str	r1, [sp, #4]
9001ac28:	9915      	ldr	r1, [sp, #84]	; 0x54
9001ac2a:	9002      	str	r0, [sp, #8]
9001ac2c:	4630      	mov	r0, r6
9001ac2e:	9100      	str	r1, [sp, #0]
9001ac30:	4639      	mov	r1, r7
9001ac32:	f7fe f918 	bl	90018e66 <EwEmulateCopy>
9001ac36:	e5ea      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001ac38:	900320a8 	.word	0x900320a8
9001ac3c:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001ac3e:	f8db 4010 	ldr.w	r4, [fp, #16]
9001ac42:	68d2      	ldr	r2, [r2, #12]
9001ac44:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
9001ac48:	9217      	str	r2, [sp, #92]	; 0x5c
9001ac4a:	f9b2 2020 	ldrsh.w	r2, [r2, #32]
9001ac4e:	f9bb 600a 	ldrsh.w	r6, [fp, #10]
9001ac52:	3201      	adds	r2, #1
9001ac54:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001ac58:	bf08      	it	eq
9001ac5a:	f103 0520 	addeq.w	r5, r3, #32
9001ac5e:	6963      	ldr	r3, [r4, #20]
9001ac60:	1a8a      	subs	r2, r1, r2
9001ac62:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9001ac66:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001ac6a:	9214      	str	r2, [sp, #80]	; 0x50
9001ac6c:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
9001ac70:	4ba3      	ldr	r3, [pc, #652]	; (9001af00 <EwExecuteTasks+0x7ba>)
9001ac72:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
9001ac76:	eb03 0385 	add.w	r3, r3, r5, lsl #2
9001ac7a:	1a8a      	subs	r2, r1, r2
9001ac7c:	f8d3 7184 	ldr.w	r7, [r3, #388]	; 0x184
9001ac80:	9215      	str	r2, [sp, #84]	; 0x54
9001ac82:	2f00      	cmp	r7, #0
9001ac84:	f000 809a 	beq.w	9001adbc <EwExecuteTasks+0x676>
9001ac88:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001ac8c:	2000      	movs	r0, #0
9001ac8e:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001ac92:	f104 0a18 	add.w	sl, r4, #24
9001ac96:	1ad3      	subs	r3, r2, r3
9001ac98:	9318      	str	r3, [sp, #96]	; 0x60
9001ac9a:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001ac9e:	1b9b      	subs	r3, r3, r6
9001aca0:	9319      	str	r3, [sp, #100]	; 0x64
9001aca2:	f7ff f94f 	bl	90019f44 <EwFreeVideo+0x4>
9001aca6:	2000      	movs	r0, #0
9001aca8:	f7ff f980 	bl	90019fac <EwFreeVideo+0x6c>
9001acac:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001acb0:	0759      	lsls	r1, r3, #29
9001acb2:	d54b      	bpl.n	9001ad4c <EwExecuteTasks+0x606>
9001acb4:	f9bb 5008 	ldrsh.w	r5, [fp, #8]
9001acb8:	f9b4 0000 	ldrsh.w	r0, [r4]
9001acbc:	4285      	cmp	r5, r0
9001acbe:	dc11      	bgt.n	9001ace4 <EwExecuteTasks+0x59e>
9001acc0:	f9bb 200a 	ldrsh.w	r2, [fp, #10]
9001acc4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001acc8:	429a      	cmp	r2, r3
9001acca:	dc0b      	bgt.n	9001ace4 <EwExecuteTasks+0x59e>
9001accc:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001acd0:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001acd4:	429a      	cmp	r2, r3
9001acd6:	db05      	blt.n	9001ace4 <EwExecuteTasks+0x59e>
9001acd8:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001acdc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001ace0:	429a      	cmp	r2, r3
9001ace2:	da33      	bge.n	9001ad4c <EwExecuteTasks+0x606>
9001ace4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001ace8:	1a2d      	subs	r5, r5, r0
9001acea:	f9bb 900a 	ldrsh.w	r9, [fp, #10]
9001acee:	ab4c      	add	r3, sp, #304	; 0x130
9001acf0:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001acf4:	4652      	mov	r2, sl
9001acf6:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001acfa:	eba9 0901 	sub.w	r9, r9, r1
9001acfe:	f9bb 800c 	ldrsh.w	r8, [fp, #12]
9001ad02:	f10d 0ad8 	add.w	sl, sp, #216	; 0xd8
9001ad06:	f9bb 600e 	ldrsh.w	r6, [fp, #14]
9001ad0a:	eba8 0800 	sub.w	r8, r8, r0
9001ad0e:	ebac 0000 	sub.w	r0, ip, r0
9001ad12:	1a76      	subs	r6, r6, r1
9001ad14:	ebae 0101 	sub.w	r1, lr, r1
9001ad18:	f7fd fd50 	bl	900187bc <EwInitColorGradient>
9001ad1c:	464a      	mov	r2, r9
9001ad1e:	4629      	mov	r1, r5
9001ad20:	a84c      	add	r0, sp, #304	; 0x130
9001ad22:	f7fd fe37 	bl	90018994 <EwGetColorFromGradient>
9001ad26:	464a      	mov	r2, r9
9001ad28:	4641      	mov	r1, r8
9001ad2a:	9036      	str	r0, [sp, #216]	; 0xd8
9001ad2c:	a84c      	add	r0, sp, #304	; 0x130
9001ad2e:	f7fd fe31 	bl	90018994 <EwGetColorFromGradient>
9001ad32:	4632      	mov	r2, r6
9001ad34:	4641      	mov	r1, r8
9001ad36:	9037      	str	r0, [sp, #220]	; 0xdc
9001ad38:	a84c      	add	r0, sp, #304	; 0x130
9001ad3a:	f7fd fe2b 	bl	90018994 <EwGetColorFromGradient>
9001ad3e:	4632      	mov	r2, r6
9001ad40:	9038      	str	r0, [sp, #224]	; 0xe0
9001ad42:	4629      	mov	r1, r5
9001ad44:	a84c      	add	r0, sp, #304	; 0x130
9001ad46:	f7fd fe25 	bl	90018994 <EwGetColorFromGradient>
9001ad4a:	9039      	str	r0, [sp, #228]	; 0xe4
9001ad4c:	6960      	ldr	r0, [r4, #20]
9001ad4e:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001ad52:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001ad56:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
9001ad5a:	f8bb 1006 	ldrh.w	r1, [fp, #6]
9001ad5e:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001ad60:	f001 0101 	and.w	r1, r1, #1
9001ad64:	9108      	str	r1, [sp, #32]
9001ad66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001ad6a:	f9b4 5012 	ldrsh.w	r5, [r4, #18]
9001ad6e:	1a59      	subs	r1, r3, r1
9001ad70:	4429      	add	r1, r5
9001ad72:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001ad74:	fb91 f5f5 	sdiv	r5, r1, r5
9001ad78:	fb06 1115 	mls	r1, r6, r5, r1
9001ad7c:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001ad7e:	9107      	str	r1, [sp, #28]
9001ad80:	f9b4 1000 	ldrsh.w	r1, [r4]
9001ad84:	f9b4 5010 	ldrsh.w	r5, [r4, #16]
9001ad88:	1a51      	subs	r1, r2, r1
9001ad8a:	9604      	str	r6, [sp, #16]
9001ad8c:	4429      	add	r1, r5
9001ad8e:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001ad90:	fb91 f5f5 	sdiv	r5, r1, r5
9001ad94:	fb06 1115 	mls	r1, r6, r5, r1
9001ad98:	9106      	str	r1, [sp, #24]
9001ad9a:	9915      	ldr	r1, [sp, #84]	; 0x54
9001ad9c:	9105      	str	r1, [sp, #20]
9001ad9e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001ada2:	9103      	str	r1, [sp, #12]
9001ada4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001ada8:	9102      	str	r1, [sp, #8]
9001adaa:	9919      	ldr	r1, [sp, #100]	; 0x64
9001adac:	9101      	str	r1, [sp, #4]
9001adae:	9918      	ldr	r1, [sp, #96]	; 0x60
9001adb0:	9100      	str	r1, [sp, #0]
9001adb2:	6b81      	ldr	r1, [r0, #56]	; 0x38
9001adb4:	9817      	ldr	r0, [sp, #92]	; 0x5c
9001adb6:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001adb8:	47b8      	blx	r7
9001adba:	e528      	b.n	9001a80e <EwExecuteTasks+0xc8>
9001adbc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001adc0:	9319      	str	r3, [sp, #100]	; 0x64
9001adc2:	2b00      	cmp	r3, #0
9001adc4:	f000 809e 	beq.w	9001af04 <EwExecuteTasks+0x7be>
9001adc8:	4638      	mov	r0, r7
9001adca:	f7ff f8bb 	bl	90019f44 <EwFreeVideo+0x4>
9001adce:	4638      	mov	r0, r7
9001add0:	f7ff f8ec 	bl	90019fac <EwFreeVideo+0x6c>
9001add4:	69a3      	ldr	r3, [r4, #24]
9001add6:	9336      	str	r3, [sp, #216]	; 0xd8
9001add8:	69e3      	ldr	r3, [r4, #28]
9001adda:	9337      	str	r3, [sp, #220]	; 0xdc
9001addc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001adde:	9339      	str	r3, [sp, #228]	; 0xe4
9001ade0:	6a23      	ldr	r3, [r4, #32]
9001ade2:	9338      	str	r3, [sp, #224]	; 0xe0
9001ade4:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001ade8:	075a      	lsls	r2, r3, #29
9001adea:	d50d      	bpl.n	9001ae08 <EwExecuteTasks+0x6c2>
9001adec:	f9b4 7006 	ldrsh.w	r7, [r4, #6]
9001adf0:	ab4c      	add	r3, sp, #304	; 0x130
9001adf2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001adf6:	aa36      	add	r2, sp, #216	; 0xd8
9001adf8:	f9b4 5004 	ldrsh.w	r5, [r4, #4]
9001adfc:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ae00:	1a79      	subs	r1, r7, r1
9001ae02:	1a28      	subs	r0, r5, r0
9001ae04:	f7fd fcda 	bl	900187bc <EwInitColorGradient>
9001ae08:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001ae0c:	4296      	cmp	r6, r2
9001ae0e:	f6bf acfe 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001ae12:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001ae16:	1b92      	subs	r2, r2, r6
9001ae18:	f9b4 1012 	ldrsh.w	r1, [r4, #18]
9001ae1c:	1af3      	subs	r3, r6, r3
9001ae1e:	9815      	ldr	r0, [sp, #84]	; 0x54
9001ae20:	f9bb 8008 	ldrsh.w	r8, [fp, #8]
9001ae24:	440b      	add	r3, r1
9001ae26:	9915      	ldr	r1, [sp, #84]	; 0x54
9001ae28:	fb93 f1f1 	sdiv	r1, r3, r1
9001ae2c:	fb00 3311 	mls	r3, r0, r1, r3
9001ae30:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001ae34:	440b      	add	r3, r1
9001ae36:	931a      	str	r3, [sp, #104]	; 0x68
9001ae38:	991a      	ldr	r1, [sp, #104]	; 0x68
9001ae3a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9001ae3e:	1a5b      	subs	r3, r3, r1
9001ae40:	4293      	cmp	r3, r2
9001ae42:	bfa8      	it	ge
9001ae44:	4613      	movge	r3, r2
9001ae46:	9318      	str	r3, [sp, #96]	; 0x60
9001ae48:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
9001ae4c:	4598      	cmp	r8, r3
9001ae4e:	db02      	blt.n	9001ae56 <EwExecuteTasks+0x710>
9001ae50:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001ae52:	441e      	add	r6, r3
9001ae54:	e7d8      	b.n	9001ae08 <EwExecuteTasks+0x6c2>
9001ae56:	f9b4 9000 	ldrsh.w	r9, [r4]
9001ae5a:	eba3 0308 	sub.w	r3, r3, r8
9001ae5e:	f9b4 5010 	ldrsh.w	r5, [r4, #16]
9001ae62:	eba8 0909 	sub.w	r9, r8, r9
9001ae66:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001ae68:	9914      	ldr	r1, [sp, #80]	; 0x50
9001ae6a:	444d      	add	r5, r9
9001ae6c:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
9001ae70:	fb95 f2f2 	sdiv	r2, r5, r2
9001ae74:	fb01 5512 	mls	r5, r1, r2, r5
9001ae78:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
9001ae7c:	18aa      	adds	r2, r5, r2
9001ae7e:	1abf      	subs	r7, r7, r2
9001ae80:	921b      	str	r2, [sp, #108]	; 0x6c
9001ae82:	429f      	cmp	r7, r3
9001ae84:	bfa8      	it	ge
9001ae86:	461f      	movge	r7, r3
9001ae88:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001ae8c:	075b      	lsls	r3, r3, #29
9001ae8e:	d51f      	bpl.n	9001aed0 <EwExecuteTasks+0x78a>
9001ae90:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001ae94:	eb09 0507 	add.w	r5, r9, r7
9001ae98:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001ae9a:	4649      	mov	r1, r9
9001ae9c:	1ab2      	subs	r2, r6, r2
9001ae9e:	a84c      	add	r0, sp, #304	; 0x130
9001aea0:	eb03 0a02 	add.w	sl, r3, r2
9001aea4:	921c      	str	r2, [sp, #112]	; 0x70
9001aea6:	f7fd fd75 	bl	90018994 <EwGetColorFromGradient>
9001aeaa:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001aeac:	4629      	mov	r1, r5
9001aeae:	9036      	str	r0, [sp, #216]	; 0xd8
9001aeb0:	a84c      	add	r0, sp, #304	; 0x130
9001aeb2:	f7fd fd6f 	bl	90018994 <EwGetColorFromGradient>
9001aeb6:	4652      	mov	r2, sl
9001aeb8:	4629      	mov	r1, r5
9001aeba:	9037      	str	r0, [sp, #220]	; 0xdc
9001aebc:	a84c      	add	r0, sp, #304	; 0x130
9001aebe:	f7fd fd69 	bl	90018994 <EwGetColorFromGradient>
9001aec2:	4652      	mov	r2, sl
9001aec4:	9038      	str	r0, [sp, #224]	; 0xe0
9001aec6:	4649      	mov	r1, r9
9001aec8:	a84c      	add	r0, sp, #304	; 0x130
9001aeca:	f7fd fd63 	bl	90018994 <EwGetColorFromGradient>
9001aece:	9039      	str	r0, [sp, #228]	; 0xe4
9001aed0:	ab36      	add	r3, sp, #216	; 0xd8
9001aed2:	6961      	ldr	r1, [r4, #20]
9001aed4:	9817      	ldr	r0, [sp, #92]	; 0x5c
9001aed6:	4642      	mov	r2, r8
9001aed8:	9305      	str	r3, [sp, #20]
9001aeda:	44b8      	add	r8, r7
9001aedc:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001aee0:	9d19      	ldr	r5, [sp, #100]	; 0x64
9001aee2:	f003 0301 	and.w	r3, r3, #1
9001aee6:	9304      	str	r3, [sp, #16]
9001aee8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001aeea:	e9cd 7302 	strd	r7, r3, [sp, #8]
9001aeee:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001aef0:	9301      	str	r3, [sp, #4]
9001aef2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001aef4:	9300      	str	r3, [sp, #0]
9001aef6:	4633      	mov	r3, r6
9001aef8:	6b89      	ldr	r1, [r1, #56]	; 0x38
9001aefa:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001aefc:	47a8      	blx	r5
9001aefe:	e7a3      	b.n	9001ae48 <EwExecuteTasks+0x702>
9001af00:	900320a8 	.word	0x900320a8
9001af04:	9817      	ldr	r0, [sp, #92]	; 0x5c
9001af06:	f7ff f81d 	bl	90019f44 <EwFreeVideo+0x4>
9001af0a:	4681      	mov	r9, r0
9001af0c:	6960      	ldr	r0, [r4, #20]
9001af0e:	f7ff f84d 	bl	90019fac <EwFreeVideo+0x6c>
9001af12:	4682      	mov	sl, r0
9001af14:	f1b9 0f00 	cmp.w	r9, #0
9001af18:	f43f ac79 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001af1c:	2800      	cmp	r0, #0
9001af1e:	f43f ac76 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001af22:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001af26:	f003 0306 	and.w	r3, r3, #6
9001af2a:	2b06      	cmp	r3, #6
9001af2c:	d108      	bne.n	9001af40 <EwExecuteTasks+0x7fa>
9001af2e:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
9001af32:	429a      	cmp	r2, r3
9001af34:	d104      	bne.n	9001af40 <EwExecuteTasks+0x7fa>
9001af36:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
9001af3a:	429a      	cmp	r2, r3
9001af3c:	bf08      	it	eq
9001af3e:	3d04      	subeq	r5, #4
9001af40:	f9b4 c006 	ldrsh.w	ip, [r4, #6]
9001af44:	ab4c      	add	r3, sp, #304	; 0x130
9001af46:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001af4a:	f104 0218 	add.w	r2, r4, #24
9001af4e:	f9b4 7004 	ldrsh.w	r7, [r4, #4]
9001af52:	f9b4 0000 	ldrsh.w	r0, [r4]
9001af56:	ebac 0101 	sub.w	r1, ip, r1
9001af5a:	1a38      	subs	r0, r7, r0
9001af5c:	f7fd fc2e 	bl	900187bc <EwInitColorGradient>
9001af60:	4b72      	ldr	r3, [pc, #456]	; (9001b12c <EwExecuteTasks+0x9e6>)
9001af62:	eb03 0385 	add.w	r3, r3, r5, lsl #2
9001af66:	9317      	str	r3, [sp, #92]	; 0x5c
9001af68:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001af6c:	429e      	cmp	r6, r3
9001af6e:	f6bf ac4e 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001af72:	f9b4 5002 	ldrsh.w	r5, [r4, #2]
9001af76:	1b9b      	subs	r3, r3, r6
9001af78:	f9b4 1012 	ldrsh.w	r1, [r4, #18]
9001af7c:	1b75      	subs	r5, r6, r5
9001af7e:	9815      	ldr	r0, [sp, #84]	; 0x54
9001af80:	f9b4 700e 	ldrsh.w	r7, [r4, #14]
9001af84:	440d      	add	r5, r1
9001af86:	9915      	ldr	r1, [sp, #84]	; 0x54
9001af88:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001af8c:	fb95 f1f1 	sdiv	r1, r5, r1
9001af90:	fb00 5511 	mls	r5, r0, r1, r5
9001af94:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
9001af98:	440d      	add	r5, r1
9001af9a:	1b7f      	subs	r7, r7, r5
9001af9c:	429f      	cmp	r7, r3
9001af9e:	bfa8      	it	ge
9001afa0:	461f      	movge	r7, r3
9001afa2:	f9bb 100c 	ldrsh.w	r1, [fp, #12]
9001afa6:	428a      	cmp	r2, r1
9001afa8:	db01      	blt.n	9001afae <EwExecuteTasks+0x868>
9001afaa:	443e      	add	r6, r7
9001afac:	e7dc      	b.n	9001af68 <EwExecuteTasks+0x822>
9001afae:	f9b4 0000 	ldrsh.w	r0, [r4]
9001afb2:	1a89      	subs	r1, r1, r2
9001afb4:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9001afb8:	1a10      	subs	r0, r2, r0
9001afba:	f9b4 800c 	ldrsh.w	r8, [r4, #12]
9001afbe:	9218      	str	r2, [sp, #96]	; 0x60
9001afc0:	eb03 0e00 	add.w	lr, r3, r0
9001afc4:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001afc6:	fb9e fcf3 	sdiv	ip, lr, r3
9001afca:	fb03 e31c 	mls	r3, r3, ip, lr
9001afce:	f9b4 c008 	ldrsh.w	ip, [r4, #8]
9001afd2:	4463      	add	r3, ip
9001afd4:	eba8 0803 	sub.w	r8, r8, r3
9001afd8:	4588      	cmp	r8, r1
9001afda:	bfa8      	it	ge
9001afdc:	4688      	movge	r8, r1
9001afde:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001afe0:	f8d1 19d0 	ldr.w	r1, [r1, #2512]	; 0x9d0
9001afe4:	9107      	str	r1, [sp, #28]
9001afe6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001afea:	f8cd 8000 	str.w	r8, [sp]
9001afee:	1a71      	subs	r1, r6, r1
9001aff0:	e9cd 0105 	strd	r0, r1, [sp, #20]
9001aff4:	a94c      	add	r1, sp, #304	; 0x130
9001aff6:	4648      	mov	r0, r9
9001aff8:	e9cd 5103 	strd	r5, r1, [sp, #12]
9001affc:	e9cd 7301 	strd	r7, r3, [sp, #4]
9001b000:	4651      	mov	r1, sl
9001b002:	4633      	mov	r3, r6
9001b004:	f7fd ff2f 	bl	90018e66 <EwEmulateCopy>
9001b008:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b00a:	4442      	add	r2, r8
9001b00c:	e7c9      	b.n	9001afa2 <EwExecuteTasks+0x85c>
9001b00e:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001b010:	f8db 4010 	ldr.w	r4, [fp, #16]
9001b014:	68d2      	ldr	r2, [r2, #12]
9001b016:	921a      	str	r2, [sp, #104]	; 0x68
9001b018:	f9b4 2016 	ldrsh.w	r2, [r4, #22]
9001b01c:	9215      	str	r2, [sp, #84]	; 0x54
9001b01e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001b020:	f9b2 2020 	ldrsh.w	r2, [r2, #32]
9001b024:	3201      	adds	r2, #1
9001b026:	d104      	bne.n	9001b032 <EwExecuteTasks+0x8ec>
9001b028:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b02a:	2a00      	cmp	r2, #0
9001b02c:	d07a      	beq.n	9001b124 <EwExecuteTasks+0x9de>
9001b02e:	f103 0540 	add.w	r5, r3, #64	; 0x40
9001b032:	f104 0a28 	add.w	sl, r4, #40	; 0x28
9001b036:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001b03a:	f9b4 9000 	ldrsh.w	r9, [r4]
9001b03e:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
9001b042:	f9b4 8002 	ldrsh.w	r8, [r4, #2]
9001b046:	9319      	str	r3, [sp, #100]	; 0x64
9001b048:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
9001b04c:	9314      	str	r3, [sp, #80]	; 0x50
9001b04e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001b052:	9328      	str	r3, [sp, #160]	; 0xa0
9001b054:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001b056:	2b00      	cmp	r3, #0
9001b058:	f040 81d2 	bne.w	9001b400 <EwExecuteTasks+0xcba>
9001b05c:	f105 0610 	add.w	r6, r5, #16
9001b060:	4b32      	ldr	r3, [pc, #200]	; (9001b12c <EwExecuteTasks+0x9e6>)
9001b062:	eb03 0386 	add.w	r3, r3, r6, lsl #2
9001b066:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
9001b06a:	931e      	str	r3, [sp, #120]	; 0x78
9001b06c:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
9001b070:	9317      	str	r3, [sp, #92]	; 0x5c
9001b072:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001b076:	9318      	str	r3, [sp, #96]	; 0x60
9001b078:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001b07c:	9320      	str	r3, [sp, #128]	; 0x80
9001b07e:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001b082:	9321      	str	r3, [sp, #132]	; 0x84
9001b084:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001b086:	4499      	add	r9, r3
9001b088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b08a:	4443      	add	r3, r8
9001b08c:	9322      	str	r3, [sp, #136]	; 0x88
9001b08e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001b090:	2b00      	cmp	r3, #0
9001b092:	f000 80f1 	beq.w	9001b278 <EwExecuteTasks+0xb32>
9001b096:	6923      	ldr	r3, [r4, #16]
9001b098:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b09a:	9314      	str	r3, [sp, #80]	; 0x50
9001b09c:	f7fe ff52 	bl	90019f44 <EwFreeVideo+0x4>
9001b0a0:	9815      	ldr	r0, [sp, #84]	; 0x54
9001b0a2:	f7fe ff83 	bl	90019fac <EwFreeVideo+0x6c>
9001b0a6:	69a3      	ldr	r3, [r4, #24]
9001b0a8:	9336      	str	r3, [sp, #216]	; 0xd8
9001b0aa:	69e3      	ldr	r3, [r4, #28]
9001b0ac:	9337      	str	r3, [sp, #220]	; 0xdc
9001b0ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001b0b0:	9339      	str	r3, [sp, #228]	; 0xe4
9001b0b2:	6a23      	ldr	r3, [r4, #32]
9001b0b4:	9338      	str	r3, [sp, #224]	; 0xe0
9001b0b6:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001b0ba:	075d      	lsls	r5, r3, #29
9001b0bc:	d50d      	bpl.n	9001b0da <EwExecuteTasks+0x994>
9001b0be:	f9b4 6006 	ldrsh.w	r6, [r4, #6]
9001b0c2:	ab4c      	add	r3, sp, #304	; 0x130
9001b0c4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001b0c8:	aa36      	add	r2, sp, #216	; 0xd8
9001b0ca:	f9b4 5004 	ldrsh.w	r5, [r4, #4]
9001b0ce:	f9b4 0000 	ldrsh.w	r0, [r4]
9001b0d2:	1a71      	subs	r1, r6, r1
9001b0d4:	1a28      	subs	r0, r5, r0
9001b0d6:	f7fd fb71 	bl	900187bc <EwInitColorGradient>
9001b0da:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b0dc:	459a      	cmp	sl, r3
9001b0de:	f4bf ab96 	bcs.w	9001a80e <EwExecuteTasks+0xc8>
9001b0e2:	e9da 1200 	ldrd	r1, r2, [sl]
9001b0e6:	f9b2 0020 	ldrsh.w	r0, [r2, #32]
9001b0ea:	eb01 0309 	add.w	r3, r1, r9
9001b0ee:	4403      	add	r3, r0
9001b0f0:	f9b2 001c 	ldrsh.w	r0, [r2, #28]
9001b0f4:	4403      	add	r3, r0
9001b0f6:	9818      	ldr	r0, [sp, #96]	; 0x60
9001b0f8:	4283      	cmp	r3, r0
9001b0fa:	dc19      	bgt.n	9001b130 <EwExecuteTasks+0x9ea>
9001b0fc:	f9b2 3024 	ldrsh.w	r3, [r2, #36]	; 0x24
9001b100:	440b      	add	r3, r1
9001b102:	4499      	add	r9, r3
9001b104:	68e3      	ldr	r3, [r4, #12]
9001b106:	b153      	cbz	r3, 9001b11e <EwExecuteTasks+0x9d8>
9001b108:	6992      	ldr	r2, [r2, #24]
9001b10a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b10e:	2a20      	cmp	r2, #32
9001b110:	d105      	bne.n	9001b11e <EwExecuteTasks+0x9d8>
9001b112:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b114:	4413      	add	r3, r2
9001b116:	eb09 4923 	add.w	r9, r9, r3, asr #16
9001b11a:	b29b      	uxth	r3, r3
9001b11c:	9314      	str	r3, [sp, #80]	; 0x50
9001b11e:	f10a 0a08 	add.w	sl, sl, #8
9001b122:	e7da      	b.n	9001b0da <EwExecuteTasks+0x994>
9001b124:	f103 0520 	add.w	r5, r3, #32
9001b128:	e783      	b.n	9001b032 <EwExecuteTasks+0x8ec>
9001b12a:	bf00      	nop
9001b12c:	900320a8 	.word	0x900320a8
9001b130:	f8da 3000 	ldr.w	r3, [sl]
9001b134:	f8da 6004 	ldr.w	r6, [sl, #4]
9001b138:	eb03 0209 	add.w	r2, r3, r9
9001b13c:	931f      	str	r3, [sp, #124]	; 0x7c
9001b13e:	f9b6 3020 	ldrsh.w	r3, [r6, #32]
9001b142:	18d3      	adds	r3, r2, r3
9001b144:	9315      	str	r3, [sp, #84]	; 0x54
9001b146:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b148:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b14a:	4293      	cmp	r3, r2
9001b14c:	bfb8      	it	lt
9001b14e:	4613      	movlt	r3, r2
9001b150:	461f      	mov	r7, r3
9001b152:	f9b6 301c 	ldrsh.w	r3, [r6, #28]
9001b156:	4413      	add	r3, r2
9001b158:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001b15a:	4293      	cmp	r3, r2
9001b15c:	bfa8      	it	ge
9001b15e:	4613      	movge	r3, r2
9001b160:	4297      	cmp	r7, r2
9001b162:	931c      	str	r3, [sp, #112]	; 0x70
9001b164:	f6bf ab53 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001b168:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b16a:	429f      	cmp	r7, r3
9001b16c:	da6a      	bge.n	9001b244 <EwExecuteTasks+0xafe>
9001b16e:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001b170:	f9b6 3022 	ldrsh.w	r3, [r6, #34]	; 0x22
9001b174:	f9b6 501e 	ldrsh.w	r5, [r6, #30]
9001b178:	4413      	add	r3, r2
9001b17a:	931b      	str	r3, [sp, #108]	; 0x6c
9001b17c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
9001b17e:	9b21      	ldr	r3, [sp, #132]	; 0x84
9001b180:	4415      	add	r5, r2
9001b182:	4293      	cmp	r3, r2
9001b184:	bfb8      	it	lt
9001b186:	4613      	movlt	r3, r2
9001b188:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001b18a:	4295      	cmp	r5, r2
9001b18c:	4698      	mov	r8, r3
9001b18e:	462b      	mov	r3, r5
9001b190:	bfa8      	it	ge
9001b192:	4613      	movge	r3, r2
9001b194:	4598      	cmp	r8, r3
9001b196:	931d      	str	r3, [sp, #116]	; 0x74
9001b198:	da54      	bge.n	9001b244 <EwExecuteTasks+0xafe>
9001b19a:	f9b6 3026 	ldrsh.w	r3, [r6, #38]	; 0x26
9001b19e:	f8bb 2006 	ldrh.w	r2, [fp, #6]
9001b1a2:	9323      	str	r3, [sp, #140]	; 0x8c
9001b1a4:	0750      	lsls	r0, r2, #29
9001b1a6:	f9b6 3028 	ldrsh.w	r3, [r6, #40]	; 0x28
9001b1aa:	9324      	str	r3, [sp, #144]	; 0x90
9001b1ac:	d528      	bpl.n	9001b200 <EwExecuteTasks+0xaba>
9001b1ae:	f9b4 1000 	ldrsh.w	r1, [r4]
9001b1b2:	9d1c      	ldr	r5, [sp, #112]	; 0x70
9001b1b4:	1a7b      	subs	r3, r7, r1
9001b1b6:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
9001b1ba:	1a69      	subs	r1, r5, r1
9001b1bc:	eba8 0200 	sub.w	r2, r8, r0
9001b1c0:	9325      	str	r3, [sp, #148]	; 0x94
9001b1c2:	ee08 1a10 	vmov	s16, r1
9001b1c6:	991d      	ldr	r1, [sp, #116]	; 0x74
9001b1c8:	9226      	str	r2, [sp, #152]	; 0x98
9001b1ca:	1a0d      	subs	r5, r1, r0
9001b1cc:	4619      	mov	r1, r3
9001b1ce:	a84c      	add	r0, sp, #304	; 0x130
9001b1d0:	f7fd fbe0 	bl	90018994 <EwGetColorFromGradient>
9001b1d4:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001b1d6:	ee18 1a10 	vmov	r1, s16
9001b1da:	9036      	str	r0, [sp, #216]	; 0xd8
9001b1dc:	a84c      	add	r0, sp, #304	; 0x130
9001b1de:	f7fd fbd9 	bl	90018994 <EwGetColorFromGradient>
9001b1e2:	462a      	mov	r2, r5
9001b1e4:	ee18 1a10 	vmov	r1, s16
9001b1e8:	9037      	str	r0, [sp, #220]	; 0xdc
9001b1ea:	a84c      	add	r0, sp, #304	; 0x130
9001b1ec:	f7fd fbd2 	bl	90018994 <EwGetColorFromGradient>
9001b1f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001b1f2:	9038      	str	r0, [sp, #224]	; 0xe0
9001b1f4:	462a      	mov	r2, r5
9001b1f6:	4619      	mov	r1, r3
9001b1f8:	a84c      	add	r0, sp, #304	; 0x130
9001b1fa:	f7fd fbcb 	bl	90018994 <EwGetColorFromGradient>
9001b1fe:	9039      	str	r0, [sp, #228]	; 0xe4
9001b200:	4b9e      	ldr	r3, [pc, #632]	; (9001b47c <EwExecuteTasks+0xd36>)
9001b202:	981a      	ldr	r0, [sp, #104]	; 0x68
9001b204:	6819      	ldr	r1, [r3, #0]
9001b206:	ab36      	add	r3, sp, #216	; 0xd8
9001b208:	9305      	str	r3, [sp, #20]
9001b20a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001b20c:	f8bb 2006 	ldrh.w	r2, [fp, #6]
9001b210:	eba3 0508 	sub.w	r5, r3, r8
9001b214:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b216:	f002 0201 	and.w	r2, r2, #1
9001b21a:	9503      	str	r5, [sp, #12]
9001b21c:	9204      	str	r2, [sp, #16]
9001b21e:	1bda      	subs	r2, r3, r7
9001b220:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001b222:	9202      	str	r2, [sp, #8]
9001b224:	4443      	add	r3, r8
9001b226:	9d1e      	ldr	r5, [sp, #120]	; 0x78
9001b228:	461a      	mov	r2, r3
9001b22a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001b22c:	1ad3      	subs	r3, r2, r3
9001b22e:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b230:	9301      	str	r3, [sp, #4]
9001b232:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9001b234:	443b      	add	r3, r7
9001b236:	1a9b      	subs	r3, r3, r2
9001b238:	463a      	mov	r2, r7
9001b23a:	9300      	str	r3, [sp, #0]
9001b23c:	4643      	mov	r3, r8
9001b23e:	6b89      	ldr	r1, [r1, #56]	; 0x38
9001b240:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001b242:	47a8      	blx	r5
9001b244:	f9b6 3024 	ldrsh.w	r3, [r6, #36]	; 0x24
9001b248:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9001b24a:	4413      	add	r3, r2
9001b24c:	4499      	add	r9, r3
9001b24e:	68e3      	ldr	r3, [r4, #12]
9001b250:	b153      	cbz	r3, 9001b268 <EwExecuteTasks+0xb22>
9001b252:	69b2      	ldr	r2, [r6, #24]
9001b254:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b258:	2a20      	cmp	r2, #32
9001b25a:	d105      	bne.n	9001b268 <EwExecuteTasks+0xb22>
9001b25c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b25e:	4413      	add	r3, r2
9001b260:	eb09 4923 	add.w	r9, r9, r3, asr #16
9001b264:	b29b      	uxth	r3, r3
9001b266:	9314      	str	r3, [sp, #80]	; 0x50
9001b268:	f10a 0a08 	add.w	sl, sl, #8
9001b26c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b26e:	459a      	cmp	sl, r3
9001b270:	f4ff af5e 	bcc.w	9001b130 <EwExecuteTasks+0x9ea>
9001b274:	f7ff bacb 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001b278:	981a      	ldr	r0, [sp, #104]	; 0x68
9001b27a:	f7fe fe63 	bl	90019f44 <EwFreeVideo+0x4>
9001b27e:	4b7f      	ldr	r3, [pc, #508]	; (9001b47c <EwExecuteTasks+0xd36>)
9001b280:	9014      	str	r0, [sp, #80]	; 0x50
9001b282:	6818      	ldr	r0, [r3, #0]
9001b284:	f7fe fe92 	bl	90019fac <EwFreeVideo+0x6c>
9001b288:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001b28a:	9015      	str	r0, [sp, #84]	; 0x54
9001b28c:	2b00      	cmp	r3, #0
9001b28e:	f43f aabe 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001b292:	2800      	cmp	r0, #0
9001b294:	f43f aabb 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001b298:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001b29c:	f003 0306 	and.w	r3, r3, #6
9001b2a0:	2b06      	cmp	r3, #6
9001b2a2:	d109      	bne.n	9001b2b8 <EwExecuteTasks+0xb72>
9001b2a4:	e9d4 2306 	ldrd	r2, r3, [r4, #24]
9001b2a8:	429a      	cmp	r2, r3
9001b2aa:	d105      	bne.n	9001b2b8 <EwExecuteTasks+0xb72>
9001b2ac:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
9001b2b0:	429a      	cmp	r2, r3
9001b2b2:	bf08      	it	eq
9001b2b4:	f105 060c 	addeq.w	r6, r5, #12
9001b2b8:	f9b4 c006 	ldrsh.w	ip, [r4, #6]
9001b2bc:	ab4c      	add	r3, sp, #304	; 0x130
9001b2be:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001b2c2:	f104 0218 	add.w	r2, r4, #24
9001b2c6:	f9b4 5004 	ldrsh.w	r5, [r4, #4]
9001b2ca:	f9b4 0000 	ldrsh.w	r0, [r4]
9001b2ce:	ebac 0101 	sub.w	r1, ip, r1
9001b2d2:	6927      	ldr	r7, [r4, #16]
9001b2d4:	1a28      	subs	r0, r5, r0
9001b2d6:	f7fd fa71 	bl	900187bc <EwInitColorGradient>
9001b2da:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b2dc:	459a      	cmp	sl, r3
9001b2de:	f4bf aa96 	bcs.w	9001a80e <EwExecuteTasks+0xc8>
9001b2e2:	e9da 1200 	ldrd	r1, r2, [sl]
9001b2e6:	f9b2 0020 	ldrsh.w	r0, [r2, #32]
9001b2ea:	eb01 0309 	add.w	r3, r1, r9
9001b2ee:	4403      	add	r3, r0
9001b2f0:	f9b2 001c 	ldrsh.w	r0, [r2, #28]
9001b2f4:	4403      	add	r3, r0
9001b2f6:	9818      	ldr	r0, [sp, #96]	; 0x60
9001b2f8:	4283      	cmp	r3, r0
9001b2fa:	dd6f      	ble.n	9001b3dc <EwExecuteTasks+0xc96>
9001b2fc:	4b60      	ldr	r3, [pc, #384]	; (9001b480 <EwExecuteTasks+0xd3a>)
9001b2fe:	eb03 0386 	add.w	r3, r3, r6, lsl #2
9001b302:	931b      	str	r3, [sp, #108]	; 0x6c
9001b304:	e9da 6500 	ldrd	r6, r5, [sl]
9001b308:	f9b5 3020 	ldrsh.w	r3, [r5, #32]
9001b30c:	eb06 0c09 	add.w	ip, r6, r9
9001b310:	f9b5 101c 	ldrsh.w	r1, [r5, #28]
9001b314:	449c      	add	ip, r3
9001b316:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b318:	4563      	cmp	r3, ip
9001b31a:	4461      	add	r1, ip
9001b31c:	bfb8      	it	lt
9001b31e:	4663      	movlt	r3, ip
9001b320:	461a      	mov	r2, r3
9001b322:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b324:	4299      	cmp	r1, r3
9001b326:	bfa8      	it	ge
9001b328:	4619      	movge	r1, r3
9001b32a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b32c:	429a      	cmp	r2, r3
9001b32e:	911a      	str	r1, [sp, #104]	; 0x68
9001b330:	f6bf aa6d 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001b334:	428a      	cmp	r2, r1
9001b336:	da3b      	bge.n	9001b3b0 <EwExecuteTasks+0xc6a>
9001b338:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001b33a:	f9b5 8022 	ldrsh.w	r8, [r5, #34]	; 0x22
9001b33e:	f9b5 001e 	ldrsh.w	r0, [r5, #30]
9001b342:	4498      	add	r8, r3
9001b344:	9b21      	ldr	r3, [sp, #132]	; 0x84
9001b346:	9920      	ldr	r1, [sp, #128]	; 0x80
9001b348:	4440      	add	r0, r8
9001b34a:	4543      	cmp	r3, r8
9001b34c:	bfb8      	it	lt
9001b34e:	4643      	movlt	r3, r8
9001b350:	4288      	cmp	r0, r1
9001b352:	bfa8      	it	ge
9001b354:	4608      	movge	r0, r1
9001b356:	4283      	cmp	r3, r0
9001b358:	da2a      	bge.n	9001b3b0 <EwExecuteTasks+0xc6a>
9001b35a:	991b      	ldr	r1, [sp, #108]	; 0x6c
9001b35c:	1ac0      	subs	r0, r0, r3
9001b35e:	f8d1 19d0 	ldr.w	r1, [r1, #2512]	; 0x9d0
9001b362:	9107      	str	r1, [sp, #28]
9001b364:	f9b4 e002 	ldrsh.w	lr, [r4, #2]
9001b368:	991a      	ldr	r1, [sp, #104]	; 0x68
9001b36a:	eba3 0e0e 	sub.w	lr, r3, lr
9001b36e:	1a89      	subs	r1, r1, r2
9001b370:	f8cd e018 	str.w	lr, [sp, #24]
9001b374:	f9b4 e000 	ldrsh.w	lr, [r4]
9001b378:	eba2 0e0e 	sub.w	lr, r2, lr
9001b37c:	f8cd e014 	str.w	lr, [sp, #20]
9001b380:	f50d 7e98 	add.w	lr, sp, #304	; 0x130
9001b384:	f8cd e010 	str.w	lr, [sp, #16]
9001b388:	f9b5 e028 	ldrsh.w	lr, [r5, #40]	; 0x28
9001b38c:	449e      	add	lr, r3
9001b38e:	ebae 0e08 	sub.w	lr, lr, r8
9001b392:	f8cd e00c 	str.w	lr, [sp, #12]
9001b396:	f9b5 e026 	ldrsh.w	lr, [r5, #38]	; 0x26
9001b39a:	9001      	str	r0, [sp, #4]
9001b39c:	4496      	add	lr, r2
9001b39e:	9100      	str	r1, [sp, #0]
9001b3a0:	ebae 0c0c 	sub.w	ip, lr, ip
9001b3a4:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
9001b3a8:	f8cd c008 	str.w	ip, [sp, #8]
9001b3ac:	f7fd fd5b 	bl	90018e66 <EwEmulateCopy>
9001b3b0:	f9b5 3024 	ldrsh.w	r3, [r5, #36]	; 0x24
9001b3b4:	441e      	add	r6, r3
9001b3b6:	68e3      	ldr	r3, [r4, #12]
9001b3b8:	44b1      	add	r9, r6
9001b3ba:	b143      	cbz	r3, 9001b3ce <EwExecuteTasks+0xc88>
9001b3bc:	69aa      	ldr	r2, [r5, #24]
9001b3be:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b3c2:	2a20      	cmp	r2, #32
9001b3c4:	bf02      	ittt	eq
9001b3c6:	18ff      	addeq	r7, r7, r3
9001b3c8:	eb09 4927 	addeq.w	r9, r9, r7, asr #16
9001b3cc:	b2bf      	uxtheq	r7, r7
9001b3ce:	f10a 0a08 	add.w	sl, sl, #8
9001b3d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b3d4:	459a      	cmp	sl, r3
9001b3d6:	d395      	bcc.n	9001b304 <EwExecuteTasks+0xbbe>
9001b3d8:	f7ff ba19 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001b3dc:	f9b2 3024 	ldrsh.w	r3, [r2, #36]	; 0x24
9001b3e0:	440b      	add	r3, r1
9001b3e2:	4499      	add	r9, r3
9001b3e4:	68e3      	ldr	r3, [r4, #12]
9001b3e6:	b143      	cbz	r3, 9001b3fa <EwExecuteTasks+0xcb4>
9001b3e8:	6992      	ldr	r2, [r2, #24]
9001b3ea:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b3ee:	2a20      	cmp	r2, #32
9001b3f0:	bf02      	ittt	eq
9001b3f2:	18ff      	addeq	r7, r7, r3
9001b3f4:	eb09 4927 	addeq.w	r9, r9, r7, asr #16
9001b3f8:	b2bf      	uxtheq	r7, r7
9001b3fa:	f10a 0a08 	add.w	sl, sl, #8
9001b3fe:	e76c      	b.n	9001b2da <EwExecuteTasks+0xb94>
9001b400:	f105 0320 	add.w	r3, r5, #32
9001b404:	f9b4 7004 	ldrsh.w	r7, [r4, #4]
9001b408:	f9b4 6006 	ldrsh.w	r6, [r4, #6]
9001b40c:	9317      	str	r3, [sp, #92]	; 0x5c
9001b40e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001b410:	4b1b      	ldr	r3, [pc, #108]	; (9001b480 <EwExecuteTasks+0xd3a>)
9001b412:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001b416:	f8d3 3288 	ldr.w	r3, [r3, #648]	; 0x288
9001b41a:	9325      	str	r3, [sp, #148]	; 0x94
9001b41c:	2b00      	cmp	r3, #0
9001b41e:	f000 81af 	beq.w	9001b780 <EwExecuteTasks+0x103a>
9001b422:	6923      	ldr	r3, [r4, #16]
9001b424:	2000      	movs	r0, #0
9001b426:	931d      	str	r3, [sp, #116]	; 0x74
9001b428:	f7fe fd8c 	bl	90019f44 <EwFreeVideo+0x4>
9001b42c:	2000      	movs	r0, #0
9001b42e:	f7fe fdbd 	bl	90019fac <EwFreeVideo+0x6c>
9001b432:	eba7 0309 	sub.w	r3, r7, r9
9001b436:	931b      	str	r3, [sp, #108]	; 0x6c
9001b438:	eba6 0308 	sub.w	r3, r6, r8
9001b43c:	9318      	str	r3, [sp, #96]	; 0x60
9001b43e:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001b440:	2b5a      	cmp	r3, #90	; 0x5a
9001b442:	d11f      	bne.n	9001b484 <EwExecuteTasks+0xd3e>
9001b444:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001b448:	f9bb 800a 	ldrsh.w	r8, [fp, #10]
9001b44c:	1af3      	subs	r3, r6, r3
9001b44e:	931c      	str	r3, [sp, #112]	; 0x70
9001b450:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001b454:	eba3 0309 	sub.w	r3, r3, r9
9001b458:	9321      	str	r3, [sp, #132]	; 0x84
9001b45a:	eba6 0308 	sub.w	r3, r6, r8
9001b45e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001b462:	931e      	str	r3, [sp, #120]	; 0x78
9001b464:	eba6 0309 	sub.w	r3, r6, r9
9001b468:	9322      	str	r3, [sp, #136]	; 0x88
9001b46a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001b46c:	9336      	str	r3, [sp, #216]	; 0xd8
9001b46e:	69a3      	ldr	r3, [r4, #24]
9001b470:	9337      	str	r3, [sp, #220]	; 0xdc
9001b472:	6a23      	ldr	r3, [r4, #32]
9001b474:	9339      	str	r3, [sp, #228]	; 0xe4
9001b476:	69e3      	ldr	r3, [r4, #28]
9001b478:	9338      	str	r3, [sp, #224]	; 0xe0
9001b47a:	e023      	b.n	9001b4c4 <EwExecuteTasks+0xd7e>
9001b47c:	20000210 	.word	0x20000210
9001b480:	900320a8 	.word	0x900320a8
9001b484:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001b486:	2bb4      	cmp	r3, #180	; 0xb4
9001b488:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
9001b48c:	d149      	bne.n	9001b522 <EwExecuteTasks+0xddc>
9001b48e:	1afb      	subs	r3, r7, r3
9001b490:	f9bb 8008 	ldrsh.w	r8, [fp, #8]
9001b494:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
9001b496:	931c      	str	r3, [sp, #112]	; 0x70
9001b498:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001b49c:	1af3      	subs	r3, r6, r3
9001b49e:	9321      	str	r3, [sp, #132]	; 0x84
9001b4a0:	eba7 0308 	sub.w	r3, r7, r8
9001b4a4:	f9bb 700a 	ldrsh.w	r7, [fp, #10]
9001b4a8:	931e      	str	r3, [sp, #120]	; 0x78
9001b4aa:	1bf3      	subs	r3, r6, r7
9001b4ac:	9322      	str	r3, [sp, #136]	; 0x88
9001b4ae:	6a23      	ldr	r3, [r4, #32]
9001b4b0:	9336      	str	r3, [sp, #216]	; 0xd8
9001b4b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001b4b4:	9337      	str	r3, [sp, #220]	; 0xdc
9001b4b6:	69e3      	ldr	r3, [r4, #28]
9001b4b8:	9339      	str	r3, [sp, #228]	; 0xe4
9001b4ba:	69a3      	ldr	r3, [r4, #24]
9001b4bc:	9338      	str	r3, [sp, #224]	; 0xe0
9001b4be:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b4c0:	9218      	str	r2, [sp, #96]	; 0x60
9001b4c2:	931b      	str	r3, [sp, #108]	; 0x6c
9001b4c4:	ab4c      	add	r3, sp, #304	; 0x130
9001b4c6:	aa36      	add	r2, sp, #216	; 0xd8
9001b4c8:	991b      	ldr	r1, [sp, #108]	; 0x6c
9001b4ca:	9818      	ldr	r0, [sp, #96]	; 0x60
9001b4cc:	f7fd f976 	bl	900187bc <EwInitColorGradient>
9001b4d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b4d2:	459a      	cmp	sl, r3
9001b4d4:	f4bf a99b 	bcs.w	9001a80e <EwExecuteTasks+0xc8>
9001b4d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001b4da:	e9da 1200 	ldrd	r1, r2, [sl]
9001b4de:	f9b2 0020 	ldrsh.w	r0, [r2, #32]
9001b4e2:	18cb      	adds	r3, r1, r3
9001b4e4:	4403      	add	r3, r0
9001b4e6:	f9b2 001c 	ldrsh.w	r0, [r2, #28]
9001b4ea:	4403      	add	r3, r0
9001b4ec:	981c      	ldr	r0, [sp, #112]	; 0x70
9001b4ee:	4283      	cmp	r3, r0
9001b4f0:	f300 80c0 	bgt.w	9001b674 <EwExecuteTasks+0xf2e>
9001b4f4:	f9b2 3024 	ldrsh.w	r3, [r2, #36]	; 0x24
9001b4f8:	440b      	add	r3, r1
9001b4fa:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b4fc:	4419      	add	r1, r3
9001b4fe:	68e3      	ldr	r3, [r4, #12]
9001b500:	9114      	str	r1, [sp, #80]	; 0x50
9001b502:	b15b      	cbz	r3, 9001b51c <EwExecuteTasks+0xdd6>
9001b504:	6992      	ldr	r2, [r2, #24]
9001b506:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b50a:	2a20      	cmp	r2, #32
9001b50c:	d106      	bne.n	9001b51c <EwExecuteTasks+0xdd6>
9001b50e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001b510:	4413      	add	r3, r2
9001b512:	eb01 4223 	add.w	r2, r1, r3, asr #16
9001b516:	b29b      	uxth	r3, r3
9001b518:	9214      	str	r2, [sp, #80]	; 0x50
9001b51a:	931d      	str	r3, [sp, #116]	; 0x74
9001b51c:	f10a 0a08 	add.w	sl, sl, #8
9001b520:	e7d6      	b.n	9001b4d0 <EwExecuteTasks+0xd8a>
9001b522:	1afb      	subs	r3, r7, r3
9001b524:	f9bb 6008 	ldrsh.w	r6, [fp, #8]
9001b528:	f9bb 200a 	ldrsh.w	r2, [fp, #10]
9001b52c:	9321      	str	r3, [sp, #132]	; 0x84
9001b52e:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001b532:	eba2 0208 	sub.w	r2, r2, r8
9001b536:	eba3 0308 	sub.w	r3, r3, r8
9001b53a:	921c      	str	r2, [sp, #112]	; 0x70
9001b53c:	931e      	str	r3, [sp, #120]	; 0x78
9001b53e:	1bbb      	subs	r3, r7, r6
9001b540:	9322      	str	r3, [sp, #136]	; 0x88
9001b542:	69e3      	ldr	r3, [r4, #28]
9001b544:	9336      	str	r3, [sp, #216]	; 0xd8
9001b546:	6a23      	ldr	r3, [r4, #32]
9001b548:	9337      	str	r3, [sp, #220]	; 0xdc
9001b54a:	69a3      	ldr	r3, [r4, #24]
9001b54c:	9339      	str	r3, [sp, #228]	; 0xe4
9001b54e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001b550:	e792      	b.n	9001b478 <EwExecuteTasks+0xd32>
9001b552:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
9001b554:	eba2 0c08 	sub.w	ip, r2, r8
9001b558:	1b55      	subs	r5, r2, r5
9001b55a:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b55c:	2ab4      	cmp	r2, #180	; 0xb4
9001b55e:	f040 8105 	bne.w	9001b76c <EwExecuteTasks+0x1026>
9001b562:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b564:	449c      	add	ip, r3
9001b566:	441d      	add	r5, r3
9001b568:	eba2 0109 	sub.w	r1, r2, r9
9001b56c:	eba2 0e06 	sub.w	lr, r2, r6
9001b570:	9524      	str	r5, [sp, #144]	; 0x90
9001b572:	19c8      	adds	r0, r1, r7
9001b574:	44be      	add	lr, r7
9001b576:	4661      	mov	r1, ip
9001b578:	4607      	mov	r7, r0
9001b57a:	f8cd e08c 	str.w	lr, [sp, #140]	; 0x8c
9001b57e:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001b582:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9001b586:	f9bb 200a 	ldrsh.w	r2, [fp, #10]
9001b58a:	932a      	str	r3, [sp, #168]	; 0xa8
9001b58c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001b58e:	eeb0 4a65 	vmov.f32	s8, s11
9001b592:	eddd 7a24 	vldr	s15, [sp, #144]	; 0x90
9001b596:	eef0 2a65 	vmov.f32	s5, s11
9001b59a:	4443      	add	r3, r8
9001b59c:	eeb0 1a65 	vmov.f32	s2, s11
9001b5a0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
9001b5a4:	eddd 7a23 	vldr	s15, [sp, #140]	; 0x8c
9001b5a8:	4698      	mov	r8, r3
9001b5aa:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001b5ac:	eef8 4ae7 	vcvt.f32.s32	s9, s15
9001b5b0:	ee07 5a90 	vmov	s15, r5
9001b5b4:	4433      	add	r3, r6
9001b5b6:	9d25      	ldr	r5, [sp, #148]	; 0x94
9001b5b8:	eef8 3ae7 	vcvt.f32.s32	s7, s15
9001b5bc:	ee07 7a90 	vmov	s15, r7
9001b5c0:	461e      	mov	r6, r3
9001b5c2:	4b6e      	ldr	r3, [pc, #440]	; (9001b77c <EwExecuteTasks+0x1036>)
9001b5c4:	eeb8 3ae7 	vcvt.f32.s32	s6, s15
9001b5c8:	ee07 1a90 	vmov	s15, r1
9001b5cc:	681b      	ldr	r3, [r3, #0]
9001b5ce:	eeb8 2ae7 	vcvt.f32.s32	s4, s15
9001b5d2:	ee07 0a90 	vmov	s15, r0
9001b5d6:	932b      	str	r3, [sp, #172]	; 0xac
9001b5d8:	ab36      	add	r3, sp, #216	; 0xd8
9001b5da:	eef8 1ae7 	vcvt.f32.s32	s3, s15
9001b5de:	ee07 ca90 	vmov	s15, ip
9001b5e2:	9308      	str	r3, [sp, #32]
9001b5e4:	2300      	movs	r3, #0
9001b5e6:	eef8 0ae7 	vcvt.f32.s32	s1, s15
9001b5ea:	992b      	ldr	r1, [sp, #172]	; 0xac
9001b5ec:	9307      	str	r3, [sp, #28]
9001b5ee:	ee07 ea90 	vmov	s15, lr
9001b5f2:	f8bb 9006 	ldrh.w	r9, [fp, #6]
9001b5f6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b5f8:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
9001b5fc:	f009 0901 	and.w	r9, r9, #1
9001b600:	981a      	ldr	r0, [sp, #104]	; 0x68
9001b602:	f8cd 9018 	str.w	r9, [sp, #24]
9001b606:	f9bb 900e 	ldrsh.w	r9, [fp, #14]
9001b60a:	eba9 0902 	sub.w	r9, r9, r2
9001b60e:	f8cd 9014 	str.w	r9, [sp, #20]
9001b612:	f9bb 900c 	ldrsh.w	r9, [fp, #12]
9001b616:	9302      	str	r3, [sp, #8]
9001b618:	eba9 0903 	sub.w	r9, r9, r3
9001b61c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b61e:	9301      	str	r3, [sp, #4]
9001b620:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001b622:	e9cd 2903 	strd	r2, r9, [sp, #12]
9001b626:	9300      	str	r3, [sp, #0]
9001b628:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9001b62a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001b62c:	1ab2      	subs	r2, r6, r2
9001b62e:	6b89      	ldr	r1, [r1, #56]	; 0x38
9001b630:	eba8 0303 	sub.w	r3, r8, r3
9001b634:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001b636:	47a8      	blx	r5
9001b638:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b63a:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001b63c:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
9001b640:	4413      	add	r3, r2
9001b642:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b644:	441a      	add	r2, r3
9001b646:	68e3      	ldr	r3, [r4, #12]
9001b648:	9214      	str	r2, [sp, #80]	; 0x50
9001b64a:	b16b      	cbz	r3, 9001b668 <EwExecuteTasks+0xf22>
9001b64c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001b64e:	6992      	ldr	r2, [r2, #24]
9001b650:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b654:	2a20      	cmp	r2, #32
9001b656:	d107      	bne.n	9001b668 <EwExecuteTasks+0xf22>
9001b658:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001b65a:	4413      	add	r3, r2
9001b65c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b65e:	eb02 4223 	add.w	r2, r2, r3, asr #16
9001b662:	b29b      	uxth	r3, r3
9001b664:	9214      	str	r2, [sp, #80]	; 0x50
9001b666:	931d      	str	r3, [sp, #116]	; 0x74
9001b668:	f10a 0a08 	add.w	sl, sl, #8
9001b66c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b66e:	459a      	cmp	sl, r3
9001b670:	f4bf a8cd 	bcs.w	9001a80e <EwExecuteTasks+0xc8>
9001b674:	f8da 3000 	ldr.w	r3, [sl]
9001b678:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b67a:	9326      	str	r3, [sp, #152]	; 0x98
9001b67c:	f8da 3004 	ldr.w	r3, [sl, #4]
9001b680:	9317      	str	r3, [sp, #92]	; 0x5c
9001b682:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001b684:	189a      	adds	r2, r3, r2
9001b686:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b688:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001b68c:	18d3      	adds	r3, r2, r3
9001b68e:	931f      	str	r3, [sp, #124]	; 0x7c
9001b690:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9001b692:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b694:	4293      	cmp	r3, r2
9001b696:	bfb8      	it	lt
9001b698:	4613      	movlt	r3, r2
9001b69a:	461e      	mov	r6, r3
9001b69c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b69e:	f9b3 101c 	ldrsh.w	r1, [r3, #28]
9001b6a2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001b6a4:	4411      	add	r1, r2
9001b6a6:	428b      	cmp	r3, r1
9001b6a8:	bfa8      	it	ge
9001b6aa:	460b      	movge	r3, r1
9001b6ac:	4699      	mov	r9, r3
9001b6ae:	1b9b      	subs	r3, r3, r6
9001b6b0:	9327      	str	r3, [sp, #156]	; 0x9c
9001b6b2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001b6b4:	429e      	cmp	r6, r3
9001b6b6:	f6bf a8aa 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001b6ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001b6bc:	2b00      	cmp	r3, #0
9001b6be:	ddbb      	ble.n	9001b638 <EwExecuteTasks+0xef2>
9001b6c0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b6c2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
9001b6c4:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
9001b6c8:	4413      	add	r3, r2
9001b6ca:	9320      	str	r3, [sp, #128]	; 0x80
9001b6cc:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
9001b6d0:	4293      	cmp	r3, r2
9001b6d2:	bfb8      	it	lt
9001b6d4:	4613      	movlt	r3, r2
9001b6d6:	4698      	mov	r8, r3
9001b6d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b6da:	f9b3 701e 	ldrsh.w	r7, [r3, #30]
9001b6de:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001b6e0:	4417      	add	r7, r2
9001b6e2:	42bb      	cmp	r3, r7
9001b6e4:	bfa8      	it	ge
9001b6e6:	463b      	movge	r3, r7
9001b6e8:	461d      	mov	r5, r3
9001b6ea:	eba3 0308 	sub.w	r3, r3, r8
9001b6ee:	2b00      	cmp	r3, #0
9001b6f0:	9329      	str	r3, [sp, #164]	; 0xa4
9001b6f2:	dda1      	ble.n	9001b638 <EwExecuteTasks+0xef2>
9001b6f4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b6f6:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
9001b6fa:	932b      	str	r3, [sp, #172]	; 0xac
9001b6fc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b6fe:	f9b3 3028 	ldrsh.w	r3, [r3, #40]	; 0x28
9001b702:	932c      	str	r3, [sp, #176]	; 0xb0
9001b704:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001b708:	0759      	lsls	r1, r3, #29
9001b70a:	d517      	bpl.n	9001b73c <EwExecuteTasks+0xff6>
9001b70c:	4642      	mov	r2, r8
9001b70e:	4631      	mov	r1, r6
9001b710:	a84c      	add	r0, sp, #304	; 0x130
9001b712:	f7fd f93f 	bl	90018994 <EwGetColorFromGradient>
9001b716:	4642      	mov	r2, r8
9001b718:	4649      	mov	r1, r9
9001b71a:	9036      	str	r0, [sp, #216]	; 0xd8
9001b71c:	a84c      	add	r0, sp, #304	; 0x130
9001b71e:	f7fd f939 	bl	90018994 <EwGetColorFromGradient>
9001b722:	462a      	mov	r2, r5
9001b724:	4649      	mov	r1, r9
9001b726:	9037      	str	r0, [sp, #220]	; 0xdc
9001b728:	a84c      	add	r0, sp, #304	; 0x130
9001b72a:	f7fd f933 	bl	90018994 <EwGetColorFromGradient>
9001b72e:	462a      	mov	r2, r5
9001b730:	9038      	str	r0, [sp, #224]	; 0xe0
9001b732:	4631      	mov	r1, r6
9001b734:	a84c      	add	r0, sp, #304	; 0x130
9001b736:	f7fd f92d 	bl	90018994 <EwGetColorFromGradient>
9001b73a:	9039      	str	r0, [sp, #228]	; 0xe4
9001b73c:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b73e:	f9b4 7000 	ldrsh.w	r7, [r4]
9001b742:	2a5a      	cmp	r2, #90	; 0x5a
9001b744:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001b748:	f47f af03 	bne.w	9001b552 <EwExecuteTasks+0xe0c>
9001b74c:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b74e:	eb08 0e07 	add.w	lr, r8, r7
9001b752:	442f      	add	r7, r5
9001b754:	eba2 0c06 	sub.w	ip, r2, r6
9001b758:	eba2 0109 	sub.w	r1, r2, r9
9001b75c:	449c      	add	ip, r3
9001b75e:	4419      	add	r1, r3
9001b760:	460d      	mov	r5, r1
9001b762:	4670      	mov	r0, lr
9001b764:	f8cd c090 	str.w	ip, [sp, #144]	; 0x90
9001b768:	9723      	str	r7, [sp, #140]	; 0x8c
9001b76a:	e708      	b.n	9001b57e <EwExecuteTasks+0xe38>
9001b76c:	eb07 0e0c 	add.w	lr, r7, ip
9001b770:	eb09 0103 	add.w	r1, r9, r3
9001b774:	eb06 0c03 	add.w	ip, r6, r3
9001b778:	442f      	add	r7, r5
9001b77a:	e7f1      	b.n	9001b760 <EwExecuteTasks+0x101a>
9001b77c:	20000210 	.word	0x20000210
9001b780:	981a      	ldr	r0, [sp, #104]	; 0x68
9001b782:	f7fe fbdf 	bl	90019f44 <EwFreeVideo+0x4>
9001b786:	4b94      	ldr	r3, [pc, #592]	; (9001b9d8 <EwExecuteTasks+0x1292>)
9001b788:	9029      	str	r0, [sp, #164]	; 0xa4
9001b78a:	6818      	ldr	r0, [r3, #0]
9001b78c:	f7fe fc0e 	bl	90019fac <EwFreeVideo+0x6c>
9001b790:	f8bb c006 	ldrh.w	ip, [fp, #6]
9001b794:	902a      	str	r0, [sp, #168]	; 0xa8
9001b796:	f01c 0304 	ands.w	r3, ip, #4
9001b79a:	932b      	str	r3, [sp, #172]	; 0xac
9001b79c:	bf0c      	ite	eq
9001b79e:	ab36      	addeq	r3, sp, #216	; 0xd8
9001b7a0:	ab4c      	addne	r3, sp, #304	; 0x130
9001b7a2:	932e      	str	r3, [sp, #184]	; 0xb8
9001b7a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001b7a6:	2b00      	cmp	r3, #0
9001b7a8:	f43f a831 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001b7ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001b7ae:	2b00      	cmp	r3, #0
9001b7b0:	f43f a82d 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001b7b4:	f00c 0c06 	and.w	ip, ip, #6
9001b7b8:	f1bc 0f06 	cmp.w	ip, #6
9001b7bc:	e9d4 2006 	ldrd	r2, r0, [r4, #24]
9001b7c0:	e9d4 1308 	ldrd	r1, r3, [r4, #32]
9001b7c4:	d105      	bne.n	9001b7d2 <EwExecuteTasks+0x108c>
9001b7c6:	4282      	cmp	r2, r0
9001b7c8:	d103      	bne.n	9001b7d2 <EwExecuteTasks+0x108c>
9001b7ca:	4299      	cmp	r1, r3
9001b7cc:	bf04      	itt	eq
9001b7ce:	351c      	addeq	r5, #28
9001b7d0:	9517      	streq	r5, [sp, #92]	; 0x5c
9001b7d2:	6925      	ldr	r5, [r4, #16]
9001b7d4:	f9bb c00e 	ldrsh.w	ip, [fp, #14]
9001b7d8:	9520      	str	r5, [sp, #128]	; 0x80
9001b7da:	eba7 0509 	sub.w	r5, r7, r9
9001b7de:	f9bb e008 	ldrsh.w	lr, [fp, #8]
9001b7e2:	951c      	str	r5, [sp, #112]	; 0x70
9001b7e4:	eba6 0508 	sub.w	r5, r6, r8
9001b7e8:	951a      	str	r5, [sp, #104]	; 0x68
9001b7ea:	f9bb 500a 	ldrsh.w	r5, [fp, #10]
9001b7ee:	9518      	str	r5, [sp, #96]	; 0x60
9001b7f0:	f9bb 500c 	ldrsh.w	r5, [fp, #12]
9001b7f4:	951b      	str	r5, [sp, #108]	; 0x6c
9001b7f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001b7f8:	2d5a      	cmp	r5, #90	; 0x5a
9001b7fa:	f040 80ad 	bne.w	9001b958 <EwExecuteTasks+0x1212>
9001b7fe:	eba6 050c 	sub.w	r5, r6, ip
9001b802:	951d      	str	r5, [sp, #116]	; 0x74
9001b804:	ebae 0509 	sub.w	r5, lr, r9
9001b808:	9523      	str	r5, [sp, #140]	; 0x8c
9001b80a:	9d18      	ldr	r5, [sp, #96]	; 0x60
9001b80c:	1b75      	subs	r5, r6, r5
9001b80e:	951e      	str	r5, [sp, #120]	; 0x78
9001b810:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
9001b812:	eba5 0509 	sub.w	r5, r5, r9
9001b816:	e9cd 3232 	strd	r3, r2, [sp, #200]	; 0xc8
9001b81a:	9524      	str	r5, [sp, #144]	; 0x90
9001b81c:	e9cd 0134 	strd	r0, r1, [sp, #208]	; 0xd0
9001b820:	ab36      	add	r3, sp, #216	; 0xd8
9001b822:	aa32      	add	r2, sp, #200	; 0xc8
9001b824:	991c      	ldr	r1, [sp, #112]	; 0x70
9001b826:	981a      	ldr	r0, [sp, #104]	; 0x68
9001b828:	f7fc ffc8 	bl	900187bc <EwInitColorGradient>
9001b82c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001b82e:	459a      	cmp	sl, r3
9001b830:	f4be afed 	bcs.w	9001a80e <EwExecuteTasks+0xc8>
9001b834:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001b836:	e9da 1200 	ldrd	r1, r2, [sl]
9001b83a:	f9b2 0020 	ldrsh.w	r0, [r2, #32]
9001b83e:	18cb      	adds	r3, r1, r3
9001b840:	4403      	add	r3, r0
9001b842:	f9b2 001c 	ldrsh.w	r0, [r2, #28]
9001b846:	4403      	add	r3, r0
9001b848:	981d      	ldr	r0, [sp, #116]	; 0x74
9001b84a:	4283      	cmp	r3, r0
9001b84c:	f340 80ac 	ble.w	9001b9a8 <EwExecuteTasks+0x1262>
9001b850:	4b62      	ldr	r3, [pc, #392]	; (9001b9dc <EwExecuteTasks+0x1296>)
9001b852:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001b854:	eb03 0382 	add.w	r3, r3, r2, lsl #2
9001b858:	9331      	str	r3, [sp, #196]	; 0xc4
9001b85a:	f8da 3000 	ldr.w	r3, [sl]
9001b85e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b860:	932c      	str	r3, [sp, #176]	; 0xb0
9001b862:	f8da 3004 	ldr.w	r3, [sl, #4]
9001b866:	9317      	str	r3, [sp, #92]	; 0x5c
9001b868:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9001b86a:	189a      	adds	r2, r3, r2
9001b86c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b86e:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001b872:	18d3      	adds	r3, r2, r3
9001b874:	9321      	str	r3, [sp, #132]	; 0x84
9001b876:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001b878:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001b87a:	4293      	cmp	r3, r2
9001b87c:	bfb8      	it	lt
9001b87e:	4613      	movlt	r3, r2
9001b880:	9318      	str	r3, [sp, #96]	; 0x60
9001b882:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b884:	f9b3 701c 	ldrsh.w	r7, [r3, #28]
9001b888:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001b88a:	4417      	add	r7, r2
9001b88c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9001b88e:	42bb      	cmp	r3, r7
9001b890:	bfa8      	it	ge
9001b892:	463b      	movge	r3, r7
9001b894:	461d      	mov	r5, r3
9001b896:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b898:	1aeb      	subs	r3, r5, r3
9001b89a:	9325      	str	r3, [sp, #148]	; 0x94
9001b89c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b89e:	4293      	cmp	r3, r2
9001b8a0:	f6be afb5 	bge.w	9001a80e <EwExecuteTasks+0xc8>
9001b8a4:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001b8a6:	2b00      	cmp	r3, #0
9001b8a8:	f340 80f8 	ble.w	9001ba9c <EwExecuteTasks+0x1356>
9001b8ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b8ae:	9a28      	ldr	r2, [sp, #160]	; 0xa0
9001b8b0:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	; 0x22
9001b8b4:	4413      	add	r3, r2
9001b8b6:	9322      	str	r3, [sp, #136]	; 0x88
9001b8b8:	e9dd 2322 	ldrd	r2, r3, [sp, #136]	; 0x88
9001b8bc:	4293      	cmp	r3, r2
9001b8be:	bfb8      	it	lt
9001b8c0:	4613      	movlt	r3, r2
9001b8c2:	461f      	mov	r7, r3
9001b8c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b8c6:	f9b3 801e 	ldrsh.w	r8, [r3, #30]
9001b8ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001b8cc:	4490      	add	r8, r2
9001b8ce:	4543      	cmp	r3, r8
9001b8d0:	bfa8      	it	ge
9001b8d2:	4643      	movge	r3, r8
9001b8d4:	461e      	mov	r6, r3
9001b8d6:	1bdb      	subs	r3, r3, r7
9001b8d8:	2b00      	cmp	r3, #0
9001b8da:	932d      	str	r3, [sp, #180]	; 0xb4
9001b8dc:	f340 80de 	ble.w	9001ba9c <EwExecuteTasks+0x1356>
9001b8e0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b8e2:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
9001b8e6:	932f      	str	r3, [sp, #188]	; 0xbc
9001b8e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001b8ea:	f9b3 3028 	ldrsh.w	r3, [r3, #40]	; 0x28
9001b8ee:	9330      	str	r3, [sp, #192]	; 0xc0
9001b8f0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001b8f2:	b1bb      	cbz	r3, 9001b924 <EwExecuteTasks+0x11de>
9001b8f4:	463a      	mov	r2, r7
9001b8f6:	9918      	ldr	r1, [sp, #96]	; 0x60
9001b8f8:	a836      	add	r0, sp, #216	; 0xd8
9001b8fa:	f7fd f84b 	bl	90018994 <EwGetColorFromGradient>
9001b8fe:	463a      	mov	r2, r7
9001b900:	4629      	mov	r1, r5
9001b902:	9032      	str	r0, [sp, #200]	; 0xc8
9001b904:	a836      	add	r0, sp, #216	; 0xd8
9001b906:	f7fd f845 	bl	90018994 <EwGetColorFromGradient>
9001b90a:	4632      	mov	r2, r6
9001b90c:	4629      	mov	r1, r5
9001b90e:	9033      	str	r0, [sp, #204]	; 0xcc
9001b910:	a836      	add	r0, sp, #216	; 0xd8
9001b912:	f7fd f83f 	bl	90018994 <EwGetColorFromGradient>
9001b916:	4632      	mov	r2, r6
9001b918:	9034      	str	r0, [sp, #208]	; 0xd0
9001b91a:	a836      	add	r0, sp, #216	; 0xd8
9001b91c:	9918      	ldr	r1, [sp, #96]	; 0x60
9001b91e:	f7fd f839 	bl	90018994 <EwGetColorFromGradient>
9001b922:	9035      	str	r0, [sp, #212]	; 0xd4
9001b924:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b926:	f9b4 8000 	ldrsh.w	r8, [r4]
9001b92a:	2a5a      	cmp	r2, #90	; 0x5a
9001b92c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001b930:	d156      	bne.n	9001b9e0 <EwExecuteTasks+0x129a>
9001b932:	eb07 0208 	add.w	r2, r7, r8
9001b936:	9918      	ldr	r1, [sp, #96]	; 0x60
9001b938:	44b0      	add	r8, r6
9001b93a:	921b      	str	r2, [sp, #108]	; 0x6c
9001b93c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001b93e:	eba2 0901 	sub.w	r9, r2, r1
9001b942:	1b52      	subs	r2, r2, r5
9001b944:	4499      	add	r9, r3
9001b946:	18d3      	adds	r3, r2, r3
9001b948:	461e      	mov	r6, r3
9001b94a:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
9001b94c:	931f      	str	r3, [sp, #124]	; 0x7c
9001b94e:	f8cd 909c 	str.w	r9, [sp, #156]	; 0x9c
9001b952:	f8cd 8098 	str.w	r8, [sp, #152]	; 0x98
9001b956:	e05a      	b.n	9001ba0e <EwExecuteTasks+0x12c8>
9001b958:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
9001b95a:	1b7d      	subs	r5, r7, r5
9001b95c:	951d      	str	r5, [sp, #116]	; 0x74
9001b95e:	eba7 050e 	sub.w	r5, r7, lr
9001b962:	951e      	str	r5, [sp, #120]	; 0x78
9001b964:	9d15      	ldr	r5, [sp, #84]	; 0x54
9001b966:	2db4      	cmp	r5, #180	; 0xb4
9001b968:	d10e      	bne.n	9001b988 <EwExecuteTasks+0x1242>
9001b96a:	eba6 050c 	sub.w	r5, r6, ip
9001b96e:	9523      	str	r5, [sp, #140]	; 0x8c
9001b970:	9d18      	ldr	r5, [sp, #96]	; 0x60
9001b972:	e9cd 1332 	strd	r1, r3, [sp, #200]	; 0xc8
9001b976:	1b75      	subs	r5, r6, r5
9001b978:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001b97a:	e9cd 2034 	strd	r2, r0, [sp, #208]	; 0xd0
9001b97e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001b980:	9524      	str	r5, [sp, #144]	; 0x90
9001b982:	921a      	str	r2, [sp, #104]	; 0x68
9001b984:	931c      	str	r3, [sp, #112]	; 0x70
9001b986:	e74b      	b.n	9001b820 <EwExecuteTasks+0x10da>
9001b988:	e9cd 3234 	strd	r3, r2, [sp, #208]	; 0xd0
9001b98c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001b98e:	9324      	str	r3, [sp, #144]	; 0x90
9001b990:	ebac 0308 	sub.w	r3, ip, r8
9001b994:	931e      	str	r3, [sp, #120]	; 0x78
9001b996:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001b998:	9323      	str	r3, [sp, #140]	; 0x8c
9001b99a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b99c:	eba3 0308 	sub.w	r3, r3, r8
9001b9a0:	e9cd 0132 	strd	r0, r1, [sp, #200]	; 0xc8
9001b9a4:	931d      	str	r3, [sp, #116]	; 0x74
9001b9a6:	e73b      	b.n	9001b820 <EwExecuteTasks+0x10da>
9001b9a8:	f9b2 3024 	ldrsh.w	r3, [r2, #36]	; 0x24
9001b9ac:	440b      	add	r3, r1
9001b9ae:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b9b0:	4419      	add	r1, r3
9001b9b2:	68e3      	ldr	r3, [r4, #12]
9001b9b4:	9114      	str	r1, [sp, #80]	; 0x50
9001b9b6:	b15b      	cbz	r3, 9001b9d0 <EwExecuteTasks+0x128a>
9001b9b8:	6992      	ldr	r2, [r2, #24]
9001b9ba:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001b9be:	2a20      	cmp	r2, #32
9001b9c0:	d106      	bne.n	9001b9d0 <EwExecuteTasks+0x128a>
9001b9c2:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001b9c4:	4413      	add	r3, r2
9001b9c6:	eb01 4223 	add.w	r2, r1, r3, asr #16
9001b9ca:	b29b      	uxth	r3, r3
9001b9cc:	9214      	str	r2, [sp, #80]	; 0x50
9001b9ce:	9320      	str	r3, [sp, #128]	; 0x80
9001b9d0:	f10a 0a08 	add.w	sl, sl, #8
9001b9d4:	e72a      	b.n	9001b82c <EwExecuteTasks+0x10e6>
9001b9d6:	bf00      	nop
9001b9d8:	20000210 	.word	0x20000210
9001b9dc:	900320a8 	.word	0x900320a8
9001b9e0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
9001b9e2:	eba2 0907 	sub.w	r9, r2, r7
9001b9e6:	1b96      	subs	r6, r2, r6
9001b9e8:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001b9ea:	2ab4      	cmp	r2, #180	; 0xb4
9001b9ec:	d177      	bne.n	9001bade <EwExecuteTasks+0x1398>
9001b9ee:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001b9f0:	4499      	add	r9, r3
9001b9f2:	9918      	ldr	r1, [sp, #96]	; 0x60
9001b9f4:	441e      	add	r6, r3
9001b9f6:	f8cd 907c 	str.w	r9, [sp, #124]	; 0x7c
9001b9fa:	1a52      	subs	r2, r2, r1
9001b9fc:	9627      	str	r6, [sp, #156]	; 0x9c
9001b9fe:	4442      	add	r2, r8
9001ba00:	921b      	str	r2, [sp, #108]	; 0x6c
9001ba02:	9a1a      	ldr	r2, [sp, #104]	; 0x68
9001ba04:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001ba06:	1b55      	subs	r5, r2, r5
9001ba08:	9326      	str	r3, [sp, #152]	; 0x98
9001ba0a:	4445      	add	r5, r8
9001ba0c:	46a8      	mov	r8, r5
9001ba0e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9001ba10:	b12b      	cbz	r3, 9001ba1e <EwExecuteTasks+0x12d8>
9001ba12:	ab4c      	add	r3, sp, #304	; 0x130
9001ba14:	aa32      	add	r2, sp, #200	; 0xc8
9001ba16:	992d      	ldr	r1, [sp, #180]	; 0xb4
9001ba18:	9825      	ldr	r0, [sp, #148]	; 0x94
9001ba1a:	f7fc fecf 	bl	900187bc <EwInitColorGradient>
9001ba1e:	9b31      	ldr	r3, [sp, #196]	; 0xc4
9001ba20:	00f6      	lsls	r6, r6, #3
9001ba22:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001ba24:	00ed      	lsls	r5, r5, #3
9001ba26:	f8d3 3ad4 	ldr.w	r3, [r3, #2772]	; 0xad4
9001ba2a:	9313      	str	r3, [sp, #76]	; 0x4c
9001ba2c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9001ba2e:	9312      	str	r3, [sp, #72]	; 0x48
9001ba30:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
9001ba34:	9311      	str	r3, [sp, #68]	; 0x44
9001ba36:	f9bb 300c 	ldrsh.w	r3, [fp, #12]
9001ba3a:	9310      	str	r3, [sp, #64]	; 0x40
9001ba3c:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001ba40:	930f      	str	r3, [sp, #60]	; 0x3c
9001ba42:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001ba46:	9605      	str	r6, [sp, #20]
9001ba48:	930e      	str	r3, [sp, #56]	; 0x38
9001ba4a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001ba4c:	930d      	str	r3, [sp, #52]	; 0x34
9001ba4e:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001ba50:	930c      	str	r3, [sp, #48]	; 0x30
9001ba52:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001ba54:	443b      	add	r3, r7
9001ba56:	1a9b      	subs	r3, r3, r2
9001ba58:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001ba5a:	930b      	str	r3, [sp, #44]	; 0x2c
9001ba5c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
9001ba5e:	4413      	add	r3, r2
9001ba60:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001ba62:	1a9b      	subs	r3, r3, r2
9001ba64:	f44f 3280 	mov.w	r2, #65536	; 0x10000
9001ba68:	930a      	str	r3, [sp, #40]	; 0x28
9001ba6a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9001ba6c:	9209      	str	r2, [sp, #36]	; 0x24
9001ba6e:	00db      	lsls	r3, r3, #3
9001ba70:	9308      	str	r3, [sp, #32]
9001ba72:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001ba74:	00db      	lsls	r3, r3, #3
9001ba76:	e9cd 2306 	strd	r2, r3, [sp, #24]
9001ba7a:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9001ba7e:	e9cd 2303 	strd	r2, r3, [sp, #12]
9001ba82:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ba84:	e9cd 2500 	strd	r2, r5, [sp]
9001ba88:	00df      	lsls	r7, r3, #3
9001ba8a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
9001ba8c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
9001ba90:	00d2      	lsls	r2, r2, #3
9001ba92:	9702      	str	r7, [sp, #8]
9001ba94:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
9001ba98:	f7fd fadc 	bl	90019054 <EwEmulateWarp>
9001ba9c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9001ba9e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
9001baa0:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
9001baa4:	4413      	add	r3, r2
9001baa6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001baa8:	441a      	add	r2, r3
9001baaa:	68e3      	ldr	r3, [r4, #12]
9001baac:	9214      	str	r2, [sp, #80]	; 0x50
9001baae:	b173      	cbz	r3, 9001bace <EwExecuteTasks+0x1388>
9001bab0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
9001bab2:	6992      	ldr	r2, [r2, #24]
9001bab4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9001bab8:	2a20      	cmp	r2, #32
9001baba:	d108      	bne.n	9001bace <EwExecuteTasks+0x1388>
9001babc:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001babe:	441a      	add	r2, r3
9001bac0:	4613      	mov	r3, r2
9001bac2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bac4:	eb02 4223 	add.w	r2, r2, r3, asr #16
9001bac8:	b29b      	uxth	r3, r3
9001baca:	9214      	str	r2, [sp, #80]	; 0x50
9001bacc:	9320      	str	r3, [sp, #128]	; 0x80
9001bace:	f10a 0a08 	add.w	sl, sl, #8
9001bad2:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001bad4:	459a      	cmp	sl, r3
9001bad6:	f4ff aec0 	bcc.w	9001b85a <EwExecuteTasks+0x1114>
9001bada:	f7fe be98 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001bade:	eb08 0209 	add.w	r2, r8, r9
9001bae2:	44b0      	add	r8, r6
9001bae4:	921b      	str	r2, [sp, #108]	; 0x6c
9001bae6:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001bae8:	eb02 0903 	add.w	r9, r2, r3
9001baec:	18eb      	adds	r3, r5, r3
9001baee:	e72b      	b.n	9001b948 <EwExecuteTasks+0x1202>
9001baf0:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001baf2:	68d0      	ldr	r0, [r2, #12]
9001baf4:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
9001baf8:	3201      	adds	r2, #1
9001bafa:	4a98      	ldr	r2, [pc, #608]	; (9001bd5c <EwExecuteTasks+0x1616>)
9001bafc:	bf08      	it	eq
9001bafe:	f103 0540 	addeq.w	r5, r3, #64	; 0x40
9001bb02:	f8db 3010 	ldr.w	r3, [fp, #16]
9001bb06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001bb08:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001bb0c:	eb05 1303 	add.w	r3, r5, r3, lsl #4
9001bb10:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9001bb14:	f8d2 2484 	ldr.w	r2, [r2, #1156]	; 0x484
9001bb18:	b12a      	cbz	r2, 9001bb26 <EwExecuteTasks+0x13e0>
9001bb1a:	4a91      	ldr	r2, [pc, #580]	; (9001bd60 <EwExecuteTasks+0x161a>)
9001bb1c:	4659      	mov	r1, fp
9001bb1e:	f7fe fa7d 	bl	9001a01c <EwFreeVideo+0xdc>
9001bb22:	f7fe be74 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001bb26:	4a8f      	ldr	r2, [pc, #572]	; (9001bd64 <EwExecuteTasks+0x161e>)
9001bb28:	4659      	mov	r1, fp
9001bb2a:	f7fe facf 	bl	9001a0cc <EwFreeVideo+0x18c>
9001bb2e:	f7fe be6e 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001bb32:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bb34:	68d0      	ldr	r0, [r2, #12]
9001bb36:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
9001bb3a:	3201      	adds	r2, #1
9001bb3c:	4a87      	ldr	r2, [pc, #540]	; (9001bd5c <EwExecuteTasks+0x1616>)
9001bb3e:	bf08      	it	eq
9001bb40:	f103 0540 	addeq.w	r5, r3, #64	; 0x40
9001bb44:	f8db 3010 	ldr.w	r3, [fp, #16]
9001bb48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001bb4a:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001bb4e:	eb05 1303 	add.w	r3, r5, r3, lsl #4
9001bb52:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9001bb56:	f8d2 2288 	ldr.w	r2, [r2, #648]	; 0x288
9001bb5a:	b10a      	cbz	r2, 9001bb60 <EwExecuteTasks+0x141a>
9001bb5c:	4a82      	ldr	r2, [pc, #520]	; (9001bd68 <EwExecuteTasks+0x1622>)
9001bb5e:	e7dd      	b.n	9001bb1c <EwExecuteTasks+0x13d6>
9001bb60:	4a82      	ldr	r2, [pc, #520]	; (9001bd6c <EwExecuteTasks+0x1626>)
9001bb62:	e7e1      	b.n	9001bb28 <EwExecuteTasks+0x13e2>
9001bb64:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bb66:	68d0      	ldr	r0, [r2, #12]
9001bb68:	f9b0 2020 	ldrsh.w	r2, [r0, #32]
9001bb6c:	3201      	adds	r2, #1
9001bb6e:	4a7b      	ldr	r2, [pc, #492]	; (9001bd5c <EwExecuteTasks+0x1616>)
9001bb70:	bf08      	it	eq
9001bb72:	f103 0540 	addeq.w	r5, r3, #64	; 0x40
9001bb76:	f8db 3010 	ldr.w	r3, [fp, #16]
9001bb7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001bb7c:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
9001bb80:	eb05 1303 	add.w	r3, r5, r3, lsl #4
9001bb84:	eb02 0283 	add.w	r2, r2, r3, lsl #2
9001bb88:	f8d2 2680 	ldr.w	r2, [r2, #1664]	; 0x680
9001bb8c:	2a00      	cmp	r2, #0
9001bb8e:	d0e7      	beq.n	9001bb60 <EwExecuteTasks+0x141a>
9001bb90:	4a77      	ldr	r2, [pc, #476]	; (9001bd70 <EwExecuteTasks+0x162a>)
9001bb92:	e7c3      	b.n	9001bb1c <EwExecuteTasks+0x13d6>
9001bb94:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bb96:	f8db 4010 	ldr.w	r4, [fp, #16]
9001bb9a:	68d2      	ldr	r2, [r2, #12]
9001bb9c:	f104 091c 	add.w	r9, r4, #28
9001bba0:	9214      	str	r2, [sp, #80]	; 0x50
9001bba2:	f9b2 2020 	ldrsh.w	r2, [r2, #32]
9001bba6:	3201      	adds	r2, #1
9001bba8:	f9bb 200c 	ldrsh.w	r2, [fp, #12]
9001bbac:	bf08      	it	eq
9001bbae:	f103 0520 	addeq.w	r5, r3, #32
9001bbb2:	4b6a      	ldr	r3, [pc, #424]	; (9001bd5c <EwExecuteTasks+0x1616>)
9001bbb4:	eb03 0385 	add.w	r3, r3, r5, lsl #2
9001bbb8:	f8d3 3884 	ldr.w	r3, [r3, #2180]	; 0x884
9001bbbc:	9315      	str	r3, [sp, #84]	; 0x54
9001bbbe:	f9bb 3008 	ldrsh.w	r3, [fp, #8]
9001bbc2:	1ad3      	subs	r3, r2, r3
9001bbc4:	f9bb 200e 	ldrsh.w	r2, [fp, #14]
9001bbc8:	9317      	str	r3, [sp, #92]	; 0x5c
9001bbca:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001bbce:	1ad3      	subs	r3, r2, r3
9001bbd0:	9318      	str	r3, [sp, #96]	; 0x60
9001bbd2:	f005 0308 	and.w	r3, r5, #8
9001bbd6:	9319      	str	r3, [sp, #100]	; 0x64
9001bbd8:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001bbda:	2b00      	cmp	r3, #0
9001bbdc:	d071      	beq.n	9001bcc2 <EwExecuteTasks+0x157c>
9001bbde:	2000      	movs	r0, #0
9001bbe0:	f104 0a0c 	add.w	sl, r4, #12
9001bbe4:	f7fe f9ae 	bl	90019f44 <EwFreeVideo+0x4>
9001bbe8:	2000      	movs	r0, #0
9001bbea:	f7fe f9df 	bl	90019fac <EwFreeVideo+0x6c>
9001bbee:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001bbf2:	075a      	lsls	r2, r3, #29
9001bbf4:	d563      	bpl.n	9001bcbe <EwExecuteTasks+0x1578>
9001bbf6:	f9bb 5008 	ldrsh.w	r5, [fp, #8]
9001bbfa:	f9b4 0000 	ldrsh.w	r0, [r4]
9001bbfe:	f9bb 800a 	ldrsh.w	r8, [fp, #10]
9001bc02:	4285      	cmp	r5, r0
9001bc04:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001bc08:	f9bb 700c 	ldrsh.w	r7, [fp, #12]
9001bc0c:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001bc10:	f9bb 600e 	ldrsh.w	r6, [fp, #14]
9001bc14:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001bc18:	dc05      	bgt.n	9001bc26 <EwExecuteTasks+0x14e0>
9001bc1a:	4588      	cmp	r8, r1
9001bc1c:	dc03      	bgt.n	9001bc26 <EwExecuteTasks+0x14e0>
9001bc1e:	4567      	cmp	r7, ip
9001bc20:	db01      	blt.n	9001bc26 <EwExecuteTasks+0x14e0>
9001bc22:	4576      	cmp	r6, lr
9001bc24:	da4b      	bge.n	9001bcbe <EwExecuteTasks+0x1578>
9001bc26:	1a2d      	subs	r5, r5, r0
9001bc28:	eba8 0801 	sub.w	r8, r8, r1
9001bc2c:	ab4c      	add	r3, sp, #304	; 0x130
9001bc2e:	1a3f      	subs	r7, r7, r0
9001bc30:	1a76      	subs	r6, r6, r1
9001bc32:	ebac 0000 	sub.w	r0, ip, r0
9001bc36:	ebae 0101 	sub.w	r1, lr, r1
9001bc3a:	4652      	mov	r2, sl
9001bc3c:	f7fc fdbe 	bl	900187bc <EwInitColorGradient>
9001bc40:	4642      	mov	r2, r8
9001bc42:	4629      	mov	r1, r5
9001bc44:	a84c      	add	r0, sp, #304	; 0x130
9001bc46:	f7fc fea5 	bl	90018994 <EwGetColorFromGradient>
9001bc4a:	4642      	mov	r2, r8
9001bc4c:	4639      	mov	r1, r7
9001bc4e:	9036      	str	r0, [sp, #216]	; 0xd8
9001bc50:	a84c      	add	r0, sp, #304	; 0x130
9001bc52:	f7fc fe9f 	bl	90018994 <EwGetColorFromGradient>
9001bc56:	4632      	mov	r2, r6
9001bc58:	4639      	mov	r1, r7
9001bc5a:	9037      	str	r0, [sp, #220]	; 0xdc
9001bc5c:	a84c      	add	r0, sp, #304	; 0x130
9001bc5e:	f7fc fe99 	bl	90018994 <EwGetColorFromGradient>
9001bc62:	4629      	mov	r1, r5
9001bc64:	9038      	str	r0, [sp, #224]	; 0xe0
9001bc66:	4632      	mov	r2, r6
9001bc68:	a84c      	add	r0, sp, #304	; 0x130
9001bc6a:	f7fc fe93 	bl	90018994 <EwGetColorFromGradient>
9001bc6e:	a936      	add	r1, sp, #216	; 0xd8
9001bc70:	9039      	str	r0, [sp, #228]	; 0xe4
9001bc72:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001bc76:	0743      	lsls	r3, r0, #29
9001bc78:	d50a      	bpl.n	9001bc90 <EwExecuteTasks+0x154a>
9001bc7a:	458a      	cmp	sl, r1
9001bc7c:	d108      	bne.n	9001bc90 <EwExecuteTasks+0x154a>
9001bc7e:	680b      	ldr	r3, [r1, #0]
9001bc80:	9336      	str	r3, [sp, #216]	; 0xd8
9001bc82:	684b      	ldr	r3, [r1, #4]
9001bc84:	9337      	str	r3, [sp, #220]	; 0xdc
9001bc86:	688b      	ldr	r3, [r1, #8]
9001bc88:	9338      	str	r3, [sp, #224]	; 0xe0
9001bc8a:	68cb      	ldr	r3, [r1, #12]
9001bc8c:	a936      	add	r1, sp, #216	; 0xd8
9001bc8e:	9339      	str	r3, [sp, #228]	; 0xe4
9001bc90:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001bc94:	f000 0001 	and.w	r0, r0, #1
9001bc98:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001bc9c:	9105      	str	r1, [sp, #20]
9001bc9e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001bca2:	9002      	str	r0, [sp, #8]
9001bca4:	9104      	str	r1, [sp, #16]
9001bca6:	9919      	ldr	r1, [sp, #100]	; 0x64
9001bca8:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bcaa:	9103      	str	r1, [sp, #12]
9001bcac:	9918      	ldr	r1, [sp, #96]	; 0x60
9001bcae:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001bcb0:	9101      	str	r1, [sp, #4]
9001bcb2:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001bcb4:	9100      	str	r1, [sp, #0]
9001bcb6:	4649      	mov	r1, r9
9001bcb8:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001bcba:	f7fe bf63 	b.w	9001ab84 <EwExecuteTasks+0x43e>
9001bcbe:	4651      	mov	r1, sl
9001bcc0:	e7d7      	b.n	9001bc72 <EwExecuteTasks+0x152c>
9001bcc2:	9814      	ldr	r0, [sp, #80]	; 0x50
9001bcc4:	f7fe f93e 	bl	90019f44 <EwFreeVideo+0x4>
9001bcc8:	4606      	mov	r6, r0
9001bcca:	2800      	cmp	r0, #0
9001bccc:	f43e ad9f 	beq.w	9001a80e <EwExecuteTasks+0xc8>
9001bcd0:	f8bb 3006 	ldrh.w	r3, [fp, #6]
9001bcd4:	f025 0508 	bic.w	r5, r5, #8
9001bcd8:	f003 0306 	and.w	r3, r3, #6
9001bcdc:	2b06      	cmp	r3, #6
9001bcde:	d108      	bne.n	9001bcf2 <EwExecuteTasks+0x15ac>
9001bce0:	e9d4 2303 	ldrd	r2, r3, [r4, #12]
9001bce4:	429a      	cmp	r2, r3
9001bce6:	d104      	bne.n	9001bcf2 <EwExecuteTasks+0x15ac>
9001bce8:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
9001bcec:	429a      	cmp	r2, r3
9001bcee:	bf08      	it	eq
9001bcf0:	3d04      	subeq	r5, #4
9001bcf2:	af4c      	add	r7, sp, #304	; 0x130
9001bcf4:	f9b4 e006 	ldrsh.w	lr, [r4, #6]
9001bcf8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001bcfc:	f104 020c 	add.w	r2, r4, #12
9001bd00:	f9b4 c004 	ldrsh.w	ip, [r4, #4]
9001bd04:	463b      	mov	r3, r7
9001bd06:	f9b4 0000 	ldrsh.w	r0, [r4]
9001bd0a:	ebae 0101 	sub.w	r1, lr, r1
9001bd0e:	ebac 0000 	sub.w	r0, ip, r0
9001bd12:	f7fc fd53 	bl	900187bc <EwInitColorGradient>
9001bd16:	4911      	ldr	r1, [pc, #68]	; (9001bd5c <EwExecuteTasks+0x1616>)
9001bd18:	f9bb 2008 	ldrsh.w	r2, [fp, #8]
9001bd1c:	4630      	mov	r0, r6
9001bd1e:	eb01 0585 	add.w	r5, r1, r5, lsl #2
9001bd22:	f9bb 300a 	ldrsh.w	r3, [fp, #10]
9001bd26:	f8d5 1a10 	ldr.w	r1, [r5, #2576]	; 0xa10
9001bd2a:	9107      	str	r1, [sp, #28]
9001bd2c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001bd30:	1a59      	subs	r1, r3, r1
9001bd32:	9106      	str	r1, [sp, #24]
9001bd34:	f9b4 1000 	ldrsh.w	r1, [r4]
9001bd38:	1a51      	subs	r1, r2, r1
9001bd3a:	e9cd 7104 	strd	r7, r1, [sp, #16]
9001bd3e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
9001bd42:	9103      	str	r1, [sp, #12]
9001bd44:	9919      	ldr	r1, [sp, #100]	; 0x64
9001bd46:	9102      	str	r1, [sp, #8]
9001bd48:	9918      	ldr	r1, [sp, #96]	; 0x60
9001bd4a:	9101      	str	r1, [sp, #4]
9001bd4c:	9917      	ldr	r1, [sp, #92]	; 0x5c
9001bd4e:	9100      	str	r1, [sp, #0]
9001bd50:	4649      	mov	r1, r9
9001bd52:	f7fd fe3b 	bl	900199cc <EwEmulateFillPolygon>
9001bd56:	f7fe bd5a 	b.w	9001a80e <EwExecuteTasks+0xc8>
9001bd5a:	bf00      	nop
9001bd5c:	900320a8 	.word	0x900320a8
9001bd60:	9003252c 	.word	0x9003252c
9001bd64:	90032d80 	.word	0x90032d80
9001bd68:	90032330 	.word	0x90032330
9001bd6c:	90032b7c 	.word	0x90032b7c
9001bd70:	90032728 	.word	0x90032728

9001bd74 <EwCompleteTasks>:
9001bd74:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bd76:	2200      	movs	r2, #0
9001bd78:	e9d0 3506 	ldrd	r3, r5, [r0, #24]
9001bd7c:	42ab      	cmp	r3, r5
9001bd7e:	d300      	bcc.n	9001bd82 <EwCompleteTasks+0xe>
9001bd80:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001bd82:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001bd86:	3902      	subs	r1, #2
9001bd88:	2906      	cmp	r1, #6
9001bd8a:	d80c      	bhi.n	9001bda6 <EwCompleteTasks+0x32>
9001bd8c:	e8df f001 	tbb	[pc, r1]
9001bd90:	2a2a0d04 	.word	0x2a2a0d04
9001bd94:	0b2a      	.short	0x0b2a
9001bd96:	16          	.byte	0x16
9001bd97:	00          	.byte	0x00
9001bd98:	691c      	ldr	r4, [r3, #16]
9001bd9a:	68e1      	ldr	r1, [r4, #12]
9001bd9c:	b119      	cbz	r1, 9001bda6 <EwCompleteTasks+0x32>
9001bd9e:	68c8      	ldr	r0, [r1, #12]
9001bda0:	3801      	subs	r0, #1
9001bda2:	60c8      	str	r0, [r1, #12]
9001bda4:	60e2      	str	r2, [r4, #12]
9001bda6:	3314      	adds	r3, #20
9001bda8:	e7e8      	b.n	9001bd7c <EwCompleteTasks+0x8>
9001bdaa:	691c      	ldr	r4, [r3, #16]
9001bdac:	6961      	ldr	r1, [r4, #20]
9001bdae:	2900      	cmp	r1, #0
9001bdb0:	d0f9      	beq.n	9001bda6 <EwCompleteTasks+0x32>
9001bdb2:	68c8      	ldr	r0, [r1, #12]
9001bdb4:	3801      	subs	r0, #1
9001bdb6:	60c8      	str	r0, [r1, #12]
9001bdb8:	6162      	str	r2, [r4, #20]
9001bdba:	e7f4      	b.n	9001bda6 <EwCompleteTasks+0x32>
9001bdbc:	6919      	ldr	r1, [r3, #16]
9001bdbe:	f9b1 0014 	ldrsh.w	r0, [r1, #20]
9001bdc2:	f101 042c 	add.w	r4, r1, #44	; 0x2c
9001bdc6:	2800      	cmp	r0, #0
9001bdc8:	f100 37ff 	add.w	r7, r0, #4294967295
9001bdcc:	f104 0408 	add.w	r4, r4, #8
9001bdd0:	dc01      	bgt.n	9001bdd6 <EwCompleteTasks+0x62>
9001bdd2:	828a      	strh	r2, [r1, #20]
9001bdd4:	e7e7      	b.n	9001bda6 <EwCompleteTasks+0x32>
9001bdd6:	f854 6c08 	ldr.w	r6, [r4, #-8]
9001bdda:	6930      	ldr	r0, [r6, #16]
9001bddc:	3801      	subs	r0, #1
9001bdde:	6130      	str	r0, [r6, #16]
9001bde0:	4638      	mov	r0, r7
9001bde2:	e7f0      	b.n	9001bdc6 <EwCompleteTasks+0x52>
9001bde4:	691c      	ldr	r4, [r3, #16]
9001bde6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
9001bde8:	2900      	cmp	r1, #0
9001bdea:	d0dc      	beq.n	9001bda6 <EwCompleteTasks+0x32>
9001bdec:	68c8      	ldr	r0, [r1, #12]
9001bdee:	3801      	subs	r0, #1
9001bdf0:	60c8      	str	r0, [r1, #12]
9001bdf2:	63a2      	str	r2, [r4, #56]	; 0x38
9001bdf4:	e7d7      	b.n	9001bda6 <EwCompleteTasks+0x32>

9001bdf6 <EwCountTasks>:
9001bdf6:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bdf8:	2500      	movs	r5, #0
9001bdfa:	6900      	ldr	r0, [r0, #16]
9001bdfc:	462e      	mov	r6, r5
9001bdfe:	462f      	mov	r7, r5
9001be00:	b918      	cbnz	r0, 9001be0a <EwCountTasks+0x14>
9001be02:	600f      	str	r7, [r1, #0]
9001be04:	6016      	str	r6, [r2, #0]
9001be06:	601d      	str	r5, [r3, #0]
9001be08:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001be0a:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
9001be0e:	3701      	adds	r7, #1
9001be10:	f9b0 400c 	ldrsh.w	r4, [r0, #12]
9001be14:	f9b0 e00a 	ldrsh.w	lr, [r0, #10]
9001be18:	eba4 040c 	sub.w	r4, r4, ip
9001be1c:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
9001be20:	ebac 0c0e 	sub.w	ip, ip, lr
9001be24:	fb0c f404 	mul.w	r4, ip, r4
9001be28:	f8b0 c006 	ldrh.w	ip, [r0, #6]
9001be2c:	6800      	ldr	r0, [r0, #0]
9001be2e:	f01c 0f01 	tst.w	ip, #1
9001be32:	bf14      	ite	ne
9001be34:	192d      	addne	r5, r5, r4
9001be36:	1936      	addeq	r6, r6, r4
9001be38:	e7e2      	b.n	9001be00 <EwCountTasks+0xa>

9001be3a <EwTraceTasks>:
9001be3a:	4b02      	ldr	r3, [pc, #8]	; (9001be44 <EwTraceTasks+0xa>)
9001be3c:	6698      	str	r0, [r3, #104]	; 0x68
9001be3e:	e9c3 211b 	strd	r2, r1, [r3, #108]	; 0x6c
9001be42:	4770      	bx	lr
9001be44:	2000022c 	.word	0x2000022c

9001be48 <EwBmpInit>:
9001be48:	b508      	push	{r3, lr}
9001be4a:	4b07      	ldr	r3, [pc, #28]	; (9001be68 <EwBmpInit+0x20>)
9001be4c:	681a      	ldr	r2, [r3, #0]
9001be4e:	f240 7301 	movw	r3, #1793	; 0x701
9001be52:	429a      	cmp	r2, r3
9001be54:	d006      	beq.n	9001be64 <EwBmpInit+0x1c>
9001be56:	20e8      	movs	r0, #232	; 0xe8
9001be58:	f001 fafa 	bl	9001d450 <EwError>
9001be5c:	f00a ff2e 	bl	90026cbc <EwPanic>
9001be60:	2000      	movs	r0, #0
9001be62:	bd08      	pop	{r3, pc}
9001be64:	2001      	movs	r0, #1
9001be66:	e7fc      	b.n	9001be62 <EwBmpInit+0x1a>
9001be68:	9002fc7c 	.word	0x9002fc7c

9001be6c <EwBmpDone>:
9001be6c:	4770      	bx	lr

9001be6e <EwBmpOpen>:
9001be6e:	6801      	ldr	r1, [r0, #0]
9001be70:	4b22      	ldr	r3, [pc, #136]	; (9001befc <EwBmpOpen+0x8e>)
9001be72:	440b      	add	r3, r1
9001be74:	2b03      	cmp	r3, #3
9001be76:	b510      	push	{r4, lr}
9001be78:	d908      	bls.n	9001be8c <EwBmpOpen+0x1e>
9001be7a:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001be7c:	20e9      	movs	r0, #233	; 0xe9
9001be7e:	2400      	movs	r4, #0
9001be80:	f001 faec 	bl	9001d45c <EwErrorS>
9001be84:	f00a ff1a 	bl	90026cbc <EwPanic>
9001be88:	4620      	mov	r0, r4
9001be8a:	bd10      	pop	{r4, pc}
9001be8c:	6842      	ldr	r2, [r0, #4]
9001be8e:	2a0c      	cmp	r2, #12
9001be90:	d806      	bhi.n	9001bea0 <EwBmpOpen+0x32>
9001be92:	f641 0382 	movw	r3, #6274	; 0x1882
9001be96:	40d3      	lsrs	r3, r2
9001be98:	43db      	mvns	r3, r3
9001be9a:	f013 0401 	ands.w	r4, r3, #1
9001be9e:	d002      	beq.n	9001bea6 <EwBmpOpen+0x38>
9001bea0:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001bea2:	20ea      	movs	r0, #234	; 0xea
9001bea4:	e7eb      	b.n	9001be7e <EwBmpOpen+0x10>
9001bea6:	4b16      	ldr	r3, [pc, #88]	; (9001bf00 <EwBmpOpen+0x92>)
9001bea8:	4299      	cmp	r1, r3
9001beaa:	d006      	beq.n	9001beba <EwBmpOpen+0x4c>
9001beac:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001beae:	20eb      	movs	r0, #235	; 0xeb
9001beb0:	f001 fad4 	bl	9001d45c <EwErrorS>
9001beb4:	f00a ff02 	bl	90026cbc <EwPanic>
9001beb8:	e7e6      	b.n	9001be88 <EwBmpOpen+0x1a>
9001beba:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9001bebc:	b9e4      	cbnz	r4, 9001bef8 <EwBmpOpen+0x8a>
9001bebe:	2a01      	cmp	r2, #1
9001bec0:	d107      	bne.n	9001bed2 <EwBmpOpen+0x64>
9001bec2:	6a03      	ldr	r3, [r0, #32]
9001bec4:	681a      	ldr	r2, [r3, #0]
9001bec6:	4b0f      	ldr	r3, [pc, #60]	; (9001bf04 <EwBmpOpen+0x96>)
9001bec8:	429a      	cmp	r2, r3
9001beca:	d015      	beq.n	9001bef8 <EwBmpOpen+0x8a>
9001becc:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001bece:	20ec      	movs	r0, #236	; 0xec
9001bed0:	e7ee      	b.n	9001beb0 <EwBmpOpen+0x42>
9001bed2:	2a0b      	cmp	r2, #11
9001bed4:	d107      	bne.n	9001bee6 <EwBmpOpen+0x78>
9001bed6:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001bed8:	681a      	ldr	r2, [r3, #0]
9001beda:	4b0a      	ldr	r3, [pc, #40]	; (9001bf04 <EwBmpOpen+0x96>)
9001bedc:	429a      	cmp	r2, r3
9001bede:	d00b      	beq.n	9001bef8 <EwBmpOpen+0x8a>
9001bee0:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001bee2:	20ed      	movs	r0, #237	; 0xed
9001bee4:	e7e4      	b.n	9001beb0 <EwBmpOpen+0x42>
9001bee6:	2a07      	cmp	r2, #7
9001bee8:	d106      	bne.n	9001bef8 <EwBmpOpen+0x8a>
9001beea:	6a03      	ldr	r3, [r0, #32]
9001beec:	881b      	ldrh	r3, [r3, #0]
9001beee:	2b5b      	cmp	r3, #91	; 0x5b
9001bef0:	d002      	beq.n	9001bef8 <EwBmpOpen+0x8a>
9001bef2:	6b01      	ldr	r1, [r0, #48]	; 0x30
9001bef4:	20ee      	movs	r0, #238	; 0xee
9001bef6:	e7db      	b.n	9001beb0 <EwBmpOpen+0x42>
9001bef8:	4604      	mov	r4, r0
9001befa:	e7c5      	b.n	9001be88 <EwBmpOpen+0x1a>
9001befc:	9d928f9c 	.word	0x9d928f9c
9001bf00:	626d7064 	.word	0x626d7064
9001bf04:	00600210 	.word	0x00600210

9001bf08 <EwBmpClose>:
9001bf08:	4770      	bx	lr

9001bf0a <EwBmpGetMetrics>:
9001bf0a:	b570      	push	{r4, r5, r6, lr}
9001bf0c:	6844      	ldr	r4, [r0, #4]
9001bf0e:	6986      	ldr	r6, [r0, #24]
9001bf10:	2c01      	cmp	r4, #1
9001bf12:	bf04      	itt	eq
9001bf14:	2400      	moveq	r4, #0
9001bf16:	600c      	streq	r4, [r1, #0]
9001bf18:	6844      	ldr	r4, [r0, #4]
9001bf1a:	2c07      	cmp	r4, #7
9001bf1c:	bf04      	itt	eq
9001bf1e:	2403      	moveq	r4, #3
9001bf20:	600c      	streq	r4, [r1, #0]
9001bf22:	6844      	ldr	r4, [r0, #4]
9001bf24:	2c0c      	cmp	r4, #12
9001bf26:	bf04      	itt	eq
9001bf28:	2402      	moveq	r4, #2
9001bf2a:	600c      	streq	r4, [r1, #0]
9001bf2c:	6844      	ldr	r4, [r0, #4]
9001bf2e:	2c0b      	cmp	r4, #11
9001bf30:	bf04      	itt	eq
9001bf32:	2401      	moveq	r4, #1
9001bf34:	600c      	streq	r4, [r1, #0]
9001bf36:	2100      	movs	r1, #0
9001bf38:	f64f 74ff 	movw	r4, #65535	; 0xffff
9001bf3c:	f836 5011 	ldrh.w	r5, [r6, r1, lsl #1]
9001bf40:	42a5      	cmp	r5, r4
9001bf42:	d10f      	bne.n	9001bf64 <EwBmpGetMetrics+0x5a>
9001bf44:	b901      	cbnz	r1, 9001bf48 <EwBmpGetMetrics+0x3e>
9001bf46:	6941      	ldr	r1, [r0, #20]
9001bf48:	6019      	str	r1, [r3, #0]
9001bf4a:	6943      	ldr	r3, [r0, #20]
9001bf4c:	6013      	str	r3, [r2, #0]
9001bf4e:	9b04      	ldr	r3, [sp, #16]
9001bf50:	6882      	ldr	r2, [r0, #8]
9001bf52:	601a      	str	r2, [r3, #0]
9001bf54:	9b05      	ldr	r3, [sp, #20]
9001bf56:	68c2      	ldr	r2, [r0, #12]
9001bf58:	601a      	str	r2, [r3, #0]
9001bf5a:	9b06      	ldr	r3, [sp, #24]
9001bf5c:	6902      	ldr	r2, [r0, #16]
9001bf5e:	2001      	movs	r0, #1
9001bf60:	601a      	str	r2, [r3, #0]
9001bf62:	bd70      	pop	{r4, r5, r6, pc}
9001bf64:	3101      	adds	r1, #1
9001bf66:	e7e9      	b.n	9001bf3c <EwBmpGetMetrics+0x32>

9001bf68 <EwBmpGetFrameMetrics>:
9001bf68:	2900      	cmp	r1, #0
9001bf6a:	b510      	push	{r4, lr}
9001bf6c:	db12      	blt.n	9001bf94 <EwBmpGetFrameMetrics+0x2c>
9001bf6e:	6944      	ldr	r4, [r0, #20]
9001bf70:	428c      	cmp	r4, r1
9001bf72:	dd0f      	ble.n	9001bf94 <EwBmpGetFrameMetrics+0x2c>
9001bf74:	2418      	movs	r4, #24
9001bf76:	4361      	muls	r1, r4
9001bf78:	69c4      	ldr	r4, [r0, #28]
9001bf7a:	1860      	adds	r0, r4, r1
9001bf7c:	5861      	ldr	r1, [r4, r1]
9001bf7e:	6011      	str	r1, [r2, #0]
9001bf80:	6842      	ldr	r2, [r0, #4]
9001bf82:	601a      	str	r2, [r3, #0]
9001bf84:	9b02      	ldr	r3, [sp, #8]
9001bf86:	6882      	ldr	r2, [r0, #8]
9001bf88:	601a      	str	r2, [r3, #0]
9001bf8a:	9b03      	ldr	r3, [sp, #12]
9001bf8c:	68c2      	ldr	r2, [r0, #12]
9001bf8e:	2001      	movs	r0, #1
9001bf90:	601a      	str	r2, [r3, #0]
9001bf92:	bd10      	pop	{r4, pc}
9001bf94:	2000      	movs	r0, #0
9001bf96:	e7fc      	b.n	9001bf92 <EwBmpGetFrameMetrics+0x2a>

9001bf98 <EwBmpGetFrameMemory>:
9001bf98:	2900      	cmp	r1, #0
9001bf9a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001bf9c:	db3e      	blt.n	9001c01c <EwBmpGetFrameMemory+0x84>
9001bf9e:	6943      	ldr	r3, [r0, #20]
9001bfa0:	428b      	cmp	r3, r1
9001bfa2:	dd3b      	ble.n	9001c01c <EwBmpGetFrameMemory+0x84>
9001bfa4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001bfa6:	2b00      	cmp	r3, #0
9001bfa8:	d138      	bne.n	9001c01c <EwBmpGetFrameMemory+0x84>
9001bfaa:	69c5      	ldr	r5, [r0, #28]
9001bfac:	2718      	movs	r7, #24
9001bfae:	6846      	ldr	r6, [r0, #4]
9001bfb0:	fb07 5101 	mla	r1, r7, r1, r5
9001bfb4:	6a04      	ldr	r4, [r0, #32]
9001bfb6:	2e0c      	cmp	r6, #12
9001bfb8:	690d      	ldr	r5, [r1, #16]
9001bfba:	6881      	ldr	r1, [r0, #8]
9001bfbc:	f101 0102 	add.w	r1, r1, #2
9001bfc0:	d109      	bne.n	9001bfd6 <EwBmpGetFrameMemory+0x3e>
9001bfc2:	442c      	add	r4, r5
9001bfc4:	2001      	movs	r0, #1
9001bfc6:	6091      	str	r1, [r2, #8]
9001bfc8:	6014      	str	r4, [r2, #0]
9001bfca:	6050      	str	r0, [r2, #4]
9001bfcc:	60d3      	str	r3, [r2, #12]
9001bfce:	6193      	str	r3, [r2, #24]
9001bfd0:	e9c2 3304 	strd	r3, r3, [r2, #16]
9001bfd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001bfd6:	2e07      	cmp	r6, #7
9001bfd8:	d10a      	bne.n	9001bff0 <EwBmpGetFrameMemory+0x58>
9001bfda:	0049      	lsls	r1, r1, #1
9001bfdc:	3502      	adds	r5, #2
9001bfde:	6091      	str	r1, [r2, #8]
9001bfe0:	442c      	add	r4, r5
9001bfe2:	2102      	movs	r1, #2
9001bfe4:	6014      	str	r4, [r2, #0]
9001bfe6:	6051      	str	r1, [r2, #4]
9001bfe8:	60d3      	str	r3, [r2, #12]
9001bfea:	e9c2 3304 	strd	r3, r3, [r2, #16]
9001bfee:	e00b      	b.n	9001c008 <EwBmpGetFrameMemory+0x70>
9001bff0:	2e0b      	cmp	r6, #11
9001bff2:	d10c      	bne.n	9001c00e <EwBmpGetFrameMemory+0x76>
9001bff4:	60d3      	str	r3, [r2, #12]
9001bff6:	442c      	add	r4, r5
9001bff8:	6091      	str	r1, [r2, #8]
9001bffa:	2101      	movs	r1, #1
9001bffc:	6014      	str	r4, [r2, #0]
9001bffe:	6051      	str	r1, [r2, #4]
9001c000:	e9c2 3304 	strd	r3, r3, [r2, #16]
9001c004:	6a83      	ldr	r3, [r0, #40]	; 0x28
9001c006:	3304      	adds	r3, #4
9001c008:	2001      	movs	r0, #1
9001c00a:	6193      	str	r3, [r2, #24]
9001c00c:	e7e2      	b.n	9001bfd4 <EwBmpGetFrameMemory+0x3c>
9001c00e:	3504      	adds	r5, #4
9001c010:	0089      	lsls	r1, r1, #2
9001c012:	442c      	add	r4, r5
9001c014:	6091      	str	r1, [r2, #8]
9001c016:	2104      	movs	r1, #4
9001c018:	6014      	str	r4, [r2, #0]
9001c01a:	e7e4      	b.n	9001bfe6 <EwBmpGetFrameMemory+0x4e>
9001c01c:	2000      	movs	r0, #0
9001c01e:	e7d9      	b.n	9001bfd4 <EwBmpGetFrameMemory+0x3c>

9001c020 <EwBmpLoadFrame>:
9001c020:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001c024:	2900      	cmp	r1, #0
9001c026:	4605      	mov	r5, r0
9001c028:	4691      	mov	r9, r2
9001c02a:	f2c0 8098 	blt.w	9001c15e <EwBmpLoadFrame+0x13e>
9001c02e:	6943      	ldr	r3, [r0, #20]
9001c030:	428b      	cmp	r3, r1
9001c032:	f340 8094 	ble.w	9001c15e <EwBmpLoadFrame+0x13e>
9001c036:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001c038:	b338      	cbz	r0, 9001c08a <EwBmpLoadFrame+0x6a>
9001c03a:	2018      	movs	r0, #24
9001c03c:	6893      	ldr	r3, [r2, #8]
9001c03e:	69ea      	ldr	r2, [r5, #28]
9001c040:	686f      	ldr	r7, [r5, #4]
9001c042:	fb00 2101 	mla	r1, r0, r1, r2
9001c046:	6a28      	ldr	r0, [r5, #32]
9001c048:	f8d9 8000 	ldr.w	r8, [r9]
9001c04c:	690a      	ldr	r2, [r1, #16]
9001c04e:	4410      	add	r0, r2
9001c050:	f1a7 020b 	sub.w	r2, r7, #11
9001c054:	2a01      	cmp	r2, #1
9001c056:	e9d5 4602 	ldrd	r4, r6, [r5, #8]
9001c05a:	d819      	bhi.n	9001c090 <EwBmpLoadFrame+0x70>
9001c05c:	4622      	mov	r2, r4
9001c05e:	4641      	mov	r1, r8
9001c060:	f002 feb6 	bl	9001edd0 <EwDecompress>
9001c064:	686b      	ldr	r3, [r5, #4]
9001c066:	2b07      	cmp	r3, #7
9001c068:	d152      	bne.n	9001c110 <EwBmpLoadFrame+0xf0>
9001c06a:	f8d9 3008 	ldr.w	r3, [r9, #8]
9001c06e:	2500      	movs	r5, #0
9001c070:	f8d9 0000 	ldr.w	r0, [r9]
9001c074:	ebc4 0363 	rsb	r3, r4, r3, asr #1
9001c078:	4f3a      	ldr	r7, [pc, #232]	; (9001c164 <EwBmpLoadFrame+0x144>)
9001c07a:	42ac      	cmp	r4, r5
9001c07c:	bfac      	ite	ge
9001c07e:	191b      	addge	r3, r3, r4
9001c080:	195b      	addlt	r3, r3, r5
9001c082:	005b      	lsls	r3, r3, #1
9001c084:	42b5      	cmp	r5, r6
9001c086:	db3f      	blt.n	9001c108 <EwBmpLoadFrame+0xe8>
9001c088:	2001      	movs	r0, #1
9001c08a:	b002      	add	sp, #8
9001c08c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c090:	2f07      	cmp	r7, #7
9001c092:	9301      	str	r3, [sp, #4]
9001c094:	d110      	bne.n	9001c0b8 <EwBmpLoadFrame+0x98>
9001c096:	0062      	lsls	r2, r4, #1
9001c098:	4641      	mov	r1, r8
9001c09a:	f002 fe99 	bl	9001edd0 <EwDecompress>
9001c09e:	9b01      	ldr	r3, [sp, #4]
9001c0a0:	2700      	movs	r7, #0
9001c0a2:	f023 0a01 	bic.w	sl, r3, #1
9001c0a6:	42b7      	cmp	r7, r6
9001c0a8:	dadc      	bge.n	9001c064 <EwBmpLoadFrame+0x44>
9001c0aa:	4640      	mov	r0, r8
9001c0ac:	4621      	mov	r1, r4
9001c0ae:	3701      	adds	r7, #1
9001c0b0:	44d0      	add	r8, sl
9001c0b2:	f002 ffb9 	bl	9001f028 <EwAdaptByteOrder2>
9001c0b6:	e7f6      	b.n	9001c0a6 <EwBmpLoadFrame+0x86>
9001c0b8:	00a2      	lsls	r2, r4, #2
9001c0ba:	4641      	mov	r1, r8
9001c0bc:	f002 fe88 	bl	9001edd0 <EwDecompress>
9001c0c0:	9b01      	ldr	r3, [sp, #4]
9001c0c2:	f04f 0a00 	mov.w	sl, #0
9001c0c6:	f023 0703 	bic.w	r7, r3, #3
9001c0ca:	45b2      	cmp	sl, r6
9001c0cc:	daca      	bge.n	9001c064 <EwBmpLoadFrame+0x44>
9001c0ce:	4640      	mov	r0, r8
9001c0d0:	4621      	mov	r1, r4
9001c0d2:	f10a 0a01 	add.w	sl, sl, #1
9001c0d6:	44b8      	add	r8, r7
9001c0d8:	f002 ffa7 	bl	9001f02a <EwAdaptByteOrder4>
9001c0dc:	e7f5      	b.n	9001c0ca <EwBmpLoadFrame+0xaa>
9001c0de:	f8be 1000 	ldrh.w	r1, [lr]
9001c0e2:	f10c 0c01 	add.w	ip, ip, #1
9001c0e6:	ea01 0207 	and.w	r2, r1, r7
9001c0ea:	f001 081f 	and.w	r8, r1, #31
9001c0ee:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001c0f2:	0ad2      	lsrs	r2, r2, #11
9001c0f4:	ea42 22c8 	orr.w	r2, r2, r8, lsl #11
9001c0f8:	430a      	orrs	r2, r1
9001c0fa:	f82e 2b02 	strh.w	r2, [lr], #2
9001c0fe:	45a4      	cmp	ip, r4
9001c100:	dbed      	blt.n	9001c0de <EwBmpLoadFrame+0xbe>
9001c102:	3501      	adds	r5, #1
9001c104:	4418      	add	r0, r3
9001c106:	e7bd      	b.n	9001c084 <EwBmpLoadFrame+0x64>
9001c108:	4686      	mov	lr, r0
9001c10a:	f04f 0c00 	mov.w	ip, #0
9001c10e:	e7f6      	b.n	9001c0fe <EwBmpLoadFrame+0xde>
9001c110:	2b01      	cmp	r3, #1
9001c112:	d1b9      	bne.n	9001c088 <EwBmpLoadFrame+0x68>
9001c114:	f8d9 3008 	ldr.w	r3, [r9, #8]
9001c118:	2500      	movs	r5, #0
9001c11a:	f8d9 0000 	ldr.w	r0, [r9]
9001c11e:	ebc4 03a3 	rsb	r3, r4, r3, asr #2
9001c122:	42ac      	cmp	r4, r5
9001c124:	bfac      	ite	ge
9001c126:	191b      	addge	r3, r3, r4
9001c128:	195b      	addlt	r3, r3, r5
9001c12a:	009b      	lsls	r3, r3, #2
9001c12c:	42b5      	cmp	r5, r6
9001c12e:	daab      	bge.n	9001c088 <EwBmpLoadFrame+0x68>
9001c130:	4684      	mov	ip, r0
9001c132:	2700      	movs	r7, #0
9001c134:	e00e      	b.n	9001c154 <EwBmpLoadFrame+0x134>
9001c136:	f8dc 1000 	ldr.w	r1, [ip]
9001c13a:	3701      	adds	r7, #1
9001c13c:	040a      	lsls	r2, r1, #16
9001c13e:	f3c1 4e07 	ubfx	lr, r1, #16, #8
9001c142:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
9001c146:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
9001c14a:	ea42 020e 	orr.w	r2, r2, lr
9001c14e:	430a      	orrs	r2, r1
9001c150:	f84c 2b04 	str.w	r2, [ip], #4
9001c154:	42a7      	cmp	r7, r4
9001c156:	dbee      	blt.n	9001c136 <EwBmpLoadFrame+0x116>
9001c158:	3501      	adds	r5, #1
9001c15a:	4418      	add	r0, r3
9001c15c:	e7e6      	b.n	9001c12c <EwBmpLoadFrame+0x10c>
9001c15e:	2000      	movs	r0, #0
9001c160:	e793      	b.n	9001c08a <EwBmpLoadFrame+0x6a>
9001c162:	bf00      	nop
9001c164:	fffff800 	.word	0xfffff800

9001c168 <EwBmpLoadClut>:
9001c168:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9001c16a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001c16e:	460c      	mov	r4, r1
9001c170:	b363      	cbz	r3, 9001c1cc <EwBmpLoadClut+0x64>
9001c172:	6843      	ldr	r3, [r0, #4]
9001c174:	2b0b      	cmp	r3, #11
9001c176:	d13d      	bne.n	9001c1f4 <EwBmpLoadClut+0x8c>
9001c178:	4f1f      	ldr	r7, [pc, #124]	; (9001c1f8 <EwBmpLoadClut+0x90>)
9001c17a:	f44f 6180 	mov.w	r1, #1024	; 0x400
9001c17e:	6a86      	ldr	r6, [r0, #40]	; 0x28
9001c180:	69a0      	ldr	r0, [r4, #24]
9001c182:	f00a fdbf 	bl	90026d04 <EwZero>
9001c186:	683b      	ldr	r3, [r7, #0]
9001c188:	1d35      	adds	r5, r6, #4
9001c18a:	b13b      	cbz	r3, 9001c19c <EwBmpLoadClut+0x34>
9001c18c:	4a1b      	ldr	r2, [pc, #108]	; (9001c1fc <EwBmpLoadClut+0x94>)
9001c18e:	6812      	ldr	r2, [r2, #0]
9001c190:	42b2      	cmp	r2, r6
9001c192:	d803      	bhi.n	9001c19c <EwBmpLoadClut+0x34>
9001c194:	4a1a      	ldr	r2, [pc, #104]	; (9001c200 <EwBmpLoadClut+0x98>)
9001c196:	6812      	ldr	r2, [r2, #0]
9001c198:	42b2      	cmp	r2, r6
9001c19a:	d21a      	bcs.n	9001c1d2 <EwBmpLoadClut+0x6a>
9001c19c:	6832      	ldr	r2, [r6, #0]
9001c19e:	4629      	mov	r1, r5
9001c1a0:	69a0      	ldr	r0, [r4, #24]
9001c1a2:	0092      	lsls	r2, r2, #2
9001c1a4:	f00a fdb6 	bl	90026d14 <EwCopy>
9001c1a8:	69a2      	ldr	r2, [r4, #24]
9001c1aa:	f502 6080 	add.w	r0, r2, #1024	; 0x400
9001c1ae:	6811      	ldr	r1, [r2, #0]
9001c1b0:	040b      	lsls	r3, r1, #16
9001c1b2:	f3c1 4407 	ubfx	r4, r1, #16, #8
9001c1b6:	f001 21ff 	and.w	r1, r1, #4278255360	; 0xff00ff00
9001c1ba:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
9001c1be:	4323      	orrs	r3, r4
9001c1c0:	430b      	orrs	r3, r1
9001c1c2:	f842 3b04 	str.w	r3, [r2], #4
9001c1c6:	4282      	cmp	r2, r0
9001c1c8:	d1f1      	bne.n	9001c1ae <EwBmpLoadClut+0x46>
9001c1ca:	2301      	movs	r3, #1
9001c1cc:	4618      	mov	r0, r3
9001c1ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001c1d2:	4630      	mov	r0, r6
9001c1d4:	2600      	movs	r6, #0
9001c1d6:	4798      	blx	r3
9001c1d8:	f8d0 8000 	ldr.w	r8, [r0]
9001c1dc:	4546      	cmp	r6, r8
9001c1de:	dae3      	bge.n	9001c1a8 <EwBmpLoadClut+0x40>
9001c1e0:	683b      	ldr	r3, [r7, #0]
9001c1e2:	4628      	mov	r0, r5
9001c1e4:	4798      	blx	r3
9001c1e6:	69a3      	ldr	r3, [r4, #24]
9001c1e8:	6802      	ldr	r2, [r0, #0]
9001c1ea:	3504      	adds	r5, #4
9001c1ec:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
9001c1f0:	3601      	adds	r6, #1
9001c1f2:	e7f3      	b.n	9001c1dc <EwBmpLoadClut+0x74>
9001c1f4:	2300      	movs	r3, #0
9001c1f6:	e7e9      	b.n	9001c1cc <EwBmpLoadClut+0x64>
9001c1f8:	200002fc 	.word	0x200002fc
9001c1fc:	20000300 	.word	0x20000300
9001c200:	20000304 	.word	0x20000304

9001c204 <EwBmpLoadMappingTable>:
9001c204:	6982      	ldr	r2, [r0, #24]
9001c206:	b530      	push	{r4, r5, lr}
9001c208:	4613      	mov	r3, r2
9001c20a:	f64f 75ff 	movw	r5, #65535	; 0xffff
9001c20e:	4618      	mov	r0, r3
9001c210:	f833 4b02 	ldrh.w	r4, [r3], #2
9001c214:	42ac      	cmp	r4, r5
9001c216:	d102      	bne.n	9001c21e <EwBmpLoadMappingTable+0x1a>
9001c218:	1a80      	subs	r0, r0, r2
9001c21a:	1040      	asrs	r0, r0, #1
9001c21c:	bd30      	pop	{r4, r5, pc}
9001c21e:	f821 4b02 	strh.w	r4, [r1], #2
9001c222:	e7f4      	b.n	9001c20e <EwBmpLoadMappingTable+0xa>
9001c224:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c228:	f8df b070 	ldr.w	fp, [pc, #112]	; 9001c29c <EwBmpLoadMappingTable+0x98>
9001c22c:	4680      	mov	r8, r0
9001c22e:	460d      	mov	r5, r1
9001c230:	1e57      	subs	r7, r2, #1
9001c232:	f8db 4000 	ldr.w	r4, [fp]
9001c236:	b14c      	cbz	r4, 9001c24c <EwBmpLoadMappingTable+0x48>
9001c238:	4b16      	ldr	r3, [pc, #88]	; (9001c294 <EwBmpLoadMappingTable+0x90>)
9001c23a:	681b      	ldr	r3, [r3, #0]
9001c23c:	428b      	cmp	r3, r1
9001c23e:	d80e      	bhi.n	9001c25e <EwBmpLoadMappingTable+0x5a>
9001c240:	4b15      	ldr	r3, [pc, #84]	; (9001c298 <EwBmpLoadMappingTable+0x94>)
9001c242:	681c      	ldr	r4, [r3, #0]
9001c244:	428c      	cmp	r4, r1
9001c246:	bf34      	ite	cc
9001c248:	2400      	movcc	r4, #0
9001c24a:	2401      	movcs	r4, #1
9001c24c:	f04f 0a00 	mov.w	sl, #0
9001c250:	45ba      	cmp	sl, r7
9001c252:	dd06      	ble.n	9001c262 <EwBmpLoadMappingTable+0x5e>
9001c254:	f04f 0900 	mov.w	r9, #0
9001c258:	4648      	mov	r0, r9
9001c25a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c25e:	2400      	movs	r4, #0
9001c260:	e7f4      	b.n	9001c24c <EwBmpLoadMappingTable+0x48>
9001c262:	eb0a 0607 	add.w	r6, sl, r7
9001c266:	1076      	asrs	r6, r6, #1
9001c268:	0133      	lsls	r3, r6, #4
9001c26a:	eb05 1906 	add.w	r9, r5, r6, lsl #4
9001c26e:	b174      	cbz	r4, 9001c28e <EwBmpLoadMappingTable+0x8a>
9001c270:	f8db 3000 	ldr.w	r3, [fp]
9001c274:	4648      	mov	r0, r9
9001c276:	4798      	blx	r3
9001c278:	8803      	ldrh	r3, [r0, #0]
9001c27a:	eba8 0303 	sub.w	r3, r8, r3
9001c27e:	2b00      	cmp	r3, #0
9001c280:	d0ea      	beq.n	9001c258 <EwBmpLoadMappingTable+0x54>
9001c282:	bfcc      	ite	gt
9001c284:	f106 0a01 	addgt.w	sl, r6, #1
9001c288:	f106 37ff 	addle.w	r7, r6, #4294967295
9001c28c:	e7e0      	b.n	9001c250 <EwBmpLoadMappingTable+0x4c>
9001c28e:	5aeb      	ldrh	r3, [r5, r3]
9001c290:	e7f3      	b.n	9001c27a <EwBmpLoadMappingTable+0x76>
9001c292:	bf00      	nop
9001c294:	20000300 	.word	0x20000300
9001c298:	20000304 	.word	0x20000304
9001c29c:	200002fc 	.word	0x200002fc

9001c2a0 <EwFntInit>:
9001c2a0:	2001      	movs	r0, #1
9001c2a2:	4770      	bx	lr

9001c2a4 <EwFntDone>:
9001c2a4:	4770      	bx	lr

9001c2a6 <EwFntGetResource>:
9001c2a6:	2000      	movs	r0, #0
9001c2a8:	4770      	bx	lr

9001c2aa <EwFntOpen>:
9001c2aa:	b508      	push	{r3, lr}
9001c2ac:	b158      	cbz	r0, 9001c2c6 <EwFntOpen+0x1c>
9001c2ae:	6802      	ldr	r2, [r0, #0]
9001c2b0:	4b05      	ldr	r3, [pc, #20]	; (9001c2c8 <EwFntOpen+0x1e>)
9001c2b2:	429a      	cmp	r2, r3
9001c2b4:	d007      	beq.n	9001c2c6 <EwFntOpen+0x1c>
9001c2b6:	4601      	mov	r1, r0
9001c2b8:	2200      	movs	r2, #0
9001c2ba:	20cf      	movs	r0, #207	; 0xcf
9001c2bc:	f001 f8de 	bl	9001d47c <EwErrorPD>
9001c2c0:	f00a fcfc 	bl	90026cbc <EwPanic>
9001c2c4:	2000      	movs	r0, #0
9001c2c6:	bd08      	pop	{r3, pc}
9001c2c8:	666e7464 	.word	0x666e7464

9001c2cc <EwFntClose>:
9001c2cc:	4770      	bx	lr

9001c2ce <EwFntGetResourceName>:
9001c2ce:	b100      	cbz	r0, 9001c2d2 <EwFntGetResourceName+0x4>
9001c2d0:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
9001c2d2:	4770      	bx	lr

9001c2d4 <EwFntGetMetrics>:
9001c2d4:	b510      	push	{r4, lr}
9001c2d6:	6844      	ldr	r4, [r0, #4]
9001c2d8:	600c      	str	r4, [r1, #0]
9001c2da:	6881      	ldr	r1, [r0, #8]
9001c2dc:	6011      	str	r1, [r2, #0]
9001c2de:	68c2      	ldr	r2, [r0, #12]
9001c2e0:	601a      	str	r2, [r3, #0]
9001c2e2:	8d02      	ldrh	r2, [r0, #40]	; 0x28
9001c2e4:	2001      	movs	r0, #1
9001c2e6:	9b02      	ldr	r3, [sp, #8]
9001c2e8:	801a      	strh	r2, [r3, #0]
9001c2ea:	bd10      	pop	{r4, pc}

9001c2ec <EwFntGetGlyphMetrics>:
9001c2ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c2f0:	4604      	mov	r4, r0
9001c2f2:	4617      	mov	r7, r2
9001c2f4:	4608      	mov	r0, r1
9001c2f6:	461e      	mov	r6, r3
9001c2f8:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
9001c2fc:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
9001c300:	e9dd a908 	ldrd	sl, r9, [sp, #32]
9001c304:	f7ff ff8e 	bl	9001c224 <EwBmpLoadMappingTable+0x20>
9001c308:	4604      	mov	r4, r0
9001c30a:	b368      	cbz	r0, 9001c368 <EwFntGetGlyphMetrics+0x7c>
9001c30c:	4d20      	ldr	r5, [pc, #128]	; (9001c390 <EwFntGetGlyphMetrics+0xa4>)
9001c30e:	682b      	ldr	r3, [r5, #0]
9001c310:	b363      	cbz	r3, 9001c36c <EwFntGetGlyphMetrics+0x80>
9001c312:	4a20      	ldr	r2, [pc, #128]	; (9001c394 <EwFntGetGlyphMetrics+0xa8>)
9001c314:	6812      	ldr	r2, [r2, #0]
9001c316:	4282      	cmp	r2, r0
9001c318:	d828      	bhi.n	9001c36c <EwFntGetGlyphMetrics+0x80>
9001c31a:	4a1f      	ldr	r2, [pc, #124]	; (9001c398 <EwFntGetGlyphMetrics+0xac>)
9001c31c:	6812      	ldr	r2, [r2, #0]
9001c31e:	4282      	cmp	r2, r0
9001c320:	d324      	bcc.n	9001c36c <EwFntGetGlyphMetrics+0x80>
9001c322:	3002      	adds	r0, #2
9001c324:	4798      	blx	r3
9001c326:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c32a:	1d20      	adds	r0, r4, #4
9001c32c:	603b      	str	r3, [r7, #0]
9001c32e:	682b      	ldr	r3, [r5, #0]
9001c330:	4798      	blx	r3
9001c332:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c336:	1da0      	adds	r0, r4, #6
9001c338:	6033      	str	r3, [r6, #0]
9001c33a:	682b      	ldr	r3, [r5, #0]
9001c33c:	4798      	blx	r3
9001c33e:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c342:	f104 0008 	add.w	r0, r4, #8
9001c346:	f8ca 3000 	str.w	r3, [sl]
9001c34a:	682b      	ldr	r3, [r5, #0]
9001c34c:	4798      	blx	r3
9001c34e:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c352:	f104 000a 	add.w	r0, r4, #10
9001c356:	f8c9 3000 	str.w	r3, [r9]
9001c35a:	682b      	ldr	r3, [r5, #0]
9001c35c:	4798      	blx	r3
9001c35e:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c362:	2001      	movs	r0, #1
9001c364:	f8c8 3000 	str.w	r3, [r8]
9001c368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c36c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001c370:	603b      	str	r3, [r7, #0]
9001c372:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001c376:	6033      	str	r3, [r6, #0]
9001c378:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001c37c:	f8ca 3000 	str.w	r3, [sl]
9001c380:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
9001c384:	f8c9 3000 	str.w	r3, [r9]
9001c388:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001c38c:	e7e9      	b.n	9001c362 <EwFntGetGlyphMetrics+0x76>
9001c38e:	bf00      	nop
9001c390:	200002fc 	.word	0x200002fc
9001c394:	20000300 	.word	0x20000300
9001c398:	20000304 	.word	0x20000304

9001c39c <EwFntGetKerning>:
9001c39c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c3a0:	f8df a0b4 	ldr.w	sl, [pc, #180]	; 9001c458 <EwFntGetKerning+0xbc>
9001c3a4:	4681      	mov	r9, r0
9001c3a6:	4688      	mov	r8, r1
9001c3a8:	4614      	mov	r4, r2
9001c3aa:	f8da 3000 	ldr.w	r3, [sl]
9001c3ae:	6a06      	ldr	r6, [r0, #32]
9001c3b0:	b183      	cbz	r3, 9001c3d4 <EwFntGetKerning+0x38>
9001c3b2:	4a27      	ldr	r2, [pc, #156]	; (9001c450 <EwFntGetKerning+0xb4>)
9001c3b4:	6812      	ldr	r2, [r2, #0]
9001c3b6:	42b2      	cmp	r2, r6
9001c3b8:	d80c      	bhi.n	9001c3d4 <EwFntGetKerning+0x38>
9001c3ba:	4a26      	ldr	r2, [pc, #152]	; (9001c454 <EwFntGetKerning+0xb8>)
9001c3bc:	6817      	ldr	r7, [r2, #0]
9001c3be:	42b7      	cmp	r7, r6
9001c3c0:	bf34      	ite	cc
9001c3c2:	2700      	movcc	r7, #0
9001c3c4:	2701      	movcs	r7, #1
9001c3c6:	f1b8 0f00 	cmp.w	r8, #0
9001c3ca:	d105      	bne.n	9001c3d8 <EwFntGetKerning+0x3c>
9001c3cc:	2000      	movs	r0, #0
9001c3ce:	b003      	add	sp, #12
9001c3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c3d4:	2700      	movs	r7, #0
9001c3d6:	e7f6      	b.n	9001c3c6 <EwFntGetKerning+0x2a>
9001c3d8:	2c00      	cmp	r4, #0
9001c3da:	d0f7      	beq.n	9001c3cc <EwFntGetKerning+0x30>
9001c3dc:	2e00      	cmp	r6, #0
9001c3de:	d0f5      	beq.n	9001c3cc <EwFntGetKerning+0x30>
9001c3e0:	b3a7      	cbz	r7, 9001c44c <EwFntGetKerning+0xb0>
9001c3e2:	4630      	mov	r0, r6
9001c3e4:	4798      	blx	r3
9001c3e6:	6805      	ldr	r5, [r0, #0]
9001c3e8:	2d00      	cmp	r5, #0
9001c3ea:	ddef      	ble.n	9001c3cc <EwFntGetKerning+0x30>
9001c3ec:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
9001c3f0:	3d02      	subs	r5, #2
9001c3f2:	f04f 0b00 	mov.w	fp, #0
9001c3f6:	45ab      	cmp	fp, r5
9001c3f8:	dce8      	bgt.n	9001c3cc <EwFntGetKerning+0x30>
9001c3fa:	eb0b 0805 	add.w	r8, fp, r5
9001c3fe:	ea4f 0868 	mov.w	r8, r8, asr #1
9001c402:	f108 0201 	add.w	r2, r8, #1
9001c406:	eb06 0082 	add.w	r0, r6, r2, lsl #2
9001c40a:	b187      	cbz	r7, 9001c42e <EwFntGetKerning+0x92>
9001c40c:	f8da 3000 	ldr.w	r3, [sl]
9001c410:	9201      	str	r2, [sp, #4]
9001c412:	4798      	blx	r3
9001c414:	6803      	ldr	r3, [r0, #0]
9001c416:	9a01      	ldr	r2, [sp, #4]
9001c418:	1ae3      	subs	r3, r4, r3
9001c41a:	d111      	bne.n	9001c440 <EwFntGetKerning+0xa4>
9001c41c:	f8d9 0024 	ldr.w	r0, [r9, #36]	; 0x24
9001c420:	f8da 3000 	ldr.w	r3, [sl]
9001c424:	4440      	add	r0, r8
9001c426:	4798      	blx	r3
9001c428:	7800      	ldrb	r0, [r0, #0]
9001c42a:	3880      	subs	r0, #128	; 0x80
9001c42c:	e7cf      	b.n	9001c3ce <EwFntGetKerning+0x32>
9001c42e:	f856 3022 	ldr.w	r3, [r6, r2, lsl #2]
9001c432:	1ae3      	subs	r3, r4, r3
9001c434:	d104      	bne.n	9001c440 <EwFntGetKerning+0xa4>
9001c436:	f8d9 3024 	ldr.w	r3, [r9, #36]	; 0x24
9001c43a:	f813 0008 	ldrb.w	r0, [r3, r8]
9001c43e:	e7f4      	b.n	9001c42a <EwFntGetKerning+0x8e>
9001c440:	2b00      	cmp	r3, #0
9001c442:	bfb4      	ite	lt
9001c444:	f108 35ff 	addlt.w	r5, r8, #4294967295
9001c448:	4693      	movge	fp, r2
9001c44a:	e7d4      	b.n	9001c3f6 <EwFntGetKerning+0x5a>
9001c44c:	6835      	ldr	r5, [r6, #0]
9001c44e:	e7cb      	b.n	9001c3e8 <EwFntGetKerning+0x4c>
9001c450:	20000300 	.word	0x20000300
9001c454:	20000304 	.word	0x20000304
9001c458:	200002fc 	.word	0x200002fc

9001c45c <EwFntIsGlyphAvailable>:
9001c45c:	b508      	push	{r3, lr}
9001c45e:	4603      	mov	r3, r0
9001c460:	4608      	mov	r0, r1
9001c462:	e9d3 2105 	ldrd	r2, r1, [r3, #20]
9001c466:	f7ff fedd 	bl	9001c224 <EwBmpLoadMappingTable+0x20>
9001c46a:	3800      	subs	r0, #0
9001c46c:	bf18      	it	ne
9001c46e:	2001      	movne	r0, #1
9001c470:	bd08      	pop	{r3, pc}

9001c472 <EwFntLoadGlyph>:
9001c472:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c476:	4681      	mov	r9, r0
9001c478:	b087      	sub	sp, #28
9001c47a:	4608      	mov	r0, r1
9001c47c:	9203      	str	r2, [sp, #12]
9001c47e:	e9d9 2105 	ldrd	r2, r1, [r9, #20]
9001c482:	f7ff fecf 	bl	9001c224 <EwBmpLoadMappingTable+0x20>
9001c486:	4606      	mov	r6, r0
9001c488:	2800      	cmp	r0, #0
9001c48a:	f000 818a 	beq.w	9001c7a2 <EwFntLoadGlyph+0x330>
9001c48e:	4fb2      	ldr	r7, [pc, #712]	; (9001c758 <EwFntLoadGlyph+0x2e6>)
9001c490:	683b      	ldr	r3, [r7, #0]
9001c492:	2b00      	cmp	r3, #0
9001c494:	d039      	beq.n	9001c50a <EwFntLoadGlyph+0x98>
9001c496:	4ab1      	ldr	r2, [pc, #708]	; (9001c75c <EwFntLoadGlyph+0x2ea>)
9001c498:	6812      	ldr	r2, [r2, #0]
9001c49a:	4282      	cmp	r2, r0
9001c49c:	d835      	bhi.n	9001c50a <EwFntLoadGlyph+0x98>
9001c49e:	4ab0      	ldr	r2, [pc, #704]	; (9001c760 <EwFntLoadGlyph+0x2ee>)
9001c4a0:	6812      	ldr	r2, [r2, #0]
9001c4a2:	4282      	cmp	r2, r0
9001c4a4:	d331      	bcc.n	9001c50a <EwFntLoadGlyph+0x98>
9001c4a6:	3006      	adds	r0, #6
9001c4a8:	4798      	blx	r3
9001c4aa:	683b      	ldr	r3, [r7, #0]
9001c4ac:	f9b0 8000 	ldrsh.w	r8, [r0]
9001c4b0:	f106 0008 	add.w	r0, r6, #8
9001c4b4:	4798      	blx	r3
9001c4b6:	f9b0 3000 	ldrsh.w	r3, [r0]
9001c4ba:	f106 000c 	add.w	r0, r6, #12
9001c4be:	9302      	str	r3, [sp, #8]
9001c4c0:	683b      	ldr	r3, [r7, #0]
9001c4c2:	4798      	blx	r3
9001c4c4:	683b      	ldr	r3, [r7, #0]
9001c4c6:	6804      	ldr	r4, [r0, #0]
9001c4c8:	f106 001c 	add.w	r0, r6, #28
9001c4cc:	4798      	blx	r3
9001c4ce:	6805      	ldr	r5, [r0, #0]
9001c4d0:	f1b8 0f00 	cmp.w	r8, #0
9001c4d4:	f000 8164 	beq.w	9001c7a0 <EwFntLoadGlyph+0x32e>
9001c4d8:	9b02      	ldr	r3, [sp, #8]
9001c4da:	2b00      	cmp	r3, #0
9001c4dc:	f000 8160 	beq.w	9001c7a0 <EwFntLoadGlyph+0x32e>
9001c4e0:	fb03 f308 	mul.w	r3, r3, r8
9001c4e4:	1b2d      	subs	r5, r5, r4
9001c4e6:	9301      	str	r3, [sp, #4]
9001c4e8:	9801      	ldr	r0, [sp, #4]
9001c4ea:	f00a fbe3 	bl	90026cb4 <EwAlloc>
9001c4ee:	4606      	mov	r6, r0
9001c4f0:	2800      	cmp	r0, #0
9001c4f2:	f040 815a 	bne.w	9001c7aa <EwFntLoadGlyph+0x338>
9001c4f6:	2023      	movs	r0, #35	; 0x23
9001c4f8:	f001 ff5c 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001c4fc:	4606      	mov	r6, r0
9001c4fe:	2800      	cmp	r0, #0
9001c500:	d1f2      	bne.n	9001c4e8 <EwFntLoadGlyph+0x76>
9001c502:	2023      	movs	r0, #35	; 0x23
9001c504:	f000 ffa4 	bl	9001d450 <EwError>
9001c508:	e14b      	b.n	9001c7a2 <EwFntLoadGlyph+0x330>
9001c50a:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
9001c50e:	f9b6 8006 	ldrsh.w	r8, [r6, #6]
9001c512:	68f4      	ldr	r4, [r6, #12]
9001c514:	69f5      	ldr	r5, [r6, #28]
9001c516:	9302      	str	r3, [sp, #8]
9001c518:	e7da      	b.n	9001c4d0 <EwFntLoadGlyph+0x5e>
9001c51a:	f04f 0a00 	mov.w	sl, #0
9001c51e:	e179      	b.n	9001c814 <EwFntLoadGlyph+0x3a2>
9001c520:	f011 0f01 	tst.w	r1, #1
9001c524:	4a8f      	ldr	r2, [pc, #572]	; (9001c764 <EwFntLoadGlyph+0x2f2>)
9001c526:	bf16      	itet	ne
9001c528:	eb02 0545 	addne.w	r5, r2, r5, lsl #1
9001c52c:	f812 5015 	ldrbeq.w	r5, [r2, r5, lsl #1]
9001c530:	786d      	ldrbne	r5, [r5, #1]
9001c532:	2d0f      	cmp	r5, #15
9001c534:	dd1e      	ble.n	9001c574 <EwFntLoadGlyph+0x102>
9001c536:	4699      	mov	r9, r3
9001c538:	f1a5 0c10 	sub.w	ip, r5, #16
9001c53c:	f345 0500 	sbfx	r5, r5, #0, #1
9001c540:	f809 5b01 	strb.w	r5, [r9], #1
9001c544:	45cb      	cmp	fp, r9
9001c546:	d013      	beq.n	9001c570 <EwFntLoadGlyph+0xfe>
9001c548:	f103 0902 	add.w	r9, r3, #2
9001c54c:	f34c 0540 	sbfx	r5, ip, #1, #1
9001c550:	45cb      	cmp	fp, r9
9001c552:	705d      	strb	r5, [r3, #1]
9001c554:	d00c      	beq.n	9001c570 <EwFntLoadGlyph+0xfe>
9001c556:	f103 0903 	add.w	r9, r3, #3
9001c55a:	f34c 0580 	sbfx	r5, ip, #2, #1
9001c55e:	45cb      	cmp	fp, r9
9001c560:	709d      	strb	r5, [r3, #2]
9001c562:	d005      	beq.n	9001c570 <EwFntLoadGlyph+0xfe>
9001c564:	f34c 0cc0 	sbfx	ip, ip, #3, #1
9001c568:	f103 0904 	add.w	r9, r3, #4
9001c56c:	f883 c003 	strb.w	ip, [r3, #3]
9001c570:	2500      	movs	r5, #0
9001c572:	e000      	b.n	9001c576 <EwFntLoadGlyph+0x104>
9001c574:	4699      	mov	r9, r3
9001c576:	3401      	adds	r4, #1
9001c578:	06e3      	lsls	r3, r4, #27
9001c57a:	d002      	beq.n	9001c582 <EwFntLoadGlyph+0x110>
9001c57c:	0849      	lsrs	r1, r1, #1
9001c57e:	464b      	mov	r3, r9
9001c580:	e166      	b.n	9001c850 <EwFntLoadGlyph+0x3de>
9001c582:	f1ba 0f00 	cmp.w	sl, #0
9001c586:	d00a      	beq.n	9001c59e <EwFntLoadGlyph+0x12c>
9001c588:	4b77      	ldr	r3, [pc, #476]	; (9001c768 <EwFntLoadGlyph+0x2f6>)
9001c58a:	681b      	ldr	r3, [r3, #0]
9001c58c:	3b01      	subs	r3, #1
9001c58e:	421f      	tst	r7, r3
9001c590:	d105      	bne.n	9001c59e <EwFntLoadGlyph+0x12c>
9001c592:	f8de 3000 	ldr.w	r3, [lr]
9001c596:	4638      	mov	r0, r7
9001c598:	4798      	blx	r3
9001c59a:	f8df e1bc 	ldr.w	lr, [pc, #444]	; 9001c758 <EwFntLoadGlyph+0x2e6>
9001c59e:	f850 1b04 	ldr.w	r1, [r0], #4
9001c5a2:	3704      	adds	r7, #4
9001c5a4:	e7eb      	b.n	9001c57e <EwFntLoadGlyph+0x10c>
9001c5a6:	9b01      	ldr	r3, [sp, #4]
9001c5a8:	f8d9 101c 	ldr.w	r1, [r9, #28]
9001c5ac:	18f3      	adds	r3, r6, r3
9001c5ae:	9304      	str	r3, [sp, #16]
9001c5b0:	683b      	ldr	r3, [r7, #0]
9001c5b2:	2b00      	cmp	r3, #0
9001c5b4:	d04d      	beq.n	9001c652 <EwFntLoadGlyph+0x1e0>
9001c5b6:	4a69      	ldr	r2, [pc, #420]	; (9001c75c <EwFntLoadGlyph+0x2ea>)
9001c5b8:	6812      	ldr	r2, [r2, #0]
9001c5ba:	4291      	cmp	r1, r2
9001c5bc:	d349      	bcc.n	9001c652 <EwFntLoadGlyph+0x1e0>
9001c5be:	4a68      	ldr	r2, [pc, #416]	; (9001c760 <EwFntLoadGlyph+0x2ee>)
9001c5c0:	6812      	ldr	r2, [r2, #0]
9001c5c2:	4291      	cmp	r1, r2
9001c5c4:	bf8c      	ite	hi
9001c5c6:	f04f 0900 	movhi.w	r9, #0
9001c5ca:	f04f 0901 	movls.w	r9, #1
9001c5ce:	2c00      	cmp	r4, #0
9001c5d0:	4622      	mov	r2, r4
9001c5d2:	bfb8      	it	lt
9001c5d4:	f104 021f 	addlt.w	r2, r4, #31
9001c5d8:	1152      	asrs	r2, r2, #5
9001c5da:	eb01 0782 	add.w	r7, r1, r2, lsl #2
9001c5de:	4262      	negs	r2, r4
9001c5e0:	f004 041f 	and.w	r4, r4, #31
9001c5e4:	f002 021f 	and.w	r2, r2, #31
9001c5e8:	4638      	mov	r0, r7
9001c5ea:	bf58      	it	pl
9001c5ec:	4254      	negpl	r4, r2
9001c5ee:	f1b9 0f00 	cmp.w	r9, #0
9001c5f2:	d000      	beq.n	9001c5f6 <EwFntLoadGlyph+0x184>
9001c5f4:	4798      	blx	r3
9001c5f6:	f850 3b04 	ldr.w	r3, [r0], #4
9001c5fa:	192a      	adds	r2, r5, r4
9001c5fc:	3704      	adds	r7, #4
9001c5fe:	46b4      	mov	ip, r6
9001c600:	40e3      	lsrs	r3, r4
9001c602:	2500      	movs	r5, #0
9001c604:	f8df b15c 	ldr.w	fp, [pc, #348]	; 9001c764 <EwFntLoadGlyph+0x2f2>
9001c608:	4953      	ldr	r1, [pc, #332]	; (9001c758 <EwFntLoadGlyph+0x2e6>)
9001c60a:	9205      	str	r2, [sp, #20]
9001c60c:	9a05      	ldr	r2, [sp, #20]
9001c60e:	4294      	cmp	r4, r2
9001c610:	f000 8122 	beq.w	9001c858 <EwFntLoadGlyph+0x3e6>
9001c614:	07da      	lsls	r2, r3, #31
9001c616:	bf4a      	itet	mi
9001c618:	eb0b 0545 	addmi.w	r5, fp, r5, lsl #1
9001c61c:	f81b 5015 	ldrbpl.w	r5, [fp, r5, lsl #1]
9001c620:	786d      	ldrbmi	r5, [r5, #1]
9001c622:	2d0f      	cmp	r5, #15
9001c624:	dd18      	ble.n	9001c658 <EwFntLoadGlyph+0x1e6>
9001c626:	f1a5 0e10 	sub.w	lr, r5, #16
9001c62a:	f005 0503 	and.w	r5, r5, #3
9001c62e:	46e2      	mov	sl, ip
9001c630:	445d      	add	r5, fp
9001c632:	7fad      	ldrb	r5, [r5, #30]
9001c634:	f80a 5b01 	strb.w	r5, [sl], #1
9001c638:	9d04      	ldr	r5, [sp, #16]
9001c63a:	4555      	cmp	r5, sl
9001c63c:	d007      	beq.n	9001c64e <EwFntLoadGlyph+0x1dc>
9001c63e:	eb0b 0eae 	add.w	lr, fp, lr, asr #2
9001c642:	f10c 0a02 	add.w	sl, ip, #2
9001c646:	f89e 501e 	ldrb.w	r5, [lr, #30]
9001c64a:	f88c 5001 	strb.w	r5, [ip, #1]
9001c64e:	2500      	movs	r5, #0
9001c650:	e003      	b.n	9001c65a <EwFntLoadGlyph+0x1e8>
9001c652:	f04f 0900 	mov.w	r9, #0
9001c656:	e7ba      	b.n	9001c5ce <EwFntLoadGlyph+0x15c>
9001c658:	46e2      	mov	sl, ip
9001c65a:	3401      	adds	r4, #1
9001c65c:	06e2      	lsls	r2, r4, #27
9001c65e:	d002      	beq.n	9001c666 <EwFntLoadGlyph+0x1f4>
9001c660:	085b      	lsrs	r3, r3, #1
9001c662:	46d4      	mov	ip, sl
9001c664:	e7d2      	b.n	9001c60c <EwFntLoadGlyph+0x19a>
9001c666:	f1b9 0f00 	cmp.w	r9, #0
9001c66a:	d008      	beq.n	9001c67e <EwFntLoadGlyph+0x20c>
9001c66c:	4b3e      	ldr	r3, [pc, #248]	; (9001c768 <EwFntLoadGlyph+0x2f6>)
9001c66e:	681b      	ldr	r3, [r3, #0]
9001c670:	3b01      	subs	r3, #1
9001c672:	421f      	tst	r7, r3
9001c674:	d103      	bne.n	9001c67e <EwFntLoadGlyph+0x20c>
9001c676:	680b      	ldr	r3, [r1, #0]
9001c678:	4638      	mov	r0, r7
9001c67a:	4798      	blx	r3
9001c67c:	4936      	ldr	r1, [pc, #216]	; (9001c758 <EwFntLoadGlyph+0x2e6>)
9001c67e:	f850 3b04 	ldr.w	r3, [r0], #4
9001c682:	3704      	adds	r7, #4
9001c684:	e7ed      	b.n	9001c662 <EwFntLoadGlyph+0x1f0>
9001c686:	683b      	ldr	r3, [r7, #0]
9001c688:	f8d9 101c 	ldr.w	r1, [r9, #28]
9001c68c:	2b00      	cmp	r3, #0
9001c68e:	d045      	beq.n	9001c71c <EwFntLoadGlyph+0x2aa>
9001c690:	4a32      	ldr	r2, [pc, #200]	; (9001c75c <EwFntLoadGlyph+0x2ea>)
9001c692:	6812      	ldr	r2, [r2, #0]
9001c694:	4291      	cmp	r1, r2
9001c696:	d341      	bcc.n	9001c71c <EwFntLoadGlyph+0x2aa>
9001c698:	4a31      	ldr	r2, [pc, #196]	; (9001c760 <EwFntLoadGlyph+0x2ee>)
9001c69a:	6812      	ldr	r2, [r2, #0]
9001c69c:	4291      	cmp	r1, r2
9001c69e:	bf8c      	ite	hi
9001c6a0:	f04f 0900 	movhi.w	r9, #0
9001c6a4:	f04f 0901 	movls.w	r9, #1
9001c6a8:	2c00      	cmp	r4, #0
9001c6aa:	4622      	mov	r2, r4
9001c6ac:	bfb8      	it	lt
9001c6ae:	f104 021f 	addlt.w	r2, r4, #31
9001c6b2:	1152      	asrs	r2, r2, #5
9001c6b4:	eb01 0782 	add.w	r7, r1, r2, lsl #2
9001c6b8:	4262      	negs	r2, r4
9001c6ba:	f004 041f 	and.w	r4, r4, #31
9001c6be:	f002 021f 	and.w	r2, r2, #31
9001c6c2:	4638      	mov	r0, r7
9001c6c4:	bf58      	it	pl
9001c6c6:	4254      	negpl	r4, r2
9001c6c8:	f1b9 0f00 	cmp.w	r9, #0
9001c6cc:	d000      	beq.n	9001c6d0 <EwFntLoadGlyph+0x25e>
9001c6ce:	4798      	blx	r3
9001c6d0:	f850 3b04 	ldr.w	r3, [r0], #4
9001c6d4:	192a      	adds	r2, r5, r4
9001c6d6:	3704      	adds	r7, #4
9001c6d8:	46b2      	mov	sl, r6
9001c6da:	40e3      	lsrs	r3, r4
9001c6dc:	2500      	movs	r5, #0
9001c6de:	f8df b084 	ldr.w	fp, [pc, #132]	; 9001c764 <EwFntLoadGlyph+0x2f2>
9001c6e2:	f8df c084 	ldr.w	ip, [pc, #132]	; 9001c768 <EwFntLoadGlyph+0x2f6>
9001c6e6:	491c      	ldr	r1, [pc, #112]	; (9001c758 <EwFntLoadGlyph+0x2e6>)
9001c6e8:	9204      	str	r2, [sp, #16]
9001c6ea:	9a04      	ldr	r2, [sp, #16]
9001c6ec:	4294      	cmp	r4, r2
9001c6ee:	f000 80b3 	beq.w	9001c858 <EwFntLoadGlyph+0x3e6>
9001c6f2:	07da      	lsls	r2, r3, #31
9001c6f4:	f104 0401 	add.w	r4, r4, #1
9001c6f8:	bf4a      	itet	mi
9001c6fa:	eb0b 0545 	addmi.w	r5, fp, r5, lsl #1
9001c6fe:	f81b 5015 	ldrbpl.w	r5, [fp, r5, lsl #1]
9001c702:	786d      	ldrbmi	r5, [r5, #1]
9001c704:	2d0f      	cmp	r5, #15
9001c706:	bfc1      	itttt	gt
9001c708:	3d10      	subgt	r5, #16
9001c70a:	ea45 1505 	orrgt.w	r5, r5, r5, lsl #4
9001c70e:	f80a 5b01 	strbgt.w	r5, [sl], #1
9001c712:	2500      	movgt	r5, #0
9001c714:	06e2      	lsls	r2, r4, #27
9001c716:	d004      	beq.n	9001c722 <EwFntLoadGlyph+0x2b0>
9001c718:	085b      	lsrs	r3, r3, #1
9001c71a:	e7e6      	b.n	9001c6ea <EwFntLoadGlyph+0x278>
9001c71c:	f04f 0900 	mov.w	r9, #0
9001c720:	e7c2      	b.n	9001c6a8 <EwFntLoadGlyph+0x236>
9001c722:	f1b9 0f00 	cmp.w	r9, #0
9001c726:	d00a      	beq.n	9001c73e <EwFntLoadGlyph+0x2cc>
9001c728:	f8dc 3000 	ldr.w	r3, [ip]
9001c72c:	3b01      	subs	r3, #1
9001c72e:	421f      	tst	r7, r3
9001c730:	d105      	bne.n	9001c73e <EwFntLoadGlyph+0x2cc>
9001c732:	680b      	ldr	r3, [r1, #0]
9001c734:	4638      	mov	r0, r7
9001c736:	4798      	blx	r3
9001c738:	f8df c02c 	ldr.w	ip, [pc, #44]	; 9001c768 <EwFntLoadGlyph+0x2f6>
9001c73c:	4906      	ldr	r1, [pc, #24]	; (9001c758 <EwFntLoadGlyph+0x2e6>)
9001c73e:	f850 3b04 	ldr.w	r3, [r0], #4
9001c742:	3704      	adds	r7, #4
9001c744:	e7d1      	b.n	9001c6ea <EwFntLoadGlyph+0x278>
9001c746:	f812 0b01 	ldrb.w	r0, [r2], #1
9001c74a:	f811 4b01 	ldrb.w	r4, [r1], #1
9001c74e:	4060      	eors	r0, r4
9001c750:	f801 0c01 	strb.w	r0, [r1, #-1]
9001c754:	e087      	b.n	9001c866 <EwFntLoadGlyph+0x3f4>
9001c756:	bf00      	nop
9001c758:	200002fc 	.word	0x200002fc
9001c75c:	20000300 	.word	0x20000300
9001c760:	20000304 	.word	0x20000304
9001c764:	90032f7c 	.word	0x90032f7c
9001c768:	20000318 	.word	0x20000318
9001c76c:	f813 cb01 	ldrb.w	ip, [r3], #1
9001c770:	f804 cf01 	strb.w	ip, [r4, #1]!
9001c774:	eba7 0c03 	sub.w	ip, r7, r3
9001c778:	f1bc 0f00 	cmp.w	ip, #0
9001c77c:	dcf6      	bgt.n	9001c76c <EwFntLoadGlyph+0x2fa>
9001c77e:	9b03      	ldr	r3, [sp, #12]
9001c780:	442a      	add	r2, r5
9001c782:	3801      	subs	r0, #1
9001c784:	689b      	ldr	r3, [r3, #8]
9001c786:	eba3 0308 	sub.w	r3, r3, r8
9001c78a:	442b      	add	r3, r5
9001c78c:	4419      	add	r1, r3
9001c78e:	e073      	b.n	9001c878 <EwFntLoadGlyph+0x406>
9001c790:	4630      	mov	r0, r6
9001c792:	f00a fa91 	bl	90026cb8 <EwFree>
9001c796:	4a3c      	ldr	r2, [pc, #240]	; (9001c888 <EwFntLoadGlyph+0x416>)
9001c798:	9901      	ldr	r1, [sp, #4]
9001c79a:	6813      	ldr	r3, [r2, #0]
9001c79c:	1a5b      	subs	r3, r3, r1
9001c79e:	6013      	str	r3, [r2, #0]
9001c7a0:	2601      	movs	r6, #1
9001c7a2:	4630      	mov	r0, r6
9001c7a4:	b007      	add	sp, #28
9001c7a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c7aa:	4a37      	ldr	r2, [pc, #220]	; (9001c888 <EwFntLoadGlyph+0x416>)
9001c7ac:	9901      	ldr	r1, [sp, #4]
9001c7ae:	6813      	ldr	r3, [r2, #0]
9001c7b0:	440b      	add	r3, r1
9001c7b2:	4936      	ldr	r1, [pc, #216]	; (9001c88c <EwFntLoadGlyph+0x41a>)
9001c7b4:	6013      	str	r3, [r2, #0]
9001c7b6:	680a      	ldr	r2, [r1, #0]
9001c7b8:	4293      	cmp	r3, r2
9001c7ba:	dd00      	ble.n	9001c7be <EwFntLoadGlyph+0x34c>
9001c7bc:	600b      	str	r3, [r1, #0]
9001c7be:	4a34      	ldr	r2, [pc, #208]	; (9001c890 <EwFntLoadGlyph+0x41e>)
9001c7c0:	4934      	ldr	r1, [pc, #208]	; (9001c894 <EwFntLoadGlyph+0x422>)
9001c7c2:	6812      	ldr	r2, [r2, #0]
9001c7c4:	6809      	ldr	r1, [r1, #0]
9001c7c6:	440a      	add	r2, r1
9001c7c8:	4933      	ldr	r1, [pc, #204]	; (9001c898 <EwFntLoadGlyph+0x426>)
9001c7ca:	4413      	add	r3, r2
9001c7cc:	680a      	ldr	r2, [r1, #0]
9001c7ce:	4293      	cmp	r3, r2
9001c7d0:	bfc8      	it	gt
9001c7d2:	600b      	strgt	r3, [r1, #0]
9001c7d4:	f8d9 3010 	ldr.w	r3, [r9, #16]
9001c7d8:	2b04      	cmp	r3, #4
9001c7da:	f43f aee4 	beq.w	9001c5a6 <EwFntLoadGlyph+0x134>
9001c7de:	2b10      	cmp	r3, #16
9001c7e0:	f43f af51 	beq.w	9001c686 <EwFntLoadGlyph+0x214>
9001c7e4:	2b02      	cmp	r3, #2
9001c7e6:	d137      	bne.n	9001c858 <EwFntLoadGlyph+0x3e6>
9001c7e8:	9b01      	ldr	r3, [sp, #4]
9001c7ea:	f8d9 101c 	ldr.w	r1, [r9, #28]
9001c7ee:	eb06 0b03 	add.w	fp, r6, r3
9001c7f2:	683b      	ldr	r3, [r7, #0]
9001c7f4:	2b00      	cmp	r3, #0
9001c7f6:	f43f ae90 	beq.w	9001c51a <EwFntLoadGlyph+0xa8>
9001c7fa:	4a28      	ldr	r2, [pc, #160]	; (9001c89c <EwFntLoadGlyph+0x42a>)
9001c7fc:	6812      	ldr	r2, [r2, #0]
9001c7fe:	4291      	cmp	r1, r2
9001c800:	f4ff ae8b 	bcc.w	9001c51a <EwFntLoadGlyph+0xa8>
9001c804:	4a26      	ldr	r2, [pc, #152]	; (9001c8a0 <EwFntLoadGlyph+0x42e>)
9001c806:	6812      	ldr	r2, [r2, #0]
9001c808:	4291      	cmp	r1, r2
9001c80a:	bf8c      	ite	hi
9001c80c:	f04f 0a00 	movhi.w	sl, #0
9001c810:	f04f 0a01 	movls.w	sl, #1
9001c814:	2c00      	cmp	r4, #0
9001c816:	4622      	mov	r2, r4
9001c818:	bfb8      	it	lt
9001c81a:	f104 021f 	addlt.w	r2, r4, #31
9001c81e:	1152      	asrs	r2, r2, #5
9001c820:	eb01 0782 	add.w	r7, r1, r2, lsl #2
9001c824:	4262      	negs	r2, r4
9001c826:	f004 041f 	and.w	r4, r4, #31
9001c82a:	f002 021f 	and.w	r2, r2, #31
9001c82e:	4638      	mov	r0, r7
9001c830:	bf58      	it	pl
9001c832:	4254      	negpl	r4, r2
9001c834:	f1ba 0f00 	cmp.w	sl, #0
9001c838:	d000      	beq.n	9001c83c <EwFntLoadGlyph+0x3ca>
9001c83a:	4798      	blx	r3
9001c83c:	192b      	adds	r3, r5, r4
9001c83e:	f850 1b04 	ldr.w	r1, [r0], #4
9001c842:	3704      	adds	r7, #4
9001c844:	2500      	movs	r5, #0
9001c846:	9304      	str	r3, [sp, #16]
9001c848:	40e1      	lsrs	r1, r4
9001c84a:	4633      	mov	r3, r6
9001c84c:	f8df e054 	ldr.w	lr, [pc, #84]	; 9001c8a4 <EwFntLoadGlyph+0x432>
9001c850:	9a04      	ldr	r2, [sp, #16]
9001c852:	4294      	cmp	r4, r2
9001c854:	f47f ae64 	bne.w	9001c520 <EwFntLoadGlyph+0xae>
9001c858:	9b01      	ldr	r3, [sp, #4]
9001c85a:	eb06 0108 	add.w	r1, r6, r8
9001c85e:	4632      	mov	r2, r6
9001c860:	eba3 0308 	sub.w	r3, r3, r8
9001c864:	4433      	add	r3, r6
9001c866:	429a      	cmp	r2, r3
9001c868:	f47f af6d 	bne.w	9001c746 <EwFntLoadGlyph+0x2d4>
9001c86c:	9b03      	ldr	r3, [sp, #12]
9001c86e:	4632      	mov	r2, r6
9001c870:	9802      	ldr	r0, [sp, #8]
9001c872:	ea28 75e8 	bic.w	r5, r8, r8, asr #31
9001c876:	6819      	ldr	r1, [r3, #0]
9001c878:	2800      	cmp	r0, #0
9001c87a:	dd89      	ble.n	9001c790 <EwFntLoadGlyph+0x31e>
9001c87c:	1e4c      	subs	r4, r1, #1
9001c87e:	4613      	mov	r3, r2
9001c880:	eb02 0708 	add.w	r7, r2, r8
9001c884:	e776      	b.n	9001c774 <EwFntLoadGlyph+0x302>
9001c886:	bf00      	nop
9001c888:	200002bc 	.word	0x200002bc
9001c88c:	200002d8 	.word	0x200002d8
9001c890:	200002ac 	.word	0x200002ac
9001c894:	200002b8 	.word	0x200002b8
9001c898:	200002c0 	.word	0x200002c0
9001c89c:	20000300 	.word	0x20000300
9001c8a0:	20000304 	.word	0x20000304
9001c8a4:	200002fc 	.word	0x200002fc

9001c8a8 <EwNewColor>:
9001c8a8:	b513      	push	{r0, r1, r4, lr}
9001c8aa:	2400      	movs	r4, #0
9001c8ac:	f360 0407 	bfi	r4, r0, #0, #8
9001c8b0:	f361 240f 	bfi	r4, r1, #8, #8
9001c8b4:	f362 4417 	bfi	r4, r2, #16, #8
9001c8b8:	f363 641f 	bfi	r4, r3, #24, #8
9001c8bc:	4620      	mov	r0, r4
9001c8be:	b002      	add	sp, #8
9001c8c0:	bd10      	pop	{r4, pc}

9001c8c2 <EwMinusColor>:
9001c8c2:	460b      	mov	r3, r1
9001c8c4:	b2c2      	uxtb	r2, r0
9001c8c6:	b2c9      	uxtb	r1, r1
9001c8c8:	b530      	push	{r4, r5, lr}
9001c8ca:	1a52      	subs	r2, r2, r1
9001c8cc:	f3c0 2407 	ubfx	r4, r0, #8, #8
9001c8d0:	f3c3 2107 	ubfx	r1, r3, #8, #8
9001c8d4:	f3c3 4507 	ubfx	r5, r3, #16, #8
9001c8d8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
9001c8dc:	0e1b      	lsrs	r3, r3, #24
9001c8de:	1a64      	subs	r4, r4, r1
9001c8e0:	f3c0 4107 	ubfx	r1, r0, #16, #8
9001c8e4:	ebc3 6310 	rsb	r3, r3, r0, lsr #24
9001c8e8:	2000      	movs	r0, #0
9001c8ea:	1b49      	subs	r1, r1, r5
9001c8ec:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
9001c8f0:	b2d2      	uxtb	r2, r2
9001c8f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c8f6:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
9001c8fa:	b085      	sub	sp, #20
9001c8fc:	f362 0007 	bfi	r0, r2, #0, #8
9001c900:	b2e2      	uxtb	r2, r4
9001c902:	b2db      	uxtb	r3, r3
9001c904:	f362 200f 	bfi	r0, r2, #8, #8
9001c908:	b2ca      	uxtb	r2, r1
9001c90a:	f362 4017 	bfi	r0, r2, #16, #8
9001c90e:	f363 601f 	bfi	r0, r3, #24, #8
9001c912:	b005      	add	sp, #20
9001c914:	bd30      	pop	{r4, r5, pc}

9001c916 <EwPlusColor>:
9001c916:	b530      	push	{r4, r5, lr}
9001c918:	460b      	mov	r3, r1
9001c91a:	b2cc      	uxtb	r4, r1
9001c91c:	f3c0 2107 	ubfx	r1, r0, #8, #8
9001c920:	b085      	sub	sp, #20
9001c922:	fa54 f480 	uxtab	r4, r4, r0
9001c926:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001c92a:	f3c3 4507 	ubfx	r5, r3, #16, #8
9001c92e:	0e1b      	lsrs	r3, r3, #24
9001c930:	4411      	add	r1, r2
9001c932:	2cff      	cmp	r4, #255	; 0xff
9001c934:	f3c0 4207 	ubfx	r2, r0, #16, #8
9001c938:	eb03 6310 	add.w	r3, r3, r0, lsr #24
9001c93c:	bfa8      	it	ge
9001c93e:	24ff      	movge	r4, #255	; 0xff
9001c940:	29ff      	cmp	r1, #255	; 0xff
9001c942:	442a      	add	r2, r5
9001c944:	f04f 0000 	mov.w	r0, #0
9001c948:	bfa8      	it	ge
9001c94a:	21ff      	movge	r1, #255	; 0xff
9001c94c:	b2e4      	uxtb	r4, r4
9001c94e:	2aff      	cmp	r2, #255	; 0xff
9001c950:	f364 0007 	bfi	r0, r4, #0, #8
9001c954:	b2c9      	uxtb	r1, r1
9001c956:	bfa8      	it	ge
9001c958:	22ff      	movge	r2, #255	; 0xff
9001c95a:	2bff      	cmp	r3, #255	; 0xff
9001c95c:	f361 200f 	bfi	r0, r1, #8, #8
9001c960:	bfa8      	it	ge
9001c962:	23ff      	movge	r3, #255	; 0xff
9001c964:	b2d2      	uxtb	r2, r2
9001c966:	b2db      	uxtb	r3, r3
9001c968:	f362 4017 	bfi	r0, r2, #16, #8
9001c96c:	f363 601f 	bfi	r0, r3, #24, #8
9001c970:	b005      	add	sp, #20
9001c972:	bd30      	pop	{r4, r5, pc}

9001c974 <EwBlendColor>:
9001c974:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c976:	0e0f      	lsrs	r7, r1, #24
9001c978:	4604      	mov	r4, r0
9001c97a:	4603      	mov	r3, r0
9001c97c:	460a      	mov	r2, r1
9001c97e:	f1c7 00ff 	rsb	r0, r7, #255	; 0xff
9001c982:	b2cd      	uxtb	r5, r1
9001c984:	b2e1      	uxtb	r1, r4
9001c986:	f3c3 2407 	ubfx	r4, r3, #8, #8
9001c98a:	f3c2 2607 	ubfx	r6, r2, #8, #8
9001c98e:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001c992:	4341      	muls	r1, r0
9001c994:	b085      	sub	sp, #20
9001c996:	4344      	muls	r4, r0
9001c998:	fb05 1107 	mla	r1, r5, r7, r1
9001c99c:	f3c3 4507 	ubfx	r5, r3, #16, #8
9001c9a0:	0e1b      	lsrs	r3, r3, #24
9001c9a2:	fb06 4607 	mla	r6, r6, r7, r4
9001c9a6:	f5b1 4f7f 	cmp.w	r1, #65280	; 0xff00
9001c9aa:	fb00 f505 	mul.w	r5, r0, r5
9001c9ae:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
9001c9b2:	f04f 04ff 	mov.w	r4, #255	; 0xff
9001c9b6:	fb02 5507 	mla	r5, r2, r7, r5
9001c9ba:	f06f 02fe 	mvn.w	r2, #254	; 0xfe
9001c9be:	fb00 f303 	mul.w	r3, r0, r3
9001c9c2:	f04f 00ff 	mov.w	r0, #255	; 0xff
9001c9c6:	bfb4      	ite	lt
9001c9c8:	fbb1 f1f0 	udivlt	r1, r1, r0
9001c9cc:	4601      	movge	r1, r0
9001c9ce:	f5b6 4f7f 	cmp.w	r6, #65280	; 0xff00
9001c9d2:	f04f 0000 	mov.w	r0, #0
9001c9d6:	b2c9      	uxtb	r1, r1
9001c9d8:	bfb8      	it	lt
9001c9da:	fbb6 f4f4 	udivlt	r4, r6, r4
9001c9de:	fb93 f3f2 	sdiv	r3, r3, r2
9001c9e2:	f5b5 4f7f 	cmp.w	r5, #65280	; 0xff00
9001c9e6:	f04f 02ff 	mov.w	r2, #255	; 0xff
9001c9ea:	f361 0007 	bfi	r0, r1, #0, #8
9001c9ee:	b2e4      	uxtb	r4, r4
9001c9f0:	f103 03ff 	add.w	r3, r3, #255	; 0xff
9001c9f4:	f364 200f 	bfi	r0, r4, #8, #8
9001c9f8:	b2db      	uxtb	r3, r3
9001c9fa:	bfb8      	it	lt
9001c9fc:	fbb5 f2f2 	udivlt	r2, r5, r2
9001ca00:	b2d2      	uxtb	r2, r2
9001ca02:	f362 4017 	bfi	r0, r2, #16, #8
9001ca06:	f363 601f 	bfi	r0, r3, #24, #8
9001ca0a:	b005      	add	sp, #20
9001ca0c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001ca0e <EwBlendColorInt>:
9001ca0e:	b530      	push	{r4, r5, lr}
9001ca10:	4605      	mov	r5, r0
9001ca12:	f381 0108 	usat	r1, #8, r1
9001ca16:	4602      	mov	r2, r0
9001ca18:	4603      	mov	r3, r0
9001ca1a:	b2ed      	uxtb	r5, r5
9001ca1c:	f3c0 2407 	ubfx	r4, r0, #8, #8
9001ca20:	20ff      	movs	r0, #255	; 0xff
9001ca22:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001ca26:	434d      	muls	r5, r1
9001ca28:	0e1b      	lsrs	r3, r3, #24
9001ca2a:	434c      	muls	r4, r1
9001ca2c:	b085      	sub	sp, #20
9001ca2e:	434a      	muls	r2, r1
9001ca30:	434b      	muls	r3, r1
9001ca32:	fbb5 f5f0 	udiv	r5, r5, r0
9001ca36:	fbb4 f4f0 	udiv	r4, r4, r0
9001ca3a:	fbb2 f2f0 	udiv	r2, r2, r0
9001ca3e:	fbb3 f3f0 	udiv	r3, r3, r0
9001ca42:	b2ed      	uxtb	r5, r5
9001ca44:	2000      	movs	r0, #0
9001ca46:	b2e4      	uxtb	r4, r4
9001ca48:	f365 0007 	bfi	r0, r5, #0, #8
9001ca4c:	b2d2      	uxtb	r2, r2
9001ca4e:	b2db      	uxtb	r3, r3
9001ca50:	f364 200f 	bfi	r0, r4, #8, #8
9001ca54:	f362 4017 	bfi	r0, r2, #16, #8
9001ca58:	f363 601f 	bfi	r0, r3, #24, #8
9001ca5c:	b005      	add	sp, #20
9001ca5e:	bd30      	pop	{r4, r5, pc}

9001ca60 <EwBlendColorUInt>:
9001ca60:	29ff      	cmp	r1, #255	; 0xff
9001ca62:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001ca64:	bf28      	it	cs
9001ca66:	21ff      	movcs	r1, #255	; 0xff
9001ca68:	f3c0 2407 	ubfx	r4, r0, #8, #8
9001ca6c:	f3c0 4207 	ubfx	r2, r0, #16, #8
9001ca70:	0e03      	lsrs	r3, r0, #24
9001ca72:	b2c0      	uxtb	r0, r0
9001ca74:	26ff      	movs	r6, #255	; 0xff
9001ca76:	434c      	muls	r4, r1
9001ca78:	fb01 f500 	mul.w	r5, r1, r0
9001ca7c:	2000      	movs	r0, #0
9001ca7e:	434a      	muls	r2, r1
9001ca80:	434b      	muls	r3, r1
9001ca82:	fbb5 f5f6 	udiv	r5, r5, r6
9001ca86:	fbb4 f4f6 	udiv	r4, r4, r6
9001ca8a:	fbb2 f2f6 	udiv	r2, r2, r6
9001ca8e:	b2ed      	uxtb	r5, r5
9001ca90:	b2e4      	uxtb	r4, r4
9001ca92:	f365 0007 	bfi	r0, r5, #0, #8
9001ca96:	b2d2      	uxtb	r2, r2
9001ca98:	fbb3 f3f6 	udiv	r3, r3, r6
9001ca9c:	f364 200f 	bfi	r0, r4, #8, #8
9001caa0:	b2db      	uxtb	r3, r3
9001caa2:	f362 4017 	bfi	r0, r2, #16, #8
9001caa6:	f363 601f 	bfi	r0, r3, #24, #8
9001caaa:	b004      	add	sp, #16
9001caac:	bd70      	pop	{r4, r5, r6, pc}

9001caae <EwSetColorRed>:
9001caae:	b084      	sub	sp, #16
9001cab0:	9001      	str	r0, [sp, #4]
9001cab2:	2000      	movs	r0, #0
9001cab4:	f88d 1004 	strb.w	r1, [sp, #4]
9001cab8:	9b01      	ldr	r3, [sp, #4]
9001caba:	b2da      	uxtb	r2, r3
9001cabc:	f362 0007 	bfi	r0, r2, #0, #8
9001cac0:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001cac4:	f362 200f 	bfi	r0, r2, #8, #8
9001cac8:	f3c3 4207 	ubfx	r2, r3, #16, #8
9001cacc:	0e1b      	lsrs	r3, r3, #24
9001cace:	f362 4017 	bfi	r0, r2, #16, #8
9001cad2:	f363 601f 	bfi	r0, r3, #24, #8
9001cad6:	b004      	add	sp, #16
9001cad8:	4770      	bx	lr

9001cada <EwSetColorGreen>:
9001cada:	b084      	sub	sp, #16
9001cadc:	9001      	str	r0, [sp, #4]
9001cade:	2000      	movs	r0, #0
9001cae0:	f88d 1005 	strb.w	r1, [sp, #5]
9001cae4:	9b01      	ldr	r3, [sp, #4]
9001cae6:	b2da      	uxtb	r2, r3
9001cae8:	f362 0007 	bfi	r0, r2, #0, #8
9001caec:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001caf0:	f362 200f 	bfi	r0, r2, #8, #8
9001caf4:	f3c3 4207 	ubfx	r2, r3, #16, #8
9001caf8:	0e1b      	lsrs	r3, r3, #24
9001cafa:	f362 4017 	bfi	r0, r2, #16, #8
9001cafe:	f363 601f 	bfi	r0, r3, #24, #8
9001cb02:	b004      	add	sp, #16
9001cb04:	4770      	bx	lr

9001cb06 <EwSetColorBlue>:
9001cb06:	b084      	sub	sp, #16
9001cb08:	9001      	str	r0, [sp, #4]
9001cb0a:	2000      	movs	r0, #0
9001cb0c:	f88d 1006 	strb.w	r1, [sp, #6]
9001cb10:	9b01      	ldr	r3, [sp, #4]
9001cb12:	b2da      	uxtb	r2, r3
9001cb14:	f362 0007 	bfi	r0, r2, #0, #8
9001cb18:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001cb1c:	f362 200f 	bfi	r0, r2, #8, #8
9001cb20:	f3c3 4207 	ubfx	r2, r3, #16, #8
9001cb24:	0e1b      	lsrs	r3, r3, #24
9001cb26:	f362 4017 	bfi	r0, r2, #16, #8
9001cb2a:	f363 601f 	bfi	r0, r3, #24, #8
9001cb2e:	b004      	add	sp, #16
9001cb30:	4770      	bx	lr

9001cb32 <EwSetColorAlpha>:
9001cb32:	b084      	sub	sp, #16
9001cb34:	9001      	str	r0, [sp, #4]
9001cb36:	2000      	movs	r0, #0
9001cb38:	f88d 1007 	strb.w	r1, [sp, #7]
9001cb3c:	9b01      	ldr	r3, [sp, #4]
9001cb3e:	b2da      	uxtb	r2, r3
9001cb40:	f362 0007 	bfi	r0, r2, #0, #8
9001cb44:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001cb48:	f362 200f 	bfi	r0, r2, #8, #8
9001cb4c:	f3c3 4207 	ubfx	r2, r3, #16, #8
9001cb50:	0e1b      	lsrs	r3, r3, #24
9001cb52:	f362 4017 	bfi	r0, r2, #16, #8
9001cb56:	f363 601f 	bfi	r0, r3, #24, #8
9001cb5a:	b004      	add	sp, #16
9001cb5c:	4770      	bx	lr

9001cb5e <EwCompColor>:
9001cb5e:	b082      	sub	sp, #8
9001cb60:	e9cd 1000 	strd	r1, r0, [sp]
9001cb64:	b2c0      	uxtb	r0, r0
9001cb66:	b2c9      	uxtb	r1, r1
9001cb68:	4288      	cmp	r0, r1
9001cb6a:	d114      	bne.n	9001cb96 <EwCompColor+0x38>
9001cb6c:	f89d 2005 	ldrb.w	r2, [sp, #5]
9001cb70:	f89d 3001 	ldrb.w	r3, [sp, #1]
9001cb74:	429a      	cmp	r2, r3
9001cb76:	d10e      	bne.n	9001cb96 <EwCompColor+0x38>
9001cb78:	f89d 2006 	ldrb.w	r2, [sp, #6]
9001cb7c:	f89d 3002 	ldrb.w	r3, [sp, #2]
9001cb80:	429a      	cmp	r2, r3
9001cb82:	d108      	bne.n	9001cb96 <EwCompColor+0x38>
9001cb84:	f89d 0007 	ldrb.w	r0, [sp, #7]
9001cb88:	f89d 3003 	ldrb.w	r3, [sp, #3]
9001cb8c:	1ac0      	subs	r0, r0, r3
9001cb8e:	bf18      	it	ne
9001cb90:	2001      	movne	r0, #1
9001cb92:	b002      	add	sp, #8
9001cb94:	4770      	bx	lr
9001cb96:	2001      	movs	r0, #1
9001cb98:	e7fb      	b.n	9001cb92 <EwCompColor+0x34>

9001cb9a <EwIsColorNull>:
9001cb9a:	f3c0 4307 	ubfx	r3, r0, #16, #8
9001cb9e:	f3c0 2107 	ubfx	r1, r0, #8, #8
9001cba2:	b2c2      	uxtb	r2, r0
9001cba4:	b082      	sub	sp, #8
9001cba6:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
9001cbaa:	430b      	orrs	r3, r1
9001cbac:	4313      	orrs	r3, r2
9001cbae:	bf0c      	ite	eq
9001cbb0:	2001      	moveq	r0, #1
9001cbb2:	2000      	movne	r0, #0
9001cbb4:	b002      	add	sp, #8
9001cbb6:	4770      	bx	lr

9001cbb8 <EwGetVariantOfColor>:
9001cbb8:	b507      	push	{r0, r1, r2, lr}
9001cbba:	2108      	movs	r1, #8
9001cbbc:	f002 f8af 	bl	9001ed1e <EwGetVariantOf>
9001cbc0:	6843      	ldr	r3, [r0, #4]
9001cbc2:	2000      	movs	r0, #0
9001cbc4:	b2da      	uxtb	r2, r3
9001cbc6:	f362 0007 	bfi	r0, r2, #0, #8
9001cbca:	f3c3 2207 	ubfx	r2, r3, #8, #8
9001cbce:	f362 200f 	bfi	r0, r2, #8, #8
9001cbd2:	f3c3 4207 	ubfx	r2, r3, #16, #8
9001cbd6:	0e1b      	lsrs	r3, r3, #24
9001cbd8:	f362 4017 	bfi	r0, r2, #16, #8
9001cbdc:	f363 601f 	bfi	r0, r3, #24, #8
9001cbe0:	b003      	add	sp, #12
9001cbe2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

9001cbe8 <EwPrint>:
9001cbe8:	b40f      	push	{r0, r1, r2, r3}
9001cbea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cbee:	b097      	sub	sp, #92	; 0x5c
9001cbf0:	ab20      	add	r3, sp, #128	; 0x80
9001cbf2:	f853 6b04 	ldr.w	r6, [r3], #4
9001cbf6:	9305      	str	r3, [sp, #20]
9001cbf8:	7833      	ldrb	r3, [r6, #0]
9001cbfa:	2b00      	cmp	r3, #0
9001cbfc:	f000 8222 	beq.w	9001d044 <EwPrint+0x45c>
9001cc00:	ab06      	add	r3, sp, #24
9001cc02:	2240      	movs	r2, #64	; 0x40
9001cc04:	461f      	mov	r7, r3
9001cc06:	e004      	b.n	9001cc12 <EwPrint+0x2a>
9001cc08:	2925      	cmp	r1, #37	; 0x25
9001cc0a:	d04e      	beq.n	9001ccaa <EwPrint+0xc2>
9001cc0c:	3601      	adds	r6, #1
9001cc0e:	7019      	strb	r1, [r3, #0]
9001cc10:	3301      	adds	r3, #1
9001cc12:	7831      	ldrb	r1, [r6, #0]
9001cc14:	461c      	mov	r4, r3
9001cc16:	2900      	cmp	r1, #0
9001cc18:	f000 8204 	beq.w	9001d024 <EwPrint+0x43c>
9001cc1c:	3a01      	subs	r2, #1
9001cc1e:	d1f3      	bne.n	9001cc08 <EwPrint+0x20>
9001cc20:	42bb      	cmp	r3, r7
9001cc22:	d905      	bls.n	9001cc30 <EwPrint+0x48>
9001cc24:	2200      	movs	r2, #0
9001cc26:	463c      	mov	r4, r7
9001cc28:	4638      	mov	r0, r7
9001cc2a:	701a      	strb	r2, [r3, #0]
9001cc2c:	f00a f84e 	bl	90026ccc <EwConsoleOutput>
9001cc30:	7833      	ldrb	r3, [r6, #0]
9001cc32:	2b25      	cmp	r3, #37	; 0x25
9001cc34:	d1e0      	bne.n	9001cbf8 <EwPrint+0x10>
9001cc36:	7873      	ldrb	r3, [r6, #1]
9001cc38:	2b25      	cmp	r3, #37	; 0x25
9001cc3a:	d0dd      	beq.n	9001cbf8 <EwPrint+0x10>
9001cc3c:	2b2b      	cmp	r3, #43	; 0x2b
9001cc3e:	bf0b      	itete	eq
9001cc40:	3602      	addeq	r6, #2
9001cc42:	3601      	addne	r6, #1
9001cc44:	f04f 0a01 	moveq.w	sl, #1
9001cc48:	f04f 0a00 	movne.w	sl, #0
9001cc4c:	7833      	ldrb	r3, [r6, #0]
9001cc4e:	2b2d      	cmp	r3, #45	; 0x2d
9001cc50:	bf04      	itt	eq
9001cc52:	3601      	addeq	r6, #1
9001cc54:	f04f 3aff 	moveq.w	sl, #4294967295
9001cc58:	7833      	ldrb	r3, [r6, #0]
9001cc5a:	2b30      	cmp	r3, #48	; 0x30
9001cc5c:	bf06      	itte	eq
9001cc5e:	3601      	addeq	r6, #1
9001cc60:	f04f 31ff 	moveq.w	r1, #4294967295
9001cc64:	2100      	movne	r1, #0
9001cc66:	7833      	ldrb	r3, [r6, #0]
9001cc68:	2b2a      	cmp	r3, #42	; 0x2a
9001cc6a:	d125      	bne.n	9001ccb8 <EwPrint+0xd0>
9001cc6c:	9b05      	ldr	r3, [sp, #20]
9001cc6e:	3601      	adds	r6, #1
9001cc70:	681d      	ldr	r5, [r3, #0]
9001cc72:	1d1a      	adds	r2, r3, #4
9001cc74:	2d2d      	cmp	r5, #45	; 0x2d
9001cc76:	9205      	str	r2, [sp, #20]
9001cc78:	bfa8      	it	ge
9001cc7a:	252d      	movge	r5, #45	; 0x2d
9001cc7c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001cc80:	7833      	ldrb	r3, [r6, #0]
9001cc82:	2b2e      	cmp	r3, #46	; 0x2e
9001cc84:	d163      	bne.n	9001cd4e <EwPrint+0x166>
9001cc86:	7873      	ldrb	r3, [r6, #1]
9001cc88:	2b2a      	cmp	r3, #42	; 0x2a
9001cc8a:	d02e      	beq.n	9001ccea <EwPrint+0x102>
9001cc8c:	1c73      	adds	r3, r6, #1
9001cc8e:	2200      	movs	r2, #0
9001cc90:	f04f 0c0a 	mov.w	ip, #10
9001cc94:	461e      	mov	r6, r3
9001cc96:	f813 9b01 	ldrb.w	r9, [r3], #1
9001cc9a:	f1a9 0030 	sub.w	r0, r9, #48	; 0x30
9001cc9e:	2809      	cmp	r0, #9
9001cca0:	d828      	bhi.n	9001ccf4 <EwPrint+0x10c>
9001cca2:	fb0c 9202 	mla	r2, ip, r2, r9
9001cca6:	3a30      	subs	r2, #48	; 0x30
9001cca8:	e7f4      	b.n	9001cc94 <EwPrint+0xac>
9001ccaa:	7871      	ldrb	r1, [r6, #1]
9001ccac:	2925      	cmp	r1, #37	; 0x25
9001ccae:	f040 81c5 	bne.w	9001d03c <EwPrint+0x454>
9001ccb2:	3602      	adds	r6, #2
9001ccb4:	7019      	strb	r1, [r3, #0]
9001ccb6:	e7ab      	b.n	9001cc10 <EwPrint+0x28>
9001ccb8:	3b30      	subs	r3, #48	; 0x30
9001ccba:	2b09      	cmp	r3, #9
9001ccbc:	d812      	bhi.n	9001cce4 <EwPrint+0xfc>
9001ccbe:	4633      	mov	r3, r6
9001ccc0:	2500      	movs	r5, #0
9001ccc2:	f04f 0c0a 	mov.w	ip, #10
9001ccc6:	7818      	ldrb	r0, [r3, #0]
9001ccc8:	461e      	mov	r6, r3
9001ccca:	3301      	adds	r3, #1
9001cccc:	f1a0 0230 	sub.w	r2, r0, #48	; 0x30
9001ccd0:	2a09      	cmp	r2, #9
9001ccd2:	d903      	bls.n	9001ccdc <EwPrint+0xf4>
9001ccd4:	2d2d      	cmp	r5, #45	; 0x2d
9001ccd6:	bfa8      	it	ge
9001ccd8:	252d      	movge	r5, #45	; 0x2d
9001ccda:	e7d1      	b.n	9001cc80 <EwPrint+0x98>
9001ccdc:	fb0c 0505 	mla	r5, ip, r5, r0
9001cce0:	3d30      	subs	r5, #48	; 0x30
9001cce2:	e7f0      	b.n	9001ccc6 <EwPrint+0xde>
9001cce4:	f04f 35ff 	mov.w	r5, #4294967295
9001cce8:	e7ca      	b.n	9001cc80 <EwPrint+0x98>
9001ccea:	9b05      	ldr	r3, [sp, #20]
9001ccec:	3602      	adds	r6, #2
9001ccee:	1d1a      	adds	r2, r3, #4
9001ccf0:	9205      	str	r2, [sp, #20]
9001ccf2:	681a      	ldr	r2, [r3, #0]
9001ccf4:	2a20      	cmp	r2, #32
9001ccf6:	bfa8      	it	ge
9001ccf8:	2220      	movge	r2, #32
9001ccfa:	ea22 79e2 	bic.w	r9, r2, r2, asr #31
9001ccfe:	7833      	ldrb	r3, [r6, #0]
9001cd00:	2b00      	cmp	r3, #0
9001cd02:	f000 819f 	beq.w	9001d044 <EwPrint+0x45c>
9001cd06:	2000      	movs	r0, #0
9001cd08:	2201      	movs	r2, #1
9001cd0a:	f816 3b01 	ldrb.w	r3, [r6], #1
9001cd0e:	2b6c      	cmp	r3, #108	; 0x6c
9001cd10:	d020      	beq.n	9001cd54 <EwPrint+0x16c>
9001cd12:	2b66      	cmp	r3, #102	; 0x66
9001cd14:	f000 80b0 	beq.w	9001ce78 <EwPrint+0x290>
9001cd18:	d83b      	bhi.n	9001cd92 <EwPrint+0x1aa>
9001cd1a:	2b58      	cmp	r3, #88	; 0x58
9001cd1c:	d07f      	beq.n	9001ce1e <EwPrint+0x236>
9001cd1e:	d81b      	bhi.n	9001cd58 <EwPrint+0x170>
9001cd20:	2b43      	cmp	r3, #67	; 0x43
9001cd22:	f000 80dc 	beq.w	9001cede <EwPrint+0x2f6>
9001cd26:	2b53      	cmp	r3, #83	; 0x53
9001cd28:	f000 813e 	beq.w	9001cfa8 <EwPrint+0x3c0>
9001cd2c:	42bc      	cmp	r4, r7
9001cd2e:	f67f af63 	bls.w	9001cbf8 <EwPrint+0x10>
9001cd32:	1be0      	subs	r0, r4, r7
9001cd34:	42a8      	cmp	r0, r5
9001cd36:	da04      	bge.n	9001cd42 <EwPrint+0x15a>
9001cd38:	1b40      	subs	r0, r0, r5
9001cd3a:	4bbc      	ldr	r3, [pc, #752]	; (9001d02c <EwPrint+0x444>)
9001cd3c:	4418      	add	r0, r3
9001cd3e:	f009 ffc5 	bl	90026ccc <EwConsoleOutput>
9001cd42:	2300      	movs	r3, #0
9001cd44:	4638      	mov	r0, r7
9001cd46:	7023      	strb	r3, [r4, #0]
9001cd48:	f009 ffc0 	bl	90026ccc <EwConsoleOutput>
9001cd4c:	e754      	b.n	9001cbf8 <EwPrint+0x10>
9001cd4e:	f06f 0905 	mvn.w	r9, #5
9001cd52:	e7d4      	b.n	9001ccfe <EwPrint+0x116>
9001cd54:	2001      	movs	r0, #1
9001cd56:	e7d8      	b.n	9001cd0a <EwPrint+0x122>
9001cd58:	2b63      	cmp	r3, #99	; 0x63
9001cd5a:	f000 80b3 	beq.w	9001cec4 <EwPrint+0x2dc>
9001cd5e:	2b64      	cmp	r3, #100	; 0x64
9001cd60:	d1e4      	bne.n	9001cd2c <EwPrint+0x144>
9001cd62:	ea05 0201 	and.w	r2, r5, r1
9001cd66:	9905      	ldr	r1, [sp, #20]
9001cd68:	b370      	cbz	r0, 9001cdc8 <EwPrint+0x1e0>
9001cd6a:	1dcb      	adds	r3, r1, #7
9001cd6c:	2000      	movs	r0, #0
9001cd6e:	f8cd a00c 	str.w	sl, [sp, #12]
9001cd72:	f023 0307 	bic.w	r3, r3, #7
9001cd76:	9200      	str	r2, [sp, #0]
9001cd78:	f103 0108 	add.w	r1, r3, #8
9001cd7c:	9105      	str	r1, [sp, #20]
9001cd7e:	210a      	movs	r1, #10
9001cd80:	e9cd 1001 	strd	r1, r0, [sp, #4]
9001cd84:	4620      	mov	r0, r4
9001cd86:	e9d3 2300 	ldrd	r2, r3, [r3]
9001cd8a:	f003 fc6b 	bl	90020664 <EwFormatInt64ToAnsiString>
9001cd8e:	4404      	add	r4, r0
9001cd90:	e7cc      	b.n	9001cd2c <EwPrint+0x144>
9001cd92:	3b70      	subs	r3, #112	; 0x70
9001cd94:	b2da      	uxtb	r2, r3
9001cd96:	2a08      	cmp	r2, #8
9001cd98:	d8c8      	bhi.n	9001cd2c <EwPrint+0x144>
9001cd9a:	2b08      	cmp	r3, #8
9001cd9c:	d8c6      	bhi.n	9001cd2c <EwPrint+0x144>
9001cd9e:	a201      	add	r2, pc, #4	; (adr r2, 9001cda4 <EwPrint+0x1bc>)
9001cda0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001cda4:	9001ceb1 	.word	0x9001ceb1
9001cda8:	9001cd2d 	.word	0x9001cd2d
9001cdac:	9001cd2d 	.word	0x9001cd2d
9001cdb0:	9001cf1b 	.word	0x9001cf1b
9001cdb4:	9001cd2d 	.word	0x9001cd2d
9001cdb8:	9001cddd 	.word	0x9001cddd
9001cdbc:	9001cd2d 	.word	0x9001cd2d
9001cdc0:	9001cd2d 	.word	0x9001cd2d
9001cdc4:	9001ce4d 	.word	0x9001ce4d
9001cdc8:	1d0b      	adds	r3, r1, #4
9001cdca:	e9cd 0a00 	strd	r0, sl, [sp]
9001cdce:	9305      	str	r3, [sp, #20]
9001cdd0:	4620      	mov	r0, r4
9001cdd2:	230a      	movs	r3, #10
9001cdd4:	6809      	ldr	r1, [r1, #0]
9001cdd6:	f003 fb50 	bl	9002047a <EwFormatIntToAnsiString>
9001cdda:	e7d8      	b.n	9001cd8e <EwPrint+0x1a6>
9001cddc:	ea05 0201 	and.w	r2, r5, r1
9001cde0:	9905      	ldr	r1, [sp, #20]
9001cde2:	b190      	cbz	r0, 9001ce0a <EwPrint+0x222>
9001cde4:	1dcb      	adds	r3, r1, #7
9001cde6:	f8cd a00c 	str.w	sl, [sp, #12]
9001cdea:	f023 0307 	bic.w	r3, r3, #7
9001cdee:	f103 0108 	add.w	r1, r3, #8
9001cdf2:	9105      	str	r1, [sp, #20]
9001cdf4:	2100      	movs	r1, #0
9001cdf6:	9102      	str	r1, [sp, #8]
9001cdf8:	210a      	movs	r1, #10
9001cdfa:	e9cd 2100 	strd	r2, r1, [sp]
9001cdfe:	e9d3 2300 	ldrd	r2, r3, [r3]
9001ce02:	4620      	mov	r0, r4
9001ce04:	f003 fba8 	bl	90020558 <EwFormatUInt64ToAnsiString>
9001ce08:	e7c1      	b.n	9001cd8e <EwPrint+0x1a6>
9001ce0a:	1d0b      	adds	r3, r1, #4
9001ce0c:	9305      	str	r3, [sp, #20]
9001ce0e:	230a      	movs	r3, #10
9001ce10:	e9cd 0a00 	strd	r0, sl, [sp]
9001ce14:	6809      	ldr	r1, [r1, #0]
9001ce16:	4620      	mov	r0, r4
9001ce18:	f003 face 	bl	900203b8 <EwFormatUIntToAnsiString>
9001ce1c:	e7b7      	b.n	9001cd8e <EwPrint+0x1a6>
9001ce1e:	ea05 0c01 	and.w	ip, r5, r1
9001ce22:	9905      	ldr	r1, [sp, #20]
9001ce24:	b158      	cbz	r0, 9001ce3e <EwPrint+0x256>
9001ce26:	1dcb      	adds	r3, r1, #7
9001ce28:	f023 0307 	bic.w	r3, r3, #7
9001ce2c:	e9cd 2a02 	strd	r2, sl, [sp, #8]
9001ce30:	f103 0108 	add.w	r1, r3, #8
9001ce34:	2210      	movs	r2, #16
9001ce36:	9105      	str	r1, [sp, #20]
9001ce38:	e9cd c200 	strd	ip, r2, [sp]
9001ce3c:	e7df      	b.n	9001cdfe <EwPrint+0x216>
9001ce3e:	1d0b      	adds	r3, r1, #4
9001ce40:	e9cd 2a00 	strd	r2, sl, [sp]
9001ce44:	9305      	str	r3, [sp, #20]
9001ce46:	4662      	mov	r2, ip
9001ce48:	2310      	movs	r3, #16
9001ce4a:	e7e3      	b.n	9001ce14 <EwPrint+0x22c>
9001ce4c:	ea05 0201 	and.w	r2, r5, r1
9001ce50:	9905      	ldr	r1, [sp, #20]
9001ce52:	b158      	cbz	r0, 9001ce6c <EwPrint+0x284>
9001ce54:	1dcb      	adds	r3, r1, #7
9001ce56:	f8cd a00c 	str.w	sl, [sp, #12]
9001ce5a:	f023 0307 	bic.w	r3, r3, #7
9001ce5e:	f103 0108 	add.w	r1, r3, #8
9001ce62:	9105      	str	r1, [sp, #20]
9001ce64:	2100      	movs	r1, #0
9001ce66:	9102      	str	r1, [sp, #8]
9001ce68:	2110      	movs	r1, #16
9001ce6a:	e7c6      	b.n	9001cdfa <EwPrint+0x212>
9001ce6c:	1d0b      	adds	r3, r1, #4
9001ce6e:	e9cd 0a00 	strd	r0, sl, [sp]
9001ce72:	9305      	str	r3, [sp, #20]
9001ce74:	2310      	movs	r3, #16
9001ce76:	e7cd      	b.n	9001ce14 <EwPrint+0x22c>
9001ce78:	9b05      	ldr	r3, [sp, #20]
9001ce7a:	ea05 0801 	and.w	r8, r5, r1
9001ce7e:	3307      	adds	r3, #7
9001ce80:	f023 0307 	bic.w	r3, r3, #7
9001ce84:	f103 0208 	add.w	r2, r3, #8
9001ce88:	e9d3 0100 	ldrd	r0, r1, [r3]
9001ce8c:	9205      	str	r2, [sp, #20]
9001ce8e:	f004 ffd3 	bl	90021e38 <__aeabi_d2f>
9001ce92:	4641      	mov	r1, r8
9001ce94:	ee00 0a10 	vmov	s0, r0
9001ce98:	4653      	mov	r3, sl
9001ce9a:	464a      	mov	r2, r9
9001ce9c:	4620      	mov	r0, r4
9001ce9e:	f003 fc77 	bl	90020790 <EwFormatFloatToAnsiString>
9001cea2:	4680      	mov	r8, r0
9001cea4:	b910      	cbnz	r0, 9001ceac <EwPrint+0x2c4>
9001cea6:	4862      	ldr	r0, [pc, #392]	; (9001d030 <EwPrint+0x448>)
9001cea8:	f009 ff10 	bl	90026ccc <EwConsoleOutput>
9001ceac:	4444      	add	r4, r8
9001ceae:	e73d      	b.n	9001cd2c <EwPrint+0x144>
9001ceb0:	9905      	ldr	r1, [sp, #20]
9001ceb2:	2500      	movs	r5, #0
9001ceb4:	2208      	movs	r2, #8
9001ceb6:	1d0b      	adds	r3, r1, #4
9001ceb8:	9305      	str	r3, [sp, #20]
9001ceba:	2301      	movs	r3, #1
9001cebc:	e9cd 3500 	strd	r3, r5, [sp]
9001cec0:	2310      	movs	r3, #16
9001cec2:	e7a7      	b.n	9001ce14 <EwPrint+0x22c>
9001cec4:	9b05      	ldr	r3, [sp, #20]
9001cec6:	1d1a      	adds	r2, r3, #4
9001cec8:	781d      	ldrb	r5, [r3, #0]
9001ceca:	9205      	str	r2, [sp, #20]
9001cecc:	b11d      	cbz	r5, 9001ced6 <EwPrint+0x2ee>
9001cece:	f804 5b01 	strb.w	r5, [r4], #1
9001ced2:	2500      	movs	r5, #0
9001ced4:	e72a      	b.n	9001cd2c <EwPrint+0x144>
9001ced6:	4857      	ldr	r0, [pc, #348]	; (9001d034 <EwPrint+0x44c>)
9001ced8:	f009 fef8 	bl	90026ccc <EwConsoleOutput>
9001cedc:	e726      	b.n	9001cd2c <EwPrint+0x144>
9001cede:	9b05      	ldr	r3, [sp, #20]
9001cee0:	1d19      	adds	r1, r3, #4
9001cee2:	9105      	str	r1, [sp, #20]
9001cee4:	6819      	ldr	r1, [r3, #0]
9001cee6:	f1a1 0320 	sub.w	r3, r1, #32
9001ceea:	b29b      	uxth	r3, r3
9001ceec:	2b5f      	cmp	r3, #95	; 0x5f
9001ceee:	d802      	bhi.n	9001cef6 <EwPrint+0x30e>
9001cef0:	f804 1b01 	strb.w	r1, [r4], #1
9001cef4:	e7ed      	b.n	9001ced2 <EwPrint+0x2ea>
9001cef6:	46a0      	mov	r8, r4
9001cef8:	235c      	movs	r3, #92	; 0x5c
9001cefa:	2500      	movs	r5, #0
9001cefc:	b289      	uxth	r1, r1
9001cefe:	f808 3b02 	strb.w	r3, [r8], #2
9001cf02:	2378      	movs	r3, #120	; 0x78
9001cf04:	4640      	mov	r0, r8
9001cf06:	7063      	strb	r3, [r4, #1]
9001cf08:	2310      	movs	r3, #16
9001cf0a:	e9cd 2500 	strd	r2, r5, [sp]
9001cf0e:	2204      	movs	r2, #4
9001cf10:	f003 fa52 	bl	900203b8 <EwFormatUIntToAnsiString>
9001cf14:	eb08 0400 	add.w	r4, r8, r0
9001cf18:	e708      	b.n	9001cd2c <EwPrint+0x144>
9001cf1a:	9b05      	ldr	r3, [sp, #20]
9001cf1c:	2d00      	cmp	r5, #0
9001cf1e:	f103 0204 	add.w	r2, r3, #4
9001cf22:	f8d3 8000 	ldr.w	r8, [r3]
9001cf26:	9205      	str	r2, [sp, #20]
9001cf28:	dd14      	ble.n	9001cf54 <EwPrint+0x36c>
9001cf2a:	f1ba 3fff 	cmp.w	sl, #4294967295
9001cf2e:	d011      	beq.n	9001cf54 <EwPrint+0x36c>
9001cf30:	4643      	mov	r3, r8
9001cf32:	4618      	mov	r0, r3
9001cf34:	b11b      	cbz	r3, 9001cf3e <EwPrint+0x356>
9001cf36:	7802      	ldrb	r2, [r0, #0]
9001cf38:	3301      	adds	r3, #1
9001cf3a:	2a00      	cmp	r2, #0
9001cf3c:	d1f9      	bne.n	9001cf32 <EwPrint+0x34a>
9001cf3e:	eba0 0008 	sub.w	r0, r0, r8
9001cf42:	42a8      	cmp	r0, r5
9001cf44:	da06      	bge.n	9001cf54 <EwPrint+0x36c>
9001cf46:	f1c5 032f 	rsb	r3, r5, #47	; 0x2f
9001cf4a:	4418      	add	r0, r3
9001cf4c:	4b3a      	ldr	r3, [pc, #232]	; (9001d038 <EwPrint+0x450>)
9001cf4e:	4418      	add	r0, r3
9001cf50:	f009 febc 	bl	90026ccc <EwConsoleOutput>
9001cf54:	f1b9 0f00 	cmp.w	r9, #0
9001cf58:	dd0a      	ble.n	9001cf70 <EwPrint+0x388>
9001cf5a:	464a      	mov	r2, r9
9001cf5c:	4641      	mov	r1, r8
9001cf5e:	4638      	mov	r0, r7
9001cf60:	46b8      	mov	r8, r7
9001cf62:	f009 fed7 	bl	90026d14 <EwCopy>
9001cf66:	ab16      	add	r3, sp, #88	; 0x58
9001cf68:	4499      	add	r9, r3
9001cf6a:	2300      	movs	r3, #0
9001cf6c:	f809 3c40 	strb.w	r3, [r9, #-64]
9001cf70:	4640      	mov	r0, r8
9001cf72:	f009 feab 	bl	90026ccc <EwConsoleOutput>
9001cf76:	2d00      	cmp	r5, #0
9001cf78:	f77f aed8 	ble.w	9001cd2c <EwPrint+0x144>
9001cf7c:	f1ba 3fff 	cmp.w	sl, #4294967295
9001cf80:	f47f aed4 	bne.w	9001cd2c <EwPrint+0x144>
9001cf84:	4643      	mov	r3, r8
9001cf86:	4618      	mov	r0, r3
9001cf88:	b11b      	cbz	r3, 9001cf92 <EwPrint+0x3aa>
9001cf8a:	7802      	ldrb	r2, [r0, #0]
9001cf8c:	3301      	adds	r3, #1
9001cf8e:	2a00      	cmp	r2, #0
9001cf90:	d1f9      	bne.n	9001cf86 <EwPrint+0x39e>
9001cf92:	eba0 0008 	sub.w	r0, r0, r8
9001cf96:	42a8      	cmp	r0, r5
9001cf98:	f6bf aec8 	bge.w	9001cd2c <EwPrint+0x144>
9001cf9c:	f1c5 082f 	rsb	r8, r5, #47	; 0x2f
9001cfa0:	4b25      	ldr	r3, [pc, #148]	; (9001d038 <EwPrint+0x450>)
9001cfa2:	4440      	add	r0, r8
9001cfa4:	4418      	add	r0, r3
9001cfa6:	e797      	b.n	9001ced8 <EwPrint+0x2f0>
9001cfa8:	9b05      	ldr	r3, [sp, #20]
9001cfaa:	f04f 0b5c 	mov.w	fp, #92	; 0x5c
9001cfae:	1d1a      	adds	r2, r3, #4
9001cfb0:	f8d3 9000 	ldr.w	r9, [r3]
9001cfb4:	9205      	str	r2, [sp, #20]
9001cfb6:	f1b9 0f00 	cmp.w	r9, #0
9001cfba:	f43f aeb7 	beq.w	9001cd2c <EwPrint+0x144>
9001cfbe:	f8b9 3000 	ldrh.w	r3, [r9]
9001cfc2:	2b00      	cmp	r3, #0
9001cfc4:	f43f aeb2 	beq.w	9001cd2c <EwPrint+0x144>
9001cfc8:	46c8      	mov	r8, r9
9001cfca:	f04f 0a78 	mov.w	sl, #120	; 0x78
9001cfce:	e005      	b.n	9001cfdc <EwPrint+0x3f4>
9001cfd0:	f1a3 0220 	sub.w	r2, r3, #32
9001cfd4:	2a5f      	cmp	r2, #95	; 0x5f
9001cfd6:	d812      	bhi.n	9001cffe <EwPrint+0x416>
9001cfd8:	f804 3b01 	strb.w	r3, [r4], #1
9001cfdc:	46c1      	mov	r9, r8
9001cfde:	f838 3b02 	ldrh.w	r3, [r8], #2
9001cfe2:	b11b      	cbz	r3, 9001cfec <EwPrint+0x404>
9001cfe4:	f10d 0251 	add.w	r2, sp, #81	; 0x51
9001cfe8:	4294      	cmp	r4, r2
9001cfea:	d3f1      	bcc.n	9001cfd0 <EwPrint+0x3e8>
9001cfec:	42bc      	cmp	r4, r7
9001cfee:	d9e2      	bls.n	9001cfb6 <EwPrint+0x3ce>
9001cff0:	2300      	movs	r3, #0
9001cff2:	4638      	mov	r0, r7
9001cff4:	7023      	strb	r3, [r4, #0]
9001cff6:	463c      	mov	r4, r7
9001cff8:	f009 fe68 	bl	90026ccc <EwConsoleOutput>
9001cffc:	e7db      	b.n	9001cfb6 <EwPrint+0x3ce>
9001cffe:	46a1      	mov	r9, r4
9001d000:	2301      	movs	r3, #1
9001d002:	2200      	movs	r2, #0
9001d004:	f809 bb02 	strb.w	fp, [r9], #2
9001d008:	4648      	mov	r0, r9
9001d00a:	f884 a001 	strb.w	sl, [r4, #1]
9001d00e:	f838 1c02 	ldrh.w	r1, [r8, #-2]
9001d012:	e9cd 3200 	strd	r3, r2, [sp]
9001d016:	2310      	movs	r3, #16
9001d018:	2204      	movs	r2, #4
9001d01a:	f003 f9cd 	bl	900203b8 <EwFormatUIntToAnsiString>
9001d01e:	eb09 0400 	add.w	r4, r9, r0
9001d022:	e7db      	b.n	9001cfdc <EwPrint+0x3f4>
9001d024:	42bb      	cmp	r3, r7
9001d026:	f67f ade7 	bls.w	9001cbf8 <EwPrint+0x10>
9001d02a:	e5fb      	b.n	9001cc24 <EwPrint+0x3c>
9001d02c:	90032fcd 	.word	0x90032fcd
9001d030:	90034985 	.word	0x90034985
9001d034:	90034989 	.word	0x90034989
9001d038:	90032f9e 	.word	0x90032f9e
9001d03c:	42bb      	cmp	r3, r7
9001d03e:	f67f adfa 	bls.w	9001cc36 <EwPrint+0x4e>
9001d042:	e5ef      	b.n	9001cc24 <EwPrint+0x3c>
9001d044:	b017      	add	sp, #92	; 0x5c
9001d046:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d04a:	b004      	add	sp, #16
9001d04c:	4770      	bx	lr

9001d04e <EwTrace>:
9001d04e:	b40f      	push	{r0, r1, r2, r3}
9001d050:	b570      	push	{r4, r5, r6, lr}
9001d052:	ed2d 8b02 	vpush	{d8}
9001d056:	b084      	sub	sp, #16
9001d058:	48b5      	ldr	r0, [pc, #724]	; (9001d330 <EwTrace+0x2e2>)
9001d05a:	4eb6      	ldr	r6, [pc, #728]	; (9001d334 <EwTrace+0x2e6>)
9001d05c:	ab0a      	add	r3, sp, #40	; 0x28
9001d05e:	eddf 8ab6 	vldr	s17, [pc, #728]	; 9001d338 <EwTrace+0x2ea>
9001d062:	f853 5b04 	ldr.w	r5, [r3], #4
9001d066:	9303      	str	r3, [sp, #12]
9001d068:	f7ff fdbe 	bl	9001cbe8 <EwPrint>
9001d06c:	2200      	movs	r2, #0
9001d06e:	462c      	mov	r4, r5
9001d070:	4625      	mov	r5, r4
9001d072:	f814 3b01 	ldrb.w	r3, [r4], #1
9001d076:	b94b      	cbnz	r3, 9001d08c <EwTrace+0x3e>
9001d078:	48b0      	ldr	r0, [pc, #704]	; (9001d33c <EwTrace+0x2ee>)
9001d07a:	f7ff fdb5 	bl	9001cbe8 <EwPrint>
9001d07e:	b004      	add	sp, #16
9001d080:	ecbd 8b02 	vpop	{d8}
9001d084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001d088:	b004      	add	sp, #16
9001d08a:	4770      	bx	lr
9001d08c:	2b25      	cmp	r3, #37	; 0x25
9001d08e:	d1ef      	bne.n	9001d070 <EwTrace+0x22>
9001d090:	b112      	cbz	r2, 9001d098 <EwTrace+0x4a>
9001d092:	4630      	mov	r0, r6
9001d094:	f7ff fda8 	bl	9001cbe8 <EwPrint>
9001d098:	7823      	ldrb	r3, [r4, #0]
9001d09a:	3502      	adds	r5, #2
9001d09c:	2b75      	cmp	r3, #117	; 0x75
9001d09e:	d80b      	bhi.n	9001d0b8 <EwTrace+0x6a>
9001d0a0:	2b48      	cmp	r3, #72	; 0x48
9001d0a2:	d80b      	bhi.n	9001d0bc <EwTrace+0x6e>
9001d0a4:	2b2a      	cmp	r3, #42	; 0x2a
9001d0a6:	f000 8188 	beq.w	9001d3ba <EwTrace+0x36c>
9001d0aa:	d867      	bhi.n	9001d17c <EwTrace+0x12e>
9001d0ac:	2b24      	cmp	r3, #36	; 0x24
9001d0ae:	f000 818f 	beq.w	9001d3d0 <EwTrace+0x382>
9001d0b2:	2b26      	cmp	r3, #38	; 0x26
9001d0b4:	f000 8196 	beq.w	9001d3e4 <EwTrace+0x396>
9001d0b8:	2201      	movs	r2, #1
9001d0ba:	e7d8      	b.n	9001d06e <EwTrace+0x20>
9001d0bc:	3b49      	subs	r3, #73	; 0x49
9001d0be:	2b2c      	cmp	r3, #44	; 0x2c
9001d0c0:	d8fa      	bhi.n	9001d0b8 <EwTrace+0x6a>
9001d0c2:	a201      	add	r2, pc, #4	; (adr r2, 9001d0c8 <EwTrace+0x7a>)
9001d0c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9001d0c8:	9001d1a1 	.word	0x9001d1a1
9001d0cc:	9001d0b9 	.word	0x9001d0b9
9001d0d0:	9001d0b9 	.word	0x9001d0b9
9001d0d4:	9001d0b9 	.word	0x9001d0b9
9001d0d8:	9001d0b9 	.word	0x9001d0b9
9001d0dc:	9001d0b9 	.word	0x9001d0b9
9001d0e0:	9001d0b9 	.word	0x9001d0b9
9001d0e4:	9001d0b9 	.word	0x9001d0b9
9001d0e8:	9001d0b9 	.word	0x9001d0b9
9001d0ec:	9001d0b9 	.word	0x9001d0b9
9001d0f0:	9001d0b9 	.word	0x9001d0b9
9001d0f4:	9001d0b9 	.word	0x9001d0b9
9001d0f8:	9001d1bb 	.word	0x9001d1bb
9001d0fc:	9001d0b9 	.word	0x9001d0b9
9001d100:	9001d0b9 	.word	0x9001d0b9
9001d104:	9001d0b9 	.word	0x9001d0b9
9001d108:	9001d0b9 	.word	0x9001d0b9
9001d10c:	9001d0b9 	.word	0x9001d0b9
9001d110:	9001d0b9 	.word	0x9001d0b9
9001d114:	9001d0b9 	.word	0x9001d0b9
9001d118:	9001d0b9 	.word	0x9001d0b9
9001d11c:	9001d39d 	.word	0x9001d39d
9001d120:	9001d0b9 	.word	0x9001d0b9
9001d124:	9001d0b9 	.word	0x9001d0b9
9001d128:	9001d0b9 	.word	0x9001d0b9
9001d12c:	9001d2b3 	.word	0x9001d2b3
9001d130:	9001d2c9 	.word	0x9001d2c9
9001d134:	9001d0b9 	.word	0x9001d0b9
9001d138:	9001d1d1 	.word	0x9001d1d1
9001d13c:	9001d1e9 	.word	0x9001d1e9
9001d140:	9001d391 	.word	0x9001d391
9001d144:	9001d40f 	.word	0x9001d40f
9001d148:	9001d185 	.word	0x9001d185
9001d14c:	9001d0b9 	.word	0x9001d0b9
9001d150:	9001d0b9 	.word	0x9001d0b9
9001d154:	9001d323 	.word	0x9001d323
9001d158:	9001d0b9 	.word	0x9001d0b9
9001d15c:	9001d0b9 	.word	0x9001d0b9
9001d160:	9001d2e1 	.word	0x9001d2e1
9001d164:	9001d2f9 	.word	0x9001d2f9
9001d168:	9001d0b9 	.word	0x9001d0b9
9001d16c:	9001d30d 	.word	0x9001d30d
9001d170:	9001d403 	.word	0x9001d403
9001d174:	9001d1dd 	.word	0x9001d1dd
9001d178:	9001d195 	.word	0x9001d195
9001d17c:	2b30      	cmp	r3, #48	; 0x30
9001d17e:	d19b      	bne.n	9001d0b8 <EwTrace+0x6a>
9001d180:	486f      	ldr	r0, [pc, #444]	; (9001d340 <EwTrace+0x2f2>)
9001d182:	e09c      	b.n	9001d2be <EwTrace+0x270>
9001d184:	9b03      	ldr	r3, [sp, #12]
9001d186:	486f      	ldr	r0, [pc, #444]	; (9001d344 <EwTrace+0x2f6>)
9001d188:	1d1a      	adds	r2, r3, #4
9001d18a:	6819      	ldr	r1, [r3, #0]
9001d18c:	9203      	str	r2, [sp, #12]
9001d18e:	f7ff fd2b 	bl	9001cbe8 <EwPrint>
9001d192:	e791      	b.n	9001d0b8 <EwTrace+0x6a>
9001d194:	9b03      	ldr	r3, [sp, #12]
9001d196:	486c      	ldr	r0, [pc, #432]	; (9001d348 <EwTrace+0x2fa>)
9001d198:	1d1a      	adds	r2, r3, #4
9001d19a:	6819      	ldr	r1, [r3, #0]
9001d19c:	9203      	str	r2, [sp, #12]
9001d19e:	e7f6      	b.n	9001d18e <EwTrace+0x140>
9001d1a0:	9b03      	ldr	r3, [sp, #12]
9001d1a2:	486a      	ldr	r0, [pc, #424]	; (9001d34c <EwTrace+0x2fe>)
9001d1a4:	3307      	adds	r3, #7
9001d1a6:	f023 0307 	bic.w	r3, r3, #7
9001d1aa:	f103 0208 	add.w	r2, r3, #8
9001d1ae:	9203      	str	r2, [sp, #12]
9001d1b0:	e9d3 2300 	ldrd	r2, r3, [r3]
9001d1b4:	f7ff fd18 	bl	9001cbe8 <EwPrint>
9001d1b8:	e77e      	b.n	9001d0b8 <EwTrace+0x6a>
9001d1ba:	9b03      	ldr	r3, [sp, #12]
9001d1bc:	4864      	ldr	r0, [pc, #400]	; (9001d350 <EwTrace+0x302>)
9001d1be:	3307      	adds	r3, #7
9001d1c0:	f023 0307 	bic.w	r3, r3, #7
9001d1c4:	f103 0208 	add.w	r2, r3, #8
9001d1c8:	9203      	str	r2, [sp, #12]
9001d1ca:	e9d3 2300 	ldrd	r2, r3, [r3]
9001d1ce:	e7f1      	b.n	9001d1b4 <EwTrace+0x166>
9001d1d0:	9b03      	ldr	r3, [sp, #12]
9001d1d2:	4860      	ldr	r0, [pc, #384]	; (9001d354 <EwTrace+0x306>)
9001d1d4:	1d1a      	adds	r2, r3, #4
9001d1d6:	6819      	ldr	r1, [r3, #0]
9001d1d8:	9203      	str	r2, [sp, #12]
9001d1da:	e7d8      	b.n	9001d18e <EwTrace+0x140>
9001d1dc:	9b03      	ldr	r3, [sp, #12]
9001d1de:	485e      	ldr	r0, [pc, #376]	; (9001d358 <EwTrace+0x30a>)
9001d1e0:	1d1a      	adds	r2, r3, #4
9001d1e2:	6819      	ldr	r1, [r3, #0]
9001d1e4:	9203      	str	r2, [sp, #12]
9001d1e6:	e7d2      	b.n	9001d18e <EwTrace+0x140>
9001d1e8:	9b03      	ldr	r3, [sp, #12]
9001d1ea:	3307      	adds	r3, #7
9001d1ec:	f023 0307 	bic.w	r3, r3, #7
9001d1f0:	f103 0208 	add.w	r2, r3, #8
9001d1f4:	e9d3 0100 	ldrd	r0, r1, [r3]
9001d1f8:	9203      	str	r2, [sp, #12]
9001d1fa:	f004 fe1d 	bl	90021e38 <__aeabi_d2f>
9001d1fe:	ee00 0a10 	vmov	s0, r0
9001d202:	ee08 0a10 	vmov	s16, r0
9001d206:	f002 f815 	bl	9001f234 <EwIsFloatInf>
9001d20a:	2800      	cmp	r0, #0
9001d20c:	d147      	bne.n	9001d29e <EwTrace+0x250>
9001d20e:	eeb0 0a48 	vmov.f32	s0, s16
9001d212:	f001 fff9 	bl	9001f208 <EwIsFloatNaN>
9001d216:	2800      	cmp	r0, #0
9001d218:	d141      	bne.n	9001d29e <EwTrace+0x250>
9001d21a:	eeb5 8a40 	vcmp.f32	s16, #0.0
9001d21e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d222:	d03c      	beq.n	9001d29e <EwTrace+0x250>
9001d224:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
9001d228:	4604      	mov	r4, r0
9001d22a:	eddf 7a4c 	vldr	s15, [pc, #304]	; 9001d35c <EwTrace+0x30e>
9001d22e:	e002      	b.n	9001d236 <EwTrace+0x1e8>
9001d230:	ee88 8a07 	vdiv.f32	s16, s16, s14
9001d234:	3401      	adds	r4, #1
9001d236:	eeb4 8ae7 	vcmpe.f32	s16, s15
9001d23a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d23e:	daf7      	bge.n	9001d230 <EwTrace+0x1e2>
9001d240:	eeb4 8ae8 	vcmpe.f32	s16, s17
9001d244:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d248:	d9f2      	bls.n	9001d230 <EwTrace+0x1e2>
9001d24a:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
9001d24e:	eddf 7a44 	vldr	s15, [pc, #272]	; 9001d360 <EwTrace+0x312>
9001d252:	ed9f 7a44 	vldr	s14, [pc, #272]	; 9001d364 <EwTrace+0x316>
9001d256:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9001d25a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d25e:	dd04      	ble.n	9001d26a <EwTrace+0x21c>
9001d260:	eeb4 8ac7 	vcmpe.f32	s16, s14
9001d264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d268:	d415      	bmi.n	9001d296 <EwTrace+0x248>
9001d26a:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
9001d26e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d272:	d504      	bpl.n	9001d27e <EwTrace+0x230>
9001d274:	eeb4 8ae7 	vcmpe.f32	s16, s15
9001d278:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001d27c:	dc0b      	bgt.n	9001d296 <EwTrace+0x248>
9001d27e:	b174      	cbz	r4, 9001d29e <EwTrace+0x250>
9001d280:	ee18 0a10 	vmov	r0, s16
9001d284:	f004 fd80 	bl	90021d88 <__aeabi_f2d>
9001d288:	9400      	str	r4, [sp, #0]
9001d28a:	4602      	mov	r2, r0
9001d28c:	460b      	mov	r3, r1
9001d28e:	4836      	ldr	r0, [pc, #216]	; (9001d368 <EwTrace+0x31a>)
9001d290:	f7ff fcaa 	bl	9001cbe8 <EwPrint>
9001d294:	e710      	b.n	9001d0b8 <EwTrace+0x6a>
9001d296:	ee28 8a26 	vmul.f32	s16, s16, s13
9001d29a:	3c01      	subs	r4, #1
9001d29c:	e7db      	b.n	9001d256 <EwTrace+0x208>
9001d29e:	ee18 0a10 	vmov	r0, s16
9001d2a2:	f004 fd71 	bl	90021d88 <__aeabi_f2d>
9001d2a6:	4602      	mov	r2, r0
9001d2a8:	460b      	mov	r3, r1
9001d2aa:	4830      	ldr	r0, [pc, #192]	; (9001d36c <EwTrace+0x31e>)
9001d2ac:	f7ff fc9c 	bl	9001cbe8 <EwPrint>
9001d2b0:	e702      	b.n	9001d0b8 <EwTrace+0x6a>
9001d2b2:	9b03      	ldr	r3, [sp, #12]
9001d2b4:	1d1a      	adds	r2, r3, #4
9001d2b6:	681b      	ldr	r3, [r3, #0]
9001d2b8:	9203      	str	r2, [sp, #12]
9001d2ba:	b11b      	cbz	r3, 9001d2c4 <EwTrace+0x276>
9001d2bc:	482c      	ldr	r0, [pc, #176]	; (9001d370 <EwTrace+0x322>)
9001d2be:	f7ff fc93 	bl	9001cbe8 <EwPrint>
9001d2c2:	e6f9      	b.n	9001d0b8 <EwTrace+0x6a>
9001d2c4:	482b      	ldr	r0, [pc, #172]	; (9001d374 <EwTrace+0x326>)
9001d2c6:	e7fa      	b.n	9001d2be <EwTrace+0x270>
9001d2c8:	9b03      	ldr	r3, [sp, #12]
9001d2ca:	1d1a      	adds	r2, r3, #4
9001d2cc:	681b      	ldr	r3, [r3, #0]
9001d2ce:	b299      	uxth	r1, r3
9001d2d0:	3b20      	subs	r3, #32
9001d2d2:	9203      	str	r2, [sp, #12]
9001d2d4:	b29b      	uxth	r3, r3
9001d2d6:	2b5f      	cmp	r3, #95	; 0x5f
9001d2d8:	bf94      	ite	ls
9001d2da:	4827      	ldrls	r0, [pc, #156]	; (9001d378 <EwTrace+0x32a>)
9001d2dc:	4827      	ldrhi	r0, [pc, #156]	; (9001d37c <EwTrace+0x32e>)
9001d2de:	e756      	b.n	9001d18e <EwTrace+0x140>
9001d2e0:	9803      	ldr	r0, [sp, #12]
9001d2e2:	1d03      	adds	r3, r0, #4
9001d2e4:	7842      	ldrb	r2, [r0, #1]
9001d2e6:	7801      	ldrb	r1, [r0, #0]
9001d2e8:	9303      	str	r3, [sp, #12]
9001d2ea:	7883      	ldrb	r3, [r0, #2]
9001d2ec:	78c0      	ldrb	r0, [r0, #3]
9001d2ee:	9000      	str	r0, [sp, #0]
9001d2f0:	4823      	ldr	r0, [pc, #140]	; (9001d380 <EwTrace+0x332>)
9001d2f2:	f7ff fc79 	bl	9001cbe8 <EwPrint>
9001d2f6:	e6df      	b.n	9001d0b8 <EwTrace+0x6a>
9001d2f8:	9b03      	ldr	r3, [sp, #12]
9001d2fa:	4822      	ldr	r0, [pc, #136]	; (9001d384 <EwTrace+0x336>)
9001d2fc:	f103 0208 	add.w	r2, r3, #8
9001d300:	9203      	str	r2, [sp, #12]
9001d302:	e9d3 1200 	ldrd	r1, r2, [r3]
9001d306:	f7ff fc6f 	bl	9001cbe8 <EwPrint>
9001d30a:	e6d5      	b.n	9001d0b8 <EwTrace+0x6a>
9001d30c:	9903      	ldr	r1, [sp, #12]
9001d30e:	481e      	ldr	r0, [pc, #120]	; (9001d388 <EwTrace+0x33a>)
9001d310:	f101 0310 	add.w	r3, r1, #16
9001d314:	9303      	str	r3, [sp, #12]
9001d316:	68cb      	ldr	r3, [r1, #12]
9001d318:	9300      	str	r3, [sp, #0]
9001d31a:	e9d1 2301 	ldrd	r2, r3, [r1, #4]
9001d31e:	6809      	ldr	r1, [r1, #0]
9001d320:	e7e7      	b.n	9001d2f2 <EwTrace+0x2a4>
9001d322:	9b03      	ldr	r3, [sp, #12]
9001d324:	4819      	ldr	r0, [pc, #100]	; (9001d38c <EwTrace+0x33e>)
9001d326:	1d1a      	adds	r2, r3, #4
9001d328:	6819      	ldr	r1, [r3, #0]
9001d32a:	9203      	str	r2, [sp, #12]
9001d32c:	e72f      	b.n	9001d18e <EwTrace+0x140>
9001d32e:	bf00      	nop
9001d330:	90034990 	.word	0x90034990
9001d334:	90034998 	.word	0x90034998
9001d338:	d01502f9 	.word	0xd01502f9
9001d33c:	90035059 	.word	0x90035059
9001d340:	900349bf 	.word	0x900349bf
9001d344:	900349c7 	.word	0x900349c7
9001d348:	9003499b 	.word	0x9003499b
9001d34c:	9003499e 	.word	0x9003499e
9001d350:	900349a3 	.word	0x900349a3
9001d354:	900349a8 	.word	0x900349a8
9001d358:	900349b4 	.word	0x900349b4
9001d35c:	501502f9 	.word	0x501502f9
9001d360:	bdcccccd 	.word	0xbdcccccd
9001d364:	3dcccccd 	.word	0x3dcccccd
9001d368:	900349c4 	.word	0x900349c4
9001d36c:	900349ca 	.word	0x900349ca
9001d370:	900349cd 	.word	0x900349cd
9001d374:	900349d2 	.word	0x900349d2
9001d378:	900349d8 	.word	0x900349d8
9001d37c:	900349dd 	.word	0x900349dd
9001d380:	900349e6 	.word	0x900349e6
9001d384:	900349f8 	.word	0x900349f8
9001d388:	90034a00 	.word	0x90034a00
9001d38c:	90034a0e 	.word	0x90034a0e
9001d390:	9b03      	ldr	r3, [sp, #12]
9001d392:	4822      	ldr	r0, [pc, #136]	; (9001d41c <EwTrace+0x3ce>)
9001d394:	1d1a      	adds	r2, r3, #4
9001d396:	6819      	ldr	r1, [r3, #0]
9001d398:	9203      	str	r2, [sp, #12]
9001d39a:	e6f8      	b.n	9001d18e <EwTrace+0x140>
9001d39c:	9b03      	ldr	r3, [sp, #12]
9001d39e:	f103 020c 	add.w	r2, r3, #12
9001d3a2:	9203      	str	r2, [sp, #12]
9001d3a4:	681a      	ldr	r2, [r3, #0]
9001d3a6:	2a00      	cmp	r2, #0
9001d3a8:	f43f aeea 	beq.w	9001d180 <EwTrace+0x132>
9001d3ac:	6898      	ldr	r0, [r3, #8]
9001d3ae:	6811      	ldr	r1, [r2, #0]
9001d3b0:	9000      	str	r0, [sp, #0]
9001d3b2:	481b      	ldr	r0, [pc, #108]	; (9001d420 <EwTrace+0x3d2>)
9001d3b4:	685b      	ldr	r3, [r3, #4]
9001d3b6:	6849      	ldr	r1, [r1, #4]
9001d3b8:	e79b      	b.n	9001d2f2 <EwTrace+0x2a4>
9001d3ba:	9b03      	ldr	r3, [sp, #12]
9001d3bc:	1d1a      	adds	r2, r3, #4
9001d3be:	9203      	str	r2, [sp, #12]
9001d3c0:	681a      	ldr	r2, [r3, #0]
9001d3c2:	2a00      	cmp	r2, #0
9001d3c4:	f43f aedc 	beq.w	9001d180 <EwTrace+0x132>
9001d3c8:	6813      	ldr	r3, [r2, #0]
9001d3ca:	4816      	ldr	r0, [pc, #88]	; (9001d424 <EwTrace+0x3d6>)
9001d3cc:	6859      	ldr	r1, [r3, #4]
9001d3ce:	e79a      	b.n	9001d306 <EwTrace+0x2b8>
9001d3d0:	9b03      	ldr	r3, [sp, #12]
9001d3d2:	1d1a      	adds	r2, r3, #4
9001d3d4:	681b      	ldr	r3, [r3, #0]
9001d3d6:	9203      	str	r2, [sp, #12]
9001d3d8:	2b00      	cmp	r3, #0
9001d3da:	f43f aed1 	beq.w	9001d180 <EwTrace+0x132>
9001d3de:	6859      	ldr	r1, [r3, #4]
9001d3e0:	4811      	ldr	r0, [pc, #68]	; (9001d428 <EwTrace+0x3da>)
9001d3e2:	e6d4      	b.n	9001d18e <EwTrace+0x140>
9001d3e4:	9b03      	ldr	r3, [sp, #12]
9001d3e6:	f103 0208 	add.w	r2, r3, #8
9001d3ea:	9203      	str	r2, [sp, #12]
9001d3ec:	681a      	ldr	r2, [r3, #0]
9001d3ee:	2a00      	cmp	r2, #0
9001d3f0:	f43f aec6 	beq.w	9001d180 <EwTrace+0x132>
9001d3f4:	6811      	ldr	r1, [r2, #0]
9001d3f6:	685b      	ldr	r3, [r3, #4]
9001d3f8:	6849      	ldr	r1, [r1, #4]
9001d3fa:	480c      	ldr	r0, [pc, #48]	; (9001d42c <EwTrace+0x3de>)
9001d3fc:	f7ff fbf4 	bl	9001cbe8 <EwPrint>
9001d400:	e65a      	b.n	9001d0b8 <EwTrace+0x6a>
9001d402:	9b03      	ldr	r3, [sp, #12]
9001d404:	480a      	ldr	r0, [pc, #40]	; (9001d430 <EwTrace+0x3e2>)
9001d406:	1d1a      	adds	r2, r3, #4
9001d408:	6819      	ldr	r1, [r3, #0]
9001d40a:	9203      	str	r2, [sp, #12]
9001d40c:	e6bf      	b.n	9001d18e <EwTrace+0x140>
9001d40e:	9b03      	ldr	r3, [sp, #12]
9001d410:	4808      	ldr	r0, [pc, #32]	; (9001d434 <EwTrace+0x3e6>)
9001d412:	1d1a      	adds	r2, r3, #4
9001d414:	6819      	ldr	r1, [r3, #0]
9001d416:	9203      	str	r2, [sp, #12]
9001d418:	e6b9      	b.n	9001d18e <EwTrace+0x140>
9001d41a:	bf00      	nop
9001d41c:	90034a1e 	.word	0x90034a1e
9001d420:	90034a2c 	.word	0x90034a2c
9001d424:	90034a58 	.word	0x90034a58
9001d428:	90034eb9 	.word	0x90034eb9
9001d42c:	90034a61 	.word	0x90034a61
9001d430:	90034a86 	.word	0x90034a86
9001d434:	90034a8b 	.word	0x90034a8b

9001d438 <EwThrow>:
9001d438:	4601      	mov	r1, r0
9001d43a:	4804      	ldr	r0, [pc, #16]	; (9001d44c <EwThrow+0x14>)
9001d43c:	b508      	push	{r3, lr}
9001d43e:	f7ff fbd3 	bl	9001cbe8 <EwPrint>
9001d442:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9001d446:	f009 bc39 	b.w	90026cbc <EwPanic>
9001d44a:	bf00      	nop
9001d44c:	90034a97 	.word	0x90034a97

9001d450 <EwError>:
9001d450:	4601      	mov	r1, r0
9001d452:	4801      	ldr	r0, [pc, #4]	; (9001d458 <EwError+0x8>)
9001d454:	f7ff bbc8 	b.w	9001cbe8 <EwPrint>
9001d458:	90034a9b 	.word	0x90034a9b

9001d45c <EwErrorS>:
9001d45c:	460a      	mov	r2, r1
9001d45e:	4601      	mov	r1, r0
9001d460:	4801      	ldr	r0, [pc, #4]	; (9001d468 <EwErrorS+0xc>)
9001d462:	f7ff bbc1 	b.w	9001cbe8 <EwPrint>
9001d466:	bf00      	nop
9001d468:	90034af0 	.word	0x90034af0

9001d46c <EwErrorSD>:
9001d46c:	4613      	mov	r3, r2
9001d46e:	460a      	mov	r2, r1
9001d470:	4601      	mov	r1, r0
9001d472:	4801      	ldr	r0, [pc, #4]	; (9001d478 <EwErrorSD+0xc>)
9001d474:	f7ff bbb8 	b.w	9001cbe8 <EwPrint>
9001d478:	90034b51 	.word	0x90034b51

9001d47c <EwErrorPD>:
9001d47c:	4613      	mov	r3, r2
9001d47e:	460a      	mov	r2, r1
9001d480:	4601      	mov	r1, r0
9001d482:	4801      	ldr	r0, [pc, #4]	; (9001d488 <EwErrorPD+0xc>)
9001d484:	f7ff bbb0 	b.w	9001cbe8 <EwPrint>
9001d488:	90034bbe 	.word	0x90034bbe

9001d48c <EwErrorDD>:
9001d48c:	4613      	mov	r3, r2
9001d48e:	460a      	mov	r2, r1
9001d490:	4601      	mov	r1, r0
9001d492:	4801      	ldr	r0, [pc, #4]	; (9001d498 <EwErrorDD+0xc>)
9001d494:	f7ff bba8 	b.w	9001cbe8 <EwPrint>
9001d498:	90034c29 	.word	0x90034c29

9001d49c <EwErrorPDS>:
9001d49c:	b507      	push	{r0, r1, r2, lr}
9001d49e:	9300      	str	r3, [sp, #0]
9001d4a0:	4613      	mov	r3, r2
9001d4a2:	460a      	mov	r2, r1
9001d4a4:	4601      	mov	r1, r0
9001d4a6:	4803      	ldr	r0, [pc, #12]	; (9001d4b4 <EwErrorPDS+0x18>)
9001d4a8:	f7ff fb9e 	bl	9001cbe8 <EwPrint>
9001d4ac:	b003      	add	sp, #12
9001d4ae:	f85d fb04 	ldr.w	pc, [sp], #4
9001d4b2:	bf00      	nop
9001d4b4:	90034c94 	.word	0x90034c94

9001d4b8 <EwInitHeap>:
9001d4b8:	2800      	cmp	r0, #0
9001d4ba:	4b05      	ldr	r3, [pc, #20]	; (9001d4d0 <EwInitHeap+0x18>)
9001d4bc:	f04f 0200 	mov.w	r2, #0
9001d4c0:	bfd8      	it	le
9001d4c2:	2080      	movle	r0, #128	; 0x80
9001d4c4:	6018      	str	r0, [r3, #0]
9001d4c6:	2001      	movs	r0, #1
9001d4c8:	4b02      	ldr	r3, [pc, #8]	; (9001d4d4 <EwInitHeap+0x1c>)
9001d4ca:	e9c3 2200 	strd	r2, r2, [r3]
9001d4ce:	4770      	bx	lr
9001d4d0:	20000024 	.word	0x20000024
9001d4d4:	200002a0 	.word	0x200002a0

9001d4d8 <EwDoneHeap>:
9001d4d8:	4b03      	ldr	r3, [pc, #12]	; (9001d4e8 <EwDoneHeap+0x10>)
9001d4da:	2280      	movs	r2, #128	; 0x80
9001d4dc:	601a      	str	r2, [r3, #0]
9001d4de:	2200      	movs	r2, #0
9001d4e0:	4b02      	ldr	r3, [pc, #8]	; (9001d4ec <EwDoneHeap+0x14>)
9001d4e2:	e9c3 2200 	strd	r2, r2, [r3]
9001d4e6:	4770      	bx	lr
9001d4e8:	20000024 	.word	0x20000024
9001d4ec:	200002a0 	.word	0x200002a0

9001d4f0 <EwAddHeapMemoryPool>:
9001d4f0:	f010 0303 	ands.w	r3, r0, #3
9001d4f4:	bf1e      	ittt	ne
9001d4f6:	f1c3 0304 	rsbne	r3, r3, #4
9001d4fa:	1ac9      	subne	r1, r1, r3
9001d4fc:	18c0      	addne	r0, r0, r3
9001d4fe:	f021 0103 	bic.w	r1, r1, #3
9001d502:	b470      	push	{r4, r5, r6}
9001d504:	f1a1 0438 	sub.w	r4, r1, #56	; 0x38
9001d508:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
9001d50c:	da04      	bge.n	9001d518 <EwAddHeapMemoryPool+0x28>
9001d50e:	f44f 70a7 	mov.w	r0, #334	; 0x14e
9001d512:	bc70      	pop	{r4, r5, r6}
9001d514:	f7ff bf9c 	b.w	9001d450 <EwError>
9001d518:	f1a1 033c 	sub.w	r3, r1, #60	; 0x3c
9001d51c:	2200      	movs	r2, #0
9001d51e:	4401      	add	r1, r0
9001d520:	6084      	str	r4, [r0, #8]
9001d522:	60c3      	str	r3, [r0, #12]
9001d524:	2301      	movs	r3, #1
9001d526:	6342      	str	r2, [r0, #52]	; 0x34
9001d528:	6002      	str	r2, [r0, #0]
9001d52a:	e9c0 3204 	strd	r3, r2, [r0, #16]
9001d52e:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
9001d532:	4a0c      	ldr	r2, [pc, #48]	; (9001d564 <EwAddHeapMemoryPool+0x74>)
9001d534:	f100 0338 	add.w	r3, r0, #56	; 0x38
9001d538:	6855      	ldr	r5, [r2, #4]
9001d53a:	6816      	ldr	r6, [r2, #0]
9001d53c:	6183      	str	r3, [r0, #24]
9001d53e:	6045      	str	r5, [r0, #4]
9001d540:	6050      	str	r0, [r2, #4]
9001d542:	e9c0 1307 	strd	r1, r3, [r0, #28]
9001d546:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
9001d54a:	b906      	cbnz	r6, 9001d54e <EwAddHeapMemoryPool+0x5e>
9001d54c:	6010      	str	r0, [r2, #0]
9001d54e:	b105      	cbz	r5, 9001d552 <EwAddHeapMemoryPool+0x62>
9001d550:	6028      	str	r0, [r5, #0]
9001d552:	2200      	movs	r2, #0
9001d554:	6384      	str	r4, [r0, #56]	; 0x38
9001d556:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
9001d55a:	bc70      	pop	{r4, r5, r6}
9001d55c:	f841 3c04 	str.w	r3, [r1, #-4]
9001d560:	4770      	bx	lr
9001d562:	bf00      	nop
9001d564:	200002a0 	.word	0x200002a0

9001d568 <EwGetHeapInfo>:
9001d568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d56c:	f04f 0c00 	mov.w	ip, #0
9001d570:	b085      	sub	sp, #20
9001d572:	469b      	mov	fp, r3
9001d574:	4b31      	ldr	r3, [pc, #196]	; (9001d63c <EwGetHeapInfo+0xd4>)
9001d576:	4682      	mov	sl, r0
9001d578:	46e0      	mov	r8, ip
9001d57a:	681b      	ldr	r3, [r3, #0]
9001d57c:	46e1      	mov	r9, ip
9001d57e:	46e6      	mov	lr, ip
9001d580:	4660      	mov	r0, ip
9001d582:	4664      	mov	r4, ip
9001d584:	4665      	mov	r5, ip
9001d586:	4666      	mov	r6, ip
9001d588:	f8cd c004 	str.w	ip, [sp, #4]
9001d58c:	e9cd 1202 	strd	r1, r2, [sp, #8]
9001d590:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
9001d594:	2b00      	cmp	r3, #0
9001d596:	d12f      	bne.n	9001d5f8 <EwGetHeapInfo+0x90>
9001d598:	4572      	cmp	r2, lr
9001d59a:	bfc8      	it	gt
9001d59c:	2200      	movgt	r2, #0
9001d59e:	f1ba 0f00 	cmp.w	sl, #0
9001d5a2:	d001      	beq.n	9001d5a8 <EwGetHeapInfo+0x40>
9001d5a4:	f8ca 6000 	str.w	r6, [sl]
9001d5a8:	9b02      	ldr	r3, [sp, #8]
9001d5aa:	b103      	cbz	r3, 9001d5ae <EwGetHeapInfo+0x46>
9001d5ac:	601d      	str	r5, [r3, #0]
9001d5ae:	9b03      	ldr	r3, [sp, #12]
9001d5b0:	b103      	cbz	r3, 9001d5b4 <EwGetHeapInfo+0x4c>
9001d5b2:	601c      	str	r4, [r3, #0]
9001d5b4:	f1bb 0f00 	cmp.w	fp, #0
9001d5b8:	d001      	beq.n	9001d5be <EwGetHeapInfo+0x56>
9001d5ba:	f8cb 0000 	str.w	r0, [fp]
9001d5be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d5c0:	b10b      	cbz	r3, 9001d5c6 <EwGetHeapInfo+0x5e>
9001d5c2:	9901      	ldr	r1, [sp, #4]
9001d5c4:	6019      	str	r1, [r3, #0]
9001d5c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001d5c8:	b10b      	cbz	r3, 9001d5ce <EwGetHeapInfo+0x66>
9001d5ca:	3a04      	subs	r2, #4
9001d5cc:	601a      	str	r2, [r3, #0]
9001d5ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d5d0:	b11b      	cbz	r3, 9001d5da <EwGetHeapInfo+0x72>
9001d5d2:	f1ae 0304 	sub.w	r3, lr, #4
9001d5d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001d5d8:	6013      	str	r3, [r2, #0]
9001d5da:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001d5dc:	b10b      	cbz	r3, 9001d5e2 <EwGetHeapInfo+0x7a>
9001d5de:	f8c3 9000 	str.w	r9, [r3]
9001d5e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001d5e4:	b10b      	cbz	r3, 9001d5ea <EwGetHeapInfo+0x82>
9001d5e6:	f8c3 8000 	str.w	r8, [r3]
9001d5ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001d5ec:	b10b      	cbz	r3, 9001d5f2 <EwGetHeapInfo+0x8a>
9001d5ee:	f8c3 c000 	str.w	ip, [r3]
9001d5f2:	b005      	add	sp, #20
9001d5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d5f8:	689f      	ldr	r7, [r3, #8]
9001d5fa:	3601      	adds	r6, #1
9001d5fc:	9901      	ldr	r1, [sp, #4]
9001d5fe:	443d      	add	r5, r7
9001d600:	68df      	ldr	r7, [r3, #12]
9001d602:	443c      	add	r4, r7
9001d604:	691f      	ldr	r7, [r3, #16]
9001d606:	4439      	add	r1, r7
9001d608:	695f      	ldr	r7, [r3, #20]
9001d60a:	4438      	add	r0, r7
9001d60c:	6adf      	ldr	r7, [r3, #44]	; 0x2c
9001d60e:	9101      	str	r1, [sp, #4]
9001d610:	44b9      	add	r9, r7
9001d612:	6b1f      	ldr	r7, [r3, #48]	; 0x30
9001d614:	44b8      	add	r8, r7
9001d616:	6b5f      	ldr	r7, [r3, #52]	; 0x34
9001d618:	44bc      	add	ip, r7
9001d61a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001d61c:	b90f      	cbnz	r7, 9001d622 <EwGetHeapInfo+0xba>
9001d61e:	9f10      	ldr	r7, [sp, #64]	; 0x40
9001d620:	b10f      	cbz	r7, 9001d626 <EwGetHeapInfo+0xbe>
9001d622:	6a1f      	ldr	r7, [r3, #32]
9001d624:	b90f      	cbnz	r7, 9001d62a <EwGetHeapInfo+0xc2>
9001d626:	681b      	ldr	r3, [r3, #0]
9001d628:	e7b4      	b.n	9001d594 <EwGetHeapInfo+0x2c>
9001d62a:	6839      	ldr	r1, [r7, #0]
9001d62c:	687f      	ldr	r7, [r7, #4]
9001d62e:	428a      	cmp	r2, r1
9001d630:	bfa8      	it	ge
9001d632:	460a      	movge	r2, r1
9001d634:	458e      	cmp	lr, r1
9001d636:	bfb8      	it	lt
9001d638:	468e      	movlt	lr, r1
9001d63a:	e7f3      	b.n	9001d624 <EwGetHeapInfo+0xbc>
9001d63c:	200002a0 	.word	0x200002a0

9001d640 <EwDumpHeap>:
9001d640:	4b36      	ldr	r3, [pc, #216]	; (9001d71c <EwDumpHeap+0xdc>)
9001d642:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d646:	681c      	ldr	r4, [r3, #0]
9001d648:	2600      	movs	r6, #0
9001d64a:	4b35      	ldr	r3, [pc, #212]	; (9001d720 <EwDumpHeap+0xe0>)
9001d64c:	4607      	mov	r7, r0
9001d64e:	f8df 8114 	ldr.w	r8, [pc, #276]	; 9001d764 <EwDumpHeap+0x124>
9001d652:	f8df 9114 	ldr.w	r9, [pc, #276]	; 9001d768 <EwDumpHeap+0x128>
9001d656:	6819      	ldr	r1, [r3, #0]
9001d658:	4832      	ldr	r0, [pc, #200]	; (9001d724 <EwDumpHeap+0xe4>)
9001d65a:	f7ff fac5 	bl	9001cbe8 <EwPrint>
9001d65e:	b92c      	cbnz	r4, 9001d66c <EwDumpHeap+0x2c>
9001d660:	4831      	ldr	r0, [pc, #196]	; (9001d728 <EwDumpHeap+0xe8>)
9001d662:	b003      	add	sp, #12
9001d664:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d668:	f7ff babe 	b.w	9001cbe8 <EwPrint>
9001d66c:	4631      	mov	r1, r6
9001d66e:	4640      	mov	r0, r8
9001d670:	69a5      	ldr	r5, [r4, #24]
9001d672:	f7ff fab9 	bl	9001cbe8 <EwPrint>
9001d676:	68a1      	ldr	r1, [r4, #8]
9001d678:	482c      	ldr	r0, [pc, #176]	; (9001d72c <EwDumpHeap+0xec>)
9001d67a:	f7ff fab5 	bl	9001cbe8 <EwPrint>
9001d67e:	68e1      	ldr	r1, [r4, #12]
9001d680:	482b      	ldr	r0, [pc, #172]	; (9001d730 <EwDumpHeap+0xf0>)
9001d682:	f7ff fab1 	bl	9001cbe8 <EwPrint>
9001d686:	6921      	ldr	r1, [r4, #16]
9001d688:	482a      	ldr	r0, [pc, #168]	; (9001d734 <EwDumpHeap+0xf4>)
9001d68a:	f7ff faad 	bl	9001cbe8 <EwPrint>
9001d68e:	6961      	ldr	r1, [r4, #20]
9001d690:	4829      	ldr	r0, [pc, #164]	; (9001d738 <EwDumpHeap+0xf8>)
9001d692:	f7ff faa9 	bl	9001cbe8 <EwPrint>
9001d696:	69a1      	ldr	r1, [r4, #24]
9001d698:	4828      	ldr	r0, [pc, #160]	; (9001d73c <EwDumpHeap+0xfc>)
9001d69a:	f7ff faa5 	bl	9001cbe8 <EwPrint>
9001d69e:	69e1      	ldr	r1, [r4, #28]
9001d6a0:	4827      	ldr	r0, [pc, #156]	; (9001d740 <EwDumpHeap+0x100>)
9001d6a2:	f7ff faa1 	bl	9001cbe8 <EwPrint>
9001d6a6:	6a21      	ldr	r1, [r4, #32]
9001d6a8:	4826      	ldr	r0, [pc, #152]	; (9001d744 <EwDumpHeap+0x104>)
9001d6aa:	f7ff fa9d 	bl	9001cbe8 <EwPrint>
9001d6ae:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001d6b0:	4825      	ldr	r0, [pc, #148]	; (9001d748 <EwDumpHeap+0x108>)
9001d6b2:	f7ff fa99 	bl	9001cbe8 <EwPrint>
9001d6b6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9001d6b8:	4824      	ldr	r0, [pc, #144]	; (9001d74c <EwDumpHeap+0x10c>)
9001d6ba:	f7ff fa95 	bl	9001cbe8 <EwPrint>
9001d6be:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9001d6c0:	4823      	ldr	r0, [pc, #140]	; (9001d750 <EwDumpHeap+0x110>)
9001d6c2:	f7ff fa91 	bl	9001cbe8 <EwPrint>
9001d6c6:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001d6c8:	4822      	ldr	r0, [pc, #136]	; (9001d754 <EwDumpHeap+0x114>)
9001d6ca:	f7ff fa8d 	bl	9001cbe8 <EwPrint>
9001d6ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
9001d6d0:	4821      	ldr	r0, [pc, #132]	; (9001d758 <EwDumpHeap+0x118>)
9001d6d2:	f7ff fa89 	bl	9001cbe8 <EwPrint>
9001d6d6:	b137      	cbz	r7, 9001d6e6 <EwDumpHeap+0xa6>
9001d6d8:	f8df a090 	ldr.w	sl, [pc, #144]	; 9001d76c <EwDumpHeap+0x12c>
9001d6dc:	f8df b090 	ldr.w	fp, [pc, #144]	; 9001d770 <EwDumpHeap+0x130>
9001d6e0:	69e3      	ldr	r3, [r4, #28]
9001d6e2:	42ab      	cmp	r3, r5
9001d6e4:	d802      	bhi.n	9001d6ec <EwDumpHeap+0xac>
9001d6e6:	6824      	ldr	r4, [r4, #0]
9001d6e8:	3601      	adds	r6, #1
9001d6ea:	e7b8      	b.n	9001d65e <EwDumpHeap+0x1e>
9001d6ec:	682b      	ldr	r3, [r5, #0]
9001d6ee:	491b      	ldr	r1, [pc, #108]	; (9001d75c <EwDumpHeap+0x11c>)
9001d6f0:	f013 0f01 	tst.w	r3, #1
9001d6f4:	481a      	ldr	r0, [pc, #104]	; (9001d760 <EwDumpHeap+0x120>)
9001d6f6:	bf14      	ite	ne
9001d6f8:	464a      	movne	r2, r9
9001d6fa:	4652      	moveq	r2, sl
9001d6fc:	f013 0f02 	tst.w	r3, #2
9001d700:	f023 0303 	bic.w	r3, r3, #3
9001d704:	bf18      	it	ne
9001d706:	4659      	movne	r1, fp
9001d708:	9100      	str	r1, [sp, #0]
9001d70a:	4629      	mov	r1, r5
9001d70c:	f7ff fa6c 	bl	9001cbe8 <EwPrint>
9001d710:	682b      	ldr	r3, [r5, #0]
9001d712:	f023 0303 	bic.w	r3, r3, #3
9001d716:	441d      	add	r5, r3
9001d718:	e7e2      	b.n	9001d6e0 <EwDumpHeap+0xa0>
9001d71a:	bf00      	nop
9001d71c:	200002a0 	.word	0x200002a0
9001d720:	20000024 	.word	0x20000024
9001d724:	90034d22 	.word	0x90034d22
9001d728:	90034ebc 	.word	0x90034ebc
9001d72c:	90034d6f 	.word	0x90034d6f
9001d730:	90034d89 	.word	0x90034d89
9001d734:	90034da3 	.word	0x90034da3
9001d738:	90034dbd 	.word	0x90034dbd
9001d73c:	90034dd7 	.word	0x90034dd7
9001d740:	90034df1 	.word	0x90034df1
9001d744:	90034e0b 	.word	0x90034e0b
9001d748:	90034e25 	.word	0x90034e25
9001d74c:	90034e3f 	.word	0x90034e3f
9001d750:	90034e59 	.word	0x90034e59
9001d754:	90034e73 	.word	0x90034e73
9001d758:	90034e8d 	.word	0x90034e8d
9001d75c:	9003505a 	.word	0x9003505a
9001d760:	90034ea7 	.word	0x90034ea7
9001d764:	90034d61 	.word	0x90034d61
9001d768:	90034d0c 	.word	0x90034d0c
9001d76c:	90034d11 	.word	0x90034d11
9001d770:	90034d16 	.word	0x90034d16

9001d774 <EwVerifyHeap>:
9001d774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d778:	f8df 81f4 	ldr.w	r8, [pc, #500]	; 9001d970 <EwVerifyHeap+0x1fc>
9001d77c:	b085      	sub	sp, #20
9001d77e:	f04f 0901 	mov.w	r9, #1
9001d782:	f8d8 5000 	ldr.w	r5, [r8]
9001d786:	b91d      	cbnz	r5, 9001d790 <EwVerifyHeap+0x1c>
9001d788:	4648      	mov	r0, r9
9001d78a:	b005      	add	sp, #20
9001d78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d790:	6a2b      	ldr	r3, [r5, #32]
9001d792:	69ae      	ldr	r6, [r5, #24]
9001d794:	9302      	str	r3, [sp, #8]
9001d796:	686b      	ldr	r3, [r5, #4]
9001d798:	69ea      	ldr	r2, [r5, #28]
9001d79a:	b91b      	cbnz	r3, 9001d7a4 <EwVerifyHeap+0x30>
9001d79c:	f8d8 3000 	ldr.w	r3, [r8]
9001d7a0:	42ab      	cmp	r3, r5
9001d7a2:	d135      	bne.n	9001d810 <EwVerifyHeap+0x9c>
9001d7a4:	682b      	ldr	r3, [r5, #0]
9001d7a6:	bb73      	cbnz	r3, 9001d806 <EwVerifyHeap+0x92>
9001d7a8:	f8d8 3004 	ldr.w	r3, [r8, #4]
9001d7ac:	42ab      	cmp	r3, r5
9001d7ae:	d131      	bne.n	9001d814 <EwVerifyHeap+0xa0>
9001d7b0:	68ac      	ldr	r4, [r5, #8]
9001d7b2:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
9001d7b6:	dd2f      	ble.n	9001d818 <EwVerifyHeap+0xa4>
9001d7b8:	07a3      	lsls	r3, r4, #30
9001d7ba:	d12d      	bne.n	9001d818 <EwVerifyHeap+0xa4>
9001d7bc:	f105 0338 	add.w	r3, r5, #56	; 0x38
9001d7c0:	429e      	cmp	r6, r3
9001d7c2:	d12b      	bne.n	9001d81c <EwVerifyHeap+0xa8>
9001d7c4:	4434      	add	r4, r6
9001d7c6:	42a2      	cmp	r2, r4
9001d7c8:	bf14      	ite	ne
9001d7ca:	2406      	movne	r4, #6
9001d7cc:	2400      	moveq	r4, #0
9001d7ce:	f1a2 030c 	sub.w	r3, r2, #12
9001d7d2:	2100      	movs	r1, #0
9001d7d4:	9303      	str	r3, [sp, #12]
9001d7d6:	468a      	mov	sl, r1
9001d7d8:	9b02      	ldr	r3, [sp, #8]
9001d7da:	468b      	mov	fp, r1
9001d7dc:	9101      	str	r1, [sp, #4]
9001d7de:	9300      	str	r3, [sp, #0]
9001d7e0:	4633      	mov	r3, r6
9001d7e2:	429a      	cmp	r2, r3
9001d7e4:	f000 80aa 	beq.w	9001d93c <EwVerifyHeap+0x1c8>
9001d7e8:	b1d4      	cbz	r4, 9001d820 <EwVerifyHeap+0xac>
9001d7ea:	4622      	mov	r2, r4
9001d7ec:	4629      	mov	r1, r5
9001d7ee:	f240 104f 	movw	r0, #335	; 0x14f
9001d7f2:	f7ff fe43 	bl	9001d47c <EwErrorPD>
9001d7f6:	2c00      	cmp	r4, #0
9001d7f8:	bf14      	ite	ne
9001d7fa:	f04f 0900 	movne.w	r9, #0
9001d7fe:	f009 0901 	andeq.w	r9, r9, #1
9001d802:	682d      	ldr	r5, [r5, #0]
9001d804:	e7bf      	b.n	9001d786 <EwVerifyHeap+0x12>
9001d806:	685b      	ldr	r3, [r3, #4]
9001d808:	42ab      	cmp	r3, r5
9001d80a:	d0d1      	beq.n	9001d7b0 <EwVerifyHeap+0x3c>
9001d80c:	2403      	movs	r4, #3
9001d80e:	e7de      	b.n	9001d7ce <EwVerifyHeap+0x5a>
9001d810:	2401      	movs	r4, #1
9001d812:	e7dc      	b.n	9001d7ce <EwVerifyHeap+0x5a>
9001d814:	2402      	movs	r4, #2
9001d816:	e7da      	b.n	9001d7ce <EwVerifyHeap+0x5a>
9001d818:	2404      	movs	r4, #4
9001d81a:	e7d8      	b.n	9001d7ce <EwVerifyHeap+0x5a>
9001d81c:	2405      	movs	r4, #5
9001d81e:	e7d6      	b.n	9001d7ce <EwVerifyHeap+0x5a>
9001d820:	6818      	ldr	r0, [r3, #0]
9001d822:	42b3      	cmp	r3, r6
9001d824:	f020 0e03 	bic.w	lr, r0, #3
9001d828:	eb03 0c0e 	add.w	ip, r3, lr
9001d82c:	d36a      	bcc.n	9001d904 <EwVerifyHeap+0x190>
9001d82e:	429a      	cmp	r2, r3
9001d830:	d968      	bls.n	9001d904 <EwVerifyHeap+0x190>
9001d832:	079f      	lsls	r7, r3, #30
9001d834:	d166      	bne.n	9001d904 <EwVerifyHeap+0x190>
9001d836:	f1be 0f00 	cmp.w	lr, #0
9001d83a:	dd65      	ble.n	9001d908 <EwVerifyHeap+0x194>
9001d83c:	4562      	cmp	r2, ip
9001d83e:	d365      	bcc.n	9001d90c <EwVerifyHeap+0x198>
9001d840:	f000 0703 	and.w	r7, r0, #3
9001d844:	2f02      	cmp	r7, #2
9001d846:	d063      	beq.n	9001d910 <EwVerifyHeap+0x19c>
9001d848:	0787      	lsls	r7, r0, #30
9001d84a:	d506      	bpl.n	9001d85a <EwVerifyHeap+0xe6>
9001d84c:	f1bb 0f00 	cmp.w	fp, #0
9001d850:	d060      	beq.n	9001d914 <EwVerifyHeap+0x1a0>
9001d852:	f8db 7000 	ldr.w	r7, [fp]
9001d856:	07ff      	lsls	r7, r7, #31
9001d858:	d45c      	bmi.n	9001d914 <EwVerifyHeap+0x1a0>
9001d85a:	f000 0703 	and.w	r7, r0, #3
9001d85e:	2f01      	cmp	r7, #1
9001d860:	d106      	bne.n	9001d870 <EwVerifyHeap+0xfc>
9001d862:	f1bb 0f00 	cmp.w	fp, #0
9001d866:	d003      	beq.n	9001d870 <EwVerifyHeap+0xfc>
9001d868:	f8db 7000 	ldr.w	r7, [fp]
9001d86c:	07ff      	lsls	r7, r7, #31
9001d86e:	d553      	bpl.n	9001d918 <EwVerifyHeap+0x1a4>
9001d870:	07c7      	lsls	r7, r0, #31
9001d872:	d461      	bmi.n	9001d938 <EwVerifyHeap+0x1c4>
9001d874:	9c00      	ldr	r4, [sp, #0]
9001d876:	42a3      	cmp	r3, r4
9001d878:	d150      	bne.n	9001d91c <EwVerifyHeap+0x1a8>
9001d87a:	f103 040c 	add.w	r4, r3, #12
9001d87e:	4294      	cmp	r4, r2
9001d880:	d24e      	bcs.n	9001d920 <EwVerifyHeap+0x1ac>
9001d882:	685f      	ldr	r7, [r3, #4]
9001d884:	b177      	cbz	r7, 9001d8a4 <EwVerifyHeap+0x130>
9001d886:	42bc      	cmp	r4, r7
9001d888:	d24c      	bcs.n	9001d924 <EwVerifyHeap+0x1b0>
9001d88a:	9c03      	ldr	r4, [sp, #12]
9001d88c:	42a7      	cmp	r7, r4
9001d88e:	d249      	bcs.n	9001d924 <EwVerifyHeap+0x1b0>
9001d890:	07bc      	lsls	r4, r7, #30
9001d892:	d147      	bne.n	9001d924 <EwVerifyHeap+0x1b0>
9001d894:	683c      	ldr	r4, [r7, #0]
9001d896:	07e4      	lsls	r4, r4, #31
9001d898:	d448      	bmi.n	9001d92c <EwVerifyHeap+0x1b8>
9001d89a:	68bc      	ldr	r4, [r7, #8]
9001d89c:	429c      	cmp	r4, r3
9001d89e:	d004      	beq.n	9001d8aa <EwVerifyHeap+0x136>
9001d8a0:	2412      	movs	r4, #18
9001d8a2:	e01e      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d8a4:	6a6c      	ldr	r4, [r5, #36]	; 0x24
9001d8a6:	429c      	cmp	r4, r3
9001d8a8:	d13e      	bne.n	9001d928 <EwVerifyHeap+0x1b4>
9001d8aa:	9f02      	ldr	r7, [sp, #8]
9001d8ac:	689c      	ldr	r4, [r3, #8]
9001d8ae:	eba3 0b07 	sub.w	fp, r3, r7
9001d8b2:	fab4 f484 	clz	r4, r4
9001d8b6:	f1db 0700 	rsbs	r7, fp, #0
9001d8ba:	ea4f 1454 	mov.w	r4, r4, lsr #5
9001d8be:	eb47 070b 	adc.w	r7, r7, fp
9001d8c2:	42bc      	cmp	r4, r7
9001d8c4:	d134      	bne.n	9001d930 <EwVerifyHeap+0x1bc>
9001d8c6:	4562      	cmp	r2, ip
9001d8c8:	d003      	beq.n	9001d8d2 <EwVerifyHeap+0x15e>
9001d8ca:	f8dc 4000 	ldr.w	r4, [ip]
9001d8ce:	07e4      	lsls	r4, r4, #31
9001d8d0:	d530      	bpl.n	9001d934 <EwVerifyHeap+0x1c0>
9001d8d2:	eb03 040e 	add.w	r4, r3, lr
9001d8d6:	f854 4c04 	ldr.w	r4, [r4, #-4]
9001d8da:	429c      	cmp	r4, r3
9001d8dc:	bf14      	ite	ne
9001d8de:	2415      	movne	r4, #21
9001d8e0:	2400      	moveq	r4, #0
9001d8e2:	07c0      	lsls	r0, r0, #31
9001d8e4:	d428      	bmi.n	9001d938 <EwVerifyHeap+0x1c4>
9001d8e6:	9801      	ldr	r0, [sp, #4]
9001d8e8:	f1aa 0a04 	sub.w	sl, sl, #4
9001d8ec:	3001      	adds	r0, #1
9001d8ee:	44f2      	add	sl, lr
9001d8f0:	9001      	str	r0, [sp, #4]
9001d8f2:	b924      	cbnz	r4, 9001d8fe <EwVerifyHeap+0x18a>
9001d8f4:	9800      	ldr	r0, [sp, #0]
9001d8f6:	4283      	cmp	r3, r0
9001d8f8:	bf04      	itt	eq
9001d8fa:	6858      	ldreq	r0, [r3, #4]
9001d8fc:	9000      	streq	r0, [sp, #0]
9001d8fe:	469b      	mov	fp, r3
9001d900:	4663      	mov	r3, ip
9001d902:	e76e      	b.n	9001d7e2 <EwVerifyHeap+0x6e>
9001d904:	2407      	movs	r4, #7
9001d906:	e7ec      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d908:	2408      	movs	r4, #8
9001d90a:	e7ea      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d90c:	2409      	movs	r4, #9
9001d90e:	e7e8      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d910:	240a      	movs	r4, #10
9001d912:	e7e6      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d914:	240b      	movs	r4, #11
9001d916:	e7e4      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d918:	240c      	movs	r4, #12
9001d91a:	e7e2      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d91c:	240d      	movs	r4, #13
9001d91e:	e7e0      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d920:	240e      	movs	r4, #14
9001d922:	e7de      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d924:	240f      	movs	r4, #15
9001d926:	e7dc      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d928:	2410      	movs	r4, #16
9001d92a:	e7da      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d92c:	2411      	movs	r4, #17
9001d92e:	e7d8      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d930:	2413      	movs	r4, #19
9001d932:	e7d6      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d934:	2414      	movs	r4, #20
9001d936:	e7d4      	b.n	9001d8e2 <EwVerifyHeap+0x16e>
9001d938:	3101      	adds	r1, #1
9001d93a:	e7da      	b.n	9001d8f2 <EwVerifyHeap+0x17e>
9001d93c:	2c00      	cmp	r4, #0
9001d93e:	f47f af54 	bne.w	9001d7ea <EwVerifyHeap+0x76>
9001d942:	692b      	ldr	r3, [r5, #16]
9001d944:	9801      	ldr	r0, [sp, #4]
9001d946:	4283      	cmp	r3, r0
9001d948:	d10d      	bne.n	9001d966 <EwVerifyHeap+0x1f2>
9001d94a:	696b      	ldr	r3, [r5, #20]
9001d94c:	428b      	cmp	r3, r1
9001d94e:	d10a      	bne.n	9001d966 <EwVerifyHeap+0x1f2>
9001d950:	68eb      	ldr	r3, [r5, #12]
9001d952:	4553      	cmp	r3, sl
9001d954:	d109      	bne.n	9001d96a <EwVerifyHeap+0x1f6>
9001d956:	6aab      	ldr	r3, [r5, #40]	; 0x28
9001d958:	42b3      	cmp	r3, r6
9001d95a:	d302      	bcc.n	9001d962 <EwVerifyHeap+0x1ee>
9001d95c:	4293      	cmp	r3, r2
9001d95e:	f4ff af4a 	bcc.w	9001d7f6 <EwVerifyHeap+0x82>
9001d962:	2418      	movs	r4, #24
9001d964:	e741      	b.n	9001d7ea <EwVerifyHeap+0x76>
9001d966:	2416      	movs	r4, #22
9001d968:	e73f      	b.n	9001d7ea <EwVerifyHeap+0x76>
9001d96a:	2417      	movs	r4, #23
9001d96c:	e73d      	b.n	9001d7ea <EwVerifyHeap+0x76>
9001d96e:	bf00      	nop
9001d970:	200002a0 	.word	0x200002a0

9001d974 <EwAllocHeapBlock>:
9001d974:	1e42      	subs	r2, r0, #1
9001d976:	f06f 4370 	mvn.w	r3, #4026531840	; 0xf0000000
9001d97a:	429a      	cmp	r2, r3
9001d97c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001d980:	f080 80bb 	bcs.w	9001dafa <EwAllocHeapBlock+0x186>
9001d984:	4b6b      	ldr	r3, [pc, #428]	; (9001db34 <EwAllocHeapBlock+0x1c0>)
9001d986:	681c      	ldr	r4, [r3, #0]
9001d988:	b934      	cbnz	r4, 9001d998 <EwAllocHeapBlock+0x24>
9001d98a:	f44f 70a1 	mov.w	r0, #322	; 0x142
9001d98e:	f7ff fd5f 	bl	9001d450 <EwError>
9001d992:	4620      	mov	r0, r4
9001d994:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001d998:	0782      	lsls	r2, r0, #30
9001d99a:	4a67      	ldr	r2, [pc, #412]	; (9001db38 <EwAllocHeapBlock+0x1c4>)
9001d99c:	bf18      	it	ne
9001d99e:	f020 0003 	bicne.w	r0, r0, #3
9001d9a2:	6816      	ldr	r6, [r2, #0]
9001d9a4:	bf18      	it	ne
9001d9a6:	3004      	addne	r0, #4
9001d9a8:	3004      	adds	r0, #4
9001d9aa:	2810      	cmp	r0, #16
9001d9ac:	bf38      	it	cc
9001d9ae:	2010      	movcc	r0, #16
9001d9b0:	4286      	cmp	r6, r0
9001d9b2:	f300 80b4 	bgt.w	9001db1e <EwAllocHeapBlock+0x1aa>
9001d9b6:	685c      	ldr	r4, [r3, #4]
9001d9b8:	2c00      	cmp	r4, #0
9001d9ba:	d0ea      	beq.n	9001d992 <EwAllocHeapBlock+0x1e>
9001d9bc:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
9001d9c0:	2300      	movs	r3, #0
9001d9c2:	e9d4 2509 	ldrd	r2, r5, [r4, #36]	; 0x24
9001d9c6:	4295      	cmp	r5, r2
9001d9c8:	d304      	bcc.n	9001d9d4 <EwAllocHeapBlock+0x60>
9001d9ca:	b963      	cbnz	r3, 9001d9e6 <EwAllocHeapBlock+0x72>
9001d9cc:	2a00      	cmp	r2, #0
9001d9ce:	d067      	beq.n	9001daa0 <EwAllocHeapBlock+0x12c>
9001d9d0:	4613      	mov	r3, r2
9001d9d2:	e00a      	b.n	9001d9ea <EwAllocHeapBlock+0x76>
9001d9d4:	6811      	ldr	r1, [r2, #0]
9001d9d6:	4288      	cmp	r0, r1
9001d9d8:	dc03      	bgt.n	9001d9e2 <EwAllocHeapBlock+0x6e>
9001d9da:	42b9      	cmp	r1, r7
9001d9dc:	bfbc      	itt	lt
9001d9de:	460f      	movlt	r7, r1
9001d9e0:	4613      	movlt	r3, r2
9001d9e2:	6892      	ldr	r2, [r2, #8]
9001d9e4:	e7ef      	b.n	9001d9c6 <EwAllocHeapBlock+0x52>
9001d9e6:	429d      	cmp	r5, r3
9001d9e8:	d302      	bcc.n	9001d9f0 <EwAllocHeapBlock+0x7c>
9001d9ea:	681a      	ldr	r2, [r3, #0]
9001d9ec:	4290      	cmp	r0, r2
9001d9ee:	dc54      	bgt.n	9001da9a <EwAllocHeapBlock+0x126>
9001d9f0:	681a      	ldr	r2, [r3, #0]
9001d9f2:	f8d4 801c 	ldr.w	r8, [r4, #28]
9001d9f6:	f022 0203 	bic.w	r2, r2, #3
9001d9fa:	1899      	adds	r1, r3, r2
9001d9fc:	4588      	cmp	r8, r1
9001d9fe:	bf82      	ittt	hi
9001da00:	5899      	ldrhi	r1, [r3, r2]
9001da02:	f021 0102 	bichi.w	r1, r1, #2
9001da06:	5099      	strhi	r1, [r3, r2]
9001da08:	e9d3 5201 	ldrd	r5, r2, [r3, #4]
9001da0c:	2d00      	cmp	r5, #0
9001da0e:	d049      	beq.n	9001daa4 <EwAllocHeapBlock+0x130>
9001da10:	60aa      	str	r2, [r5, #8]
9001da12:	f8d3 c008 	ldr.w	ip, [r3, #8]
9001da16:	f1bc 0f00 	cmp.w	ip, #0
9001da1a:	d045      	beq.n	9001daa8 <EwAllocHeapBlock+0x134>
9001da1c:	f8cc 5004 	str.w	r5, [ip, #4]
9001da20:	68e1      	ldr	r1, [r4, #12]
9001da22:	681f      	ldr	r7, [r3, #0]
9001da24:	3104      	adds	r1, #4
9001da26:	f8d4 e010 	ldr.w	lr, [r4, #16]
9001da2a:	1bc9      	subs	r1, r1, r7
9001da2c:	1a3f      	subs	r7, r7, r0
9001da2e:	f10e 32ff 	add.w	r2, lr, #4294967295
9001da32:	2f0f      	cmp	r7, #15
9001da34:	60e1      	str	r1, [r4, #12]
9001da36:	6122      	str	r2, [r4, #16]
9001da38:	d938      	bls.n	9001daac <EwAllocHeapBlock+0x138>
9001da3a:	4286      	cmp	r6, r0
9001da3c:	dd36      	ble.n	9001daac <EwAllocHeapBlock+0x138>
9001da3e:	501f      	str	r7, [r3, r0]
9001da40:	181a      	adds	r2, r3, r0
9001da42:	2700      	movs	r7, #0
9001da44:	6018      	str	r0, [r3, #0]
9001da46:	e9c3 7701 	strd	r7, r7, [r3, #4]
9001da4a:	681f      	ldr	r7, [r3, #0]
9001da4c:	1a3f      	subs	r7, r7, r0
9001da4e:	2f0f      	cmp	r7, #15
9001da50:	d92e      	bls.n	9001dab0 <EwAllocHeapBlock+0x13c>
9001da52:	4286      	cmp	r6, r0
9001da54:	dc2c      	bgt.n	9001dab0 <EwAllocHeapBlock+0x13c>
9001da56:	51d8      	str	r0, [r3, r7]
9001da58:	681a      	ldr	r2, [r3, #0]
9001da5a:	1a12      	subs	r2, r2, r0
9001da5c:	601a      	str	r2, [r3, #0]
9001da5e:	461a      	mov	r2, r3
9001da60:	443b      	add	r3, r7
9001da62:	e9c2 5c01 	strd	r5, ip, [r2, #4]
9001da66:	f1bc 0f00 	cmp.w	ip, #0
9001da6a:	d042      	beq.n	9001daf2 <EwAllocHeapBlock+0x17e>
9001da6c:	f8cc 2004 	str.w	r2, [ip, #4]
9001da70:	2d00      	cmp	r5, #0
9001da72:	d040      	beq.n	9001daf6 <EwAllocHeapBlock+0x182>
9001da74:	60aa      	str	r2, [r5, #8]
9001da76:	6815      	ldr	r5, [r2, #0]
9001da78:	3904      	subs	r1, #4
9001da7a:	f025 0503 	bic.w	r5, r5, #3
9001da7e:	1957      	adds	r7, r2, r5
9001da80:	45b8      	cmp	r8, r7
9001da82:	f847 2c04 	str.w	r2, [r7, #-4]
9001da86:	bf82      	ittt	hi
9001da88:	5957      	ldrhi	r7, [r2, r5]
9001da8a:	f047 0702 	orrhi.w	r7, r7, #2
9001da8e:	5157      	strhi	r7, [r2, r5]
9001da90:	6815      	ldr	r5, [r2, #0]
9001da92:	4429      	add	r1, r5
9001da94:	e9c4 1e03 	strd	r1, lr, [r4, #12]
9001da98:	e00c      	b.n	9001dab4 <EwAllocHeapBlock+0x140>
9001da9a:	689b      	ldr	r3, [r3, #8]
9001da9c:	2b00      	cmp	r3, #0
9001da9e:	d1a4      	bne.n	9001d9ea <EwAllocHeapBlock+0x76>
9001daa0:	6864      	ldr	r4, [r4, #4]
9001daa2:	e789      	b.n	9001d9b8 <EwAllocHeapBlock+0x44>
9001daa4:	6262      	str	r2, [r4, #36]	; 0x24
9001daa6:	e7b4      	b.n	9001da12 <EwAllocHeapBlock+0x9e>
9001daa8:	6225      	str	r5, [r4, #32]
9001daaa:	e7b9      	b.n	9001da20 <EwAllocHeapBlock+0xac>
9001daac:	2200      	movs	r2, #0
9001daae:	e7cc      	b.n	9001da4a <EwAllocHeapBlock+0xd6>
9001dab0:	2a00      	cmp	r2, #0
9001dab2:	d1d6      	bne.n	9001da62 <EwAllocHeapBlock+0xee>
9001dab4:	6819      	ldr	r1, [r3, #0]
9001dab6:	f041 0501 	orr.w	r5, r1, #1
9001daba:	601d      	str	r5, [r3, #0]
9001dabc:	b122      	cbz	r2, 9001dac8 <EwAllocHeapBlock+0x154>
9001dabe:	4293      	cmp	r3, r2
9001dac0:	bf84      	itt	hi
9001dac2:	f041 0103 	orrhi.w	r1, r1, #3
9001dac6:	6019      	strhi	r1, [r3, #0]
9001dac8:	4286      	cmp	r6, r0
9001daca:	bfd5      	itete	le
9001dacc:	6b22      	ldrle	r2, [r4, #48]	; 0x30
9001dace:	6ae2      	ldrgt	r2, [r4, #44]	; 0x2c
9001dad0:	3201      	addle	r2, #1
9001dad2:	3201      	addgt	r2, #1
9001dad4:	bfd4      	ite	le
9001dad6:	6322      	strle	r2, [r4, #48]	; 0x30
9001dad8:	62e2      	strgt	r2, [r4, #44]	; 0x2c
9001dada:	4286      	cmp	r6, r0
9001dadc:	6962      	ldr	r2, [r4, #20]
9001dade:	f102 0201 	add.w	r2, r2, #1
9001dae2:	6162      	str	r2, [r4, #20]
9001dae4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9001dae6:	dd0a      	ble.n	9001dafe <EwAllocHeapBlock+0x18a>
9001dae8:	429a      	cmp	r2, r3
9001daea:	d200      	bcs.n	9001daee <EwAllocHeapBlock+0x17a>
9001daec:	62a3      	str	r3, [r4, #40]	; 0x28
9001daee:	1d1c      	adds	r4, r3, #4
9001daf0:	e74f      	b.n	9001d992 <EwAllocHeapBlock+0x1e>
9001daf2:	6222      	str	r2, [r4, #32]
9001daf4:	e7bc      	b.n	9001da70 <EwAllocHeapBlock+0xfc>
9001daf6:	6262      	str	r2, [r4, #36]	; 0x24
9001daf8:	e7bd      	b.n	9001da76 <EwAllocHeapBlock+0x102>
9001dafa:	2400      	movs	r4, #0
9001dafc:	e749      	b.n	9001d992 <EwAllocHeapBlock+0x1e>
9001dafe:	429a      	cmp	r2, r3
9001db00:	d9f5      	bls.n	9001daee <EwAllocHeapBlock+0x17a>
9001db02:	1ad2      	subs	r2, r2, r3
9001db04:	490d      	ldr	r1, [pc, #52]	; (9001db3c <EwAllocHeapBlock+0x1c8>)
9001db06:	1092      	asrs	r2, r2, #2
9001db08:	434a      	muls	r2, r1
9001db0a:	210c      	movs	r1, #12
9001db0c:	1052      	asrs	r2, r2, #1
9001db0e:	fb01 3202 	mla	r2, r1, r2, r3
9001db12:	62a2      	str	r2, [r4, #40]	; 0x28
9001db14:	e7eb      	b.n	9001daee <EwAllocHeapBlock+0x17a>
9001db16:	6824      	ldr	r4, [r4, #0]
9001db18:	2c00      	cmp	r4, #0
9001db1a:	f43f af3a 	beq.w	9001d992 <EwAllocHeapBlock+0x1e>
9001db1e:	6a23      	ldr	r3, [r4, #32]
9001db20:	2b00      	cmp	r3, #0
9001db22:	d0f8      	beq.n	9001db16 <EwAllocHeapBlock+0x1a2>
9001db24:	e9d3 2100 	ldrd	r2, r1, [r3]
9001db28:	4290      	cmp	r0, r2
9001db2a:	f77f af61 	ble.w	9001d9f0 <EwAllocHeapBlock+0x7c>
9001db2e:	460b      	mov	r3, r1
9001db30:	e7f6      	b.n	9001db20 <EwAllocHeapBlock+0x1ac>
9001db32:	bf00      	nop
9001db34:	200002a0 	.word	0x200002a0
9001db38:	20000024 	.word	0x20000024
9001db3c:	aaaaaaab 	.word	0xaaaaaaab

9001db40 <EwFreeHeapBlock>:
9001db40:	4601      	mov	r1, r0
9001db42:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001db46:	b130      	cbz	r0, 9001db56 <EwFreeHeapBlock+0x16>
9001db48:	f010 0503 	ands.w	r5, r0, #3
9001db4c:	d105      	bne.n	9001db5a <EwFreeHeapBlock+0x1a>
9001db4e:	4b9d      	ldr	r3, [pc, #628]	; (9001ddc4 <EwFreeHeapBlock+0x284>)
9001db50:	3804      	subs	r0, #4
9001db52:	681b      	ldr	r3, [r3, #0]
9001db54:	b943      	cbnz	r3, 9001db68 <EwFreeHeapBlock+0x28>
9001db56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001db5a:	2200      	movs	r2, #0
9001db5c:	f240 1043 	movw	r0, #323	; 0x143
9001db60:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001db64:	f7ff bc8a 	b.w	9001d47c <EwErrorPD>
9001db68:	f8d3 8018 	ldr.w	r8, [r3, #24]
9001db6c:	4580      	cmp	r8, r0
9001db6e:	d86e      	bhi.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001db70:	f8d3 e01c 	ldr.w	lr, [r3, #28]
9001db74:	4586      	cmp	lr, r0
9001db76:	d96a      	bls.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001db78:	f851 cc04 	ldr.w	ip, [r1, #-4]
9001db7c:	f01c 0201 	ands.w	r2, ip, #1
9001db80:	d102      	bne.n	9001db88 <EwFreeHeapBlock+0x48>
9001db82:	f44f 70a2 	mov.w	r0, #324	; 0x144
9001db86:	e7eb      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001db88:	f02c 0603 	bic.w	r6, ip, #3
9001db8c:	f01c 0202 	ands.w	r2, ip, #2
9001db90:	eb00 0406 	add.w	r4, r0, r6
9001db94:	f000 8112 	beq.w	9001ddbc <EwFreeHeapBlock+0x27c>
9001db98:	45a6      	cmp	lr, r4
9001db9a:	f851 2c08 	ldr.w	r2, [r1, #-8]
9001db9e:	f000 8101 	beq.w	9001dda4 <EwFreeHeapBlock+0x264>
9001dba2:	42a0      	cmp	r0, r4
9001dba4:	d201      	bcs.n	9001dbaa <EwFreeHeapBlock+0x6a>
9001dba6:	45a6      	cmp	lr, r4
9001dba8:	d203      	bcs.n	9001dbb2 <EwFreeHeapBlock+0x72>
9001dbaa:	2200      	movs	r2, #0
9001dbac:	f240 1045 	movw	r0, #325	; 0x145
9001dbb0:	e7d6      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dbb2:	5987      	ldr	r7, [r0, r6]
9001dbb4:	f017 0f02 	tst.w	r7, #2
9001dbb8:	f000 80cf 	beq.w	9001dd5a <EwFreeHeapBlock+0x21a>
9001dbbc:	2200      	movs	r2, #0
9001dbbe:	f44f 70a3 	mov.w	r0, #326	; 0x146
9001dbc2:	e7cd      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dbc4:	2400      	movs	r4, #0
9001dbc6:	4282      	cmp	r2, r0
9001dbc8:	d203      	bcs.n	9001dbd2 <EwFreeHeapBlock+0x92>
9001dbca:	4590      	cmp	r8, r2
9001dbcc:	d801      	bhi.n	9001dbd2 <EwFreeHeapBlock+0x92>
9001dbce:	0797      	lsls	r7, r2, #30
9001dbd0:	d003      	beq.n	9001dbda <EwFreeHeapBlock+0x9a>
9001dbd2:	2200      	movs	r2, #0
9001dbd4:	f240 1047 	movw	r0, #327	; 0x147
9001dbd8:	e7c2      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dbda:	f8d2 c000 	ldr.w	ip, [r2]
9001dbde:	f01c 0f03 	tst.w	ip, #3
9001dbe2:	d104      	bne.n	9001dbee <EwFreeHeapBlock+0xae>
9001dbe4:	f02c 0703 	bic.w	r7, ip, #3
9001dbe8:	4417      	add	r7, r2
9001dbea:	42b8      	cmp	r0, r7
9001dbec:	d003      	beq.n	9001dbf6 <EwFreeHeapBlock+0xb6>
9001dbee:	2200      	movs	r2, #0
9001dbf0:	f44f 70a4 	mov.w	r0, #328	; 0x148
9001dbf4:	e7b4      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dbf6:	695f      	ldr	r7, [r3, #20]
9001dbf8:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001dbfc:	f107 39ff 	add.w	r9, r7, #4294967295
9001dc00:	6b5f      	ldr	r7, [r3, #52]	; 0x34
9001dc02:	f107 0a01 	add.w	sl, r7, #1
9001dc06:	b334      	cbz	r4, 9001dc56 <EwFreeHeapBlock+0x116>
9001dc08:	f8d4 e000 	ldr.w	lr, [r4]
9001dc0c:	f01e 0f01 	tst.w	lr, #1
9001dc10:	d121      	bne.n	9001dc56 <EwFreeHeapBlock+0x116>
9001dc12:	1d37      	adds	r7, r6, #4
9001dc14:	f8c3 a034 	str.w	sl, [r3, #52]	; 0x34
9001dc18:	4447      	add	r7, r8
9001dc1a:	60df      	str	r7, [r3, #12]
9001dc1c:	691f      	ldr	r7, [r3, #16]
9001dc1e:	3f01      	subs	r7, #1
9001dc20:	e9c3 7904 	strd	r7, r9, [r3, #16]
9001dc24:	6867      	ldr	r7, [r4, #4]
9001dc26:	6057      	str	r7, [r2, #4]
9001dc28:	6867      	ldr	r7, [r4, #4]
9001dc2a:	b197      	cbz	r7, 9001dc52 <EwFreeHeapBlock+0x112>
9001dc2c:	60ba      	str	r2, [r7, #8]
9001dc2e:	4476      	add	r6, lr
9001dc30:	4466      	add	r6, ip
9001dc32:	f026 0c03 	bic.w	ip, r6, #3
9001dc36:	6016      	str	r6, [r2, #0]
9001dc38:	4494      	add	ip, r2
9001dc3a:	f84c 2c04 	str.w	r2, [ip, #-4]
9001dc3e:	60a5      	str	r5, [r4, #8]
9001dc40:	e9c4 5500 	strd	r5, r5, [r4]
9001dc44:	e941 5501 	strd	r5, r5, [r1, #-4]
9001dc48:	604d      	str	r5, [r1, #4]
9001dc4a:	f841 5c08 	str.w	r5, [r1, #-8]
9001dc4e:	681b      	ldr	r3, [r3, #0]
9001dc50:	e780      	b.n	9001db54 <EwFreeHeapBlock+0x14>
9001dc52:	625a      	str	r2, [r3, #36]	; 0x24
9001dc54:	e7eb      	b.n	9001dc2e <EwFreeHeapBlock+0xee>
9001dc56:	eb06 0708 	add.w	r7, r6, r8
9001dc5a:	4466      	add	r6, ip
9001dc5c:	f8c3 9014 	str.w	r9, [r3, #20]
9001dc60:	60df      	str	r7, [r3, #12]
9001dc62:	f8c3 a034 	str.w	sl, [r3, #52]	; 0x34
9001dc66:	6016      	str	r6, [r2, #0]
9001dc68:	f026 0603 	bic.w	r6, r6, #3
9001dc6c:	4416      	add	r6, r2
9001dc6e:	f846 2c04 	str.w	r2, [r6, #-4]
9001dc72:	604d      	str	r5, [r1, #4]
9001dc74:	f841 5c08 	str.w	r5, [r1, #-8]
9001dc78:	e941 5501 	strd	r5, r5, [r1, #-4]
9001dc7c:	2c00      	cmp	r4, #0
9001dc7e:	d0e6      	beq.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001dc80:	6822      	ldr	r2, [r4, #0]
9001dc82:	f042 0202 	orr.w	r2, r2, #2
9001dc86:	6022      	str	r2, [r4, #0]
9001dc88:	e7e1      	b.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001dc8a:	6218      	str	r0, [r3, #32]
9001dc8c:	e077      	b.n	9001dd7e <EwFreeHeapBlock+0x23e>
9001dc8e:	6258      	str	r0, [r3, #36]	; 0x24
9001dc90:	e079      	b.n	9001dd86 <EwFreeHeapBlock+0x246>
9001dc92:	f022 0203 	bic.w	r2, r2, #3
9001dc96:	4422      	add	r2, r4
9001dc98:	4596      	cmp	lr, r2
9001dc9a:	f000 8086 	beq.w	9001ddaa <EwFreeHeapBlock+0x26a>
9001dc9e:	4294      	cmp	r4, r2
9001dca0:	d201      	bcs.n	9001dca6 <EwFreeHeapBlock+0x166>
9001dca2:	4596      	cmp	lr, r2
9001dca4:	d203      	bcs.n	9001dcae <EwFreeHeapBlock+0x16e>
9001dca6:	2200      	movs	r2, #0
9001dca8:	f240 1049 	movw	r0, #329	; 0x149
9001dcac:	e758      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dcae:	6814      	ldr	r4, [r2, #0]
9001dcb0:	07a4      	lsls	r4, r4, #30
9001dcb2:	d503      	bpl.n	9001dcbc <EwFreeHeapBlock+0x17c>
9001dcb4:	2200      	movs	r2, #0
9001dcb6:	f44f 70a5 	mov.w	r0, #330	; 0x14a
9001dcba:	e751      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dcbc:	4614      	mov	r4, r2
9001dcbe:	6822      	ldr	r2, [r4, #0]
9001dcc0:	07d7      	lsls	r7, r2, #31
9001dcc2:	d4e6      	bmi.n	9001dc92 <EwFreeHeapBlock+0x152>
9001dcc4:	68a2      	ldr	r2, [r4, #8]
9001dcc6:	b93a      	cbnz	r2, 9001dcd8 <EwFreeHeapBlock+0x198>
9001dcc8:	e9c1 4200 	strd	r4, r2, [r1]
9001dccc:	60a0      	str	r0, [r4, #8]
9001dcce:	684a      	ldr	r2, [r1, #4]
9001dcd0:	2a00      	cmp	r2, #0
9001dcd2:	d03b      	beq.n	9001dd4c <EwFreeHeapBlock+0x20c>
9001dcd4:	6050      	str	r0, [r2, #4]
9001dcd6:	e01c      	b.n	9001dd12 <EwFreeHeapBlock+0x1d2>
9001dcd8:	4290      	cmp	r0, r2
9001dcda:	d903      	bls.n	9001dce4 <EwFreeHeapBlock+0x1a4>
9001dcdc:	4590      	cmp	r8, r2
9001dcde:	d801      	bhi.n	9001dce4 <EwFreeHeapBlock+0x1a4>
9001dce0:	0794      	lsls	r4, r2, #30
9001dce2:	d003      	beq.n	9001dcec <EwFreeHeapBlock+0x1ac>
9001dce4:	2200      	movs	r2, #0
9001dce6:	f240 104b 	movw	r0, #331	; 0x14b
9001dcea:	e739      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dcec:	6814      	ldr	r4, [r2, #0]
9001dcee:	07a7      	lsls	r7, r4, #30
9001dcf0:	d104      	bne.n	9001dcfc <EwFreeHeapBlock+0x1bc>
9001dcf2:	f024 0403 	bic.w	r4, r4, #3
9001dcf6:	4414      	add	r4, r2
9001dcf8:	42a0      	cmp	r0, r4
9001dcfa:	d803      	bhi.n	9001dd04 <EwFreeHeapBlock+0x1c4>
9001dcfc:	2200      	movs	r2, #0
9001dcfe:	f44f 70a6 	mov.w	r0, #332	; 0x14c
9001dd02:	e72d      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001dd04:	6854      	ldr	r4, [r2, #4]
9001dd06:	e9c1 4200 	strd	r4, r2, [r1]
9001dd0a:	6050      	str	r0, [r2, #4]
9001dd0c:	680a      	ldr	r2, [r1, #0]
9001dd0e:	b312      	cbz	r2, 9001dd56 <EwFreeHeapBlock+0x216>
9001dd10:	6090      	str	r0, [r2, #8]
9001dd12:	f02c 0201 	bic.w	r2, ip, #1
9001dd16:	f841 2c04 	str.w	r2, [r1, #-4]
9001dd1a:	1982      	adds	r2, r0, r6
9001dd1c:	4596      	cmp	lr, r2
9001dd1e:	f842 0c04 	str.w	r0, [r2, #-4]
9001dd22:	bf82      	ittt	hi
9001dd24:	5982      	ldrhi	r2, [r0, r6]
9001dd26:	f042 0202 	orrhi.w	r2, r2, #2
9001dd2a:	5182      	strhi	r2, [r0, r6]
9001dd2c:	f851 2c04 	ldr.w	r2, [r1, #-4]
9001dd30:	1f14      	subs	r4, r2, #4
9001dd32:	68da      	ldr	r2, [r3, #12]
9001dd34:	4422      	add	r2, r4
9001dd36:	60da      	str	r2, [r3, #12]
9001dd38:	695a      	ldr	r2, [r3, #20]
9001dd3a:	3a01      	subs	r2, #1
9001dd3c:	615a      	str	r2, [r3, #20]
9001dd3e:	691a      	ldr	r2, [r3, #16]
9001dd40:	3201      	adds	r2, #1
9001dd42:	611a      	str	r2, [r3, #16]
9001dd44:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9001dd46:	3201      	adds	r2, #1
9001dd48:	635a      	str	r2, [r3, #52]	; 0x34
9001dd4a:	e780      	b.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001dd4c:	6218      	str	r0, [r3, #32]
9001dd4e:	e7e0      	b.n	9001dd12 <EwFreeHeapBlock+0x1d2>
9001dd50:	e9c1 4400 	strd	r4, r4, [r1]
9001dd54:	6218      	str	r0, [r3, #32]
9001dd56:	6258      	str	r0, [r3, #36]	; 0x24
9001dd58:	e7db      	b.n	9001dd12 <EwFreeHeapBlock+0x1d2>
9001dd5a:	2a00      	cmp	r2, #0
9001dd5c:	f47f af33 	bne.w	9001dbc6 <EwFreeHeapBlock+0x86>
9001dd60:	07fa      	lsls	r2, r7, #31
9001dd62:	d4ac      	bmi.n	9001dcbe <EwFreeHeapBlock+0x17e>
9001dd64:	68da      	ldr	r2, [r3, #12]
9001dd66:	4432      	add	r2, r6
9001dd68:	60da      	str	r2, [r3, #12]
9001dd6a:	695a      	ldr	r2, [r3, #20]
9001dd6c:	3a01      	subs	r2, #1
9001dd6e:	615a      	str	r2, [r3, #20]
9001dd70:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9001dd72:	3201      	adds	r2, #1
9001dd74:	635a      	str	r2, [r3, #52]	; 0x34
9001dd76:	68a2      	ldr	r2, [r4, #8]
9001dd78:	2a00      	cmp	r2, #0
9001dd7a:	d086      	beq.n	9001dc8a <EwFreeHeapBlock+0x14a>
9001dd7c:	6050      	str	r0, [r2, #4]
9001dd7e:	6862      	ldr	r2, [r4, #4]
9001dd80:	2a00      	cmp	r2, #0
9001dd82:	d084      	beq.n	9001dc8e <EwFreeHeapBlock+0x14e>
9001dd84:	6090      	str	r0, [r2, #8]
9001dd86:	4437      	add	r7, r6
9001dd88:	600a      	str	r2, [r1, #0]
9001dd8a:	68a2      	ldr	r2, [r4, #8]
9001dd8c:	f841 7c04 	str.w	r7, [r1, #-4]
9001dd90:	f027 0703 	bic.w	r7, r7, #3
9001dd94:	604a      	str	r2, [r1, #4]
9001dd96:	4407      	add	r7, r0
9001dd98:	f847 0c04 	str.w	r0, [r7, #-4]
9001dd9c:	5185      	str	r5, [r0, r6]
9001dd9e:	e9c4 5501 	strd	r5, r5, [r4, #4]
9001dda2:	e754      	b.n	9001dc4e <EwFreeHeapBlock+0x10e>
9001dda4:	2a00      	cmp	r2, #0
9001dda6:	f47f af0d 	bne.w	9001dbc4 <EwFreeHeapBlock+0x84>
9001ddaa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9001ddac:	2a00      	cmp	r2, #0
9001ddae:	d193      	bne.n	9001dcd8 <EwFreeHeapBlock+0x198>
9001ddb0:	6a1c      	ldr	r4, [r3, #32]
9001ddb2:	2c00      	cmp	r4, #0
9001ddb4:	d0cc      	beq.n	9001dd50 <EwFreeHeapBlock+0x210>
9001ddb6:	f240 104d 	movw	r0, #333	; 0x14d
9001ddba:	e6d1      	b.n	9001db60 <EwFreeHeapBlock+0x20>
9001ddbc:	45a6      	cmp	lr, r4
9001ddbe:	f47f aef0 	bne.w	9001dba2 <EwFreeHeapBlock+0x62>
9001ddc2:	e7f2      	b.n	9001ddaa <EwFreeHeapBlock+0x26a>
9001ddc4:	200002a0 	.word	0x200002a0

9001ddc8 <EwIsHeapPtr>:
9001ddc8:	4b06      	ldr	r3, [pc, #24]	; (9001dde4 <EwIsHeapPtr+0x1c>)
9001ddca:	681b      	ldr	r3, [r3, #0]
9001ddcc:	b90b      	cbnz	r3, 9001ddd2 <EwIsHeapPtr+0xa>
9001ddce:	4618      	mov	r0, r3
9001ddd0:	4770      	bx	lr
9001ddd2:	699a      	ldr	r2, [r3, #24]
9001ddd4:	4282      	cmp	r2, r0
9001ddd6:	d8f8      	bhi.n	9001ddca <EwIsHeapPtr+0x2>
9001ddd8:	69da      	ldr	r2, [r3, #28]
9001ddda:	4282      	cmp	r2, r0
9001dddc:	d9f5      	bls.n	9001ddca <EwIsHeapPtr+0x2>
9001ddde:	2001      	movs	r0, #1
9001dde0:	4770      	bx	lr
9001dde2:	bf00      	nop
9001dde4:	200002a0 	.word	0x200002a0

9001dde8 <XObject__Init>:
9001dde8:	4b01      	ldr	r3, [pc, #4]	; (9001ddf0 <XObject__Init+0x8>)
9001ddea:	6081      	str	r1, [r0, #8]
9001ddec:	6003      	str	r3, [r0, #0]
9001ddee:	4770      	bx	lr
9001ddf0:	90032fd0 	.word	0x90032fd0

9001ddf4 <XObject__ReInit>:
9001ddf4:	4770      	bx	lr

9001ddf6 <XObject__Done>:
9001ddf6:	4770      	bx	lr

9001ddf8 <EwSetStackBaseAddress>:
9001ddf8:	f44f 709d 	mov.w	r0, #314	; 0x13a
9001ddfc:	f7ff bb28 	b.w	9001d450 <EwError>

9001de00 <EwNewObjectIndirect>:
9001de00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001de04:	4688      	mov	r8, r1
9001de06:	4605      	mov	r5, r0
9001de08:	b948      	cbnz	r0, 9001de1e <EwNewObjectIndirect+0x1e>
9001de0a:	f240 1035 	movw	r0, #309	; 0x135
9001de0e:	2700      	movs	r7, #0
9001de10:	f7ff fb1e 	bl	9001d450 <EwError>
9001de14:	f008 ff52 	bl	90026cbc <EwPanic>
9001de18:	4638      	mov	r0, r7
9001de1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001de1e:	6802      	ldr	r2, [r0, #0]
9001de20:	4b18      	ldr	r3, [pc, #96]	; (9001de84 <EwNewObjectIndirect+0x84>)
9001de22:	429a      	cmp	r2, r3
9001de24:	d002      	beq.n	9001de2c <EwNewObjectIndirect+0x2c>
9001de26:	f44f 709c 	mov.w	r0, #312	; 0x138
9001de2a:	e7f0      	b.n	9001de0e <EwNewObjectIndirect+0xe>
9001de2c:	6900      	ldr	r0, [r0, #16]
9001de2e:	3004      	adds	r0, #4
9001de30:	f008 ff40 	bl	90026cb4 <EwAlloc>
9001de34:	4606      	mov	r6, r0
9001de36:	1d07      	adds	r7, r0, #4
9001de38:	b908      	cbnz	r0, 9001de3e <EwNewObjectIndirect+0x3e>
9001de3a:	200a      	movs	r0, #10
9001de3c:	e7e7      	b.n	9001de0e <EwNewObjectIndirect+0xe>
9001de3e:	4c12      	ldr	r4, [pc, #72]	; (9001de88 <EwNewObjectIndirect+0x88>)
9001de40:	4638      	mov	r0, r7
9001de42:	6929      	ldr	r1, [r5, #16]
9001de44:	f008 ff5e 	bl	90026d04 <EwZero>
9001de48:	6823      	ldr	r3, [r4, #0]
9001de4a:	4642      	mov	r2, r8
9001de4c:	2100      	movs	r1, #0
9001de4e:	6033      	str	r3, [r6, #0]
9001de50:	4638      	mov	r0, r7
9001de52:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9001de54:	6026      	str	r6, [r4, #0]
9001de56:	4798      	blx	r3
9001de58:	6863      	ldr	r3, [r4, #4]
9001de5a:	692a      	ldr	r2, [r5, #16]
9001de5c:	3304      	adds	r3, #4
9001de5e:	4413      	add	r3, r2
9001de60:	68a2      	ldr	r2, [r4, #8]
9001de62:	3201      	adds	r2, #1
9001de64:	6063      	str	r3, [r4, #4]
9001de66:	60a2      	str	r2, [r4, #8]
9001de68:	68e2      	ldr	r2, [r4, #12]
9001de6a:	4293      	cmp	r3, r2
9001de6c:	6922      	ldr	r2, [r4, #16]
9001de6e:	bfc8      	it	gt
9001de70:	60e3      	strgt	r3, [r4, #12]
9001de72:	4413      	add	r3, r2
9001de74:	6962      	ldr	r2, [r4, #20]
9001de76:	4413      	add	r3, r2
9001de78:	69a2      	ldr	r2, [r4, #24]
9001de7a:	4293      	cmp	r3, r2
9001de7c:	bfc8      	it	gt
9001de7e:	61a3      	strgt	r3, [r4, #24]
9001de80:	e7ca      	b.n	9001de18 <EwNewObjectIndirect+0x18>
9001de82:	bf00      	nop
9001de84:	434c4153 	.word	0x434c4153
9001de88:	200002a8 	.word	0x200002a8

9001de8c <EwAttachObjectVariant>:
9001de8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001de90:	460f      	mov	r7, r1
9001de92:	4690      	mov	r8, r2
9001de94:	6801      	ldr	r1, [r0, #0]
9001de96:	4605      	mov	r5, r0
9001de98:	4a20      	ldr	r2, [pc, #128]	; (9001df1c <EwAttachObjectVariant+0x90>)
9001de9a:	2400      	movs	r4, #0
9001de9c:	68cb      	ldr	r3, [r1, #12]
9001de9e:	6810      	ldr	r0, [r2, #0]
9001dea0:	b10b      	cbz	r3, 9001dea6 <EwAttachObjectVariant+0x1a>
9001dea2:	685a      	ldr	r2, [r3, #4]
9001dea4:	b99a      	cbnz	r2, 9001dece <EwAttachObjectVariant+0x42>
9001dea6:	2c00      	cmp	r4, #0
9001dea8:	d035      	beq.n	9001df16 <EwAttachObjectVariant+0x8a>
9001deaa:	688b      	ldr	r3, [r1, #8]
9001deac:	6920      	ldr	r0, [r4, #16]
9001deae:	f8d3 9010 	ldr.w	r9, [r3, #16]
9001deb2:	f008 feff 	bl	90026cb4 <EwAlloc>
9001deb6:	4606      	mov	r6, r0
9001deb8:	b990      	cbnz	r0, 9001dee0 <EwAttachObjectVariant+0x54>
9001deba:	200b      	movs	r0, #11
9001debc:	f7ff fac8 	bl	9001d450 <EwError>
9001dec0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9001dec4:	f008 befa 	b.w	90026cbc <EwPanic>
9001dec8:	4202      	tst	r2, r0
9001deca:	d103      	bne.n	9001ded4 <EwAttachObjectVariant+0x48>
9001decc:	3308      	adds	r3, #8
9001dece:	681a      	ldr	r2, [r3, #0]
9001ded0:	2a00      	cmp	r2, #0
9001ded2:	d1f9      	bne.n	9001dec8 <EwAttachObjectVariant+0x3c>
9001ded4:	685a      	ldr	r2, [r3, #4]
9001ded6:	2a00      	cmp	r2, #0
9001ded8:	d0e2      	beq.n	9001dea0 <EwAttachObjectVariant+0x14>
9001deda:	68d3      	ldr	r3, [r2, #12]
9001dedc:	4614      	mov	r4, r2
9001dede:	e7df      	b.n	9001dea0 <EwAttachObjectVariant+0x14>
9001dee0:	6921      	ldr	r1, [r4, #16]
9001dee2:	f008 ff0f 	bl	90026d04 <EwZero>
9001dee6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9001dee8:	4642      	mov	r2, r8
9001deea:	4639      	mov	r1, r7
9001deec:	4628      	mov	r0, r5
9001deee:	f845 6009 	str.w	r6, [r5, r9]
9001def2:	4798      	blx	r3
9001def4:	4a0a      	ldr	r2, [pc, #40]	; (9001df20 <EwAttachObjectVariant+0x94>)
9001def6:	6923      	ldr	r3, [r4, #16]
9001def8:	6851      	ldr	r1, [r2, #4]
9001defa:	440b      	add	r3, r1
9001defc:	68d1      	ldr	r1, [r2, #12]
9001defe:	428b      	cmp	r3, r1
9001df00:	6911      	ldr	r1, [r2, #16]
9001df02:	6053      	str	r3, [r2, #4]
9001df04:	bfc8      	it	gt
9001df06:	60d3      	strgt	r3, [r2, #12]
9001df08:	440b      	add	r3, r1
9001df0a:	6951      	ldr	r1, [r2, #20]
9001df0c:	440b      	add	r3, r1
9001df0e:	6991      	ldr	r1, [r2, #24]
9001df10:	428b      	cmp	r3, r1
9001df12:	bfc8      	it	gt
9001df14:	6193      	strgt	r3, [r2, #24]
9001df16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9001df1a:	bf00      	nop
9001df1c:	200002f8 	.word	0x200002f8
9001df20:	200002a8 	.word	0x200002a8

9001df24 <EwDetachObjectVariant>:
9001df24:	6803      	ldr	r3, [r0, #0]
9001df26:	689b      	ldr	r3, [r3, #8]
9001df28:	b570      	push	{r4, r5, r6, lr}
9001df2a:	691d      	ldr	r5, [r3, #16]
9001df2c:	4604      	mov	r4, r0
9001df2e:	5943      	ldr	r3, [r0, r5]
9001df30:	b163      	cbz	r3, 9001df4c <EwDetachObjectVariant+0x28>
9001df32:	681a      	ldr	r2, [r3, #0]
9001df34:	4906      	ldr	r1, [pc, #24]	; (9001df50 <EwDetachObjectVariant+0x2c>)
9001df36:	6916      	ldr	r6, [r2, #16]
9001df38:	684b      	ldr	r3, [r1, #4]
9001df3a:	1b9b      	subs	r3, r3, r6
9001df3c:	604b      	str	r3, [r1, #4]
9001df3e:	6b53      	ldr	r3, [r2, #52]	; 0x34
9001df40:	4798      	blx	r3
9001df42:	5960      	ldr	r0, [r4, r5]
9001df44:	f008 feb8 	bl	90026cb8 <EwFree>
9001df48:	2300      	movs	r3, #0
9001df4a:	5163      	str	r3, [r4, r5]
9001df4c:	bd70      	pop	{r4, r5, r6, pc}
9001df4e:	bf00      	nop
9001df50:	200002a8 	.word	0x200002a8

9001df54 <EwGetAutoObject>:
9001df54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001df58:	460f      	mov	r7, r1
9001df5a:	4604      	mov	r4, r0
9001df5c:	b388      	cbz	r0, 9001dfc2 <EwGetAutoObject+0x6e>
9001df5e:	4b2c      	ldr	r3, [pc, #176]	; (9001e010 <EwGetAutoObject+0xbc>)
9001df60:	6819      	ldr	r1, [r3, #0]
9001df62:	68a3      	ldr	r3, [r4, #8]
9001df64:	b12b      	cbz	r3, 9001df72 <EwGetAutoObject+0x1e>
9001df66:	681a      	ldr	r2, [r3, #0]
9001df68:	b10a      	cbz	r2, 9001df6e <EwGetAutoObject+0x1a>
9001df6a:	420a      	tst	r2, r1
9001df6c:	d014      	beq.n	9001df98 <EwGetAutoObject+0x44>
9001df6e:	685b      	ldr	r3, [r3, #4]
9001df70:	b983      	cbnz	r3, 9001df94 <EwGetAutoObject+0x40>
9001df72:	4d28      	ldr	r5, [pc, #160]	; (9001e014 <EwGetAutoObject+0xc0>)
9001df74:	6826      	ldr	r6, [r4, #0]
9001df76:	462b      	mov	r3, r5
9001df78:	f853 4f1c 	ldr.w	r4, [r3, #28]!
9001df7c:	b974      	cbnz	r4, 9001df9c <EwGetAutoObject+0x48>
9001df7e:	200c      	movs	r0, #12
9001df80:	f008 fe98 	bl	90026cb4 <EwAlloc>
9001df84:	4604      	mov	r4, r0
9001df86:	bb10      	cbnz	r0, 9001dfce <EwGetAutoObject+0x7a>
9001df88:	200e      	movs	r0, #14
9001df8a:	f7ff fa61 	bl	9001d450 <EwError>
9001df8e:	f008 fe95 	bl	90026cbc <EwPanic>
9001df92:	e016      	b.n	9001dfc2 <EwGetAutoObject+0x6e>
9001df94:	461c      	mov	r4, r3
9001df96:	e7e4      	b.n	9001df62 <EwGetAutoObject+0xe>
9001df98:	3308      	adds	r3, #8
9001df9a:	e7e4      	b.n	9001df66 <EwGetAutoObject+0x12>
9001df9c:	e9d4 2100 	ldrd	r2, r1, [r4]
9001dfa0:	428e      	cmp	r6, r1
9001dfa2:	d111      	bne.n	9001dfc8 <EwGetAutoObject+0x74>
9001dfa4:	f8d4 8008 	ldr.w	r8, [r4, #8]
9001dfa8:	601a      	str	r2, [r3, #0]
9001dfaa:	f1b8 0f00 	cmp.w	r8, #0
9001dfae:	d121      	bne.n	9001dff4 <EwGetAutoObject+0xa0>
9001dfb0:	4644      	mov	r4, r8
9001dfb2:	4642      	mov	r2, r8
9001dfb4:	4631      	mov	r1, r6
9001dfb6:	f240 1039 	movw	r0, #313	; 0x139
9001dfba:	f7ff fa5f 	bl	9001d47c <EwErrorPD>
9001dfbe:	f008 fe7d 	bl	90026cbc <EwPanic>
9001dfc2:	4620      	mov	r0, r4
9001dfc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001dfc8:	4623      	mov	r3, r4
9001dfca:	4614      	mov	r4, r2
9001dfcc:	e7d6      	b.n	9001df7c <EwGetAutoObject+0x28>
9001dfce:	2300      	movs	r3, #0
9001dfd0:	68ea      	ldr	r2, [r5, #12]
9001dfd2:	6023      	str	r3, [r4, #0]
9001dfd4:	e9c4 6301 	strd	r6, r3, [r4, #4]
9001dfd8:	686b      	ldr	r3, [r5, #4]
9001dfda:	330c      	adds	r3, #12
9001dfdc:	4293      	cmp	r3, r2
9001dfde:	692a      	ldr	r2, [r5, #16]
9001dfe0:	606b      	str	r3, [r5, #4]
9001dfe2:	bfc8      	it	gt
9001dfe4:	60eb      	strgt	r3, [r5, #12]
9001dfe6:	4413      	add	r3, r2
9001dfe8:	696a      	ldr	r2, [r5, #20]
9001dfea:	4413      	add	r3, r2
9001dfec:	69aa      	ldr	r2, [r5, #24]
9001dfee:	4293      	cmp	r3, r2
9001dff0:	bfc8      	it	gt
9001dff2:	61ab      	strgt	r3, [r5, #24]
9001dff4:	69eb      	ldr	r3, [r5, #28]
9001dff6:	68a1      	ldr	r1, [r4, #8]
9001dff8:	6023      	str	r3, [r4, #0]
9001dffa:	61ec      	str	r4, [r5, #28]
9001dffc:	b931      	cbnz	r1, 9001e00c <EwGetAutoObject+0xb8>
9001dffe:	4638      	mov	r0, r7
9001e000:	f7ff fefe 	bl	9001de00 <EwNewObjectIndirect>
9001e004:	4605      	mov	r5, r0
9001e006:	6833      	ldr	r3, [r6, #0]
9001e008:	4798      	blx	r3
9001e00a:	60a5      	str	r5, [r4, #8]
9001e00c:	68a4      	ldr	r4, [r4, #8]
9001e00e:	e7d8      	b.n	9001dfc2 <EwGetAutoObject+0x6e>
9001e010:	200002f8 	.word	0x200002f8
9001e014:	200002a8 	.word	0x200002a8

9001e018 <EwCastObject>:
9001e018:	b510      	push	{r4, lr}
9001e01a:	460c      	mov	r4, r1
9001e01c:	b939      	cbnz	r1, 9001e02e <EwCastObject+0x16>
9001e01e:	f44f 709b 	mov.w	r0, #310	; 0x136
9001e022:	f7ff fa15 	bl	9001d450 <EwError>
9001e026:	f008 fe49 	bl	90026cbc <EwPanic>
9001e02a:	4620      	mov	r0, r4
9001e02c:	bd10      	pop	{r4, pc}
9001e02e:	2800      	cmp	r0, #0
9001e030:	d0fc      	beq.n	9001e02c <EwCastObject+0x14>
9001e032:	6803      	ldr	r3, [r0, #0]
9001e034:	b11b      	cbz	r3, 9001e03e <EwCastObject+0x26>
9001e036:	42a3      	cmp	r3, r4
9001e038:	d0f8      	beq.n	9001e02c <EwCastObject+0x14>
9001e03a:	689b      	ldr	r3, [r3, #8]
9001e03c:	e7fa      	b.n	9001e034 <EwCastObject+0x1c>
9001e03e:	4618      	mov	r0, r3
9001e040:	e7f4      	b.n	9001e02c <EwCastObject+0x14>

9001e042 <EwCastClass>:
9001e042:	b141      	cbz	r1, 9001e056 <EwCastClass+0x14>
9001e044:	b138      	cbz	r0, 9001e056 <EwCastClass+0x14>
9001e046:	4603      	mov	r3, r0
9001e048:	4299      	cmp	r1, r3
9001e04a:	d100      	bne.n	9001e04e <EwCastClass+0xc>
9001e04c:	4770      	bx	lr
9001e04e:	689b      	ldr	r3, [r3, #8]
9001e050:	2b00      	cmp	r3, #0
9001e052:	d1f9      	bne.n	9001e048 <EwCastClass+0x6>
9001e054:	4618      	mov	r0, r3
9001e056:	4770      	bx	lr

9001e058 <EwClassOf>:
9001e058:	b100      	cbz	r0, 9001e05c <EwClassOf+0x4>
9001e05a:	6800      	ldr	r0, [r0, #0]
9001e05c:	4770      	bx	lr

9001e05e <EwLockObject>:
9001e05e:	b510      	push	{r4, lr}
9001e060:	4604      	mov	r4, r0
9001e062:	b310      	cbz	r0, 9001e0aa <EwLockObject+0x4c>
9001e064:	200c      	movs	r0, #12
9001e066:	f008 fe25 	bl	90026cb4 <EwAlloc>
9001e06a:	b930      	cbnz	r0, 9001e07a <EwLockObject+0x1c>
9001e06c:	200c      	movs	r0, #12
9001e06e:	f7ff f9ef 	bl	9001d450 <EwError>
9001e072:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e076:	f008 be21 	b.w	90026cbc <EwPanic>
9001e07a:	4a0c      	ldr	r2, [pc, #48]	; (9001e0ac <EwLockObject+0x4e>)
9001e07c:	2100      	movs	r1, #0
9001e07e:	6084      	str	r4, [r0, #8]
9001e080:	6a13      	ldr	r3, [r2, #32]
9001e082:	6041      	str	r1, [r0, #4]
9001e084:	6003      	str	r3, [r0, #0]
9001e086:	b103      	cbz	r3, 9001e08a <EwLockObject+0x2c>
9001e088:	6058      	str	r0, [r3, #4]
9001e08a:	6853      	ldr	r3, [r2, #4]
9001e08c:	68d1      	ldr	r1, [r2, #12]
9001e08e:	330c      	adds	r3, #12
9001e090:	6210      	str	r0, [r2, #32]
9001e092:	428b      	cmp	r3, r1
9001e094:	6911      	ldr	r1, [r2, #16]
9001e096:	6053      	str	r3, [r2, #4]
9001e098:	bfc8      	it	gt
9001e09a:	60d3      	strgt	r3, [r2, #12]
9001e09c:	440b      	add	r3, r1
9001e09e:	6951      	ldr	r1, [r2, #20]
9001e0a0:	440b      	add	r3, r1
9001e0a2:	6991      	ldr	r1, [r2, #24]
9001e0a4:	428b      	cmp	r3, r1
9001e0a6:	bfc8      	it	gt
9001e0a8:	6193      	strgt	r3, [r2, #24]
9001e0aa:	bd10      	pop	{r4, pc}
9001e0ac:	200002a8 	.word	0x200002a8

9001e0b0 <EwUnlockObject>:
9001e0b0:	4601      	mov	r1, r0
9001e0b2:	b510      	push	{r4, lr}
9001e0b4:	b1b0      	cbz	r0, 9001e0e4 <EwUnlockObject+0x34>
9001e0b6:	4c12      	ldr	r4, [pc, #72]	; (9001e100 <EwUnlockObject+0x50>)
9001e0b8:	6a22      	ldr	r2, [r4, #32]
9001e0ba:	b1c2      	cbz	r2, 9001e0ee <EwUnlockObject+0x3e>
9001e0bc:	6890      	ldr	r0, [r2, #8]
9001e0be:	6813      	ldr	r3, [r2, #0]
9001e0c0:	4288      	cmp	r0, r1
9001e0c2:	d110      	bne.n	9001e0e6 <EwUnlockObject+0x36>
9001e0c4:	b10b      	cbz	r3, 9001e0ca <EwUnlockObject+0x1a>
9001e0c6:	6851      	ldr	r1, [r2, #4]
9001e0c8:	6059      	str	r1, [r3, #4]
9001e0ca:	6851      	ldr	r1, [r2, #4]
9001e0cc:	b169      	cbz	r1, 9001e0ea <EwUnlockObject+0x3a>
9001e0ce:	600b      	str	r3, [r1, #0]
9001e0d0:	2300      	movs	r3, #0
9001e0d2:	4610      	mov	r0, r2
9001e0d4:	e9c2 3300 	strd	r3, r3, [r2]
9001e0d8:	6093      	str	r3, [r2, #8]
9001e0da:	f008 fded 	bl	90026cb8 <EwFree>
9001e0de:	6863      	ldr	r3, [r4, #4]
9001e0e0:	3b0c      	subs	r3, #12
9001e0e2:	6063      	str	r3, [r4, #4]
9001e0e4:	bd10      	pop	{r4, pc}
9001e0e6:	461a      	mov	r2, r3
9001e0e8:	e7e7      	b.n	9001e0ba <EwUnlockObject+0xa>
9001e0ea:	6223      	str	r3, [r4, #32]
9001e0ec:	e7f0      	b.n	9001e0d0 <EwUnlockObject+0x20>
9001e0ee:	f240 1037 	movw	r0, #311	; 0x137
9001e0f2:	f7ff f9c3 	bl	9001d47c <EwErrorPD>
9001e0f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e0fa:	f008 bddf 	b.w	90026cbc <EwPanic>
9001e0fe:	bf00      	nop
9001e100:	200002a8 	.word	0x200002a8

9001e104 <EwReclaimMemory>:
9001e104:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e108:	4d98      	ldr	r5, [pc, #608]	; (9001e36c <EwReclaimMemory+0x268>)
9001e10a:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
9001e10e:	f1b8 0f00 	cmp.w	r8, #0
9001e112:	d009      	beq.n	9001e128 <EwReclaimMemory+0x24>
9001e114:	f04f 0800 	mov.w	r8, #0
9001e118:	f44f 709e 	mov.w	r0, #316	; 0x13c
9001e11c:	f7ff f998 	bl	9001d450 <EwError>
9001e120:	4640      	mov	r0, r8
9001e122:	b003      	add	sp, #12
9001e124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e128:	2601      	movs	r6, #1
9001e12a:	6a2a      	ldr	r2, [r5, #32]
9001e12c:	46c1      	mov	r9, r8
9001e12e:	4637      	mov	r7, r6
9001e130:	4631      	mov	r1, r6
9001e132:	626e      	str	r6, [r5, #36]	; 0x24
9001e134:	b942      	cbnz	r2, 9001e148 <EwReclaimMemory+0x44>
9001e136:	b10e      	cbz	r6, 9001e13c <EwReclaimMemory+0x38>
9001e138:	f001 fbf8 	bl	9001f92c <EwDiscardSignals>
9001e13c:	463c      	mov	r4, r7
9001e13e:	2c01      	cmp	r4, #1
9001e140:	f000 8092 	beq.w	9001e268 <EwReclaimMemory+0x164>
9001e144:	4622      	mov	r2, r4
9001e146:	e013      	b.n	9001e170 <EwReclaimMemory+0x6c>
9001e148:	6893      	ldr	r3, [r2, #8]
9001e14a:	6858      	ldr	r0, [r3, #4]
9001e14c:	b968      	cbnz	r0, 9001e16a <EwReclaimMemory+0x66>
9001e14e:	f1b9 0f00 	cmp.w	r9, #0
9001e152:	d006      	beq.n	9001e162 <EwReclaimMemory+0x5e>
9001e154:	4606      	mov	r6, r0
9001e156:	f8c9 3004 	str.w	r3, [r9, #4]
9001e15a:	6059      	str	r1, [r3, #4]
9001e15c:	6812      	ldr	r2, [r2, #0]
9001e15e:	4699      	mov	r9, r3
9001e160:	e7e8      	b.n	9001e134 <EwReclaimMemory+0x30>
9001e162:	464e      	mov	r6, r9
9001e164:	461f      	mov	r7, r3
9001e166:	6059      	str	r1, [r3, #4]
9001e168:	e7f8      	b.n	9001e15c <EwReclaimMemory+0x58>
9001e16a:	464b      	mov	r3, r9
9001e16c:	e7f6      	b.n	9001e15c <EwReclaimMemory+0x58>
9001e16e:	46a1      	mov	r9, r4
9001e170:	e9d2 0302 	ldrd	r0, r3, [r2, #8]
9001e174:	b15b      	cbz	r3, 9001e18e <EwReclaimMemory+0x8a>
9001e176:	681c      	ldr	r4, [r3, #0]
9001e178:	9401      	str	r4, [sp, #4]
9001e17a:	b130      	cbz	r0, 9001e18a <EwReclaimMemory+0x86>
9001e17c:	6844      	ldr	r4, [r0, #4]
9001e17e:	b924      	cbnz	r4, 9001e18a <EwReclaimMemory+0x86>
9001e180:	f8c9 0004 	str.w	r0, [r9, #4]
9001e184:	2101      	movs	r1, #1
9001e186:	4681      	mov	r9, r0
9001e188:	6041      	str	r1, [r0, #4]
9001e18a:	464c      	mov	r4, r9
9001e18c:	e05d      	b.n	9001e24a <EwReclaimMemory+0x146>
9001e18e:	9301      	str	r3, [sp, #4]
9001e190:	e7f3      	b.n	9001e17a <EwReclaimMemory+0x76>
9001e192:	9801      	ldr	r0, [sp, #4]
9001e194:	f8d3 b008 	ldr.w	fp, [r3, #8]
9001e198:	4601      	mov	r1, r0
9001e19a:	4875      	ldr	r0, [pc, #468]	; (9001e370 <EwReclaimMemory+0x26c>)
9001e19c:	4281      	cmp	r1, r0
9001e19e:	d10d      	bne.n	9001e1bc <EwReclaimMemory+0xb8>
9001e1a0:	68d8      	ldr	r0, [r3, #12]
9001e1a2:	b158      	cbz	r0, 9001e1bc <EwReclaimMemory+0xb8>
9001e1a4:	6840      	ldr	r0, [r0, #4]
9001e1a6:	b148      	cbz	r0, 9001e1bc <EwReclaimMemory+0xb8>
9001e1a8:	f8db 0010 	ldr.w	r0, [fp, #16]
9001e1ac:	5810      	ldr	r0, [r2, r0]
9001e1ae:	b128      	cbz	r0, 9001e1bc <EwReclaimMemory+0xb8>
9001e1b0:	6841      	ldr	r1, [r0, #4]
9001e1b2:	b919      	cbnz	r1, 9001e1bc <EwReclaimMemory+0xb8>
9001e1b4:	6060      	str	r0, [r4, #4]
9001e1b6:	2101      	movs	r1, #1
9001e1b8:	4604      	mov	r4, r0
9001e1ba:	6041      	str	r1, [r0, #4]
9001e1bc:	e9d3 0c05 	ldrd	r0, ip, [r3, #20]
9001e1c0:	b158      	cbz	r0, 9001e1da <EwReclaimMemory+0xd6>
9001e1c2:	4560      	cmp	r0, ip
9001e1c4:	d009      	beq.n	9001e1da <EwReclaimMemory+0xd6>
9001e1c6:	f1bc 0f00 	cmp.w	ip, #0
9001e1ca:	d169      	bne.n	9001e2a0 <EwReclaimMemory+0x19c>
9001e1cc:	f8d3 a010 	ldr.w	sl, [r3, #16]
9001e1d0:	4492      	add	sl, r2
9001e1d2:	eb02 0e00 	add.w	lr, r2, r0
9001e1d6:	45f2      	cmp	sl, lr
9001e1d8:	d864      	bhi.n	9001e2a4 <EwReclaimMemory+0x1a0>
9001e1da:	f8d3 e01c 	ldr.w	lr, [r3, #28]
9001e1de:	f1bc 0f00 	cmp.w	ip, #0
9001e1e2:	d00a      	beq.n	9001e1fa <EwReclaimMemory+0xf6>
9001e1e4:	45f4      	cmp	ip, lr
9001e1e6:	d008      	beq.n	9001e1fa <EwReclaimMemory+0xf6>
9001e1e8:	f1be 0f00 	cmp.w	lr, #0
9001e1ec:	d166      	bne.n	9001e2bc <EwReclaimMemory+0x1b8>
9001e1ee:	6918      	ldr	r0, [r3, #16]
9001e1f0:	4494      	add	ip, r2
9001e1f2:	eb02 0a00 	add.w	sl, r2, r0
9001e1f6:	45e2      	cmp	sl, ip
9001e1f8:	d862      	bhi.n	9001e2c0 <EwReclaimMemory+0x1bc>
9001e1fa:	f8d3 c020 	ldr.w	ip, [r3, #32]
9001e1fe:	f1be 0f00 	cmp.w	lr, #0
9001e202:	d00a      	beq.n	9001e21a <EwReclaimMemory+0x116>
9001e204:	45f4      	cmp	ip, lr
9001e206:	d008      	beq.n	9001e21a <EwReclaimMemory+0x116>
9001e208:	f1bc 0f00 	cmp.w	ip, #0
9001e20c:	d164      	bne.n	9001e2d8 <EwReclaimMemory+0x1d4>
9001e20e:	6918      	ldr	r0, [r3, #16]
9001e210:	4496      	add	lr, r2
9001e212:	eb02 0a00 	add.w	sl, r2, r0
9001e216:	45f2      	cmp	sl, lr
9001e218:	d860      	bhi.n	9001e2dc <EwReclaimMemory+0x1d8>
9001e21a:	f8d3 e024 	ldr.w	lr, [r3, #36]	; 0x24
9001e21e:	f1bc 0f00 	cmp.w	ip, #0
9001e222:	d00e      	beq.n	9001e242 <EwReclaimMemory+0x13e>
9001e224:	45e6      	cmp	lr, ip
9001e226:	d077      	beq.n	9001e318 <EwReclaimMemory+0x214>
9001e228:	f1be 0f00 	cmp.w	lr, #0
9001e22c:	d162      	bne.n	9001e2f4 <EwReclaimMemory+0x1f0>
9001e22e:	6918      	ldr	r0, [r3, #16]
9001e230:	4494      	add	ip, r2
9001e232:	eb02 0900 	add.w	r9, r2, r0
9001e236:	45e1      	cmp	r9, ip
9001e238:	d903      	bls.n	9001e242 <EwReclaimMemory+0x13e>
9001e23a:	f8dc 000c 	ldr.w	r0, [ip, #12]
9001e23e:	2800      	cmp	r0, #0
9001e240:	d15a      	bne.n	9001e2f8 <EwReclaimMemory+0x1f4>
9001e242:	f1be 0f00 	cmp.w	lr, #0
9001e246:	d167      	bne.n	9001e318 <EwReclaimMemory+0x214>
9001e248:	465b      	mov	r3, fp
9001e24a:	b11b      	cbz	r3, 9001e254 <EwReclaimMemory+0x150>
9001e24c:	6818      	ldr	r0, [r3, #0]
9001e24e:	9901      	ldr	r1, [sp, #4]
9001e250:	4288      	cmp	r0, r1
9001e252:	d09e      	beq.n	9001e192 <EwReclaimMemory+0x8e>
9001e254:	6852      	ldr	r2, [r2, #4]
9001e256:	2a01      	cmp	r2, #1
9001e258:	d189      	bne.n	9001e16e <EwReclaimMemory+0x6a>
9001e25a:	4620      	mov	r0, r4
9001e25c:	f001 fb3c 	bl	9001f8d8 <EwMarkSignals>
9001e260:	4284      	cmp	r4, r0
9001e262:	4681      	mov	r9, r0
9001e264:	f47f af6b 	bne.w	9001e13e <EwReclaimMemory+0x3a>
9001e268:	4c42      	ldr	r4, [pc, #264]	; (9001e374 <EwReclaimMemory+0x270>)
9001e26a:	f001 fb6b 	bl	9001f944 <EwDisposeObservers>
9001e26e:	f001 fb7b 	bl	9001f968 <EwDisposeSignals>
9001e272:	6820      	ldr	r0, [r4, #0]
9001e274:	2800      	cmp	r0, #0
9001e276:	d16a      	bne.n	9001e34e <EwReclaimMemory+0x24a>
9001e278:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 9001e36c <EwReclaimMemory+0x268>
9001e27c:	f8d9 4000 	ldr.w	r4, [r9]
9001e280:	2c00      	cmp	r4, #0
9001e282:	d179      	bne.n	9001e378 <EwReclaimMemory+0x274>
9001e284:	2f01      	cmp	r7, #1
9001e286:	f200 8091 	bhi.w	9001e3ac <EwReclaimMemory+0x2a8>
9001e28a:	4630      	mov	r0, r6
9001e28c:	f001 fffe 	bl	9002028c <EwDisposeStrings>
9001e290:	4480      	add	r8, r0
9001e292:	b10e      	cbz	r6, 9001e298 <EwReclaimMemory+0x194>
9001e294:	f000 feca 	bl	9001f02c <EwReleaseDecompressBuffers>
9001e298:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9001e29a:	3b01      	subs	r3, #1
9001e29c:	626b      	str	r3, [r5, #36]	; 0x24
9001e29e:	e73f      	b.n	9001e120 <EwReclaimMemory+0x1c>
9001e2a0:	46e2      	mov	sl, ip
9001e2a2:	e795      	b.n	9001e1d0 <EwReclaimMemory+0xcc>
9001e2a4:	f85e 0b04 	ldr.w	r0, [lr], #4
9001e2a8:	2800      	cmp	r0, #0
9001e2aa:	d094      	beq.n	9001e1d6 <EwReclaimMemory+0xd2>
9001e2ac:	6841      	ldr	r1, [r0, #4]
9001e2ae:	2900      	cmp	r1, #0
9001e2b0:	d191      	bne.n	9001e1d6 <EwReclaimMemory+0xd2>
9001e2b2:	2101      	movs	r1, #1
9001e2b4:	6060      	str	r0, [r4, #4]
9001e2b6:	4604      	mov	r4, r0
9001e2b8:	6041      	str	r1, [r0, #4]
9001e2ba:	e78c      	b.n	9001e1d6 <EwReclaimMemory+0xd2>
9001e2bc:	4670      	mov	r0, lr
9001e2be:	e797      	b.n	9001e1f0 <EwReclaimMemory+0xec>
9001e2c0:	f8dc 0000 	ldr.w	r0, [ip]
9001e2c4:	b128      	cbz	r0, 9001e2d2 <EwReclaimMemory+0x1ce>
9001e2c6:	6841      	ldr	r1, [r0, #4]
9001e2c8:	b919      	cbnz	r1, 9001e2d2 <EwReclaimMemory+0x1ce>
9001e2ca:	6060      	str	r0, [r4, #4]
9001e2cc:	2101      	movs	r1, #1
9001e2ce:	4604      	mov	r4, r0
9001e2d0:	6041      	str	r1, [r0, #4]
9001e2d2:	f10c 0c08 	add.w	ip, ip, #8
9001e2d6:	e78e      	b.n	9001e1f6 <EwReclaimMemory+0xf2>
9001e2d8:	4660      	mov	r0, ip
9001e2da:	e799      	b.n	9001e210 <EwReclaimMemory+0x10c>
9001e2dc:	f8de 0000 	ldr.w	r0, [lr]
9001e2e0:	b128      	cbz	r0, 9001e2ee <EwReclaimMemory+0x1ea>
9001e2e2:	6841      	ldr	r1, [r0, #4]
9001e2e4:	b919      	cbnz	r1, 9001e2ee <EwReclaimMemory+0x1ea>
9001e2e6:	6060      	str	r0, [r4, #4]
9001e2e8:	2101      	movs	r1, #1
9001e2ea:	4604      	mov	r4, r0
9001e2ec:	6041      	str	r1, [r0, #4]
9001e2ee:	f10e 0e0c 	add.w	lr, lr, #12
9001e2f2:	e790      	b.n	9001e216 <EwReclaimMemory+0x112>
9001e2f4:	4670      	mov	r0, lr
9001e2f6:	e79b      	b.n	9001e230 <EwReclaimMemory+0x12c>
9001e2f8:	f8dc 1004 	ldr.w	r1, [ip, #4]
9001e2fc:	b929      	cbnz	r1, 9001e30a <EwReclaimMemory+0x206>
9001e2fe:	f8c4 c004 	str.w	ip, [r4, #4]
9001e302:	2101      	movs	r1, #1
9001e304:	4664      	mov	r4, ip
9001e306:	f8cc 1004 	str.w	r1, [ip, #4]
9001e30a:	f8dc 1000 	ldr.w	r1, [ip]
9001e30e:	4281      	cmp	r1, r0
9001e310:	d197      	bne.n	9001e242 <EwReclaimMemory+0x13e>
9001e312:	6900      	ldr	r0, [r0, #16]
9001e314:	4484      	add	ip, r0
9001e316:	e78e      	b.n	9001e236 <EwReclaimMemory+0x132>
9001e318:	6a98      	ldr	r0, [r3, #40]	; 0x28
9001e31a:	4586      	cmp	lr, r0
9001e31c:	d094      	beq.n	9001e248 <EwReclaimMemory+0x144>
9001e31e:	b900      	cbnz	r0, 9001e322 <EwReclaimMemory+0x21e>
9001e320:	6918      	ldr	r0, [r3, #16]
9001e322:	1813      	adds	r3, r2, r0
9001e324:	4496      	add	lr, r2
9001e326:	459e      	cmp	lr, r3
9001e328:	d28e      	bcs.n	9001e248 <EwReclaimMemory+0x144>
9001e32a:	f85e 0b04 	ldr.w	r0, [lr], #4
9001e32e:	2800      	cmp	r0, #0
9001e330:	d0f9      	beq.n	9001e326 <EwReclaimMemory+0x222>
9001e332:	f930 9c02 	ldrsh.w	r9, [r0, #-2]
9001e336:	f830 cc02 	ldrh.w	ip, [r0, #-2]
9001e33a:	f1b9 0f00 	cmp.w	r9, #0
9001e33e:	bfa2      	ittt	ge
9001e340:	ea6f 4c4c 	mvnge.w	ip, ip, lsl #17
9001e344:	ea6f 4c5c 	mvnge.w	ip, ip, lsr #17
9001e348:	f820 cc02 	strhge.w	ip, [r0, #-2]
9001e34c:	e7eb      	b.n	9001e326 <EwReclaimMemory+0x222>
9001e34e:	6883      	ldr	r3, [r0, #8]
9001e350:	b14b      	cbz	r3, 9001e366 <EwReclaimMemory+0x262>
9001e352:	685b      	ldr	r3, [r3, #4]
9001e354:	b93b      	cbnz	r3, 9001e366 <EwReclaimMemory+0x262>
9001e356:	6803      	ldr	r3, [r0, #0]
9001e358:	6023      	str	r3, [r4, #0]
9001e35a:	f008 fcad 	bl	90026cb8 <EwFree>
9001e35e:	686b      	ldr	r3, [r5, #4]
9001e360:	3b0c      	subs	r3, #12
9001e362:	606b      	str	r3, [r5, #4]
9001e364:	e785      	b.n	9001e272 <EwReclaimMemory+0x16e>
9001e366:	4604      	mov	r4, r0
9001e368:	e783      	b.n	9001e272 <EwReclaimMemory+0x16e>
9001e36a:	bf00      	nop
9001e36c:	200002a8 	.word	0x200002a8
9001e370:	434c4153 	.word	0x434c4153
9001e374:	200002c4 	.word	0x200002c4
9001e378:	68a3      	ldr	r3, [r4, #8]
9001e37a:	b9ab      	cbnz	r3, 9001e3a8 <EwReclaimMemory+0x2a4>
9001e37c:	6823      	ldr	r3, [r4, #0]
9001e37e:	4620      	mov	r0, r4
9001e380:	f108 0801 	add.w	r8, r8, #1
9001e384:	f850 1f04 	ldr.w	r1, [r0, #4]!
9001e388:	f8c9 3000 	str.w	r3, [r9]
9001e38c:	686b      	ldr	r3, [r5, #4]
9001e38e:	690a      	ldr	r2, [r1, #16]
9001e390:	3b04      	subs	r3, #4
9001e392:	1a9b      	subs	r3, r3, r2
9001e394:	606b      	str	r3, [r5, #4]
9001e396:	68ab      	ldr	r3, [r5, #8]
9001e398:	3b01      	subs	r3, #1
9001e39a:	60ab      	str	r3, [r5, #8]
9001e39c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001e39e:	4798      	blx	r3
9001e3a0:	4620      	mov	r0, r4
9001e3a2:	f008 fc89 	bl	90026cb8 <EwFree>
9001e3a6:	e769      	b.n	9001e27c <EwReclaimMemory+0x178>
9001e3a8:	46a1      	mov	r9, r4
9001e3aa:	e767      	b.n	9001e27c <EwReclaimMemory+0x178>
9001e3ac:	687b      	ldr	r3, [r7, #4]
9001e3ae:	607c      	str	r4, [r7, #4]
9001e3b0:	461f      	mov	r7, r3
9001e3b2:	e767      	b.n	9001e284 <EwReclaimMemory+0x180>

9001e3b4 <EwImmediateReclaimMemory>:
9001e3b4:	2000      	movs	r0, #0
9001e3b6:	4770      	bx	lr

9001e3b8 <EwTestImmediateReclaimMemory>:
9001e3b8:	2000      	movs	r0, #0
9001e3ba:	4770      	bx	lr

9001e3bc <EwReconstructObjects>:
9001e3bc:	4b05      	ldr	r3, [pc, #20]	; (9001e3d4 <EwReconstructObjects+0x18>)
9001e3be:	b510      	push	{r4, lr}
9001e3c0:	681c      	ldr	r4, [r3, #0]
9001e3c2:	b904      	cbnz	r4, 9001e3c6 <EwReconstructObjects+0xa>
9001e3c4:	bd10      	pop	{r4, pc}
9001e3c6:	6863      	ldr	r3, [r4, #4]
9001e3c8:	1d20      	adds	r0, r4, #4
9001e3ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001e3cc:	4798      	blx	r3
9001e3ce:	6824      	ldr	r4, [r4, #0]
9001e3d0:	e7f7      	b.n	9001e3c2 <EwReconstructObjects+0x6>
9001e3d2:	bf00      	nop
9001e3d4:	200002a8 	.word	0x200002a8

9001e3d8 <EwPrintProfilerStatistic>:
9001e3d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001e3da:	4c5f      	ldr	r4, [pc, #380]	; (9001e558 <EwPrintProfilerStatistic+0x180>)
9001e3dc:	2800      	cmp	r0, #0
9001e3de:	d14e      	bne.n	9001e47e <EwPrintProfilerStatistic+0xa6>
9001e3e0:	485e      	ldr	r0, [pc, #376]	; (9001e55c <EwPrintProfilerStatistic+0x184>)
9001e3e2:	f7fe fc01 	bl	9001cbe8 <EwPrint>
9001e3e6:	6861      	ldr	r1, [r4, #4]
9001e3e8:	485d      	ldr	r0, [pc, #372]	; (9001e560 <EwPrintProfilerStatistic+0x188>)
9001e3ea:	4e5e      	ldr	r6, [pc, #376]	; (9001e564 <EwPrintProfilerStatistic+0x18c>)
9001e3ec:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
9001e3f0:	f7fe fbfa 	bl	9001cbe8 <EwPrint>
9001e3f4:	6921      	ldr	r1, [r4, #16]
9001e3f6:	485c      	ldr	r0, [pc, #368]	; (9001e568 <EwPrintProfilerStatistic+0x190>)
9001e3f8:	e9d4 320a 	ldrd	r3, r2, [r4, #40]	; 0x28
9001e3fc:	f7fe fbf4 	bl	9001cbe8 <EwPrint>
9001e400:	6961      	ldr	r1, [r4, #20]
9001e402:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9001e404:	e9d4 020c 	ldrd	r0, r2, [r4, #48]	; 0x30
9001e408:	1ac9      	subs	r1, r1, r3
9001e40a:	1a82      	subs	r2, r0, r2
9001e40c:	4857      	ldr	r0, [pc, #348]	; (9001e56c <EwPrintProfilerStatistic+0x194>)
9001e40e:	f7fe fbeb 	bl	9001cbe8 <EwPrint>
9001e412:	6831      	ldr	r1, [r6, #0]
9001e414:	2900      	cmp	r1, #0
9001e416:	dd09      	ble.n	9001e42c <EwPrintProfilerStatistic+0x54>
9001e418:	4d55      	ldr	r5, [pc, #340]	; (9001e570 <EwPrintProfilerStatistic+0x198>)
9001e41a:	4b56      	ldr	r3, [pc, #344]	; (9001e574 <EwPrintProfilerStatistic+0x19c>)
9001e41c:	682a      	ldr	r2, [r5, #0]
9001e41e:	681b      	ldr	r3, [r3, #0]
9001e420:	4855      	ldr	r0, [pc, #340]	; (9001e578 <EwPrintProfilerStatistic+0x1a0>)
9001e422:	f7fe fbe1 	bl	9001cbe8 <EwPrint>
9001e426:	2300      	movs	r3, #0
9001e428:	6033      	str	r3, [r6, #0]
9001e42a:	602b      	str	r3, [r5, #0]
9001e42c:	6c61      	ldr	r1, [r4, #68]	; 0x44
9001e42e:	2900      	cmp	r1, #0
9001e430:	dd02      	ble.n	9001e438 <EwPrintProfilerStatistic+0x60>
9001e432:	4852      	ldr	r0, [pc, #328]	; (9001e57c <EwPrintProfilerStatistic+0x1a4>)
9001e434:	f7fe fbd8 	bl	9001cbe8 <EwPrint>
9001e438:	6ba1      	ldr	r1, [r4, #56]	; 0x38
9001e43a:	2900      	cmp	r1, #0
9001e43c:	dd02      	ble.n	9001e444 <EwPrintProfilerStatistic+0x6c>
9001e43e:	4850      	ldr	r0, [pc, #320]	; (9001e580 <EwPrintProfilerStatistic+0x1a8>)
9001e440:	f7fe fbd2 	bl	9001cbe8 <EwPrint>
9001e444:	6c21      	ldr	r1, [r4, #64]	; 0x40
9001e446:	2900      	cmp	r1, #0
9001e448:	dd02      	ble.n	9001e450 <EwPrintProfilerStatistic+0x78>
9001e44a:	484e      	ldr	r0, [pc, #312]	; (9001e584 <EwPrintProfilerStatistic+0x1ac>)
9001e44c:	f7fe fbcc 	bl	9001cbe8 <EwPrint>
9001e450:	6860      	ldr	r0, [r4, #4]
9001e452:	69a2      	ldr	r2, [r4, #24]
9001e454:	e9d4 3110 	ldrd	r3, r1, [r4, #64]	; 0x40
9001e458:	441a      	add	r2, r3
9001e45a:	4403      	add	r3, r0
9001e45c:	6920      	ldr	r0, [r4, #16]
9001e45e:	440a      	add	r2, r1
9001e460:	4403      	add	r3, r0
9001e462:	6960      	ldr	r0, [r4, #20]
9001e464:	4403      	add	r3, r0
9001e466:	4848      	ldr	r0, [pc, #288]	; (9001e588 <EwPrintProfilerStatistic+0x1b0>)
9001e468:	4419      	add	r1, r3
9001e46a:	f7fe fbbd 	bl	9001cbe8 <EwPrint>
9001e46e:	483b      	ldr	r0, [pc, #236]	; (9001e55c <EwPrintProfilerStatistic+0x184>)
9001e470:	f7fe fbba 	bl	9001cbe8 <EwPrint>
9001e474:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001e476:	2800      	cmp	r0, #0
9001e478:	d143      	bne.n	9001e502 <EwPrintProfilerStatistic+0x12a>
9001e47a:	63e0      	str	r0, [r4, #60]	; 0x3c
9001e47c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001e47e:	6825      	ldr	r5, [r4, #0]
9001e480:	2600      	movs	r6, #0
9001e482:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9001e484:	2d00      	cmp	r5, #0
9001e486:	d04e      	beq.n	9001e526 <EwPrintProfilerStatistic+0x14e>
9001e488:	6869      	ldr	r1, [r5, #4]
9001e48a:	4610      	mov	r0, r2
9001e48c:	2800      	cmp	r0, #0
9001e48e:	d040      	beq.n	9001e512 <EwPrintProfilerStatistic+0x13a>
9001e490:	6883      	ldr	r3, [r0, #8]
9001e492:	4299      	cmp	r1, r3
9001e494:	d10e      	bne.n	9001e4b4 <EwPrintProfilerStatistic+0xdc>
9001e496:	6843      	ldr	r3, [r0, #4]
9001e498:	b13b      	cbz	r3, 9001e4aa <EwPrintProfilerStatistic+0xd2>
9001e49a:	6801      	ldr	r1, [r0, #0]
9001e49c:	6019      	str	r1, [r3, #0]
9001e49e:	b101      	cbz	r1, 9001e4a2 <EwPrintProfilerStatistic+0xca>
9001e4a0:	604b      	str	r3, [r1, #4]
9001e4a2:	63e0      	str	r0, [r4, #60]	; 0x3c
9001e4a4:	e9c0 2600 	strd	r2, r6, [r0]
9001e4a8:	6050      	str	r0, [r2, #4]
9001e4aa:	68c3      	ldr	r3, [r0, #12]
9001e4ac:	682d      	ldr	r5, [r5, #0]
9001e4ae:	3301      	adds	r3, #1
9001e4b0:	60c3      	str	r3, [r0, #12]
9001e4b2:	e7e6      	b.n	9001e482 <EwPrintProfilerStatistic+0xaa>
9001e4b4:	6800      	ldr	r0, [r0, #0]
9001e4b6:	e7e9      	b.n	9001e48c <EwPrintProfilerStatistic+0xb4>
9001e4b8:	686b      	ldr	r3, [r5, #4]
9001e4ba:	e9c0 3602 	strd	r3, r6, [r0, #8]
9001e4be:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001e4c0:	e9c0 3600 	strd	r3, r6, [r0]
9001e4c4:	b103      	cbz	r3, 9001e4c8 <EwPrintProfilerStatistic+0xf0>
9001e4c6:	6058      	str	r0, [r3, #4]
9001e4c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
9001e4ca:	63e0      	str	r0, [r4, #60]	; 0x3c
9001e4cc:	3310      	adds	r3, #16
9001e4ce:	6423      	str	r3, [r4, #64]	; 0x40
9001e4d0:	e7eb      	b.n	9001e4aa <EwPrintProfilerStatistic+0xd2>
9001e4d2:	6859      	ldr	r1, [r3, #4]
9001e4d4:	b181      	cbz	r1, 9001e4f8 <EwPrintProfilerStatistic+0x120>
9001e4d6:	68cf      	ldr	r7, [r1, #12]
9001e4d8:	68de      	ldr	r6, [r3, #12]
9001e4da:	42b7      	cmp	r7, r6
9001e4dc:	da0c      	bge.n	9001e4f8 <EwPrintProfilerStatistic+0x120>
9001e4de:	681a      	ldr	r2, [r3, #0]
9001e4e0:	600a      	str	r2, [r1, #0]
9001e4e2:	b102      	cbz	r2, 9001e4e6 <EwPrintProfilerStatistic+0x10e>
9001e4e4:	6051      	str	r1, [r2, #4]
9001e4e6:	685a      	ldr	r2, [r3, #4]
9001e4e8:	6851      	ldr	r1, [r2, #4]
9001e4ea:	601a      	str	r2, [r3, #0]
9001e4ec:	6059      	str	r1, [r3, #4]
9001e4ee:	6053      	str	r3, [r2, #4]
9001e4f0:	685a      	ldr	r2, [r3, #4]
9001e4f2:	b11a      	cbz	r2, 9001e4fc <EwPrintProfilerStatistic+0x124>
9001e4f4:	6013      	str	r3, [r2, #0]
9001e4f6:	2200      	movs	r2, #0
9001e4f8:	681b      	ldr	r3, [r3, #0]
9001e4fa:	e018      	b.n	9001e52e <EwPrintProfilerStatistic+0x156>
9001e4fc:	4618      	mov	r0, r3
9001e4fe:	2501      	movs	r5, #1
9001e500:	e7fa      	b.n	9001e4f8 <EwPrintProfilerStatistic+0x120>
9001e502:	6805      	ldr	r5, [r0, #0]
9001e504:	f008 fbd8 	bl	90026cb8 <EwFree>
9001e508:	6c23      	ldr	r3, [r4, #64]	; 0x40
9001e50a:	4628      	mov	r0, r5
9001e50c:	3b10      	subs	r3, #16
9001e50e:	6423      	str	r3, [r4, #64]	; 0x40
9001e510:	e7b1      	b.n	9001e476 <EwPrintProfilerStatistic+0x9e>
9001e512:	2010      	movs	r0, #16
9001e514:	f008 fbce 	bl	90026cb4 <EwAlloc>
9001e518:	2800      	cmp	r0, #0
9001e51a:	d1cd      	bne.n	9001e4b8 <EwPrintProfilerStatistic+0xe0>
9001e51c:	200d      	movs	r0, #13
9001e51e:	f7fe ff97 	bl	9001d450 <EwError>
9001e522:	f008 fbcb 	bl	90026cbc <EwPanic>
9001e526:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9001e528:	2500      	movs	r5, #0
9001e52a:	4603      	mov	r3, r0
9001e52c:	2201      	movs	r2, #1
9001e52e:	2b00      	cmp	r3, #0
9001e530:	d1cf      	bne.n	9001e4d2 <EwPrintProfilerStatistic+0xfa>
9001e532:	2a00      	cmp	r2, #0
9001e534:	d0f9      	beq.n	9001e52a <EwPrintProfilerStatistic+0x152>
9001e536:	b105      	cbz	r5, 9001e53a <EwPrintProfilerStatistic+0x162>
9001e538:	63e0      	str	r0, [r4, #60]	; 0x3c
9001e53a:	6be5      	ldr	r5, [r4, #60]	; 0x3c
9001e53c:	4e13      	ldr	r6, [pc, #76]	; (9001e58c <EwPrintProfilerStatistic+0x1b4>)
9001e53e:	2d00      	cmp	r5, #0
9001e540:	f43f af4e 	beq.w	9001e3e0 <EwPrintProfilerStatistic+0x8>
9001e544:	68aa      	ldr	r2, [r5, #8]
9001e546:	4630      	mov	r0, r6
9001e548:	68e9      	ldr	r1, [r5, #12]
9001e54a:	6913      	ldr	r3, [r2, #16]
9001e54c:	6852      	ldr	r2, [r2, #4]
9001e54e:	f7fe fb4b 	bl	9001cbe8 <EwPrint>
9001e552:	682d      	ldr	r5, [r5, #0]
9001e554:	e7f3      	b.n	9001e53e <EwPrintProfilerStatistic+0x166>
9001e556:	bf00      	nop
9001e558:	200002a8 	.word	0x200002a8
9001e55c:	90035059 	.word	0x90035059
9001e560:	90034ecd 	.word	0x90034ecd
9001e564:	200001b0 	.word	0x200001b0
9001e568:	90034f05 	.word	0x90034f05
9001e56c:	90034f37 	.word	0x90034f37
9001e570:	200001b4 	.word	0x200001b4
9001e574:	20000014 	.word	0x20000014
9001e578:	90034fc4 	.word	0x90034fc4
9001e57c:	9003505b 	.word	0x9003505b
9001e580:	900350a7 	.word	0x900350a7
9001e584:	900350f5 	.word	0x900350f5
9001e588:	90035120 	.word	0x90035120
9001e58c:	90034f91 	.word	0x90034f91

9001e590 <EwNewPoint>:
9001e590:	e9c0 1200 	strd	r1, r2, [r0]
9001e594:	4770      	bx	lr

9001e596 <EwCompPoint>:
9001e596:	b084      	sub	sp, #16
9001e598:	f10d 0c10 	add.w	ip, sp, #16
9001e59c:	e90c 0003 	stmdb	ip, {r0, r1}
9001e5a0:	4669      	mov	r1, sp
9001e5a2:	e881 000c 	stmia.w	r1, {r2, r3}
9001e5a6:	9b00      	ldr	r3, [sp, #0]
9001e5a8:	4298      	cmp	r0, r3
9001e5aa:	d106      	bne.n	9001e5ba <EwCompPoint+0x24>
9001e5ac:	9803      	ldr	r0, [sp, #12]
9001e5ae:	9b01      	ldr	r3, [sp, #4]
9001e5b0:	1ac0      	subs	r0, r0, r3
9001e5b2:	bf18      	it	ne
9001e5b4:	2001      	movne	r0, #1
9001e5b6:	b004      	add	sp, #16
9001e5b8:	4770      	bx	lr
9001e5ba:	2001      	movs	r0, #1
9001e5bc:	e7fb      	b.n	9001e5b6 <EwCompPoint+0x20>

9001e5be <EwIsPointNull>:
9001e5be:	b082      	sub	sp, #8
9001e5c0:	ab02      	add	r3, sp, #8
9001e5c2:	e903 0003 	stmdb	r3, {r0, r1}
9001e5c6:	460b      	mov	r3, r1
9001e5c8:	4303      	orrs	r3, r0
9001e5ca:	bf0c      	ite	eq
9001e5cc:	2001      	moveq	r0, #1
9001e5ce:	2000      	movne	r0, #0
9001e5d0:	b002      	add	sp, #8
9001e5d2:	4770      	bx	lr

9001e5d4 <EwMovePointNeg>:
9001e5d4:	b082      	sub	sp, #8
9001e5d6:	b513      	push	{r0, r1, r4, lr}
9001e5d8:	f10d 0c08 	add.w	ip, sp, #8
9001e5dc:	9305      	str	r3, [sp, #20]
9001e5de:	e90c 0006 	stmdb	ip, {r1, r2}
9001e5e2:	9906      	ldr	r1, [sp, #24]
9001e5e4:	1a52      	subs	r2, r2, r1
9001e5e6:	9900      	ldr	r1, [sp, #0]
9001e5e8:	1acb      	subs	r3, r1, r3
9001e5ea:	e9c0 3200 	strd	r3, r2, [r0]
9001e5ee:	b002      	add	sp, #8
9001e5f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e5f4:	b002      	add	sp, #8
9001e5f6:	4770      	bx	lr

9001e5f8 <EwMovePointPos>:
9001e5f8:	b082      	sub	sp, #8
9001e5fa:	b513      	push	{r0, r1, r4, lr}
9001e5fc:	f10d 0c08 	add.w	ip, sp, #8
9001e600:	9305      	str	r3, [sp, #20]
9001e602:	e90c 0006 	stmdb	ip, {r1, r2}
9001e606:	9a06      	ldr	r2, [sp, #24]
9001e608:	9901      	ldr	r1, [sp, #4]
9001e60a:	440a      	add	r2, r1
9001e60c:	9900      	ldr	r1, [sp, #0]
9001e60e:	440b      	add	r3, r1
9001e610:	e9c0 3200 	strd	r3, r2, [r0]
9001e614:	b002      	add	sp, #8
9001e616:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e61a:	b002      	add	sp, #8
9001e61c:	4770      	bx	lr

9001e61e <EwNegPoint>:
9001e61e:	b082      	sub	sp, #8
9001e620:	f10d 0c08 	add.w	ip, sp, #8
9001e624:	e90c 0006 	stmdb	ip, {r1, r2}
9001e628:	4252      	negs	r2, r2
9001e62a:	4249      	negs	r1, r1
9001e62c:	e9c0 1200 	strd	r1, r2, [r0]
9001e630:	b002      	add	sp, #8
9001e632:	4770      	bx	lr

9001e634 <EwSetPointX>:
9001e634:	b513      	push	{r0, r1, r4, lr}
9001e636:	4604      	mov	r4, r0
9001e638:	4668      	mov	r0, sp
9001e63a:	e880 0006 	stmia.w	r0, {r1, r2}
9001e63e:	9300      	str	r3, [sp, #0]
9001e640:	c803      	ldmia	r0, {r0, r1}
9001e642:	e884 0005 	stmia.w	r4, {r0, r2}
9001e646:	4620      	mov	r0, r4
9001e648:	b002      	add	sp, #8
9001e64a:	bd10      	pop	{r4, pc}

9001e64c <EwSetPointY>:
9001e64c:	b513      	push	{r0, r1, r4, lr}
9001e64e:	4604      	mov	r4, r0
9001e650:	4668      	mov	r0, sp
9001e652:	e880 0006 	stmia.w	r0, {r1, r2}
9001e656:	9301      	str	r3, [sp, #4]
9001e658:	c803      	ldmia	r0, {r0, r1}
9001e65a:	e884 0003 	stmia.w	r4, {r0, r1}
9001e65e:	4620      	mov	r0, r4
9001e660:	b002      	add	sp, #8
9001e662:	bd10      	pop	{r4, pc}

9001e664 <EwGetVariantOfPoint>:
9001e664:	b510      	push	{r4, lr}
9001e666:	4604      	mov	r4, r0
9001e668:	4608      	mov	r0, r1
9001e66a:	210c      	movs	r1, #12
9001e66c:	f000 fb57 	bl	9001ed1e <EwGetVariantOf>
9001e670:	e9d0 0101 	ldrd	r0, r1, [r0, #4]
9001e674:	e884 0003 	stmia.w	r4, {r0, r1}
9001e678:	4620      	mov	r0, r4
9001e67a:	bd10      	pop	{r4, pc}

9001e67c <EwNewRect>:
9001e67c:	b510      	push	{r4, lr}
9001e67e:	6083      	str	r3, [r0, #8]
9001e680:	9b02      	ldr	r3, [sp, #8]
9001e682:	e9c0 1200 	strd	r1, r2, [r0]
9001e686:	60c3      	str	r3, [r0, #12]
9001e688:	bd10      	pop	{r4, pc}

9001e68a <EwNewRect2Point>:
9001e68a:	b082      	sub	sp, #8
9001e68c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001e68e:	4604      	mov	r4, r0
9001e690:	4668      	mov	r0, sp
9001e692:	ad06      	add	r5, sp, #24
9001e694:	e880 0006 	stmia.w	r0, {r1, r2}
9001e698:	c803      	ldmia	r0, {r0, r1}
9001e69a:	f845 3f04 	str.w	r3, [r5, #4]!
9001e69e:	f104 0308 	add.w	r3, r4, #8
9001e6a2:	e884 0005 	stmia.w	r4, {r0, r2}
9001e6a6:	e895 0003 	ldmia.w	r5, {r0, r1}
9001e6aa:	e883 0003 	stmia.w	r3, {r0, r1}
9001e6ae:	4620      	mov	r0, r4
9001e6b0:	b003      	add	sp, #12
9001e6b2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001e6b6:	b002      	add	sp, #8
9001e6b8:	4770      	bx	lr

9001e6ba <EwCompRect>:
9001e6ba:	b084      	sub	sp, #16
9001e6bc:	f10d 0c10 	add.w	ip, sp, #16
9001e6c0:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e6c4:	9b04      	ldr	r3, [sp, #16]
9001e6c6:	4298      	cmp	r0, r3
9001e6c8:	d10d      	bne.n	9001e6e6 <EwCompRect+0x2c>
9001e6ca:	9b05      	ldr	r3, [sp, #20]
9001e6cc:	4299      	cmp	r1, r3
9001e6ce:	d10a      	bne.n	9001e6e6 <EwCompRect+0x2c>
9001e6d0:	9a02      	ldr	r2, [sp, #8]
9001e6d2:	9b06      	ldr	r3, [sp, #24]
9001e6d4:	429a      	cmp	r2, r3
9001e6d6:	d106      	bne.n	9001e6e6 <EwCompRect+0x2c>
9001e6d8:	9803      	ldr	r0, [sp, #12]
9001e6da:	9b07      	ldr	r3, [sp, #28]
9001e6dc:	1ac0      	subs	r0, r0, r3
9001e6de:	bf18      	it	ne
9001e6e0:	2001      	movne	r0, #1
9001e6e2:	b004      	add	sp, #16
9001e6e4:	4770      	bx	lr
9001e6e6:	2001      	movs	r0, #1
9001e6e8:	e7fb      	b.n	9001e6e2 <EwCompRect+0x28>

9001e6ea <EwIsRectNull>:
9001e6ea:	b084      	sub	sp, #16
9001e6ec:	f10d 0c10 	add.w	ip, sp, #16
9001e6f0:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e6f4:	4603      	mov	r3, r0
9001e6f6:	9a02      	ldr	r2, [sp, #8]
9001e6f8:	430b      	orrs	r3, r1
9001e6fa:	4313      	orrs	r3, r2
9001e6fc:	9a03      	ldr	r2, [sp, #12]
9001e6fe:	4313      	orrs	r3, r2
9001e700:	bf0c      	ite	eq
9001e702:	2001      	moveq	r0, #1
9001e704:	2000      	movne	r0, #0
9001e706:	b004      	add	sp, #16
9001e708:	4770      	bx	lr

9001e70a <EwIsPointInRect>:
9001e70a:	b084      	sub	sp, #16
9001e70c:	f10d 0c10 	add.w	ip, sp, #16
9001e710:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e714:	9b04      	ldr	r3, [sp, #16]
9001e716:	4298      	cmp	r0, r3
9001e718:	dc0c      	bgt.n	9001e734 <EwIsPointInRect+0x2a>
9001e71a:	9a02      	ldr	r2, [sp, #8]
9001e71c:	429a      	cmp	r2, r3
9001e71e:	dd09      	ble.n	9001e734 <EwIsPointInRect+0x2a>
9001e720:	9b05      	ldr	r3, [sp, #20]
9001e722:	4299      	cmp	r1, r3
9001e724:	dc06      	bgt.n	9001e734 <EwIsPointInRect+0x2a>
9001e726:	9803      	ldr	r0, [sp, #12]
9001e728:	4298      	cmp	r0, r3
9001e72a:	bfd4      	ite	le
9001e72c:	2000      	movle	r0, #0
9001e72e:	2001      	movgt	r0, #1
9001e730:	b004      	add	sp, #16
9001e732:	4770      	bx	lr
9001e734:	2000      	movs	r0, #0
9001e736:	e7fb      	b.n	9001e730 <EwIsPointInRect+0x26>

9001e738 <EwIsRectEmpty>:
9001e738:	b084      	sub	sp, #16
9001e73a:	4282      	cmp	r2, r0
9001e73c:	f10d 0c10 	add.w	ip, sp, #16
9001e740:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e744:	dd06      	ble.n	9001e754 <EwIsRectEmpty+0x1c>
9001e746:	9803      	ldr	r0, [sp, #12]
9001e748:	4288      	cmp	r0, r1
9001e74a:	bfcc      	ite	gt
9001e74c:	2000      	movgt	r0, #0
9001e74e:	2001      	movle	r0, #1
9001e750:	b004      	add	sp, #16
9001e752:	4770      	bx	lr
9001e754:	2001      	movs	r0, #1
9001e756:	e7fb      	b.n	9001e750 <EwIsRectEmpty+0x18>

9001e758 <EwInflateRect>:
9001e758:	b084      	sub	sp, #16
9001e75a:	b570      	push	{r4, r5, r6, lr}
9001e75c:	ad05      	add	r5, sp, #20
9001e75e:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e762:	e9dd 6309 	ldrd	r6, r3, [sp, #36]	; 0x24
9001e766:	9d08      	ldr	r5, [sp, #32]
9001e768:	1ad1      	subs	r1, r2, r3
9001e76a:	9a07      	ldr	r2, [sp, #28]
9001e76c:	442b      	add	r3, r5
9001e76e:	9d05      	ldr	r5, [sp, #20]
9001e770:	4432      	add	r2, r6
9001e772:	1bad      	subs	r5, r5, r6
9001e774:	e9c0 5100 	strd	r5, r1, [r0]
9001e778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001e77c:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e780:	b004      	add	sp, #16
9001e782:	4770      	bx	lr

9001e784 <EwIntersectRect>:
9001e784:	b084      	sub	sp, #16
9001e786:	b5f0      	push	{r4, r5, r6, r7, lr}
9001e788:	ac06      	add	r4, sp, #24
9001e78a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e78c:	e884 000e 	stmia.w	r4, {r1, r2, r3}
9001e790:	460c      	mov	r4, r1
9001e792:	4611      	mov	r1, r2
9001e794:	461a      	mov	r2, r3
9001e796:	4294      	cmp	r4, r2
9001e798:	e9dd 3c09 	ldrd	r3, ip, [sp, #36]	; 0x24
9001e79c:	bfa4      	itt	ge
9001e79e:	2200      	movge	r2, #0
9001e7a0:	4614      	movge	r4, r2
9001e7a2:	4299      	cmp	r1, r3
9001e7a4:	e9dd 760b 	ldrd	r7, r6, [sp, #44]	; 0x2c
9001e7a8:	bfa4      	itt	ge
9001e7aa:	2300      	movge	r3, #0
9001e7ac:	4619      	movge	r1, r3
9001e7ae:	45b4      	cmp	ip, r6
9001e7b0:	bfa4      	itt	ge
9001e7b2:	2600      	movge	r6, #0
9001e7b4:	46b4      	movge	ip, r6
9001e7b6:	42af      	cmp	r7, r5
9001e7b8:	bfa4      	itt	ge
9001e7ba:	2500      	movge	r5, #0
9001e7bc:	462f      	movge	r7, r5
9001e7be:	4564      	cmp	r4, ip
9001e7c0:	bfb8      	it	lt
9001e7c2:	4664      	movlt	r4, ip
9001e7c4:	42b2      	cmp	r2, r6
9001e7c6:	bfa8      	it	ge
9001e7c8:	4632      	movge	r2, r6
9001e7ca:	42b9      	cmp	r1, r7
9001e7cc:	bfb8      	it	lt
9001e7ce:	4639      	movlt	r1, r7
9001e7d0:	42ab      	cmp	r3, r5
9001e7d2:	bfa8      	it	ge
9001e7d4:	462b      	movge	r3, r5
9001e7d6:	42a2      	cmp	r2, r4
9001e7d8:	bfdc      	itt	le
9001e7da:	2200      	movle	r2, #0
9001e7dc:	4614      	movle	r4, r2
9001e7de:	428b      	cmp	r3, r1
9001e7e0:	bfdc      	itt	le
9001e7e2:	2300      	movle	r3, #0
9001e7e4:	4619      	movle	r1, r3
9001e7e6:	e9c0 4100 	strd	r4, r1, [r0]
9001e7ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001e7ee:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e7f2:	b004      	add	sp, #16
9001e7f4:	4770      	bx	lr

9001e7f6 <EwUnionRect>:
9001e7f6:	b084      	sub	sp, #16
9001e7f8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001e7fa:	ac06      	add	r4, sp, #24
9001e7fc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e7fe:	e884 000e 	stmia.w	r4, {r1, r2, r3}
9001e802:	460c      	mov	r4, r1
9001e804:	4611      	mov	r1, r2
9001e806:	461a      	mov	r2, r3
9001e808:	4294      	cmp	r4, r2
9001e80a:	e9dd 3c09 	ldrd	r3, ip, [sp, #36]	; 0x24
9001e80e:	bfa4      	itt	ge
9001e810:	2200      	movge	r2, #0
9001e812:	4614      	movge	r4, r2
9001e814:	4299      	cmp	r1, r3
9001e816:	e9dd 760b 	ldrd	r7, r6, [sp, #44]	; 0x2c
9001e81a:	bfa4      	itt	ge
9001e81c:	2300      	movge	r3, #0
9001e81e:	4619      	movge	r1, r3
9001e820:	45b4      	cmp	ip, r6
9001e822:	bfa4      	itt	ge
9001e824:	2600      	movge	r6, #0
9001e826:	46b4      	movge	ip, r6
9001e828:	42af      	cmp	r7, r5
9001e82a:	bfa4      	itt	ge
9001e82c:	2500      	movge	r5, #0
9001e82e:	462f      	movge	r7, r5
9001e830:	4294      	cmp	r4, r2
9001e832:	d001      	beq.n	9001e838 <EwUnionRect+0x42>
9001e834:	4299      	cmp	r1, r3
9001e836:	d107      	bne.n	9001e848 <EwUnionRect+0x52>
9001e838:	e9c0 c700 	strd	ip, r7, [r0]
9001e83c:	e9c0 6502 	strd	r6, r5, [r0, #8]
9001e840:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001e844:	b004      	add	sp, #16
9001e846:	4770      	bx	lr
9001e848:	45b4      	cmp	ip, r6
9001e84a:	d001      	beq.n	9001e850 <EwUnionRect+0x5a>
9001e84c:	42af      	cmp	r7, r5
9001e84e:	d104      	bne.n	9001e85a <EwUnionRect+0x64>
9001e850:	e9c0 4100 	strd	r4, r1, [r0]
9001e854:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e858:	e7f2      	b.n	9001e840 <EwUnionRect+0x4a>
9001e85a:	4564      	cmp	r4, ip
9001e85c:	bfa8      	it	ge
9001e85e:	4664      	movge	r4, ip
9001e860:	42b2      	cmp	r2, r6
9001e862:	bfb8      	it	lt
9001e864:	4632      	movlt	r2, r6
9001e866:	42b9      	cmp	r1, r7
9001e868:	bfa8      	it	ge
9001e86a:	4639      	movge	r1, r7
9001e86c:	42ab      	cmp	r3, r5
9001e86e:	bfb8      	it	lt
9001e870:	462b      	movlt	r3, r5
9001e872:	42a2      	cmp	r2, r4
9001e874:	bfdc      	itt	le
9001e876:	2200      	movle	r2, #0
9001e878:	4614      	movle	r4, r2
9001e87a:	428b      	cmp	r3, r1
9001e87c:	bfdc      	itt	le
9001e87e:	2300      	movle	r3, #0
9001e880:	4619      	movle	r1, r3
9001e882:	e7e5      	b.n	9001e850 <EwUnionRect+0x5a>

9001e884 <EwIntersectRect2>:
9001e884:	b084      	sub	sp, #16
9001e886:	b5f0      	push	{r4, r5, r6, r7, lr}
9001e888:	ac06      	add	r4, sp, #24
9001e88a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001e88c:	e884 000e 	stmia.w	r4, {r1, r2, r3}
9001e890:	460c      	mov	r4, r1
9001e892:	4611      	mov	r1, r2
9001e894:	461a      	mov	r2, r3
9001e896:	4294      	cmp	r4, r2
9001e898:	e9dd 3c09 	ldrd	r3, ip, [sp, #36]	; 0x24
9001e89c:	bfa4      	itt	ge
9001e89e:	2200      	movge	r2, #0
9001e8a0:	4614      	movge	r4, r2
9001e8a2:	4299      	cmp	r1, r3
9001e8a4:	e9dd 760b 	ldrd	r7, r6, [sp, #44]	; 0x2c
9001e8a8:	bfa4      	itt	ge
9001e8aa:	2300      	movge	r3, #0
9001e8ac:	4619      	movge	r1, r3
9001e8ae:	45b4      	cmp	ip, r6
9001e8b0:	bfa4      	itt	ge
9001e8b2:	2600      	movge	r6, #0
9001e8b4:	46b4      	movge	ip, r6
9001e8b6:	42af      	cmp	r7, r5
9001e8b8:	bfa4      	itt	ge
9001e8ba:	2500      	movge	r5, #0
9001e8bc:	462f      	movge	r7, r5
9001e8be:	4294      	cmp	r4, r2
9001e8c0:	d001      	beq.n	9001e8c6 <EwIntersectRect2+0x42>
9001e8c2:	4299      	cmp	r1, r3
9001e8c4:	d107      	bne.n	9001e8d6 <EwIntersectRect2+0x52>
9001e8c6:	e9c0 c700 	strd	ip, r7, [r0]
9001e8ca:	e9c0 6502 	strd	r6, r5, [r0, #8]
9001e8ce:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001e8d2:	b004      	add	sp, #16
9001e8d4:	4770      	bx	lr
9001e8d6:	45b4      	cmp	ip, r6
9001e8d8:	d001      	beq.n	9001e8de <EwIntersectRect2+0x5a>
9001e8da:	42af      	cmp	r7, r5
9001e8dc:	d104      	bne.n	9001e8e8 <EwIntersectRect2+0x64>
9001e8de:	e9c0 4100 	strd	r4, r1, [r0]
9001e8e2:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e8e6:	e7f2      	b.n	9001e8ce <EwIntersectRect2+0x4a>
9001e8e8:	4564      	cmp	r4, ip
9001e8ea:	bfb8      	it	lt
9001e8ec:	4664      	movlt	r4, ip
9001e8ee:	42b2      	cmp	r2, r6
9001e8f0:	bfa8      	it	ge
9001e8f2:	4632      	movge	r2, r6
9001e8f4:	42b9      	cmp	r1, r7
9001e8f6:	bfb8      	it	lt
9001e8f8:	4639      	movlt	r1, r7
9001e8fa:	42ab      	cmp	r3, r5
9001e8fc:	bfa8      	it	ge
9001e8fe:	462b      	movge	r3, r5
9001e900:	42a2      	cmp	r2, r4
9001e902:	bfdc      	itt	le
9001e904:	2200      	movle	r2, #0
9001e906:	4614      	movle	r4, r2
9001e908:	428b      	cmp	r3, r1
9001e90a:	bfdc      	itt	le
9001e90c:	2300      	movle	r3, #0
9001e90e:	4619      	movle	r1, r3
9001e910:	e7e5      	b.n	9001e8de <EwIntersectRect2+0x5a>

9001e912 <EwMoveRectNeg>:
9001e912:	b084      	sub	sp, #16
9001e914:	b570      	push	{r4, r5, r6, lr}
9001e916:	ad05      	add	r5, sp, #20
9001e918:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e91c:	e9dd 6509 	ldrd	r6, r5, [sp, #36]	; 0x24
9001e920:	9906      	ldr	r1, [sp, #24]
9001e922:	1b9a      	subs	r2, r3, r6
9001e924:	9b08      	ldr	r3, [sp, #32]
9001e926:	1b49      	subs	r1, r1, r5
9001e928:	1b5b      	subs	r3, r3, r5
9001e92a:	9d05      	ldr	r5, [sp, #20]
9001e92c:	1bad      	subs	r5, r5, r6
9001e92e:	e9c0 5100 	strd	r5, r1, [r0]
9001e932:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001e936:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e93a:	b004      	add	sp, #16
9001e93c:	4770      	bx	lr

9001e93e <EwMoveRectPos>:
9001e93e:	b084      	sub	sp, #16
9001e940:	b570      	push	{r4, r5, r6, lr}
9001e942:	ad05      	add	r5, sp, #20
9001e944:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e948:	e9dd 6309 	ldrd	r6, r3, [sp, #36]	; 0x24
9001e94c:	9d08      	ldr	r5, [sp, #32]
9001e94e:	9906      	ldr	r1, [sp, #24]
9001e950:	9a07      	ldr	r2, [sp, #28]
9001e952:	4419      	add	r1, r3
9001e954:	442b      	add	r3, r5
9001e956:	9d05      	ldr	r5, [sp, #20]
9001e958:	4432      	add	r2, r6
9001e95a:	4435      	add	r5, r6
9001e95c:	e9c0 5100 	strd	r5, r1, [r0]
9001e960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001e964:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e968:	b004      	add	sp, #16
9001e96a:	4770      	bx	lr

9001e96c <EwGetRectH>:
9001e96c:	b084      	sub	sp, #16
9001e96e:	f10d 0c10 	add.w	ip, sp, #16
9001e972:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e976:	1a58      	subs	r0, r3, r1
9001e978:	b004      	add	sp, #16
9001e97a:	4770      	bx	lr

9001e97c <EwGetRectW>:
9001e97c:	b084      	sub	sp, #16
9001e97e:	f10d 0c10 	add.w	ip, sp, #16
9001e982:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e986:	9b00      	ldr	r3, [sp, #0]
9001e988:	1ad0      	subs	r0, r2, r3
9001e98a:	b004      	add	sp, #16
9001e98c:	4770      	bx	lr

9001e98e <EwGetRectArea>:
9001e98e:	b084      	sub	sp, #16
9001e990:	f10d 0c10 	add.w	ip, sp, #16
9001e994:	e90c 000f 	stmdb	ip, {r0, r1, r2, r3}
9001e998:	9b00      	ldr	r3, [sp, #0]
9001e99a:	1ad0      	subs	r0, r2, r3
9001e99c:	9b03      	ldr	r3, [sp, #12]
9001e99e:	1a5b      	subs	r3, r3, r1
9001e9a0:	4358      	muls	r0, r3
9001e9a2:	b004      	add	sp, #16
9001e9a4:	4770      	bx	lr

9001e9a6 <EwGetRectSize>:
9001e9a6:	b084      	sub	sp, #16
9001e9a8:	b530      	push	{r4, r5, lr}
9001e9aa:	ad04      	add	r5, sp, #16
9001e9ac:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e9b0:	9b07      	ldr	r3, [sp, #28]
9001e9b2:	1a9b      	subs	r3, r3, r2
9001e9b4:	9a06      	ldr	r2, [sp, #24]
9001e9b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001e9ba:	1a52      	subs	r2, r2, r1
9001e9bc:	b004      	add	sp, #16
9001e9be:	e9c0 2300 	strd	r2, r3, [r0]
9001e9c2:	4770      	bx	lr

9001e9c4 <EwGetRectORect>:
9001e9c4:	b084      	sub	sp, #16
9001e9c6:	b530      	push	{r4, r5, lr}
9001e9c8:	ad04      	add	r5, sp, #16
9001e9ca:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e9ce:	1a5a      	subs	r2, r3, r1
9001e9d0:	9905      	ldr	r1, [sp, #20]
9001e9d2:	9b07      	ldr	r3, [sp, #28]
9001e9d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001e9d8:	1a5b      	subs	r3, r3, r1
9001e9da:	2100      	movs	r1, #0
9001e9dc:	b004      	add	sp, #16
9001e9de:	e9c0 1100 	strd	r1, r1, [r0]
9001e9e2:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001e9e6:	4770      	bx	lr

9001e9e8 <EwGetRectCenter>:
9001e9e8:	b084      	sub	sp, #16
9001e9ea:	b530      	push	{r4, r5, lr}
9001e9ec:	ad04      	add	r5, sp, #16
9001e9ee:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001e9f2:	460d      	mov	r5, r1
9001e9f4:	4611      	mov	r1, r2
9001e9f6:	9a07      	ldr	r2, [sp, #28]
9001e9f8:	1b5b      	subs	r3, r3, r5
9001e9fa:	1a52      	subs	r2, r2, r1
9001e9fc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
9001ea00:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
9001ea04:	eb05 0363 	add.w	r3, r5, r3, asr #1
9001ea08:	eb01 0262 	add.w	r2, r1, r2, asr #1
9001ea0c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001ea10:	e9c0 3200 	strd	r3, r2, [r0]
9001ea14:	b004      	add	sp, #16
9001ea16:	4770      	bx	lr

9001ea18 <EwSetRectSize>:
9001ea18:	b084      	sub	sp, #16
9001ea1a:	b510      	push	{r4, lr}
9001ea1c:	4604      	mov	r4, r0
9001ea1e:	a803      	add	r0, sp, #12
9001ea20:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001ea24:	4613      	mov	r3, r2
9001ea26:	9a08      	ldr	r2, [sp, #32]
9001ea28:	4413      	add	r3, r2
9001ea2a:	460a      	mov	r2, r1
9001ea2c:	9907      	ldr	r1, [sp, #28]
9001ea2e:	440a      	add	r2, r1
9001ea30:	e9cd 2305 	strd	r2, r3, [sp, #20]
9001ea34:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001ea36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001ea3a:	4620      	mov	r0, r4
9001ea3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ea40:	b004      	add	sp, #16
9001ea42:	4770      	bx	lr

9001ea44 <EwSetRectOrigin>:
9001ea44:	b084      	sub	sp, #16
9001ea46:	b570      	push	{r4, r5, r6, lr}
9001ea48:	ad05      	add	r5, sp, #20
9001ea4a:	9e08      	ldr	r6, [sp, #32]
9001ea4c:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001ea50:	e9dd 5109 	ldrd	r5, r1, [sp, #36]	; 0x24
9001ea54:	9b05      	ldr	r3, [sp, #20]
9001ea56:	9a07      	ldr	r2, [sp, #28]
9001ea58:	1aeb      	subs	r3, r5, r3
9001ea5a:	441a      	add	r2, r3
9001ea5c:	9b06      	ldr	r3, [sp, #24]
9001ea5e:	1acb      	subs	r3, r1, r3
9001ea60:	e9c0 5100 	strd	r5, r1, [r0]
9001ea64:	4433      	add	r3, r6
9001ea66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001ea6a:	e9c0 2302 	strd	r2, r3, [r0, #8]
9001ea6e:	b004      	add	sp, #16
9001ea70:	4770      	bx	lr

9001ea72 <EwSetRectX1>:
9001ea72:	b084      	sub	sp, #16
9001ea74:	b510      	push	{r4, lr}
9001ea76:	4604      	mov	r4, r0
9001ea78:	a803      	add	r0, sp, #12
9001ea7a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001ea7e:	9b07      	ldr	r3, [sp, #28]
9001ea80:	9303      	str	r3, [sp, #12]
9001ea82:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001ea84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001ea88:	4620      	mov	r0, r4
9001ea8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001ea8e:	b004      	add	sp, #16
9001ea90:	4770      	bx	lr

9001ea92 <EwSetRectY1>:
9001ea92:	b084      	sub	sp, #16
9001ea94:	b510      	push	{r4, lr}
9001ea96:	4604      	mov	r4, r0
9001ea98:	a803      	add	r0, sp, #12
9001ea9a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001ea9e:	9b07      	ldr	r3, [sp, #28]
9001eaa0:	9304      	str	r3, [sp, #16]
9001eaa2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eaa4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eaa8:	4620      	mov	r0, r4
9001eaaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eaae:	b004      	add	sp, #16
9001eab0:	4770      	bx	lr

9001eab2 <EwSetRectX2>:
9001eab2:	b084      	sub	sp, #16
9001eab4:	b510      	push	{r4, lr}
9001eab6:	4604      	mov	r4, r0
9001eab8:	a803      	add	r0, sp, #12
9001eaba:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eabe:	9b07      	ldr	r3, [sp, #28]
9001eac0:	9305      	str	r3, [sp, #20]
9001eac2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eac4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eac8:	4620      	mov	r0, r4
9001eaca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eace:	b004      	add	sp, #16
9001ead0:	4770      	bx	lr

9001ead2 <EwSetRectY2>:
9001ead2:	b084      	sub	sp, #16
9001ead4:	b510      	push	{r4, lr}
9001ead6:	4604      	mov	r4, r0
9001ead8:	a803      	add	r0, sp, #12
9001eada:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eade:	9b07      	ldr	r3, [sp, #28]
9001eae0:	9306      	str	r3, [sp, #24]
9001eae2:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eae4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eae8:	4620      	mov	r0, r4
9001eaea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eaee:	b004      	add	sp, #16
9001eaf0:	4770      	bx	lr

9001eaf2 <EwSetRectX>:
9001eaf2:	b084      	sub	sp, #16
9001eaf4:	b510      	push	{r4, lr}
9001eaf6:	4604      	mov	r4, r0
9001eaf8:	a803      	add	r0, sp, #12
9001eafa:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eafe:	9a07      	ldr	r2, [sp, #28]
9001eb00:	1a53      	subs	r3, r2, r1
9001eb02:	9905      	ldr	r1, [sp, #20]
9001eb04:	9203      	str	r2, [sp, #12]
9001eb06:	440b      	add	r3, r1
9001eb08:	9305      	str	r3, [sp, #20]
9001eb0a:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eb0c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eb10:	4620      	mov	r0, r4
9001eb12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eb16:	b004      	add	sp, #16
9001eb18:	4770      	bx	lr

9001eb1a <EwSetRectY>:
9001eb1a:	b084      	sub	sp, #16
9001eb1c:	b510      	push	{r4, lr}
9001eb1e:	4604      	mov	r4, r0
9001eb20:	a803      	add	r0, sp, #12
9001eb22:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eb26:	9a07      	ldr	r2, [sp, #28]
9001eb28:	9b04      	ldr	r3, [sp, #16]
9001eb2a:	9906      	ldr	r1, [sp, #24]
9001eb2c:	1ad3      	subs	r3, r2, r3
9001eb2e:	9204      	str	r2, [sp, #16]
9001eb30:	440b      	add	r3, r1
9001eb32:	9306      	str	r3, [sp, #24]
9001eb34:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eb36:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eb3a:	4620      	mov	r0, r4
9001eb3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eb40:	b004      	add	sp, #16
9001eb42:	4770      	bx	lr

9001eb44 <EwSetRectW>:
9001eb44:	b084      	sub	sp, #16
9001eb46:	b510      	push	{r4, lr}
9001eb48:	4604      	mov	r4, r0
9001eb4a:	a803      	add	r0, sp, #12
9001eb4c:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eb50:	9a07      	ldr	r2, [sp, #28]
9001eb52:	460b      	mov	r3, r1
9001eb54:	4413      	add	r3, r2
9001eb56:	9305      	str	r3, [sp, #20]
9001eb58:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eb5a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eb5e:	4620      	mov	r0, r4
9001eb60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eb64:	b004      	add	sp, #16
9001eb66:	4770      	bx	lr

9001eb68 <EwSetRectH>:
9001eb68:	b084      	sub	sp, #16
9001eb6a:	b510      	push	{r4, lr}
9001eb6c:	4604      	mov	r4, r0
9001eb6e:	a803      	add	r0, sp, #12
9001eb70:	e880 000e 	stmia.w	r0, {r1, r2, r3}
9001eb74:	9a07      	ldr	r2, [sp, #28]
9001eb76:	9b04      	ldr	r3, [sp, #16]
9001eb78:	4413      	add	r3, r2
9001eb7a:	9306      	str	r3, [sp, #24]
9001eb7c:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001eb7e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001eb82:	4620      	mov	r0, r4
9001eb84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001eb88:	b004      	add	sp, #16
9001eb8a:	4770      	bx	lr

9001eb8c <EwSetRectPoint1>:
9001eb8c:	b084      	sub	sp, #16
9001eb8e:	b530      	push	{r4, r5, lr}
9001eb90:	ac04      	add	r4, sp, #16
9001eb92:	4605      	mov	r5, r0
9001eb94:	e884 000e 	stmia.w	r4, {r1, r2, r3}
9001eb98:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
9001eb9c:	e884 0003 	stmia.w	r4, {r0, r1}
9001eba0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
9001eba4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9001eba8:	4628      	mov	r0, r5
9001ebaa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001ebae:	b004      	add	sp, #16
9001ebb0:	4770      	bx	lr

9001ebb2 <EwSetRectPoint2>:
9001ebb2:	b084      	sub	sp, #16
9001ebb4:	b530      	push	{r4, r5, lr}
9001ebb6:	ad04      	add	r5, sp, #16
9001ebb8:	4604      	mov	r4, r0
9001ebba:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001ebbe:	ab06      	add	r3, sp, #24
9001ebc0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
9001ebc4:	e883 0003 	stmia.w	r3, {r0, r1}
9001ebc8:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9001ebcc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001ebd0:	4620      	mov	r0, r4
9001ebd2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001ebd6:	b004      	add	sp, #16
9001ebd8:	4770      	bx	lr

9001ebda <EwGetVariantOfRect>:
9001ebda:	b510      	push	{r4, lr}
9001ebdc:	4604      	mov	r4, r0
9001ebde:	4608      	mov	r0, r1
9001ebe0:	2114      	movs	r1, #20
9001ebe2:	f000 f89c 	bl	9001ed1e <EwGetVariantOf>
9001ebe6:	3004      	adds	r0, #4
9001ebe8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
9001ebea:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001ebee:	4620      	mov	r0, r4
9001ebf0:	bd10      	pop	{r4, pc}
9001ebf2:	0000      	movs	r0, r0
9001ebf4:	6803      	ldr	r3, [r0, #0]
9001ebf6:	b10b      	cbz	r3, 9001ebfc <EwGetVariantOfRect+0x22>
9001ebf8:	6842      	ldr	r2, [r0, #4]
9001ebfa:	605a      	str	r2, [r3, #4]
9001ebfc:	6842      	ldr	r2, [r0, #4]
9001ebfe:	b122      	cbz	r2, 9001ec0a <EwGetVariantOfRect+0x30>
9001ec00:	6013      	str	r3, [r2, #0]
9001ec02:	2300      	movs	r3, #0
9001ec04:	e9c0 3300 	strd	r3, r3, [r0]
9001ec08:	4770      	bx	lr
9001ec0a:	4a01      	ldr	r2, [pc, #4]	; (9001ec10 <EwGetVariantOfRect+0x36>)
9001ec0c:	e7f8      	b.n	9001ec00 <EwGetVariantOfRect+0x26>
9001ec0e:	bf00      	nop
9001ec10:	200002f0 	.word	0x200002f0

9001ec14 <EwRegisterResource>:
9001ec14:	b538      	push	{r3, r4, r5, lr}
9001ec16:	460c      	mov	r4, r1
9001ec18:	4605      	mov	r5, r0
9001ec1a:	2800      	cmp	r0, #0
9001ec1c:	d030      	beq.n	9001ec80 <EwRegisterResource+0x6c>
9001ec1e:	2900      	cmp	r1, #0
9001ec20:	d02e      	beq.n	9001ec80 <EwRegisterResource+0x6c>
9001ec22:	2010      	movs	r0, #16
9001ec24:	f008 f846 	bl	90026cb4 <EwAlloc>
9001ec28:	b958      	cbnz	r0, 9001ec42 <EwRegisterResource+0x2e>
9001ec2a:	2008      	movs	r0, #8
9001ec2c:	f7ff fbc2 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001ec30:	2800      	cmp	r0, #0
9001ec32:	d1f6      	bne.n	9001ec22 <EwRegisterResource+0xe>
9001ec34:	2008      	movs	r0, #8
9001ec36:	f7fe fc0b 	bl	9001d450 <EwError>
9001ec3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9001ec3e:	f008 b83d 	b.w	90026cbc <EwPanic>
9001ec42:	4a10      	ldr	r2, [pc, #64]	; (9001ec84 <EwRegisterResource+0x70>)
9001ec44:	2100      	movs	r1, #0
9001ec46:	6813      	ldr	r3, [r2, #0]
9001ec48:	6041      	str	r1, [r0, #4]
9001ec4a:	6003      	str	r3, [r0, #0]
9001ec4c:	e9c0 4502 	strd	r4, r5, [r0, #8]
9001ec50:	b103      	cbz	r3, 9001ec54 <EwRegisterResource+0x40>
9001ec52:	6058      	str	r0, [r3, #4]
9001ec54:	490c      	ldr	r1, [pc, #48]	; (9001ec88 <EwRegisterResource+0x74>)
9001ec56:	6010      	str	r0, [r2, #0]
9001ec58:	680b      	ldr	r3, [r1, #0]
9001ec5a:	f103 0210 	add.w	r2, r3, #16
9001ec5e:	4b0b      	ldr	r3, [pc, #44]	; (9001ec8c <EwRegisterResource+0x78>)
9001ec60:	600a      	str	r2, [r1, #0]
9001ec62:	6819      	ldr	r1, [r3, #0]
9001ec64:	428a      	cmp	r2, r1
9001ec66:	490a      	ldr	r1, [pc, #40]	; (9001ec90 <EwRegisterResource+0x7c>)
9001ec68:	bfc8      	it	gt
9001ec6a:	601a      	strgt	r2, [r3, #0]
9001ec6c:	4b09      	ldr	r3, [pc, #36]	; (9001ec94 <EwRegisterResource+0x80>)
9001ec6e:	6809      	ldr	r1, [r1, #0]
9001ec70:	681b      	ldr	r3, [r3, #0]
9001ec72:	440b      	add	r3, r1
9001ec74:	4413      	add	r3, r2
9001ec76:	4a08      	ldr	r2, [pc, #32]	; (9001ec98 <EwRegisterResource+0x84>)
9001ec78:	6811      	ldr	r1, [r2, #0]
9001ec7a:	428b      	cmp	r3, r1
9001ec7c:	dd00      	ble.n	9001ec80 <EwRegisterResource+0x6c>
9001ec7e:	6013      	str	r3, [r2, #0]
9001ec80:	bd38      	pop	{r3, r4, r5, pc}
9001ec82:	bf00      	nop
9001ec84:	200002f0 	.word	0x200002f0
9001ec88:	200002bc 	.word	0x200002bc
9001ec8c:	200002d8 	.word	0x200002d8
9001ec90:	200002b8 	.word	0x200002b8
9001ec94:	200002ac 	.word	0x200002ac
9001ec98:	200002c0 	.word	0x200002c0

9001ec9c <EwDeregisterResource>:
9001ec9c:	b508      	push	{r3, lr}
9001ec9e:	4603      	mov	r3, r0
9001eca0:	b168      	cbz	r0, 9001ecbe <EwDeregisterResource+0x22>
9001eca2:	4a08      	ldr	r2, [pc, #32]	; (9001ecc4 <EwDeregisterResource+0x28>)
9001eca4:	6810      	ldr	r0, [r2, #0]
9001eca6:	b150      	cbz	r0, 9001ecbe <EwDeregisterResource+0x22>
9001eca8:	68c2      	ldr	r2, [r0, #12]
9001ecaa:	429a      	cmp	r2, r3
9001ecac:	d108      	bne.n	9001ecc0 <EwDeregisterResource+0x24>
9001ecae:	f7ff ffa1 	bl	9001ebf4 <EwGetVariantOfRect+0x1a>
9001ecb2:	f008 f801 	bl	90026cb8 <EwFree>
9001ecb6:	4a04      	ldr	r2, [pc, #16]	; (9001ecc8 <EwDeregisterResource+0x2c>)
9001ecb8:	6813      	ldr	r3, [r2, #0]
9001ecba:	3b10      	subs	r3, #16
9001ecbc:	6013      	str	r3, [r2, #0]
9001ecbe:	bd08      	pop	{r3, pc}
9001ecc0:	6800      	ldr	r0, [r0, #0]
9001ecc2:	e7f0      	b.n	9001eca6 <EwDeregisterResource+0xa>
9001ecc4:	200002f0 	.word	0x200002f0
9001ecc8:	200002bc 	.word	0x200002bc

9001eccc <EwGetLanguage>:
9001eccc:	4b01      	ldr	r3, [pc, #4]	; (9001ecd4 <EwGetLanguage+0x8>)
9001ecce:	6858      	ldr	r0, [r3, #4]
9001ecd0:	4770      	bx	lr
9001ecd2:	bf00      	nop
9001ecd4:	200002f0 	.word	0x200002f0

9001ecd8 <EwSetLanguage>:
9001ecd8:	4b05      	ldr	r3, [pc, #20]	; (9001ecf0 <EwSetLanguage+0x18>)
9001ecda:	685a      	ldr	r2, [r3, #4]
9001ecdc:	4282      	cmp	r2, r0
9001ecde:	b510      	push	{r4, lr}
9001ece0:	4604      	mov	r4, r0
9001ece2:	d002      	beq.n	9001ecea <EwSetLanguage+0x12>
9001ece4:	6058      	str	r0, [r3, #4]
9001ece6:	f7ff fb69 	bl	9001e3bc <EwReconstructObjects>
9001ecea:	4620      	mov	r0, r4
9001ecec:	bd10      	pop	{r4, pc}
9001ecee:	bf00      	nop
9001ecf0:	200002f0 	.word	0x200002f0

9001ecf4 <EwGetStyles>:
9001ecf4:	4b01      	ldr	r3, [pc, #4]	; (9001ecfc <EwGetStyles+0x8>)
9001ecf6:	6898      	ldr	r0, [r3, #8]
9001ecf8:	4770      	bx	lr
9001ecfa:	bf00      	nop
9001ecfc:	200002f0 	.word	0x200002f0

9001ed00 <EwSetStyles>:
9001ed00:	4b01      	ldr	r3, [pc, #4]	; (9001ed08 <EwSetStyles+0x8>)
9001ed02:	6098      	str	r0, [r3, #8]
9001ed04:	4770      	bx	lr
9001ed06:	bf00      	nop
9001ed08:	200002f0 	.word	0x200002f0

9001ed0c <EwStylesContains>:
9001ed0c:	b129      	cbz	r1, 9001ed1a <EwStylesContains+0xe>
9001ed0e:	ea31 0300 	bics.w	r3, r1, r0
9001ed12:	bf0c      	ite	eq
9001ed14:	2001      	moveq	r0, #1
9001ed16:	2000      	movne	r0, #0
9001ed18:	4770      	bx	lr
9001ed1a:	4608      	mov	r0, r1
9001ed1c:	4770      	bx	lr

9001ed1e <EwGetVariantOf>:
9001ed1e:	4b13      	ldr	r3, [pc, #76]	; (9001ed6c <EwGetVariantOf+0x4e>)
9001ed20:	2200      	movs	r2, #0
9001ed22:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ed24:	e9d3 7c01 	ldrd	r7, ip, [r3, #4]
9001ed28:	4614      	mov	r4, r2
9001ed2a:	b920      	cbnz	r0, 9001ed36 <EwGetVariantOf+0x18>
9001ed2c:	2c00      	cmp	r4, #0
9001ed2e:	bf14      	ite	ne
9001ed30:	4620      	movne	r0, r4
9001ed32:	4610      	moveq	r0, r2
9001ed34:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ed36:	e9d0 3500 	ldrd	r3, r5, [r0]
9001ed3a:	6880      	ldr	r0, [r0, #8]
9001ed3c:	2d00      	cmp	r5, #0
9001ed3e:	dc05      	bgt.n	9001ed4c <EwGetVariantOf+0x2e>
9001ed40:	2800      	cmp	r0, #0
9001ed42:	d0f3      	beq.n	9001ed2c <EwGetVariantOf+0xe>
9001ed44:	6803      	ldr	r3, [r0, #0]
9001ed46:	b95b      	cbnz	r3, 9001ed60 <EwGetVariantOf+0x42>
9001ed48:	6840      	ldr	r0, [r0, #4]
9001ed4a:	e7ee      	b.n	9001ed2a <EwGetVariantOf+0xc>
9001ed4c:	681e      	ldr	r6, [r3, #0]
9001ed4e:	3d01      	subs	r5, #1
9001ed50:	42be      	cmp	r6, r7
9001ed52:	bf08      	it	eq
9001ed54:	461c      	moveq	r4, r3
9001ed56:	2e00      	cmp	r6, #0
9001ed58:	bf08      	it	eq
9001ed5a:	461a      	moveq	r2, r3
9001ed5c:	440b      	add	r3, r1
9001ed5e:	e7ed      	b.n	9001ed3c <EwGetVariantOf+0x1e>
9001ed60:	ea13 0f0c 	tst.w	r3, ip
9001ed64:	d1f0      	bne.n	9001ed48 <EwGetVariantOf+0x2a>
9001ed66:	3008      	adds	r0, #8
9001ed68:	e7ec      	b.n	9001ed44 <EwGetVariantOf+0x26>
9001ed6a:	bf00      	nop
9001ed6c:	200002f0 	.word	0x200002f0

9001ed70 <EwLoadResource>:
9001ed70:	b570      	push	{r4, r5, r6, lr}
9001ed72:	4e10      	ldr	r6, [pc, #64]	; (9001edb4 <EwLoadResource+0x44>)
9001ed74:	460d      	mov	r5, r1
9001ed76:	4603      	mov	r3, r0
9001ed78:	6834      	ldr	r4, [r6, #0]
9001ed7a:	b190      	cbz	r0, 9001eda2 <EwLoadResource+0x32>
9001ed7c:	2108      	movs	r1, #8
9001ed7e:	f7ff ffce 	bl	9001ed1e <EwGetVariantOf>
9001ed82:	6841      	ldr	r1, [r0, #4]
9001ed84:	b18c      	cbz	r4, 9001edaa <EwLoadResource+0x3a>
9001ed86:	68a3      	ldr	r3, [r4, #8]
9001ed88:	428b      	cmp	r3, r1
9001ed8a:	d10c      	bne.n	9001eda6 <EwLoadResource+0x36>
9001ed8c:	4620      	mov	r0, r4
9001ed8e:	f7ff ff31 	bl	9001ebf4 <EwGetVariantOfRect+0x1a>
9001ed92:	6833      	ldr	r3, [r6, #0]
9001ed94:	2200      	movs	r2, #0
9001ed96:	6023      	str	r3, [r4, #0]
9001ed98:	6062      	str	r2, [r4, #4]
9001ed9a:	b103      	cbz	r3, 9001ed9e <EwLoadResource+0x2e>
9001ed9c:	605c      	str	r4, [r3, #4]
9001ed9e:	68e3      	ldr	r3, [r4, #12]
9001eda0:	6034      	str	r4, [r6, #0]
9001eda2:	4618      	mov	r0, r3
9001eda4:	bd70      	pop	{r4, r5, r6, pc}
9001eda6:	6824      	ldr	r4, [r4, #0]
9001eda8:	e7ec      	b.n	9001ed84 <EwLoadResource+0x14>
9001edaa:	4628      	mov	r0, r5
9001edac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001edb0:	f7ff b826 	b.w	9001de00 <EwNewObjectIndirect>
9001edb4:	200002f0 	.word	0x200002f0

9001edb8 <EwGetVariantOfLangId>:
9001edb8:	2108      	movs	r1, #8
9001edba:	b508      	push	{r3, lr}
9001edbc:	f7ff ffaf 	bl	9001ed1e <EwGetVariantOf>
9001edc0:	6840      	ldr	r0, [r0, #4]
9001edc2:	bd08      	pop	{r3, pc}

9001edc4 <EwGetVariantOfStylesSet>:
9001edc4:	2108      	movs	r1, #8
9001edc6:	b508      	push	{r3, lr}
9001edc8:	f7ff ffa9 	bl	9001ed1e <EwGetVariantOf>
9001edcc:	6840      	ldr	r0, [r0, #4]
9001edce:	bd08      	pop	{r3, pc}

9001edd0 <EwDecompress>:
9001edd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001edd4:	4c8e      	ldr	r4, [pc, #568]	; (9001f010 <EwDecompress+0x240>)
9001edd6:	b08d      	sub	sp, #52	; 0x34
9001edd8:	4682      	mov	sl, r0
9001edda:	468b      	mov	fp, r1
9001eddc:	9309      	str	r3, [sp, #36]	; 0x24
9001edde:	68e3      	ldr	r3, [r4, #12]
9001ede0:	9205      	str	r2, [sp, #20]
9001ede2:	b13b      	cbz	r3, 9001edf4 <EwDecompress+0x24>
9001ede4:	6923      	ldr	r3, [r4, #16]
9001ede6:	4283      	cmp	r3, r0
9001ede8:	d81c      	bhi.n	9001ee24 <EwDecompress+0x54>
9001edea:	6963      	ldr	r3, [r4, #20]
9001edec:	4283      	cmp	r3, r0
9001edee:	bf34      	ite	cc
9001edf0:	2300      	movcc	r3, #0
9001edf2:	2301      	movcs	r3, #1
9001edf4:	9304      	str	r3, [sp, #16]
9001edf6:	69a3      	ldr	r3, [r4, #24]
9001edf8:	bb63      	cbnz	r3, 9001ee54 <EwDecompress+0x84>
9001edfa:	f643 40fa 	movw	r0, #15610	; 0x3cfa
9001edfe:	f007 ff59 	bl	90026cb4 <EwAlloc>
9001ee02:	61a0      	str	r0, [r4, #24]
9001ee04:	b980      	cbnz	r0, 9001ee28 <EwDecompress+0x58>
9001ee06:	2009      	movs	r0, #9
9001ee08:	f7ff fad4 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001ee0c:	2800      	cmp	r0, #0
9001ee0e:	d1f4      	bne.n	9001edfa <EwDecompress+0x2a>
9001ee10:	69a3      	ldr	r3, [r4, #24]
9001ee12:	b94b      	cbnz	r3, 9001ee28 <EwDecompress+0x58>
9001ee14:	2009      	movs	r0, #9
9001ee16:	f7fe fb1b 	bl	9001d450 <EwError>
9001ee1a:	b00d      	add	sp, #52	; 0x34
9001ee1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee20:	f007 bf4c 	b.w	90026cbc <EwPanic>
9001ee24:	2300      	movs	r3, #0
9001ee26:	e7e5      	b.n	9001edf4 <EwDecompress+0x24>
9001ee28:	4a7a      	ldr	r2, [pc, #488]	; (9001f014 <EwDecompress+0x244>)
9001ee2a:	6813      	ldr	r3, [r2, #0]
9001ee2c:	f503 5373 	add.w	r3, r3, #15552	; 0x3cc0
9001ee30:	333a      	adds	r3, #58	; 0x3a
9001ee32:	6013      	str	r3, [r2, #0]
9001ee34:	4a78      	ldr	r2, [pc, #480]	; (9001f018 <EwDecompress+0x248>)
9001ee36:	6811      	ldr	r1, [r2, #0]
9001ee38:	428b      	cmp	r3, r1
9001ee3a:	4978      	ldr	r1, [pc, #480]	; (9001f01c <EwDecompress+0x24c>)
9001ee3c:	bfc8      	it	gt
9001ee3e:	6013      	strgt	r3, [r2, #0]
9001ee40:	4a77      	ldr	r2, [pc, #476]	; (9001f020 <EwDecompress+0x250>)
9001ee42:	6809      	ldr	r1, [r1, #0]
9001ee44:	6812      	ldr	r2, [r2, #0]
9001ee46:	440a      	add	r2, r1
9001ee48:	4413      	add	r3, r2
9001ee4a:	4a76      	ldr	r2, [pc, #472]	; (9001f024 <EwDecompress+0x254>)
9001ee4c:	6811      	ldr	r1, [r2, #0]
9001ee4e:	428b      	cmp	r3, r1
9001ee50:	bfc8      	it	gt
9001ee52:	6013      	strgt	r3, [r2, #0]
9001ee54:	69a3      	ldr	r3, [r4, #24]
9001ee56:	f503 52ef 	add.w	r2, r3, #7648	; 0x1de0
9001ee5a:	61e3      	str	r3, [r4, #28]
9001ee5c:	f503 5333 	add.w	r3, r3, #11456	; 0x2cc0
9001ee60:	321c      	adds	r2, #28
9001ee62:	333a      	adds	r3, #58	; 0x3a
9001ee64:	6222      	str	r2, [r4, #32]
9001ee66:	6263      	str	r3, [r4, #36]	; 0x24
9001ee68:	9b04      	ldr	r3, [sp, #16]
9001ee6a:	b333      	cbz	r3, 9001eeba <EwDecompress+0xea>
9001ee6c:	68e3      	ldr	r3, [r4, #12]
9001ee6e:	4650      	mov	r0, sl
9001ee70:	4798      	blx	r3
9001ee72:	4602      	mov	r2, r0
9001ee74:	f10a 0a04 	add.w	sl, sl, #4
9001ee78:	f64f 7eff 	movw	lr, #65535	; 0xffff
9001ee7c:	f44f 7481 	mov.w	r4, #258	; 0x102
9001ee80:	f852 3b04 	ldr.w	r3, [r2], #4
9001ee84:	2717      	movs	r7, #23
9001ee86:	2609      	movs	r6, #9
9001ee88:	f8df 8184 	ldr.w	r8, [pc, #388]	; 9001f010 <EwDecompress+0x240>
9001ee8c:	f3c3 0508 	ubfx	r5, r3, #0, #9
9001ee90:	ea4f 2953 	mov.w	r9, r3, lsr #9
9001ee94:	9b05      	ldr	r3, [sp, #20]
9001ee96:	9201      	str	r2, [sp, #4]
9001ee98:	9306      	str	r3, [sp, #24]
9001ee9a:	f240 13ff 	movw	r3, #511	; 0x1ff
9001ee9e:	9a05      	ldr	r2, [sp, #20]
9001eea0:	9303      	str	r3, [sp, #12]
9001eea2:	2300      	movs	r3, #0
9001eea4:	9302      	str	r3, [sp, #8]
9001eea6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001eea8:	1a9b      	subs	r3, r3, r2
9001eeaa:	930b      	str	r3, [sp, #44]	; 0x2c
9001eeac:	f240 1301 	movw	r3, #257	; 0x101
9001eeb0:	429d      	cmp	r5, r3
9001eeb2:	d104      	bne.n	9001eebe <EwDecompress+0xee>
9001eeb4:	b00d      	add	sp, #52	; 0x34
9001eeb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eeba:	4650      	mov	r0, sl
9001eebc:	e7d9      	b.n	9001ee72 <EwDecompress+0xa2>
9001eebe:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
9001eec2:	f000 809b 	beq.w	9001effc <EwDecompress+0x22c>
9001eec6:	42ac      	cmp	r4, r5
9001eec8:	d07e      	beq.n	9001efc8 <EwDecompress+0x1f8>
9001eeca:	462b      	mov	r3, r5
9001eecc:	2200      	movs	r2, #0
9001eece:	f8d8 001c 	ldr.w	r0, [r8, #28]
9001eed2:	e9d8 c108 	ldrd	ip, r1, [r8, #32]
9001eed6:	9007      	str	r0, [sp, #28]
9001eed8:	f1c1 0001 	rsb	r0, r1, #1
9001eedc:	440a      	add	r2, r1
9001eede:	900a      	str	r0, [sp, #40]	; 0x28
9001eee0:	e009      	b.n	9001eef6 <EwDecompress+0x126>
9001eee2:	f5a3 7381 	sub.w	r3, r3, #258	; 0x102
9001eee6:	b29b      	uxth	r3, r3
9001eee8:	f81c 0003 	ldrb.w	r0, [ip, r3]
9001eeec:	f802 0b01 	strb.w	r0, [r2], #1
9001eef0:	9807      	ldr	r0, [sp, #28]
9001eef2:	f830 3013 	ldrh.w	r3, [r0, r3, lsl #1]
9001eef6:	980a      	ldr	r0, [sp, #40]	; 0x28
9001eef8:	f5b3 7f81 	cmp.w	r3, #258	; 0x102
9001eefc:	4410      	add	r0, r2
9001eefe:	9008      	str	r0, [sp, #32]
9001ef00:	d2ef      	bcs.n	9001eee2 <EwDecompress+0x112>
9001ef02:	b2db      	uxtb	r3, r3
9001ef04:	42ac      	cmp	r4, r5
9001ef06:	7013      	strb	r3, [r2, #0]
9001ef08:	bf08      	it	eq
9001ef0a:	700b      	strbeq	r3, [r1, #0]
9001ef0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001ef10:	459e      	cmp	lr, r3
9001ef12:	d01b      	beq.n	9001ef4c <EwDecompress+0x17c>
9001ef14:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
9001ef18:	9807      	ldr	r0, [sp, #28]
9001ef1a:	44a4      	add	ip, r4
9001ef1c:	f5a3 7381 	sub.w	r3, r3, #258	; 0x102
9001ef20:	f5ac 7c81 	sub.w	ip, ip, #258	; 0x102
9001ef24:	f820 e013 	strh.w	lr, [r0, r3, lsl #1]
9001ef28:	7813      	ldrb	r3, [r2, #0]
9001ef2a:	f88c 3000 	strb.w	r3, [ip]
9001ef2e:	1c63      	adds	r3, r4, #1
9001ef30:	4063      	eors	r3, r4
9001ef32:	429c      	cmp	r4, r3
9001ef34:	da08      	bge.n	9001ef48 <EwDecompress+0x178>
9001ef36:	2e0b      	cmp	r6, #11
9001ef38:	dc06      	bgt.n	9001ef48 <EwDecompress+0x178>
9001ef3a:	9b03      	ldr	r3, [sp, #12]
9001ef3c:	3601      	adds	r6, #1
9001ef3e:	005b      	lsls	r3, r3, #1
9001ef40:	f043 0301 	orr.w	r3, r3, #1
9001ef44:	b29b      	uxth	r3, r3
9001ef46:	9303      	str	r3, [sp, #12]
9001ef48:	3401      	adds	r4, #1
9001ef4a:	b2a4      	uxth	r4, r4
9001ef4c:	9b08      	ldr	r3, [sp, #32]
9001ef4e:	9a05      	ldr	r2, [sp, #20]
9001ef50:	18cb      	adds	r3, r1, r3
9001ef52:	b112      	cbz	r2, 9001ef5a <EwDecompress+0x18a>
9001ef54:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001ef56:	2a00      	cmp	r2, #0
9001ef58:	d14d      	bne.n	9001eff6 <EwDecompress+0x226>
9001ef5a:	f10b 32ff 	add.w	r2, fp, #4294967295
9001ef5e:	4299      	cmp	r1, r3
9001ef60:	d135      	bne.n	9001efce <EwDecompress+0x1fe>
9001ef62:	9b08      	ldr	r3, [sp, #32]
9001ef64:	449b      	add	fp, r3
9001ef66:	2f10      	cmp	r7, #16
9001ef68:	dc1b      	bgt.n	9001efa2 <EwDecompress+0x1d2>
9001ef6a:	9b04      	ldr	r3, [sp, #16]
9001ef6c:	b153      	cbz	r3, 9001ef84 <EwDecompress+0x1b4>
9001ef6e:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
9001ef72:	3b01      	subs	r3, #1
9001ef74:	ea1a 0f03 	tst.w	sl, r3
9001ef78:	d104      	bne.n	9001ef84 <EwDecompress+0x1b4>
9001ef7a:	f8d8 300c 	ldr.w	r3, [r8, #12]
9001ef7e:	4650      	mov	r0, sl
9001ef80:	4798      	blx	r3
9001ef82:	9001      	str	r0, [sp, #4]
9001ef84:	9801      	ldr	r0, [sp, #4]
9001ef86:	f10a 0a04 	add.w	sl, sl, #4
9001ef8a:	f850 3b04 	ldr.w	r3, [r0], #4
9001ef8e:	fa03 f207 	lsl.w	r2, r3, r7
9001ef92:	9001      	str	r0, [sp, #4]
9001ef94:	ea49 0902 	orr.w	r9, r9, r2
9001ef98:	f1c7 0220 	rsb	r2, r7, #32
9001ef9c:	3720      	adds	r7, #32
9001ef9e:	40d3      	lsrs	r3, r2
9001efa0:	9302      	str	r3, [sp, #8]
9001efa2:	9802      	ldr	r0, [sp, #8]
9001efa4:	f1c6 0220 	rsb	r2, r6, #32
9001efa8:	9b03      	ldr	r3, [sp, #12]
9001efaa:	fa29 f106 	lsr.w	r1, r9, r6
9001efae:	fa00 f202 	lsl.w	r2, r0, r2
9001efb2:	46ae      	mov	lr, r5
9001efb4:	ea03 0309 	and.w	r3, r3, r9
9001efb8:	1bbf      	subs	r7, r7, r6
9001efba:	ea42 0901 	orr.w	r9, r2, r1
9001efbe:	4602      	mov	r2, r0
9001efc0:	461d      	mov	r5, r3
9001efc2:	40f2      	lsrs	r2, r6
9001efc4:	9202      	str	r2, [sp, #8]
9001efc6:	e771      	b.n	9001eeac <EwDecompress+0xdc>
9001efc8:	4673      	mov	r3, lr
9001efca:	2201      	movs	r2, #1
9001efcc:	e77f      	b.n	9001eece <EwDecompress+0xfe>
9001efce:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
9001efd2:	f802 cf01 	strb.w	ip, [r2, #1]!
9001efd6:	e7c2      	b.n	9001ef5e <EwDecompress+0x18e>
9001efd8:	9806      	ldr	r0, [sp, #24]
9001efda:	465a      	mov	r2, fp
9001efdc:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
9001efe0:	3801      	subs	r0, #1
9001efe2:	f802 cb01 	strb.w	ip, [r2], #1
9001efe6:	9006      	str	r0, [sp, #24]
9001efe8:	bf02      	ittt	eq
9001efea:	980b      	ldreq	r0, [sp, #44]	; 0x2c
9001efec:	1812      	addeq	r2, r2, r0
9001efee:	9805      	ldreq	r0, [sp, #20]
9001eff0:	4693      	mov	fp, r2
9001eff2:	bf08      	it	eq
9001eff4:	9006      	streq	r0, [sp, #24]
9001eff6:	4299      	cmp	r1, r3
9001eff8:	d1ee      	bne.n	9001efd8 <EwDecompress+0x208>
9001effa:	e7b4      	b.n	9001ef66 <EwDecompress+0x196>
9001effc:	f240 13ff 	movw	r3, #511	; 0x1ff
9001f000:	f64f 75ff 	movw	r5, #65535	; 0xffff
9001f004:	f44f 7481 	mov.w	r4, #258	; 0x102
9001f008:	2609      	movs	r6, #9
9001f00a:	9303      	str	r3, [sp, #12]
9001f00c:	e7ab      	b.n	9001ef66 <EwDecompress+0x196>
9001f00e:	bf00      	nop
9001f010:	200002f0 	.word	0x200002f0
9001f014:	200002bc 	.word	0x200002bc
9001f018:	200002d8 	.word	0x200002d8
9001f01c:	200002b8 	.word	0x200002b8
9001f020:	200002ac 	.word	0x200002ac
9001f024:	200002c0 	.word	0x200002c0

9001f028 <EwAdaptByteOrder2>:
9001f028:	4770      	bx	lr

9001f02a <EwAdaptByteOrder4>:
9001f02a:	4770      	bx	lr

9001f02c <EwReleaseDecompressBuffers>:
9001f02c:	b510      	push	{r4, lr}
9001f02e:	4c07      	ldr	r4, [pc, #28]	; (9001f04c <EwReleaseDecompressBuffers+0x20>)
9001f030:	69a0      	ldr	r0, [r4, #24]
9001f032:	b148      	cbz	r0, 9001f048 <EwReleaseDecompressBuffers+0x1c>
9001f034:	f007 fe40 	bl	90026cb8 <EwFree>
9001f038:	2300      	movs	r3, #0
9001f03a:	4a05      	ldr	r2, [pc, #20]	; (9001f050 <EwReleaseDecompressBuffers+0x24>)
9001f03c:	61a3      	str	r3, [r4, #24]
9001f03e:	6813      	ldr	r3, [r2, #0]
9001f040:	f5a3 5373 	sub.w	r3, r3, #15552	; 0x3cc0
9001f044:	3b3a      	subs	r3, #58	; 0x3a
9001f046:	6013      	str	r3, [r2, #0]
9001f048:	bd10      	pop	{r4, pc}
9001f04a:	bf00      	nop
9001f04c:	200002f0 	.word	0x200002f0
9001f050:	200002bc 	.word	0x200002bc

9001f054 <EwRegisterFlashAreaReader>:
9001f054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001f058:	460f      	mov	r7, r1
9001f05a:	4616      	mov	r6, r2
9001f05c:	4698      	mov	r8, r3
9001f05e:	4605      	mov	r5, r0
9001f060:	4c0d      	ldr	r4, [pc, #52]	; (9001f098 <EwRegisterFlashAreaReader+0x44>)
9001f062:	b1a0      	cbz	r0, 9001f08e <EwRegisterFlashAreaReader+0x3a>
9001f064:	68e3      	ldr	r3, [r4, #12]
9001f066:	b15b      	cbz	r3, 9001f080 <EwRegisterFlashAreaReader+0x2c>
9001f068:	6923      	ldr	r3, [r4, #16]
9001f06a:	428b      	cmp	r3, r1
9001f06c:	d102      	bne.n	9001f074 <EwRegisterFlashAreaReader+0x20>
9001f06e:	6963      	ldr	r3, [r4, #20]
9001f070:	4293      	cmp	r3, r2
9001f072:	d005      	beq.n	9001f080 <EwRegisterFlashAreaReader+0x2c>
9001f074:	f240 100f 	movw	r0, #271	; 0x10f
9001f078:	f7fe f9ea 	bl	9001d450 <EwError>
9001f07c:	f007 fe1e 	bl	90026cbc <EwPanic>
9001f080:	f8c4 8028 	str.w	r8, [r4, #40]	; 0x28
9001f084:	e9c4 7604 	strd	r7, r6, [r4, #16]
9001f088:	60e5      	str	r5, [r4, #12]
9001f08a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001f08e:	e9c4 0004 	strd	r0, r0, [r4, #16]
9001f092:	62a0      	str	r0, [r4, #40]	; 0x28
9001f094:	e7f8      	b.n	9001f088 <EwRegisterFlashAreaReader+0x34>
9001f096:	bf00      	nop
9001f098:	200002f0 	.word	0x200002f0

9001f09c <EwSetContains>:
9001f09c:	b129      	cbz	r1, 9001f0aa <EwSetContains+0xe>
9001f09e:	ea31 0300 	bics.w	r3, r1, r0
9001f0a2:	bf0c      	ite	eq
9001f0a4:	2001      	moveq	r0, #1
9001f0a6:	2000      	movne	r0, #0
9001f0a8:	4770      	bx	lr
9001f0aa:	4608      	mov	r0, r1
9001f0ac:	4770      	bx	lr

9001f0ae <EwGetVariantOfInt8>:
9001f0ae:	2108      	movs	r1, #8
9001f0b0:	b508      	push	{r3, lr}
9001f0b2:	f7ff fe34 	bl	9001ed1e <EwGetVariantOf>
9001f0b6:	f990 0004 	ldrsb.w	r0, [r0, #4]
9001f0ba:	bd08      	pop	{r3, pc}

9001f0bc <EwGetVariantOfInt16>:
9001f0bc:	2108      	movs	r1, #8
9001f0be:	b508      	push	{r3, lr}
9001f0c0:	f7ff fe2d 	bl	9001ed1e <EwGetVariantOf>
9001f0c4:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
9001f0c8:	bd08      	pop	{r3, pc}

9001f0ca <EwGetVariantOfInt32>:
9001f0ca:	2108      	movs	r1, #8
9001f0cc:	b508      	push	{r3, lr}
9001f0ce:	f7ff fe26 	bl	9001ed1e <EwGetVariantOf>
9001f0d2:	6840      	ldr	r0, [r0, #4]
9001f0d4:	bd08      	pop	{r3, pc}

9001f0d6 <EwGetVariantOfInt64>:
9001f0d6:	2110      	movs	r1, #16
9001f0d8:	b508      	push	{r3, lr}
9001f0da:	f7ff fe20 	bl	9001ed1e <EwGetVariantOf>
9001f0de:	e9d0 0102 	ldrd	r0, r1, [r0, #8]
9001f0e2:	bd08      	pop	{r3, pc}

9001f0e4 <EwGetVariantOfUInt8>:
9001f0e4:	2108      	movs	r1, #8
9001f0e6:	b508      	push	{r3, lr}
9001f0e8:	f7ff fe19 	bl	9001ed1e <EwGetVariantOf>
9001f0ec:	7900      	ldrb	r0, [r0, #4]
9001f0ee:	bd08      	pop	{r3, pc}

9001f0f0 <EwGetVariantOfUInt16>:
9001f0f0:	2108      	movs	r1, #8
9001f0f2:	b508      	push	{r3, lr}
9001f0f4:	f7ff fe13 	bl	9001ed1e <EwGetVariantOf>
9001f0f8:	8880      	ldrh	r0, [r0, #4]
9001f0fa:	bd08      	pop	{r3, pc}

9001f0fc <EwGetVariantOfUInt32>:
9001f0fc:	2108      	movs	r1, #8
9001f0fe:	b508      	push	{r3, lr}
9001f100:	f7ff fe0d 	bl	9001ed1e <EwGetVariantOf>
9001f104:	6840      	ldr	r0, [r0, #4]
9001f106:	bd08      	pop	{r3, pc}

9001f108 <EwGetVariantOfUInt64>:
9001f108:	2110      	movs	r1, #16
9001f10a:	b508      	push	{r3, lr}
9001f10c:	f7ff fe07 	bl	9001ed1e <EwGetVariantOf>
9001f110:	e9d0 0102 	ldrd	r0, r1, [r0, #8]
9001f114:	bd08      	pop	{r3, pc}

9001f116 <EwGetVariantOfBool>:
9001f116:	2108      	movs	r1, #8
9001f118:	b508      	push	{r3, lr}
9001f11a:	f7ff fe00 	bl	9001ed1e <EwGetVariantOf>
9001f11e:	7900      	ldrb	r0, [r0, #4]
9001f120:	bd08      	pop	{r3, pc}

9001f122 <EwGetVariantOfFloat>:
9001f122:	2108      	movs	r1, #8
9001f124:	b508      	push	{r3, lr}
9001f126:	f7ff fdfa 	bl	9001ed1e <EwGetVariantOf>
9001f12a:	ed90 0a01 	vldr	s0, [r0, #4]
9001f12e:	bd08      	pop	{r3, pc}

9001f130 <EwGetVariantOfEnum>:
9001f130:	2108      	movs	r1, #8
9001f132:	b508      	push	{r3, lr}
9001f134:	f7ff fdf3 	bl	9001ed1e <EwGetVariantOf>
9001f138:	6840      	ldr	r0, [r0, #4]
9001f13a:	bd08      	pop	{r3, pc}

9001f13c <EwGetVariantOfSet>:
9001f13c:	2108      	movs	r1, #8
9001f13e:	b508      	push	{r3, lr}
9001f140:	f7ff fded 	bl	9001ed1e <EwGetVariantOf>
9001f144:	6840      	ldr	r0, [r0, #4]
9001f146:	bd08      	pop	{r3, pc}

9001f148 <EwGetInt32Abs>:
9001f148:	2800      	cmp	r0, #0
9001f14a:	bfb8      	it	lt
9001f14c:	4240      	neglt	r0, r0
9001f14e:	4770      	bx	lr

9001f150 <EwGetInt64Abs>:
9001f150:	2900      	cmp	r1, #0
9001f152:	460b      	mov	r3, r1
9001f154:	da02      	bge.n	9001f15c <EwGetInt64Abs+0xc>
9001f156:	4240      	negs	r0, r0
9001f158:	eb61 0341 	sbc.w	r3, r1, r1, lsl #1
9001f15c:	4619      	mov	r1, r3
9001f15e:	4770      	bx	lr

9001f160 <EwGetFloatAbs>:
9001f160:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9001f164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001f168:	bf48      	it	mi
9001f16a:	eeb1 0a40 	vnegmi.f32	s0, s0
9001f16e:	4770      	bx	lr

9001f170 <EwGetPointAbs>:
9001f170:	b082      	sub	sp, #8
9001f172:	2900      	cmp	r1, #0
9001f174:	f10d 0c08 	add.w	ip, sp, #8
9001f178:	e90c 0006 	stmdb	ip, {r1, r2}
9001f17c:	460a      	mov	r2, r1
9001f17e:	bfb8      	it	lt
9001f180:	424a      	neglt	r2, r1
9001f182:	6002      	str	r2, [r0, #0]
9001f184:	9a01      	ldr	r2, [sp, #4]
9001f186:	2a00      	cmp	r2, #0
9001f188:	bfb8      	it	lt
9001f18a:	4252      	neglt	r2, r2
9001f18c:	6042      	str	r2, [r0, #4]
9001f18e:	b002      	add	sp, #8
9001f190:	4770      	bx	lr

9001f192 <EwGetRectAbs>:
9001f192:	b084      	sub	sp, #16
9001f194:	2900      	cmp	r1, #0
9001f196:	b530      	push	{r4, r5, lr}
9001f198:	ad04      	add	r5, sp, #16
9001f19a:	e885 000e 	stmia.w	r5, {r1, r2, r3}
9001f19e:	460b      	mov	r3, r1
9001f1a0:	bfb8      	it	lt
9001f1a2:	424b      	neglt	r3, r1
9001f1a4:	2a00      	cmp	r2, #0
9001f1a6:	6003      	str	r3, [r0, #0]
9001f1a8:	4613      	mov	r3, r2
9001f1aa:	bfb8      	it	lt
9001f1ac:	4253      	neglt	r3, r2
9001f1ae:	6043      	str	r3, [r0, #4]
9001f1b0:	9b06      	ldr	r3, [sp, #24]
9001f1b2:	2b00      	cmp	r3, #0
9001f1b4:	bfb8      	it	lt
9001f1b6:	425b      	neglt	r3, r3
9001f1b8:	6083      	str	r3, [r0, #8]
9001f1ba:	9b07      	ldr	r3, [sp, #28]
9001f1bc:	2b00      	cmp	r3, #0
9001f1be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9001f1c2:	bfb8      	it	lt
9001f1c4:	425b      	neglt	r3, r3
9001f1c6:	b004      	add	sp, #16
9001f1c8:	60c3      	str	r3, [r0, #12]
9001f1ca:	4770      	bx	lr

9001f1cc <EwGetInt32UAbs>:
9001f1cc:	2800      	cmp	r0, #0
9001f1ce:	bfb8      	it	lt
9001f1d0:	4240      	neglt	r0, r0
9001f1d2:	4770      	bx	lr

9001f1d4 <EwGetInt64UAbs>:
9001f1d4:	2900      	cmp	r1, #0
9001f1d6:	460b      	mov	r3, r1
9001f1d8:	da02      	bge.n	9001f1e0 <EwGetInt64UAbs+0xc>
9001f1da:	4240      	negs	r0, r0
9001f1dc:	eb61 0341 	sbc.w	r3, r1, r1, lsl #1
9001f1e0:	4619      	mov	r1, r3
9001f1e2:	4770      	bx	lr

9001f1e4 <EwNewFloatNaN>:
9001f1e4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9001f1ec <EwNewFloatNaN+0x8>
9001f1e8:	4770      	bx	lr
9001f1ea:	bf00      	nop
9001f1ec:	7f800001 	.word	0x7f800001

9001f1f0 <EwNewFloatInfP>:
9001f1f0:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9001f1f8 <EwNewFloatInfP+0x8>
9001f1f4:	4770      	bx	lr
9001f1f6:	bf00      	nop
9001f1f8:	7f800000 	.word	0x7f800000

9001f1fc <EwNewFloatInfN>:
9001f1fc:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9001f204 <EwNewFloatInfN+0x8>
9001f200:	4770      	bx	lr
9001f202:	bf00      	nop
9001f204:	ff800000 	.word	0xff800000

9001f208 <EwIsFloatNaN>:
9001f208:	b082      	sub	sp, #8
9001f20a:	4a09      	ldr	r2, [pc, #36]	; (9001f230 <EwIsFloatNaN+0x28>)
9001f20c:	ed8d 0a01 	vstr	s0, [sp, #4]
9001f210:	9801      	ldr	r0, [sp, #4]
9001f212:	f1a0 43ff 	sub.w	r3, r0, #2139095040	; 0x7f800000
9001f216:	3b01      	subs	r3, #1
9001f218:	4293      	cmp	r3, r2
9001f21a:	d906      	bls.n	9001f22a <EwIsFloatNaN+0x22>
9001f21c:	f510 0f00 	cmn.w	r0, #8388608	; 0x800000
9001f220:	bf94      	ite	ls
9001f222:	2000      	movls	r0, #0
9001f224:	2001      	movhi	r0, #1
9001f226:	b002      	add	sp, #8
9001f228:	4770      	bx	lr
9001f22a:	2001      	movs	r0, #1
9001f22c:	e7fb      	b.n	9001f226 <EwIsFloatNaN+0x1e>
9001f22e:	bf00      	nop
9001f230:	007ffffe 	.word	0x007ffffe

9001f234 <EwIsFloatInf>:
9001f234:	ee10 3a10 	vmov	r3, s0
9001f238:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
9001f23c:	f1a0 43ff 	sub.w	r3, r0, #2139095040	; 0x7f800000
9001f240:	4258      	negs	r0, r3
9001f242:	4158      	adcs	r0, r3
9001f244:	4770      	bx	lr

9001f246 <EwIsFloatInfP>:
9001f246:	ee10 3a10 	vmov	r3, s0
9001f24a:	f1a3 43ff 	sub.w	r3, r3, #2139095040	; 0x7f800000
9001f24e:	4258      	negs	r0, r3
9001f250:	4158      	adcs	r0, r3
9001f252:	4770      	bx	lr

9001f254 <EwIsFloatInfN>:
9001f254:	ee10 3a10 	vmov	r3, s0
9001f258:	f513 0f00 	cmn.w	r3, #8388608	; 0x800000
9001f25c:	bf14      	ite	ne
9001f25e:	2000      	movne	r0, #0
9001f260:	2001      	moveq	r0, #1
9001f262:	4770      	bx	lr

9001f264 <EwGetInt32Min>:
9001f264:	b40f      	push	{r0, r1, r2, r3}
9001f266:	b513      	push	{r0, r1, r4, lr}
9001f268:	aa04      	add	r2, sp, #16
9001f26a:	9805      	ldr	r0, [sp, #20]
9001f26c:	2301      	movs	r3, #1
9001f26e:	f852 1b04 	ldr.w	r1, [r2], #4
9001f272:	9201      	str	r2, [sp, #4]
9001f274:	428b      	cmp	r3, r1
9001f276:	db04      	blt.n	9001f282 <EwGetInt32Min+0x1e>
9001f278:	b002      	add	sp, #8
9001f27a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f27e:	b004      	add	sp, #16
9001f280:	4770      	bx	lr
9001f282:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
9001f286:	3301      	adds	r3, #1
9001f288:	42a0      	cmp	r0, r4
9001f28a:	bfa8      	it	ge
9001f28c:	4620      	movge	r0, r4
9001f28e:	e7f1      	b.n	9001f274 <EwGetInt32Min+0x10>

9001f290 <EwGetUInt32Min>:
9001f290:	b40f      	push	{r0, r1, r2, r3}
9001f292:	b513      	push	{r0, r1, r4, lr}
9001f294:	aa04      	add	r2, sp, #16
9001f296:	9805      	ldr	r0, [sp, #20]
9001f298:	2301      	movs	r3, #1
9001f29a:	f852 1b04 	ldr.w	r1, [r2], #4
9001f29e:	9201      	str	r2, [sp, #4]
9001f2a0:	428b      	cmp	r3, r1
9001f2a2:	db04      	blt.n	9001f2ae <EwGetUInt32Min+0x1e>
9001f2a4:	b002      	add	sp, #8
9001f2a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f2aa:	b004      	add	sp, #16
9001f2ac:	4770      	bx	lr
9001f2ae:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
9001f2b2:	3301      	adds	r3, #1
9001f2b4:	42a0      	cmp	r0, r4
9001f2b6:	bf28      	it	cs
9001f2b8:	4620      	movcs	r0, r4
9001f2ba:	e7f1      	b.n	9001f2a0 <EwGetUInt32Min+0x10>

9001f2bc <EwGetInt64Min>:
9001f2bc:	b40f      	push	{r0, r1, r2, r3}
9001f2be:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001f2c0:	ab06      	add	r3, sp, #24
9001f2c2:	f10d 0223 	add.w	r2, sp, #35	; 0x23
9001f2c6:	f853 6b04 	ldr.w	r6, [r3], #4
9001f2ca:	f022 0207 	bic.w	r2, r2, #7
9001f2ce:	9301      	str	r3, [sp, #4]
9001f2d0:	4613      	mov	r3, r2
9001f2d2:	6851      	ldr	r1, [r2, #4]
9001f2d4:	2201      	movs	r2, #1
9001f2d6:	f853 0b08 	ldr.w	r0, [r3], #8
9001f2da:	42b2      	cmp	r2, r6
9001f2dc:	db04      	blt.n	9001f2e8 <EwGetInt64Min+0x2c>
9001f2de:	b002      	add	sp, #8
9001f2e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f2e4:	b004      	add	sp, #16
9001f2e6:	4770      	bx	lr
9001f2e8:	3307      	adds	r3, #7
9001f2ea:	3201      	adds	r2, #1
9001f2ec:	f023 0407 	bic.w	r4, r3, #7
9001f2f0:	4623      	mov	r3, r4
9001f2f2:	6864      	ldr	r4, [r4, #4]
9001f2f4:	f853 5b08 	ldr.w	r5, [r3], #8
9001f2f8:	4285      	cmp	r5, r0
9001f2fa:	eb74 0c01 	sbcs.w	ip, r4, r1
9001f2fe:	bfbc      	itt	lt
9001f300:	4628      	movlt	r0, r5
9001f302:	4621      	movlt	r1, r4
9001f304:	e7e9      	b.n	9001f2da <EwGetInt64Min+0x1e>

9001f306 <EwGetUInt64Min>:
9001f306:	b40f      	push	{r0, r1, r2, r3}
9001f308:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001f30a:	ab06      	add	r3, sp, #24
9001f30c:	f10d 0223 	add.w	r2, sp, #35	; 0x23
9001f310:	f853 6b04 	ldr.w	r6, [r3], #4
9001f314:	f022 0207 	bic.w	r2, r2, #7
9001f318:	9301      	str	r3, [sp, #4]
9001f31a:	4613      	mov	r3, r2
9001f31c:	6851      	ldr	r1, [r2, #4]
9001f31e:	2201      	movs	r2, #1
9001f320:	f853 0b08 	ldr.w	r0, [r3], #8
9001f324:	42b2      	cmp	r2, r6
9001f326:	db04      	blt.n	9001f332 <EwGetUInt64Min+0x2c>
9001f328:	b002      	add	sp, #8
9001f32a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f32e:	b004      	add	sp, #16
9001f330:	4770      	bx	lr
9001f332:	3307      	adds	r3, #7
9001f334:	3201      	adds	r2, #1
9001f336:	f023 0407 	bic.w	r4, r3, #7
9001f33a:	4623      	mov	r3, r4
9001f33c:	6864      	ldr	r4, [r4, #4]
9001f33e:	f853 5b08 	ldr.w	r5, [r3], #8
9001f342:	4285      	cmp	r5, r0
9001f344:	eb74 0c01 	sbcs.w	ip, r4, r1
9001f348:	bf3c      	itt	cc
9001f34a:	4628      	movcc	r0, r5
9001f34c:	4621      	movcc	r1, r4
9001f34e:	e7e9      	b.n	9001f324 <EwGetUInt64Min+0x1e>

9001f350 <EwGetFloatMin>:
9001f350:	b40f      	push	{r0, r1, r2, r3}
9001f352:	b570      	push	{r4, r5, r6, lr}
9001f354:	ed2d 8b02 	vpush	{d8}
9001f358:	b082      	sub	sp, #8
9001f35a:	2501      	movs	r5, #1
9001f35c:	f10d 042b 	add.w	r4, sp, #43	; 0x2b
9001f360:	ab08      	add	r3, sp, #32
9001f362:	f024 0407 	bic.w	r4, r4, #7
9001f366:	f853 6b04 	ldr.w	r6, [r3], #4
9001f36a:	e8f4 0102 	ldrd	r0, r1, [r4], #8
9001f36e:	9301      	str	r3, [sp, #4]
9001f370:	f002 fd62 	bl	90021e38 <__aeabi_d2f>
9001f374:	ee08 0a10 	vmov	s16, r0
9001f378:	42b5      	cmp	r5, r6
9001f37a:	db08      	blt.n	9001f38e <EwGetFloatMin+0x3e>
9001f37c:	ee18 0a10 	vmov	r0, s16
9001f380:	b002      	add	sp, #8
9001f382:	ecbd 8b02 	vpop	{d8}
9001f386:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f38a:	b004      	add	sp, #16
9001f38c:	4770      	bx	lr
9001f38e:	3407      	adds	r4, #7
9001f390:	3501      	adds	r5, #1
9001f392:	f024 0407 	bic.w	r4, r4, #7
9001f396:	e8f4 0102 	ldrd	r0, r1, [r4], #8
9001f39a:	f002 fd4d 	bl	90021e38 <__aeabi_d2f>
9001f39e:	ee07 0a90 	vmov	s15, r0
9001f3a2:	eeb4 8a67 	vcmp.f32	s16, s15
9001f3a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001f3aa:	fe37 8a88 	vselgt.f32	s16, s15, s16
9001f3ae:	e7e3      	b.n	9001f378 <EwGetFloatMin+0x28>

9001f3b0 <EwGetColorMin>:
9001f3b0:	b40f      	push	{r0, r1, r2, r3}
9001f3b2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001f3b4:	ab08      	add	r3, sp, #32
9001f3b6:	f89d 5024 	ldrb.w	r5, [sp, #36]	; 0x24
9001f3ba:	2001      	movs	r0, #1
9001f3bc:	f853 6b04 	ldr.w	r6, [r3], #4
9001f3c0:	1d1a      	adds	r2, r3, #4
9001f3c2:	785c      	ldrb	r4, [r3, #1]
9001f3c4:	7899      	ldrb	r1, [r3, #2]
9001f3c6:	9300      	str	r3, [sp, #0]
9001f3c8:	78db      	ldrb	r3, [r3, #3]
9001f3ca:	42b0      	cmp	r0, r6
9001f3cc:	db15      	blt.n	9001f3fa <EwGetColorMin+0x4a>
9001f3ce:	2000      	movs	r0, #0
9001f3d0:	f88d 5004 	strb.w	r5, [sp, #4]
9001f3d4:	f88d 4005 	strb.w	r4, [sp, #5]
9001f3d8:	f365 0007 	bfi	r0, r5, #0, #8
9001f3dc:	f88d 1006 	strb.w	r1, [sp, #6]
9001f3e0:	f88d 3007 	strb.w	r3, [sp, #7]
9001f3e4:	f364 200f 	bfi	r0, r4, #8, #8
9001f3e8:	f361 4017 	bfi	r0, r1, #16, #8
9001f3ec:	f363 601f 	bfi	r0, r3, #24, #8
9001f3f0:	b003      	add	sp, #12
9001f3f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f3f6:	b004      	add	sp, #16
9001f3f8:	4770      	bx	lr
9001f3fa:	f812 7b04 	ldrb.w	r7, [r2], #4
9001f3fe:	3001      	adds	r0, #1
9001f400:	42bd      	cmp	r5, r7
9001f402:	bf28      	it	cs
9001f404:	463d      	movcs	r5, r7
9001f406:	f812 7c03 	ldrb.w	r7, [r2, #-3]
9001f40a:	42bc      	cmp	r4, r7
9001f40c:	bf28      	it	cs
9001f40e:	463c      	movcs	r4, r7
9001f410:	f812 7c02 	ldrb.w	r7, [r2, #-2]
9001f414:	42b9      	cmp	r1, r7
9001f416:	bf28      	it	cs
9001f418:	4639      	movcs	r1, r7
9001f41a:	f812 7c01 	ldrb.w	r7, [r2, #-1]
9001f41e:	42bb      	cmp	r3, r7
9001f420:	bf28      	it	cs
9001f422:	463b      	movcs	r3, r7
9001f424:	e7d1      	b.n	9001f3ca <EwGetColorMin+0x1a>

9001f426 <EwGetPointMin>:
9001f426:	b40e      	push	{r1, r2, r3}
9001f428:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
9001f42a:	aa07      	add	r2, sp, #28
9001f42c:	9c08      	ldr	r4, [sp, #32]
9001f42e:	2301      	movs	r3, #1
9001f430:	f852 6b04 	ldr.w	r6, [r2], #4
9001f434:	4615      	mov	r5, r2
9001f436:	9201      	str	r2, [sp, #4]
9001f438:	f855 1f04 	ldr.w	r1, [r5, #4]!
9001f43c:	42b3      	cmp	r3, r6
9001f43e:	db06      	blt.n	9001f44e <EwGetPointMin+0x28>
9001f440:	e9c0 4100 	strd	r4, r1, [r0]
9001f444:	b002      	add	sp, #8
9001f446:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f44a:	b003      	add	sp, #12
9001f44c:	4770      	bx	lr
9001f44e:	f852 7033 	ldr.w	r7, [r2, r3, lsl #3]
9001f452:	42bc      	cmp	r4, r7
9001f454:	bfa8      	it	ge
9001f456:	463c      	movge	r4, r7
9001f458:	f855 7033 	ldr.w	r7, [r5, r3, lsl #3]
9001f45c:	3301      	adds	r3, #1
9001f45e:	42b9      	cmp	r1, r7
9001f460:	bfa8      	it	ge
9001f462:	4639      	movge	r1, r7
9001f464:	e7ea      	b.n	9001f43c <EwGetPointMin+0x16>

9001f466 <EwGetRectMin>:
9001f466:	b40e      	push	{r1, r2, r3}
9001f468:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
9001f46a:	ab07      	add	r3, sp, #28
9001f46c:	aa0c      	add	r2, sp, #48	; 0x30
9001f46e:	9d08      	ldr	r5, [sp, #32]
9001f470:	2601      	movs	r6, #1
9001f472:	f853 cb04 	ldr.w	ip, [r3], #4
9001f476:	e9d3 4101 	ldrd	r4, r1, [r3, #4]
9001f47a:	9301      	str	r3, [sp, #4]
9001f47c:	68db      	ldr	r3, [r3, #12]
9001f47e:	4566      	cmp	r6, ip
9001f480:	db08      	blt.n	9001f494 <EwGetRectMin+0x2e>
9001f482:	e9c0 5400 	strd	r5, r4, [r0]
9001f486:	e9c0 1302 	strd	r1, r3, [r0, #8]
9001f48a:	b002      	add	sp, #8
9001f48c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f490:	b003      	add	sp, #12
9001f492:	4770      	bx	lr
9001f494:	f852 7b10 	ldr.w	r7, [r2], #16
9001f498:	3601      	adds	r6, #1
9001f49a:	42bd      	cmp	r5, r7
9001f49c:	bfa8      	it	ge
9001f49e:	463d      	movge	r5, r7
9001f4a0:	f852 7c0c 	ldr.w	r7, [r2, #-12]
9001f4a4:	42bc      	cmp	r4, r7
9001f4a6:	bfa8      	it	ge
9001f4a8:	463c      	movge	r4, r7
9001f4aa:	f852 7c08 	ldr.w	r7, [r2, #-8]
9001f4ae:	42b9      	cmp	r1, r7
9001f4b0:	bfa8      	it	ge
9001f4b2:	4639      	movge	r1, r7
9001f4b4:	f852 7c04 	ldr.w	r7, [r2, #-4]
9001f4b8:	42bb      	cmp	r3, r7
9001f4ba:	bfa8      	it	ge
9001f4bc:	463b      	movge	r3, r7
9001f4be:	e7de      	b.n	9001f47e <EwGetRectMin+0x18>

9001f4c0 <EwGetInt32Max>:
9001f4c0:	b40f      	push	{r0, r1, r2, r3}
9001f4c2:	b513      	push	{r0, r1, r4, lr}
9001f4c4:	aa04      	add	r2, sp, #16
9001f4c6:	9805      	ldr	r0, [sp, #20]
9001f4c8:	2301      	movs	r3, #1
9001f4ca:	f852 1b04 	ldr.w	r1, [r2], #4
9001f4ce:	9201      	str	r2, [sp, #4]
9001f4d0:	428b      	cmp	r3, r1
9001f4d2:	db04      	blt.n	9001f4de <EwGetInt32Max+0x1e>
9001f4d4:	b002      	add	sp, #8
9001f4d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f4da:	b004      	add	sp, #16
9001f4dc:	4770      	bx	lr
9001f4de:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
9001f4e2:	3301      	adds	r3, #1
9001f4e4:	42a0      	cmp	r0, r4
9001f4e6:	bfb8      	it	lt
9001f4e8:	4620      	movlt	r0, r4
9001f4ea:	e7f1      	b.n	9001f4d0 <EwGetInt32Max+0x10>

9001f4ec <EwGetUInt32Max>:
9001f4ec:	b40f      	push	{r0, r1, r2, r3}
9001f4ee:	b513      	push	{r0, r1, r4, lr}
9001f4f0:	aa04      	add	r2, sp, #16
9001f4f2:	9805      	ldr	r0, [sp, #20]
9001f4f4:	2301      	movs	r3, #1
9001f4f6:	f852 1b04 	ldr.w	r1, [r2], #4
9001f4fa:	9201      	str	r2, [sp, #4]
9001f4fc:	428b      	cmp	r3, r1
9001f4fe:	db04      	blt.n	9001f50a <EwGetUInt32Max+0x1e>
9001f500:	b002      	add	sp, #8
9001f502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f506:	b004      	add	sp, #16
9001f508:	4770      	bx	lr
9001f50a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
9001f50e:	3301      	adds	r3, #1
9001f510:	42a0      	cmp	r0, r4
9001f512:	bf38      	it	cc
9001f514:	4620      	movcc	r0, r4
9001f516:	e7f1      	b.n	9001f4fc <EwGetUInt32Max+0x10>

9001f518 <EwGetInt64Max>:
9001f518:	b40f      	push	{r0, r1, r2, r3}
9001f51a:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001f51c:	ab06      	add	r3, sp, #24
9001f51e:	f10d 0223 	add.w	r2, sp, #35	; 0x23
9001f522:	f853 6b04 	ldr.w	r6, [r3], #4
9001f526:	f022 0207 	bic.w	r2, r2, #7
9001f52a:	9301      	str	r3, [sp, #4]
9001f52c:	4613      	mov	r3, r2
9001f52e:	6851      	ldr	r1, [r2, #4]
9001f530:	2201      	movs	r2, #1
9001f532:	f853 0b08 	ldr.w	r0, [r3], #8
9001f536:	42b2      	cmp	r2, r6
9001f538:	db04      	blt.n	9001f544 <EwGetInt64Max+0x2c>
9001f53a:	b002      	add	sp, #8
9001f53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f540:	b004      	add	sp, #16
9001f542:	4770      	bx	lr
9001f544:	3307      	adds	r3, #7
9001f546:	3201      	adds	r2, #1
9001f548:	f023 0407 	bic.w	r4, r3, #7
9001f54c:	4623      	mov	r3, r4
9001f54e:	6864      	ldr	r4, [r4, #4]
9001f550:	f853 5b08 	ldr.w	r5, [r3], #8
9001f554:	42a8      	cmp	r0, r5
9001f556:	eb71 0c04 	sbcs.w	ip, r1, r4
9001f55a:	bfbc      	itt	lt
9001f55c:	4628      	movlt	r0, r5
9001f55e:	4621      	movlt	r1, r4
9001f560:	e7e9      	b.n	9001f536 <EwGetInt64Max+0x1e>

9001f562 <EwGetUInt64Max>:
9001f562:	b40f      	push	{r0, r1, r2, r3}
9001f564:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001f566:	ab06      	add	r3, sp, #24
9001f568:	f10d 0223 	add.w	r2, sp, #35	; 0x23
9001f56c:	f853 6b04 	ldr.w	r6, [r3], #4
9001f570:	f022 0207 	bic.w	r2, r2, #7
9001f574:	9301      	str	r3, [sp, #4]
9001f576:	4613      	mov	r3, r2
9001f578:	6851      	ldr	r1, [r2, #4]
9001f57a:	2201      	movs	r2, #1
9001f57c:	f853 0b08 	ldr.w	r0, [r3], #8
9001f580:	42b2      	cmp	r2, r6
9001f582:	db04      	blt.n	9001f58e <EwGetUInt64Max+0x2c>
9001f584:	b002      	add	sp, #8
9001f586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f58a:	b004      	add	sp, #16
9001f58c:	4770      	bx	lr
9001f58e:	3307      	adds	r3, #7
9001f590:	3201      	adds	r2, #1
9001f592:	f023 0407 	bic.w	r4, r3, #7
9001f596:	4623      	mov	r3, r4
9001f598:	6864      	ldr	r4, [r4, #4]
9001f59a:	f853 5b08 	ldr.w	r5, [r3], #8
9001f59e:	42a8      	cmp	r0, r5
9001f5a0:	eb71 0c04 	sbcs.w	ip, r1, r4
9001f5a4:	bf3c      	itt	cc
9001f5a6:	4628      	movcc	r0, r5
9001f5a8:	4621      	movcc	r1, r4
9001f5aa:	e7e9      	b.n	9001f580 <EwGetUInt64Max+0x1e>

9001f5ac <EwGetFloatMax>:
9001f5ac:	b40f      	push	{r0, r1, r2, r3}
9001f5ae:	b570      	push	{r4, r5, r6, lr}
9001f5b0:	ed2d 8b02 	vpush	{d8}
9001f5b4:	b082      	sub	sp, #8
9001f5b6:	2501      	movs	r5, #1
9001f5b8:	f10d 042b 	add.w	r4, sp, #43	; 0x2b
9001f5bc:	ab08      	add	r3, sp, #32
9001f5be:	f024 0407 	bic.w	r4, r4, #7
9001f5c2:	f853 6b04 	ldr.w	r6, [r3], #4
9001f5c6:	e8f4 0102 	ldrd	r0, r1, [r4], #8
9001f5ca:	9301      	str	r3, [sp, #4]
9001f5cc:	f002 fc34 	bl	90021e38 <__aeabi_d2f>
9001f5d0:	ee08 0a10 	vmov	s16, r0
9001f5d4:	42b5      	cmp	r5, r6
9001f5d6:	db08      	blt.n	9001f5ea <EwGetFloatMax+0x3e>
9001f5d8:	ee18 0a10 	vmov	r0, s16
9001f5dc:	b002      	add	sp, #8
9001f5de:	ecbd 8b02 	vpop	{d8}
9001f5e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001f5e6:	b004      	add	sp, #16
9001f5e8:	4770      	bx	lr
9001f5ea:	3407      	adds	r4, #7
9001f5ec:	3501      	adds	r5, #1
9001f5ee:	f024 0407 	bic.w	r4, r4, #7
9001f5f2:	e8f4 0102 	ldrd	r0, r1, [r4], #8
9001f5f6:	f002 fc1f 	bl	90021e38 <__aeabi_d2f>
9001f5fa:	ee07 0a90 	vmov	s15, r0
9001f5fe:	eeb4 8a67 	vcmp.f32	s16, s15
9001f602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001f606:	bf48      	it	mi
9001f608:	eeb0 8a67 	vmovmi.f32	s16, s15
9001f60c:	e7e2      	b.n	9001f5d4 <EwGetFloatMax+0x28>

9001f60e <EwGetColorMax>:
9001f60e:	b40f      	push	{r0, r1, r2, r3}
9001f610:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001f612:	ab08      	add	r3, sp, #32
9001f614:	f89d 5024 	ldrb.w	r5, [sp, #36]	; 0x24
9001f618:	2001      	movs	r0, #1
9001f61a:	f853 6b04 	ldr.w	r6, [r3], #4
9001f61e:	1d1a      	adds	r2, r3, #4
9001f620:	785c      	ldrb	r4, [r3, #1]
9001f622:	7899      	ldrb	r1, [r3, #2]
9001f624:	9300      	str	r3, [sp, #0]
9001f626:	78db      	ldrb	r3, [r3, #3]
9001f628:	42b0      	cmp	r0, r6
9001f62a:	db15      	blt.n	9001f658 <EwGetColorMax+0x4a>
9001f62c:	2000      	movs	r0, #0
9001f62e:	f88d 5004 	strb.w	r5, [sp, #4]
9001f632:	f88d 4005 	strb.w	r4, [sp, #5]
9001f636:	f365 0007 	bfi	r0, r5, #0, #8
9001f63a:	f88d 1006 	strb.w	r1, [sp, #6]
9001f63e:	f88d 3007 	strb.w	r3, [sp, #7]
9001f642:	f364 200f 	bfi	r0, r4, #8, #8
9001f646:	f361 4017 	bfi	r0, r1, #16, #8
9001f64a:	f363 601f 	bfi	r0, r3, #24, #8
9001f64e:	b003      	add	sp, #12
9001f650:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f654:	b004      	add	sp, #16
9001f656:	4770      	bx	lr
9001f658:	f812 7b04 	ldrb.w	r7, [r2], #4
9001f65c:	3001      	adds	r0, #1
9001f65e:	42bd      	cmp	r5, r7
9001f660:	bf38      	it	cc
9001f662:	463d      	movcc	r5, r7
9001f664:	f812 7c03 	ldrb.w	r7, [r2, #-3]
9001f668:	42bc      	cmp	r4, r7
9001f66a:	bf38      	it	cc
9001f66c:	463c      	movcc	r4, r7
9001f66e:	f812 7c02 	ldrb.w	r7, [r2, #-2]
9001f672:	42b9      	cmp	r1, r7
9001f674:	bf38      	it	cc
9001f676:	4639      	movcc	r1, r7
9001f678:	f812 7c01 	ldrb.w	r7, [r2, #-1]
9001f67c:	42bb      	cmp	r3, r7
9001f67e:	bf38      	it	cc
9001f680:	463b      	movcc	r3, r7
9001f682:	e7d1      	b.n	9001f628 <EwGetColorMax+0x1a>

9001f684 <EwGetPointMax>:
9001f684:	b40e      	push	{r1, r2, r3}
9001f686:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
9001f688:	aa07      	add	r2, sp, #28
9001f68a:	9c08      	ldr	r4, [sp, #32]
9001f68c:	2301      	movs	r3, #1
9001f68e:	f852 6b04 	ldr.w	r6, [r2], #4
9001f692:	4615      	mov	r5, r2
9001f694:	9201      	str	r2, [sp, #4]
9001f696:	f855 1f04 	ldr.w	r1, [r5, #4]!
9001f69a:	42b3      	cmp	r3, r6
9001f69c:	db06      	blt.n	9001f6ac <EwGetPointMax+0x28>
9001f69e:	e9c0 4100 	strd	r4, r1, [r0]
9001f6a2:	b002      	add	sp, #8
9001f6a4:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f6a8:	b003      	add	sp, #12
9001f6aa:	4770      	bx	lr
9001f6ac:	f852 7033 	ldr.w	r7, [r2, r3, lsl #3]
9001f6b0:	42bc      	cmp	r4, r7
9001f6b2:	bfb8      	it	lt
9001f6b4:	463c      	movlt	r4, r7
9001f6b6:	f855 7033 	ldr.w	r7, [r5, r3, lsl #3]
9001f6ba:	3301      	adds	r3, #1
9001f6bc:	42b9      	cmp	r1, r7
9001f6be:	bfb8      	it	lt
9001f6c0:	4639      	movlt	r1, r7
9001f6c2:	e7ea      	b.n	9001f69a <EwGetPointMax+0x16>

9001f6c4 <EwGetRectMax>:
9001f6c4:	b40e      	push	{r1, r2, r3}
9001f6c6:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
9001f6c8:	ab07      	add	r3, sp, #28
9001f6ca:	aa0c      	add	r2, sp, #48	; 0x30
9001f6cc:	9d08      	ldr	r5, [sp, #32]
9001f6ce:	2601      	movs	r6, #1
9001f6d0:	f853 cb04 	ldr.w	ip, [r3], #4
9001f6d4:	e9d3 4101 	ldrd	r4, r1, [r3, #4]
9001f6d8:	9301      	str	r3, [sp, #4]
9001f6da:	68db      	ldr	r3, [r3, #12]
9001f6dc:	4566      	cmp	r6, ip
9001f6de:	db08      	blt.n	9001f6f2 <EwGetRectMax+0x2e>
9001f6e0:	e9c0 5400 	strd	r5, r4, [r0]
9001f6e4:	e9c0 1302 	strd	r1, r3, [r0, #8]
9001f6e8:	b002      	add	sp, #8
9001f6ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001f6ee:	b003      	add	sp, #12
9001f6f0:	4770      	bx	lr
9001f6f2:	f852 7b10 	ldr.w	r7, [r2], #16
9001f6f6:	3601      	adds	r6, #1
9001f6f8:	42bd      	cmp	r5, r7
9001f6fa:	bfb8      	it	lt
9001f6fc:	463d      	movlt	r5, r7
9001f6fe:	f852 7c0c 	ldr.w	r7, [r2, #-12]
9001f702:	42bc      	cmp	r4, r7
9001f704:	bfb8      	it	lt
9001f706:	463c      	movlt	r4, r7
9001f708:	f852 7c08 	ldr.w	r7, [r2, #-8]
9001f70c:	42b9      	cmp	r1, r7
9001f70e:	bfb8      	it	lt
9001f710:	4639      	movlt	r1, r7
9001f712:	f852 7c04 	ldr.w	r7, [r2, #-4]
9001f716:	42bb      	cmp	r3, r7
9001f718:	bfb8      	it	lt
9001f71a:	463b      	movlt	r3, r7
9001f71c:	e7de      	b.n	9001f6dc <EwGetRectMax+0x18>

9001f71e <EwMathLength>:
9001f71e:	ee60 0aa0 	vmul.f32	s1, s1, s1
9001f722:	eee0 0a00 	vfma.f32	s1, s0, s0
9001f726:	eeb0 0a60 	vmov.f32	s0, s1
9001f72a:	f007 bb0f 	b.w	90026d4c <EwMathSqrt>

9001f72e <EwMathLengthPoint>:
9001f72e:	ee07 1a10 	vmov	s14, r1
9001f732:	ee07 0a90 	vmov	s15, r0
9001f736:	b082      	sub	sp, #8
9001f738:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
9001f73c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001f740:	ab02      	add	r3, sp, #8
9001f742:	ee20 0a00 	vmul.f32	s0, s0, s0
9001f746:	e903 0003 	stmdb	r3, {r0, r1}
9001f74a:	eea7 0aa7 	vfma.f32	s0, s15, s15
9001f74e:	b002      	add	sp, #8
9001f750:	f007 bafc 	b.w	90026d4c <EwMathSqrt>

9001f754 <EwMathTrunc>:
9001f754:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9001f758:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001f75c:	d501      	bpl.n	9001f762 <EwMathTrunc+0xe>
9001f75e:	f007 bb27 	b.w	90026db0 <EwMathCeil>
9001f762:	f007 bb21 	b.w	90026da8 <EwMathFloor>

9001f766 <EwMathFract>:
9001f766:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
9001f76a:	b508      	push	{r3, lr}
9001f76c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001f770:	ed2d 8b02 	vpush	{d8}
9001f774:	eeb0 8a40 	vmov.f32	s16, s0
9001f778:	d506      	bpl.n	9001f788 <EwMathFract+0x22>
9001f77a:	f007 fb19 	bl	90026db0 <EwMathCeil>
9001f77e:	ee38 0a40 	vsub.f32	s0, s16, s0
9001f782:	ecbd 8b02 	vpop	{d8}
9001f786:	bd08      	pop	{r3, pc}
9001f788:	f007 fb0e 	bl	90026da8 <EwMathFloor>
9001f78c:	e7f7      	b.n	9001f77e <EwMathFract+0x18>
9001f78e:	bf00      	nop
9001f790:	b538      	push	{r3, r4, r5, lr}
9001f792:	4604      	mov	r4, r0
9001f794:	4d05      	ldr	r5, [pc, #20]	; (9001f7ac <EwMathFract+0x46>)
9001f796:	6820      	ldr	r0, [r4, #0]
9001f798:	b900      	cbnz	r0, 9001f79c <EwMathFract+0x36>
9001f79a:	bd38      	pop	{r3, r4, r5, pc}
9001f79c:	6803      	ldr	r3, [r0, #0]
9001f79e:	6023      	str	r3, [r4, #0]
9001f7a0:	682b      	ldr	r3, [r5, #0]
9001f7a2:	3b14      	subs	r3, #20
9001f7a4:	602b      	str	r3, [r5, #0]
9001f7a6:	f007 fa87 	bl	90026cb8 <EwFree>
9001f7aa:	e7f4      	b.n	9001f796 <EwMathFract+0x30>
9001f7ac:	200002ac 	.word	0x200002ac
9001f7b0:	b538      	push	{r3, r4, r5, lr}
9001f7b2:	4604      	mov	r4, r0
9001f7b4:	4d0a      	ldr	r5, [pc, #40]	; (9001f7e0 <EwMathFract+0x7a>)
9001f7b6:	6820      	ldr	r0, [r4, #0]
9001f7b8:	b900      	cbnz	r0, 9001f7bc <EwMathFract+0x56>
9001f7ba:	bd38      	pop	{r3, r4, r5, pc}
9001f7bc:	6843      	ldr	r3, [r0, #4]
9001f7be:	685b      	ldr	r3, [r3, #4]
9001f7c0:	b11b      	cbz	r3, 9001f7ca <EwMathFract+0x64>
9001f7c2:	68c3      	ldr	r3, [r0, #12]
9001f7c4:	b14b      	cbz	r3, 9001f7da <EwMathFract+0x74>
9001f7c6:	685b      	ldr	r3, [r3, #4]
9001f7c8:	b93b      	cbnz	r3, 9001f7da <EwMathFract+0x74>
9001f7ca:	682b      	ldr	r3, [r5, #0]
9001f7cc:	3b18      	subs	r3, #24
9001f7ce:	602b      	str	r3, [r5, #0]
9001f7d0:	6803      	ldr	r3, [r0, #0]
9001f7d2:	6023      	str	r3, [r4, #0]
9001f7d4:	f007 fa70 	bl	90026cb8 <EwFree>
9001f7d8:	e7ed      	b.n	9001f7b6 <EwMathFract+0x50>
9001f7da:	4604      	mov	r4, r0
9001f7dc:	e7eb      	b.n	9001f7b6 <EwMathFract+0x50>
9001f7de:	bf00      	nop
9001f7e0:	200002ac 	.word	0x200002ac
9001f7e4:	b538      	push	{r3, r4, r5, lr}
9001f7e6:	4604      	mov	r4, r0
9001f7e8:	4d0b      	ldr	r5, [pc, #44]	; (9001f818 <EwMathFract+0xb2>)
9001f7ea:	6820      	ldr	r0, [r4, #0]
9001f7ec:	b900      	cbnz	r0, 9001f7f0 <EwMathFract+0x8a>
9001f7ee:	bd38      	pop	{r3, r4, r5, pc}
9001f7f0:	6843      	ldr	r3, [r0, #4]
9001f7f2:	685b      	ldr	r3, [r3, #4]
9001f7f4:	b11b      	cbz	r3, 9001f7fe <EwMathFract+0x98>
9001f7f6:	68c3      	ldr	r3, [r0, #12]
9001f7f8:	b15b      	cbz	r3, 9001f812 <EwMathFract+0xac>
9001f7fa:	685b      	ldr	r3, [r3, #4]
9001f7fc:	b94b      	cbnz	r3, 9001f812 <EwMathFract+0xac>
9001f7fe:	6903      	ldr	r3, [r0, #16]
9001f800:	b93b      	cbnz	r3, 9001f812 <EwMathFract+0xac>
9001f802:	682b      	ldr	r3, [r5, #0]
9001f804:	6802      	ldr	r2, [r0, #0]
9001f806:	3b14      	subs	r3, #20
9001f808:	602b      	str	r3, [r5, #0]
9001f80a:	6022      	str	r2, [r4, #0]
9001f80c:	f007 fa54 	bl	90026cb8 <EwFree>
9001f810:	e7eb      	b.n	9001f7ea <EwMathFract+0x84>
9001f812:	4604      	mov	r4, r0
9001f814:	e7e9      	b.n	9001f7ea <EwMathFract+0x84>
9001f816:	bf00      	nop
9001f818:	200002ac 	.word	0x200002ac
9001f81c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001f81e:	4607      	mov	r7, r0
9001f820:	466e      	mov	r6, sp
9001f822:	461d      	mov	r5, r3
9001f824:	4610      	mov	r0, r2
9001f826:	460b      	mov	r3, r1
9001f828:	463c      	mov	r4, r7
9001f82a:	e886 0006 	stmia.w	r6, {r1, r2}
9001f82e:	6822      	ldr	r2, [r4, #0]
9001f830:	b1ba      	cbz	r2, 9001f862 <EwMathFract+0xfc>
9001f832:	6891      	ldr	r1, [r2, #8]
9001f834:	4281      	cmp	r1, r0
9001f836:	d106      	bne.n	9001f846 <EwMathFract+0xe0>
9001f838:	6851      	ldr	r1, [r2, #4]
9001f83a:	4299      	cmp	r1, r3
9001f83c:	d103      	bne.n	9001f846 <EwMathFract+0xe0>
9001f83e:	6913      	ldr	r3, [r2, #16]
9001f840:	b11b      	cbz	r3, 9001f84a <EwMathFract+0xe4>
9001f842:	2400      	movs	r4, #0
9001f844:	e009      	b.n	9001f85a <EwMathFract+0xf4>
9001f846:	4614      	mov	r4, r2
9001f848:	e7f1      	b.n	9001f82e <EwMathFract+0xc8>
9001f84a:	6811      	ldr	r1, [r2, #0]
9001f84c:	6021      	str	r1, [r4, #0]
9001f84e:	6013      	str	r3, [r2, #0]
9001f850:	6823      	ldr	r3, [r4, #0]
9001f852:	b9bb      	cbnz	r3, 9001f884 <EwMathFract+0x11e>
9001f854:	6022      	str	r2, [r4, #0]
9001f856:	2401      	movs	r4, #1
9001f858:	60d5      	str	r5, [r2, #12]
9001f85a:	4620      	mov	r0, r4
9001f85c:	b003      	add	sp, #12
9001f85e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001f860:	463c      	mov	r4, r7
9001f862:	2014      	movs	r0, #20
9001f864:	f007 fa26 	bl	90026cb4 <EwAlloc>
9001f868:	4602      	mov	r2, r0
9001f86a:	b968      	cbnz	r0, 9001f888 <EwMathFract+0x122>
9001f86c:	2004      	movs	r0, #4
9001f86e:	f7fe fda1 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001f872:	4604      	mov	r4, r0
9001f874:	2800      	cmp	r0, #0
9001f876:	d1f3      	bne.n	9001f860 <EwMathFract+0xfa>
9001f878:	2004      	movs	r0, #4
9001f87a:	f7fd fde9 	bl	9001d450 <EwError>
9001f87e:	f007 fa1d 	bl	90026cbc <EwPanic>
9001f882:	e7ea      	b.n	9001f85a <EwMathFract+0xf4>
9001f884:	461c      	mov	r4, r3
9001f886:	e7e3      	b.n	9001f850 <EwMathFract+0xea>
9001f888:	2300      	movs	r3, #0
9001f88a:	6003      	str	r3, [r0, #0]
9001f88c:	6103      	str	r3, [r0, #16]
9001f88e:	1d03      	adds	r3, r0, #4
9001f890:	e896 0003 	ldmia.w	r6, {r0, r1}
9001f894:	e883 0003 	stmia.w	r3, {r0, r1}
9001f898:	4b0a      	ldr	r3, [pc, #40]	; (9001f8c4 <EwMathFract+0x15e>)
9001f89a:	6819      	ldr	r1, [r3, #0]
9001f89c:	3114      	adds	r1, #20
9001f89e:	6019      	str	r1, [r3, #0]
9001f8a0:	4b09      	ldr	r3, [pc, #36]	; (9001f8c8 <EwMathFract+0x162>)
9001f8a2:	6818      	ldr	r0, [r3, #0]
9001f8a4:	4281      	cmp	r1, r0
9001f8a6:	dd00      	ble.n	9001f8aa <EwMathFract+0x144>
9001f8a8:	6019      	str	r1, [r3, #0]
9001f8aa:	4b08      	ldr	r3, [pc, #32]	; (9001f8cc <EwMathFract+0x166>)
9001f8ac:	681b      	ldr	r3, [r3, #0]
9001f8ae:	4419      	add	r1, r3
9001f8b0:	4b07      	ldr	r3, [pc, #28]	; (9001f8d0 <EwMathFract+0x16a>)
9001f8b2:	681b      	ldr	r3, [r3, #0]
9001f8b4:	4419      	add	r1, r3
9001f8b6:	4b07      	ldr	r3, [pc, #28]	; (9001f8d4 <EwMathFract+0x16e>)
9001f8b8:	6818      	ldr	r0, [r3, #0]
9001f8ba:	4281      	cmp	r1, r0
9001f8bc:	ddc8      	ble.n	9001f850 <EwMathFract+0xea>
9001f8be:	6019      	str	r1, [r3, #0]
9001f8c0:	e7c6      	b.n	9001f850 <EwMathFract+0xea>
9001f8c2:	bf00      	nop
9001f8c4:	200002ac 	.word	0x200002ac
9001f8c8:	200002b4 	.word	0x200002b4
9001f8cc:	200002b8 	.word	0x200002b8
9001f8d0:	200002bc 	.word	0x200002bc
9001f8d4:	200002c0 	.word	0x200002c0

9001f8d8 <EwMarkSignals>:
9001f8d8:	b530      	push	{r4, r5, lr}
9001f8da:	4912      	ldr	r1, [pc, #72]	; (9001f924 <EwMarkSignals+0x4c>)
9001f8dc:	2401      	movs	r4, #1
9001f8de:	680a      	ldr	r2, [r1, #0]
9001f8e0:	b922      	cbnz	r2, 9001f8ec <EwMarkSignals+0x14>
9001f8e2:	4911      	ldr	r1, [pc, #68]	; (9001f928 <EwMarkSignals+0x50>)
9001f8e4:	2401      	movs	r4, #1
9001f8e6:	680a      	ldr	r2, [r1, #0]
9001f8e8:	b972      	cbnz	r2, 9001f908 <EwMarkSignals+0x30>
9001f8ea:	bd30      	pop	{r4, r5, pc}
9001f8ec:	68d3      	ldr	r3, [r2, #12]
9001f8ee:	b143      	cbz	r3, 9001f902 <EwMarkSignals+0x2a>
9001f8f0:	685d      	ldr	r5, [r3, #4]
9001f8f2:	b935      	cbnz	r5, 9001f902 <EwMarkSignals+0x2a>
9001f8f4:	6855      	ldr	r5, [r2, #4]
9001f8f6:	686d      	ldr	r5, [r5, #4]
9001f8f8:	b11d      	cbz	r5, 9001f902 <EwMarkSignals+0x2a>
9001f8fa:	6043      	str	r3, [r0, #4]
9001f8fc:	605c      	str	r4, [r3, #4]
9001f8fe:	4618      	mov	r0, r3
9001f900:	e7ed      	b.n	9001f8de <EwMarkSignals+0x6>
9001f902:	4611      	mov	r1, r2
9001f904:	4603      	mov	r3, r0
9001f906:	e7fa      	b.n	9001f8fe <EwMarkSignals+0x26>
9001f908:	68d3      	ldr	r3, [r2, #12]
9001f90a:	b143      	cbz	r3, 9001f91e <EwMarkSignals+0x46>
9001f90c:	685d      	ldr	r5, [r3, #4]
9001f90e:	b935      	cbnz	r5, 9001f91e <EwMarkSignals+0x46>
9001f910:	6855      	ldr	r5, [r2, #4]
9001f912:	686d      	ldr	r5, [r5, #4]
9001f914:	b11d      	cbz	r5, 9001f91e <EwMarkSignals+0x46>
9001f916:	6043      	str	r3, [r0, #4]
9001f918:	605c      	str	r4, [r3, #4]
9001f91a:	4618      	mov	r0, r3
9001f91c:	e7e3      	b.n	9001f8e6 <EwMarkSignals+0xe>
9001f91e:	4611      	mov	r1, r2
9001f920:	4603      	mov	r3, r0
9001f922:	e7fa      	b.n	9001f91a <EwMarkSignals+0x42>
9001f924:	2000031c 	.word	0x2000031c
9001f928:	20000320 	.word	0x20000320

9001f92c <EwDiscardSignals>:
9001f92c:	b510      	push	{r4, lr}
9001f92e:	4c04      	ldr	r4, [pc, #16]	; (9001f940 <EwDiscardSignals+0x14>)
9001f930:	4620      	mov	r0, r4
9001f932:	f7ff ff2d 	bl	9001f790 <EwMathFract+0x2a>
9001f936:	1d20      	adds	r0, r4, #4
9001f938:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f93c:	e728      	b.n	9001f790 <EwMathFract+0x2a>
9001f93e:	bf00      	nop
9001f940:	2000031c 	.word	0x2000031c

9001f944 <EwDisposeObservers>:
9001f944:	b510      	push	{r4, lr}
9001f946:	4c07      	ldr	r4, [pc, #28]	; (9001f964 <EwDisposeObservers+0x20>)
9001f948:	f104 0008 	add.w	r0, r4, #8
9001f94c:	f7ff ff30 	bl	9001f7b0 <EwMathFract+0x4a>
9001f950:	f104 000c 	add.w	r0, r4, #12
9001f954:	f7ff ff2c 	bl	9001f7b0 <EwMathFract+0x4a>
9001f958:	f104 0010 	add.w	r0, r4, #16
9001f95c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f960:	e726      	b.n	9001f7b0 <EwMathFract+0x4a>
9001f962:	bf00      	nop
9001f964:	2000031c 	.word	0x2000031c

9001f968 <EwDisposeSignals>:
9001f968:	b510      	push	{r4, lr}
9001f96a:	4c04      	ldr	r4, [pc, #16]	; (9001f97c <EwDisposeSignals+0x14>)
9001f96c:	4620      	mov	r0, r4
9001f96e:	f7ff ff39 	bl	9001f7e4 <EwMathFract+0x7e>
9001f972:	1d20      	adds	r0, r4, #4
9001f974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f978:	e734      	b.n	9001f7e4 <EwMathFract+0x7e>
9001f97a:	bf00      	nop
9001f97c:	2000031c 	.word	0x2000031c

9001f980 <EwNewSlot>:
9001f980:	e9c0 1200 	strd	r1, r2, [r0]
9001f984:	4770      	bx	lr

9001f986 <EwCompSlot>:
9001f986:	b084      	sub	sp, #16
9001f988:	f10d 0c10 	add.w	ip, sp, #16
9001f98c:	e90c 0003 	stmdb	ip, {r0, r1}
9001f990:	4669      	mov	r1, sp
9001f992:	e881 000c 	stmia.w	r1, {r2, r3}
9001f996:	9b00      	ldr	r3, [sp, #0]
9001f998:	4298      	cmp	r0, r3
9001f99a:	d106      	bne.n	9001f9aa <EwCompSlot+0x24>
9001f99c:	9803      	ldr	r0, [sp, #12]
9001f99e:	9b01      	ldr	r3, [sp, #4]
9001f9a0:	1ac0      	subs	r0, r0, r3
9001f9a2:	bf18      	it	ne
9001f9a4:	2001      	movne	r0, #1
9001f9a6:	b004      	add	sp, #16
9001f9a8:	4770      	bx	lr
9001f9aa:	2001      	movs	r0, #1
9001f9ac:	e7fb      	b.n	9001f9a6 <EwCompSlot+0x20>

9001f9ae <EwIsSlotNull>:
9001f9ae:	b082      	sub	sp, #8
9001f9b0:	ab02      	add	r3, sp, #8
9001f9b2:	e903 0003 	stmdb	r3, {r0, r1}
9001f9b6:	b920      	cbnz	r0, 9001f9c2 <EwIsSlotNull+0x14>
9001f9b8:	fab1 f081 	clz	r0, r1
9001f9bc:	0940      	lsrs	r0, r0, #5
9001f9be:	b002      	add	sp, #8
9001f9c0:	4770      	bx	lr
9001f9c2:	2000      	movs	r0, #0
9001f9c4:	e7fb      	b.n	9001f9be <EwIsSlotNull+0x10>

9001f9c6 <EwSignal>:
9001f9c6:	b082      	sub	sp, #8
9001f9c8:	ab02      	add	r3, sp, #8
9001f9ca:	e903 0003 	stmdb	r3, {r0, r1}
9001f9ce:	4611      	mov	r1, r2
9001f9d0:	b110      	cbz	r0, 9001f9d8 <EwSignal+0x12>
9001f9d2:	9b01      	ldr	r3, [sp, #4]
9001f9d4:	b002      	add	sp, #8
9001f9d6:	4718      	bx	r3
9001f9d8:	b002      	add	sp, #8
9001f9da:	4770      	bx	lr

9001f9dc <EwPostSignal>:
9001f9dc:	b513      	push	{r0, r1, r4, lr}
9001f9de:	466c      	mov	r4, sp
9001f9e0:	4613      	mov	r3, r2
9001f9e2:	e884 0003 	stmia.w	r4, {r0, r1}
9001f9e6:	b160      	cbz	r0, 9001fa02 <EwPostSignal+0x26>
9001f9e8:	4807      	ldr	r0, [pc, #28]	; (9001fa08 <EwPostSignal+0x2c>)
9001f9ea:	e894 0006 	ldmia.w	r4, {r1, r2}
9001f9ee:	f7ff ff15 	bl	9001f81c <EwMathFract+0xb6>
9001f9f2:	b930      	cbnz	r0, 9001fa02 <EwPostSignal+0x26>
9001f9f4:	f44f 709a 	mov.w	r0, #308	; 0x134
9001f9f8:	b002      	add	sp, #8
9001f9fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001f9fe:	f7fd bd27 	b.w	9001d450 <EwError>
9001fa02:	b002      	add	sp, #8
9001fa04:	bd10      	pop	{r4, pc}
9001fa06:	bf00      	nop
9001fa08:	2000031c 	.word	0x2000031c

9001fa0c <EwIdleSignal>:
9001fa0c:	b417      	push	{r0, r1, r2, r4}
9001fa0e:	466c      	mov	r4, sp
9001fa10:	4613      	mov	r3, r2
9001fa12:	e884 0003 	stmia.w	r4, {r0, r1}
9001fa16:	b130      	cbz	r0, 9001fa26 <EwIdleSignal+0x1a>
9001fa18:	4805      	ldr	r0, [pc, #20]	; (9001fa30 <EwIdleSignal+0x24>)
9001fa1a:	e894 0006 	ldmia.w	r4, {r1, r2}
9001fa1e:	b003      	add	sp, #12
9001fa20:	f85d 4b04 	ldr.w	r4, [sp], #4
9001fa24:	e6fa      	b.n	9001f81c <EwMathFract+0xb6>
9001fa26:	b003      	add	sp, #12
9001fa28:	f85d 4b04 	ldr.w	r4, [sp], #4
9001fa2c:	4770      	bx	lr
9001fa2e:	bf00      	nop
9001fa30:	20000320 	.word	0x20000320

9001fa34 <EwProcessSignals>:
9001fa34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001fa38:	4c11      	ldr	r4, [pc, #68]	; (9001fa80 <EwProcessSignals+0x4c>)
9001fa3a:	f04f 0801 	mov.w	r8, #1
9001fa3e:	4f11      	ldr	r7, [pc, #68]	; (9001fa84 <EwProcessSignals+0x50>)
9001fa40:	6826      	ldr	r6, [r4, #0]
9001fa42:	3e00      	subs	r6, #0
9001fa44:	bf18      	it	ne
9001fa46:	2601      	movne	r6, #1
9001fa48:	6825      	ldr	r5, [r4, #0]
9001fa4a:	b945      	cbnz	r5, 9001fa5e <EwProcessSignals+0x2a>
9001fa4c:	480c      	ldr	r0, [pc, #48]	; (9001fa80 <EwProcessSignals+0x4c>)
9001fa4e:	f7ff fe9f 	bl	9001f790 <EwMathFract+0x2a>
9001fa52:	6863      	ldr	r3, [r4, #4]
9001fa54:	4630      	mov	r0, r6
9001fa56:	e9c4 3500 	strd	r3, r5, [r4]
9001fa5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001fa5e:	e9d5 3102 	ldrd	r3, r1, [r5, #8]
9001fa62:	6868      	ldr	r0, [r5, #4]
9001fa64:	f8c5 8010 	str.w	r8, [r5, #16]
9001fa68:	4798      	blx	r3
9001fa6a:	6823      	ldr	r3, [r4, #0]
9001fa6c:	4628      	mov	r0, r5
9001fa6e:	681b      	ldr	r3, [r3, #0]
9001fa70:	6023      	str	r3, [r4, #0]
9001fa72:	683b      	ldr	r3, [r7, #0]
9001fa74:	3b14      	subs	r3, #20
9001fa76:	603b      	str	r3, [r7, #0]
9001fa78:	f007 f91e 	bl	90026cb8 <EwFree>
9001fa7c:	e7e4      	b.n	9001fa48 <EwProcessSignals+0x14>
9001fa7e:	bf00      	nop
9001fa80:	2000031c 	.word	0x2000031c
9001fa84:	200002ac 	.word	0x200002ac

9001fa88 <EwAnyPendingSignals>:
9001fa88:	4b04      	ldr	r3, [pc, #16]	; (9001fa9c <EwAnyPendingSignals+0x14>)
9001fa8a:	681a      	ldr	r2, [r3, #0]
9001fa8c:	b922      	cbnz	r2, 9001fa98 <EwAnyPendingSignals+0x10>
9001fa8e:	6858      	ldr	r0, [r3, #4]
9001fa90:	3800      	subs	r0, #0
9001fa92:	bf18      	it	ne
9001fa94:	2001      	movne	r0, #1
9001fa96:	4770      	bx	lr
9001fa98:	2001      	movs	r0, #1
9001fa9a:	4770      	bx	lr
9001fa9c:	2000031c 	.word	0x2000031c

9001faa0 <EwAttachObjObserver>:
9001faa0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9001faa4:	466e      	mov	r6, sp
9001faa6:	4617      	mov	r7, r2
9001faa8:	461d      	mov	r5, r3
9001faaa:	4604      	mov	r4, r0
9001faac:	e886 0003 	stmia.w	r6, {r0, r1}
9001fab0:	b1a8      	cbz	r0, 9001fade <EwAttachObjObserver+0x3e>
9001fab2:	b35a      	cbz	r2, 9001fb0c <EwAttachObjObserver+0x6c>
9001fab4:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 9001fb6c <EwAttachObjObserver+0xcc>
9001fab8:	9a01      	ldr	r2, [sp, #4]
9001faba:	f8d8 100c 	ldr.w	r1, [r8, #12]
9001fabe:	b1a1      	cbz	r1, 9001faea <EwAttachObjObserver+0x4a>
9001fac0:	684b      	ldr	r3, [r1, #4]
9001fac2:	42a3      	cmp	r3, r4
9001fac4:	d10f      	bne.n	9001fae6 <EwAttachObjObserver+0x46>
9001fac6:	688b      	ldr	r3, [r1, #8]
9001fac8:	4293      	cmp	r3, r2
9001faca:	d10c      	bne.n	9001fae6 <EwAttachObjObserver+0x46>
9001facc:	68cb      	ldr	r3, [r1, #12]
9001face:	42bb      	cmp	r3, r7
9001fad0:	d109      	bne.n	9001fae6 <EwAttachObjObserver+0x46>
9001fad2:	6908      	ldr	r0, [r1, #16]
9001fad4:	b938      	cbnz	r0, 9001fae6 <EwAttachObjObserver+0x46>
9001fad6:	694b      	ldr	r3, [r1, #20]
9001fad8:	42ab      	cmp	r3, r5
9001fada:	d104      	bne.n	9001fae6 <EwAttachObjObserver+0x46>
9001fadc:	4604      	mov	r4, r0
9001fade:	4620      	mov	r0, r4
9001fae0:	b002      	add	sp, #8
9001fae2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001fae6:	6809      	ldr	r1, [r1, #0]
9001fae8:	e7e9      	b.n	9001fabe <EwAttachObjObserver+0x1e>
9001faea:	2018      	movs	r0, #24
9001faec:	f007 f8e2 	bl	90026cb4 <EwAlloc>
9001faf0:	4604      	mov	r4, r0
9001faf2:	b968      	cbnz	r0, 9001fb10 <EwAttachObjObserver+0x70>
9001faf4:	2005      	movs	r0, #5
9001faf6:	f7fe fc5d 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001fafa:	4604      	mov	r4, r0
9001fafc:	2800      	cmp	r0, #0
9001fafe:	d1f4      	bne.n	9001faea <EwAttachObjObserver+0x4a>
9001fb00:	2005      	movs	r0, #5
9001fb02:	f7fd fca5 	bl	9001d450 <EwError>
9001fb06:	f007 f8d9 	bl	90026cbc <EwPanic>
9001fb0a:	e7e8      	b.n	9001fade <EwAttachObjObserver+0x3e>
9001fb0c:	4614      	mov	r4, r2
9001fb0e:	e7e6      	b.n	9001fade <EwAttachObjObserver+0x3e>
9001fb10:	1d03      	adds	r3, r0, #4
9001fb12:	4a11      	ldr	r2, [pc, #68]	; (9001fb58 <EwAttachObjObserver+0xb8>)
9001fb14:	e896 0003 	ldmia.w	r6, {r0, r1}
9001fb18:	e883 0003 	stmia.w	r3, {r0, r1}
9001fb1c:	2300      	movs	r3, #0
9001fb1e:	60e7      	str	r7, [r4, #12]
9001fb20:	e9c4 3504 	strd	r3, r5, [r4, #16]
9001fb24:	f8d8 300c 	ldr.w	r3, [r8, #12]
9001fb28:	6023      	str	r3, [r4, #0]
9001fb2a:	6813      	ldr	r3, [r2, #0]
9001fb2c:	f8c8 400c 	str.w	r4, [r8, #12]
9001fb30:	3318      	adds	r3, #24
9001fb32:	6013      	str	r3, [r2, #0]
9001fb34:	4a09      	ldr	r2, [pc, #36]	; (9001fb5c <EwAttachObjObserver+0xbc>)
9001fb36:	6811      	ldr	r1, [r2, #0]
9001fb38:	428b      	cmp	r3, r1
9001fb3a:	dd00      	ble.n	9001fb3e <EwAttachObjObserver+0x9e>
9001fb3c:	6013      	str	r3, [r2, #0]
9001fb3e:	4a08      	ldr	r2, [pc, #32]	; (9001fb60 <EwAttachObjObserver+0xc0>)
9001fb40:	6812      	ldr	r2, [r2, #0]
9001fb42:	4413      	add	r3, r2
9001fb44:	4a07      	ldr	r2, [pc, #28]	; (9001fb64 <EwAttachObjObserver+0xc4>)
9001fb46:	6812      	ldr	r2, [r2, #0]
9001fb48:	4413      	add	r3, r2
9001fb4a:	4a07      	ldr	r2, [pc, #28]	; (9001fb68 <EwAttachObjObserver+0xc8>)
9001fb4c:	6811      	ldr	r1, [r2, #0]
9001fb4e:	428b      	cmp	r3, r1
9001fb50:	dd00      	ble.n	9001fb54 <EwAttachObjObserver+0xb4>
9001fb52:	6013      	str	r3, [r2, #0]
9001fb54:	2401      	movs	r4, #1
9001fb56:	e7c2      	b.n	9001fade <EwAttachObjObserver+0x3e>
9001fb58:	200002ac 	.word	0x200002ac
9001fb5c:	200002b4 	.word	0x200002b4
9001fb60:	200002b8 	.word	0x200002b8
9001fb64:	200002bc 	.word	0x200002bc
9001fb68:	200002c0 	.word	0x200002c0
9001fb6c:	2000031c 	.word	0x2000031c

9001fb70 <EwAttachRefObserver>:
9001fb70:	b082      	sub	sp, #8
9001fb72:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
9001fb76:	466d      	mov	r5, sp
9001fb78:	9e0d      	ldr	r6, [sp, #52]	; 0x34
9001fb7a:	4604      	mov	r4, r0
9001fb7c:	e885 0003 	stmia.w	r5, {r0, r1}
9001fb80:	a90a      	add	r1, sp, #40	; 0x28
9001fb82:	e881 000c 	stmia.w	r1, {r2, r3}
9001fb86:	b1c0      	cbz	r0, 9001fbba <EwAttachRefObserver+0x4a>
9001fb88:	4690      	mov	r8, r2
9001fb8a:	b1aa      	cbz	r2, 9001fbb8 <EwAttachRefObserver+0x48>
9001fb8c:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 9001fc48 <EwAttachRefObserver+0xd8>
9001fb90:	461f      	mov	r7, r3
9001fb92:	9901      	ldr	r1, [sp, #4]
9001fb94:	f8d9 3010 	ldr.w	r3, [r9, #16]
9001fb98:	b1bb      	cbz	r3, 9001fbca <EwAttachRefObserver+0x5a>
9001fb9a:	685a      	ldr	r2, [r3, #4]
9001fb9c:	42a2      	cmp	r2, r4
9001fb9e:	d112      	bne.n	9001fbc6 <EwAttachRefObserver+0x56>
9001fba0:	689a      	ldr	r2, [r3, #8]
9001fba2:	428a      	cmp	r2, r1
9001fba4:	d10f      	bne.n	9001fbc6 <EwAttachRefObserver+0x56>
9001fba6:	68da      	ldr	r2, [r3, #12]
9001fba8:	4542      	cmp	r2, r8
9001fbaa:	d10c      	bne.n	9001fbc6 <EwAttachRefObserver+0x56>
9001fbac:	691a      	ldr	r2, [r3, #16]
9001fbae:	42ba      	cmp	r2, r7
9001fbb0:	d109      	bne.n	9001fbc6 <EwAttachRefObserver+0x56>
9001fbb2:	695a      	ldr	r2, [r3, #20]
9001fbb4:	42b2      	cmp	r2, r6
9001fbb6:	d106      	bne.n	9001fbc6 <EwAttachRefObserver+0x56>
9001fbb8:	2400      	movs	r4, #0
9001fbba:	4620      	mov	r0, r4
9001fbbc:	b003      	add	sp, #12
9001fbbe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001fbc2:	b002      	add	sp, #8
9001fbc4:	4770      	bx	lr
9001fbc6:	681b      	ldr	r3, [r3, #0]
9001fbc8:	e7e6      	b.n	9001fb98 <EwAttachRefObserver+0x28>
9001fbca:	2018      	movs	r0, #24
9001fbcc:	f007 f872 	bl	90026cb4 <EwAlloc>
9001fbd0:	4603      	mov	r3, r0
9001fbd2:	b958      	cbnz	r0, 9001fbec <EwAttachRefObserver+0x7c>
9001fbd4:	2006      	movs	r0, #6
9001fbd6:	f7fe fbed 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001fbda:	4604      	mov	r4, r0
9001fbdc:	2800      	cmp	r0, #0
9001fbde:	d1f4      	bne.n	9001fbca <EwAttachRefObserver+0x5a>
9001fbe0:	2006      	movs	r0, #6
9001fbe2:	f7fd fc35 	bl	9001d450 <EwError>
9001fbe6:	f007 f869 	bl	90026cbc <EwPanic>
9001fbea:	e7e6      	b.n	9001fbba <EwAttachRefObserver+0x4a>
9001fbec:	1d02      	adds	r2, r0, #4
9001fbee:	e895 0003 	ldmia.w	r5, {r0, r1}
9001fbf2:	e882 0003 	stmia.w	r2, {r0, r1}
9001fbf6:	f8d9 2010 	ldr.w	r2, [r9, #16]
9001fbfa:	615e      	str	r6, [r3, #20]
9001fbfc:	601a      	str	r2, [r3, #0]
9001fbfe:	4a0d      	ldr	r2, [pc, #52]	; (9001fc34 <EwAttachRefObserver+0xc4>)
9001fc00:	f8c9 3010 	str.w	r3, [r9, #16]
9001fc04:	e9c3 8703 	strd	r8, r7, [r3, #12]
9001fc08:	6813      	ldr	r3, [r2, #0]
9001fc0a:	3318      	adds	r3, #24
9001fc0c:	6013      	str	r3, [r2, #0]
9001fc0e:	4a0a      	ldr	r2, [pc, #40]	; (9001fc38 <EwAttachRefObserver+0xc8>)
9001fc10:	6811      	ldr	r1, [r2, #0]
9001fc12:	428b      	cmp	r3, r1
9001fc14:	dd00      	ble.n	9001fc18 <EwAttachRefObserver+0xa8>
9001fc16:	6013      	str	r3, [r2, #0]
9001fc18:	4a08      	ldr	r2, [pc, #32]	; (9001fc3c <EwAttachRefObserver+0xcc>)
9001fc1a:	2401      	movs	r4, #1
9001fc1c:	6812      	ldr	r2, [r2, #0]
9001fc1e:	4413      	add	r3, r2
9001fc20:	4a07      	ldr	r2, [pc, #28]	; (9001fc40 <EwAttachRefObserver+0xd0>)
9001fc22:	6812      	ldr	r2, [r2, #0]
9001fc24:	4413      	add	r3, r2
9001fc26:	4a07      	ldr	r2, [pc, #28]	; (9001fc44 <EwAttachRefObserver+0xd4>)
9001fc28:	6811      	ldr	r1, [r2, #0]
9001fc2a:	428b      	cmp	r3, r1
9001fc2c:	bfc8      	it	gt
9001fc2e:	6013      	strgt	r3, [r2, #0]
9001fc30:	e7c3      	b.n	9001fbba <EwAttachRefObserver+0x4a>
9001fc32:	bf00      	nop
9001fc34:	200002ac 	.word	0x200002ac
9001fc38:	200002b4 	.word	0x200002b4
9001fc3c:	200002b8 	.word	0x200002b8
9001fc40:	200002bc 	.word	0x200002bc
9001fc44:	200002c0 	.word	0x200002c0
9001fc48:	2000031c 	.word	0x2000031c

9001fc4c <EwAttachObserver>:
9001fc4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001fc4e:	466e      	mov	r6, sp
9001fc50:	4615      	mov	r5, r2
9001fc52:	4604      	mov	r4, r0
9001fc54:	e886 0003 	stmia.w	r6, {r0, r1}
9001fc58:	b180      	cbz	r0, 9001fc7c <EwAttachObserver+0x30>
9001fc5a:	4f24      	ldr	r7, [pc, #144]	; (9001fcec <EwAttachObserver+0xa0>)
9001fc5c:	68bb      	ldr	r3, [r7, #8]
9001fc5e:	b193      	cbz	r3, 9001fc86 <EwAttachObserver+0x3a>
9001fc60:	685a      	ldr	r2, [r3, #4]
9001fc62:	42a2      	cmp	r2, r4
9001fc64:	d10d      	bne.n	9001fc82 <EwAttachObserver+0x36>
9001fc66:	689a      	ldr	r2, [r3, #8]
9001fc68:	428a      	cmp	r2, r1
9001fc6a:	d10a      	bne.n	9001fc82 <EwAttachObserver+0x36>
9001fc6c:	68da      	ldr	r2, [r3, #12]
9001fc6e:	b942      	cbnz	r2, 9001fc82 <EwAttachObserver+0x36>
9001fc70:	6918      	ldr	r0, [r3, #16]
9001fc72:	b930      	cbnz	r0, 9001fc82 <EwAttachObserver+0x36>
9001fc74:	695a      	ldr	r2, [r3, #20]
9001fc76:	42aa      	cmp	r2, r5
9001fc78:	d103      	bne.n	9001fc82 <EwAttachObserver+0x36>
9001fc7a:	4604      	mov	r4, r0
9001fc7c:	4620      	mov	r0, r4
9001fc7e:	b003      	add	sp, #12
9001fc80:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001fc82:	681b      	ldr	r3, [r3, #0]
9001fc84:	e7eb      	b.n	9001fc5e <EwAttachObserver+0x12>
9001fc86:	2018      	movs	r0, #24
9001fc88:	f007 f814 	bl	90026cb4 <EwAlloc>
9001fc8c:	4603      	mov	r3, r0
9001fc8e:	b958      	cbnz	r0, 9001fca8 <EwAttachObserver+0x5c>
9001fc90:	2007      	movs	r0, #7
9001fc92:	f7fe fb8f 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001fc96:	4604      	mov	r4, r0
9001fc98:	2800      	cmp	r0, #0
9001fc9a:	d1f4      	bne.n	9001fc86 <EwAttachObserver+0x3a>
9001fc9c:	2007      	movs	r0, #7
9001fc9e:	f7fd fbd7 	bl	9001d450 <EwError>
9001fca2:	f007 f80b 	bl	90026cbc <EwPanic>
9001fca6:	e7e9      	b.n	9001fc7c <EwAttachObserver+0x30>
9001fca8:	1d02      	adds	r2, r0, #4
9001fcaa:	e896 0003 	ldmia.w	r6, {r0, r1}
9001fcae:	e882 0003 	stmia.w	r2, {r0, r1}
9001fcb2:	2200      	movs	r2, #0
9001fcb4:	615d      	str	r5, [r3, #20]
9001fcb6:	e9c3 2203 	strd	r2, r2, [r3, #12]
9001fcba:	68ba      	ldr	r2, [r7, #8]
9001fcbc:	601a      	str	r2, [r3, #0]
9001fcbe:	4a0c      	ldr	r2, [pc, #48]	; (9001fcf0 <EwAttachObserver+0xa4>)
9001fcc0:	60bb      	str	r3, [r7, #8]
9001fcc2:	6813      	ldr	r3, [r2, #0]
9001fcc4:	3318      	adds	r3, #24
9001fcc6:	6013      	str	r3, [r2, #0]
9001fcc8:	4a0a      	ldr	r2, [pc, #40]	; (9001fcf4 <EwAttachObserver+0xa8>)
9001fcca:	6811      	ldr	r1, [r2, #0]
9001fccc:	428b      	cmp	r3, r1
9001fcce:	dd00      	ble.n	9001fcd2 <EwAttachObserver+0x86>
9001fcd0:	6013      	str	r3, [r2, #0]
9001fcd2:	4a09      	ldr	r2, [pc, #36]	; (9001fcf8 <EwAttachObserver+0xac>)
9001fcd4:	2401      	movs	r4, #1
9001fcd6:	6812      	ldr	r2, [r2, #0]
9001fcd8:	4413      	add	r3, r2
9001fcda:	4a08      	ldr	r2, [pc, #32]	; (9001fcfc <EwAttachObserver+0xb0>)
9001fcdc:	6812      	ldr	r2, [r2, #0]
9001fcde:	4413      	add	r3, r2
9001fce0:	4a07      	ldr	r2, [pc, #28]	; (9001fd00 <EwAttachObserver+0xb4>)
9001fce2:	6811      	ldr	r1, [r2, #0]
9001fce4:	428b      	cmp	r3, r1
9001fce6:	bfc8      	it	gt
9001fce8:	6013      	strgt	r3, [r2, #0]
9001fcea:	e7c7      	b.n	9001fc7c <EwAttachObserver+0x30>
9001fcec:	2000031c 	.word	0x2000031c
9001fcf0:	200002ac 	.word	0x200002ac
9001fcf4:	200002b4 	.word	0x200002b4
9001fcf8:	200002b8 	.word	0x200002b8
9001fcfc:	200002bc 	.word	0x200002bc
9001fd00:	200002c0 	.word	0x200002c0

9001fd04 <EwDetachObjObserver>:
9001fd04:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001fd06:	ac02      	add	r4, sp, #8
9001fd08:	e904 0003 	stmdb	r4, {r0, r1}
9001fd0c:	4604      	mov	r4, r0
9001fd0e:	b308      	cbz	r0, 9001fd54 <EwDetachObjObserver+0x50>
9001fd10:	b1fa      	cbz	r2, 9001fd52 <EwDetachObjObserver+0x4e>
9001fd12:	4911      	ldr	r1, [pc, #68]	; (9001fd58 <EwDetachObjObserver+0x54>)
9001fd14:	9e01      	ldr	r6, [sp, #4]
9001fd16:	f851 0f0c 	ldr.w	r0, [r1, #12]!
9001fd1a:	b1d8      	cbz	r0, 9001fd54 <EwDetachObjObserver+0x50>
9001fd1c:	6845      	ldr	r5, [r0, #4]
9001fd1e:	42a5      	cmp	r5, r4
9001fd20:	d114      	bne.n	9001fd4c <EwDetachObjObserver+0x48>
9001fd22:	6885      	ldr	r5, [r0, #8]
9001fd24:	42b5      	cmp	r5, r6
9001fd26:	d111      	bne.n	9001fd4c <EwDetachObjObserver+0x48>
9001fd28:	68c5      	ldr	r5, [r0, #12]
9001fd2a:	4295      	cmp	r5, r2
9001fd2c:	d10e      	bne.n	9001fd4c <EwDetachObjObserver+0x48>
9001fd2e:	6905      	ldr	r5, [r0, #16]
9001fd30:	b965      	cbnz	r5, 9001fd4c <EwDetachObjObserver+0x48>
9001fd32:	6945      	ldr	r5, [r0, #20]
9001fd34:	429d      	cmp	r5, r3
9001fd36:	d109      	bne.n	9001fd4c <EwDetachObjObserver+0x48>
9001fd38:	6803      	ldr	r3, [r0, #0]
9001fd3a:	4a08      	ldr	r2, [pc, #32]	; (9001fd5c <EwDetachObjObserver+0x58>)
9001fd3c:	600b      	str	r3, [r1, #0]
9001fd3e:	6813      	ldr	r3, [r2, #0]
9001fd40:	3b18      	subs	r3, #24
9001fd42:	6013      	str	r3, [r2, #0]
9001fd44:	f006 ffb8 	bl	90026cb8 <EwFree>
9001fd48:	2001      	movs	r0, #1
9001fd4a:	e003      	b.n	9001fd54 <EwDetachObjObserver+0x50>
9001fd4c:	4601      	mov	r1, r0
9001fd4e:	6800      	ldr	r0, [r0, #0]
9001fd50:	e7e3      	b.n	9001fd1a <EwDetachObjObserver+0x16>
9001fd52:	4610      	mov	r0, r2
9001fd54:	b002      	add	sp, #8
9001fd56:	bd70      	pop	{r4, r5, r6, pc}
9001fd58:	2000031c 	.word	0x2000031c
9001fd5c:	200002ac 	.word	0x200002ac

9001fd60 <EwDetachRefObserver>:
9001fd60:	b082      	sub	sp, #8
9001fd62:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001fd64:	ac02      	add	r4, sp, #8
9001fd66:	e904 0003 	stmdb	r4, {r0, r1}
9001fd6a:	a908      	add	r1, sp, #32
9001fd6c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001fd6e:	e881 000c 	stmia.w	r1, {r2, r3}
9001fd72:	4601      	mov	r1, r0
9001fd74:	b318      	cbz	r0, 9001fdbe <EwDetachRefObserver+0x5e>
9001fd76:	b30a      	cbz	r2, 9001fdbc <EwDetachRefObserver+0x5c>
9001fd78:	4b13      	ldr	r3, [pc, #76]	; (9001fdc8 <EwDetachRefObserver+0x68>)
9001fd7a:	9e01      	ldr	r6, [sp, #4]
9001fd7c:	f853 0f10 	ldr.w	r0, [r3, #16]!
9001fd80:	9f09      	ldr	r7, [sp, #36]	; 0x24
9001fd82:	b1e0      	cbz	r0, 9001fdbe <EwDetachRefObserver+0x5e>
9001fd84:	6845      	ldr	r5, [r0, #4]
9001fd86:	428d      	cmp	r5, r1
9001fd88:	d115      	bne.n	9001fdb6 <EwDetachRefObserver+0x56>
9001fd8a:	6885      	ldr	r5, [r0, #8]
9001fd8c:	42b5      	cmp	r5, r6
9001fd8e:	d112      	bne.n	9001fdb6 <EwDetachRefObserver+0x56>
9001fd90:	68c5      	ldr	r5, [r0, #12]
9001fd92:	4295      	cmp	r5, r2
9001fd94:	d10f      	bne.n	9001fdb6 <EwDetachRefObserver+0x56>
9001fd96:	6905      	ldr	r5, [r0, #16]
9001fd98:	42bd      	cmp	r5, r7
9001fd9a:	d10c      	bne.n	9001fdb6 <EwDetachRefObserver+0x56>
9001fd9c:	6945      	ldr	r5, [r0, #20]
9001fd9e:	42a5      	cmp	r5, r4
9001fda0:	d109      	bne.n	9001fdb6 <EwDetachRefObserver+0x56>
9001fda2:	6802      	ldr	r2, [r0, #0]
9001fda4:	601a      	str	r2, [r3, #0]
9001fda6:	4a09      	ldr	r2, [pc, #36]	; (9001fdcc <EwDetachRefObserver+0x6c>)
9001fda8:	6813      	ldr	r3, [r2, #0]
9001fdaa:	3b18      	subs	r3, #24
9001fdac:	6013      	str	r3, [r2, #0]
9001fdae:	f006 ff83 	bl	90026cb8 <EwFree>
9001fdb2:	2001      	movs	r0, #1
9001fdb4:	e003      	b.n	9001fdbe <EwDetachRefObserver+0x5e>
9001fdb6:	4603      	mov	r3, r0
9001fdb8:	6800      	ldr	r0, [r0, #0]
9001fdba:	e7e2      	b.n	9001fd82 <EwDetachRefObserver+0x22>
9001fdbc:	4610      	mov	r0, r2
9001fdbe:	b003      	add	sp, #12
9001fdc0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001fdc4:	b002      	add	sp, #8
9001fdc6:	4770      	bx	lr
9001fdc8:	2000031c 	.word	0x2000031c
9001fdcc:	200002ac 	.word	0x200002ac

9001fdd0 <EwDetachObserver>:
9001fdd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001fdd2:	ab02      	add	r3, sp, #8
9001fdd4:	e903 0003 	stmdb	r3, {r0, r1}
9001fdd8:	4601      	mov	r1, r0
9001fdda:	b1d0      	cbz	r0, 9001fe12 <EwDetachObserver+0x42>
9001fddc:	4b0f      	ldr	r3, [pc, #60]	; (9001fe1c <EwDetachObserver+0x4c>)
9001fdde:	9d01      	ldr	r5, [sp, #4]
9001fde0:	f853 0f08 	ldr.w	r0, [r3, #8]!
9001fde4:	b1a8      	cbz	r0, 9001fe12 <EwDetachObserver+0x42>
9001fde6:	6844      	ldr	r4, [r0, #4]
9001fde8:	428c      	cmp	r4, r1
9001fdea:	d114      	bne.n	9001fe16 <EwDetachObserver+0x46>
9001fdec:	6884      	ldr	r4, [r0, #8]
9001fdee:	42ac      	cmp	r4, r5
9001fdf0:	d111      	bne.n	9001fe16 <EwDetachObserver+0x46>
9001fdf2:	68c4      	ldr	r4, [r0, #12]
9001fdf4:	b97c      	cbnz	r4, 9001fe16 <EwDetachObserver+0x46>
9001fdf6:	6904      	ldr	r4, [r0, #16]
9001fdf8:	b96c      	cbnz	r4, 9001fe16 <EwDetachObserver+0x46>
9001fdfa:	6944      	ldr	r4, [r0, #20]
9001fdfc:	4294      	cmp	r4, r2
9001fdfe:	d10a      	bne.n	9001fe16 <EwDetachObserver+0x46>
9001fe00:	6802      	ldr	r2, [r0, #0]
9001fe02:	601a      	str	r2, [r3, #0]
9001fe04:	4a06      	ldr	r2, [pc, #24]	; (9001fe20 <EwDetachObserver+0x50>)
9001fe06:	6813      	ldr	r3, [r2, #0]
9001fe08:	3b18      	subs	r3, #24
9001fe0a:	6013      	str	r3, [r2, #0]
9001fe0c:	f006 ff54 	bl	90026cb8 <EwFree>
9001fe10:	2001      	movs	r0, #1
9001fe12:	b003      	add	sp, #12
9001fe14:	bd30      	pop	{r4, r5, pc}
9001fe16:	4603      	mov	r3, r0
9001fe18:	6800      	ldr	r0, [r0, #0]
9001fe1a:	e7e3      	b.n	9001fde4 <EwDetachObserver+0x14>
9001fe1c:	2000031c 	.word	0x2000031c
9001fe20:	200002ac 	.word	0x200002ac

9001fe24 <EwNotifyObjObservers>:
9001fe24:	b570      	push	{r4, r5, r6, lr}
9001fe26:	460e      	mov	r6, r1
9001fe28:	4605      	mov	r5, r0
9001fe2a:	b110      	cbz	r0, 9001fe32 <EwNotifyObjObservers+0xe>
9001fe2c:	4b08      	ldr	r3, [pc, #32]	; (9001fe50 <EwNotifyObjObservers+0x2c>)
9001fe2e:	68dc      	ldr	r4, [r3, #12]
9001fe30:	b904      	cbnz	r4, 9001fe34 <EwNotifyObjObservers+0x10>
9001fe32:	bd70      	pop	{r4, r5, r6, pc}
9001fe34:	68e3      	ldr	r3, [r4, #12]
9001fe36:	42ab      	cmp	r3, r5
9001fe38:	d108      	bne.n	9001fe4c <EwNotifyObjObservers+0x28>
9001fe3a:	6922      	ldr	r2, [r4, #16]
9001fe3c:	b932      	cbnz	r2, 9001fe4c <EwNotifyObjObservers+0x28>
9001fe3e:	6963      	ldr	r3, [r4, #20]
9001fe40:	42b3      	cmp	r3, r6
9001fe42:	d103      	bne.n	9001fe4c <EwNotifyObjObservers+0x28>
9001fe44:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
9001fe48:	f7ff fdc8 	bl	9001f9dc <EwPostSignal>
9001fe4c:	6824      	ldr	r4, [r4, #0]
9001fe4e:	e7ef      	b.n	9001fe30 <EwNotifyObjObservers+0xc>
9001fe50:	2000031c 	.word	0x2000031c

9001fe54 <EwNotifyRefObservers>:
9001fe54:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001fe56:	ac04      	add	r4, sp, #16
9001fe58:	461d      	mov	r5, r3
9001fe5a:	4606      	mov	r6, r0
9001fe5c:	e904 0007 	stmdb	r4, {r0, r1, r2}
9001fe60:	b110      	cbz	r0, 9001fe68 <EwNotifyRefObservers+0x14>
9001fe62:	4b0b      	ldr	r3, [pc, #44]	; (9001fe90 <EwNotifyRefObservers+0x3c>)
9001fe64:	691c      	ldr	r4, [r3, #16]
9001fe66:	b90c      	cbnz	r4, 9001fe6c <EwNotifyRefObservers+0x18>
9001fe68:	b004      	add	sp, #16
9001fe6a:	bd70      	pop	{r4, r5, r6, pc}
9001fe6c:	68e3      	ldr	r3, [r4, #12]
9001fe6e:	42b3      	cmp	r3, r6
9001fe70:	d10b      	bne.n	9001fe8a <EwNotifyRefObservers+0x36>
9001fe72:	6922      	ldr	r2, [r4, #16]
9001fe74:	9b02      	ldr	r3, [sp, #8]
9001fe76:	429a      	cmp	r2, r3
9001fe78:	d107      	bne.n	9001fe8a <EwNotifyRefObservers+0x36>
9001fe7a:	6963      	ldr	r3, [r4, #20]
9001fe7c:	42ab      	cmp	r3, r5
9001fe7e:	d104      	bne.n	9001fe8a <EwNotifyRefObservers+0x36>
9001fe80:	2200      	movs	r2, #0
9001fe82:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
9001fe86:	f7ff fda9 	bl	9001f9dc <EwPostSignal>
9001fe8a:	6824      	ldr	r4, [r4, #0]
9001fe8c:	e7eb      	b.n	9001fe66 <EwNotifyRefObservers+0x12>
9001fe8e:	bf00      	nop
9001fe90:	2000031c 	.word	0x2000031c

9001fe94 <EwNotifyObservers>:
9001fe94:	b538      	push	{r3, r4, r5, lr}
9001fe96:	4b09      	ldr	r3, [pc, #36]	; (9001febc <EwNotifyObservers+0x28>)
9001fe98:	4605      	mov	r5, r0
9001fe9a:	689c      	ldr	r4, [r3, #8]
9001fe9c:	b904      	cbnz	r4, 9001fea0 <EwNotifyObservers+0xc>
9001fe9e:	bd38      	pop	{r3, r4, r5, pc}
9001fea0:	68e3      	ldr	r3, [r4, #12]
9001fea2:	b943      	cbnz	r3, 9001feb6 <EwNotifyObservers+0x22>
9001fea4:	6922      	ldr	r2, [r4, #16]
9001fea6:	b932      	cbnz	r2, 9001feb6 <EwNotifyObservers+0x22>
9001fea8:	6963      	ldr	r3, [r4, #20]
9001feaa:	42ab      	cmp	r3, r5
9001feac:	d103      	bne.n	9001feb6 <EwNotifyObservers+0x22>
9001feae:	e9d4 0101 	ldrd	r0, r1, [r4, #4]
9001feb2:	f7ff fd93 	bl	9001f9dc <EwPostSignal>
9001feb6:	6824      	ldr	r4, [r4, #0]
9001feb8:	e7f0      	b.n	9001fe9c <EwNotifyObservers+0x8>
9001feba:	bf00      	nop
9001febc:	2000031c 	.word	0x2000031c
9001fec0:	f100 0310 	add.w	r3, r0, #16
9001fec4:	2000      	movs	r0, #0
9001fec6:	881a      	ldrh	r2, [r3, #0]
9001fec8:	b902      	cbnz	r2, 9001fecc <EwNotifyObservers+0x38>
9001feca:	4770      	bx	lr
9001fecc:	eb03 0342 	add.w	r3, r3, r2, lsl #1
9001fed0:	3001      	adds	r0, #1
9001fed2:	e7f8      	b.n	9001fec6 <EwNotifyObservers+0x32>
9001fed4:	b160      	cbz	r0, 9001fef0 <EwNotifyObservers+0x5c>
9001fed6:	2900      	cmp	r1, #0
9001fed8:	db09      	blt.n	9001feee <EwNotifyObservers+0x5a>
9001feda:	eb00 0141 	add.w	r1, r0, r1, lsl #1
9001fede:	1e83      	subs	r3, r0, #2
9001fee0:	f833 0f02 	ldrh.w	r0, [r3, #2]!
9001fee4:	4299      	cmp	r1, r3
9001fee6:	d903      	bls.n	9001fef0 <EwNotifyObservers+0x5c>
9001fee8:	2800      	cmp	r0, #0
9001feea:	d1f9      	bne.n	9001fee0 <EwNotifyObservers+0x4c>
9001feec:	4770      	bx	lr
9001feee:	2000      	movs	r0, #0
9001fef0:	4770      	bx	lr
9001fef2:	4603      	mov	r3, r0
9001fef4:	4618      	mov	r0, r3
9001fef6:	b133      	cbz	r3, 9001ff06 <EwNotifyObservers+0x72>
9001fef8:	f833 2b02 	ldrh.w	r2, [r3], #2
9001fefc:	2a20      	cmp	r2, #32
9001fefe:	d0f9      	beq.n	9001fef4 <EwNotifyObservers+0x60>
9001ff00:	3a09      	subs	r2, #9
9001ff02:	2a04      	cmp	r2, #4
9001ff04:	d9f6      	bls.n	9001fef4 <EwNotifyObservers+0x60>
9001ff06:	4770      	bx	lr
9001ff08:	e9d0 2100 	ldrd	r2, r1, [r0]
9001ff0c:	4b08      	ldr	r3, [pc, #32]	; (9001ff30 <EwNotifyObservers+0x9c>)
9001ff0e:	b15a      	cbz	r2, 9001ff28 <EwNotifyObservers+0x94>
9001ff10:	6051      	str	r1, [r2, #4]
9001ff12:	6841      	ldr	r1, [r0, #4]
9001ff14:	b151      	cbz	r1, 9001ff2c <EwNotifyObservers+0x98>
9001ff16:	600a      	str	r2, [r1, #0]
9001ff18:	2200      	movs	r2, #0
9001ff1a:	6881      	ldr	r1, [r0, #8]
9001ff1c:	e9c0 2200 	strd	r2, r2, [r0]
9001ff20:	689a      	ldr	r2, [r3, #8]
9001ff22:	1a52      	subs	r2, r2, r1
9001ff24:	609a      	str	r2, [r3, #8]
9001ff26:	4770      	bx	lr
9001ff28:	6019      	str	r1, [r3, #0]
9001ff2a:	e7f2      	b.n	9001ff12 <EwNotifyObservers+0x7e>
9001ff2c:	605a      	str	r2, [r3, #4]
9001ff2e:	e7f3      	b.n	9001ff18 <EwNotifyObservers+0x84>
9001ff30:	20000330 	.word	0x20000330
9001ff34:	b538      	push	{r3, r4, r5, lr}
9001ff36:	1e03      	subs	r3, r0, #0
9001ff38:	dd10      	ble.n	9001ff5c <EwNotifyObservers+0xc8>
9001ff3a:	005b      	lsls	r3, r3, #1
9001ff3c:	f103 040c 	add.w	r4, r3, #12
9001ff40:	4620      	mov	r0, r4
9001ff42:	f006 feb7 	bl	90026cb4 <EwAlloc>
9001ff46:	4605      	mov	r5, r0
9001ff48:	b950      	cbnz	r0, 9001ff60 <EwNotifyObservers+0xcc>
9001ff4a:	2003      	movs	r0, #3
9001ff4c:	f7fe fa32 	bl	9001e3b4 <EwImmediateReclaimMemory>
9001ff50:	2800      	cmp	r0, #0
9001ff52:	d1f5      	bne.n	9001ff40 <EwNotifyObservers+0xac>
9001ff54:	2003      	movs	r0, #3
9001ff56:	f7fd fa7b 	bl	9001d450 <EwError>
9001ff5a:	e023      	b.n	9001ffa4 <EwNotifyObservers+0x110>
9001ff5c:	2500      	movs	r5, #0
9001ff5e:	e021      	b.n	9001ffa4 <EwNotifyObservers+0x110>
9001ff60:	4b11      	ldr	r3, [pc, #68]	; (9001ffa8 <EwNotifyObservers+0x114>)
9001ff62:	4912      	ldr	r1, [pc, #72]	; (9001ffac <EwNotifyObservers+0x118>)
9001ff64:	68da      	ldr	r2, [r3, #12]
9001ff66:	6044      	str	r4, [r0, #4]
9001ff68:	6002      	str	r2, [r0, #0]
9001ff6a:	4a11      	ldr	r2, [pc, #68]	; (9001ffb0 <EwNotifyObservers+0x11c>)
9001ff6c:	60d8      	str	r0, [r3, #12]
9001ff6e:	6813      	ldr	r3, [r2, #0]
9001ff70:	4423      	add	r3, r4
9001ff72:	6013      	str	r3, [r2, #0]
9001ff74:	680a      	ldr	r2, [r1, #0]
9001ff76:	3201      	adds	r2, #1
9001ff78:	600a      	str	r2, [r1, #0]
9001ff7a:	4a0e      	ldr	r2, [pc, #56]	; (9001ffb4 <EwNotifyObservers+0x120>)
9001ff7c:	6811      	ldr	r1, [r2, #0]
9001ff7e:	428b      	cmp	r3, r1
9001ff80:	dd00      	ble.n	9001ff84 <EwNotifyObservers+0xf0>
9001ff82:	6013      	str	r3, [r2, #0]
9001ff84:	4a0c      	ldr	r2, [pc, #48]	; (9001ffb8 <EwNotifyObservers+0x124>)
9001ff86:	350a      	adds	r5, #10
9001ff88:	6812      	ldr	r2, [r2, #0]
9001ff8a:	4413      	add	r3, r2
9001ff8c:	4a0b      	ldr	r2, [pc, #44]	; (9001ffbc <EwNotifyObservers+0x128>)
9001ff8e:	6812      	ldr	r2, [r2, #0]
9001ff90:	4413      	add	r3, r2
9001ff92:	4a0b      	ldr	r2, [pc, #44]	; (9001ffc0 <EwNotifyObservers+0x12c>)
9001ff94:	6811      	ldr	r1, [r2, #0]
9001ff96:	428b      	cmp	r3, r1
9001ff98:	bfc8      	it	gt
9001ff9a:	6013      	strgt	r3, [r2, #0]
9001ff9c:	f244 6377 	movw	r3, #18039	; 0x4677
9001ffa0:	f825 3c02 	strh.w	r3, [r5, #-2]
9001ffa4:	4628      	mov	r0, r5
9001ffa6:	bd38      	pop	{r3, r4, r5, pc}
9001ffa8:	20000330 	.word	0x20000330
9001ffac:	200002d4 	.word	0x200002d4
9001ffb0:	200002b8 	.word	0x200002b8
9001ffb4:	200002d0 	.word	0x200002d0
9001ffb8:	200002ac 	.word	0x200002ac
9001ffbc:	200002bc 	.word	0x200002bc
9001ffc0:	200002c0 	.word	0x200002c0
9001ffc4:	f240 5331 	movw	r3, #1329	; 0x531
9001ffc8:	4298      	cmp	r0, r3
9001ffca:	d849      	bhi.n	90020060 <EwNotifyObservers+0x1cc>
9001ffcc:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
9001ffd0:	2b19      	cmp	r3, #25
9001ffd2:	d801      	bhi.n	9001ffd8 <EwNotifyObservers+0x144>
9001ffd4:	3820      	subs	r0, #32
9001ffd6:	4770      	bx	lr
9001ffd8:	f1a0 03e0 	sub.w	r3, r0, #224	; 0xe0
9001ffdc:	2b16      	cmp	r3, #22
9001ffde:	d9f9      	bls.n	9001ffd4 <EwNotifyObservers+0x140>
9001ffe0:	f1a0 03f8 	sub.w	r3, r0, #248	; 0xf8
9001ffe4:	2b06      	cmp	r3, #6
9001ffe6:	d9f5      	bls.n	9001ffd4 <EwNotifyObservers+0x140>
9001ffe8:	f2a0 337b 	subw	r3, r0, #891	; 0x37b
9001ffec:	2b02      	cmp	r3, #2
9001ffee:	d802      	bhi.n	9001fff6 <EwNotifyObservers+0x162>
9001fff0:	3082      	adds	r0, #130	; 0x82
9001fff2:	b280      	uxth	r0, r0
9001fff4:	4770      	bx	lr
9001fff6:	f46f 7c6b 	mvn.w	ip, #940	; 0x3ac
9001fffa:	eb00 030c 	add.w	r3, r0, ip
9001fffe:	2b02      	cmp	r3, #2
90020000:	d801      	bhi.n	90020006 <EwNotifyObservers+0x172>
90020002:	3825      	subs	r0, #37	; 0x25
90020004:	4770      	bx	lr
90020006:	f46f 716c 	mvn.w	r1, #944	; 0x3b0
9002000a:	1843      	adds	r3, r0, r1
9002000c:	2b10      	cmp	r3, #16
9002000e:	d9e1      	bls.n	9001ffd4 <EwNotifyObservers+0x140>
90020010:	f2a0 33c3 	subw	r3, r0, #963	; 0x3c3
90020014:	2b08      	cmp	r3, #8
90020016:	d9dd      	bls.n	9001ffd4 <EwNotifyObservers+0x140>
90020018:	f5a0 6386 	sub.w	r3, r0, #1072	; 0x430
9002001c:	2b1f      	cmp	r3, #31
9002001e:	d9d9      	bls.n	9001ffd4 <EwNotifyObservers+0x140>
90020020:	f5a0 638a 	sub.w	r3, r0, #1104	; 0x450
90020024:	2b0f      	cmp	r3, #15
90020026:	d801      	bhi.n	9002002c <EwNotifyObservers+0x198>
90020028:	3850      	subs	r0, #80	; 0x50
9002002a:	4770      	bx	lr
9002002c:	07c2      	lsls	r2, r0, #31
9002002e:	d418      	bmi.n	90020062 <EwNotifyObservers+0x1ce>
90020030:	f5a0 739d 	sub.w	r3, r0, #314	; 0x13a
90020034:	2b0e      	cmp	r3, #14
90020036:	d801      	bhi.n	9002003c <EwNotifyObservers+0x1a8>
90020038:	3801      	subs	r0, #1
9002003a:	4770      	bx	lr
9002003c:	f5a0 73bd 	sub.w	r3, r0, #378	; 0x17a
90020040:	2b04      	cmp	r3, #4
90020042:	d9f9      	bls.n	90020038 <EwNotifyObservers+0x1a4>
90020044:	f5a0 73e7 	sub.w	r3, r0, #462	; 0x1ce
90020048:	2b0e      	cmp	r3, #14
9002004a:	d9f5      	bls.n	90020038 <EwNotifyObservers+0x1a4>
9002004c:	f2a0 43c2 	subw	r3, r0, #1218	; 0x4c2
90020050:	2b0c      	cmp	r3, #12
90020052:	d9f1      	bls.n	90020038 <EwNotifyObservers+0x1a4>
90020054:	4b21      	ldr	r3, [pc, #132]	; (900200dc <EwNotifyObservers+0x248>)
90020056:	881a      	ldrh	r2, [r3, #0]
90020058:	4290      	cmp	r0, r2
9002005a:	d83d      	bhi.n	900200d8 <EwNotifyObservers+0x244>
9002005c:	bf08      	it	eq
9002005e:	8858      	ldrheq	r0, [r3, #2]
90020060:	4770      	bx	lr
90020062:	f46f 7380 	mvn.w	r3, #256	; 0x100
90020066:	18c3      	adds	r3, r0, r3
90020068:	2b2e      	cmp	r3, #46	; 0x2e
9002006a:	d9e5      	bls.n	90020038 <EwNotifyObservers+0x1a4>
9002006c:	f46f 7c99 	mvn.w	ip, #306	; 0x132
90020070:	eb00 030c 	add.w	r3, r0, ip
90020074:	2b04      	cmp	r3, #4
90020076:	d9df      	bls.n	90020038 <EwNotifyObservers+0x1a4>
90020078:	f46f 71a5 	mvn.w	r1, #330	; 0x14a
9002007c:	1843      	adds	r3, r0, r1
9002007e:	2b2c      	cmp	r3, #44	; 0x2c
90020080:	d9da      	bls.n	90020038 <EwNotifyObservers+0x1a4>
90020082:	f46f 72d0 	mvn.w	r2, #416	; 0x1a0
90020086:	1883      	adds	r3, r0, r2
90020088:	2b04      	cmp	r3, #4
9002008a:	d9d5      	bls.n	90020038 <EwNotifyObservers+0x1a4>
9002008c:	f46f 73ef 	mvn.w	r3, #478	; 0x1de
90020090:	18c3      	adds	r3, r0, r3
90020092:	2b10      	cmp	r3, #16
90020094:	d9d0      	bls.n	90020038 <EwNotifyObservers+0x1a4>
90020096:	f46f 7cfc 	mvn.w	ip, #504	; 0x1f8
9002009a:	eb00 030c 	add.w	r3, r0, ip
9002009e:	2b26      	cmp	r3, #38	; 0x26
900200a0:	d9ca      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200a2:	f2a0 2323 	subw	r3, r0, #547	; 0x223
900200a6:	2b10      	cmp	r3, #16
900200a8:	d9c6      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200aa:	f2a0 2347 	subw	r3, r0, #583	; 0x247
900200ae:	2b08      	cmp	r3, #8
900200b0:	d9c2      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200b2:	f46f 7176 	mvn.w	r1, #984	; 0x3d8
900200b6:	1843      	adds	r3, r0, r1
900200b8:	2b16      	cmp	r3, #22
900200ba:	d9bd      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200bc:	f46f 628c 	mvn.w	r2, #1120	; 0x460
900200c0:	1883      	adds	r3, r0, r2
900200c2:	2b20      	cmp	r3, #32
900200c4:	d9b8      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200c6:	f2a0 438b 	subw	r3, r0, #1163	; 0x48b
900200ca:	2b34      	cmp	r3, #52	; 0x34
900200cc:	d9b4      	bls.n	90020038 <EwNotifyObservers+0x1a4>
900200ce:	f46f 639a 	mvn.w	r3, #1232	; 0x4d0
900200d2:	18c3      	adds	r3, r0, r3
900200d4:	2b5e      	cmp	r3, #94	; 0x5e
900200d6:	e7bc      	b.n	90020052 <EwNotifyObservers+0x1be>
900200d8:	3304      	adds	r3, #4
900200da:	e7bc      	b.n	90020056 <EwNotifyObservers+0x1c2>
900200dc:	90033008 	.word	0x90033008
900200e0:	b138      	cbz	r0, 900200f2 <EwNotifyObservers+0x25e>
900200e2:	4602      	mov	r2, r0
900200e4:	4613      	mov	r3, r2
900200e6:	3202      	adds	r2, #2
900200e8:	8819      	ldrh	r1, [r3, #0]
900200ea:	2900      	cmp	r1, #0
900200ec:	d1fa      	bne.n	900200e4 <EwNotifyObservers+0x250>
900200ee:	1a18      	subs	r0, r3, r0
900200f0:	1040      	asrs	r0, r0, #1
900200f2:	4770      	bx	lr
900200f4:	b530      	push	{r4, r5, lr}
900200f6:	b149      	cbz	r1, 9002010c <EwNotifyObservers+0x278>
900200f8:	b140      	cbz	r0, 9002010c <EwNotifyObservers+0x278>
900200fa:	b13a      	cbz	r2, 9002010c <EwNotifyObservers+0x278>
900200fc:	1e83      	subs	r3, r0, #2
900200fe:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90020102:	42a1      	cmp	r1, r4
90020104:	d103      	bne.n	9002010e <EwNotifyObservers+0x27a>
90020106:	2300      	movs	r3, #0
90020108:	f820 3012 	strh.w	r3, [r0, r2, lsl #1]
9002010c:	bd30      	pop	{r4, r5, pc}
9002010e:	f831 5b02 	ldrh.w	r5, [r1], #2
90020112:	f823 5f02 	strh.w	r5, [r3, #2]!
90020116:	e7f4      	b.n	90020102 <EwNotifyObservers+0x26e>
90020118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002011a:	4604      	mov	r4, r0
9002011c:	b1c8      	cbz	r0, 90020152 <EwNotifyObservers+0x2be>
9002011e:	f830 3c02 	ldrh.w	r3, [r0, #-2]
90020122:	f244 5257 	movw	r2, #17751	; 0x4557
90020126:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
9002012a:	4293      	cmp	r3, r2
9002012c:	d011      	beq.n	90020152 <EwNotifyObservers+0x2be>
9002012e:	f244 6277 	movw	r2, #18039	; 0x4677
90020132:	4293      	cmp	r3, r2
90020134:	d00d      	beq.n	90020152 <EwNotifyObservers+0x2be>
90020136:	1ea5      	subs	r5, r4, #2
90020138:	4e0c      	ldr	r6, [pc, #48]	; (9002016c <EwNotifyObservers+0x2d8>)
9002013a:	4f0d      	ldr	r7, [pc, #52]	; (90020170 <EwNotifyObservers+0x2dc>)
9002013c:	480d      	ldr	r0, [pc, #52]	; (90020174 <EwNotifyObservers+0x2e0>)
9002013e:	f7fc fd53 	bl	9001cbe8 <EwPrint>
90020142:	f835 4f02 	ldrh.w	r4, [r5, #2]!
90020146:	b934      	cbnz	r4, 90020156 <EwNotifyObservers+0x2c2>
90020148:	480b      	ldr	r0, [pc, #44]	; (90020178 <EwNotifyObservers+0x2e4>)
9002014a:	f7fc fd4d 	bl	9001cbe8 <EwPrint>
9002014e:	f006 fdb5 	bl	90026cbc <EwPanic>
90020152:	4620      	mov	r0, r4
90020154:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90020156:	f1a4 0320 	sub.w	r3, r4, #32
9002015a:	4621      	mov	r1, r4
9002015c:	2b5f      	cmp	r3, #95	; 0x5f
9002015e:	bf94      	ite	ls
90020160:	4638      	movls	r0, r7
90020162:	4630      	movhi	r0, r6
90020164:	f7fc fd40 	bl	9001cbe8 <EwPrint>
90020168:	e7eb      	b.n	90020142 <EwNotifyObservers+0x2ae>
9002016a:	bf00      	nop
9002016c:	9003517b 	.word	0x9003517b
90020170:	90035178 	.word	0x90035178
90020174:	90035151 	.word	0x90035151
90020178:	90035176 	.word	0x90035176

9002017c <ToLower>:
9002017c:	f240 5331 	movw	r3, #1329	; 0x531
90020180:	4298      	cmp	r0, r3
90020182:	d868      	bhi.n	90020256 <ToLower+0xda>
90020184:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
90020188:	2b19      	cmp	r3, #25
9002018a:	d802      	bhi.n	90020192 <ToLower+0x16>
9002018c:	3020      	adds	r0, #32
9002018e:	b280      	uxth	r0, r0
90020190:	4770      	bx	lr
90020192:	f1a0 03c0 	sub.w	r3, r0, #192	; 0xc0
90020196:	2b16      	cmp	r3, #22
90020198:	d9f8      	bls.n	9002018c <ToLower+0x10>
9002019a:	f1a0 03d8 	sub.w	r3, r0, #216	; 0xd8
9002019e:	2b06      	cmp	r3, #6
900201a0:	d9f4      	bls.n	9002018c <ToLower+0x10>
900201a2:	f5a0 7362 	sub.w	r3, r0, #904	; 0x388
900201a6:	2b02      	cmp	r3, #2
900201a8:	d801      	bhi.n	900201ae <ToLower+0x32>
900201aa:	3025      	adds	r0, #37	; 0x25
900201ac:	e7ef      	b.n	9002018e <ToLower+0x12>
900201ae:	f46f 7164 	mvn.w	r1, #912	; 0x390
900201b2:	1843      	adds	r3, r0, r1
900201b4:	2b10      	cmp	r3, #16
900201b6:	d9e9      	bls.n	9002018c <ToLower+0x10>
900201b8:	f2a0 33a3 	subw	r3, r0, #931	; 0x3a3
900201bc:	2b08      	cmp	r3, #8
900201be:	d9e5      	bls.n	9002018c <ToLower+0x10>
900201c0:	f46f 727f 	mvn.w	r2, #1020	; 0x3fc
900201c4:	1883      	adds	r3, r0, r2
900201c6:	2b02      	cmp	r3, #2
900201c8:	d801      	bhi.n	900201ce <ToLower+0x52>
900201ca:	3882      	subs	r0, #130	; 0x82
900201cc:	4770      	bx	lr
900201ce:	f5a0 6380 	sub.w	r3, r0, #1024	; 0x400
900201d2:	2b0f      	cmp	r3, #15
900201d4:	d801      	bhi.n	900201da <ToLower+0x5e>
900201d6:	3050      	adds	r0, #80	; 0x50
900201d8:	e7d9      	b.n	9002018e <ToLower+0x12>
900201da:	f5a0 6382 	sub.w	r3, r0, #1040	; 0x410
900201de:	2b1f      	cmp	r3, #31
900201e0:	d9d4      	bls.n	9002018c <ToLower+0x10>
900201e2:	07c3      	lsls	r3, r0, #31
900201e4:	d438      	bmi.n	90020258 <ToLower+0xdc>
900201e6:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
900201ea:	2b2e      	cmp	r3, #46	; 0x2e
900201ec:	d801      	bhi.n	900201f2 <ToLower+0x76>
900201ee:	3001      	adds	r0, #1
900201f0:	e7cd      	b.n	9002018e <ToLower+0x12>
900201f2:	f5a0 7399 	sub.w	r3, r0, #306	; 0x132
900201f6:	2b04      	cmp	r3, #4
900201f8:	d9f9      	bls.n	900201ee <ToLower+0x72>
900201fa:	f5a0 73a5 	sub.w	r3, r0, #330	; 0x14a
900201fe:	2b2c      	cmp	r3, #44	; 0x2c
90020200:	d9f5      	bls.n	900201ee <ToLower+0x72>
90020202:	f5a0 73d0 	sub.w	r3, r0, #416	; 0x1a0
90020206:	2b04      	cmp	r3, #4
90020208:	d9f1      	bls.n	900201ee <ToLower+0x72>
9002020a:	f5a0 73ef 	sub.w	r3, r0, #478	; 0x1de
9002020e:	2b10      	cmp	r3, #16
90020210:	d9ed      	bls.n	900201ee <ToLower+0x72>
90020212:	f5a0 73fc 	sub.w	r3, r0, #504	; 0x1f8
90020216:	2b26      	cmp	r3, #38	; 0x26
90020218:	d9e9      	bls.n	900201ee <ToLower+0x72>
9002021a:	f2a0 2322 	subw	r3, r0, #546	; 0x222
9002021e:	2b10      	cmp	r3, #16
90020220:	d9e5      	bls.n	900201ee <ToLower+0x72>
90020222:	f2a0 2346 	subw	r3, r0, #582	; 0x246
90020226:	2b08      	cmp	r3, #8
90020228:	d9e1      	bls.n	900201ee <ToLower+0x72>
9002022a:	f5a0 7376 	sub.w	r3, r0, #984	; 0x3d8
9002022e:	2b16      	cmp	r3, #22
90020230:	d9dd      	bls.n	900201ee <ToLower+0x72>
90020232:	f5a0 638c 	sub.w	r3, r0, #1120	; 0x460
90020236:	2b20      	cmp	r3, #32
90020238:	d9d9      	bls.n	900201ee <ToLower+0x72>
9002023a:	f2a0 438a 	subw	r3, r0, #1162	; 0x48a
9002023e:	2b34      	cmp	r3, #52	; 0x34
90020240:	d9d5      	bls.n	900201ee <ToLower+0x72>
90020242:	f5a0 639a 	sub.w	r3, r0, #1232	; 0x4d0
90020246:	2b5e      	cmp	r3, #94	; 0x5e
90020248:	d9d1      	bls.n	900201ee <ToLower+0x72>
9002024a:	4b0f      	ldr	r3, [pc, #60]	; (90020288 <ToLower+0x10c>)
9002024c:	881a      	ldrh	r2, [r3, #0]
9002024e:	4290      	cmp	r0, r2
90020250:	d817      	bhi.n	90020282 <ToLower+0x106>
90020252:	bf08      	it	eq
90020254:	8858      	ldrheq	r0, [r3, #2]
90020256:	4770      	bx	lr
90020258:	f46f 7c9c 	mvn.w	ip, #312	; 0x138
9002025c:	eb00 030c 	add.w	r3, r0, ip
90020260:	2b0e      	cmp	r3, #14
90020262:	d9c4      	bls.n	900201ee <ToLower+0x72>
90020264:	f46f 71bc 	mvn.w	r1, #376	; 0x178
90020268:	1843      	adds	r3, r0, r1
9002026a:	2b04      	cmp	r3, #4
9002026c:	d9bf      	bls.n	900201ee <ToLower+0x72>
9002026e:	f46f 72e5 	mvn.w	r2, #458	; 0x1ca
90020272:	1883      	adds	r3, r0, r2
90020274:	2b10      	cmp	r3, #16
90020276:	d9ba      	bls.n	900201ee <ToLower+0x72>
90020278:	f46f 6398 	mvn.w	r3, #1216	; 0x4c0
9002027c:	18c3      	adds	r3, r0, r3
9002027e:	2b0c      	cmp	r3, #12
90020280:	e7e2      	b.n	90020248 <ToLower+0xcc>
90020282:	3304      	adds	r3, #4
90020284:	e7e2      	b.n	9002024c <ToLower+0xd0>
90020286:	bf00      	nop
90020288:	9003315e 	.word	0x9003315e

9002028c <EwDisposeStrings>:
9002028c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020290:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 90020368 <EwDisposeStrings+0xdc>
90020294:	4607      	mov	r7, r0
90020296:	2500      	movs	r5, #0
90020298:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 9002036c <EwDisposeStrings+0xe0>
9002029c:	4646      	mov	r6, r8
9002029e:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 90020364 <EwDisposeStrings+0xd8>
900202a2:	f856 4b0c 	ldr.w	r4, [r6], #12
900202a6:	6830      	ldr	r0, [r6, #0]
900202a8:	b990      	cbnz	r0, 900202d0 <EwDisposeStrings+0x44>
900202aa:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 90020370 <EwDisposeStrings+0xe4>
900202ae:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 9002036c <EwDisposeStrings+0xe0>
900202b2:	4e2c      	ldr	r6, [pc, #176]	; (90020364 <EwDisposeStrings+0xd8>)
900202b4:	b134      	cbz	r4, 900202c4 <EwDisposeStrings+0x38>
900202b6:	bb37      	cbnz	r7, 90020306 <EwDisposeStrings+0x7a>
900202b8:	f8d8 2008 	ldr.w	r2, [r8, #8]
900202bc:	f8da 3000 	ldr.w	r3, [sl]
900202c0:	429a      	cmp	r2, r3
900202c2:	dc20      	bgt.n	90020306 <EwDisposeStrings+0x7a>
900202c4:	f8d8 2000 	ldr.w	r2, [r8]
900202c8:	bb62      	cbnz	r2, 90020324 <EwDisposeStrings+0x98>
900202ca:	4628      	mov	r0, r5
900202cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900202d0:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900202d4:	8903      	ldrh	r3, [r0, #8]
900202d6:	2a00      	cmp	r2, #0
900202d8:	db10      	blt.n	900202fc <EwDisposeStrings+0x70>
900202da:	6803      	ldr	r3, [r0, #0]
900202dc:	3501      	adds	r5, #1
900202de:	6842      	ldr	r2, [r0, #4]
900202e0:	6033      	str	r3, [r6, #0]
900202e2:	f8d9 3000 	ldr.w	r3, [r9]
900202e6:	1a9b      	subs	r3, r3, r2
900202e8:	f8c9 3000 	str.w	r3, [r9]
900202ec:	f8da 3000 	ldr.w	r3, [sl]
900202f0:	3b01      	subs	r3, #1
900202f2:	f8ca 3000 	str.w	r3, [sl]
900202f6:	f006 fcdf 	bl	90026cb8 <EwFree>
900202fa:	e7d4      	b.n	900202a6 <EwDisposeStrings+0x1a>
900202fc:	f3c3 030e 	ubfx	r3, r3, #0, #15
90020300:	4606      	mov	r6, r0
90020302:	8103      	strh	r3, [r0, #8]
90020304:	e7cf      	b.n	900202a6 <EwDisposeStrings+0x1a>
90020306:	f104 0310 	add.w	r3, r4, #16
9002030a:	f8d4 b004 	ldr.w	fp, [r4, #4]
9002030e:	881a      	ldrh	r2, [r3, #0]
90020310:	b1aa      	cbz	r2, 9002033e <EwDisposeStrings+0xb2>
90020312:	f9b3 1002 	ldrsh.w	r1, [r3, #2]
90020316:	2900      	cmp	r1, #0
90020318:	da01      	bge.n	9002031e <EwDisposeStrings+0x92>
9002031a:	465c      	mov	r4, fp
9002031c:	e7ca      	b.n	900202b4 <EwDisposeStrings+0x28>
9002031e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90020322:	e7f4      	b.n	9002030e <EwDisposeStrings+0x82>
90020324:	f102 0310 	add.w	r3, r2, #16
90020328:	6852      	ldr	r2, [r2, #4]
9002032a:	8818      	ldrh	r0, [r3, #0]
9002032c:	2800      	cmp	r0, #0
9002032e:	d0cb      	beq.n	900202c8 <EwDisposeStrings+0x3c>
90020330:	8859      	ldrh	r1, [r3, #2]
90020332:	f3c1 010e 	ubfx	r1, r1, #0, #15
90020336:	8059      	strh	r1, [r3, #2]
90020338:	eb03 0340 	add.w	r3, r3, r0, lsl #1
9002033c:	e7f5      	b.n	9002032a <EwDisposeStrings+0x9e>
9002033e:	68a2      	ldr	r2, [r4, #8]
90020340:	4620      	mov	r0, r4
90020342:	f8d9 3000 	ldr.w	r3, [r9]
90020346:	3501      	adds	r5, #1
90020348:	1a9b      	subs	r3, r3, r2
9002034a:	f8c9 3000 	str.w	r3, [r9]
9002034e:	f7ff fdb7 	bl	9001fec0 <EwNotifyObservers+0x2c>
90020352:	6833      	ldr	r3, [r6, #0]
90020354:	1a18      	subs	r0, r3, r0
90020356:	6030      	str	r0, [r6, #0]
90020358:	4620      	mov	r0, r4
9002035a:	f7ff fdd5 	bl	9001ff08 <EwNotifyObservers+0x74>
9002035e:	f006 fcab 	bl	90026cb8 <EwFree>
90020362:	e7da      	b.n	9002031a <EwDisposeStrings+0x8e>
90020364:	200002d4 	.word	0x200002d4
90020368:	20000330 	.word	0x20000330
9002036c:	200002b8 	.word	0x200002b8
90020370:	20000028 	.word	0x20000028

90020374 <EwCanMarkString>:
90020374:	4602      	mov	r2, r0
90020376:	480f      	ldr	r0, [pc, #60]	; (900203b4 <EwCanMarkString+0x40>)
90020378:	68c3      	ldr	r3, [r0, #12]
9002037a:	b96b      	cbnz	r3, 90020398 <EwCanMarkString+0x24>
9002037c:	6800      	ldr	r0, [r0, #0]
9002037e:	b1a8      	cbz	r0, 900203ac <EwCanMarkString+0x38>
90020380:	f100 0310 	add.w	r3, r0, #16
90020384:	429a      	cmp	r2, r3
90020386:	d312      	bcc.n	900203ae <EwCanMarkString+0x3a>
90020388:	6883      	ldr	r3, [r0, #8]
9002038a:	4403      	add	r3, r0
9002038c:	429a      	cmp	r2, r3
9002038e:	d20e      	bcs.n	900203ae <EwCanMarkString+0x3a>
90020390:	3014      	adds	r0, #20
90020392:	4770      	bx	lr
90020394:	681b      	ldr	r3, [r3, #0]
90020396:	e7f0      	b.n	9002037a <EwCanMarkString+0x6>
90020398:	f103 0108 	add.w	r1, r3, #8
9002039c:	428a      	cmp	r2, r1
9002039e:	d3f9      	bcc.n	90020394 <EwCanMarkString+0x20>
900203a0:	6859      	ldr	r1, [r3, #4]
900203a2:	4419      	add	r1, r3
900203a4:	428a      	cmp	r2, r1
900203a6:	d2f5      	bcs.n	90020394 <EwCanMarkString+0x20>
900203a8:	f103 000a 	add.w	r0, r3, #10
900203ac:	4770      	bx	lr
900203ae:	6840      	ldr	r0, [r0, #4]
900203b0:	e7e5      	b.n	9002037e <EwCanMarkString+0xa>
900203b2:	bf00      	nop
900203b4:	20000330 	.word	0x20000330

900203b8 <EwFormatUIntToAnsiString>:
900203b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900203ba:	4604      	mov	r4, r0
900203bc:	e9dd 0606 	ldrd	r0, r6, [sp, #24]
900203c0:	2800      	cmp	r0, #0
900203c2:	bf14      	ite	ne
900203c4:	2041      	movne	r0, #65	; 0x41
900203c6:	2061      	moveq	r0, #97	; 0x61
900203c8:	2a80      	cmp	r2, #128	; 0x80
900203ca:	bfa8      	it	ge
900203cc:	2280      	movge	r2, #128	; 0x80
900203ce:	2b02      	cmp	r3, #2
900203d0:	d120      	bne.n	90020414 <EwFormatUIntToAnsiString+0x5c>
900203d2:	4623      	mov	r3, r4
900203d4:	f001 0001 	and.w	r0, r1, #1
900203d8:	0849      	lsrs	r1, r1, #1
900203da:	f100 0030 	add.w	r0, r0, #48	; 0x30
900203de:	f803 0b01 	strb.w	r0, [r3], #1
900203e2:	d1f7      	bne.n	900203d4 <EwFormatUIntToAnsiString+0x1c>
900203e4:	1b1d      	subs	r5, r3, r4
900203e6:	4618      	mov	r0, r3
900203e8:	2130      	movs	r1, #48	; 0x30
900203ea:	2e00      	cmp	r6, #0
900203ec:	bf18      	it	ne
900203ee:	3501      	addne	r5, #1
900203f0:	1b55      	subs	r5, r2, r5
900203f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900203f6:	462a      	mov	r2, r5
900203f8:	f00d fde6 	bl	9002dfc8 <memset>
900203fc:	4603      	mov	r3, r0
900203fe:	4428      	add	r0, r5
90020400:	b116      	cbz	r6, 90020408 <EwFormatUIntToAnsiString+0x50>
90020402:	222b      	movs	r2, #43	; 0x2b
90020404:	3001      	adds	r0, #1
90020406:	555a      	strb	r2, [r3, r5]
90020408:	1e42      	subs	r2, r0, #1
9002040a:	4623      	mov	r3, r4
9002040c:	429a      	cmp	r2, r3
9002040e:	d82d      	bhi.n	9002046c <EwFormatUIntToAnsiString+0xb4>
90020410:	1b00      	subs	r0, r0, r4
90020412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90020414:	2b08      	cmp	r3, #8
90020416:	d109      	bne.n	9002042c <EwFormatUIntToAnsiString+0x74>
90020418:	4623      	mov	r3, r4
9002041a:	f001 0007 	and.w	r0, r1, #7
9002041e:	08c9      	lsrs	r1, r1, #3
90020420:	f100 0030 	add.w	r0, r0, #48	; 0x30
90020424:	f803 0b01 	strb.w	r0, [r3], #1
90020428:	d1f7      	bne.n	9002041a <EwFormatUIntToAnsiString+0x62>
9002042a:	e7db      	b.n	900203e4 <EwFormatUIntToAnsiString+0x2c>
9002042c:	2b10      	cmp	r3, #16
9002042e:	4623      	mov	r3, r4
90020430:	d10f      	bne.n	90020452 <EwFormatUIntToAnsiString+0x9a>
90020432:	f1a0 050a 	sub.w	r5, r0, #10
90020436:	f001 070f 	and.w	r7, r1, #15
9002043a:	3301      	adds	r3, #1
9002043c:	4638      	mov	r0, r7
9002043e:	2f09      	cmp	r7, #9
90020440:	bf8a      	itet	hi
90020442:	1940      	addhi	r0, r0, r5
90020444:	3030      	addls	r0, #48	; 0x30
90020446:	b2c0      	uxtbhi	r0, r0
90020448:	0909      	lsrs	r1, r1, #4
9002044a:	f803 0c01 	strb.w	r0, [r3, #-1]
9002044e:	d1f2      	bne.n	90020436 <EwFormatUIntToAnsiString+0x7e>
90020450:	e7c8      	b.n	900203e4 <EwFormatUIntToAnsiString+0x2c>
90020452:	270a      	movs	r7, #10
90020454:	fbb1 f5f7 	udiv	r5, r1, r7
90020458:	fb07 1015 	mls	r0, r7, r5, r1
9002045c:	3030      	adds	r0, #48	; 0x30
9002045e:	f803 0b01 	strb.w	r0, [r3], #1
90020462:	4608      	mov	r0, r1
90020464:	4629      	mov	r1, r5
90020466:	2809      	cmp	r0, #9
90020468:	d8f4      	bhi.n	90020454 <EwFormatUIntToAnsiString+0x9c>
9002046a:	e7bb      	b.n	900203e4 <EwFormatUIntToAnsiString+0x2c>
9002046c:	7819      	ldrb	r1, [r3, #0]
9002046e:	7815      	ldrb	r5, [r2, #0]
90020470:	f803 5b01 	strb.w	r5, [r3], #1
90020474:	f802 1901 	strb.w	r1, [r2], #-1
90020478:	e7c8      	b.n	9002040c <EwFormatUIntToAnsiString+0x54>

9002047a <EwFormatIntToAnsiString>:
9002047a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002047c:	4605      	mov	r5, r0
9002047e:	e9dd 0706 	ldrd	r0, r7, [sp, #24]
90020482:	2800      	cmp	r0, #0
90020484:	bf14      	ite	ne
90020486:	2041      	movne	r0, #65	; 0x41
90020488:	2061      	moveq	r0, #97	; 0x61
9002048a:	2a80      	cmp	r2, #128	; 0x80
9002048c:	bfa8      	it	ge
9002048e:	2280      	movge	r2, #128	; 0x80
90020490:	1e0e      	subs	r6, r1, #0
90020492:	bfba      	itte	lt
90020494:	4274      	neglt	r4, r6
90020496:	2701      	movlt	r7, #1
90020498:	4634      	movge	r4, r6
9002049a:	2b02      	cmp	r3, #2
9002049c:	d125      	bne.n	900204ea <EwFormatIntToAnsiString+0x70>
9002049e:	462b      	mov	r3, r5
900204a0:	f004 0101 	and.w	r1, r4, #1
900204a4:	0864      	lsrs	r4, r4, #1
900204a6:	f101 0130 	add.w	r1, r1, #48	; 0x30
900204aa:	f803 1b01 	strb.w	r1, [r3], #1
900204ae:	d1f7      	bne.n	900204a0 <EwFormatIntToAnsiString+0x26>
900204b0:	1b5c      	subs	r4, r3, r5
900204b2:	4618      	mov	r0, r3
900204b4:	2130      	movs	r1, #48	; 0x30
900204b6:	2f00      	cmp	r7, #0
900204b8:	bf18      	it	ne
900204ba:	3401      	addne	r4, #1
900204bc:	1b14      	subs	r4, r2, r4
900204be:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
900204c2:	4622      	mov	r2, r4
900204c4:	f00d fd80 	bl	9002dfc8 <memset>
900204c8:	4603      	mov	r3, r0
900204ca:	4423      	add	r3, r4
900204cc:	2f00      	cmp	r7, #0
900204ce:	d03a      	beq.n	90020546 <EwFormatIntToAnsiString+0xcc>
900204d0:	2e00      	cmp	r6, #0
900204d2:	f103 0001 	add.w	r0, r3, #1
900204d6:	bfb4      	ite	lt
900204d8:	222d      	movlt	r2, #45	; 0x2d
900204da:	222b      	movge	r2, #43	; 0x2b
900204dc:	701a      	strb	r2, [r3, #0]
900204de:	1e42      	subs	r2, r0, #1
900204e0:	462b      	mov	r3, r5
900204e2:	429a      	cmp	r2, r3
900204e4:	d831      	bhi.n	9002054a <EwFormatIntToAnsiString+0xd0>
900204e6:	1b40      	subs	r0, r0, r5
900204e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900204ea:	2b08      	cmp	r3, #8
900204ec:	d109      	bne.n	90020502 <EwFormatIntToAnsiString+0x88>
900204ee:	462b      	mov	r3, r5
900204f0:	f004 0107 	and.w	r1, r4, #7
900204f4:	08e4      	lsrs	r4, r4, #3
900204f6:	f101 0130 	add.w	r1, r1, #48	; 0x30
900204fa:	f803 1b01 	strb.w	r1, [r3], #1
900204fe:	d1f7      	bne.n	900204f0 <EwFormatIntToAnsiString+0x76>
90020500:	e7d6      	b.n	900204b0 <EwFormatIntToAnsiString+0x36>
90020502:	2b10      	cmp	r3, #16
90020504:	462b      	mov	r3, r5
90020506:	d110      	bne.n	9002052a <EwFormatIntToAnsiString+0xb0>
90020508:	f1a0 010a 	sub.w	r1, r0, #10
9002050c:	f004 0c0f 	and.w	ip, r4, #15
90020510:	3301      	adds	r3, #1
90020512:	4660      	mov	r0, ip
90020514:	f1bc 0f09 	cmp.w	ip, #9
90020518:	bf8a      	itet	hi
9002051a:	1840      	addhi	r0, r0, r1
9002051c:	3030      	addls	r0, #48	; 0x30
9002051e:	b2c0      	uxtbhi	r0, r0
90020520:	0924      	lsrs	r4, r4, #4
90020522:	f803 0c01 	strb.w	r0, [r3, #-1]
90020526:	d1f1      	bne.n	9002050c <EwFormatIntToAnsiString+0x92>
90020528:	e7c2      	b.n	900204b0 <EwFormatIntToAnsiString+0x36>
9002052a:	f04f 0c0a 	mov.w	ip, #10
9002052e:	fbb4 f0fc 	udiv	r0, r4, ip
90020532:	fb0c 4110 	mls	r1, ip, r0, r4
90020536:	3130      	adds	r1, #48	; 0x30
90020538:	f803 1b01 	strb.w	r1, [r3], #1
9002053c:	4621      	mov	r1, r4
9002053e:	4604      	mov	r4, r0
90020540:	2909      	cmp	r1, #9
90020542:	d8f4      	bhi.n	9002052e <EwFormatIntToAnsiString+0xb4>
90020544:	e7b4      	b.n	900204b0 <EwFormatIntToAnsiString+0x36>
90020546:	4618      	mov	r0, r3
90020548:	e7c9      	b.n	900204de <EwFormatIntToAnsiString+0x64>
9002054a:	7819      	ldrb	r1, [r3, #0]
9002054c:	7814      	ldrb	r4, [r2, #0]
9002054e:	f803 4b01 	strb.w	r4, [r3], #1
90020552:	f802 1901 	strb.w	r1, [r2], #-1
90020556:	e7c4      	b.n	900204e2 <EwFormatIntToAnsiString+0x68>

90020558 <EwFormatUInt64ToAnsiString>:
90020558:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002055c:	4614      	mov	r4, r2
9002055e:	461d      	mov	r5, r3
90020560:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90020562:	4607      	mov	r7, r0
90020564:	4606      	mov	r6, r0
90020566:	e9dd 290c 	ldrd	r2, r9, [sp, #48]	; 0x30
9002056a:	2a00      	cmp	r2, #0
9002056c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9002056e:	bf14      	ite	ne
90020570:	2141      	movne	r1, #65	; 0x41
90020572:	2161      	moveq	r1, #97	; 0x61
90020574:	2a80      	cmp	r2, #128	; 0x80
90020576:	bfa8      	it	ge
90020578:	2280      	movge	r2, #128	; 0x80
9002057a:	2b02      	cmp	r3, #2
9002057c:	4690      	mov	r8, r2
9002057e:	d127      	bne.n	900205d0 <EwFormatUInt64ToAnsiString+0x78>
90020580:	f004 0301 	and.w	r3, r4, #1
90020584:	0864      	lsrs	r4, r4, #1
90020586:	3330      	adds	r3, #48	; 0x30
90020588:	ea44 74c5 	orr.w	r4, r4, r5, lsl #31
9002058c:	086d      	lsrs	r5, r5, #1
9002058e:	f806 3b01 	strb.w	r3, [r6], #1
90020592:	ea54 0305 	orrs.w	r3, r4, r5
90020596:	d1f3      	bne.n	90020580 <EwFormatUInt64ToAnsiString+0x28>
90020598:	1bf4      	subs	r4, r6, r7
9002059a:	2130      	movs	r1, #48	; 0x30
9002059c:	4630      	mov	r0, r6
9002059e:	f1b9 0f00 	cmp.w	r9, #0
900205a2:	bf18      	it	ne
900205a4:	3401      	addne	r4, #1
900205a6:	eba8 0404 	sub.w	r4, r8, r4
900205aa:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
900205ae:	4622      	mov	r2, r4
900205b0:	f00d fd0a 	bl	9002dfc8 <memset>
900205b4:	1930      	adds	r0, r6, r4
900205b6:	f1b9 0f00 	cmp.w	r9, #0
900205ba:	d002      	beq.n	900205c2 <EwFormatUInt64ToAnsiString+0x6a>
900205bc:	232b      	movs	r3, #43	; 0x2b
900205be:	3001      	adds	r0, #1
900205c0:	5533      	strb	r3, [r6, r4]
900205c2:	1e42      	subs	r2, r0, #1
900205c4:	463b      	mov	r3, r7
900205c6:	429a      	cmp	r2, r3
900205c8:	d845      	bhi.n	90020656 <EwFormatUInt64ToAnsiString+0xfe>
900205ca:	1bc0      	subs	r0, r0, r7
900205cc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900205d0:	2b08      	cmp	r3, #8
900205d2:	d10c      	bne.n	900205ee <EwFormatUInt64ToAnsiString+0x96>
900205d4:	f004 0307 	and.w	r3, r4, #7
900205d8:	08e4      	lsrs	r4, r4, #3
900205da:	3330      	adds	r3, #48	; 0x30
900205dc:	ea44 7445 	orr.w	r4, r4, r5, lsl #29
900205e0:	08ed      	lsrs	r5, r5, #3
900205e2:	f806 3b01 	strb.w	r3, [r6], #1
900205e6:	ea54 0305 	orrs.w	r3, r4, r5
900205ea:	d1f3      	bne.n	900205d4 <EwFormatUInt64ToAnsiString+0x7c>
900205ec:	e7d4      	b.n	90020598 <EwFormatUInt64ToAnsiString+0x40>
900205ee:	2b10      	cmp	r3, #16
900205f0:	d118      	bne.n	90020624 <EwFormatUInt64ToAnsiString+0xcc>
900205f2:	f04f 0c00 	mov.w	ip, #0
900205f6:	390a      	subs	r1, #10
900205f8:	f004 020f 	and.w	r2, r4, #15
900205fc:	0924      	lsrs	r4, r4, #4
900205fe:	3601      	adds	r6, #1
90020600:	2a0a      	cmp	r2, #10
90020602:	4613      	mov	r3, r2
90020604:	ea44 7405 	orr.w	r4, r4, r5, lsl #28
90020608:	f17c 0200 	sbcs.w	r2, ip, #0
9002060c:	ea4f 1515 	mov.w	r5, r5, lsr #4
90020610:	bf2a      	itet	cs
90020612:	185b      	addcs	r3, r3, r1
90020614:	3330      	addcc	r3, #48	; 0x30
90020616:	b2db      	uxtbcs	r3, r3
90020618:	f806 3c01 	strb.w	r3, [r6, #-1]
9002061c:	ea54 0305 	orrs.w	r3, r4, r5
90020620:	d1ea      	bne.n	900205f8 <EwFormatUInt64ToAnsiString+0xa0>
90020622:	e7b9      	b.n	90020598 <EwFormatUInt64ToAnsiString+0x40>
90020624:	4620      	mov	r0, r4
90020626:	4629      	mov	r1, r5
90020628:	220a      	movs	r2, #10
9002062a:	2300      	movs	r3, #0
9002062c:	f001 fc54 	bl	90021ed8 <__aeabi_uldivmod>
90020630:	3230      	adds	r2, #48	; 0x30
90020632:	46a3      	mov	fp, r4
90020634:	2300      	movs	r3, #0
90020636:	4620      	mov	r0, r4
90020638:	4629      	mov	r1, r5
9002063a:	f806 2b01 	strb.w	r2, [r6], #1
9002063e:	220a      	movs	r2, #10
90020640:	f001 fc4a 	bl	90021ed8 <__aeabi_uldivmod>
90020644:	46aa      	mov	sl, r5
90020646:	f1bb 0f0a 	cmp.w	fp, #10
9002064a:	4604      	mov	r4, r0
9002064c:	460d      	mov	r5, r1
9002064e:	f17a 0300 	sbcs.w	r3, sl, #0
90020652:	d2e7      	bcs.n	90020624 <EwFormatUInt64ToAnsiString+0xcc>
90020654:	e7a0      	b.n	90020598 <EwFormatUInt64ToAnsiString+0x40>
90020656:	7819      	ldrb	r1, [r3, #0]
90020658:	7814      	ldrb	r4, [r2, #0]
9002065a:	f803 4b01 	strb.w	r4, [r3], #1
9002065e:	f802 1901 	strb.w	r1, [r2], #-1
90020662:	e7b0      	b.n	900205c6 <EwFormatUInt64ToAnsiString+0x6e>

90020664 <EwFormatInt64ToAnsiString>:
90020664:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020668:	4607      	mov	r7, r0
9002066a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002066c:	e9dd 010b 	ldrd	r0, r1, [sp, #44]	; 0x2c
90020670:	2900      	cmp	r1, #0
90020672:	bf14      	ite	ne
90020674:	2141      	movne	r1, #65	; 0x41
90020676:	2161      	moveq	r1, #97	; 0x61
90020678:	2c80      	cmp	r4, #128	; 0x80
9002067a:	bfa8      	it	ge
9002067c:	2480      	movge	r4, #128	; 0x80
9002067e:	f1b3 0900 	subs.w	r9, r3, #0
90020682:	46a0      	mov	r8, r4
90020684:	da35      	bge.n	900206f2 <EwFormatInt64ToAnsiString+0x8e>
90020686:	4254      	negs	r4, r2
90020688:	f04f 0301 	mov.w	r3, #1
9002068c:	eb69 0649 	sbc.w	r6, r9, r9, lsl #1
90020690:	930d      	str	r3, [sp, #52]	; 0x34
90020692:	2802      	cmp	r0, #2
90020694:	463d      	mov	r5, r7
90020696:	d12f      	bne.n	900206f8 <EwFormatInt64ToAnsiString+0x94>
90020698:	f004 0301 	and.w	r3, r4, #1
9002069c:	0864      	lsrs	r4, r4, #1
9002069e:	3330      	adds	r3, #48	; 0x30
900206a0:	ea44 74c6 	orr.w	r4, r4, r6, lsl #31
900206a4:	0876      	lsrs	r6, r6, #1
900206a6:	f805 3b01 	strb.w	r3, [r5], #1
900206aa:	ea54 0306 	orrs.w	r3, r4, r6
900206ae:	d1f3      	bne.n	90020698 <EwFormatInt64ToAnsiString+0x34>
900206b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900206b2:	1bea      	subs	r2, r5, r7
900206b4:	4628      	mov	r0, r5
900206b6:	2130      	movs	r1, #48	; 0x30
900206b8:	2b00      	cmp	r3, #0
900206ba:	bf18      	it	ne
900206bc:	3201      	addne	r2, #1
900206be:	eba8 0802 	sub.w	r8, r8, r2
900206c2:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
900206c6:	4642      	mov	r2, r8
900206c8:	4445      	add	r5, r8
900206ca:	f00d fc7d 	bl	9002dfc8 <memset>
900206ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900206d0:	2b00      	cmp	r3, #0
900206d2:	d054      	beq.n	9002077e <EwFormatInt64ToAnsiString+0x11a>
900206d4:	f1b9 0f00 	cmp.w	r9, #0
900206d8:	f105 0001 	add.w	r0, r5, #1
900206dc:	bfb4      	ite	lt
900206de:	232d      	movlt	r3, #45	; 0x2d
900206e0:	232b      	movge	r3, #43	; 0x2b
900206e2:	702b      	strb	r3, [r5, #0]
900206e4:	1e42      	subs	r2, r0, #1
900206e6:	463b      	mov	r3, r7
900206e8:	429a      	cmp	r2, r3
900206ea:	d84a      	bhi.n	90020782 <EwFormatInt64ToAnsiString+0x11e>
900206ec:	1bc0      	subs	r0, r0, r7
900206ee:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900206f2:	4614      	mov	r4, r2
900206f4:	464e      	mov	r6, r9
900206f6:	e7cc      	b.n	90020692 <EwFormatInt64ToAnsiString+0x2e>
900206f8:	2808      	cmp	r0, #8
900206fa:	d10c      	bne.n	90020716 <EwFormatInt64ToAnsiString+0xb2>
900206fc:	f004 0307 	and.w	r3, r4, #7
90020700:	08e4      	lsrs	r4, r4, #3
90020702:	3330      	adds	r3, #48	; 0x30
90020704:	ea44 7446 	orr.w	r4, r4, r6, lsl #29
90020708:	08f6      	lsrs	r6, r6, #3
9002070a:	f805 3b01 	strb.w	r3, [r5], #1
9002070e:	ea54 0306 	orrs.w	r3, r4, r6
90020712:	d1f3      	bne.n	900206fc <EwFormatInt64ToAnsiString+0x98>
90020714:	e7cc      	b.n	900206b0 <EwFormatInt64ToAnsiString+0x4c>
90020716:	2810      	cmp	r0, #16
90020718:	d118      	bne.n	9002074c <EwFormatInt64ToAnsiString+0xe8>
9002071a:	f04f 0c00 	mov.w	ip, #0
9002071e:	390a      	subs	r1, #10
90020720:	f004 020f 	and.w	r2, r4, #15
90020724:	0924      	lsrs	r4, r4, #4
90020726:	3501      	adds	r5, #1
90020728:	2a0a      	cmp	r2, #10
9002072a:	4613      	mov	r3, r2
9002072c:	ea44 7406 	orr.w	r4, r4, r6, lsl #28
90020730:	f17c 0200 	sbcs.w	r2, ip, #0
90020734:	ea4f 1616 	mov.w	r6, r6, lsr #4
90020738:	bf2a      	itet	cs
9002073a:	185b      	addcs	r3, r3, r1
9002073c:	3330      	addcc	r3, #48	; 0x30
9002073e:	b2db      	uxtbcs	r3, r3
90020740:	f805 3c01 	strb.w	r3, [r5, #-1]
90020744:	ea54 0306 	orrs.w	r3, r4, r6
90020748:	d1ea      	bne.n	90020720 <EwFormatInt64ToAnsiString+0xbc>
9002074a:	e7b1      	b.n	900206b0 <EwFormatInt64ToAnsiString+0x4c>
9002074c:	4620      	mov	r0, r4
9002074e:	4631      	mov	r1, r6
90020750:	220a      	movs	r2, #10
90020752:	2300      	movs	r3, #0
90020754:	f001 fbc0 	bl	90021ed8 <__aeabi_uldivmod>
90020758:	3230      	adds	r2, #48	; 0x30
9002075a:	46a3      	mov	fp, r4
9002075c:	2300      	movs	r3, #0
9002075e:	4620      	mov	r0, r4
90020760:	4631      	mov	r1, r6
90020762:	f805 2b01 	strb.w	r2, [r5], #1
90020766:	220a      	movs	r2, #10
90020768:	f001 fbb6 	bl	90021ed8 <__aeabi_uldivmod>
9002076c:	46b2      	mov	sl, r6
9002076e:	f1bb 0f0a 	cmp.w	fp, #10
90020772:	4604      	mov	r4, r0
90020774:	460e      	mov	r6, r1
90020776:	f17a 0300 	sbcs.w	r3, sl, #0
9002077a:	d2e7      	bcs.n	9002074c <EwFormatInt64ToAnsiString+0xe8>
9002077c:	e798      	b.n	900206b0 <EwFormatInt64ToAnsiString+0x4c>
9002077e:	4628      	mov	r0, r5
90020780:	e7b0      	b.n	900206e4 <EwFormatInt64ToAnsiString+0x80>
90020782:	7819      	ldrb	r1, [r3, #0]
90020784:	7814      	ldrb	r4, [r2, #0]
90020786:	f803 4b01 	strb.w	r4, [r3], #1
9002078a:	f802 1901 	strb.w	r1, [r2], #-1
9002078e:	e7ab      	b.n	900206e8 <EwFormatInt64ToAnsiString+0x84>

90020790 <EwFormatFloatToAnsiString>:
90020790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020794:	b091      	sub	sp, #68	; 0x44
90020796:	4690      	mov	r8, r2
90020798:	468a      	mov	sl, r1
9002079a:	2234      	movs	r2, #52	; 0x34
9002079c:	2100      	movs	r1, #0
9002079e:	ed8d 0a01 	vstr	s0, [sp, #4]
900207a2:	4605      	mov	r5, r0
900207a4:	a803      	add	r0, sp, #12
900207a6:	9e01      	ldr	r6, [sp, #4]
900207a8:	461f      	mov	r7, r3
900207aa:	f00d fc0d 	bl	9002dfc8 <memset>
900207ae:	4651      	mov	r1, sl
900207b0:	ea88 72e8 	eor.w	r2, r8, r8, asr #31
900207b4:	f3c6 54c7 	ubfx	r4, r6, #23, #8
900207b8:	ea4f 79d6 	mov.w	r9, r6, lsr #31
900207bc:	f3c6 0616 	ubfx	r6, r6, #0, #23
900207c0:	eba2 72e8 	sub.w	r2, r2, r8, asr #31
900207c4:	f446 0600 	orr.w	r6, r6, #8388608	; 0x800000
900207c8:	2a20      	cmp	r2, #32
900207ca:	bfa8      	it	ge
900207cc:	2220      	movge	r2, #32
900207ce:	2980      	cmp	r1, #128	; 0x80
900207d0:	bfa8      	it	ge
900207d2:	2180      	movge	r1, #128	; 0x80
900207d4:	2cff      	cmp	r4, #255	; 0xff
900207d6:	f000 80ba 	beq.w	9002094e <EwFormatFloatToAnsiString+0x1be>
900207da:	340a      	adds	r4, #10
900207dc:	1120      	asrs	r0, r4, #4
900207de:	f004 030f 	and.w	r3, r4, #15
900207e2:	ac10      	add	r4, sp, #64	; 0x40
900207e4:	fa06 fc03 	lsl.w	ip, r6, r3
900207e8:	eb04 0440 	add.w	r4, r4, r0, lsl #1
900207ec:	f824 cc34 	strh.w	ip, [r4, #-52]
900207f0:	ac10      	add	r4, sp, #64	; 0x40
900207f2:	eb04 0c40 	add.w	ip, r4, r0, lsl #1
900207f6:	f1c3 0410 	rsb	r4, r3, #16
900207fa:	fa46 f404 	asr.w	r4, r6, r4
900207fe:	f82c 4c32 	strh.w	r4, [ip, #-50]
90020802:	b123      	cbz	r3, 9002080e <EwFormatFloatToAnsiString+0x7e>
90020804:	f1c3 0320 	rsb	r3, r3, #32
90020808:	fa46 f303 	asr.w	r3, r6, r3
9002080c:	b29b      	uxth	r3, r3
9002080e:	ac10      	add	r4, sp, #64	; 0x40
90020810:	2600      	movs	r6, #0
90020812:	f04f 0c0a 	mov.w	ip, #10
90020816:	eb04 0040 	add.w	r0, r4, r0, lsl #1
9002081a:	f820 3c30 	strh.w	r3, [r0, #-48]
9002081e:	42b2      	cmp	r2, r6
90020820:	d13e      	bne.n	900208a0 <EwFormatFloatToAnsiString+0x110>
90020822:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90020826:	2b00      	cmp	r3, #0
90020828:	db49      	blt.n	900208be <EwFormatFloatToAnsiString+0x12e>
9002082a:	ea57 0309 	orrs.w	r3, r7, r9
9002082e:	d152      	bne.n	900208d6 <EwFormatFloatToAnsiString+0x146>
90020830:	462c      	mov	r4, r5
90020832:	2300      	movs	r3, #0
90020834:	f04f 0a0a 	mov.w	sl, #10
90020838:	2e00      	cmp	r6, #0
9002083a:	dc4e      	bgt.n	900208da <EwFormatFloatToAnsiString+0x14a>
9002083c:	2b00      	cmp	r3, #0
9002083e:	d04c      	beq.n	900208da <EwFormatFloatToAnsiString+0x14a>
90020840:	462b      	mov	r3, r5
90020842:	1b49      	subs	r1, r1, r5
90020844:	f1b8 0f00 	cmp.w	r8, #0
90020848:	461e      	mov	r6, r3
9002084a:	eb01 0a03 	add.w	sl, r1, r3
9002084e:	da06      	bge.n	9002085e <EwFormatFloatToAnsiString+0xce>
90020850:	7832      	ldrb	r2, [r6, #0]
90020852:	3301      	adds	r3, #1
90020854:	2a30      	cmp	r2, #48	; 0x30
90020856:	d102      	bne.n	9002085e <EwFormatFloatToAnsiString+0xce>
90020858:	781a      	ldrb	r2, [r3, #0]
9002085a:	2a2e      	cmp	r2, #46	; 0x2e
9002085c:	d1f2      	bne.n	90020844 <EwFormatFloatToAnsiString+0xb4>
9002085e:	42ae      	cmp	r6, r5
90020860:	d907      	bls.n	90020872 <EwFormatFloatToAnsiString+0xe2>
90020862:	1ba2      	subs	r2, r4, r6
90020864:	4631      	mov	r1, r6
90020866:	1b76      	subs	r6, r6, r5
90020868:	4628      	mov	r0, r5
9002086a:	f006 fa51 	bl	90026d10 <EwMove>
9002086e:	1ba4      	subs	r4, r4, r6
90020870:	462e      	mov	r6, r5
90020872:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
90020876:	2130      	movs	r1, #48	; 0x30
90020878:	4620      	mov	r0, r4
9002087a:	4652      	mov	r2, sl
9002087c:	f00d fba4 	bl	9002dfc8 <memset>
90020880:	eb04 000a 	add.w	r0, r4, sl
90020884:	f1b9 0f00 	cmp.w	r9, #0
90020888:	d054      	beq.n	90020934 <EwFormatFloatToAnsiString+0x1a4>
9002088a:	232d      	movs	r3, #45	; 0x2d
9002088c:	3001      	adds	r0, #1
9002088e:	f804 300a 	strb.w	r3, [r4, sl]
90020892:	1e43      	subs	r3, r0, #1
90020894:	42b3      	cmp	r3, r6
90020896:	d853      	bhi.n	90020940 <EwFormatFloatToAnsiString+0x1b0>
90020898:	1b40      	subs	r0, r0, r5
9002089a:	b011      	add	sp, #68	; 0x44
9002089c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900208a0:	ac03      	add	r4, sp, #12
900208a2:	201a      	movs	r0, #26
900208a4:	2300      	movs	r3, #0
900208a6:	f8b4 e000 	ldrh.w	lr, [r4]
900208aa:	3801      	subs	r0, #1
900208ac:	fb0c 330e 	mla	r3, ip, lr, r3
900208b0:	f824 3b02 	strh.w	r3, [r4], #2
900208b4:	ea4f 4323 	mov.w	r3, r3, asr #16
900208b8:	d1f5      	bne.n	900208a6 <EwFormatFloatToAnsiString+0x116>
900208ba:	3601      	adds	r6, #1
900208bc:	e7af      	b.n	9002081e <EwFormatFloatToAnsiString+0x8e>
900208be:	a808      	add	r0, sp, #32
900208c0:	2210      	movs	r2, #16
900208c2:	8803      	ldrh	r3, [r0, #0]
900208c4:	3301      	adds	r3, #1
900208c6:	b29b      	uxth	r3, r3
900208c8:	f820 3b02 	strh.w	r3, [r0], #2
900208cc:	2b00      	cmp	r3, #0
900208ce:	d1ac      	bne.n	9002082a <EwFormatFloatToAnsiString+0x9a>
900208d0:	3a01      	subs	r2, #1
900208d2:	d1f6      	bne.n	900208c2 <EwFormatFloatToAnsiString+0x132>
900208d4:	e7a9      	b.n	9002082a <EwFormatFloatToAnsiString+0x9a>
900208d6:	3901      	subs	r1, #1
900208d8:	e7aa      	b.n	90020830 <EwFormatFloatToAnsiString+0xa0>
900208da:	f10d 0e3e 	add.w	lr, sp, #62	; 0x3e
900208de:	f04f 0c10 	mov.w	ip, #16
900208e2:	2000      	movs	r0, #0
900208e4:	2301      	movs	r3, #1
900208e6:	f83e 2902 	ldrh.w	r2, [lr], #-2
900208ea:	eb12 4200 	adds.w	r2, r2, r0, lsl #16
900208ee:	d00d      	beq.n	9002090c <EwFormatFloatToAnsiString+0x17c>
900208f0:	fbb2 f0fa 	udiv	r0, r2, sl
900208f4:	fa1f fb80 	uxth.w	fp, r0
900208f8:	fb0a 2010 	mls	r0, sl, r0, r2
900208fc:	f1bb 0f00 	cmp.w	fp, #0
90020900:	bf14      	ite	ne
90020902:	2300      	movne	r3, #0
90020904:	f003 0301 	andeq.w	r3, r3, #1
90020908:	f8ae b002 	strh.w	fp, [lr, #2]
9002090c:	f1bc 0c01 	subs.w	ip, ip, #1
90020910:	d1e9      	bne.n	900208e6 <EwFormatFloatToAnsiString+0x156>
90020912:	3e01      	subs	r6, #1
90020914:	f100 0030 	add.w	r0, r0, #48	; 0x30
90020918:	bf04      	itt	eq
9002091a:	232e      	moveq	r3, #46	; 0x2e
9002091c:	f101 31ff 	addeq.w	r1, r1, #4294967295
90020920:	7020      	strb	r0, [r4, #0]
90020922:	bf14      	ite	ne
90020924:	3401      	addne	r4, #1
90020926:	7063      	strbeq	r3, [r4, #1]
90020928:	f101 31ff 	add.w	r1, r1, #4294967295
9002092c:	bf04      	itt	eq
9002092e:	4633      	moveq	r3, r6
90020930:	3402      	addeq	r4, #2
90020932:	e781      	b.n	90020838 <EwFormatFloatToAnsiString+0xa8>
90020934:	2f00      	cmp	r7, #0
90020936:	d0ac      	beq.n	90020892 <EwFormatFloatToAnsiString+0x102>
90020938:	232b      	movs	r3, #43	; 0x2b
9002093a:	f800 3b01 	strb.w	r3, [r0], #1
9002093e:	e7a8      	b.n	90020892 <EwFormatFloatToAnsiString+0x102>
90020940:	7832      	ldrb	r2, [r6, #0]
90020942:	7819      	ldrb	r1, [r3, #0]
90020944:	f806 1b01 	strb.w	r1, [r6], #1
90020948:	f803 2901 	strb.w	r2, [r3], #-1
9002094c:	e7a2      	b.n	90020894 <EwFormatFloatToAnsiString+0x104>
9002094e:	2000      	movs	r0, #0
90020950:	e7a3      	b.n	9002089a <EwFormatFloatToAnsiString+0x10a>

90020952 <EwNewString>:
90020952:	b507      	push	{r0, r1, r2, lr}
90020954:	9001      	str	r0, [sp, #4]
90020956:	f7ff fbc3 	bl	900200e0 <EwNotifyObservers+0x24c>
9002095a:	9000      	str	r0, [sp, #0]
9002095c:	f7ff faea 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020960:	e9dd 2100 	ldrd	r2, r1, [sp]
90020964:	f7ff fbc6 	bl	900200f4 <EwNotifyObservers+0x260>
90020968:	b003      	add	sp, #12
9002096a:	f85d fb04 	ldr.w	pc, [sp], #4

9002096e <EwNewStringAnsi>:
9002096e:	b570      	push	{r4, r5, r6, lr}
90020970:	4603      	mov	r3, r0
90020972:	4604      	mov	r4, r0
90020974:	461d      	mov	r5, r3
90020976:	f813 2b01 	ldrb.w	r2, [r3], #1
9002097a:	2a00      	cmp	r2, #0
9002097c:	d1fa      	bne.n	90020974 <EwNewStringAnsi+0x6>
9002097e:	1b2e      	subs	r6, r5, r4
90020980:	4630      	mov	r0, r6
90020982:	f7ff fad7 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020986:	b128      	cbz	r0, 90020994 <EwNewStringAnsi+0x26>
90020988:	4603      	mov	r3, r0
9002098a:	42a5      	cmp	r5, r4
9002098c:	d103      	bne.n	90020996 <EwNewStringAnsi+0x28>
9002098e:	2300      	movs	r3, #0
90020990:	f820 3016 	strh.w	r3, [r0, r6, lsl #1]
90020994:	bd70      	pop	{r4, r5, r6, pc}
90020996:	f814 2b01 	ldrb.w	r2, [r4], #1
9002099a:	f823 2b02 	strh.w	r2, [r3], #2
9002099e:	e7f4      	b.n	9002098a <EwNewStringAnsi+0x1c>

900209a0 <EwNewStringUtf8>:
900209a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900209a2:	460d      	mov	r5, r1
900209a4:	460b      	mov	r3, r1
900209a6:	4604      	mov	r4, r0
900209a8:	4601      	mov	r1, r0
900209aa:	2700      	movs	r7, #0
900209ac:	2b00      	cmp	r3, #0
900209ae:	dd0e      	ble.n	900209ce <EwNewStringUtf8+0x2e>
900209b0:	f991 0000 	ldrsb.w	r0, [r1]
900209b4:	780a      	ldrb	r2, [r1, #0]
900209b6:	2800      	cmp	r0, #0
900209b8:	db03      	blt.n	900209c2 <EwNewStringUtf8+0x22>
900209ba:	3b01      	subs	r3, #1
900209bc:	3101      	adds	r1, #1
900209be:	3701      	adds	r7, #1
900209c0:	e7f4      	b.n	900209ac <EwNewStringUtf8+0xc>
900209c2:	2adf      	cmp	r2, #223	; 0xdf
900209c4:	d814      	bhi.n	900209f0 <EwNewStringUtf8+0x50>
900209c6:	3b02      	subs	r3, #2
900209c8:	3102      	adds	r1, #2
900209ca:	2b00      	cmp	r3, #0
900209cc:	daf7      	bge.n	900209be <EwNewStringUtf8+0x1e>
900209ce:	4638      	mov	r0, r7
900209d0:	f7ff fab0 	bl	9001ff34 <EwNotifyObservers+0xa0>
900209d4:	b158      	cbz	r0, 900209ee <EwNewStringUtf8+0x4e>
900209d6:	007e      	lsls	r6, r7, #1
900209d8:	4601      	mov	r1, r0
900209da:	eb00 0247 	add.w	r2, r0, r7, lsl #1
900209de:	f64f 77ff 	movw	r7, #65535	; 0xffff
900209e2:	4291      	cmp	r1, r2
900209e4:	d001      	beq.n	900209ea <EwNewStringUtf8+0x4a>
900209e6:	2d00      	cmp	r5, #0
900209e8:	dc09      	bgt.n	900209fe <EwNewStringUtf8+0x5e>
900209ea:	2300      	movs	r3, #0
900209ec:	5383      	strh	r3, [r0, r6]
900209ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900209f0:	2aef      	cmp	r2, #239	; 0xef
900209f2:	bf99      	ittee	ls
900209f4:	3b03      	subls	r3, #3
900209f6:	3103      	addls	r1, #3
900209f8:	3b04      	subhi	r3, #4
900209fa:	3104      	addhi	r1, #4
900209fc:	e7e5      	b.n	900209ca <EwNewStringUtf8+0x2a>
900209fe:	7823      	ldrb	r3, [r4, #0]
90020a00:	2b7f      	cmp	r3, #127	; 0x7f
90020a02:	d804      	bhi.n	90020a0e <EwNewStringUtf8+0x6e>
90020a04:	3401      	adds	r4, #1
90020a06:	3d01      	subs	r5, #1
90020a08:	f821 3b02 	strh.w	r3, [r1], #2
90020a0c:	e7e9      	b.n	900209e2 <EwNewStringUtf8+0x42>
90020a0e:	2bdf      	cmp	r3, #223	; 0xdf
90020a10:	d80c      	bhi.n	90020a2c <EwNewStringUtf8+0x8c>
90020a12:	2d01      	cmp	r5, #1
90020a14:	d0e9      	beq.n	900209ea <EwNewStringUtf8+0x4a>
90020a16:	f894 c001 	ldrb.w	ip, [r4, #1]
90020a1a:	019b      	lsls	r3, r3, #6
90020a1c:	3d02      	subs	r5, #2
90020a1e:	3402      	adds	r4, #2
90020a20:	f403 63f8 	and.w	r3, r3, #1984	; 0x7c0
90020a24:	f00c 0c3f 	and.w	ip, ip, #63	; 0x3f
90020a28:	4463      	add	r3, ip
90020a2a:	e7ed      	b.n	90020a08 <EwNewStringUtf8+0x68>
90020a2c:	2bef      	cmp	r3, #239	; 0xef
90020a2e:	d811      	bhi.n	90020a54 <EwNewStringUtf8+0xb4>
90020a30:	2d02      	cmp	r5, #2
90020a32:	dd0f      	ble.n	90020a54 <EwNewStringUtf8+0xb4>
90020a34:	f894 c002 	ldrb.w	ip, [r4, #2]
90020a38:	031b      	lsls	r3, r3, #12
90020a3a:	3d03      	subs	r5, #3
90020a3c:	3403      	adds	r4, #3
90020a3e:	b29b      	uxth	r3, r3
90020a40:	f00c 0c3f 	and.w	ip, ip, #63	; 0x3f
90020a44:	449c      	add	ip, r3
90020a46:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90020a4a:	019b      	lsls	r3, r3, #6
90020a4c:	f403 637c 	and.w	r3, r3, #4032	; 0xfc0
90020a50:	4463      	add	r3, ip
90020a52:	e7d9      	b.n	90020a08 <EwNewStringUtf8+0x68>
90020a54:	2d03      	cmp	r5, #3
90020a56:	ddc8      	ble.n	900209ea <EwNewStringUtf8+0x4a>
90020a58:	f894 c001 	ldrb.w	ip, [r4, #1]
90020a5c:	049b      	lsls	r3, r3, #18
90020a5e:	f894 e003 	ldrb.w	lr, [r4, #3]
90020a62:	3d04      	subs	r5, #4
90020a64:	ea4f 3c0c 	mov.w	ip, ip, lsl #12
90020a68:	f403 13e0 	and.w	r3, r3, #1835008	; 0x1c0000
90020a6c:	f00e 0e3f 	and.w	lr, lr, #63	; 0x3f
90020a70:	3404      	adds	r4, #4
90020a72:	f40c 3c7c 	and.w	ip, ip, #258048	; 0x3f000
90020a76:	ea4c 0c03 	orr.w	ip, ip, r3
90020a7a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
90020a7e:	019b      	lsls	r3, r3, #6
90020a80:	f403 637c 	and.w	r3, r3, #4032	; 0xfc0
90020a84:	4473      	add	r3, lr
90020a86:	4463      	add	r3, ip
90020a88:	42bb      	cmp	r3, r7
90020a8a:	bf28      	it	cs
90020a8c:	463b      	movcs	r3, r7
90020a8e:	e7bb      	b.n	90020a08 <EwNewStringUtf8+0x68>

90020a90 <EwNewStringUInt>:
90020a90:	b510      	push	{r4, lr}
90020a92:	2400      	movs	r4, #0
90020a94:	b0a4      	sub	sp, #144	; 0x90
90020a96:	4613      	mov	r3, r2
90020a98:	460a      	mov	r2, r1
90020a9a:	4601      	mov	r1, r0
90020a9c:	a803      	add	r0, sp, #12
90020a9e:	e9cd 4400 	strd	r4, r4, [sp]
90020aa2:	f7ff fc89 	bl	900203b8 <EwFormatUIntToAnsiString>
90020aa6:	ab24      	add	r3, sp, #144	; 0x90
90020aa8:	4418      	add	r0, r3
90020aaa:	f800 4c84 	strb.w	r4, [r0, #-132]
90020aae:	a803      	add	r0, sp, #12
90020ab0:	f7ff ff5d 	bl	9002096e <EwNewStringAnsi>
90020ab4:	b024      	add	sp, #144	; 0x90
90020ab6:	bd10      	pop	{r4, pc}

90020ab8 <EwNewStringInt>:
90020ab8:	b510      	push	{r4, lr}
90020aba:	2400      	movs	r4, #0
90020abc:	b0a4      	sub	sp, #144	; 0x90
90020abe:	4613      	mov	r3, r2
90020ac0:	460a      	mov	r2, r1
90020ac2:	4601      	mov	r1, r0
90020ac4:	a803      	add	r0, sp, #12
90020ac6:	e9cd 4400 	strd	r4, r4, [sp]
90020aca:	f7ff fcd6 	bl	9002047a <EwFormatIntToAnsiString>
90020ace:	ab24      	add	r3, sp, #144	; 0x90
90020ad0:	4418      	add	r0, r3
90020ad2:	f800 4c84 	strb.w	r4, [r0, #-132]
90020ad6:	a803      	add	r0, sp, #12
90020ad8:	f7ff ff49 	bl	9002096e <EwNewStringAnsi>
90020adc:	b024      	add	sp, #144	; 0x90
90020ade:	bd10      	pop	{r4, pc}

90020ae0 <EwNewStringUInt64>:
90020ae0:	b510      	push	{r4, lr}
90020ae2:	2400      	movs	r4, #0
90020ae4:	b0a6      	sub	sp, #152	; 0x98
90020ae6:	e9cd 2300 	strd	r2, r3, [sp]
90020aea:	e9cd 4402 	strd	r4, r4, [sp, #8]
90020aee:	4602      	mov	r2, r0
90020af0:	460b      	mov	r3, r1
90020af2:	a805      	add	r0, sp, #20
90020af4:	f7ff fd30 	bl	90020558 <EwFormatUInt64ToAnsiString>
90020af8:	ab26      	add	r3, sp, #152	; 0x98
90020afa:	4418      	add	r0, r3
90020afc:	f800 4c84 	strb.w	r4, [r0, #-132]
90020b00:	a805      	add	r0, sp, #20
90020b02:	f7ff ff34 	bl	9002096e <EwNewStringAnsi>
90020b06:	b026      	add	sp, #152	; 0x98
90020b08:	bd10      	pop	{r4, pc}

90020b0a <EwNewStringInt64>:
90020b0a:	b510      	push	{r4, lr}
90020b0c:	2400      	movs	r4, #0
90020b0e:	b0a6      	sub	sp, #152	; 0x98
90020b10:	e9cd 2300 	strd	r2, r3, [sp]
90020b14:	e9cd 4402 	strd	r4, r4, [sp, #8]
90020b18:	4602      	mov	r2, r0
90020b1a:	460b      	mov	r3, r1
90020b1c:	a805      	add	r0, sp, #20
90020b1e:	f7ff fda1 	bl	90020664 <EwFormatInt64ToAnsiString>
90020b22:	ab26      	add	r3, sp, #152	; 0x98
90020b24:	4418      	add	r0, r3
90020b26:	f800 4c84 	strb.w	r4, [r0, #-132]
90020b2a:	a805      	add	r0, sp, #20
90020b2c:	f7ff ff1f 	bl	9002096e <EwNewStringAnsi>
90020b30:	b026      	add	sp, #152	; 0x98
90020b32:	bd10      	pop	{r4, pc}

90020b34 <EwNewStringFloat>:
90020b34:	1e0a      	subs	r2, r1, #0
90020b36:	f04f 0300 	mov.w	r3, #0
90020b3a:	4601      	mov	r1, r0
90020b3c:	bfb8      	it	lt
90020b3e:	f06f 0205 	mvnlt.w	r2, #5
90020b42:	b500      	push	{lr}
90020b44:	b0a3      	sub	sp, #140	; 0x8c
90020b46:	a801      	add	r0, sp, #4
90020b48:	f7ff fe22 	bl	90020790 <EwFormatFloatToAnsiString>
90020b4c:	b928      	cbnz	r0, 90020b5a <EwNewStringFloat+0x26>
90020b4e:	4806      	ldr	r0, [pc, #24]	; (90020b68 <EwNewStringFloat+0x34>)
90020b50:	f7ff ff0d 	bl	9002096e <EwNewStringAnsi>
90020b54:	b023      	add	sp, #140	; 0x8c
90020b56:	f85d fb04 	ldr.w	pc, [sp], #4
90020b5a:	ab22      	add	r3, sp, #136	; 0x88
90020b5c:	4418      	add	r0, r3
90020b5e:	2300      	movs	r3, #0
90020b60:	f800 3c84 	strb.w	r3, [r0, #-132]
90020b64:	a801      	add	r0, sp, #4
90020b66:	e7f3      	b.n	90020b50 <EwNewStringFloat+0x1c>
90020b68:	90034985 	.word	0x90034985

90020b6c <EwNewStringChar>:
90020b6c:	b538      	push	{r3, r4, r5, lr}
90020b6e:	4605      	mov	r5, r0
90020b70:	4608      	mov	r0, r1
90020b72:	460c      	mov	r4, r1
90020b74:	f7ff f9de 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020b78:	b130      	cbz	r0, 90020b88 <EwNewStringChar+0x1c>
90020b7a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90020b7e:	4603      	mov	r3, r0
90020b80:	42a3      	cmp	r3, r4
90020b82:	d102      	bne.n	90020b8a <EwNewStringChar+0x1e>
90020b84:	2200      	movs	r2, #0
90020b86:	801a      	strh	r2, [r3, #0]
90020b88:	bd38      	pop	{r3, r4, r5, pc}
90020b8a:	f823 5b02 	strh.w	r5, [r3], #2
90020b8e:	e7f7      	b.n	90020b80 <EwNewStringChar+0x14>

90020b90 <EwCompString>:
90020b90:	b538      	push	{r3, r4, r5, lr}
90020b92:	460d      	mov	r5, r1
90020b94:	f7ff fac0 	bl	90020118 <EwNotifyObservers+0x284>
90020b98:	4604      	mov	r4, r0
90020b9a:	4628      	mov	r0, r5
90020b9c:	f7ff fabc 	bl	90020118 <EwNotifyObservers+0x284>
90020ba0:	4b0d      	ldr	r3, [pc, #52]	; (90020bd8 <EwCompString+0x48>)
90020ba2:	2c00      	cmp	r4, #0
90020ba4:	bf08      	it	eq
90020ba6:	461c      	moveq	r4, r3
90020ba8:	2800      	cmp	r0, #0
90020baa:	bf18      	it	ne
90020bac:	4603      	movne	r3, r0
90020bae:	3c02      	subs	r4, #2
90020bb0:	3b02      	subs	r3, #2
90020bb2:	f834 2f02 	ldrh.w	r2, [r4, #2]!
90020bb6:	f833 1f02 	ldrh.w	r1, [r3, #2]!
90020bba:	428a      	cmp	r2, r1
90020bbc:	d101      	bne.n	90020bc2 <EwCompString+0x32>
90020bbe:	2a00      	cmp	r2, #0
90020bc0:	d1f7      	bne.n	90020bb2 <EwCompString+0x22>
90020bc2:	1a52      	subs	r2, r2, r1
90020bc4:	2a00      	cmp	r2, #0
90020bc6:	db03      	blt.n	90020bd0 <EwCompString+0x40>
90020bc8:	bf14      	ite	ne
90020bca:	2001      	movne	r0, #1
90020bcc:	2000      	moveq	r0, #0
90020bce:	bd38      	pop	{r3, r4, r5, pc}
90020bd0:	f04f 30ff 	mov.w	r0, #4294967295
90020bd4:	e7fb      	b.n	90020bce <EwCompString+0x3e>
90020bd6:	bf00      	nop
90020bd8:	90033270 	.word	0x90033270

90020bdc <EwLoadString>:
90020bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020be0:	f8df b1f8 	ldr.w	fp, [pc, #504]	; 90020ddc <EwLoadString+0x200>
90020be4:	b085      	sub	sp, #20
90020be6:	8883      	ldrh	r3, [r0, #4]
90020be8:	f8db 7000 	ldr.w	r7, [fp]
90020bec:	6806      	ldr	r6, [r0, #0]
90020bee:	9301      	str	r3, [sp, #4]
90020bf0:	b1b7      	cbz	r7, 90020c20 <EwLoadString+0x44>
90020bf2:	4b72      	ldr	r3, [pc, #456]	; (90020dbc <EwLoadString+0x1e0>)
90020bf4:	681b      	ldr	r3, [r3, #0]
90020bf6:	42b3      	cmp	r3, r6
90020bf8:	d814      	bhi.n	90020c24 <EwLoadString+0x48>
90020bfa:	4b71      	ldr	r3, [pc, #452]	; (90020dc0 <EwLoadString+0x1e4>)
90020bfc:	4630      	mov	r0, r6
90020bfe:	681b      	ldr	r3, [r3, #0]
90020c00:	42b3      	cmp	r3, r6
90020c02:	d310      	bcc.n	90020c26 <EwLoadString+0x4a>
90020c04:	47b8      	blx	r7
90020c06:	2701      	movs	r7, #1
90020c08:	6803      	ldr	r3, [r0, #0]
90020c0a:	9302      	str	r3, [sp, #8]
90020c0c:	b96f      	cbnz	r7, 90020c2a <EwLoadString+0x4e>
90020c0e:	3301      	adds	r3, #1
90020c10:	d11e      	bne.n	90020c50 <EwLoadString+0x74>
90020c12:	9b01      	ldr	r3, [sp, #4]
90020c14:	eb06 0543 	add.w	r5, r6, r3, lsl #1
90020c18:	4628      	mov	r0, r5
90020c1a:	b005      	add	sp, #20
90020c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020c20:	4630      	mov	r0, r6
90020c22:	e7f1      	b.n	90020c08 <EwLoadString+0x2c>
90020c24:	4630      	mov	r0, r6
90020c26:	2700      	movs	r7, #0
90020c28:	e7ee      	b.n	90020c08 <EwLoadString+0x2c>
90020c2a:	9b02      	ldr	r3, [sp, #8]
90020c2c:	3301      	adds	r3, #1
90020c2e:	d10f      	bne.n	90020c50 <EwLoadString+0x74>
90020c30:	9b01      	ldr	r3, [sp, #4]
90020c32:	005b      	lsls	r3, r3, #1
90020c34:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 90020de0 <EwLoadString+0x204>
90020c38:	4433      	add	r3, r6
90020c3a:	f8d8 5004 	ldr.w	r5, [r8, #4]
90020c3e:	b15d      	cbz	r5, 90020c58 <EwLoadString+0x7c>
90020c40:	68ea      	ldr	r2, [r5, #12]
90020c42:	4293      	cmp	r3, r2
90020c44:	d106      	bne.n	90020c54 <EwLoadString+0x78>
90020c46:	4628      	mov	r0, r5
90020c48:	462c      	mov	r4, r5
90020c4a:	f7ff f95d 	bl	9001ff08 <EwNotifyObservers+0x74>
90020c4e:	e047      	b.n	90020ce0 <EwLoadString+0x104>
90020c50:	2300      	movs	r3, #0
90020c52:	e7ef      	b.n	90020c34 <EwLoadString+0x58>
90020c54:	682d      	ldr	r5, [r5, #0]
90020c56:	e7f2      	b.n	90020c3e <EwLoadString+0x62>
90020c58:	9b01      	ldr	r3, [sp, #4]
90020c5a:	eb06 0943 	add.w	r9, r6, r3, lsl #1
90020c5e:	9b02      	ldr	r3, [sp, #8]
90020c60:	3301      	adds	r3, #1
90020c62:	d04e      	beq.n	90020d02 <EwLoadString+0x126>
90020c64:	2f00      	cmp	r7, #0
90020c66:	d145      	bne.n	90020cf4 <EwLoadString+0x118>
90020c68:	f8d6 a000 	ldr.w	sl, [r6]
90020c6c:	f10a 0310 	add.w	r3, sl, #16
90020c70:	4618      	mov	r0, r3
90020c72:	9303      	str	r3, [sp, #12]
90020c74:	f006 f81e 	bl	90026cb4 <EwAlloc>
90020c78:	4604      	mov	r4, r0
90020c7a:	2800      	cmp	r0, #0
90020c7c:	f000 8081 	beq.w	90020d82 <EwLoadString+0x1a6>
90020c80:	9b03      	ldr	r3, [sp, #12]
90020c82:	f100 0510 	add.w	r5, r0, #16
90020c86:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
90020c8a:	60c6      	str	r6, [r0, #12]
90020c8c:	6083      	str	r3, [r0, #8]
90020c8e:	2300      	movs	r3, #0
90020c90:	4629      	mov	r1, r5
90020c92:	461a      	mov	r2, r3
90020c94:	e9c0 3300 	strd	r3, r3, [r0]
90020c98:	1d30      	adds	r0, r6, #4
90020c9a:	f7fe f899 	bl	9001edd0 <EwDecompress>
90020c9e:	4628      	mov	r0, r5
90020ca0:	ea4f 016a 	mov.w	r1, sl, asr #1
90020ca4:	f7fe f9c0 	bl	9001f028 <EwAdaptByteOrder2>
90020ca8:	4b46      	ldr	r3, [pc, #280]	; (90020dc4 <EwLoadString+0x1e8>)
90020caa:	9a03      	ldr	r2, [sp, #12]
90020cac:	6819      	ldr	r1, [r3, #0]
90020cae:	4411      	add	r1, r2
90020cb0:	4620      	mov	r0, r4
90020cb2:	6019      	str	r1, [r3, #0]
90020cb4:	f7ff f904 	bl	9001fec0 <EwNotifyObservers+0x2c>
90020cb8:	4a43      	ldr	r2, [pc, #268]	; (90020dc8 <EwLoadString+0x1ec>)
90020cba:	6813      	ldr	r3, [r2, #0]
90020cbc:	4418      	add	r0, r3
90020cbe:	4b43      	ldr	r3, [pc, #268]	; (90020dcc <EwLoadString+0x1f0>)
90020cc0:	6010      	str	r0, [r2, #0]
90020cc2:	681a      	ldr	r2, [r3, #0]
90020cc4:	4291      	cmp	r1, r2
90020cc6:	bfc8      	it	gt
90020cc8:	6019      	strgt	r1, [r3, #0]
90020cca:	4b41      	ldr	r3, [pc, #260]	; (90020dd0 <EwLoadString+0x1f4>)
90020ccc:	681b      	ldr	r3, [r3, #0]
90020cce:	4419      	add	r1, r3
90020cd0:	4b40      	ldr	r3, [pc, #256]	; (90020dd4 <EwLoadString+0x1f8>)
90020cd2:	681b      	ldr	r3, [r3, #0]
90020cd4:	4419      	add	r1, r3
90020cd6:	4b40      	ldr	r3, [pc, #256]	; (90020dd8 <EwLoadString+0x1fc>)
90020cd8:	681a      	ldr	r2, [r3, #0]
90020cda:	4291      	cmp	r1, r2
90020cdc:	dd00      	ble.n	90020ce0 <EwLoadString+0x104>
90020cde:	6019      	str	r1, [r3, #0]
90020ce0:	f8d8 3004 	ldr.w	r3, [r8, #4]
90020ce4:	2200      	movs	r2, #0
90020ce6:	6023      	str	r3, [r4, #0]
90020ce8:	6062      	str	r2, [r4, #4]
90020cea:	2b00      	cmp	r3, #0
90020cec:	d153      	bne.n	90020d96 <EwLoadString+0x1ba>
90020cee:	f8c8 4000 	str.w	r4, [r8]
90020cf2:	e051      	b.n	90020d98 <EwLoadString+0x1bc>
90020cf4:	f8db 3000 	ldr.w	r3, [fp]
90020cf8:	4630      	mov	r0, r6
90020cfa:	4798      	blx	r3
90020cfc:	f8d0 a000 	ldr.w	sl, [r0]
90020d00:	e7b4      	b.n	90020c6c <EwLoadString+0x90>
90020d02:	46ca      	mov	sl, r9
90020d04:	f1b9 0f00 	cmp.w	r9, #0
90020d08:	d009      	beq.n	90020d1e <EwLoadString+0x142>
90020d0a:	f8db 3000 	ldr.w	r3, [fp]
90020d0e:	4650      	mov	r0, sl
90020d10:	4798      	blx	r3
90020d12:	8803      	ldrh	r3, [r0, #0]
90020d14:	bb33      	cbnz	r3, 90020d64 <EwLoadString+0x188>
90020d16:	ebaa 0a09 	sub.w	sl, sl, r9
90020d1a:	ea4f 0a6a 	mov.w	sl, sl, asr #1
90020d1e:	f10a 010c 	add.w	r1, sl, #12
90020d22:	004a      	lsls	r2, r1, #1
90020d24:	4610      	mov	r0, r2
90020d26:	9203      	str	r2, [sp, #12]
90020d28:	f005 ffc4 	bl	90026cb4 <EwAlloc>
90020d2c:	4604      	mov	r4, r0
90020d2e:	b340      	cbz	r0, 90020d82 <EwLoadString+0x1a6>
90020d30:	f10a 0103 	add.w	r1, sl, #3
90020d34:	2600      	movs	r6, #0
90020d36:	9a03      	ldr	r2, [sp, #12]
90020d38:	f100 0512 	add.w	r5, r0, #18
90020d3c:	8201      	strh	r1, [r0, #16]
90020d3e:	f244 5157 	movw	r1, #17751	; 0x4557
90020d42:	f8c0 900c 	str.w	r9, [r0, #12]
90020d46:	8241      	strh	r1, [r0, #18]
90020d48:	f10a 0102 	add.w	r1, sl, #2
90020d4c:	6082      	str	r2, [r0, #8]
90020d4e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90020d52:	e9c0 6600 	strd	r6, r6, [r0]
90020d56:	820e      	strh	r6, [r1, #16]
90020d58:	824e      	strh	r6, [r1, #18]
90020d5a:	4556      	cmp	r6, sl
90020d5c:	db05      	blt.n	90020d6a <EwLoadString+0x18e>
90020d5e:	4b19      	ldr	r3, [pc, #100]	; (90020dc4 <EwLoadString+0x1e8>)
90020d60:	6819      	ldr	r1, [r3, #0]
90020d62:	e7a4      	b.n	90020cae <EwLoadString+0xd2>
90020d64:	f10a 0a02 	add.w	sl, sl, #2
90020d68:	e7cf      	b.n	90020d0a <EwLoadString+0x12e>
90020d6a:	eb09 0046 	add.w	r0, r9, r6, lsl #1
90020d6e:	f8db 1000 	ldr.w	r1, [fp]
90020d72:	9203      	str	r2, [sp, #12]
90020d74:	4788      	blx	r1
90020d76:	8803      	ldrh	r3, [r0, #0]
90020d78:	3601      	adds	r6, #1
90020d7a:	9a03      	ldr	r2, [sp, #12]
90020d7c:	f825 3f02 	strh.w	r3, [r5, #2]!
90020d80:	e7eb      	b.n	90020d5a <EwLoadString+0x17e>
90020d82:	2002      	movs	r0, #2
90020d84:	f7fd fb16 	bl	9001e3b4 <EwImmediateReclaimMemory>
90020d88:	2800      	cmp	r0, #0
90020d8a:	f47f af68 	bne.w	90020c5e <EwLoadString+0x82>
90020d8e:	2002      	movs	r0, #2
90020d90:	f7fc fb5e 	bl	9001d450 <EwError>
90020d94:	e740      	b.n	90020c18 <EwLoadString+0x3c>
90020d96:	605c      	str	r4, [r3, #4]
90020d98:	f8d8 2008 	ldr.w	r2, [r8, #8]
90020d9c:	68a3      	ldr	r3, [r4, #8]
90020d9e:	f8c8 4004 	str.w	r4, [r8, #4]
90020da2:	4413      	add	r3, r2
90020da4:	f8c8 3008 	str.w	r3, [r8, #8]
90020da8:	9b02      	ldr	r3, [sp, #8]
90020daa:	3301      	adds	r3, #1
90020dac:	bf16      	itet	ne
90020dae:	9b01      	ldrne	r3, [sp, #4]
90020db0:	2504      	moveq	r5, #4
90020db2:	005d      	lslne	r5, r3, #1
90020db4:	3510      	adds	r5, #16
90020db6:	4425      	add	r5, r4
90020db8:	e72e      	b.n	90020c18 <EwLoadString+0x3c>
90020dba:	bf00      	nop
90020dbc:	20000300 	.word	0x20000300
90020dc0:	20000304 	.word	0x20000304
90020dc4:	200002b8 	.word	0x200002b8
90020dc8:	200002d4 	.word	0x200002d4
90020dcc:	200002d0 	.word	0x200002d0
90020dd0:	200002ac 	.word	0x200002ac
90020dd4:	200002bc 	.word	0x200002bc
90020dd8:	200002c0 	.word	0x200002c0
90020ddc:	200002fc 	.word	0x200002fc
90020de0:	20000330 	.word	0x20000330

90020de4 <EwShareString>:
90020de4:	b510      	push	{r4, lr}
90020de6:	4604      	mov	r4, r0
90020de8:	f7ff f996 	bl	90020118 <EwNotifyObservers+0x284>
90020dec:	b14c      	cbz	r4, 90020e02 <EwShareString+0x1e>
90020dee:	f244 6377 	movw	r3, #18039	; 0x4677
90020df2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90020df6:	429a      	cmp	r2, r3
90020df8:	bf04      	itt	eq
90020dfa:	f244 5357 	movweq	r3, #17751	; 0x4557
90020dfe:	f824 3c02 	strheq.w	r3, [r4, #-2]
90020e02:	4620      	mov	r0, r4
90020e04:	bd10      	pop	{r4, pc}

90020e06 <EwConcatString>:
90020e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90020e0a:	460e      	mov	r6, r1
90020e0c:	4680      	mov	r8, r0
90020e0e:	f7ff f983 	bl	90020118 <EwNotifyObservers+0x284>
90020e12:	f7ff f965 	bl	900200e0 <EwNotifyObservers+0x24c>
90020e16:	4605      	mov	r5, r0
90020e18:	4630      	mov	r0, r6
90020e1a:	f7ff f97d 	bl	90020118 <EwNotifyObservers+0x284>
90020e1e:	f7ff f95f 	bl	900200e0 <EwNotifyObservers+0x24c>
90020e22:	4607      	mov	r7, r0
90020e24:	b195      	cbz	r5, 90020e4c <EwConcatString+0x46>
90020e26:	b198      	cbz	r0, 90020e50 <EwConcatString+0x4a>
90020e28:	1828      	adds	r0, r5, r0
90020e2a:	f7ff f883 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020e2e:	4604      	mov	r4, r0
90020e30:	b148      	cbz	r0, 90020e46 <EwConcatString+0x40>
90020e32:	462a      	mov	r2, r5
90020e34:	4641      	mov	r1, r8
90020e36:	f7ff f95d 	bl	900200f4 <EwNotifyObservers+0x260>
90020e3a:	463a      	mov	r2, r7
90020e3c:	4631      	mov	r1, r6
90020e3e:	eb00 0045 	add.w	r0, r0, r5, lsl #1
90020e42:	f7ff f957 	bl	900200f4 <EwNotifyObservers+0x260>
90020e46:	4620      	mov	r0, r4
90020e48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90020e4c:	4634      	mov	r4, r6
90020e4e:	e7fa      	b.n	90020e46 <EwConcatString+0x40>
90020e50:	4644      	mov	r4, r8
90020e52:	e7f8      	b.n	90020e46 <EwConcatString+0x40>

90020e54 <EwConcatStringChar>:
90020e54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90020e56:	460e      	mov	r6, r1
90020e58:	4605      	mov	r5, r0
90020e5a:	f7ff f95d 	bl	90020118 <EwNotifyObservers+0x284>
90020e5e:	f7ff f93f 	bl	900200e0 <EwNotifyObservers+0x24c>
90020e62:	4607      	mov	r7, r0
90020e64:	b186      	cbz	r6, 90020e88 <EwConcatStringChar+0x34>
90020e66:	3001      	adds	r0, #1
90020e68:	f7ff f864 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020e6c:	4604      	mov	r4, r0
90020e6e:	b148      	cbz	r0, 90020e84 <EwConcatStringChar+0x30>
90020e70:	463a      	mov	r2, r7
90020e72:	4629      	mov	r1, r5
90020e74:	f7ff f93e 	bl	900200f4 <EwNotifyObservers+0x260>
90020e78:	2300      	movs	r3, #0
90020e7a:	eb00 0247 	add.w	r2, r0, r7, lsl #1
90020e7e:	f820 6017 	strh.w	r6, [r0, r7, lsl #1]
90020e82:	8053      	strh	r3, [r2, #2]
90020e84:	4620      	mov	r0, r4
90020e86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90020e88:	462c      	mov	r4, r5
90020e8a:	e7fb      	b.n	90020e84 <EwConcatStringChar+0x30>

90020e8c <EwConcatCharString>:
90020e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90020e8e:	4607      	mov	r7, r0
90020e90:	4608      	mov	r0, r1
90020e92:	460d      	mov	r5, r1
90020e94:	f7ff f940 	bl	90020118 <EwNotifyObservers+0x284>
90020e98:	f7ff f922 	bl	900200e0 <EwNotifyObservers+0x24c>
90020e9c:	4606      	mov	r6, r0
90020e9e:	b177      	cbz	r7, 90020ebe <EwConcatCharString+0x32>
90020ea0:	3001      	adds	r0, #1
90020ea2:	f7ff f847 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020ea6:	4604      	mov	r4, r0
90020ea8:	b138      	cbz	r0, 90020eba <EwConcatCharString+0x2e>
90020eaa:	2300      	movs	r3, #0
90020eac:	8007      	strh	r7, [r0, #0]
90020eae:	4632      	mov	r2, r6
90020eb0:	4629      	mov	r1, r5
90020eb2:	f820 3f02 	strh.w	r3, [r0, #2]!
90020eb6:	f7ff f91d 	bl	900200f4 <EwNotifyObservers+0x260>
90020eba:	4620      	mov	r0, r4
90020ebc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90020ebe:	462c      	mov	r4, r5
90020ec0:	e7fb      	b.n	90020eba <EwConcatCharString+0x2e>

90020ec2 <EwGetStringChar>:
90020ec2:	b538      	push	{r3, r4, r5, lr}
90020ec4:	460c      	mov	r4, r1
90020ec6:	4605      	mov	r5, r0
90020ec8:	f7ff f926 	bl	90020118 <EwNotifyObservers+0x284>
90020ecc:	4621      	mov	r1, r4
90020ece:	f7ff f801 	bl	9001fed4 <EwNotifyObservers+0x40>
90020ed2:	b108      	cbz	r0, 90020ed8 <EwGetStringChar+0x16>
90020ed4:	f835 0014 	ldrh.w	r0, [r5, r4, lsl #1]
90020ed8:	bd38      	pop	{r3, r4, r5, pc}

90020eda <EwSetStringChar>:
90020eda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90020edc:	460d      	mov	r5, r1
90020ede:	4604      	mov	r4, r0
90020ee0:	4617      	mov	r7, r2
90020ee2:	f7ff f919 	bl	90020118 <EwNotifyObservers+0x284>
90020ee6:	4629      	mov	r1, r5
90020ee8:	f7fe fff4 	bl	9001fed4 <EwNotifyObservers+0x40>
90020eec:	4606      	mov	r6, r0
90020eee:	b940      	cbnz	r0, 90020f02 <EwSetStringChar+0x28>
90020ef0:	4634      	mov	r4, r6
90020ef2:	f44f 7097 	mov.w	r0, #302	; 0x12e
90020ef6:	f7fc faab 	bl	9001d450 <EwError>
90020efa:	f005 fedf 	bl	90026cbc <EwPanic>
90020efe:	4620      	mov	r0, r4
90020f00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90020f02:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90020f06:	f244 6377 	movw	r3, #18039	; 0x4677
90020f0a:	429a      	cmp	r2, r3
90020f0c:	d003      	beq.n	90020f16 <EwSetStringChar+0x3c>
90020f0e:	4620      	mov	r0, r4
90020f10:	f7ff fd1f 	bl	90020952 <EwNewString>
90020f14:	4604      	mov	r4, r0
90020f16:	f824 7015 	strh.w	r7, [r4, r5, lsl #1]
90020f1a:	e7f0      	b.n	90020efe <EwSetStringChar+0x24>

90020f1c <EwGetStringLength>:
90020f1c:	b508      	push	{r3, lr}
90020f1e:	f7ff f8fb 	bl	90020118 <EwNotifyObservers+0x284>
90020f22:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90020f26:	f7ff b8db 	b.w	900200e0 <EwNotifyObservers+0x24c>

90020f2a <EwIsStringEmpty>:
90020f2a:	b508      	push	{r3, lr}
90020f2c:	b130      	cbz	r0, 90020f3c <EwIsStringEmpty+0x12>
90020f2e:	f7ff f8f3 	bl	90020118 <EwNotifyObservers+0x284>
90020f32:	8800      	ldrh	r0, [r0, #0]
90020f34:	fab0 f080 	clz	r0, r0
90020f38:	0940      	lsrs	r0, r0, #5
90020f3a:	bd08      	pop	{r3, pc}
90020f3c:	2001      	movs	r0, #1
90020f3e:	e7fc      	b.n	90020f3a <EwIsStringEmpty+0x10>

90020f40 <EwGetStringUpper>:
90020f40:	b537      	push	{r0, r1, r2, r4, r5, lr}
90020f42:	9001      	str	r0, [sp, #4]
90020f44:	f7ff f8e8 	bl	90020118 <EwNotifyObservers+0x284>
90020f48:	f7ff f8ca 	bl	900200e0 <EwNotifyObservers+0x24c>
90020f4c:	9000      	str	r0, [sp, #0]
90020f4e:	f7fe fff1 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020f52:	4604      	mov	r4, r0
90020f54:	e9dd 2100 	ldrd	r2, r1, [sp]
90020f58:	f7ff f8cc 	bl	900200f4 <EwNotifyObservers+0x260>
90020f5c:	b118      	cbz	r0, 90020f66 <EwGetStringUpper+0x26>
90020f5e:	1e85      	subs	r5, r0, #2
90020f60:	f835 0f02 	ldrh.w	r0, [r5, #2]!
90020f64:	b910      	cbnz	r0, 90020f6c <EwGetStringUpper+0x2c>
90020f66:	4620      	mov	r0, r4
90020f68:	b003      	add	sp, #12
90020f6a:	bd30      	pop	{r4, r5, pc}
90020f6c:	f7ff f82a 	bl	9001ffc4 <EwNotifyObservers+0x130>
90020f70:	8028      	strh	r0, [r5, #0]
90020f72:	e7f5      	b.n	90020f60 <EwGetStringUpper+0x20>

90020f74 <EwGetStringLower>:
90020f74:	b537      	push	{r0, r1, r2, r4, r5, lr}
90020f76:	9001      	str	r0, [sp, #4]
90020f78:	f7ff f8ce 	bl	90020118 <EwNotifyObservers+0x284>
90020f7c:	f7ff f8b0 	bl	900200e0 <EwNotifyObservers+0x24c>
90020f80:	9000      	str	r0, [sp, #0]
90020f82:	f7fe ffd7 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020f86:	4604      	mov	r4, r0
90020f88:	e9dd 2100 	ldrd	r2, r1, [sp]
90020f8c:	f7ff f8b2 	bl	900200f4 <EwNotifyObservers+0x260>
90020f90:	b118      	cbz	r0, 90020f9a <EwGetStringLower+0x26>
90020f92:	1e85      	subs	r5, r0, #2
90020f94:	f835 0f02 	ldrh.w	r0, [r5, #2]!
90020f98:	b910      	cbnz	r0, 90020fa0 <EwGetStringLower+0x2c>
90020f9a:	4620      	mov	r0, r4
90020f9c:	b003      	add	sp, #12
90020f9e:	bd30      	pop	{r4, r5, pc}
90020fa0:	f7ff f8ec 	bl	9002017c <ToLower>
90020fa4:	8028      	strh	r0, [r5, #0]
90020fa6:	e7f5      	b.n	90020f94 <EwGetStringLower+0x20>

90020fa8 <EwStringLeft>:
90020fa8:	b570      	push	{r4, r5, r6, lr}
90020faa:	460e      	mov	r6, r1
90020fac:	4604      	mov	r4, r0
90020fae:	f7ff f8b3 	bl	90020118 <EwNotifyObservers+0x284>
90020fb2:	f7ff f895 	bl	900200e0 <EwNotifyObservers+0x24c>
90020fb6:	42b0      	cmp	r0, r6
90020fb8:	4605      	mov	r5, r0
90020fba:	bfa8      	it	ge
90020fbc:	4635      	movge	r5, r6
90020fbe:	42b0      	cmp	r0, r6
90020fc0:	dd08      	ble.n	90020fd4 <EwStringLeft+0x2c>
90020fc2:	b14d      	cbz	r5, 90020fd8 <EwStringLeft+0x30>
90020fc4:	4628      	mov	r0, r5
90020fc6:	f7fe ffb5 	bl	9001ff34 <EwNotifyObservers+0xa0>
90020fca:	4621      	mov	r1, r4
90020fcc:	4604      	mov	r4, r0
90020fce:	462a      	mov	r2, r5
90020fd0:	f7ff f890 	bl	900200f4 <EwNotifyObservers+0x260>
90020fd4:	4620      	mov	r0, r4
90020fd6:	bd70      	pop	{r4, r5, r6, pc}
90020fd8:	462c      	mov	r4, r5
90020fda:	e7fb      	b.n	90020fd4 <EwStringLeft+0x2c>

90020fdc <EwStringRight>:
90020fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90020fde:	460f      	mov	r7, r1
90020fe0:	4605      	mov	r5, r0
90020fe2:	f7ff f899 	bl	90020118 <EwNotifyObservers+0x284>
90020fe6:	f7ff f87b 	bl	900200e0 <EwNotifyObservers+0x24c>
90020fea:	42b8      	cmp	r0, r7
90020fec:	4606      	mov	r6, r0
90020fee:	4604      	mov	r4, r0
90020ff0:	bfa8      	it	ge
90020ff2:	463e      	movge	r6, r7
90020ff4:	42b8      	cmp	r0, r7
90020ff6:	dd0a      	ble.n	9002100e <EwStringRight+0x32>
90020ff8:	b15e      	cbz	r6, 90021012 <EwStringRight+0x36>
90020ffa:	4630      	mov	r0, r6
90020ffc:	f7fe ff9a 	bl	9001ff34 <EwNotifyObservers+0xa0>
90021000:	1ba1      	subs	r1, r4, r6
90021002:	4632      	mov	r2, r6
90021004:	eb05 0141 	add.w	r1, r5, r1, lsl #1
90021008:	4605      	mov	r5, r0
9002100a:	f7ff f873 	bl	900200f4 <EwNotifyObservers+0x260>
9002100e:	4628      	mov	r0, r5
90021010:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90021012:	4635      	mov	r5, r6
90021014:	e7fb      	b.n	9002100e <EwStringRight+0x32>

90021016 <EwStringMiddle>:
90021016:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90021018:	460d      	mov	r5, r1
9002101a:	4614      	mov	r4, r2
9002101c:	4606      	mov	r6, r0
9002101e:	f7ff f87b 	bl	90020118 <EwNotifyObservers+0x284>
90021022:	f7ff f85d 	bl	900200e0 <EwNotifyObservers+0x24c>
90021026:	2d00      	cmp	r5, #0
90021028:	bfbc      	itt	lt
9002102a:	1964      	addlt	r4, r4, r5
9002102c:	2500      	movlt	r5, #0
9002102e:	4285      	cmp	r5, r0
90021030:	bfa8      	it	ge
90021032:	2400      	movge	r4, #0
90021034:	192b      	adds	r3, r5, r4
90021036:	4283      	cmp	r3, r0
90021038:	bfc8      	it	gt
9002103a:	1b44      	subgt	r4, r0, r5
9002103c:	4284      	cmp	r4, r0
9002103e:	d009      	beq.n	90021054 <EwStringMiddle+0x3e>
90021040:	b154      	cbz	r4, 90021058 <EwStringMiddle+0x42>
90021042:	4620      	mov	r0, r4
90021044:	f7fe ff76 	bl	9001ff34 <EwNotifyObservers+0xa0>
90021048:	4622      	mov	r2, r4
9002104a:	eb06 0145 	add.w	r1, r6, r5, lsl #1
9002104e:	4606      	mov	r6, r0
90021050:	f7ff f850 	bl	900200f4 <EwNotifyObservers+0x260>
90021054:	4630      	mov	r0, r6
90021056:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90021058:	4626      	mov	r6, r4
9002105a:	e7fb      	b.n	90021054 <EwStringMiddle+0x3e>

9002105c <EwStringInsert>:
9002105c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021060:	460e      	mov	r6, r1
90021062:	4614      	mov	r4, r2
90021064:	4607      	mov	r7, r0
90021066:	f7ff f857 	bl	90020118 <EwNotifyObservers+0x284>
9002106a:	f7ff f839 	bl	900200e0 <EwNotifyObservers+0x24c>
9002106e:	4680      	mov	r8, r0
90021070:	4630      	mov	r0, r6
90021072:	f7ff f851 	bl	90020118 <EwNotifyObservers+0x284>
90021076:	f7ff f833 	bl	900200e0 <EwNotifyObservers+0x24c>
9002107a:	4681      	mov	r9, r0
9002107c:	b320      	cbz	r0, 900210c8 <EwStringInsert+0x6c>
9002107e:	f1b8 0f00 	cmp.w	r8, #0
90021082:	d023      	beq.n	900210cc <EwStringInsert+0x70>
90021084:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90021088:	4440      	add	r0, r8
9002108a:	4544      	cmp	r4, r8
9002108c:	bfa8      	it	ge
9002108e:	4644      	movge	r4, r8
90021090:	f7fe ff50 	bl	9001ff34 <EwNotifyObservers+0xa0>
90021094:	4605      	mov	r5, r0
90021096:	b1a0      	cbz	r0, 900210c2 <EwStringInsert+0x66>
90021098:	4622      	mov	r2, r4
9002109a:	4639      	mov	r1, r7
9002109c:	f7ff f82a 	bl	900200f4 <EwNotifyObservers+0x260>
900210a0:	464a      	mov	r2, r9
900210a2:	4631      	mov	r1, r6
900210a4:	eb00 0044 	add.w	r0, r0, r4, lsl #1
900210a8:	f7ff f824 	bl	900200f4 <EwNotifyObservers+0x260>
900210ac:	1910      	adds	r0, r2, r4
900210ae:	ea4f 0a44 	mov.w	sl, r4, lsl #1
900210b2:	eba8 0204 	sub.w	r2, r8, r4
900210b6:	eb05 0040 	add.w	r0, r5, r0, lsl #1
900210ba:	eb07 010a 	add.w	r1, r7, sl
900210be:	f7ff f819 	bl	900200f4 <EwNotifyObservers+0x260>
900210c2:	4628      	mov	r0, r5
900210c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900210c8:	463d      	mov	r5, r7
900210ca:	e7fa      	b.n	900210c2 <EwStringInsert+0x66>
900210cc:	4635      	mov	r5, r6
900210ce:	e7f8      	b.n	900210c2 <EwStringInsert+0x66>

900210d0 <EwStringRemove>:
900210d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900210d4:	460c      	mov	r4, r1
900210d6:	4615      	mov	r5, r2
900210d8:	4680      	mov	r8, r0
900210da:	f7ff f81d 	bl	90020118 <EwNotifyObservers+0x284>
900210de:	f7fe ffff 	bl	900200e0 <EwNotifyObservers+0x24c>
900210e2:	1963      	adds	r3, r4, r5
900210e4:	2c00      	cmp	r4, #0
900210e6:	4606      	mov	r6, r0
900210e8:	bfbc      	itt	lt
900210ea:	461d      	movlt	r5, r3
900210ec:	2400      	movlt	r4, #0
900210ee:	4298      	cmp	r0, r3
900210f0:	bfb8      	it	lt
900210f2:	1b05      	sublt	r5, r0, r4
900210f4:	2d00      	cmp	r5, #0
900210f6:	dd16      	ble.n	90021126 <EwStringRemove+0x56>
900210f8:	4285      	cmp	r5, r0
900210fa:	d016      	beq.n	9002112a <EwStringRemove+0x5a>
900210fc:	1b40      	subs	r0, r0, r5
900210fe:	f7fe ff19 	bl	9001ff34 <EwNotifyObservers+0xa0>
90021102:	4607      	mov	r7, r0
90021104:	b160      	cbz	r0, 90021120 <EwStringRemove+0x50>
90021106:	4622      	mov	r2, r4
90021108:	4641      	mov	r1, r8
9002110a:	f7fe fff3 	bl	900200f4 <EwNotifyObservers+0x260>
9002110e:	1b32      	subs	r2, r6, r4
90021110:	1929      	adds	r1, r5, r4
90021112:	eb00 0044 	add.w	r0, r0, r4, lsl #1
90021116:	1b52      	subs	r2, r2, r5
90021118:	eb08 0141 	add.w	r1, r8, r1, lsl #1
9002111c:	f7fe ffea 	bl	900200f4 <EwNotifyObservers+0x260>
90021120:	4638      	mov	r0, r7
90021122:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90021126:	4647      	mov	r7, r8
90021128:	e7fa      	b.n	90021120 <EwStringRemove+0x50>
9002112a:	2700      	movs	r7, #0
9002112c:	e7f8      	b.n	90021120 <EwStringRemove+0x50>

9002112e <EwStringFindChar>:
9002112e:	b570      	push	{r4, r5, r6, lr}
90021130:	4614      	mov	r4, r2
90021132:	460e      	mov	r6, r1
90021134:	4605      	mov	r5, r0
90021136:	f7fe ffef 	bl	90020118 <EwNotifyObservers+0x284>
9002113a:	f7fe ffd1 	bl	900200e0 <EwNotifyObservers+0x24c>
9002113e:	2c00      	cmp	r4, #0
90021140:	db0f      	blt.n	90021162 <EwStringFindChar+0x34>
90021142:	42a0      	cmp	r0, r4
90021144:	dd0d      	ble.n	90021162 <EwStringFindChar+0x34>
90021146:	eb15 0544 	adds.w	r5, r5, r4, lsl #1
9002114a:	d00a      	beq.n	90021162 <EwStringFindChar+0x34>
9002114c:	462b      	mov	r3, r5
9002114e:	4618      	mov	r0, r3
90021150:	f833 2b02 	ldrh.w	r2, [r3], #2
90021154:	b12a      	cbz	r2, 90021162 <EwStringFindChar+0x34>
90021156:	4296      	cmp	r6, r2
90021158:	d1f9      	bne.n	9002114e <EwStringFindChar+0x20>
9002115a:	1b45      	subs	r5, r0, r5
9002115c:	eb04 0065 	add.w	r0, r4, r5, asr #1
90021160:	e001      	b.n	90021166 <EwStringFindChar+0x38>
90021162:	f04f 30ff 	mov.w	r0, #4294967295
90021166:	bd70      	pop	{r4, r5, r6, pc}

90021168 <EwStringFind>:
90021168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002116a:	460e      	mov	r6, r1
9002116c:	4614      	mov	r4, r2
9002116e:	4605      	mov	r5, r0
90021170:	f7fe ffd2 	bl	90020118 <EwNotifyObservers+0x284>
90021174:	f7fe ffb4 	bl	900200e0 <EwNotifyObservers+0x24c>
90021178:	4607      	mov	r7, r0
9002117a:	4630      	mov	r0, r6
9002117c:	f7fe ffcc 	bl	90020118 <EwNotifyObservers+0x284>
90021180:	2c00      	cmp	r4, #0
90021182:	db1d      	blt.n	900211c0 <EwStringFind+0x58>
90021184:	42a7      	cmp	r7, r4
90021186:	dd1b      	ble.n	900211c0 <EwStringFind+0x58>
90021188:	eb15 0044 	adds.w	r0, r5, r4, lsl #1
9002118c:	d018      	beq.n	900211c0 <EwStringFind+0x58>
9002118e:	b1d6      	cbz	r6, 900211c6 <EwStringFind+0x5e>
90021190:	8833      	ldrh	r3, [r6, #0]
90021192:	b1c3      	cbz	r3, 900211c6 <EwStringFind+0x5e>
90021194:	4602      	mov	r2, r0
90021196:	4613      	mov	r3, r2
90021198:	3202      	adds	r2, #2
9002119a:	8819      	ldrh	r1, [r3, #0]
9002119c:	b181      	cbz	r1, 900211c0 <EwStringFind+0x58>
9002119e:	1e9d      	subs	r5, r3, #2
900211a0:	1eb1      	subs	r1, r6, #2
900211a2:	e000      	b.n	900211a6 <EwStringFind+0x3e>
900211a4:	b147      	cbz	r7, 900211b8 <EwStringFind+0x50>
900211a6:	f835 7f02 	ldrh.w	r7, [r5, #2]!
900211aa:	f831 cf02 	ldrh.w	ip, [r1, #2]!
900211ae:	4567      	cmp	r7, ip
900211b0:	d0f8      	beq.n	900211a4 <EwStringFind+0x3c>
900211b2:	f1bc 0f00 	cmp.w	ip, #0
900211b6:	d1ee      	bne.n	90021196 <EwStringFind+0x2e>
900211b8:	1a18      	subs	r0, r3, r0
900211ba:	eb04 0060 	add.w	r0, r4, r0, asr #1
900211be:	e001      	b.n	900211c4 <EwStringFind+0x5c>
900211c0:	f04f 30ff 	mov.w	r0, #4294967295
900211c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900211c6:	4603      	mov	r3, r0
900211c8:	e7f6      	b.n	900211b8 <EwStringFind+0x50>

900211ca <EwStringParseInt32>:
900211ca:	b538      	push	{r3, r4, r5, lr}
900211cc:	4614      	mov	r4, r2
900211ce:	460d      	mov	r5, r1
900211d0:	f7fe ffa2 	bl	90020118 <EwNotifyObservers+0x284>
900211d4:	f7fe fe8d 	bl	9001fef2 <EwNotifyObservers+0x5e>
900211d8:	b390      	cbz	r0, 90021240 <EwStringParseInt32+0x76>
900211da:	8803      	ldrh	r3, [r0, #0]
900211dc:	2b2b      	cmp	r3, #43	; 0x2b
900211de:	d001      	beq.n	900211e4 <EwStringParseInt32+0x1a>
900211e0:	2b2d      	cmp	r3, #45	; 0x2d
900211e2:	d12f      	bne.n	90021244 <EwStringParseInt32+0x7a>
900211e4:	2b2d      	cmp	r3, #45	; 0x2d
900211e6:	f100 0002 	add.w	r0, r0, #2
900211ea:	bf0c      	ite	eq
900211ec:	f04f 32ff 	moveq.w	r2, #4294967295
900211f0:	2201      	movne	r2, #1
900211f2:	2c02      	cmp	r4, #2
900211f4:	8803      	ldrh	r3, [r0, #0]
900211f6:	d004      	beq.n	90021202 <EwStringParseInt32+0x38>
900211f8:	2c08      	cmp	r4, #8
900211fa:	d002      	beq.n	90021202 <EwStringParseInt32+0x38>
900211fc:	2c10      	cmp	r4, #16
900211fe:	d006      	beq.n	9002120e <EwStringParseInt32+0x44>
90021200:	240a      	movs	r4, #10
90021202:	2b2f      	cmp	r3, #47	; 0x2f
90021204:	d91c      	bls.n	90021240 <EwStringParseInt32+0x76>
90021206:	f104 012f 	add.w	r1, r4, #47	; 0x2f
9002120a:	428b      	cmp	r3, r1
9002120c:	dc18      	bgt.n	90021240 <EwStringParseInt32+0x76>
9002120e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
90021212:	2909      	cmp	r1, #9
90021214:	d904      	bls.n	90021220 <EwStringParseInt32+0x56>
90021216:	f023 0320 	bic.w	r3, r3, #32
9002121a:	3b41      	subs	r3, #65	; 0x41
9002121c:	2b05      	cmp	r3, #5
9002121e:	d80f      	bhi.n	90021240 <EwStringParseInt32+0x76>
90021220:	2c02      	cmp	r4, #2
90021222:	f04f 0100 	mov.w	r1, #0
90021226:	d10f      	bne.n	90021248 <EwStringParseInt32+0x7e>
90021228:	f830 3b02 	ldrh.w	r3, [r0], #2
9002122c:	3b30      	subs	r3, #48	; 0x30
9002122e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
90021232:	8803      	ldrh	r3, [r0, #0]
90021234:	3b30      	subs	r3, #48	; 0x30
90021236:	b29b      	uxth	r3, r3
90021238:	2b01      	cmp	r3, #1
9002123a:	d9f5      	bls.n	90021228 <EwStringParseInt32+0x5e>
9002123c:	fb02 f501 	mul.w	r5, r2, r1
90021240:	4628      	mov	r0, r5
90021242:	bd38      	pop	{r3, r4, r5, pc}
90021244:	2201      	movs	r2, #1
90021246:	e7d4      	b.n	900211f2 <EwStringParseInt32+0x28>
90021248:	2c08      	cmp	r4, #8
9002124a:	d10a      	bne.n	90021262 <EwStringParseInt32+0x98>
9002124c:	f830 3b02 	ldrh.w	r3, [r0], #2
90021250:	3b30      	subs	r3, #48	; 0x30
90021252:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
90021256:	8803      	ldrh	r3, [r0, #0]
90021258:	3b30      	subs	r3, #48	; 0x30
9002125a:	b29b      	uxth	r3, r3
9002125c:	2b07      	cmp	r3, #7
9002125e:	d9f5      	bls.n	9002124c <EwStringParseInt32+0x82>
90021260:	e7ec      	b.n	9002123c <EwStringParseInt32+0x72>
90021262:	2c0a      	cmp	r4, #10
90021264:	d10a      	bne.n	9002127c <EwStringParseInt32+0xb2>
90021266:	f830 3b02 	ldrh.w	r3, [r0], #2
9002126a:	3b30      	subs	r3, #48	; 0x30
9002126c:	fb04 3101 	mla	r1, r4, r1, r3
90021270:	8803      	ldrh	r3, [r0, #0]
90021272:	3b30      	subs	r3, #48	; 0x30
90021274:	b29b      	uxth	r3, r3
90021276:	2b09      	cmp	r3, #9
90021278:	d9f5      	bls.n	90021266 <EwStringParseInt32+0x9c>
9002127a:	e7df      	b.n	9002123c <EwStringParseInt32+0x72>
9002127c:	f830 3b02 	ldrh.w	r3, [r0], #2
90021280:	0109      	lsls	r1, r1, #4
90021282:	f1a3 0461 	sub.w	r4, r3, #97	; 0x61
90021286:	2c05      	cmp	r4, #5
90021288:	d80c      	bhi.n	900212a4 <EwStringParseInt32+0xda>
9002128a:	3b57      	subs	r3, #87	; 0x57
9002128c:	4419      	add	r1, r3
9002128e:	8803      	ldrh	r3, [r0, #0]
90021290:	f1a3 0430 	sub.w	r4, r3, #48	; 0x30
90021294:	2c09      	cmp	r4, #9
90021296:	d9f1      	bls.n	9002127c <EwStringParseInt32+0xb2>
90021298:	f023 0320 	bic.w	r3, r3, #32
9002129c:	3b41      	subs	r3, #65	; 0x41
9002129e:	2b05      	cmp	r3, #5
900212a0:	d9ec      	bls.n	9002127c <EwStringParseInt32+0xb2>
900212a2:	e7cb      	b.n	9002123c <EwStringParseInt32+0x72>
900212a4:	f1a3 0441 	sub.w	r4, r3, #65	; 0x41
900212a8:	2c05      	cmp	r4, #5
900212aa:	bf94      	ite	ls
900212ac:	3b37      	subls	r3, #55	; 0x37
900212ae:	3b30      	subhi	r3, #48	; 0x30
900212b0:	e7ec      	b.n	9002128c <EwStringParseInt32+0xc2>

900212b2 <EwStringParseUInt32>:
900212b2:	b538      	push	{r3, r4, r5, lr}
900212b4:	4615      	mov	r5, r2
900212b6:	460c      	mov	r4, r1
900212b8:	f7fe ff2e 	bl	90020118 <EwNotifyObservers+0x284>
900212bc:	f7fe fe19 	bl	9001fef2 <EwNotifyObservers+0x5e>
900212c0:	b398      	cbz	r0, 9002132a <EwStringParseUInt32+0x78>
900212c2:	8803      	ldrh	r3, [r0, #0]
900212c4:	2b2b      	cmp	r3, #43	; 0x2b
900212c6:	d001      	beq.n	900212cc <EwStringParseUInt32+0x1a>
900212c8:	2b2d      	cmp	r3, #45	; 0x2d
900212ca:	d130      	bne.n	9002132e <EwStringParseUInt32+0x7c>
900212cc:	2b2d      	cmp	r3, #45	; 0x2d
900212ce:	f100 0002 	add.w	r0, r0, #2
900212d2:	bf0c      	ite	eq
900212d4:	f04f 32ff 	moveq.w	r2, #4294967295
900212d8:	2201      	movne	r2, #1
900212da:	2d02      	cmp	r5, #2
900212dc:	8803      	ldrh	r3, [r0, #0]
900212de:	d004      	beq.n	900212ea <EwStringParseUInt32+0x38>
900212e0:	2d08      	cmp	r5, #8
900212e2:	d002      	beq.n	900212ea <EwStringParseUInt32+0x38>
900212e4:	2d10      	cmp	r5, #16
900212e6:	d006      	beq.n	900212f6 <EwStringParseUInt32+0x44>
900212e8:	250a      	movs	r5, #10
900212ea:	2b2f      	cmp	r3, #47	; 0x2f
900212ec:	d91d      	bls.n	9002132a <EwStringParseUInt32+0x78>
900212ee:	f105 012f 	add.w	r1, r5, #47	; 0x2f
900212f2:	428b      	cmp	r3, r1
900212f4:	dc19      	bgt.n	9002132a <EwStringParseUInt32+0x78>
900212f6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
900212fa:	2909      	cmp	r1, #9
900212fc:	d904      	bls.n	90021308 <EwStringParseUInt32+0x56>
900212fe:	f023 0320 	bic.w	r3, r3, #32
90021302:	3b41      	subs	r3, #65	; 0x41
90021304:	2b05      	cmp	r3, #5
90021306:	d810      	bhi.n	9002132a <EwStringParseUInt32+0x78>
90021308:	2d02      	cmp	r5, #2
9002130a:	f04f 0400 	mov.w	r4, #0
9002130e:	d110      	bne.n	90021332 <EwStringParseUInt32+0x80>
90021310:	f830 1b02 	ldrh.w	r1, [r0], #2
90021314:	0064      	lsls	r4, r4, #1
90021316:	8803      	ldrh	r3, [r0, #0]
90021318:	3c30      	subs	r4, #48	; 0x30
9002131a:	3b30      	subs	r3, #48	; 0x30
9002131c:	440c      	add	r4, r1
9002131e:	b29b      	uxth	r3, r3
90021320:	2b01      	cmp	r3, #1
90021322:	d9f5      	bls.n	90021310 <EwStringParseUInt32+0x5e>
90021324:	3201      	adds	r2, #1
90021326:	bf08      	it	eq
90021328:	4264      	negeq	r4, r4
9002132a:	4620      	mov	r0, r4
9002132c:	bd38      	pop	{r3, r4, r5, pc}
9002132e:	2201      	movs	r2, #1
90021330:	e7d3      	b.n	900212da <EwStringParseUInt32+0x28>
90021332:	2d08      	cmp	r5, #8
90021334:	d10a      	bne.n	9002134c <EwStringParseUInt32+0x9a>
90021336:	f830 1b02 	ldrh.w	r1, [r0], #2
9002133a:	00e4      	lsls	r4, r4, #3
9002133c:	8803      	ldrh	r3, [r0, #0]
9002133e:	3c30      	subs	r4, #48	; 0x30
90021340:	3b30      	subs	r3, #48	; 0x30
90021342:	440c      	add	r4, r1
90021344:	b29b      	uxth	r3, r3
90021346:	2b07      	cmp	r3, #7
90021348:	d9f5      	bls.n	90021336 <EwStringParseUInt32+0x84>
9002134a:	e7eb      	b.n	90021324 <EwStringParseUInt32+0x72>
9002134c:	2d0a      	cmp	r5, #10
9002134e:	d10a      	bne.n	90021366 <EwStringParseUInt32+0xb4>
90021350:	f830 1b02 	ldrh.w	r1, [r0], #2
90021354:	436c      	muls	r4, r5
90021356:	8803      	ldrh	r3, [r0, #0]
90021358:	3c30      	subs	r4, #48	; 0x30
9002135a:	3b30      	subs	r3, #48	; 0x30
9002135c:	440c      	add	r4, r1
9002135e:	b29b      	uxth	r3, r3
90021360:	2b09      	cmp	r3, #9
90021362:	d9f5      	bls.n	90021350 <EwStringParseUInt32+0x9e>
90021364:	e7de      	b.n	90021324 <EwStringParseUInt32+0x72>
90021366:	f830 3b02 	ldrh.w	r3, [r0], #2
9002136a:	0124      	lsls	r4, r4, #4
9002136c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90021370:	2905      	cmp	r1, #5
90021372:	d80c      	bhi.n	9002138e <EwStringParseUInt32+0xdc>
90021374:	3c57      	subs	r4, #87	; 0x57
90021376:	441c      	add	r4, r3
90021378:	8803      	ldrh	r3, [r0, #0]
9002137a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
9002137e:	2909      	cmp	r1, #9
90021380:	d9f1      	bls.n	90021366 <EwStringParseUInt32+0xb4>
90021382:	f023 0320 	bic.w	r3, r3, #32
90021386:	3b41      	subs	r3, #65	; 0x41
90021388:	2b05      	cmp	r3, #5
9002138a:	d9ec      	bls.n	90021366 <EwStringParseUInt32+0xb4>
9002138c:	e7ca      	b.n	90021324 <EwStringParseUInt32+0x72>
9002138e:	f1a3 0141 	sub.w	r1, r3, #65	; 0x41
90021392:	2905      	cmp	r1, #5
90021394:	bf94      	ite	ls
90021396:	3c37      	subls	r4, #55	; 0x37
90021398:	3c30      	subhi	r4, #48	; 0x30
9002139a:	e7ec      	b.n	90021376 <EwStringParseUInt32+0xc4>

9002139c <EwStringParseInt64>:
9002139c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900213a0:	9d08      	ldr	r5, [sp, #32]
900213a2:	4691      	mov	r9, r2
900213a4:	4698      	mov	r8, r3
900213a6:	f7fe feb7 	bl	90020118 <EwNotifyObservers+0x284>
900213aa:	f7fe fda2 	bl	9001fef2 <EwNotifyObservers+0x5e>
900213ae:	b3c8      	cbz	r0, 90021424 <EwStringParseInt64+0x88>
900213b0:	8803      	ldrh	r3, [r0, #0]
900213b2:	2b2b      	cmp	r3, #43	; 0x2b
900213b4:	d001      	beq.n	900213ba <EwStringParseInt64+0x1e>
900213b6:	2b2d      	cmp	r3, #45	; 0x2d
900213b8:	d103      	bne.n	900213c2 <EwStringParseInt64+0x26>
900213ba:	2b2d      	cmp	r3, #45	; 0x2d
900213bc:	f100 0002 	add.w	r0, r0, #2
900213c0:	d034      	beq.n	9002142c <EwStringParseInt64+0x90>
900213c2:	2701      	movs	r7, #1
900213c4:	2600      	movs	r6, #0
900213c6:	2d02      	cmp	r5, #2
900213c8:	8804      	ldrh	r4, [r0, #0]
900213ca:	d004      	beq.n	900213d6 <EwStringParseInt64+0x3a>
900213cc:	2d08      	cmp	r5, #8
900213ce:	d002      	beq.n	900213d6 <EwStringParseInt64+0x3a>
900213d0:	2d10      	cmp	r5, #16
900213d2:	d006      	beq.n	900213e2 <EwStringParseInt64+0x46>
900213d4:	250a      	movs	r5, #10
900213d6:	2c2f      	cmp	r4, #47	; 0x2f
900213d8:	d924      	bls.n	90021424 <EwStringParseInt64+0x88>
900213da:	f105 032f 	add.w	r3, r5, #47	; 0x2f
900213de:	429c      	cmp	r4, r3
900213e0:	dc20      	bgt.n	90021424 <EwStringParseInt64+0x88>
900213e2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
900213e6:	2b09      	cmp	r3, #9
900213e8:	d904      	bls.n	900213f4 <EwStringParseInt64+0x58>
900213ea:	f024 0420 	bic.w	r4, r4, #32
900213ee:	3c41      	subs	r4, #65	; 0x41
900213f0:	2c05      	cmp	r4, #5
900213f2:	d817      	bhi.n	90021424 <EwStringParseInt64+0x88>
900213f4:	2300      	movs	r3, #0
900213f6:	2d02      	cmp	r5, #2
900213f8:	461c      	mov	r4, r3
900213fa:	d11b      	bne.n	90021434 <EwStringParseInt64+0x98>
900213fc:	f830 5b02 	ldrh.w	r5, [r0], #2
90021400:	18db      	adds	r3, r3, r3
90021402:	8802      	ldrh	r2, [r0, #0]
90021404:	f1a5 0530 	sub.w	r5, r5, #48	; 0x30
90021408:	4164      	adcs	r4, r4
9002140a:	3a30      	subs	r2, #48	; 0x30
9002140c:	18eb      	adds	r3, r5, r3
9002140e:	b292      	uxth	r2, r2
90021410:	eb44 74e5 	adc.w	r4, r4, r5, asr #31
90021414:	2a01      	cmp	r2, #1
90021416:	d9f1      	bls.n	900213fc <EwStringParseInt64+0x60>
90021418:	435e      	muls	r6, r3
9002141a:	fba3 9807 	umull	r9, r8, r3, r7
9002141e:	fb07 6404 	mla	r4, r7, r4, r6
90021422:	44a0      	add	r8, r4
90021424:	4648      	mov	r0, r9
90021426:	4641      	mov	r1, r8
90021428:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002142c:	f04f 37ff 	mov.w	r7, #4294967295
90021430:	463e      	mov	r6, r7
90021432:	e7c8      	b.n	900213c6 <EwStringParseInt64+0x2a>
90021434:	2d08      	cmp	r5, #8
90021436:	d10f      	bne.n	90021458 <EwStringParseInt64+0xbc>
90021438:	f830 5b02 	ldrh.w	r5, [r0], #2
9002143c:	00e4      	lsls	r4, r4, #3
9002143e:	8802      	ldrh	r2, [r0, #0]
90021440:	ea44 7453 	orr.w	r4, r4, r3, lsr #29
90021444:	3d30      	subs	r5, #48	; 0x30
90021446:	00db      	lsls	r3, r3, #3
90021448:	3a30      	subs	r2, #48	; 0x30
9002144a:	18eb      	adds	r3, r5, r3
9002144c:	b292      	uxth	r2, r2
9002144e:	eb44 74e5 	adc.w	r4, r4, r5, asr #31
90021452:	2a07      	cmp	r2, #7
90021454:	d9f0      	bls.n	90021438 <EwStringParseInt64+0x9c>
90021456:	e7df      	b.n	90021418 <EwStringParseInt64+0x7c>
90021458:	2d0a      	cmp	r5, #10
9002145a:	d10f      	bne.n	9002147c <EwStringParseInt64+0xe0>
9002145c:	fba3 3c05 	umull	r3, ip, r3, r5
90021460:	fb05 cc04 	mla	ip, r5, r4, ip
90021464:	f830 4b02 	ldrh.w	r4, [r0], #2
90021468:	8802      	ldrh	r2, [r0, #0]
9002146a:	3c30      	subs	r4, #48	; 0x30
9002146c:	3a30      	subs	r2, #48	; 0x30
9002146e:	18e3      	adds	r3, r4, r3
90021470:	b292      	uxth	r2, r2
90021472:	eb4c 74e4 	adc.w	r4, ip, r4, asr #31
90021476:	2a09      	cmp	r2, #9
90021478:	d9f0      	bls.n	9002145c <EwStringParseInt64+0xc0>
9002147a:	e7cd      	b.n	90021418 <EwStringParseInt64+0x7c>
9002147c:	f830 5b02 	ldrh.w	r5, [r0], #2
90021480:	0124      	lsls	r4, r4, #4
90021482:	f1a5 0261 	sub.w	r2, r5, #97	; 0x61
90021486:	ea44 7413 	orr.w	r4, r4, r3, lsr #28
9002148a:	011b      	lsls	r3, r3, #4
9002148c:	2a05      	cmp	r2, #5
9002148e:	d80e      	bhi.n	900214ae <EwStringParseInt64+0x112>
90021490:	3d57      	subs	r5, #87	; 0x57
90021492:	8802      	ldrh	r2, [r0, #0]
90021494:	18eb      	adds	r3, r5, r3
90021496:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
9002149a:	eb44 74e5 	adc.w	r4, r4, r5, asr #31
9002149e:	2909      	cmp	r1, #9
900214a0:	d9ec      	bls.n	9002147c <EwStringParseInt64+0xe0>
900214a2:	f022 0220 	bic.w	r2, r2, #32
900214a6:	3a41      	subs	r2, #65	; 0x41
900214a8:	2a05      	cmp	r2, #5
900214aa:	d9e7      	bls.n	9002147c <EwStringParseInt64+0xe0>
900214ac:	e7b4      	b.n	90021418 <EwStringParseInt64+0x7c>
900214ae:	f1a5 0241 	sub.w	r2, r5, #65	; 0x41
900214b2:	2a05      	cmp	r2, #5
900214b4:	bf94      	ite	ls
900214b6:	3d37      	subls	r5, #55	; 0x37
900214b8:	3d30      	subhi	r5, #48	; 0x30
900214ba:	e7ea      	b.n	90021492 <EwStringParseInt64+0xf6>

900214bc <EwStringParseUInt64>:
900214bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900214be:	9e06      	ldr	r6, [sp, #24]
900214c0:	4614      	mov	r4, r2
900214c2:	461d      	mov	r5, r3
900214c4:	f7fe fe28 	bl	90020118 <EwNotifyObservers+0x284>
900214c8:	f7fe fd13 	bl	9001fef2 <EwNotifyObservers+0x5e>
900214cc:	2800      	cmp	r0, #0
900214ce:	d039      	beq.n	90021544 <EwStringParseUInt64+0x88>
900214d0:	8803      	ldrh	r3, [r0, #0]
900214d2:	2b2b      	cmp	r3, #43	; 0x2b
900214d4:	d001      	beq.n	900214da <EwStringParseUInt64+0x1e>
900214d6:	2b2d      	cmp	r3, #45	; 0x2d
900214d8:	d137      	bne.n	9002154a <EwStringParseUInt64+0x8e>
900214da:	2b2d      	cmp	r3, #45	; 0x2d
900214dc:	f100 0002 	add.w	r0, r0, #2
900214e0:	bf0c      	ite	eq
900214e2:	f04f 37ff 	moveq.w	r7, #4294967295
900214e6:	2701      	movne	r7, #1
900214e8:	2e02      	cmp	r6, #2
900214ea:	8803      	ldrh	r3, [r0, #0]
900214ec:	d004      	beq.n	900214f8 <EwStringParseUInt64+0x3c>
900214ee:	2e08      	cmp	r6, #8
900214f0:	d002      	beq.n	900214f8 <EwStringParseUInt64+0x3c>
900214f2:	2e10      	cmp	r6, #16
900214f4:	d006      	beq.n	90021504 <EwStringParseUInt64+0x48>
900214f6:	260a      	movs	r6, #10
900214f8:	2b2f      	cmp	r3, #47	; 0x2f
900214fa:	d923      	bls.n	90021544 <EwStringParseUInt64+0x88>
900214fc:	f106 022f 	add.w	r2, r6, #47	; 0x2f
90021500:	4293      	cmp	r3, r2
90021502:	dc1f      	bgt.n	90021544 <EwStringParseUInt64+0x88>
90021504:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
90021508:	2a09      	cmp	r2, #9
9002150a:	d904      	bls.n	90021516 <EwStringParseUInt64+0x5a>
9002150c:	f023 0320 	bic.w	r3, r3, #32
90021510:	3b41      	subs	r3, #65	; 0x41
90021512:	2b05      	cmp	r3, #5
90021514:	d816      	bhi.n	90021544 <EwStringParseUInt64+0x88>
90021516:	2400      	movs	r4, #0
90021518:	2e02      	cmp	r6, #2
9002151a:	4625      	mov	r5, r4
9002151c:	d117      	bne.n	9002154e <EwStringParseUInt64+0x92>
9002151e:	f830 1b02 	ldrh.w	r1, [r0], #2
90021522:	1924      	adds	r4, r4, r4
90021524:	8803      	ldrh	r3, [r0, #0]
90021526:	f1a1 0130 	sub.w	r1, r1, #48	; 0x30
9002152a:	416d      	adcs	r5, r5
9002152c:	3b30      	subs	r3, #48	; 0x30
9002152e:	190c      	adds	r4, r1, r4
90021530:	b29b      	uxth	r3, r3
90021532:	eb45 75e1 	adc.w	r5, r5, r1, asr #31
90021536:	2b01      	cmp	r3, #1
90021538:	d9f1      	bls.n	9002151e <EwStringParseUInt64+0x62>
9002153a:	3701      	adds	r7, #1
9002153c:	d102      	bne.n	90021544 <EwStringParseUInt64+0x88>
9002153e:	4264      	negs	r4, r4
90021540:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
90021544:	4620      	mov	r0, r4
90021546:	4629      	mov	r1, r5
90021548:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002154a:	2701      	movs	r7, #1
9002154c:	e7cc      	b.n	900214e8 <EwStringParseUInt64+0x2c>
9002154e:	2e08      	cmp	r6, #8
90021550:	d10f      	bne.n	90021572 <EwStringParseUInt64+0xb6>
90021552:	f830 1b02 	ldrh.w	r1, [r0], #2
90021556:	00ed      	lsls	r5, r5, #3
90021558:	8803      	ldrh	r3, [r0, #0]
9002155a:	ea45 7554 	orr.w	r5, r5, r4, lsr #29
9002155e:	3930      	subs	r1, #48	; 0x30
90021560:	00e4      	lsls	r4, r4, #3
90021562:	3b30      	subs	r3, #48	; 0x30
90021564:	190c      	adds	r4, r1, r4
90021566:	b29b      	uxth	r3, r3
90021568:	eb45 75e1 	adc.w	r5, r5, r1, asr #31
9002156c:	2b07      	cmp	r3, #7
9002156e:	d9f0      	bls.n	90021552 <EwStringParseUInt64+0x96>
90021570:	e7e3      	b.n	9002153a <EwStringParseUInt64+0x7e>
90021572:	2e0a      	cmp	r6, #10
90021574:	d10f      	bne.n	90021596 <EwStringParseUInt64+0xda>
90021576:	fba4 4306 	umull	r4, r3, r4, r6
9002157a:	fb06 3305 	mla	r3, r6, r5, r3
9002157e:	f830 5b02 	ldrh.w	r5, [r0], #2
90021582:	3d30      	subs	r5, #48	; 0x30
90021584:	192c      	adds	r4, r5, r4
90021586:	eb43 75e5 	adc.w	r5, r3, r5, asr #31
9002158a:	8803      	ldrh	r3, [r0, #0]
9002158c:	3b30      	subs	r3, #48	; 0x30
9002158e:	b29b      	uxth	r3, r3
90021590:	2b09      	cmp	r3, #9
90021592:	d9f0      	bls.n	90021576 <EwStringParseUInt64+0xba>
90021594:	e7d1      	b.n	9002153a <EwStringParseUInt64+0x7e>
90021596:	f830 1b02 	ldrh.w	r1, [r0], #2
9002159a:	012d      	lsls	r5, r5, #4
9002159c:	f1a1 0361 	sub.w	r3, r1, #97	; 0x61
900215a0:	ea45 7514 	orr.w	r5, r5, r4, lsr #28
900215a4:	0124      	lsls	r4, r4, #4
900215a6:	2b05      	cmp	r3, #5
900215a8:	d80e      	bhi.n	900215c8 <EwStringParseUInt64+0x10c>
900215aa:	3957      	subs	r1, #87	; 0x57
900215ac:	8803      	ldrh	r3, [r0, #0]
900215ae:	190c      	adds	r4, r1, r4
900215b0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
900215b4:	eb45 75e1 	adc.w	r5, r5, r1, asr #31
900215b8:	2a09      	cmp	r2, #9
900215ba:	d9ec      	bls.n	90021596 <EwStringParseUInt64+0xda>
900215bc:	f023 0320 	bic.w	r3, r3, #32
900215c0:	3b41      	subs	r3, #65	; 0x41
900215c2:	2b05      	cmp	r3, #5
900215c4:	d9e7      	bls.n	90021596 <EwStringParseUInt64+0xda>
900215c6:	e7b8      	b.n	9002153a <EwStringParseUInt64+0x7e>
900215c8:	f1a1 0341 	sub.w	r3, r1, #65	; 0x41
900215cc:	2b05      	cmp	r3, #5
900215ce:	bf94      	ite	ls
900215d0:	3937      	subls	r1, #55	; 0x37
900215d2:	3930      	subhi	r1, #48	; 0x30
900215d4:	e7ea      	b.n	900215ac <EwStringParseUInt64+0xf0>

900215d6 <EwStringParseFloat>:
900215d6:	b570      	push	{r4, r5, r6, lr}
900215d8:	ed2d 8b02 	vpush	{d8}
900215dc:	eeb0 8a40 	vmov.f32	s16, s0
900215e0:	f7fe fd9a 	bl	90020118 <EwNotifyObservers+0x284>
900215e4:	f7fe fc85 	bl	9001fef2 <EwNotifyObservers+0x5e>
900215e8:	b1b8      	cbz	r0, 9002161a <EwStringParseFloat+0x44>
900215ea:	8803      	ldrh	r3, [r0, #0]
900215ec:	2b2b      	cmp	r3, #43	; 0x2b
900215ee:	d001      	beq.n	900215f4 <EwStringParseFloat+0x1e>
900215f0:	2b2d      	cmp	r3, #45	; 0x2d
900215f2:	d117      	bne.n	90021624 <EwStringParseFloat+0x4e>
900215f4:	2b2d      	cmp	r3, #45	; 0x2d
900215f6:	f100 0002 	add.w	r0, r0, #2
900215fa:	bf0c      	ite	eq
900215fc:	f04f 34ff 	moveq.w	r4, #4294967295
90021600:	2401      	movne	r4, #1
90021602:	8803      	ldrh	r3, [r0, #0]
90021604:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
90021608:	2a09      	cmp	r2, #9
9002160a:	d937      	bls.n	9002167c <EwStringParseFloat+0xa6>
9002160c:	2b2e      	cmp	r3, #46	; 0x2e
9002160e:	d104      	bne.n	9002161a <EwStringParseFloat+0x44>
90021610:	8843      	ldrh	r3, [r0, #2]
90021612:	3b30      	subs	r3, #48	; 0x30
90021614:	b29b      	uxth	r3, r3
90021616:	2b09      	cmp	r3, #9
90021618:	d930      	bls.n	9002167c <EwStringParseFloat+0xa6>
9002161a:	eeb0 0a48 	vmov.f32	s0, s16
9002161e:	ecbd 8b02 	vpop	{d8}
90021622:	bd70      	pop	{r4, r5, r6, pc}
90021624:	2401      	movs	r4, #1
90021626:	e7ec      	b.n	90021602 <EwStringParseFloat+0x2c>
90021628:	ee07 2a90 	vmov	s15, r2
9002162c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90021630:	eee8 7a07 	vfma.f32	s15, s16, s14
90021634:	eeb0 8a67 	vmov.f32	s16, s15
90021638:	4603      	mov	r3, r0
9002163a:	f830 1b02 	ldrh.w	r1, [r0], #2
9002163e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
90021642:	b295      	uxth	r5, r2
90021644:	2d09      	cmp	r5, #9
90021646:	d9ef      	bls.n	90021628 <EwStringParseFloat+0x52>
90021648:	292e      	cmp	r1, #46	; 0x2e
9002164a:	d10b      	bne.n	90021664 <EwStringParseFloat+0x8e>
9002164c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 900216e0 <EwStringParseFloat+0x10a>
90021650:	4601      	mov	r1, r0
90021652:	eef0 6a47 	vmov.f32	s13, s14
90021656:	460b      	mov	r3, r1
90021658:	f831 2b02 	ldrh.w	r2, [r1], #2
9002165c:	3a30      	subs	r2, #48	; 0x30
9002165e:	b290      	uxth	r0, r2
90021660:	2809      	cmp	r0, #9
90021662:	d910      	bls.n	90021686 <EwStringParseFloat+0xb0>
90021664:	881a      	ldrh	r2, [r3, #0]
90021666:	f022 0220 	bic.w	r2, r2, #32
9002166a:	b292      	uxth	r2, r2
9002166c:	2a45      	cmp	r2, #69	; 0x45
9002166e:	d130      	bne.n	900216d2 <EwStringParseFloat+0xfc>
90021670:	885a      	ldrh	r2, [r3, #2]
90021672:	2a2b      	cmp	r2, #43	; 0x2b
90021674:	d110      	bne.n	90021698 <EwStringParseFloat+0xc2>
90021676:	3304      	adds	r3, #4
90021678:	2201      	movs	r2, #1
9002167a:	e012      	b.n	900216a2 <EwStringParseFloat+0xcc>
9002167c:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
90021680:	ed9f 8a18 	vldr	s16, [pc, #96]	; 900216e4 <EwStringParseFloat+0x10e>
90021684:	e7d8      	b.n	90021638 <EwStringParseFloat+0x62>
90021686:	ee07 2a90 	vmov	s15, r2
9002168a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002168e:	eea7 8a87 	vfma.f32	s16, s15, s14
90021692:	ee27 7a26 	vmul.f32	s14, s14, s13
90021696:	e7de      	b.n	90021656 <EwStringParseFloat+0x80>
90021698:	2a2d      	cmp	r2, #45	; 0x2d
9002169a:	d11f      	bne.n	900216dc <EwStringParseFloat+0x106>
9002169c:	3304      	adds	r3, #4
9002169e:	f04f 32ff 	mov.w	r2, #4294967295
900216a2:	3b02      	subs	r3, #2
900216a4:	2100      	movs	r1, #0
900216a6:	260a      	movs	r6, #10
900216a8:	e001      	b.n	900216ae <EwStringParseFloat+0xd8>
900216aa:	fb06 0101 	mla	r1, r6, r1, r0
900216ae:	f833 0f02 	ldrh.w	r0, [r3, #2]!
900216b2:	3830      	subs	r0, #48	; 0x30
900216b4:	b285      	uxth	r5, r0
900216b6:	2d09      	cmp	r5, #9
900216b8:	d9f7      	bls.n	900216aa <EwStringParseFloat+0xd4>
900216ba:	434a      	muls	r2, r1
900216bc:	d009      	beq.n	900216d2 <EwStringParseFloat+0xfc>
900216be:	ee07 2a90 	vmov	s15, r2
900216c2:	eeb2 0a04 	vmov.f32	s0, #36	; 0x41200000  10.0
900216c6:	eef8 0ae7 	vcvt.f32.s32	s1, s15
900216ca:	f005 fb51 	bl	90026d70 <EwMathPow>
900216ce:	ee28 8a00 	vmul.f32	s16, s16, s0
900216d2:	3401      	adds	r4, #1
900216d4:	bf08      	it	eq
900216d6:	eeb1 8a48 	vnegeq.f32	s16, s16
900216da:	e79e      	b.n	9002161a <EwStringParseFloat+0x44>
900216dc:	3302      	adds	r3, #2
900216de:	e7cb      	b.n	90021678 <EwStringParseFloat+0xa2>
900216e0:	3dcccccd 	.word	0x3dcccccd
900216e4:	00000000 	.word	0x00000000

900216e8 <EwStringToAnsi>:
900216e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900216ea:	4614      	mov	r4, r2
900216ec:	4605      	mov	r5, r0
900216ee:	460e      	mov	r6, r1
900216f0:	461f      	mov	r7, r3
900216f2:	f7fe fd11 	bl	90020118 <EwNotifyObservers+0x284>
900216f6:	2c00      	cmp	r4, #0
900216f8:	dd17      	ble.n	9002172a <EwStringToAnsi+0x42>
900216fa:	b1a5      	cbz	r5, 90021726 <EwStringToAnsi+0x3e>
900216fc:	3c01      	subs	r4, #1
900216fe:	3d02      	subs	r5, #2
90021700:	4630      	mov	r0, r6
90021702:	4434      	add	r4, r6
90021704:	42a0      	cmp	r0, r4
90021706:	d002      	beq.n	9002170e <EwStringToAnsi+0x26>
90021708:	f835 2f02 	ldrh.w	r2, [r5, #2]!
9002170c:	b922      	cbnz	r2, 90021718 <EwStringToAnsi+0x30>
9002170e:	2300      	movs	r3, #0
90021710:	f800 3b01 	strb.w	r3, [r0], #1
90021714:	1b80      	subs	r0, r0, r6
90021716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90021718:	2aff      	cmp	r2, #255	; 0xff
9002171a:	bf94      	ite	ls
9002171c:	b2d2      	uxtbls	r2, r2
9002171e:	463a      	movhi	r2, r7
90021720:	f800 2b01 	strb.w	r2, [r0], #1
90021724:	e7ee      	b.n	90021704 <EwStringToAnsi+0x1c>
90021726:	4630      	mov	r0, r6
90021728:	e7f1      	b.n	9002170e <EwStringToAnsi+0x26>
9002172a:	2000      	movs	r0, #0
9002172c:	e7f3      	b.n	90021716 <EwStringToAnsi+0x2e>

9002172e <EwGetUtf8StringLength>:
9002172e:	b510      	push	{r4, lr}
90021730:	4604      	mov	r4, r0
90021732:	f7fe fcf1 	bl	90020118 <EwNotifyObservers+0x284>
90021736:	2000      	movs	r0, #0
90021738:	b114      	cbz	r4, 90021740 <EwGetUtf8StringLength+0x12>
9002173a:	f834 2b02 	ldrh.w	r2, [r4], #2
9002173e:	b902      	cbnz	r2, 90021742 <EwGetUtf8StringLength+0x14>
90021740:	bd10      	pop	{r4, pc}
90021742:	2a7f      	cmp	r2, #127	; 0x7f
90021744:	d801      	bhi.n	9002174a <EwGetUtf8StringLength+0x1c>
90021746:	3001      	adds	r0, #1
90021748:	e7f6      	b.n	90021738 <EwGetUtf8StringLength+0xa>
9002174a:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
9002174e:	bf34      	ite	cc
90021750:	3002      	addcc	r0, #2
90021752:	3003      	addcs	r0, #3
90021754:	e7f0      	b.n	90021738 <EwGetUtf8StringLength+0xa>

90021756 <EwStringToUtf8>:
90021756:	b570      	push	{r4, r5, r6, lr}
90021758:	4616      	mov	r6, r2
9002175a:	4604      	mov	r4, r0
9002175c:	460d      	mov	r5, r1
9002175e:	f7fe fcdb 	bl	90020118 <EwNotifyObservers+0x284>
90021762:	2e00      	cmp	r6, #0
90021764:	dd3a      	ble.n	900217dc <EwStringToUtf8+0x86>
90021766:	1e72      	subs	r2, r6, #1
90021768:	4628      	mov	r0, r5
9002176a:	b174      	cbz	r4, 9002178a <EwStringToUtf8+0x34>
9002176c:	f834 3b02 	ldrh.w	r3, [r4], #2
90021770:	b15b      	cbz	r3, 9002178a <EwStringToUtf8+0x34>
90021772:	b152      	cbz	r2, 9002178a <EwStringToUtf8+0x34>
90021774:	2b7f      	cmp	r3, #127	; 0x7f
90021776:	d803      	bhi.n	90021780 <EwStringToUtf8+0x2a>
90021778:	3a01      	subs	r2, #1
9002177a:	f800 3b01 	strb.w	r3, [r0], #1
9002177e:	e7f4      	b.n	9002176a <EwStringToUtf8+0x14>
90021780:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90021784:	d214      	bcs.n	900217b0 <EwStringToUtf8+0x5a>
90021786:	2a01      	cmp	r2, #1
90021788:	d104      	bne.n	90021794 <EwStringToUtf8+0x3e>
9002178a:	2300      	movs	r3, #0
9002178c:	f800 3b01 	strb.w	r3, [r0], #1
90021790:	1b40      	subs	r0, r0, r5
90021792:	bd70      	pop	{r4, r5, r6, pc}
90021794:	099e      	lsrs	r6, r3, #6
90021796:	f003 033f 	and.w	r3, r3, #63	; 0x3f
9002179a:	4601      	mov	r1, r0
9002179c:	3a02      	subs	r2, #2
9002179e:	f066 063f 	orn	r6, r6, #63	; 0x3f
900217a2:	f063 037f 	orn	r3, r3, #127	; 0x7f
900217a6:	f801 6b02 	strb.w	r6, [r1], #2
900217aa:	7043      	strb	r3, [r0, #1]
900217ac:	4608      	mov	r0, r1
900217ae:	e7dc      	b.n	9002176a <EwStringToUtf8+0x14>
900217b0:	2a02      	cmp	r2, #2
900217b2:	ddea      	ble.n	9002178a <EwStringToUtf8+0x34>
900217b4:	0b19      	lsrs	r1, r3, #12
900217b6:	3a03      	subs	r2, #3
900217b8:	3003      	adds	r0, #3
900217ba:	f061 011f 	orn	r1, r1, #31
900217be:	f800 1c03 	strb.w	r1, [r0, #-3]
900217c2:	f3c3 1185 	ubfx	r1, r3, #6, #6
900217c6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
900217ca:	f061 017f 	orn	r1, r1, #127	; 0x7f
900217ce:	f063 037f 	orn	r3, r3, #127	; 0x7f
900217d2:	f800 1c02 	strb.w	r1, [r0, #-2]
900217d6:	f800 3c01 	strb.w	r3, [r0, #-1]
900217da:	e7c6      	b.n	9002176a <EwStringToUtf8+0x14>
900217dc:	2000      	movs	r0, #0
900217de:	e7d8      	b.n	90021792 <EwStringToUtf8+0x3c>

900217e0 <EwGetVariantOfString>:
900217e0:	b508      	push	{r3, lr}
900217e2:	210c      	movs	r1, #12
900217e4:	f7fd fa9b 	bl	9001ed1e <EwGetVariantOf>
900217e8:	3004      	adds	r0, #4
900217ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900217ee:	f7ff b9f5 	b.w	90020bdc <EwLoadString>

900217f2 <EwGetVariantOfChar>:
900217f2:	2108      	movs	r1, #8
900217f4:	b508      	push	{r3, lr}
900217f6:	f7fd fa92 	bl	9001ed1e <EwGetVariantOf>
900217fa:	8880      	ldrh	r0, [r0, #4]
900217fc:	bd08      	pop	{r3, pc}

900217fe <EwGetCharUpper>:
900217fe:	b508      	push	{r3, lr}
90021800:	f7fe fbe0 	bl	9001ffc4 <EwNotifyObservers+0x130>
90021804:	b280      	uxth	r0, r0
90021806:	bd08      	pop	{r3, pc}

90021808 <EwGetCharLower>:
90021808:	b508      	push	{r3, lr}
9002180a:	f7fe fcb7 	bl	9002017c <ToLower>
9002180e:	b280      	uxth	r0, r0
90021810:	bd08      	pop	{r3, pc}
90021812:	bf00      	nop
90021814:	b510      	push	{r4, lr}
90021816:	4604      	mov	r4, r0
90021818:	f005 fa72 	bl	90026d00 <EwGetTicks>
9002181c:	4b06      	ldr	r3, [pc, #24]	; (90021838 <EwGetCharLower+0x30>)
9002181e:	681a      	ldr	r2, [r3, #0]
90021820:	6018      	str	r0, [r3, #0]
90021822:	4282      	cmp	r2, r0
90021824:	bf82      	ittt	hi
90021826:	685a      	ldrhi	r2, [r3, #4]
90021828:	3201      	addhi	r2, #1
9002182a:	605a      	strhi	r2, [r3, #4]
9002182c:	e9d3 0100 	ldrd	r0, r1, [r3]
90021830:	e884 0003 	stmia.w	r4, {r0, r1}
90021834:	4620      	mov	r0, r4
90021836:	bd10      	pop	{r4, pc}
90021838:	20000340 	.word	0x20000340

9002183c <EwCreateTimer>:
9002183c:	b570      	push	{r4, r5, r6, lr}
9002183e:	4606      	mov	r6, r0
90021840:	460d      	mov	r5, r1
90021842:	2020      	movs	r0, #32
90021844:	f005 fa36 	bl	90026cb4 <EwAlloc>
90021848:	4604      	mov	r4, r0
9002184a:	b950      	cbnz	r0, 90021862 <EwCreateTimer+0x26>
9002184c:	2001      	movs	r0, #1
9002184e:	f7fc fdb1 	bl	9001e3b4 <EwImmediateReclaimMemory>
90021852:	2800      	cmp	r0, #0
90021854:	d1f5      	bne.n	90021842 <EwCreateTimer+0x6>
90021856:	2001      	movs	r0, #1
90021858:	f7fb fdfa 	bl	9001d450 <EwError>
9002185c:	f005 fa2e 	bl	90026cbc <EwPanic>
90021860:	e01f      	b.n	900218a2 <EwCreateTimer+0x66>
90021862:	2300      	movs	r3, #0
90021864:	7303      	strb	r3, [r0, #12]
90021866:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002186a:	e9c0 3306 	strd	r3, r3, [r0, #24]
9002186e:	4b0e      	ldr	r3, [pc, #56]	; (900218a8 <EwCreateTimer+0x6c>)
90021870:	689a      	ldr	r2, [r3, #8]
90021872:	6098      	str	r0, [r3, #8]
90021874:	6002      	str	r2, [r0, #0]
90021876:	4a0d      	ldr	r2, [pc, #52]	; (900218ac <EwCreateTimer+0x70>)
90021878:	6813      	ldr	r3, [r2, #0]
9002187a:	3320      	adds	r3, #32
9002187c:	6013      	str	r3, [r2, #0]
9002187e:	4a0c      	ldr	r2, [pc, #48]	; (900218b0 <EwCreateTimer+0x74>)
90021880:	6811      	ldr	r1, [r2, #0]
90021882:	428b      	cmp	r3, r1
90021884:	e9c0 6501 	strd	r6, r5, [r0, #4]
90021888:	dd00      	ble.n	9002188c <EwCreateTimer+0x50>
9002188a:	6013      	str	r3, [r2, #0]
9002188c:	4a09      	ldr	r2, [pc, #36]	; (900218b4 <EwCreateTimer+0x78>)
9002188e:	6812      	ldr	r2, [r2, #0]
90021890:	4413      	add	r3, r2
90021892:	4a09      	ldr	r2, [pc, #36]	; (900218b8 <EwCreateTimer+0x7c>)
90021894:	6812      	ldr	r2, [r2, #0]
90021896:	4413      	add	r3, r2
90021898:	4a08      	ldr	r2, [pc, #32]	; (900218bc <EwCreateTimer+0x80>)
9002189a:	6811      	ldr	r1, [r2, #0]
9002189c:	428b      	cmp	r3, r1
9002189e:	dd00      	ble.n	900218a2 <EwCreateTimer+0x66>
900218a0:	6013      	str	r3, [r2, #0]
900218a2:	4620      	mov	r0, r4
900218a4:	bd70      	pop	{r4, r5, r6, pc}
900218a6:	bf00      	nop
900218a8:	20000340 	.word	0x20000340
900218ac:	200002ac 	.word	0x200002ac
900218b0:	200002b4 	.word	0x200002b4
900218b4:	200002b8 	.word	0x200002b8
900218b8:	200002bc 	.word	0x200002bc
900218bc:	200002c0 	.word	0x200002c0

900218c0 <EwResetTimer>:
900218c0:	7b03      	ldrb	r3, [r0, #12]
900218c2:	b12b      	cbz	r3, 900218d0 <EwResetTimer+0x10>
900218c4:	2300      	movs	r3, #0
900218c6:	7303      	strb	r3, [r0, #12]
900218c8:	e9c0 3306 	strd	r3, r3, [r0, #24]
900218cc:	e9c0 3304 	strd	r3, r3, [r0, #16]
900218d0:	4770      	bx	lr

900218d2 <EwDestroyTimer>:
900218d2:	b510      	push	{r4, lr}
900218d4:	4c10      	ldr	r4, [pc, #64]	; (90021918 <EwDestroyTimer+0x46>)
900218d6:	4601      	mov	r1, r0
900218d8:	68a2      	ldr	r2, [r4, #8]
900218da:	f7ff fff1 	bl	900218c0 <EwResetTimer>
900218de:	4282      	cmp	r2, r0
900218e0:	d10b      	bne.n	900218fa <EwDestroyTimer+0x28>
900218e2:	6803      	ldr	r3, [r0, #0]
900218e4:	60a3      	str	r3, [r4, #8]
900218e6:	4a0d      	ldr	r2, [pc, #52]	; (9002191c <EwDestroyTimer+0x4a>)
900218e8:	4608      	mov	r0, r1
900218ea:	6813      	ldr	r3, [r2, #0]
900218ec:	3b20      	subs	r3, #32
900218ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900218f2:	6013      	str	r3, [r2, #0]
900218f4:	f005 b9e0 	b.w	90026cb8 <EwFree>
900218f8:	461a      	mov	r2, r3
900218fa:	b12a      	cbz	r2, 90021908 <EwDestroyTimer+0x36>
900218fc:	6813      	ldr	r3, [r2, #0]
900218fe:	428b      	cmp	r3, r1
90021900:	d1fa      	bne.n	900218f8 <EwDestroyTimer+0x26>
90021902:	680b      	ldr	r3, [r1, #0]
90021904:	6013      	str	r3, [r2, #0]
90021906:	e7ee      	b.n	900218e6 <EwDestroyTimer+0x14>
90021908:	f240 102d 	movw	r0, #301	; 0x12d
9002190c:	f7fb fdb6 	bl	9001d47c <EwErrorPD>
90021910:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90021914:	f005 b9d2 	b.w	90026cbc <EwPanic>
90021918:	20000340 	.word	0x20000340
9002191c:	200002ac 	.word	0x200002ac

90021920 <EwStartTimer>:
90021920:	b537      	push	{r0, r1, r2, r4, r5, lr}
90021922:	f7ff ffcd 	bl	900218c0 <EwResetTimer>
90021926:	2900      	cmp	r1, #0
90021928:	4604      	mov	r4, r0
9002192a:	460d      	mov	r5, r1
9002192c:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
90021930:	dc02      	bgt.n	90021938 <EwStartTimer+0x18>
90021932:	2a00      	cmp	r2, #0
90021934:	dd0e      	ble.n	90021954 <EwStartTimer+0x34>
90021936:	461d      	mov	r5, r3
90021938:	4668      	mov	r0, sp
9002193a:	e9c4 5306 	strd	r5, r3, [r4, #24]
9002193e:	f7ff ff69 	bl	90021814 <EwGetCharLower+0xc>
90021942:	e9dd 1300 	ldrd	r1, r3, [sp]
90021946:	1949      	adds	r1, r1, r5
90021948:	bf28      	it	cs
9002194a:	3301      	addcs	r3, #1
9002194c:	e9c4 1304 	strd	r1, r3, [r4, #16]
90021950:	2301      	movs	r3, #1
90021952:	7323      	strb	r3, [r4, #12]
90021954:	b003      	add	sp, #12
90021956:	bd30      	pop	{r4, r5, pc}

90021958 <EwProcessTimers>:
90021958:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9002195c:	4b22      	ldr	r3, [pc, #136]	; (900219e8 <EwProcessTimers+0x90>)
9002195e:	f04f 0800 	mov.w	r8, #0
90021962:	4668      	mov	r0, sp
90021964:	689c      	ldr	r4, [r3, #8]
90021966:	4647      	mov	r7, r8
90021968:	f7ff ff54 	bl	90021814 <EwGetCharLower+0xc>
9002196c:	e9dd 6500 	ldrd	r6, r5, [sp]
90021970:	b91c      	cbnz	r4, 9002197a <EwProcessTimers+0x22>
90021972:	4640      	mov	r0, r8
90021974:	b002      	add	sp, #8
90021976:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002197a:	7b23      	ldrb	r3, [r4, #12]
9002197c:	b35b      	cbz	r3, 900219d6 <EwProcessTimers+0x7e>
9002197e:	e9d4 3204 	ldrd	r3, r2, [r4, #16]
90021982:	1aa9      	subs	r1, r5, r2
90021984:	bf08      	it	eq
90021986:	1af1      	subeq	r1, r6, r3
90021988:	2900      	cmp	r1, #0
9002198a:	db24      	blt.n	900219d6 <EwProcessTimers+0x7e>
9002198c:	69e1      	ldr	r1, [r4, #28]
9002198e:	2900      	cmp	r1, #0
90021990:	dd23      	ble.n	900219da <EwProcessTimers+0x82>
90021992:	185b      	adds	r3, r3, r1
90021994:	bf28      	it	cs
90021996:	3201      	addcs	r2, #1
90021998:	e9c4 3204 	strd	r3, r2, [r4, #16]
9002199c:	1aaa      	subs	r2, r5, r2
9002199e:	bf08      	it	eq
900219a0:	1af2      	subeq	r2, r6, r3
900219a2:	2a00      	cmp	r2, #0
900219a4:	db12      	blt.n	900219cc <EwProcessTimers+0x74>
900219a6:	1af3      	subs	r3, r6, r3
900219a8:	fb93 f2f1 	sdiv	r2, r3, r1
900219ac:	fb01 3312 	mls	r3, r1, r2, r3
900219b0:	1af2      	subs	r2, r6, r3
900219b2:	2b00      	cmp	r3, #0
900219b4:	bfcc      	ite	gt
900219b6:	f105 33ff 	addgt.w	r3, r5, #4294967295
900219ba:	462b      	movle	r3, r5
900219bc:	42b2      	cmp	r2, r6
900219be:	bf38      	it	cc
900219c0:	3301      	addcc	r3, #1
900219c2:	1852      	adds	r2, r2, r1
900219c4:	bf28      	it	cs
900219c6:	3301      	addcs	r3, #1
900219c8:	e9c4 2304 	strd	r2, r3, [r4, #16]
900219cc:	f108 0801 	add.w	r8, r8, #1
900219d0:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
900219d4:	4798      	blx	r3
900219d6:	6824      	ldr	r4, [r4, #0]
900219d8:	e7ca      	b.n	90021970 <EwProcessTimers+0x18>
900219da:	7327      	strb	r7, [r4, #12]
900219dc:	e9c4 7706 	strd	r7, r7, [r4, #24]
900219e0:	e9c4 7704 	strd	r7, r7, [r4, #16]
900219e4:	e7f2      	b.n	900219cc <EwProcessTimers+0x74>
900219e6:	bf00      	nop
900219e8:	20000340 	.word	0x20000340

900219ec <EwNextTimerExpiration>:
900219ec:	4b0b      	ldr	r3, [pc, #44]	; (90021a1c <EwNextTimerExpiration+0x30>)
900219ee:	b513      	push	{r0, r1, r4, lr}
900219f0:	4668      	mov	r0, sp
900219f2:	689c      	ldr	r4, [r3, #8]
900219f4:	f7ff ff0e 	bl	90021814 <EwGetCharLower+0xc>
900219f8:	9a00      	ldr	r2, [sp, #0]
900219fa:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900219fe:	b91c      	cbnz	r4, 90021a08 <EwNextTimerExpiration+0x1c>
90021a00:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
90021a04:	b002      	add	sp, #8
90021a06:	bd10      	pop	{r4, pc}
90021a08:	7b23      	ldrb	r3, [r4, #12]
90021a0a:	b123      	cbz	r3, 90021a16 <EwNextTimerExpiration+0x2a>
90021a0c:	6923      	ldr	r3, [r4, #16]
90021a0e:	1a9b      	subs	r3, r3, r2
90021a10:	4298      	cmp	r0, r3
90021a12:	bfa8      	it	ge
90021a14:	4618      	movge	r0, r3
90021a16:	6824      	ldr	r4, [r4, #0]
90021a18:	e7f1      	b.n	900219fe <EwNextTimerExpiration+0x12>
90021a1a:	bf00      	nop
90021a1c:	20000340 	.word	0x20000340

90021a20 <memchr>:
90021a20:	f001 01ff 	and.w	r1, r1, #255	; 0xff
90021a24:	2a10      	cmp	r2, #16
90021a26:	db2b      	blt.n	90021a80 <memchr+0x60>
90021a28:	f010 0f07 	tst.w	r0, #7
90021a2c:	d008      	beq.n	90021a40 <memchr+0x20>
90021a2e:	f810 3b01 	ldrb.w	r3, [r0], #1
90021a32:	3a01      	subs	r2, #1
90021a34:	428b      	cmp	r3, r1
90021a36:	d02d      	beq.n	90021a94 <memchr+0x74>
90021a38:	f010 0f07 	tst.w	r0, #7
90021a3c:	b342      	cbz	r2, 90021a90 <memchr+0x70>
90021a3e:	d1f6      	bne.n	90021a2e <memchr+0xe>
90021a40:	b4f0      	push	{r4, r5, r6, r7}
90021a42:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90021a46:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
90021a4a:	f022 0407 	bic.w	r4, r2, #7
90021a4e:	f07f 0700 	mvns.w	r7, #0
90021a52:	2300      	movs	r3, #0
90021a54:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90021a58:	3c08      	subs	r4, #8
90021a5a:	ea85 0501 	eor.w	r5, r5, r1
90021a5e:	ea86 0601 	eor.w	r6, r6, r1
90021a62:	fa85 f547 	uadd8	r5, r5, r7
90021a66:	faa3 f587 	sel	r5, r3, r7
90021a6a:	fa86 f647 	uadd8	r6, r6, r7
90021a6e:	faa5 f687 	sel	r6, r5, r7
90021a72:	b98e      	cbnz	r6, 90021a98 <memchr+0x78>
90021a74:	d1ee      	bne.n	90021a54 <memchr+0x34>
90021a76:	bcf0      	pop	{r4, r5, r6, r7}
90021a78:	f001 01ff 	and.w	r1, r1, #255	; 0xff
90021a7c:	f002 0207 	and.w	r2, r2, #7
90021a80:	b132      	cbz	r2, 90021a90 <memchr+0x70>
90021a82:	f810 3b01 	ldrb.w	r3, [r0], #1
90021a86:	3a01      	subs	r2, #1
90021a88:	ea83 0301 	eor.w	r3, r3, r1
90021a8c:	b113      	cbz	r3, 90021a94 <memchr+0x74>
90021a8e:	d1f8      	bne.n	90021a82 <memchr+0x62>
90021a90:	2000      	movs	r0, #0
90021a92:	4770      	bx	lr
90021a94:	3801      	subs	r0, #1
90021a96:	4770      	bx	lr
90021a98:	2d00      	cmp	r5, #0
90021a9a:	bf06      	itte	eq
90021a9c:	4635      	moveq	r5, r6
90021a9e:	3803      	subeq	r0, #3
90021aa0:	3807      	subne	r0, #7
90021aa2:	f015 0f01 	tst.w	r5, #1
90021aa6:	d107      	bne.n	90021ab8 <memchr+0x98>
90021aa8:	3001      	adds	r0, #1
90021aaa:	f415 7f80 	tst.w	r5, #256	; 0x100
90021aae:	bf02      	ittt	eq
90021ab0:	3001      	addeq	r0, #1
90021ab2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90021ab6:	3001      	addeq	r0, #1
90021ab8:	bcf0      	pop	{r4, r5, r6, r7}
90021aba:	3801      	subs	r0, #1
90021abc:	4770      	bx	lr
90021abe:	bf00      	nop

90021ac0 <__aeabi_drsub>:
90021ac0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
90021ac4:	e002      	b.n	90021acc <__adddf3>
90021ac6:	bf00      	nop

90021ac8 <__aeabi_dsub>:
90021ac8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

90021acc <__adddf3>:
90021acc:	b530      	push	{r4, r5, lr}
90021ace:	ea4f 0441 	mov.w	r4, r1, lsl #1
90021ad2:	ea4f 0543 	mov.w	r5, r3, lsl #1
90021ad6:	ea94 0f05 	teq	r4, r5
90021ada:	bf08      	it	eq
90021adc:	ea90 0f02 	teqeq	r0, r2
90021ae0:	bf1f      	itttt	ne
90021ae2:	ea54 0c00 	orrsne.w	ip, r4, r0
90021ae6:	ea55 0c02 	orrsne.w	ip, r5, r2
90021aea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
90021aee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90021af2:	f000 80e2 	beq.w	90021cba <__adddf3+0x1ee>
90021af6:	ea4f 5454 	mov.w	r4, r4, lsr #21
90021afa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
90021afe:	bfb8      	it	lt
90021b00:	426d      	neglt	r5, r5
90021b02:	dd0c      	ble.n	90021b1e <__adddf3+0x52>
90021b04:	442c      	add	r4, r5
90021b06:	ea80 0202 	eor.w	r2, r0, r2
90021b0a:	ea81 0303 	eor.w	r3, r1, r3
90021b0e:	ea82 0000 	eor.w	r0, r2, r0
90021b12:	ea83 0101 	eor.w	r1, r3, r1
90021b16:	ea80 0202 	eor.w	r2, r0, r2
90021b1a:	ea81 0303 	eor.w	r3, r1, r3
90021b1e:	2d36      	cmp	r5, #54	; 0x36
90021b20:	bf88      	it	hi
90021b22:	bd30      	pophi	{r4, r5, pc}
90021b24:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
90021b28:	ea4f 3101 	mov.w	r1, r1, lsl #12
90021b2c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
90021b30:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
90021b34:	d002      	beq.n	90021b3c <__adddf3+0x70>
90021b36:	4240      	negs	r0, r0
90021b38:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90021b3c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
90021b40:	ea4f 3303 	mov.w	r3, r3, lsl #12
90021b44:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90021b48:	d002      	beq.n	90021b50 <__adddf3+0x84>
90021b4a:	4252      	negs	r2, r2
90021b4c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90021b50:	ea94 0f05 	teq	r4, r5
90021b54:	f000 80a7 	beq.w	90021ca6 <__adddf3+0x1da>
90021b58:	f1a4 0401 	sub.w	r4, r4, #1
90021b5c:	f1d5 0e20 	rsbs	lr, r5, #32
90021b60:	db0d      	blt.n	90021b7e <__adddf3+0xb2>
90021b62:	fa02 fc0e 	lsl.w	ip, r2, lr
90021b66:	fa22 f205 	lsr.w	r2, r2, r5
90021b6a:	1880      	adds	r0, r0, r2
90021b6c:	f141 0100 	adc.w	r1, r1, #0
90021b70:	fa03 f20e 	lsl.w	r2, r3, lr
90021b74:	1880      	adds	r0, r0, r2
90021b76:	fa43 f305 	asr.w	r3, r3, r5
90021b7a:	4159      	adcs	r1, r3
90021b7c:	e00e      	b.n	90021b9c <__adddf3+0xd0>
90021b7e:	f1a5 0520 	sub.w	r5, r5, #32
90021b82:	f10e 0e20 	add.w	lr, lr, #32
90021b86:	2a01      	cmp	r2, #1
90021b88:	fa03 fc0e 	lsl.w	ip, r3, lr
90021b8c:	bf28      	it	cs
90021b8e:	f04c 0c02 	orrcs.w	ip, ip, #2
90021b92:	fa43 f305 	asr.w	r3, r3, r5
90021b96:	18c0      	adds	r0, r0, r3
90021b98:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
90021b9c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
90021ba0:	d507      	bpl.n	90021bb2 <__adddf3+0xe6>
90021ba2:	f04f 0e00 	mov.w	lr, #0
90021ba6:	f1dc 0c00 	rsbs	ip, ip, #0
90021baa:	eb7e 0000 	sbcs.w	r0, lr, r0
90021bae:	eb6e 0101 	sbc.w	r1, lr, r1
90021bb2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
90021bb6:	d31b      	bcc.n	90021bf0 <__adddf3+0x124>
90021bb8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
90021bbc:	d30c      	bcc.n	90021bd8 <__adddf3+0x10c>
90021bbe:	0849      	lsrs	r1, r1, #1
90021bc0:	ea5f 0030 	movs.w	r0, r0, rrx
90021bc4:	ea4f 0c3c 	mov.w	ip, ip, rrx
90021bc8:	f104 0401 	add.w	r4, r4, #1
90021bcc:	ea4f 5244 	mov.w	r2, r4, lsl #21
90021bd0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
90021bd4:	f080 809a 	bcs.w	90021d0c <__adddf3+0x240>
90021bd8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
90021bdc:	bf08      	it	eq
90021bde:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
90021be2:	f150 0000 	adcs.w	r0, r0, #0
90021be6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
90021bea:	ea41 0105 	orr.w	r1, r1, r5
90021bee:	bd30      	pop	{r4, r5, pc}
90021bf0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
90021bf4:	4140      	adcs	r0, r0
90021bf6:	eb41 0101 	adc.w	r1, r1, r1
90021bfa:	3c01      	subs	r4, #1
90021bfc:	bf28      	it	cs
90021bfe:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
90021c02:	d2e9      	bcs.n	90021bd8 <__adddf3+0x10c>
90021c04:	f091 0f00 	teq	r1, #0
90021c08:	bf04      	itt	eq
90021c0a:	4601      	moveq	r1, r0
90021c0c:	2000      	moveq	r0, #0
90021c0e:	fab1 f381 	clz	r3, r1
90021c12:	bf08      	it	eq
90021c14:	3320      	addeq	r3, #32
90021c16:	f1a3 030b 	sub.w	r3, r3, #11
90021c1a:	f1b3 0220 	subs.w	r2, r3, #32
90021c1e:	da0c      	bge.n	90021c3a <__adddf3+0x16e>
90021c20:	320c      	adds	r2, #12
90021c22:	dd08      	ble.n	90021c36 <__adddf3+0x16a>
90021c24:	f102 0c14 	add.w	ip, r2, #20
90021c28:	f1c2 020c 	rsb	r2, r2, #12
90021c2c:	fa01 f00c 	lsl.w	r0, r1, ip
90021c30:	fa21 f102 	lsr.w	r1, r1, r2
90021c34:	e00c      	b.n	90021c50 <__adddf3+0x184>
90021c36:	f102 0214 	add.w	r2, r2, #20
90021c3a:	bfd8      	it	le
90021c3c:	f1c2 0c20 	rsble	ip, r2, #32
90021c40:	fa01 f102 	lsl.w	r1, r1, r2
90021c44:	fa20 fc0c 	lsr.w	ip, r0, ip
90021c48:	bfdc      	itt	le
90021c4a:	ea41 010c 	orrle.w	r1, r1, ip
90021c4e:	4090      	lslle	r0, r2
90021c50:	1ae4      	subs	r4, r4, r3
90021c52:	bfa2      	ittt	ge
90021c54:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90021c58:	4329      	orrge	r1, r5
90021c5a:	bd30      	popge	{r4, r5, pc}
90021c5c:	ea6f 0404 	mvn.w	r4, r4
90021c60:	3c1f      	subs	r4, #31
90021c62:	da1c      	bge.n	90021c9e <__adddf3+0x1d2>
90021c64:	340c      	adds	r4, #12
90021c66:	dc0e      	bgt.n	90021c86 <__adddf3+0x1ba>
90021c68:	f104 0414 	add.w	r4, r4, #20
90021c6c:	f1c4 0220 	rsb	r2, r4, #32
90021c70:	fa20 f004 	lsr.w	r0, r0, r4
90021c74:	fa01 f302 	lsl.w	r3, r1, r2
90021c78:	ea40 0003 	orr.w	r0, r0, r3
90021c7c:	fa21 f304 	lsr.w	r3, r1, r4
90021c80:	ea45 0103 	orr.w	r1, r5, r3
90021c84:	bd30      	pop	{r4, r5, pc}
90021c86:	f1c4 040c 	rsb	r4, r4, #12
90021c8a:	f1c4 0220 	rsb	r2, r4, #32
90021c8e:	fa20 f002 	lsr.w	r0, r0, r2
90021c92:	fa01 f304 	lsl.w	r3, r1, r4
90021c96:	ea40 0003 	orr.w	r0, r0, r3
90021c9a:	4629      	mov	r1, r5
90021c9c:	bd30      	pop	{r4, r5, pc}
90021c9e:	fa21 f004 	lsr.w	r0, r1, r4
90021ca2:	4629      	mov	r1, r5
90021ca4:	bd30      	pop	{r4, r5, pc}
90021ca6:	f094 0f00 	teq	r4, #0
90021caa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
90021cae:	bf06      	itte	eq
90021cb0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
90021cb4:	3401      	addeq	r4, #1
90021cb6:	3d01      	subne	r5, #1
90021cb8:	e74e      	b.n	90021b58 <__adddf3+0x8c>
90021cba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
90021cbe:	bf18      	it	ne
90021cc0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90021cc4:	d029      	beq.n	90021d1a <__adddf3+0x24e>
90021cc6:	ea94 0f05 	teq	r4, r5
90021cca:	bf08      	it	eq
90021ccc:	ea90 0f02 	teqeq	r0, r2
90021cd0:	d005      	beq.n	90021cde <__adddf3+0x212>
90021cd2:	ea54 0c00 	orrs.w	ip, r4, r0
90021cd6:	bf04      	itt	eq
90021cd8:	4619      	moveq	r1, r3
90021cda:	4610      	moveq	r0, r2
90021cdc:	bd30      	pop	{r4, r5, pc}
90021cde:	ea91 0f03 	teq	r1, r3
90021ce2:	bf1e      	ittt	ne
90021ce4:	2100      	movne	r1, #0
90021ce6:	2000      	movne	r0, #0
90021ce8:	bd30      	popne	{r4, r5, pc}
90021cea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
90021cee:	d105      	bne.n	90021cfc <__adddf3+0x230>
90021cf0:	0040      	lsls	r0, r0, #1
90021cf2:	4149      	adcs	r1, r1
90021cf4:	bf28      	it	cs
90021cf6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
90021cfa:	bd30      	pop	{r4, r5, pc}
90021cfc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
90021d00:	bf3c      	itt	cc
90021d02:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
90021d06:	bd30      	popcc	{r4, r5, pc}
90021d08:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
90021d0c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
90021d10:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90021d14:	f04f 0000 	mov.w	r0, #0
90021d18:	bd30      	pop	{r4, r5, pc}
90021d1a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
90021d1e:	bf1a      	itte	ne
90021d20:	4619      	movne	r1, r3
90021d22:	4610      	movne	r0, r2
90021d24:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
90021d28:	bf1c      	itt	ne
90021d2a:	460b      	movne	r3, r1
90021d2c:	4602      	movne	r2, r0
90021d2e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
90021d32:	bf06      	itte	eq
90021d34:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
90021d38:	ea91 0f03 	teqeq	r1, r3
90021d3c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
90021d40:	bd30      	pop	{r4, r5, pc}
90021d42:	bf00      	nop

90021d44 <__aeabi_ui2d>:
90021d44:	f090 0f00 	teq	r0, #0
90021d48:	bf04      	itt	eq
90021d4a:	2100      	moveq	r1, #0
90021d4c:	4770      	bxeq	lr
90021d4e:	b530      	push	{r4, r5, lr}
90021d50:	f44f 6480 	mov.w	r4, #1024	; 0x400
90021d54:	f104 0432 	add.w	r4, r4, #50	; 0x32
90021d58:	f04f 0500 	mov.w	r5, #0
90021d5c:	f04f 0100 	mov.w	r1, #0
90021d60:	e750      	b.n	90021c04 <__adddf3+0x138>
90021d62:	bf00      	nop

90021d64 <__aeabi_i2d>:
90021d64:	f090 0f00 	teq	r0, #0
90021d68:	bf04      	itt	eq
90021d6a:	2100      	moveq	r1, #0
90021d6c:	4770      	bxeq	lr
90021d6e:	b530      	push	{r4, r5, lr}
90021d70:	f44f 6480 	mov.w	r4, #1024	; 0x400
90021d74:	f104 0432 	add.w	r4, r4, #50	; 0x32
90021d78:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
90021d7c:	bf48      	it	mi
90021d7e:	4240      	negmi	r0, r0
90021d80:	f04f 0100 	mov.w	r1, #0
90021d84:	e73e      	b.n	90021c04 <__adddf3+0x138>
90021d86:	bf00      	nop

90021d88 <__aeabi_f2d>:
90021d88:	0042      	lsls	r2, r0, #1
90021d8a:	ea4f 01e2 	mov.w	r1, r2, asr #3
90021d8e:	ea4f 0131 	mov.w	r1, r1, rrx
90021d92:	ea4f 7002 	mov.w	r0, r2, lsl #28
90021d96:	bf1f      	itttt	ne
90021d98:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
90021d9c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
90021da0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
90021da4:	4770      	bxne	lr
90021da6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
90021daa:	bf08      	it	eq
90021dac:	4770      	bxeq	lr
90021dae:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
90021db2:	bf04      	itt	eq
90021db4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
90021db8:	4770      	bxeq	lr
90021dba:	b530      	push	{r4, r5, lr}
90021dbc:	f44f 7460 	mov.w	r4, #896	; 0x380
90021dc0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
90021dc4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
90021dc8:	e71c      	b.n	90021c04 <__adddf3+0x138>
90021dca:	bf00      	nop

90021dcc <__aeabi_ul2d>:
90021dcc:	ea50 0201 	orrs.w	r2, r0, r1
90021dd0:	bf08      	it	eq
90021dd2:	4770      	bxeq	lr
90021dd4:	b530      	push	{r4, r5, lr}
90021dd6:	f04f 0500 	mov.w	r5, #0
90021dda:	e00a      	b.n	90021df2 <__aeabi_l2d+0x16>

90021ddc <__aeabi_l2d>:
90021ddc:	ea50 0201 	orrs.w	r2, r0, r1
90021de0:	bf08      	it	eq
90021de2:	4770      	bxeq	lr
90021de4:	b530      	push	{r4, r5, lr}
90021de6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
90021dea:	d502      	bpl.n	90021df2 <__aeabi_l2d+0x16>
90021dec:	4240      	negs	r0, r0
90021dee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90021df2:	f44f 6480 	mov.w	r4, #1024	; 0x400
90021df6:	f104 0432 	add.w	r4, r4, #50	; 0x32
90021dfa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
90021dfe:	f43f aed8 	beq.w	90021bb2 <__adddf3+0xe6>
90021e02:	f04f 0203 	mov.w	r2, #3
90021e06:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
90021e0a:	bf18      	it	ne
90021e0c:	3203      	addne	r2, #3
90021e0e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
90021e12:	bf18      	it	ne
90021e14:	3203      	addne	r2, #3
90021e16:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
90021e1a:	f1c2 0320 	rsb	r3, r2, #32
90021e1e:	fa00 fc03 	lsl.w	ip, r0, r3
90021e22:	fa20 f002 	lsr.w	r0, r0, r2
90021e26:	fa01 fe03 	lsl.w	lr, r1, r3
90021e2a:	ea40 000e 	orr.w	r0, r0, lr
90021e2e:	fa21 f102 	lsr.w	r1, r1, r2
90021e32:	4414      	add	r4, r2
90021e34:	e6bd      	b.n	90021bb2 <__adddf3+0xe6>
90021e36:	bf00      	nop

90021e38 <__aeabi_d2f>:
90021e38:	ea4f 0241 	mov.w	r2, r1, lsl #1
90021e3c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
90021e40:	bf24      	itt	cs
90021e42:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
90021e46:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
90021e4a:	d90d      	bls.n	90021e68 <__aeabi_d2f+0x30>
90021e4c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
90021e50:	ea4f 02c0 	mov.w	r2, r0, lsl #3
90021e54:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
90021e58:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
90021e5c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
90021e60:	bf08      	it	eq
90021e62:	f020 0001 	biceq.w	r0, r0, #1
90021e66:	4770      	bx	lr
90021e68:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
90021e6c:	d121      	bne.n	90021eb2 <__aeabi_d2f+0x7a>
90021e6e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
90021e72:	bfbc      	itt	lt
90021e74:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
90021e78:	4770      	bxlt	lr
90021e7a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
90021e7e:	ea4f 5252 	mov.w	r2, r2, lsr #21
90021e82:	f1c2 0218 	rsb	r2, r2, #24
90021e86:	f1c2 0c20 	rsb	ip, r2, #32
90021e8a:	fa10 f30c 	lsls.w	r3, r0, ip
90021e8e:	fa20 f002 	lsr.w	r0, r0, r2
90021e92:	bf18      	it	ne
90021e94:	f040 0001 	orrne.w	r0, r0, #1
90021e98:	ea4f 23c1 	mov.w	r3, r1, lsl #11
90021e9c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
90021ea0:	fa03 fc0c 	lsl.w	ip, r3, ip
90021ea4:	ea40 000c 	orr.w	r0, r0, ip
90021ea8:	fa23 f302 	lsr.w	r3, r3, r2
90021eac:	ea4f 0343 	mov.w	r3, r3, lsl #1
90021eb0:	e7cc      	b.n	90021e4c <__aeabi_d2f+0x14>
90021eb2:	ea7f 5362 	mvns.w	r3, r2, asr #21
90021eb6:	d107      	bne.n	90021ec8 <__aeabi_d2f+0x90>
90021eb8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
90021ebc:	bf1e      	ittt	ne
90021ebe:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
90021ec2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
90021ec6:	4770      	bxne	lr
90021ec8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
90021ecc:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
90021ed0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
90021ed4:	4770      	bx	lr
90021ed6:	bf00      	nop

90021ed8 <__aeabi_uldivmod>:
90021ed8:	b953      	cbnz	r3, 90021ef0 <__aeabi_uldivmod+0x18>
90021eda:	b94a      	cbnz	r2, 90021ef0 <__aeabi_uldivmod+0x18>
90021edc:	2900      	cmp	r1, #0
90021ede:	bf08      	it	eq
90021ee0:	2800      	cmpeq	r0, #0
90021ee2:	bf1c      	itt	ne
90021ee4:	f04f 31ff 	movne.w	r1, #4294967295
90021ee8:	f04f 30ff 	movne.w	r0, #4294967295
90021eec:	f000 b96e 	b.w	900221cc <__aeabi_idiv0>
90021ef0:	f1ad 0c08 	sub.w	ip, sp, #8
90021ef4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90021ef8:	f000 f806 	bl	90021f08 <__udivmoddi4>
90021efc:	f8dd e004 	ldr.w	lr, [sp, #4]
90021f00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90021f04:	b004      	add	sp, #16
90021f06:	4770      	bx	lr

90021f08 <__udivmoddi4>:
90021f08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90021f0c:	9d08      	ldr	r5, [sp, #32]
90021f0e:	4604      	mov	r4, r0
90021f10:	468c      	mov	ip, r1
90021f12:	2b00      	cmp	r3, #0
90021f14:	f040 8083 	bne.w	9002201e <__udivmoddi4+0x116>
90021f18:	428a      	cmp	r2, r1
90021f1a:	4617      	mov	r7, r2
90021f1c:	d947      	bls.n	90021fae <__udivmoddi4+0xa6>
90021f1e:	fab2 f282 	clz	r2, r2
90021f22:	b142      	cbz	r2, 90021f36 <__udivmoddi4+0x2e>
90021f24:	f1c2 0020 	rsb	r0, r2, #32
90021f28:	fa24 f000 	lsr.w	r0, r4, r0
90021f2c:	4091      	lsls	r1, r2
90021f2e:	4097      	lsls	r7, r2
90021f30:	ea40 0c01 	orr.w	ip, r0, r1
90021f34:	4094      	lsls	r4, r2
90021f36:	ea4f 4817 	mov.w	r8, r7, lsr #16
90021f3a:	0c23      	lsrs	r3, r4, #16
90021f3c:	fbbc f6f8 	udiv	r6, ip, r8
90021f40:	fa1f fe87 	uxth.w	lr, r7
90021f44:	fb08 c116 	mls	r1, r8, r6, ip
90021f48:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90021f4c:	fb06 f10e 	mul.w	r1, r6, lr
90021f50:	4299      	cmp	r1, r3
90021f52:	d909      	bls.n	90021f68 <__udivmoddi4+0x60>
90021f54:	18fb      	adds	r3, r7, r3
90021f56:	f106 30ff 	add.w	r0, r6, #4294967295
90021f5a:	f080 8119 	bcs.w	90022190 <__udivmoddi4+0x288>
90021f5e:	4299      	cmp	r1, r3
90021f60:	f240 8116 	bls.w	90022190 <__udivmoddi4+0x288>
90021f64:	3e02      	subs	r6, #2
90021f66:	443b      	add	r3, r7
90021f68:	1a5b      	subs	r3, r3, r1
90021f6a:	b2a4      	uxth	r4, r4
90021f6c:	fbb3 f0f8 	udiv	r0, r3, r8
90021f70:	fb08 3310 	mls	r3, r8, r0, r3
90021f74:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
90021f78:	fb00 fe0e 	mul.w	lr, r0, lr
90021f7c:	45a6      	cmp	lr, r4
90021f7e:	d909      	bls.n	90021f94 <__udivmoddi4+0x8c>
90021f80:	193c      	adds	r4, r7, r4
90021f82:	f100 33ff 	add.w	r3, r0, #4294967295
90021f86:	f080 8105 	bcs.w	90022194 <__udivmoddi4+0x28c>
90021f8a:	45a6      	cmp	lr, r4
90021f8c:	f240 8102 	bls.w	90022194 <__udivmoddi4+0x28c>
90021f90:	3802      	subs	r0, #2
90021f92:	443c      	add	r4, r7
90021f94:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
90021f98:	eba4 040e 	sub.w	r4, r4, lr
90021f9c:	2600      	movs	r6, #0
90021f9e:	b11d      	cbz	r5, 90021fa8 <__udivmoddi4+0xa0>
90021fa0:	40d4      	lsrs	r4, r2
90021fa2:	2300      	movs	r3, #0
90021fa4:	e9c5 4300 	strd	r4, r3, [r5]
90021fa8:	4631      	mov	r1, r6
90021faa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90021fae:	b902      	cbnz	r2, 90021fb2 <__udivmoddi4+0xaa>
90021fb0:	deff      	udf	#255	; 0xff
90021fb2:	fab2 f282 	clz	r2, r2
90021fb6:	2a00      	cmp	r2, #0
90021fb8:	d150      	bne.n	9002205c <__udivmoddi4+0x154>
90021fba:	1bcb      	subs	r3, r1, r7
90021fbc:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90021fc0:	fa1f f887 	uxth.w	r8, r7
90021fc4:	2601      	movs	r6, #1
90021fc6:	fbb3 fcfe 	udiv	ip, r3, lr
90021fca:	0c21      	lsrs	r1, r4, #16
90021fcc:	fb0e 331c 	mls	r3, lr, ip, r3
90021fd0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90021fd4:	fb08 f30c 	mul.w	r3, r8, ip
90021fd8:	428b      	cmp	r3, r1
90021fda:	d907      	bls.n	90021fec <__udivmoddi4+0xe4>
90021fdc:	1879      	adds	r1, r7, r1
90021fde:	f10c 30ff 	add.w	r0, ip, #4294967295
90021fe2:	d202      	bcs.n	90021fea <__udivmoddi4+0xe2>
90021fe4:	428b      	cmp	r3, r1
90021fe6:	f200 80e9 	bhi.w	900221bc <__udivmoddi4+0x2b4>
90021fea:	4684      	mov	ip, r0
90021fec:	1ac9      	subs	r1, r1, r3
90021fee:	b2a3      	uxth	r3, r4
90021ff0:	fbb1 f0fe 	udiv	r0, r1, lr
90021ff4:	fb0e 1110 	mls	r1, lr, r0, r1
90021ff8:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
90021ffc:	fb08 f800 	mul.w	r8, r8, r0
90022000:	45a0      	cmp	r8, r4
90022002:	d907      	bls.n	90022014 <__udivmoddi4+0x10c>
90022004:	193c      	adds	r4, r7, r4
90022006:	f100 33ff 	add.w	r3, r0, #4294967295
9002200a:	d202      	bcs.n	90022012 <__udivmoddi4+0x10a>
9002200c:	45a0      	cmp	r8, r4
9002200e:	f200 80d9 	bhi.w	900221c4 <__udivmoddi4+0x2bc>
90022012:	4618      	mov	r0, r3
90022014:	eba4 0408 	sub.w	r4, r4, r8
90022018:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
9002201c:	e7bf      	b.n	90021f9e <__udivmoddi4+0x96>
9002201e:	428b      	cmp	r3, r1
90022020:	d909      	bls.n	90022036 <__udivmoddi4+0x12e>
90022022:	2d00      	cmp	r5, #0
90022024:	f000 80b1 	beq.w	9002218a <__udivmoddi4+0x282>
90022028:	2600      	movs	r6, #0
9002202a:	e9c5 0100 	strd	r0, r1, [r5]
9002202e:	4630      	mov	r0, r6
90022030:	4631      	mov	r1, r6
90022032:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90022036:	fab3 f683 	clz	r6, r3
9002203a:	2e00      	cmp	r6, #0
9002203c:	d14a      	bne.n	900220d4 <__udivmoddi4+0x1cc>
9002203e:	428b      	cmp	r3, r1
90022040:	d302      	bcc.n	90022048 <__udivmoddi4+0x140>
90022042:	4282      	cmp	r2, r0
90022044:	f200 80b8 	bhi.w	900221b8 <__udivmoddi4+0x2b0>
90022048:	1a84      	subs	r4, r0, r2
9002204a:	eb61 0103 	sbc.w	r1, r1, r3
9002204e:	2001      	movs	r0, #1
90022050:	468c      	mov	ip, r1
90022052:	2d00      	cmp	r5, #0
90022054:	d0a8      	beq.n	90021fa8 <__udivmoddi4+0xa0>
90022056:	e9c5 4c00 	strd	r4, ip, [r5]
9002205a:	e7a5      	b.n	90021fa8 <__udivmoddi4+0xa0>
9002205c:	f1c2 0320 	rsb	r3, r2, #32
90022060:	fa20 f603 	lsr.w	r6, r0, r3
90022064:	4097      	lsls	r7, r2
90022066:	fa01 f002 	lsl.w	r0, r1, r2
9002206a:	ea4f 4e17 	mov.w	lr, r7, lsr #16
9002206e:	40d9      	lsrs	r1, r3
90022070:	4330      	orrs	r0, r6
90022072:	0c03      	lsrs	r3, r0, #16
90022074:	fbb1 f6fe 	udiv	r6, r1, lr
90022078:	fa1f f887 	uxth.w	r8, r7
9002207c:	fb0e 1116 	mls	r1, lr, r6, r1
90022080:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90022084:	fb06 f108 	mul.w	r1, r6, r8
90022088:	4299      	cmp	r1, r3
9002208a:	fa04 f402 	lsl.w	r4, r4, r2
9002208e:	d909      	bls.n	900220a4 <__udivmoddi4+0x19c>
90022090:	18fb      	adds	r3, r7, r3
90022092:	f106 3cff 	add.w	ip, r6, #4294967295
90022096:	f080 808d 	bcs.w	900221b4 <__udivmoddi4+0x2ac>
9002209a:	4299      	cmp	r1, r3
9002209c:	f240 808a 	bls.w	900221b4 <__udivmoddi4+0x2ac>
900220a0:	3e02      	subs	r6, #2
900220a2:	443b      	add	r3, r7
900220a4:	1a5b      	subs	r3, r3, r1
900220a6:	b281      	uxth	r1, r0
900220a8:	fbb3 f0fe 	udiv	r0, r3, lr
900220ac:	fb0e 3310 	mls	r3, lr, r0, r3
900220b0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
900220b4:	fb00 f308 	mul.w	r3, r0, r8
900220b8:	428b      	cmp	r3, r1
900220ba:	d907      	bls.n	900220cc <__udivmoddi4+0x1c4>
900220bc:	1879      	adds	r1, r7, r1
900220be:	f100 3cff 	add.w	ip, r0, #4294967295
900220c2:	d273      	bcs.n	900221ac <__udivmoddi4+0x2a4>
900220c4:	428b      	cmp	r3, r1
900220c6:	d971      	bls.n	900221ac <__udivmoddi4+0x2a4>
900220c8:	3802      	subs	r0, #2
900220ca:	4439      	add	r1, r7
900220cc:	1acb      	subs	r3, r1, r3
900220ce:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
900220d2:	e778      	b.n	90021fc6 <__udivmoddi4+0xbe>
900220d4:	f1c6 0c20 	rsb	ip, r6, #32
900220d8:	fa03 f406 	lsl.w	r4, r3, r6
900220dc:	fa22 f30c 	lsr.w	r3, r2, ip
900220e0:	431c      	orrs	r4, r3
900220e2:	fa20 f70c 	lsr.w	r7, r0, ip
900220e6:	fa01 f306 	lsl.w	r3, r1, r6
900220ea:	ea4f 4e14 	mov.w	lr, r4, lsr #16
900220ee:	fa21 f10c 	lsr.w	r1, r1, ip
900220f2:	431f      	orrs	r7, r3
900220f4:	0c3b      	lsrs	r3, r7, #16
900220f6:	fbb1 f9fe 	udiv	r9, r1, lr
900220fa:	fa1f f884 	uxth.w	r8, r4
900220fe:	fb0e 1119 	mls	r1, lr, r9, r1
90022102:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
90022106:	fb09 fa08 	mul.w	sl, r9, r8
9002210a:	458a      	cmp	sl, r1
9002210c:	fa02 f206 	lsl.w	r2, r2, r6
90022110:	fa00 f306 	lsl.w	r3, r0, r6
90022114:	d908      	bls.n	90022128 <__udivmoddi4+0x220>
90022116:	1861      	adds	r1, r4, r1
90022118:	f109 30ff 	add.w	r0, r9, #4294967295
9002211c:	d248      	bcs.n	900221b0 <__udivmoddi4+0x2a8>
9002211e:	458a      	cmp	sl, r1
90022120:	d946      	bls.n	900221b0 <__udivmoddi4+0x2a8>
90022122:	f1a9 0902 	sub.w	r9, r9, #2
90022126:	4421      	add	r1, r4
90022128:	eba1 010a 	sub.w	r1, r1, sl
9002212c:	b2bf      	uxth	r7, r7
9002212e:	fbb1 f0fe 	udiv	r0, r1, lr
90022132:	fb0e 1110 	mls	r1, lr, r0, r1
90022136:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
9002213a:	fb00 f808 	mul.w	r8, r0, r8
9002213e:	45b8      	cmp	r8, r7
90022140:	d907      	bls.n	90022152 <__udivmoddi4+0x24a>
90022142:	19e7      	adds	r7, r4, r7
90022144:	f100 31ff 	add.w	r1, r0, #4294967295
90022148:	d22e      	bcs.n	900221a8 <__udivmoddi4+0x2a0>
9002214a:	45b8      	cmp	r8, r7
9002214c:	d92c      	bls.n	900221a8 <__udivmoddi4+0x2a0>
9002214e:	3802      	subs	r0, #2
90022150:	4427      	add	r7, r4
90022152:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
90022156:	eba7 0708 	sub.w	r7, r7, r8
9002215a:	fba0 8902 	umull	r8, r9, r0, r2
9002215e:	454f      	cmp	r7, r9
90022160:	46c6      	mov	lr, r8
90022162:	4649      	mov	r1, r9
90022164:	d31a      	bcc.n	9002219c <__udivmoddi4+0x294>
90022166:	d017      	beq.n	90022198 <__udivmoddi4+0x290>
90022168:	b15d      	cbz	r5, 90022182 <__udivmoddi4+0x27a>
9002216a:	ebb3 020e 	subs.w	r2, r3, lr
9002216e:	eb67 0701 	sbc.w	r7, r7, r1
90022172:	fa07 fc0c 	lsl.w	ip, r7, ip
90022176:	40f2      	lsrs	r2, r6
90022178:	ea4c 0202 	orr.w	r2, ip, r2
9002217c:	40f7      	lsrs	r7, r6
9002217e:	e9c5 2700 	strd	r2, r7, [r5]
90022182:	2600      	movs	r6, #0
90022184:	4631      	mov	r1, r6
90022186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002218a:	462e      	mov	r6, r5
9002218c:	4628      	mov	r0, r5
9002218e:	e70b      	b.n	90021fa8 <__udivmoddi4+0xa0>
90022190:	4606      	mov	r6, r0
90022192:	e6e9      	b.n	90021f68 <__udivmoddi4+0x60>
90022194:	4618      	mov	r0, r3
90022196:	e6fd      	b.n	90021f94 <__udivmoddi4+0x8c>
90022198:	4543      	cmp	r3, r8
9002219a:	d2e5      	bcs.n	90022168 <__udivmoddi4+0x260>
9002219c:	ebb8 0e02 	subs.w	lr, r8, r2
900221a0:	eb69 0104 	sbc.w	r1, r9, r4
900221a4:	3801      	subs	r0, #1
900221a6:	e7df      	b.n	90022168 <__udivmoddi4+0x260>
900221a8:	4608      	mov	r0, r1
900221aa:	e7d2      	b.n	90022152 <__udivmoddi4+0x24a>
900221ac:	4660      	mov	r0, ip
900221ae:	e78d      	b.n	900220cc <__udivmoddi4+0x1c4>
900221b0:	4681      	mov	r9, r0
900221b2:	e7b9      	b.n	90022128 <__udivmoddi4+0x220>
900221b4:	4666      	mov	r6, ip
900221b6:	e775      	b.n	900220a4 <__udivmoddi4+0x19c>
900221b8:	4630      	mov	r0, r6
900221ba:	e74a      	b.n	90022052 <__udivmoddi4+0x14a>
900221bc:	f1ac 0c02 	sub.w	ip, ip, #2
900221c0:	4439      	add	r1, r7
900221c2:	e713      	b.n	90021fec <__udivmoddi4+0xe4>
900221c4:	3802      	subs	r0, #2
900221c6:	443c      	add	r4, r7
900221c8:	e724      	b.n	90022014 <__udivmoddi4+0x10c>
900221ca:	bf00      	nop

900221cc <__aeabi_idiv0>:
900221cc:	4770      	bx	lr
900221ce:	bf00      	nop

900221d0 <ApplicationApplication__Init>:
static const XRect _Const0002 = {{ 190, 110 }, { 300, 140 }};
static const XStringRes _Const0003 = { _StringsDefault0, 0x0002 };

/* Initializer for the class 'Application::Application' */
void ApplicationApplication__Init( ApplicationApplication _this, XObject aLink, XHandle aArg )
{
900221d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900221d4:	4604      	mov	r4, r0
  /* At first initialize the super class ... */
  CoreRoot__Init( &_this->_.Super, aLink, aArg );

  /* Allow the Immediate Garbage Collection to evalute the members of this class. */
  _this->_.XObject._.GCT = EW_CLASS_GCT( ApplicationApplication );
900221d6:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 9002228c <ApplicationApplication__Init+0xbc>
{
900221da:	b083      	sub	sp, #12

  /* Setup the VMT pointer */
  _this->_.VMT = EW_CLASS( ApplicationApplication );

  /* ... and initialize objects, variables, properties, etc. */
  CoreRectView__OnSetBounds( _this, _Const0000 );
900221dc:	4d25      	ldr	r5, [pc, #148]	; (90022274 <ApplicationApplication__Init+0xa4>)
  ViewsRectangle__Init( &_this->Rectangle, &_this->_.XObject, 0 );
900221de:	f504 777a 	add.w	r7, r4, #1000	; 0x3e8
  ViewsText__Init( &_this->Text, &_this->_.XObject, 0 );
900221e2:	f504 6684 	add.w	r6, r4, #1056	; 0x420
  CoreRoot__Init( &_this->_.Super, aLink, aArg );
900221e6:	f002 fa3f 	bl	90024668 <CoreRoot__Init>
  ViewsRectangle__Init( &_this->Rectangle, &_this->_.XObject, 0 );
900221ea:	4621      	mov	r1, r4
900221ec:	4638      	mov	r0, r7
900221ee:	2200      	movs	r2, #0
  _this->_.XObject._.GCT = EW_CLASS_GCT( ApplicationApplication );
900221f0:	f8c4 900c 	str.w	r9, [r4, #12]
  ViewsRectangle__Init( &_this->Rectangle, &_this->_.XObject, 0 );
900221f4:	f003 f898 	bl	90025328 <ViewsRectangle__Init>
  ViewsText__Init( &_this->Text, &_this->_.XObject, 0 );
900221f8:	4630      	mov	r0, r6
900221fa:	4621      	mov	r1, r4
900221fc:	2200      	movs	r2, #0
900221fe:	f003 f8a3 	bl	90025348 <ViewsText__Init>
  CoreRectView__OnSetBounds( _this, _Const0000 );
90022202:	f8d5 800c 	ldr.w	r8, [r5, #12]
90022206:	4620      	mov	r0, r4
  _this->_.VMT = EW_CLASS( ApplicationApplication );
90022208:	f8c4 9000 	str.w	r9, [r4]
  CoreRectView__OnSetBounds( _this, _Const0000 );
9002220c:	f8cd 8000 	str.w	r8, [sp]
90022210:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90022214:	f001 f95a 	bl	900234cc <CoreRectView__OnSetBounds>
  CoreRectView__OnSetBounds( &_this->Rectangle, _Const0000 );
90022218:	4638      	mov	r0, r7
9002221a:	f8cd 8000 	str.w	r8, [sp]
9002221e:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90022222:	f001 f953 	bl	900234cc <CoreRectView__OnSetBounds>
  ViewsRectangle_OnSetColor( &_this->Rectangle, _Const0001 );
90022226:	4b14      	ldr	r3, [pc, #80]	; (90022278 <ApplicationApplication__Init+0xa8>)
90022228:	4638      	mov	r0, r7
9002222a:	6819      	ldr	r1, [r3, #0]
9002222c:	f003 f9a6 	bl	9002557c <ViewsRectangle_OnSetColor>
  CoreRectView__OnSetBounds( &_this->Text, _Const0002 );
90022230:	4b12      	ldr	r3, [pc, #72]	; (9002227c <ApplicationApplication__Init+0xac>)
90022232:	4630      	mov	r0, r6
90022234:	cb2e      	ldmia	r3, {r1, r2, r3, r5}
90022236:	9500      	str	r5, [sp, #0]
90022238:	f001 f948 	bl	900234cc <CoreRectView__OnSetBounds>
  ViewsText_OnSetString( &_this->Text, EwLoadString( &_Const0003 ));
9002223c:	4810      	ldr	r0, [pc, #64]	; (90022280 <ApplicationApplication__Init+0xb0>)
9002223e:	f7fe fccd 	bl	90020bdc <EwLoadString>
90022242:	4601      	mov	r1, r0
90022244:	4630      	mov	r0, r6
90022246:	f003 f9b5 	bl	900255b4 <ViewsText_OnSetString>
  CoreGroup_Add((CoreGroup)_this, ((CoreView)&_this->Rectangle ), 0 );
9002224a:	4639      	mov	r1, r7
9002224c:	4620      	mov	r0, r4
9002224e:	2200      	movs	r2, #0
90022250:	f001 fbdc 	bl	90023a0c <CoreGroup_Add>
  CoreGroup_Add((CoreGroup)_this, ((CoreView)&_this->Text ), 0 );
90022254:	4620      	mov	r0, r4
90022256:	4631      	mov	r1, r6
90022258:	2200      	movs	r2, #0
9002225a:	f001 fbd7 	bl	90023a0c <CoreGroup_Add>
  ViewsText_OnSetFont( &_this->Text, EwLoadResource( &ApplicationFont, ResourcesFont ));
9002225e:	4909      	ldr	r1, [pc, #36]	; (90022284 <ApplicationApplication__Init+0xb4>)
90022260:	4809      	ldr	r0, [pc, #36]	; (90022288 <ApplicationApplication__Init+0xb8>)
90022262:	f7fc fd85 	bl	9001ed70 <EwLoadResource>
90022266:	4601      	mov	r1, r0
90022268:	4630      	mov	r0, r6
}
9002226a:	b003      	add	sp, #12
9002226c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  ViewsText_OnSetFont( &_this->Text, EwLoadResource( &ApplicationFont, ResourcesFont ));
90022270:	f003 b9c4 	b.w	900255fc <ViewsText_OnSetFont>
90022274:	900332b4 	.word	0x900332b4
90022278:	900332c4 	.word	0x900332c4
9002227c:	900332c8 	.word	0x900332c8
90022280:	900332d8 	.word	0x900332d8
90022284:	90033a00 	.word	0x90033a00
90022288:	900332a0 	.word	0x900332a0
9002228c:	90033310 	.word	0x90033310

90022290 <ApplicationApplication__ReInit>:

/* Re-Initializer for the class 'Application::Application' */
void ApplicationApplication__ReInit( ApplicationApplication _this )
{
90022290:	b510      	push	{r4, lr}
90022292:	4604      	mov	r4, r0
  /* At first re-initialize the super class ... */
  CoreRoot__ReInit( &_this->_.Super );
90022294:	f000 f8a0 	bl	900223d8 <CoreRoot__ReInit>

  /* ... then re-construct all embedded objects */
  ViewsRectangle__ReInit( &_this->Rectangle );
90022298:	f504 707a 	add.w	r0, r4, #1000	; 0x3e8
9002229c:	f003 f85e 	bl	9002535c <ViewsRectangle__ReInit>
  ViewsText__ReInit( &_this->Text );
900222a0:	f504 6084 	add.w	r0, r4, #1056	; 0x420
}
900222a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  ViewsText__ReInit( &_this->Text );
900222a8:	f003 b85a 	b.w	90025360 <ViewsText__ReInit>

900222ac <ApplicationApplication__Done>:

/* Finalizer method for the class 'Application::Application' */
void ApplicationApplication__Done( ApplicationApplication _this )
{
  /* Finalize this class */
  _this->_.Super._.VMT = EW_CLASS( CoreRoot );
900222ac:	4b08      	ldr	r3, [pc, #32]	; (900222d0 <ApplicationApplication__Done+0x24>)
{
900222ae:	b510      	push	{r4, lr}
900222b0:	4604      	mov	r4, r0
  _this->_.Super._.VMT = EW_CLASS( CoreRoot );
900222b2:	6003      	str	r3, [r0, #0]

  /* Finalize all embedded objects */
  ViewsRectangle__Done( &_this->Rectangle );
900222b4:	f500 707a 	add.w	r0, r0, #1000	; 0x3e8
900222b8:	f003 f854 	bl	90025364 <ViewsRectangle__Done>
  ViewsText__Done( &_this->Text );
900222bc:	f504 6084 	add.w	r0, r4, #1056	; 0x420
900222c0:	f003 f856 	bl	90025370 <ViewsText__Done>

  /* Don't forget to deinitialize the super class ... */
  CoreRoot__Done( &_this->_.Super );
900222c4:	4620      	mov	r0, r4
}
900222c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CoreRoot__Done( &_this->_.Super );
900222ca:	f000 bd1d 	b.w	90022d08 <CoreRoot__Done>
900222ce:	bf00      	nop
900222d0:	900337b4 	.word	0x900337b4

900222d4 <CoreView_Draw>:
   operation. If the view implements its own 'Blend' property, the Draw() method 
   should calculate the resulting real blend mode by using logical AND operation 
   of the value of the property and the one passed in aBlend parameter. */
void CoreView_Draw( CoreView _this, GraphicsCanvas aCanvas, XRect aClip, XPoint 
  aOffset, XInt32 aOpacity, XBool aBlend )
{
900222d4:	b082      	sub	sp, #8
900222d6:	e88d 000c 	stmia.w	sp, {r2, r3}
  EW_UNUSED_ARG( aBlend );
  EW_UNUSED_ARG( aOpacity );
  EW_UNUSED_ARG( aOffset );
  EW_UNUSED_ARG( aClip );
  EW_UNUSED_ARG( aCanvas );
}
900222da:	b002      	add	sp, #8
900222dc:	4770      	bx	lr
900222de:	bf00      	nop

900222e0 <CoreView_CursorHitTest>:
   need to invoke it directly. This method is predetermined for the hit-test only. 
   The proper processing of events should take place in the @HandleEvent() method 
   by reacting to Core::CursorEvent and Core::DragEvent events. */
CoreCursorHit CoreView_CursorHitTest( CoreView _this, XRect aArea, XInt32 aFinger, 
  XInt32 aStrikeCount, CoreView aDedicatedView, XSet aRetargetReason )
{
900222e0:	b084      	sub	sp, #16
  EW_UNUSED_ARG( aStrikeCount );
  EW_UNUSED_ARG( aFinger );
  EW_UNUSED_ARG( aArea );

  return 0;
}
900222e2:	2000      	movs	r0, #0
{
900222e4:	b410      	push	{r4}
900222e6:	ac02      	add	r4, sp, #8
900222e8:	e884 000e 	stmia.w	r4, {r1, r2, r3}
}
900222ec:	f85d 4b04 	ldr.w	r4, [sp], #4
900222f0:	b004      	add	sp, #16
900222f2:	4770      	bx	lr

900222f4 <CoreView_ArrangeView>:
   the view is moved and scaled only to fit inside the aBounds area.
   ArrangeView() is invoked automatically by the framework, so you never should 
   need to invoke it directly.
   The method returns the size of the view after it has been arranged. */
XPoint CoreView_ArrangeView( CoreView _this, XRect aBounds, XEnum aFormation )
{
900222f4:	b082      	sub	sp, #8
900222f6:	b410      	push	{r4}
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );
  EW_UNUSED_ARG( aFormation );
  EW_UNUSED_ARG( aBounds );

  return _Const0000;
900222f8:	2400      	movs	r4, #0
{
900222fa:	f10d 0c04 	add.w	ip, sp, #4
  return _Const0000;
900222fe:	e9c0 4400 	strd	r4, r4, [r0]
}
90022302:	f85d 4b04 	ldr.w	r4, [sp], #4
{
90022306:	e88c 000c 	stmia.w	ip, {r2, r3}
}
9002230a:	b002      	add	sp, #8
9002230c:	4770      	bx	lr
9002230e:	bf00      	nop

90022310 <CoreView_MoveView>:
   To do this you can use the method InvalidateArea() of the views @Owner.
   In the case aFastMove == false, the operation automatically requests the screen 
   redraw of the view areas before and after the movement. You don't need to take 
   care about it. */
void CoreView_MoveView( CoreView _this, XPoint aOffset, XBool aFastMove )
{
90022310:	b082      	sub	sp, #8
90022312:	ab02      	add	r3, sp, #8
90022314:	e903 0006 	stmdb	r3, {r1, r2}
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );
  EW_UNUSED_ARG( aFastMove );
  EW_UNUSED_ARG( aOffset );
}
90022318:	b002      	add	sp, #8
9002231a:	4770      	bx	lr

9002231c <CoreView_GetExtent>:
XRect CoreView_GetExtent( CoreView _this )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );

  return _Const0001;
9002231c:	2200      	movs	r2, #0
9002231e:	e9c0 2200 	strd	r2, r2, [r0]
90022322:	e9c0 2202 	strd	r2, r2, [r0, #8]
}
90022326:	4770      	bx	lr

90022328 <CoreRectView_GetExtent>:
/* The method GetExtent() returns the position and the size of the view relative 
   to the origin of its @Owner. In case of views with a non rectangular shape the 
   method returns the rectangular boundary area enclosing the entire shape. */
XRect CoreRectView_GetExtent( CoreRectView _this )
{
  return _this->Bounds;
90022328:	3124      	adds	r1, #36	; 0x24
{
9002232a:	b410      	push	{r4}
9002232c:	4604      	mov	r4, r0
  return _this->Bounds;
9002232e:	c90f      	ldmia	r1, {r0, r1, r2, r3}
90022330:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
90022334:	4620      	mov	r0, r4
90022336:	f85d 4b04 	ldr.w	r4, [sp], #4
9002233a:	4770      	bx	lr

9002233c <CoreView__Init>:
{
9002233c:	b510      	push	{r4, lr}
9002233e:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022340:	f7fb fd52 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreView );
90022344:	4b03      	ldr	r3, [pc, #12]	; (90022354 <CoreView__Init+0x18>)
  _this->viewState = CoreViewStateAlphaBlended | CoreViewStateFastReshape | CoreViewStateVisible;
90022346:	f240 1203 	movw	r2, #259	; 0x103
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreView );
9002234a:	60e3      	str	r3, [r4, #12]
  _this->viewState = CoreViewStateAlphaBlended | CoreViewStateFastReshape | CoreViewStateVisible;
9002234c:	6222      	str	r2, [r4, #32]
  _this->_.VMT = EW_CLASS( CoreView );
9002234e:	6023      	str	r3, [r4, #0]
}
90022350:	bd10      	pop	{r4, pc}
90022352:	bf00      	nop
90022354:	90033858 	.word	0x90033858

90022358 <CoreRectView__Init>:
{
90022358:	b510      	push	{r4, lr}
9002235a:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
9002235c:	f7fb fd44 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreRectView );
90022360:	4b03      	ldr	r3, [pc, #12]	; (90022370 <CoreRectView__Init+0x18>)
  _this->viewState = CoreViewStateAlphaBlended | CoreViewStateFastReshape | CoreViewStateVisible;
90022362:	f240 1203 	movw	r2, #259	; 0x103
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreRectView );
90022366:	60e3      	str	r3, [r4, #12]
  _this->viewState = CoreViewStateAlphaBlended | CoreViewStateFastReshape | CoreViewStateVisible;
90022368:	6222      	str	r2, [r4, #32]
  _this->_.VMT = EW_CLASS( CoreRectView );
9002236a:	6023      	str	r3, [r4, #0]
}
9002236c:	bd10      	pop	{r4, pc}
9002236e:	bf00      	nop
90022370:	90033720 	.word	0x90033720

90022374 <CoreOutline__Init>:
                 "Core::DragEvent" )
EW_END_OF_CLASS( CoreDragEvent )

/* Initializer for the class 'Core::Outline' */
void CoreOutline__Init( CoreOutline _this, XObject aLink, XHandle aArg )
{
90022374:	b510      	push	{r4, lr}
90022376:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022378:	f7fb fd36 	bl	9001dde8 <XObject__Init>
  /* At first initialize the super class ... */
  CoreRectView__Init( &_this->_.Super, aLink, aArg );

  /* Allow the Immediate Garbage Collection to evalute the members of this class. */
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreOutline );
9002237c:	4b03      	ldr	r3, [pc, #12]	; (9002238c <CoreOutline__Init+0x18>)

  /* Setup the VMT pointer */
  _this->_.VMT = EW_CLASS( CoreOutline );

  /* ... and initialize objects, variables, properties, etc. */
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateIsOutline | 
9002237e:	f240 2203 	movw	r2, #515	; 0x203
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreOutline );
90022382:	60e3      	str	r3, [r4, #12]
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateIsOutline | 
90022384:	6222      	str	r2, [r4, #32]
  _this->_.VMT = EW_CLASS( CoreOutline );
90022386:	6023      	str	r3, [r4, #0]
  CoreViewStateVisible;
}
90022388:	bd10      	pop	{r4, pc}
9002238a:	bf00      	nop
9002238c:	900336c8 	.word	0x900336c8

90022390 <CoreTimer__Init>:
  }


/* Initializer for the class 'Core::Timer' */
void CoreTimer__Init( CoreTimer _this, XObject aLink, XHandle aArg )
{
90022390:	b510      	push	{r4, lr}
90022392:	4604      	mov	r4, r0
  /* At first initialize the super class ... */
  XObject__Init( &_this->_.Super, aLink, aArg );
90022394:	f7fb fd28 	bl	9001dde8 <XObject__Init>

  /* Allow the Immediate Garbage Collection to evalute the members of this class. */
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreTimer );
90022398:	4b03      	ldr	r3, [pc, #12]	; (900223a8 <CoreTimer__Init+0x18>)

  /* Setup the VMT pointer */
  _this->_.VMT = EW_CLASS( CoreTimer );

  /* ... and initialize objects, variables, properties, etc. */
  _this->Period = 1000;
9002239a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreTimer );
9002239e:	60e3      	str	r3, [r4, #12]
  _this->Period = 1000;
900223a0:	6222      	str	r2, [r4, #32]
  _this->_.VMT = EW_CLASS( CoreTimer );
900223a2:	6023      	str	r3, [r4, #0]
}
900223a4:	bd10      	pop	{r4, pc}
900223a6:	bf00      	nop
900223a8:	9003381c 	.word	0x9003381c

900223ac <CoreView__ReInit>:
  XObject__ReInit( &_this->_.Super );
900223ac:	f7fb bd22 	b.w	9001ddf4 <XObject__ReInit>

900223b0 <CoreRectView__ReInit>:
900223b0:	f7fb bd20 	b.w	9001ddf4 <XObject__ReInit>

900223b4 <CoreGroup__ReInit>:
900223b4:	f7fb bd1e 	b.w	9001ddf4 <XObject__ReInit>

900223b8 <CoreOutline__ReInit>:
900223b8:	f7fb bd1c 	b.w	9001ddf4 <XObject__ReInit>

900223bc <CoreEvent__ReInit>:
  XObject__ReInit( &_this->_.Super );
900223bc:	f7fb bd1a 	b.w	9001ddf4 <XObject__ReInit>

900223c0 <CoreKeyEvent__ReInit>:
900223c0:	f7fb bd18 	b.w	9001ddf4 <XObject__ReInit>

900223c4 <CoreCursorGrabEvent__ReInit>:
900223c4:	f7fb bd16 	b.w	9001ddf4 <XObject__ReInit>

900223c8 <CoreCursorEvent__ReInit>:
900223c8:	f7fb bd14 	b.w	9001ddf4 <XObject__ReInit>

900223cc <CoreDragEvent__ReInit>:
900223cc:	f7fb bd12 	b.w	9001ddf4 <XObject__ReInit>

900223d0 <CoreResource__ReInit>:
  XObject__ReInit( &_this->_.Super );
900223d0:	f7fb bd10 	b.w	9001ddf4 <XObject__ReInit>

900223d4 <CoreTimer__ReInit>:

/* Re-Initializer for the class 'Core::Timer' */
void CoreTimer__ReInit( CoreTimer _this )
{
  /* At first re-initialize the super class ... */
  XObject__ReInit( &_this->_.Super );
900223d4:	f7fb bd0e 	b.w	9001ddf4 <XObject__ReInit>

900223d8 <CoreRoot__ReInit>:
{
900223d8:	b510      	push	{r4, lr}
900223da:	4604      	mov	r4, r0
  XObject__ReInit( &_this->_.Super );
900223dc:	f7fb fd0a 	bl	9001ddf4 <XObject__ReInit>
  XObject__ReInit( &_this->_.Super );
900223e0:	f104 0074 	add.w	r0, r4, #116	; 0x74
}
900223e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  XObject__ReInit( &_this->_.Super );
900223e8:	f7fb bd04 	b.w	9001ddf4 <XObject__ReInit>

900223ec <CoreView__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
900223ec:	4b01      	ldr	r3, [pc, #4]	; (900223f4 <CoreView__Done+0x8>)
900223ee:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
900223f0:	f7fb bd01 	b.w	9001ddf6 <XObject__Done>
900223f4:	90032fd0 	.word	0x90032fd0

900223f8 <CoreRectView__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
900223f8:	4b01      	ldr	r3, [pc, #4]	; (90022400 <CoreRectView__Done+0x8>)
900223fa:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
900223fc:	f7fb bcfb 	b.w	9001ddf6 <XObject__Done>
90022400:	90032fd0 	.word	0x90032fd0

90022404 <CoreGroup__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022404:	4b01      	ldr	r3, [pc, #4]	; (9002240c <CoreGroup__Done+0x8>)
90022406:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022408:	f7fb bcf5 	b.w	9001ddf6 <XObject__Done>
9002240c:	90032fd0 	.word	0x90032fd0

90022410 <CoreOutline__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022410:	4b01      	ldr	r3, [pc, #4]	; (90022418 <CoreOutline__Done+0x8>)
90022412:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022414:	f7fb bcef 	b.w	9001ddf6 <XObject__Done>
90022418:	90032fd0 	.word	0x90032fd0

9002241c <CoreEvent__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
9002241c:	4b01      	ldr	r3, [pc, #4]	; (90022424 <CoreEvent__Done+0x8>)
9002241e:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022420:	f7fb bce9 	b.w	9001ddf6 <XObject__Done>
90022424:	90032fd0 	.word	0x90032fd0

90022428 <CoreKeyEvent__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022428:	4b01      	ldr	r3, [pc, #4]	; (90022430 <CoreKeyEvent__Done+0x8>)
9002242a:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
9002242c:	f7fb bce3 	b.w	9001ddf6 <XObject__Done>
90022430:	90032fd0 	.word	0x90032fd0

90022434 <CoreCursorGrabEvent__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022434:	4b01      	ldr	r3, [pc, #4]	; (9002243c <CoreCursorGrabEvent__Done+0x8>)
90022436:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022438:	f7fb bcdd 	b.w	9001ddf6 <XObject__Done>
9002243c:	90032fd0 	.word	0x90032fd0

90022440 <CoreCursorEvent__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022440:	4b01      	ldr	r3, [pc, #4]	; (90022448 <CoreCursorEvent__Done+0x8>)
90022442:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022444:	f7fb bcd7 	b.w	9001ddf6 <XObject__Done>
90022448:	90032fd0 	.word	0x90032fd0

9002244c <CoreDragEvent__Done>:
  _this->_.Super._.VMT = EW_CLASS( XObject );
9002244c:	4b01      	ldr	r3, [pc, #4]	; (90022454 <CoreDragEvent__Done+0x8>)
9002244e:	6003      	str	r3, [r0, #0]
  XObject__Done( &_this->_.Super );
90022450:	f7fb bcd1 	b.w	9001ddf6 <XObject__Done>
90022454:	90032fd0 	.word	0x90032fd0

90022458 <CoreRectView_ArrangeView>:
{
90022458:	b082      	sub	sp, #8
9002245a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002245e:	b093      	sub	sp, #76	; 0x4c
90022460:	460d      	mov	r5, r1
90022462:	4681      	mov	r9, r0
90022464:	4617      	mov	r7, r2
90022466:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
  XPoint dstSize = EwGetRectSize( aBounds );
90022468:	a808      	add	r0, sp, #32
{
9002246a:	9c20      	ldr	r4, [sp, #128]	; 0x80
  XPoint dstSize = EwGetRectSize( aBounds );
9002246c:	9600      	str	r6, [sp, #0]
  CoreLayoutContext context = _this->Super1.layoutContext;
9002246e:	69c9      	ldr	r1, [r1, #28]
90022470:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
90022474:	9103      	str	r1, [sp, #12]
{
90022476:	a91c      	add	r1, sp, #112	; 0x70
90022478:	e881 000c 	stmia.w	r1, {r2, r3}
  XPoint dstSize = EwGetRectSize( aBounds );
9002247c:	c90e      	ldmia	r1, {r1, r2, r3}
9002247e:	f8dd 8074 	ldr.w	r8, [sp, #116]	; 0x74
90022482:	f7fc fa90 	bl	9001e9a6 <EwGetRectSize>
  if ( aFormation == CoreFormationNone )
90022486:	2c00      	cmp	r4, #0
90022488:	d129      	bne.n	900224de <CoreRectView_ArrangeView+0x86>
    if ( 0 != dstSize.X )
9002248a:	9b08      	ldr	r3, [sp, #32]
9002248c:	2b00      	cmp	r3, #0
9002248e:	d05c      	beq.n	9002254a <CoreRectView_ArrangeView+0xf2>
    if ( 0 != dstSize.Y )
90022490:	9a09      	ldr	r2, [sp, #36]	; 0x24
      x2 = x1;
90022492:	46ba      	mov	sl, r7
    if ( 0 != dstSize.Y )
90022494:	2301      	movs	r3, #1
90022496:	2a00      	cmp	r2, #0
90022498:	d160      	bne.n	9002255c <CoreRectView_ArrangeView+0x104>
      y2 = aBounds.Point2.Y;
9002249a:	45b0      	cmp	r8, r6
9002249c:	bfa8      	it	ge
9002249e:	f043 0301 	orrge.w	r3, r3, #1
  context->isEmpty = (XBool)(( x1 >= x2 ) || ( y1 >= y2 ));
900224a2:	9a03      	ldr	r2, [sp, #12]
900224a4:	eba6 0b08 	sub.w	fp, r6, r8
900224a8:	7413      	strb	r3, [r2, #16]
  if ((( _this->Super1.viewState & CoreViewStateFastReshape ) == CoreViewStateFastReshape ))
900224aa:	6a2b      	ldr	r3, [r5, #32]
900224ac:	05db      	lsls	r3, r3, #23
900224ae:	d428      	bmi.n	90022502 <CoreRectView_ArrangeView+0xaa>
    CoreRectView__OnSetBounds( _this, EwNewRect( x1, y1, x2, y2 ));
900224b0:	4639      	mov	r1, r7
900224b2:	a80a      	add	r0, sp, #40	; 0x28
900224b4:	4653      	mov	r3, sl
900224b6:	4642      	mov	r2, r8
900224b8:	9600      	str	r6, [sp, #0]
900224ba:	ae0e      	add	r6, sp, #56	; 0x38
900224bc:	f7fc f8de 	bl	9001e67c <EwNewRect>
900224c0:	a80a      	add	r0, sp, #40	; 0x28
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900224c2:	682f      	ldr	r7, [r5, #0]
900224c4:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900224c6:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
900224ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
900224cc:	4628      	mov	r0, r5
900224ce:	9300      	str	r3, [sp, #0]
900224d0:	6d3f      	ldr	r7, [r7, #80]	; 0x50
900224d2:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
900224d6:	47b8      	blx	r7
    _this->Super1.layoutContext = context;
900224d8:	9b03      	ldr	r3, [sp, #12]
900224da:	61eb      	str	r3, [r5, #28]
900224dc:	e01d      	b.n	9002251a <CoreRectView_ArrangeView+0xc2>
    switch ( aFormation )
900224de:	3c01      	subs	r4, #1
900224e0:	2c03      	cmp	r4, #3
900224e2:	d840      	bhi.n	90022566 <CoreRectView_ArrangeView+0x10e>
900224e4:	e8df f004 	tbb	[pc, r4]
900224e8:	28022524 	.word	0x28022524
  if ( aFormation == CoreFormationNone )
900224ec:	f04f 0b00 	mov.w	fp, #0
900224f0:	4646      	mov	r6, r8
900224f2:	46ba      	mov	sl, r7
900224f4:	2301      	movs	r3, #1
900224f6:	465c      	mov	r4, fp
  context->isEmpty = (XBool)(( x1 >= x2 ) || ( y1 >= y2 ));
900224f8:	9a03      	ldr	r2, [sp, #12]
900224fa:	7413      	strb	r3, [r2, #16]
  if ((( _this->Super1.viewState & CoreViewStateFastReshape ) == CoreViewStateFastReshape ))
900224fc:	6a2b      	ldr	r3, [r5, #32]
900224fe:	05db      	lsls	r3, r3, #23
90022500:	d5d6      	bpl.n	900224b0 <CoreRectView_ArrangeView+0x58>
    _this->Bounds = EwNewRect( x1, y1, x2, y2 );
90022502:	a804      	add	r0, sp, #16
90022504:	4653      	mov	r3, sl
90022506:	4642      	mov	r2, r8
90022508:	4639      	mov	r1, r7
9002250a:	9600      	str	r6, [sp, #0]
9002250c:	3524      	adds	r5, #36	; 0x24
9002250e:	f7fc f8b5 	bl	9001e67c <EwNewRect>
90022512:	a804      	add	r0, sp, #16
90022514:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90022516:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  return EwNewPoint( x2 - x1, y2 - y1 );
9002251a:	4648      	mov	r0, r9
9002251c:	465a      	mov	r2, fp
9002251e:	4621      	mov	r1, r4
90022520:	f7fc f836 	bl	9001e590 <EwNewPoint>
}
90022524:	4648      	mov	r0, r9
90022526:	b013      	add	sp, #76	; 0x4c
90022528:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002252c:	b002      	add	sp, #8
9002252e:	4770      	bx	lr
        y1 = aBounds.Point1.Y;
90022530:	4646      	mov	r6, r8
    if (( aFormation == CoreFormationLeftToRight ) || ( aFormation == CoreFormationRightToLeft ))
90022532:	46b0      	mov	r8, r6
90022534:	f04f 0a00 	mov.w	sl, #0
    if (( aFormation == CoreFormationTopToBottom ) || ( aFormation == CoreFormationBottomToTop ))
90022538:	2c01      	cmp	r4, #1
9002253a:	f04f 0b00 	mov.w	fp, #0
9002253e:	4646      	mov	r6, r8
90022540:	d9d7      	bls.n	900224f2 <CoreRectView_ArrangeView+0x9a>
90022542:	4657      	mov	r7, sl
90022544:	2301      	movs	r3, #1
90022546:	465c      	mov	r4, fp
90022548:	e7d6      	b.n	900224f8 <CoreRectView_ArrangeView+0xa0>
      x2 = aBounds.Point2.X;
9002254a:	4557      	cmp	r7, sl
    if ( 0 != dstSize.Y )
9002254c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002254e:	ebaa 0407 	sub.w	r4, sl, r7
90022552:	bfb4      	ite	lt
90022554:	2300      	movlt	r3, #0
90022556:	2301      	movge	r3, #1
90022558:	2a00      	cmp	r2, #0
9002255a:	d09e      	beq.n	9002249a <CoreRectView_ArrangeView+0x42>
      y2 = y1;
9002255c:	4646      	mov	r6, r8
9002255e:	f04f 0b00 	mov.w	fp, #0
90022562:	2301      	movs	r3, #1
90022564:	e7c8      	b.n	900224f8 <CoreRectView_ArrangeView+0xa0>
  if ( aFormation == CoreFormationNone )
90022566:	f04f 0a00 	mov.w	sl, #0
9002256a:	46d0      	mov	r8, sl
9002256c:	e7e4      	b.n	90022538 <CoreRectView_ArrangeView+0xe0>
9002256e:	bf00      	nop

90022570 <CoreRectView_MoveView>:
{
90022570:	b5f0      	push	{r4, r5, r6, r7, lr}
90022572:	b093      	sub	sp, #76	; 0x4c
90022574:	4604      	mov	r4, r0
90022576:	ad08      	add	r5, sp, #32
90022578:	e885 0006 	stmia.w	r5, {r1, r2}
  if ( aFastMove )
9002257c:	b19b      	cbz	r3, 900225a6 <CoreRectView_MoveView+0x36>
    _this->Bounds = EwMoveRectPos( _this->Bounds, aOffset );
9002257e:	6b07      	ldr	r7, [r0, #48]	; 0x30
90022580:	ab01      	add	r3, sp, #4
90022582:	ae04      	add	r6, sp, #16
90022584:	3424      	adds	r4, #36	; 0x24
90022586:	e895 0003 	ldmia.w	r5, {r0, r1}
9002258a:	e883 0005 	stmia.w	r3, {r0, r2}
9002258e:	4630      	mov	r0, r6
90022590:	9700      	str	r7, [sp, #0]
90022592:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90022596:	f7fc f9d2 	bl	9001e93e <EwMoveRectPos>
9002259a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9002259e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
900225a2:	b013      	add	sp, #76	; 0x4c
900225a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    CoreRectView__OnSetBounds( _this, EwMoveRectPos( _this->Bounds, aOffset ));
900225a6:	e895 0003 	ldmia.w	r5, {r0, r1}
900225aa:	ae0a      	add	r6, sp, #40	; 0x28
900225ac:	6b25      	ldr	r5, [r4, #48]	; 0x30
900225ae:	a901      	add	r1, sp, #4
900225b0:	f104 0324 	add.w	r3, r4, #36	; 0x24
900225b4:	e881 0005 	stmia.w	r1, {r0, r2}
900225b8:	9500      	str	r5, [sp, #0]
900225ba:	4630      	mov	r0, r6
900225bc:	ad0e      	add	r5, sp, #56	; 0x38
900225be:	cb0e      	ldmia	r3, {r1, r2, r3}
900225c0:	f7fc f9bd 	bl	9001e93e <EwMoveRectPos>
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900225c4:	6827      	ldr	r7, [r4, #0]
900225c6:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900225ca:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
900225ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
900225d0:	4620      	mov	r0, r4
900225d2:	9300      	str	r3, [sp, #0]
900225d4:	6d3c      	ldr	r4, [r7, #80]	; 0x50
900225d6:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
900225da:	47a0      	blx	r4
}
900225dc:	b013      	add	sp, #76	; 0x4c
900225de:	bdf0      	pop	{r4, r5, r6, r7, pc}

900225e0 <CoreRectView_OnSetBounds>:
{
900225e0:	b084      	sub	sp, #16
900225e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900225e6:	b088      	sub	sp, #32
  if ( !EwCompRect( value, _this->Bounds ))
900225e8:	f100 0524 	add.w	r5, r0, #36	; 0x24
{
900225ec:	4606      	mov	r6, r0
900225ee:	ac0f      	add	r4, sp, #60	; 0x3c
900225f0:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  if ( !EwCompRect( value, _this->Bounds ))
900225f4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
900225f8:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
900225fc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022600:	f7fc f85b 	bl	9001e6ba <EwCompRect>
90022604:	2800      	cmp	r0, #0
90022606:	d03f      	beq.n	90022688 <CoreRectView_OnSetBounds+0xa8>
  if (( _this->Super1.Owner != 0 ) && (( _this->Super1.viewState & CoreViewStateVisible ) 
90022608:	f8d6 c018 	ldr.w	ip, [r6, #24]
9002260c:	f1bc 0f00 	cmp.w	ip, #0
90022610:	d046      	beq.n	900226a0 <CoreRectView_OnSetBounds+0xc0>
90022612:	6a37      	ldr	r7, [r6, #32]
90022614:	f017 0e01 	ands.w	lr, r7, #1
90022618:	d03b      	beq.n	90022692 <CoreRectView_OnSetBounds+0xb2>
    CoreGroup__InvalidateArea( _this->Super1.Owner, _this->Bounds );
9002261a:	af04      	add	r7, sp, #16
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
9002261c:	f8dc e000 	ldr.w	lr, [ip]
90022620:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90022624:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90022628:	9b07      	ldr	r3, [sp, #28]
9002262a:	4660      	mov	r0, ip
9002262c:	9300      	str	r3, [sp, #0]
9002262e:	f8de 8060 	ldr.w	r8, [lr, #96]	; 0x60
90022632:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
90022636:	47c0      	blx	r8
  _this->Super1.layoutContext = 0;
90022638:	2300      	movs	r3, #0
9002263a:	f8d6 c018 	ldr.w	ip, [r6, #24]
9002263e:	61f3      	str	r3, [r6, #28]
  _this->Bounds = value;
90022640:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022644:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  if (( _this->Super1.Owner != 0 ) && (( _this->Super1.viewState & CoreViewStateVisible ) 
90022648:	f1bc 0f00 	cmp.w	ip, #0
9002264c:	d01c      	beq.n	90022688 <CoreRectView_OnSetBounds+0xa8>
9002264e:	6a37      	ldr	r7, [r6, #32]
90022650:	07f9      	lsls	r1, r7, #31
90022652:	d513      	bpl.n	9002267c <CoreRectView_OnSetBounds+0x9c>
    CoreGroup__InvalidateArea( _this->Super1.Owner, _this->Bounds );
90022654:	ac04      	add	r4, sp, #16
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022656:	f8dc 7000 	ldr.w	r7, [ip]
9002265a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9002265e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90022662:	9b07      	ldr	r3, [sp, #28]
90022664:	4660      	mov	r0, ip
90022666:	9300      	str	r3, [sp, #0]
90022668:	6e3d      	ldr	r5, [r7, #96]	; 0x60
9002266a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
9002266e:	47a8      	blx	r5
  if ((( _this->Super1.Owner != 0 ) && (( _this->Super1.viewState & CoreViewStateEmbedded ) 
90022670:	f8d6 c018 	ldr.w	ip, [r6, #24]
90022674:	f1bc 0f00 	cmp.w	ip, #0
90022678:	d006      	beq.n	90022688 <CoreRectView_OnSetBounds+0xa8>
9002267a:	6a37      	ldr	r7, [r6, #32]
9002267c:	057a      	lsls	r2, r7, #21
9002267e:	d503      	bpl.n	90022688 <CoreRectView_OnSetBounds+0xa8>
      == CoreViewStateEmbedded )) && !(( _this->Super1.Owner->Super2.viewState & 
90022680:	f8dc 3020 	ldr.w	r3, [ip, #32]
90022684:	049b      	lsls	r3, r3, #18
90022686:	d516      	bpl.n	900226b6 <CoreRectView_OnSetBounds+0xd6>
}
90022688:	b008      	add	sp, #32
9002268a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002268e:	b004      	add	sp, #16
90022690:	4770      	bx	lr
  _this->Bounds = value;
90022692:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
  _this->Super1.layoutContext = 0;
90022696:	f8c6 e01c 	str.w	lr, [r6, #28]
  _this->Bounds = value;
9002269a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  if (( _this->Super1.Owner != 0 ) && (( _this->Super1.viewState & CoreViewStateVisible ) 
9002269e:	e7d7      	b.n	90022650 <CoreRectView_OnSetBounds+0x70>
  _this->Bounds = value;
900226a0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
  _this->Super1.layoutContext = 0;
900226a4:	f8c6 c01c 	str.w	ip, [r6, #28]
  _this->Bounds = value;
900226a8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
900226ac:	b008      	add	sp, #32
900226ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900226b2:	b004      	add	sp, #16
900226b4:	4770      	bx	lr
    _this->Super1.viewState = _this->Super1.viewState | CoreViewStateRequestLayout;
900226b6:	f447 6700 	orr.w	r7, r7, #2048	; 0x800
    EwPostSignal( EwNewSlot( _this->Super1.Owner, CoreGroup_updateComponent ), ((XObject)_this ));
900226ba:	ac04      	add	r4, sp, #16
900226bc:	4661      	mov	r1, ip
900226be:	4a0a      	ldr	r2, [pc, #40]	; (900226e8 <CoreRectView_OnSetBounds+0x108>)
    _this->Super1.viewState = _this->Super1.viewState | CoreViewStateRequestLayout;
900226c0:	6237      	str	r7, [r6, #32]
    EwPostSignal( EwNewSlot( _this->Super1.Owner, CoreGroup_updateComponent ), ((XObject)_this ));
900226c2:	4620      	mov	r0, r4
    | CoreViewStatePendingLayout;
900226c4:	f8dc 3020 	ldr.w	r3, [ip, #32]
900226c8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
    _this->Super1.Owner->Super2.viewState = _this->Super1.Owner->Super2.viewState 
900226cc:	f8cc 3020 	str.w	r3, [ip, #32]
    EwPostSignal( EwNewSlot( _this->Super1.Owner, CoreGroup_updateComponent ), ((XObject)_this ));
900226d0:	f7fd f956 	bl	9001f980 <EwNewSlot>
900226d4:	4632      	mov	r2, r6
900226d6:	e894 0003 	ldmia.w	r4, {r0, r1}
}
900226da:	b008      	add	sp, #32
900226dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900226e0:	b004      	add	sp, #16
    EwPostSignal( EwNewSlot( _this->Super1.Owner, CoreGroup_updateComponent ), ((XObject)_this ));
900226e2:	f7fd b97b 	b.w	9001f9dc <EwPostSignal>
900226e6:	bf00      	nop
900226e8:	9002396d 	.word	0x9002396d

900226ec <CoreGroup_InvalidateArea>:
{
900226ec:	b084      	sub	sp, #16
900226ee:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900226f2:	b08e      	sub	sp, #56	; 0x38
900226f4:	ac17      	add	r4, sp, #92	; 0x5c
900226f6:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  while (( grp != 0 ) && !EwIsRectEmpty( aArea ))
900226fa:	b368      	cbz	r0, 90022758 <CoreGroup_InvalidateArea+0x6c>
900226fc:	4682      	mov	sl, r0
900226fe:	4606      	mov	r6, r0
    aArea = EwIntersectRect( EwMoveRectPos( aArea, grp->Super1.Bounds.Point1 ), 
90022700:	f10d 0918 	add.w	r9, sp, #24
90022704:	f10d 0804 	add.w	r8, sp, #4
90022708:	e01e      	b.n	90022748 <CoreGroup_InvalidateArea+0x5c>
    if (( grp->Super2.Owner == 0 ) && ( grp != _this ))
9002270a:	69b3      	ldr	r3, [r6, #24]
9002270c:	b90b      	cbnz	r3, 90022712 <CoreGroup_InvalidateArea+0x26>
9002270e:	45b2      	cmp	sl, r6
90022710:	d127      	bne.n	90022762 <CoreGroup_InvalidateArea+0x76>
    if ( !(( grp->Super2.viewState & CoreViewStateVisible ) == CoreViewStateVisible ))
90022712:	6a33      	ldr	r3, [r6, #32]
90022714:	07db      	lsls	r3, r3, #31
90022716:	d51f      	bpl.n	90022758 <CoreGroup_InvalidateArea+0x6c>
    aArea = EwIntersectRect( EwMoveRectPos( aArea, grp->Super1.Bounds.Point1 ), 
90022718:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9002271a:	e895 0003 	ldmia.w	r5, {r0, r1}
9002271e:	e888 0003 	stmia.w	r8, {r0, r1}
90022722:	4648      	mov	r0, r9
90022724:	9300      	str	r3, [sp, #0]
90022726:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
9002272a:	f7fc f908 	bl	9001e93e <EwMoveRectPos>
9002272e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90022730:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90022734:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
90022738:	9700      	str	r7, [sp, #0]
9002273a:	4620      	mov	r0, r4
9002273c:	e899 000e 	ldmia.w	r9, {r1, r2, r3}
90022740:	f7fc f820 	bl	9001e784 <EwIntersectRect>
    grp = grp->Super2.Owner;
90022744:	69b6      	ldr	r6, [r6, #24]
  while (( grp != 0 ) && !EwIsRectEmpty( aArea ))
90022746:	b13e      	cbz	r6, 90022758 <CoreGroup_InvalidateArea+0x6c>
    aArea = EwIntersectRect( EwMoveRectPos( aArea, grp->Super1.Bounds.Point1 ), 
90022748:	f106 0524 	add.w	r5, r6, #36	; 0x24
  while (( grp != 0 ) && !EwIsRectEmpty( aArea ))
9002274c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022750:	f7fb fff2 	bl	9001e738 <EwIsRectEmpty>
90022754:	2800      	cmp	r0, #0
90022756:	d0d8      	beq.n	9002270a <CoreGroup_InvalidateArea+0x1e>
}
90022758:	b00e      	add	sp, #56	; 0x38
9002275a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002275e:	b004      	add	sp, #16
90022760:	4770      	bx	lr
      CoreGroup__InvalidateArea( grp, aArea );
90022762:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022766:	ad0a      	add	r5, sp, #40	; 0x28
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022768:	6837      	ldr	r7, [r6, #0]
9002276a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9002276e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022770:	4630      	mov	r0, r6
90022772:	931a      	str	r3, [sp, #104]	; 0x68
90022774:	6e3c      	ldr	r4, [r7, #96]	; 0x60
90022776:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9002277a:	46a4      	mov	ip, r4
}
9002277c:	b00e      	add	sp, #56	; 0x38
9002277e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022782:	b004      	add	sp, #16
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022784:	4760      	bx	ip
90022786:	bf00      	nop

90022788 <CoreGroup_CursorHitTest>:
{
90022788:	b084      	sub	sp, #16
9002278a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002278e:	b0a5      	sub	sp, #148	; 0x94
90022790:	4604      	mov	r4, r0
  if ( EwIsRectEmpty( EwIntersectRect( aArea, _this->Super1.Bounds )))
90022792:	f100 0624 	add.w	r6, r0, #36	; 0x24
  XRect area = _Const0001;
90022796:	2000      	movs	r0, #0
{
90022798:	f10d 0bbc 	add.w	fp, sp, #188	; 0xbc
  XRect area = _Const0001;
9002279c:	af08      	add	r7, sp, #32
  if ( EwIsRectEmpty( EwIntersectRect( aArea, _this->Super1.Bounds )))
9002279e:	9d32      	ldr	r5, [sp, #200]	; 0xc8
900227a0:	f10d 0840 	add.w	r8, sp, #64	; 0x40
  XRect area = _Const0001;
900227a4:	6078      	str	r0, [r7, #4]
  if ( EwIsRectEmpty( EwIntersectRect( aArea, _this->Super1.Bounds )))
900227a6:	f10d 0a04 	add.w	sl, sp, #4
  XRect area = _Const0001;
900227aa:	9008      	str	r0, [sp, #32]
  CoreView view = _this->last;
900227ac:	6ba4      	ldr	r4, [r4, #56]	; 0x38
{
900227ae:	e88b 000e 	stmia.w	fp, {r1, r2, r3}
  XRect area = _Const0001;
900227b2:	e9c7 0002 	strd	r0, r0, [r7, #8]
  if ( EwIsRectEmpty( EwIntersectRect( aArea, _this->Super1.Bounds )))
900227b6:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900227ba:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
900227be:	4640      	mov	r0, r8
900227c0:	e89b 000e 	ldmia.w	fp, {r1, r2, r3}
900227c4:	9500      	str	r5, [sp, #0]
900227c6:	f7fb ffdd 	bl	9001e784 <EwIntersectRect>
900227ca:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900227ce:	f7fb ffb3 	bl	9001e738 <EwIsRectEmpty>
900227d2:	2800      	cmp	r0, #0
900227d4:	d157      	bne.n	90022886 <CoreGroup_CursorHitTest+0xfe>
  aArea = EwMoveRectNeg( aArea, _this->Super1.Bounds.Point1 );
900227d6:	9b32      	ldr	r3, [sp, #200]	; 0xc8
900227d8:	4605      	mov	r5, r0
900227da:	e896 0003 	ldmia.w	r6, {r0, r1}
900227de:	e88a 0003 	stmia.w	sl, {r0, r1}
900227e2:	9300      	str	r3, [sp, #0]
900227e4:	4658      	mov	r0, fp
900227e6:	e89b 000e 	ldmia.w	fp, {r1, r2, r3}
900227ea:	f7fc f892 	bl	9001e912 <EwMoveRectNeg>
  while ( view != 0 )
900227ee:	2c00      	cmp	r4, #0
900227f0:	d049      	beq.n	90022886 <CoreGroup_CursorHitTest+0xfe>
        && !(( view->viewState & CoreViewStatePendingFader ) == CoreViewStatePendingFader )) 
900227f2:	f8df 9180 	ldr.w	r9, [pc, #384]	; 90022974 <CoreGroup_CursorHitTest+0x1ec>
      area = _Const0001;
900227f6:	46a8      	mov	r8, r5
900227f8:	f8cd a018 	str.w	sl, [sp, #24]
900227fc:	e002      	b.n	90022804 <CoreGroup_CursorHitTest+0x7c>
      view = view->prev;
900227fe:	6964      	ldr	r4, [r4, #20]
  while ( view != 0 )
90022800:	2c00      	cmp	r4, #0
90022802:	d040      	beq.n	90022886 <CoreGroup_CursorHitTest+0xfe>
    if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ) 
90022804:	6a26      	ldr	r6, [r4, #32]
        && ( form == 0 ))
90022806:	0571      	lsls	r1, r6, #21
90022808:	d501      	bpl.n	9002280e <CoreGroup_CursorHitTest+0x86>
9002280a:	2d00      	cmp	r5, #0
9002280c:	d072      	beq.n	900228f4 <CoreGroup_CursorHitTest+0x16c>
    if ( form == view )
9002280e:	42a5      	cmp	r5, r4
90022810:	d033      	beq.n	9002287a <CoreGroup_CursorHitTest+0xf2>
        && !(( view->viewState & CoreViewStatePendingFader ) == CoreViewStatePendingFader )) 
90022812:	ea06 0209 	and.w	r2, r6, r9
    if (((((( view->viewState & CoreViewStateTouchable ) == CoreViewStateTouchable ) 
90022816:	2a18      	cmp	r2, #24
90022818:	d1f1      	bne.n	900227fe <CoreGroup_CursorHitTest+0x76>
        && ( !(( view->viewState & CoreViewStateDialog ) == CoreViewStateDialog ) 
9002281a:	f416 3680 	ands.w	r6, r6, #65536	; 0x10000
9002281e:	d1ee      	bne.n	900227fe <CoreGroup_CursorHitTest+0x76>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90022820:	6823      	ldr	r3, [r4, #0]
90022822:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
90022826:	4621      	mov	r1, r4
90022828:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9002282a:	4650      	mov	r0, sl
9002282c:	4798      	blx	r3
      if ( dedicatedView == view )
9002282e:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90022830:	42a3      	cmp	r3, r4
90022832:	d07d      	beq.n	90022930 <CoreGroup_CursorHitTest+0x1a8>
      if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022834:	6a23      	ldr	r3, [r4, #32]
90022836:	055b      	lsls	r3, r3, #21
90022838:	d42b      	bmi.n	90022892 <CoreGroup_CursorHitTest+0x10a>
        if ( !EwIsRectEmpty( EwIntersectRect( extent, aArea )) || ( aDedicatedView 
9002283a:	9e06      	ldr	r6, [sp, #24]
9002283c:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
90022840:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90022844:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022846:	a81c      	add	r0, sp, #112	; 0x70
90022848:	9300      	str	r3, [sp, #0]
9002284a:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
9002284e:	f7fb ff99 	bl	9001e784 <EwIntersectRect>
90022852:	ab1c      	add	r3, sp, #112	; 0x70
90022854:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90022856:	f7fb ff6f 	bl	9001e738 <EwIsRectEmpty>
9002285a:	2800      	cmp	r0, #0
9002285c:	d1cf      	bne.n	900227fe <CoreGroup_CursorHitTest+0x76>
9002285e:	9b35      	ldr	r3, [sp, #212]	; 0xd4
  return ((CoreView)_this)->_.VMT->CursorHitTest((CoreView)_this, aArea, aFinger
90022860:	9a36      	ldr	r2, [sp, #216]	; 0xd8
90022862:	f10d 0c80 	add.w	ip, sp, #128	; 0x80
90022866:	6826      	ldr	r6, [r4, #0]
90022868:	e9cd 3203 	strd	r3, r2, [sp, #12]
9002286c:	9b34      	ldr	r3, [sp, #208]	; 0xd0
9002286e:	9302      	str	r3, [sp, #8]
90022870:	9b33      	ldr	r3, [sp, #204]	; 0xcc
90022872:	9301      	str	r3, [sp, #4]
90022874:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
90022878:	e02c      	b.n	900228d4 <CoreGroup_CursorHitTest+0x14c>
      form = 0;
9002287a:	2500      	movs	r5, #0
      area = _Const0001;
9002287c:	e9c7 8800 	strd	r8, r8, [r7]
90022880:	e9c7 8802 	strd	r8, r8, [r7, #8]
90022884:	e7c5      	b.n	90022812 <CoreGroup_CursorHitTest+0x8a>
    return 0;
90022886:	2000      	movs	r0, #0
}
90022888:	b025      	add	sp, #148	; 0x94
9002288a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002288e:	b004      	add	sp, #16
90022890:	4770      	bx	lr
90022892:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90022894:	9307      	str	r3, [sp, #28]
        if ( !EwIsRectEmpty( EwIntersectRect( extent, area )))
90022896:	9e06      	ldr	r6, [sp, #24]
90022898:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9002289c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
900228a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900228a2:	a818      	add	r0, sp, #96	; 0x60
900228a4:	9300      	str	r3, [sp, #0]
900228a6:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
900228aa:	f7fb ff6b 	bl	9001e784 <EwIntersectRect>
900228ae:	ab18      	add	r3, sp, #96	; 0x60
900228b0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900228b2:	f7fb ff41 	bl	9001e738 <EwIsRectEmpty>
900228b6:	2800      	cmp	r0, #0
900228b8:	d1a1      	bne.n	900227fe <CoreGroup_CursorHitTest+0x76>
  return ((CoreView)_this)->_.VMT->CursorHitTest((CoreView)_this, aArea, aFinger
900228ba:	9b36      	ldr	r3, [sp, #216]	; 0xd8
900228bc:	f10d 0c80 	add.w	ip, sp, #128	; 0x80
900228c0:	6826      	ldr	r6, [r4, #0]
900228c2:	9304      	str	r3, [sp, #16]
900228c4:	9b07      	ldr	r3, [sp, #28]
900228c6:	9303      	str	r3, [sp, #12]
900228c8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
900228ca:	9302      	str	r3, [sp, #8]
900228cc:	9b33      	ldr	r3, [sp, #204]	; 0xcc
900228ce:	9301      	str	r3, [sp, #4]
900228d0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
900228d4:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
900228d8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900228da:	4620      	mov	r0, r4
900228dc:	9300      	str	r3, [sp, #0]
900228de:	6bf6      	ldr	r6, [r6, #60]	; 0x3c
900228e0:	e89c 000e 	ldmia.w	ip, {r1, r2, r3}
900228e4:	47b0      	blx	r6
      if ( cursorHit != 0 )
900228e6:	2800      	cmp	r0, #0
900228e8:	d089      	beq.n	900227fe <CoreGroup_CursorHitTest+0x76>
}
900228ea:	b025      	add	sp, #148	; 0x94
900228ec:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900228f0:	b004      	add	sp, #16
900228f2:	4770      	bx	lr
      form = view->prev;
900228f4:	6965      	ldr	r5, [r4, #20]
      while (( form != 0 ) && !(( form->viewState & CoreViewStateIsOutline ) == 
900228f6:	b91d      	cbnz	r5, 90022900 <CoreGroup_CursorHitTest+0x178>
900228f8:	e034      	b.n	90022964 <CoreGroup_CursorHitTest+0x1dc>
        form = form->prev;
900228fa:	696d      	ldr	r5, [r5, #20]
      while (( form != 0 ) && !(( form->viewState & CoreViewStateIsOutline ) == 
900228fc:	2d00      	cmp	r5, #0
900228fe:	d031      	beq.n	90022964 <CoreGroup_CursorHitTest+0x1dc>
90022900:	6a2b      	ldr	r3, [r5, #32]
90022902:	059a      	lsls	r2, r3, #22
90022904:	d5f9      	bpl.n	900228fa <CoreGroup_CursorHitTest+0x172>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90022906:	682b      	ldr	r3, [r5, #0]
90022908:	4629      	mov	r1, r5
9002290a:	a814      	add	r0, sp, #80	; 0x50
9002290c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9002290e:	4798      	blx	r3
        area = EwIntersectRect( aArea, CoreView__GetExtent( form ));
90022910:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90022912:	9e06      	ldr	r6, [sp, #24]
90022914:	9307      	str	r3, [sp, #28]
90022916:	ab14      	add	r3, sp, #80	; 0x50
90022918:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9002291a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9002291e:	9b07      	ldr	r3, [sp, #28]
90022920:	4638      	mov	r0, r7
90022922:	9300      	str	r3, [sp, #0]
90022924:	e89b 000e 	ldmia.w	fp, {r1, r2, r3}
90022928:	f7fb ff2c 	bl	9001e784 <EwIntersectRect>
9002292c:	6a26      	ldr	r6, [r4, #32]
9002292e:	e76e      	b.n	9002280e <CoreGroup_CursorHitTest+0x86>
      if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022930:	9b35      	ldr	r3, [sp, #212]	; 0xd4
90022932:	6a1b      	ldr	r3, [r3, #32]
90022934:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
90022938:	9307      	str	r3, [sp, #28]
9002293a:	d001      	beq.n	90022940 <CoreGroup_CursorHitTest+0x1b8>
        dedicatedView = 0;
9002293c:	9607      	str	r6, [sp, #28]
9002293e:	e7aa      	b.n	90022896 <CoreGroup_CursorHitTest+0x10e>
        if ( !EwIsRectEmpty( EwIntersectRect( extent, aArea )) || ( aDedicatedView 
90022940:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
90022944:	9e06      	ldr	r6, [sp, #24]
90022946:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
9002294a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002294c:	a81c      	add	r0, sp, #112	; 0x70
9002294e:	9300      	str	r3, [sp, #0]
90022950:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
90022954:	f7fb ff16 	bl	9001e784 <EwIntersectRect>
90022958:	ab1c      	add	r3, sp, #112	; 0x70
9002295a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9002295c:	f7fb feec 	bl	9001e738 <EwIsRectEmpty>
        dedicatedView = 0;
90022960:	9b07      	ldr	r3, [sp, #28]
90022962:	e77d      	b.n	90022860 <CoreGroup_CursorHitTest+0xd8>
        area = _Const0001;
90022964:	2500      	movs	r5, #0
90022966:	f8c7 8000 	str.w	r8, [r7]
9002296a:	f8c7 800c 	str.w	r8, [r7, #12]
9002296e:	e9c7 8801 	strd	r8, r8, [r7, #4]
90022972:	e74e      	b.n	90022812 <CoreGroup_CursorHitTest+0x8a>
90022974:	00060018 	.word	0x00060018

90022978 <CoreGroup_OnSetBounds>:
{
90022978:	b084      	sub	sp, #16
9002297a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002297e:	b08a      	sub	sp, #40	; 0x28
  if ( !EwCompRect( value, _this->Super1.Bounds ))
90022980:	f100 0524 	add.w	r5, r0, #36	; 0x24
{
90022984:	4606      	mov	r6, r0
90022986:	ac11      	add	r4, sp, #68	; 0x44
90022988:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  if ( !EwCompRect( value, _this->Super1.Bounds ))
9002298c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90022990:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
90022994:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022998:	f7fb fe8f 	bl	9001e6ba <EwCompRect>
9002299c:	b920      	cbnz	r0, 900229a8 <CoreGroup_OnSetBounds+0x30>
}
9002299e:	b00a      	add	sp, #40	; 0x28
900229a0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900229a4:	b004      	add	sp, #16
900229a6:	4770      	bx	lr
  oldSize = EwGetRectSize( _this->Super1.Bounds );
900229a8:	6b33      	ldr	r3, [r6, #48]	; 0x30
900229aa:	af04      	add	r7, sp, #16
  newSize = EwGetRectSize( value );
900229ac:	f10d 0818 	add.w	r8, sp, #24
  oldSize = EwGetRectSize( _this->Super1.Bounds );
900229b0:	4638      	mov	r0, r7
900229b2:	9300      	str	r3, [sp, #0]
900229b4:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
900229b8:	f7fb fff5 	bl	9001e9a6 <EwGetRectSize>
  newSize = EwGetRectSize( value );
900229bc:	9b14      	ldr	r3, [sp, #80]	; 0x50
900229be:	4640      	mov	r0, r8
900229c0:	9300      	str	r3, [sp, #0]
900229c2:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
900229c6:	f7fb ffee 	bl	9001e9a6 <EwGetRectSize>
  resize = (XBool)EwCompPoint( oldSize, newSize );
900229ca:	e898 000c 	ldmia.w	r8, {r2, r3}
900229ce:	e897 0003 	ldmia.w	r7, {r0, r1}
900229d2:	f7fb fde0 	bl	9001e596 <EwCompPoint>
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
900229d6:	9b14      	ldr	r3, [sp, #80]	; 0x50
  resize = (XBool)EwCompPoint( oldSize, newSize );
900229d8:	4605      	mov	r5, r0
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
900229da:	4630      	mov	r0, r6
900229dc:	9300      	str	r3, [sp, #0]
900229de:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
900229e2:	f7ff fdfd 	bl	900225e0 <CoreRectView_OnSetBounds>
  if (( resize && ( oldSize.X > 0 )) && ( oldSize.Y > 0 ))
900229e6:	f015 0fff 	tst.w	r5, #255	; 0xff
900229ea:	d0d8      	beq.n	9002299e <CoreGroup_OnSetBounds+0x26>
900229ec:	9b04      	ldr	r3, [sp, #16]
900229ee:	2b00      	cmp	r3, #0
900229f0:	dd07      	ble.n	90022a02 <CoreGroup_OnSetBounds+0x8a>
900229f2:	9b05      	ldr	r3, [sp, #20]
900229f4:	2b00      	cmp	r3, #0
900229f6:	dd04      	ble.n	90022a02 <CoreGroup_OnSetBounds+0x8a>
    CoreView view = _this->first;
900229f8:	6b73      	ldr	r3, [r6, #52]	; 0x34
    while ( view != 0 )
900229fa:	b113      	cbz	r3, 90022a02 <CoreGroup_OnSetBounds+0x8a>
      view = view->next;
900229fc:	691b      	ldr	r3, [r3, #16]
    while ( view != 0 )
900229fe:	2b00      	cmp	r3, #0
90022a00:	d1fc      	bne.n	900229fc <CoreGroup_OnSetBounds+0x84>
    _this->Super2.viewState = _this->Super2.viewState | ( CoreViewStatePendingLayout 
90022a02:	6a33      	ldr	r3, [r6, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022a04:	ac08      	add	r4, sp, #32
90022a06:	4631      	mov	r1, r6
90022a08:	4a07      	ldr	r2, [pc, #28]	; (90022a28 <CoreGroup_OnSetBounds+0xb0>)
    _this->Super2.viewState = _this->Super2.viewState | ( CoreViewStatePendingLayout 
90022a0a:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022a0e:	4620      	mov	r0, r4
    _this->Super2.viewState = _this->Super2.viewState | ( CoreViewStatePendingLayout 
90022a10:	6233      	str	r3, [r6, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022a12:	f7fc ffb5 	bl	9001f980 <EwNewSlot>
90022a16:	4632      	mov	r2, r6
90022a18:	e894 0003 	ldmia.w	r4, {r0, r1}
}
90022a1c:	b00a      	add	sp, #40	; 0x28
90022a1e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90022a22:	b004      	add	sp, #16
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022a24:	f7fc bfda 	b.w	9001f9dc <EwPostSignal>
90022a28:	9002396d 	.word	0x9002396d

90022a2c <CoreGroup_OnSetFocus>:
{
90022a2c:	b570      	push	{r4, r5, r6, lr}
90022a2e:	4605      	mov	r5, r0
  if (( value != 0 ) && ( value->Owner != _this ))
90022a30:	460c      	mov	r4, r1
90022a32:	b141      	cbz	r1, 90022a46 <CoreGroup_OnSetFocus+0x1a>
90022a34:	698b      	ldr	r3, [r1, #24]
90022a36:	4283      	cmp	r3, r0
90022a38:	d11c      	bne.n	90022a74 <CoreGroup_OnSetFocus+0x48>
  if (( value != 0 ) && !(( value->viewState & ( CoreViewStateEnabled | CoreViewStateFocusable )) 
90022a3a:	6a0b      	ldr	r3, [r1, #32]
90022a3c:	f003 0214 	and.w	r2, r3, #20
90022a40:	2a14      	cmp	r2, #20
90022a42:	d01f      	beq.n	90022a84 <CoreGroup_OnSetFocus+0x58>
    value = 0;
90022a44:	2400      	movs	r4, #0
  if ( value == _this->Focus )
90022a46:	6c28      	ldr	r0, [r5, #64]	; 0x40
90022a48:	42a0      	cmp	r0, r4
90022a4a:	d01a      	beq.n	90022a82 <CoreGroup_OnSetFocus+0x56>
  if ( _this->Focus != 0 )
90022a4c:	b120      	cbz	r0, 90022a58 <CoreGroup_OnSetFocus+0x2c>
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a4e:	6803      	ldr	r3, [r0, #0]
90022a50:	2260      	movs	r2, #96	; 0x60
90022a52:	2100      	movs	r1, #0
90022a54:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90022a56:	4798      	blx	r3
  _this->Focus = value;
90022a58:	642c      	str	r4, [r5, #64]	; 0x40
  if ( value != 0 )
90022a5a:	b194      	cbz	r4, 90022a82 <CoreGroup_OnSetFocus+0x56>
    if ((( _this->Super2.viewState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022a5c:	6a2a      	ldr	r2, [r5, #32]
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a5e:	4620      	mov	r0, r4
90022a60:	6823      	ldr	r3, [r4, #0]
    if ((( _this->Super2.viewState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022a62:	f012 0240 	ands.w	r2, r2, #64	; 0x40
90022a66:	d012      	beq.n	90022a8e <CoreGroup_OnSetFocus+0x62>
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a68:	2200      	movs	r2, #0
90022a6a:	2160      	movs	r1, #96	; 0x60
90022a6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
90022a6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a72:	4718      	bx	r3
    EwThrow( EwLoadString( &_Const0002 ));
90022a74:	4808      	ldr	r0, [pc, #32]	; (90022a98 <CoreGroup_OnSetFocus+0x6c>)
90022a76:	f7fe f8b1 	bl	90020bdc <EwLoadString>
}
90022a7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    EwThrow( EwLoadString( &_Const0002 ));
90022a7e:	f7fa bcdb 	b.w	9001d438 <EwThrow>
}
90022a82:	bd70      	pop	{r4, r5, r6, pc}
    value = 0;
90022a84:	f413 3f80 	tst.w	r3, #65536	; 0x10000
90022a88:	bf18      	it	ne
90022a8a:	2400      	movne	r4, #0
90022a8c:	e7db      	b.n	90022a46 <CoreGroup_OnSetFocus+0x1a>
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a8e:	2120      	movs	r1, #32
90022a90:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
90022a92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022a96:	4718      	bx	r3
90022a98:	90033500 	.word	0x90033500

90022a9c <CoreRoot_OnSetFocus>:
    CoreGroup_OnSetFocus((CoreGroup)_this, value );
90022a9c:	f7ff bfc6 	b.w	90022a2c <CoreGroup_OnSetFocus>

90022aa0 <CoreOutline_OnSetBounds>:
{
90022aa0:	b084      	sub	sp, #16
90022aa2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022aa6:	b08d      	sub	sp, #52	; 0x34
  if ( !EwCompRect( value, _this->Super1.Bounds ))
90022aa8:	f100 0624 	add.w	r6, r0, #36	; 0x24
{
90022aac:	4605      	mov	r5, r0
90022aae:	ac15      	add	r4, sp, #84	; 0x54
90022ab0:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  if ( !EwCompRect( value, _this->Super1.Bounds ))
90022ab4:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90022ab8:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
90022abc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90022ac0:	f7fb fdfb 	bl	9001e6ba <EwCompRect>
90022ac4:	b920      	cbnz	r0, 90022ad0 <CoreOutline_OnSetBounds+0x30>
}
90022ac6:	b00d      	add	sp, #52	; 0x34
90022ac8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022acc:	b004      	add	sp, #16
90022ace:	4770      	bx	lr
  oldSize = EwGetRectSize( _this->Super1.Bounds );
90022ad0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90022ad2:	f10d 0810 	add.w	r8, sp, #16
  newSize = EwGetRectSize( value );
90022ad6:	f10d 0918 	add.w	r9, sp, #24
  offset = EwMovePointNeg( value.Point1, _this->Super1.Bounds.Point1 );
90022ada:	af08      	add	r7, sp, #32
  oldSize = EwGetRectSize( _this->Super1.Bounds );
90022adc:	4640      	mov	r0, r8
90022ade:	9300      	str	r3, [sp, #0]
90022ae0:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90022ae4:	f7fb ff5f 	bl	9001e9a6 <EwGetRectSize>
  newSize = EwGetRectSize( value );
90022ae8:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022aea:	4648      	mov	r0, r9
90022aec:	9300      	str	r3, [sp, #0]
90022aee:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90022af2:	f7fb ff58 	bl	9001e9a6 <EwGetRectSize>
  resize = (XBool)EwCompPoint( oldSize, newSize );
90022af6:	e899 000c 	ldmia.w	r9, {r2, r3}
90022afa:	e898 0003 	ldmia.w	r8, {r0, r1}
90022afe:	f7fb fd4a 	bl	9001e596 <EwCompPoint>
  offset = EwMovePointNeg( value.Point1, _this->Super1.Bounds.Point1 );
90022b02:	6aaa      	ldr	r2, [r5, #40]	; 0x28
90022b04:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  resize = (XBool)EwCompPoint( oldSize, newSize );
90022b06:	4606      	mov	r6, r0
  offset = EwMovePointNeg( value.Point1, _this->Super1.Bounds.Point1 );
90022b08:	9200      	str	r2, [sp, #0]
90022b0a:	4638      	mov	r0, r7
  resize = (XBool)EwCompPoint( oldSize, newSize );
90022b0c:	b2f6      	uxtb	r6, r6
  offset = EwMovePointNeg( value.Point1, _this->Super1.Bounds.Point1 );
90022b0e:	e894 0006 	ldmia.w	r4, {r1, r2}
90022b12:	f7fb fd5f 	bl	9001e5d4 <EwMovePointNeg>
  if ( EwCompPoint( offset, _Const0000 ) && !resize )
90022b16:	4b33      	ldr	r3, [pc, #204]	; (90022be4 <CoreOutline_OnSetBounds+0x144>)
90022b18:	e897 0003 	ldmia.w	r7, {r0, r1}
90022b1c:	cb0c      	ldmia	r3, {r2, r3}
90022b1e:	f7fb fd3a 	bl	9001e596 <EwCompPoint>
90022b22:	b330      	cbz	r0, 90022b72 <CoreOutline_OnSetBounds+0xd2>
90022b24:	bb3e      	cbnz	r6, 90022b76 <CoreOutline_OnSetBounds+0xd6>
    CoreView view = _this->Super2.next;
90022b26:	692e      	ldr	r6, [r5, #16]
    while (( view != 0 ) && !(( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022b28:	b1be      	cbz	r6, 90022b5a <CoreOutline_OnSetBounds+0xba>
90022b2a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
90022b2e:	e00e      	b.n	90022b4e <CoreOutline_OnSetBounds+0xae>
      if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022b30:	0551      	lsls	r1, r2, #21
90022b32:	d50a      	bpl.n	90022b4a <CoreOutline_OnSetBounds+0xaa>
  ((CoreView)_this)->_.VMT->MoveView((CoreView)_this, aOffset, aFastMove );
90022b34:	6832      	ldr	r2, [r6, #0]
90022b36:	e897 0003 	ldmia.w	r7, {r0, r1}
90022b3a:	f8d2 9044 	ldr.w	r9, [r2, #68]	; 0x44
90022b3e:	e888 0003 	stmia.w	r8, {r0, r1}
90022b42:	4630      	mov	r0, r6
90022b44:	e898 0006 	ldmia.w	r8, {r1, r2}
90022b48:	47c8      	blx	r9
      view = view->next;
90022b4a:	6936      	ldr	r6, [r6, #16]
    while (( view != 0 ) && !(( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022b4c:	b12e      	cbz	r6, 90022b5a <CoreOutline_OnSetBounds+0xba>
90022b4e:	6a32      	ldr	r2, [r6, #32]
90022b50:	f412 7f00 	tst.w	r2, #512	; 0x200
  ((CoreView)_this)->_.VMT->MoveView((CoreView)_this, aOffset, aFastMove );
90022b54:	f3c2 2300 	ubfx	r3, r2, #8, #1
    while (( view != 0 ) && !(( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022b58:	d0ea      	beq.n	90022b30 <CoreOutline_OnSetBounds+0x90>
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
90022b5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022b5c:	4628      	mov	r0, r5
90022b5e:	9300      	str	r3, [sp, #0]
90022b60:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90022b64:	f7ff fd3c 	bl	900225e0 <CoreRectView_OnSetBounds>
}
90022b68:	b00d      	add	sp, #52	; 0x34
90022b6a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022b6e:	b004      	add	sp, #16
90022b70:	4770      	bx	lr
  if (( resize && ( oldSize.X > 0 )) && ( oldSize.Y > 0 ))
90022b72:	2e00      	cmp	r6, #0
90022b74:	d0f1      	beq.n	90022b5a <CoreOutline_OnSetBounds+0xba>
90022b76:	9b04      	ldr	r3, [sp, #16]
90022b78:	2b00      	cmp	r3, #0
90022b7a:	dd10      	ble.n	90022b9e <CoreOutline_OnSetBounds+0xfe>
90022b7c:	9b05      	ldr	r3, [sp, #20]
90022b7e:	2b00      	cmp	r3, #0
90022b80:	dd0d      	ble.n	90022b9e <CoreOutline_OnSetBounds+0xfe>
    CoreView view = _this->Super2.next;
90022b82:	692b      	ldr	r3, [r5, #16]
    while (( view != 0 ) && !(( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022b84:	b93b      	cbnz	r3, 90022b96 <CoreOutline_OnSetBounds+0xf6>
90022b86:	e00a      	b.n	90022b9e <CoreOutline_OnSetBounds+0xfe>
      if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ) 
90022b88:	0552      	lsls	r2, r2, #21
90022b8a:	d502      	bpl.n	90022b92 <CoreOutline_OnSetBounds+0xf2>
          && (( view->layoutContext != 0 ) && ( 0 != _this )))
90022b8c:	69da      	ldr	r2, [r3, #28]
90022b8e:	b102      	cbz	r2, 90022b92 <CoreOutline_OnSetBounds+0xf2>
        view->layoutContext = 0;
90022b90:	61d9      	str	r1, [r3, #28]
      view = view->next;
90022b92:	691b      	ldr	r3, [r3, #16]
    while (( view != 0 ) && !(( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022b94:	b11b      	cbz	r3, 90022b9e <CoreOutline_OnSetBounds+0xfe>
90022b96:	6a1a      	ldr	r2, [r3, #32]
90022b98:	f412 7100 	ands.w	r1, r2, #512	; 0x200
90022b9c:	d0f4      	beq.n	90022b88 <CoreOutline_OnSetBounds+0xe8>
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
90022b9e:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022ba0:	4628      	mov	r0, r5
90022ba2:	9300      	str	r3, [sp, #0]
90022ba4:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90022ba8:	f7ff fd1a 	bl	900225e0 <CoreRectView_OnSetBounds>
  if (( _this->Super2.Owner != 0 ) && resize )
90022bac:	69a9      	ldr	r1, [r5, #24]
90022bae:	2900      	cmp	r1, #0
90022bb0:	d089      	beq.n	90022ac6 <CoreOutline_OnSetBounds+0x26>
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStateUpdateLayout;
90022bb2:	6a2b      	ldr	r3, [r5, #32]
    if ( !(( _this->Super2.Owner->Super2.viewState & CoreViewStateUpdatingLayout ) 
90022bb4:	6a0a      	ldr	r2, [r1, #32]
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStateUpdateLayout;
90022bb6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
90022bba:	622b      	str	r3, [r5, #32]
    if ( !(( _this->Super2.Owner->Super2.viewState & CoreViewStateUpdatingLayout ) 
90022bbc:	0493      	lsls	r3, r2, #18
90022bbe:	d482      	bmi.n	90022ac6 <CoreOutline_OnSetBounds+0x26>
      | CoreViewStatePendingLayout;
90022bc0:	f442 4380 	orr.w	r3, r2, #16384	; 0x4000
      EwPostSignal( EwNewSlot( _this->Super2.Owner, CoreGroup_updateComponent ), 
90022bc4:	ac0a      	add	r4, sp, #40	; 0x28
90022bc6:	4a08      	ldr	r2, [pc, #32]	; (90022be8 <CoreOutline_OnSetBounds+0x148>)
90022bc8:	4620      	mov	r0, r4
      _this->Super2.Owner->Super2.viewState = _this->Super2.Owner->Super2.viewState 
90022bca:	620b      	str	r3, [r1, #32]
      EwPostSignal( EwNewSlot( _this->Super2.Owner, CoreGroup_updateComponent ), 
90022bcc:	f7fc fed8 	bl	9001f980 <EwNewSlot>
90022bd0:	462a      	mov	r2, r5
90022bd2:	e894 0003 	ldmia.w	r4, {r0, r1}
}
90022bd6:	b00d      	add	sp, #52	; 0x34
90022bd8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022bdc:	b004      	add	sp, #16
      EwPostSignal( EwNewSlot( _this->Super2.Owner, CoreGroup_updateComponent ), 
90022bde:	f7fc befd 	b.w	9001f9dc <EwPostSignal>
90022be2:	bf00      	nop
90022be4:	900334f8 	.word	0x900334f8
90022be8:	9002396d 	.word	0x9002396d

90022bec <CoreEvent__Init>:
{
90022bec:	b510      	push	{r4, lr}
90022bee:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022bf0:	f7fb f8fa 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreEvent );
90022bf4:	4b03      	ldr	r3, [pc, #12]	; (90022c04 <CoreEvent__Init+0x18>)
90022bf6:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreEvent );
90022bf8:	6023      	str	r3, [r4, #0]
  ticksCount = (XUInt32)EwGetTicks();
90022bfa:	f004 f881 	bl	90026d00 <EwGetTicks>
  _this->Time = CoreEvent_GetCurrentTime( _this );
90022bfe:	6120      	str	r0, [r4, #16]
}
90022c00:	bd10      	pop	{r4, pc}
90022c02:	bf00      	nop
90022c04:	900335e8 	.word	0x900335e8

90022c08 <CoreKeyEvent__Init>:
{
90022c08:	b510      	push	{r4, lr}
90022c0a:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022c0c:	f7fb f8ec 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreEvent );
90022c10:	4b04      	ldr	r3, [pc, #16]	; (90022c24 <CoreKeyEvent__Init+0x1c>)
90022c12:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreEvent );
90022c14:	6023      	str	r3, [r4, #0]
  ticksCount = (XUInt32)EwGetTicks();
90022c16:	f004 f873 	bl	90026d00 <EwGetTicks>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreKeyEvent );
90022c1a:	4b03      	ldr	r3, [pc, #12]	; (90022c28 <CoreKeyEvent__Init+0x20>)
90022c1c:	e9c4 3003 	strd	r3, r0, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreKeyEvent );
90022c20:	6023      	str	r3, [r4, #0]
}
90022c22:	bd10      	pop	{r4, pc}
90022c24:	900335e8 	.word	0x900335e8
90022c28:	9003368c 	.word	0x9003368c

90022c2c <CoreCursorGrabEvent__Init>:
{
90022c2c:	b510      	push	{r4, lr}
90022c2e:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022c30:	f7fb f8da 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreEvent );
90022c34:	4b04      	ldr	r3, [pc, #16]	; (90022c48 <CoreCursorGrabEvent__Init+0x1c>)
90022c36:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreEvent );
90022c38:	6023      	str	r3, [r4, #0]
  ticksCount = (XUInt32)EwGetTicks();
90022c3a:	f004 f861 	bl	90026d00 <EwGetTicks>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreCursorGrabEvent );
90022c3e:	4b03      	ldr	r3, [pc, #12]	; (90022c4c <CoreCursorGrabEvent__Init+0x20>)
90022c40:	e9c4 3003 	strd	r3, r0, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreCursorGrabEvent );
90022c44:	6023      	str	r3, [r4, #0]
}
90022c46:	bd10      	pop	{r4, pc}
90022c48:	900335e8 	.word	0x900335e8
90022c4c:	90033570 	.word	0x90033570

90022c50 <CoreCursorEvent__Init>:
{
90022c50:	b510      	push	{r4, lr}
90022c52:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022c54:	f7fb f8c8 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreEvent );
90022c58:	4b04      	ldr	r3, [pc, #16]	; (90022c6c <CoreCursorEvent__Init+0x1c>)
90022c5a:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreEvent );
90022c5c:	6023      	str	r3, [r4, #0]
  ticksCount = (XUInt32)EwGetTicks();
90022c5e:	f004 f84f 	bl	90026d00 <EwGetTicks>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreCursorEvent );
90022c62:	4b03      	ldr	r3, [pc, #12]	; (90022c70 <CoreCursorEvent__Init+0x20>)
90022c64:	e9c4 3003 	strd	r3, r0, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreCursorEvent );
90022c68:	6023      	str	r3, [r4, #0]
}
90022c6a:	bd10      	pop	{r4, pc}
90022c6c:	900335e8 	.word	0x900335e8
90022c70:	90033534 	.word	0x90033534

90022c74 <CoreDragEvent__Init>:
{
90022c74:	b510      	push	{r4, lr}
90022c76:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
90022c78:	f7fb f8b6 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreEvent );
90022c7c:	4b04      	ldr	r3, [pc, #16]	; (90022c90 <CoreDragEvent__Init+0x1c>)
90022c7e:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreEvent );
90022c80:	6023      	str	r3, [r4, #0]
  ticksCount = (XUInt32)EwGetTicks();
90022c82:	f004 f83d 	bl	90026d00 <EwGetTicks>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreDragEvent );
90022c86:	4b03      	ldr	r3, [pc, #12]	; (90022c94 <CoreDragEvent__Init+0x20>)
90022c88:	e9c4 3003 	strd	r3, r0, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreDragEvent );
90022c8c:	6023      	str	r3, [r4, #0]
}
90022c8e:	bd10      	pop	{r4, pc}
90022c90:	900335e8 	.word	0x900335e8
90022c94:	900335ac 	.word	0x900335ac

90022c98 <CoreResource__Done>:
  if ( _this->resource != 0 )
90022c98:	6903      	ldr	r3, [r0, #16]
{
90022c9a:	b510      	push	{r4, lr}
90022c9c:	4604      	mov	r4, r0
  if ( _this->resource != 0 )
90022c9e:	b943      	cbnz	r3, 90022cb2 <CoreResource__Done+0x1a>
  _this->resource = 0;
90022ca0:	2200      	movs	r2, #0
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022ca2:	4b05      	ldr	r3, [pc, #20]	; (90022cb8 <CoreResource__Done+0x20>)
  XObject__Done( &_this->_.Super );
90022ca4:	4620      	mov	r0, r4
  _this->resource = 0;
90022ca6:	6122      	str	r2, [r4, #16]
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022ca8:	6023      	str	r3, [r4, #0]
}
90022caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  XObject__Done( &_this->_.Super );
90022cae:	f7fb b8a2 	b.w	9001ddf6 <XObject__Done>
      EwDeregisterResource((XObject)this );
90022cb2:	f7fb fff3 	bl	9001ec9c <EwDeregisterResource>
90022cb6:	e7f3      	b.n	90022ca0 <CoreResource__Done+0x8>
90022cb8:	90032fd0 	.word	0x90032fd0

90022cbc <CoreResource__Init>:
{
90022cbc:	b538      	push	{r3, r4, r5, lr}
90022cbe:	4604      	mov	r4, r0
90022cc0:	4615      	mov	r5, r2
  XObject__Init( &_this->_.Super, aLink, aArg );
90022cc2:	f7fb f891 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreResource );
90022cc6:	4b06      	ldr	r3, [pc, #24]	; (90022ce0 <CoreResource__Init+0x24>)
90022cc8:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreResource );
90022cca:	6023      	str	r3, [r4, #0]
    if ( aArg )
90022ccc:	b90d      	cbnz	r5, 90022cd2 <CoreResource__Init+0x16>
  _this->resource = aArg;
90022cce:	6125      	str	r5, [r4, #16]
}
90022cd0:	bd38      	pop	{r3, r4, r5, pc}
      EwRegisterResource((XObject)this, (const void*)aArg );
90022cd2:	4629      	mov	r1, r5
90022cd4:	4620      	mov	r0, r4
90022cd6:	f7fb ff9d 	bl	9001ec14 <EwRegisterResource>
  _this->resource = aArg;
90022cda:	6125      	str	r5, [r4, #16]
}
90022cdc:	bd38      	pop	{r3, r4, r5, pc}
90022cde:	bf00      	nop
90022ce0:	90033778 	.word	0x90033778

90022ce4 <CoreTimer__Done>:
}

/* Finalizer method for the class 'Core::Timer' */
void CoreTimer__Done( CoreTimer _this )
{
90022ce4:	b510      	push	{r4, lr}
90022ce6:	4604      	mov	r4, r0
}

/* 'C' function for method : 'Core::Timer.Done()' */
void CoreTimer_Done( CoreTimer _this )
{
  XHandle tmp = _this->timer;
90022ce8:	6980      	ldr	r0, [r0, #24]

  if ( tmp != 0 )
90022cea:	b940      	cbnz	r0, 90022cfe <CoreTimer__Done+0x1a>
    EwDestroyTimer((XTimer*)tmp );

  _this->timer = 0;
90022cec:	2200      	movs	r2, #0
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022cee:	4b05      	ldr	r3, [pc, #20]	; (90022d04 <CoreTimer__Done+0x20>)
  XObject__Done( &_this->_.Super );
90022cf0:	4620      	mov	r0, r4
  _this->timer = 0;
90022cf2:	61a2      	str	r2, [r4, #24]
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022cf4:	6023      	str	r3, [r4, #0]
}
90022cf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  XObject__Done( &_this->_.Super );
90022cfa:	f7fb b87c 	b.w	9001ddf6 <XObject__Done>
    EwDestroyTimer((XTimer*)tmp );
90022cfe:	f7fe fde8 	bl	900218d2 <EwDestroyTimer>
90022d02:	e7f3      	b.n	90022cec <CoreTimer__Done+0x8>
90022d04:	90032fd0 	.word	0x90032fd0

90022d08 <CoreRoot__Done>:
  _this->_.Super._.VMT = EW_CLASS( CoreGroup );
90022d08:	4b06      	ldr	r3, [pc, #24]	; (90022d24 <CoreRoot__Done+0x1c>)
{
90022d0a:	b510      	push	{r4, lr}
90022d0c:	4604      	mov	r4, r0
  _this->_.Super._.VMT = EW_CLASS( CoreGroup );
90022d0e:	f840 3b74 	str.w	r3, [r0], #116
  CoreTimer__Done( &_this->cursorHoldTimer );
90022d12:	f7ff ffe7 	bl	90022ce4 <CoreTimer__Done>
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022d16:	4b04      	ldr	r3, [pc, #16]	; (90022d28 <CoreRoot__Done+0x20>)
  XObject__Done( &_this->_.Super );
90022d18:	4620      	mov	r0, r4
  _this->_.Super._.VMT = EW_CLASS( XObject );
90022d1a:	6023      	str	r3, [r4, #0]
}
90022d1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  XObject__Done( &_this->_.Super );
90022d20:	f7fb b869 	b.w	9001ddf6 <XObject__Done>
90022d24:	90033624 	.word	0x90033624
90022d28:	90032fd0 	.word	0x90032fd0

90022d2c <CoreGroup_FindSiblingView.part.0>:
CoreView CoreGroup_FindSiblingView( CoreGroup _this, CoreView aView, XSet aFilter )
90022d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    notFilter = 0;
90022d2e:	f411 3f80 	tst.w	r1, #65536	; 0x10000
  prevView = aView->prev;
90022d32:	e9d0 4504 	ldrd	r4, r5, [r0, #16]
    notFilter = 0;
90022d36:	bf0c      	ite	eq
90022d38:	f44f 3680 	moveq.w	r6, #65536	; 0x10000
90022d3c:	2600      	movne	r6, #0
  while (( nextView != 0 ) || ( prevView != 0 ))
90022d3e:	ea54 0305 	orrs.w	r3, r4, r5
90022d42:	d018      	beq.n	90022d76 <CoreGroup_FindSiblingView.part.0+0x4a>
90022d44:	460f      	mov	r7, r1
    if ((( nextView != 0 ) && ( !aFilter || EwSetContains( nextView->viewState, 
90022d46:	2c00      	cmp	r4, #0
90022d48:	d03e      	beq.n	90022dc8 <CoreGroup_FindSiblingView.part.0+0x9c>
90022d4a:	b9bf      	cbnz	r7, 90022d7c <CoreGroup_FindSiblingView.part.0+0x50>
        aFilter ))) && ( !notFilter || !EwSetContains( nextView->viewState, notFilter )))
90022d4c:	b1a6      	cbz	r6, 90022d78 <CoreGroup_FindSiblingView.part.0+0x4c>
90022d4e:	4631      	mov	r1, r6
90022d50:	6a20      	ldr	r0, [r4, #32]
90022d52:	f7fc f9a3 	bl	9001f09c <EwSetContains>
90022d56:	b178      	cbz	r0, 90022d78 <CoreGroup_FindSiblingView.part.0+0x4c>
    if ((( prevView != 0 ) && ( !aFilter || EwSetContains( prevView->viewState, 
90022d58:	b315      	cbz	r5, 90022da0 <CoreGroup_FindSiblingView.part.0+0x74>
90022d5a:	bb37      	cbnz	r7, 90022daa <CoreGroup_FindSiblingView.part.0+0x7e>
        aFilter ))) && ( !notFilter || !EwSetContains( prevView->viewState, notFilter )))
90022d5c:	b1ee      	cbz	r6, 90022d9a <CoreGroup_FindSiblingView.part.0+0x6e>
90022d5e:	4631      	mov	r1, r6
90022d60:	6a28      	ldr	r0, [r5, #32]
90022d62:	f7fc f99b 	bl	9001f09c <EwSetContains>
90022d66:	b1c0      	cbz	r0, 90022d9a <CoreGroup_FindSiblingView.part.0+0x6e>
    if ( nextView != 0 )
90022d68:	b33c      	cbz	r4, 90022dba <CoreGroup_FindSiblingView.part.0+0x8e>
      nextView = nextView->next;
90022d6a:	6924      	ldr	r4, [r4, #16]
      prevView = prevView->prev;
90022d6c:	696d      	ldr	r5, [r5, #20]
  while (( nextView != 0 ) || ( prevView != 0 ))
90022d6e:	ea45 0304 	orr.w	r3, r5, r4
90022d72:	2b00      	cmp	r3, #0
90022d74:	d1e7      	bne.n	90022d46 <CoreGroup_FindSiblingView.part.0+0x1a>
  return 0;
90022d76:	2400      	movs	r4, #0
}
90022d78:	4620      	mov	r0, r4
90022d7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((( nextView != 0 ) && ( !aFilter || EwSetContains( nextView->viewState, 
90022d7c:	4639      	mov	r1, r7
90022d7e:	6a20      	ldr	r0, [r4, #32]
90022d80:	f7fc f98c 	bl	9001f09c <EwSetContains>
90022d84:	2800      	cmp	r0, #0
90022d86:	d1e1      	bne.n	90022d4c <CoreGroup_FindSiblingView.part.0+0x20>
    if ((( prevView != 0 ) && ( !aFilter || EwSetContains( prevView->viewState, 
90022d88:	b155      	cbz	r5, 90022da0 <CoreGroup_FindSiblingView.part.0+0x74>
90022d8a:	4639      	mov	r1, r7
90022d8c:	6a28      	ldr	r0, [r5, #32]
90022d8e:	f7fc f985 	bl	9001f09c <EwSetContains>
90022d92:	2800      	cmp	r0, #0
90022d94:	d0e9      	beq.n	90022d6a <CoreGroup_FindSiblingView.part.0+0x3e>
        aFilter ))) && ( !notFilter || !EwSetContains( prevView->viewState, notFilter )))
90022d96:	2e00      	cmp	r6, #0
90022d98:	d1e1      	bne.n	90022d5e <CoreGroup_FindSiblingView.part.0+0x32>
90022d9a:	462c      	mov	r4, r5
}
90022d9c:	4620      	mov	r0, r4
90022d9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      nextView = nextView->next;
90022da0:	6924      	ldr	r4, [r4, #16]
90022da2:	4623      	mov	r3, r4
  while (( nextView != 0 ) || ( prevView != 0 ))
90022da4:	2b00      	cmp	r3, #0
90022da6:	d1ce      	bne.n	90022d46 <CoreGroup_FindSiblingView.part.0+0x1a>
90022da8:	e7e5      	b.n	90022d76 <CoreGroup_FindSiblingView.part.0+0x4a>
    if ((( prevView != 0 ) && ( !aFilter || EwSetContains( prevView->viewState, 
90022daa:	4639      	mov	r1, r7
90022dac:	6a28      	ldr	r0, [r5, #32]
90022dae:	f7fc f975 	bl	9001f09c <EwSetContains>
90022db2:	2800      	cmp	r0, #0
90022db4:	d1d2      	bne.n	90022d5c <CoreGroup_FindSiblingView.part.0+0x30>
    if ( nextView != 0 )
90022db6:	2c00      	cmp	r4, #0
90022db8:	d1d7      	bne.n	90022d6a <CoreGroup_FindSiblingView.part.0+0x3e>
      prevView = prevView->prev;
90022dba:	696d      	ldr	r5, [r5, #20]
  while (( nextView != 0 ) || ( prevView != 0 ))
90022dbc:	2d00      	cmp	r5, #0
90022dbe:	d0da      	beq.n	90022d76 <CoreGroup_FindSiblingView.part.0+0x4a>
    if ((( prevView != 0 ) && ( !aFilter || EwSetContains( prevView->viewState, 
90022dc0:	2400      	movs	r4, #0
90022dc2:	2f00      	cmp	r7, #0
90022dc4:	d0ca      	beq.n	90022d5c <CoreGroup_FindSiblingView.part.0+0x30>
90022dc6:	e7f0      	b.n	90022daa <CoreGroup_FindSiblingView.part.0+0x7e>
90022dc8:	2d00      	cmp	r5, #0
90022dca:	d0d4      	beq.n	90022d76 <CoreGroup_FindSiblingView.part.0+0x4a>
90022dcc:	2f00      	cmp	r7, #0
90022dce:	d0c5      	beq.n	90022d5c <CoreGroup_FindSiblingView.part.0+0x30>
90022dd0:	e7eb      	b.n	90022daa <CoreGroup_FindSiblingView.part.0+0x7e>
90022dd2:	bf00      	nop

90022dd4 <CoreView_ChangeViewState>:
{
90022dd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((( _this->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022dd8:	6a06      	ldr	r6, [r0, #32]
{
90022dda:	4605      	mov	r5, r0
90022ddc:	b08c      	sub	sp, #48	; 0x30
  if ((( _this->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90022dde:	05b0      	lsls	r0, r6, #22
  newState = ( _this->viewState & ~aClearState ) | aSetState;
90022de0:	ea26 0202 	bic.w	r2, r6, r2
  if (( _this->Owner != 0 ) && !!( deltaState & ( CoreViewStateEnabled | CoreViewStateFocusable )))
90022de4:	69af      	ldr	r7, [r5, #24]
    aSetState = aSetState & ~CoreViewStateEmbedded;
90022de6:	bf48      	it	mi
90022de8:	f421 6180 	bicmi.w	r1, r1, #1024	; 0x400
  newState = ( _this->viewState & ~aClearState ) | aSetState;
90022dec:	ea42 0401 	orr.w	r4, r2, r1
  deltaState = newState ^ _this->viewState;
90022df0:	4066      	eors	r6, r4
  _this->viewState = newState;
90022df2:	622c      	str	r4, [r5, #32]
  if (( _this->Owner != 0 ) && !!( deltaState & ( CoreViewStateEnabled | CoreViewStateFocusable )))
90022df4:	2f00      	cmp	r7, #0
90022df6:	d04b      	beq.n	90022e90 <CoreView_ChangeViewState+0xbc>
90022df8:	f016 0f14 	tst.w	r6, #20
90022dfc:	d006      	beq.n	90022e0c <CoreView_ChangeViewState+0x38>
    XBool focusable = (( _this->viewState & ( CoreViewStateEnabled | CoreViewStateFocusable )) 
90022dfe:	f004 0314 	and.w	r3, r4, #20
    if ( focusable && ( _this->Owner->Focus == 0 ))
90022e02:	2b14      	cmp	r3, #20
90022e04:	6c3b      	ldr	r3, [r7, #64]	; 0x40
90022e06:	d05d      	beq.n	90022ec4 <CoreView_ChangeViewState+0xf0>
    if ( !focusable && ( _this->Owner->Focus == _this ))
90022e08:	42ab      	cmp	r3, r5
90022e0a:	d067      	beq.n	90022edc <CoreView_ChangeViewState+0x108>
  if (( _this->Owner != 0 ) && !!( deltaState & ( CoreViewStateAlphaBlended | CoreViewStateEmbedded 
90022e0c:	f240 4303 	movw	r3, #1027	; 0x403
90022e10:	421e      	tst	r6, r3
90022e12:	d120      	bne.n	90022e56 <CoreView_ChangeViewState+0x82>
  if (((( _this->layoutContext != 0 ) && ( _this->Owner != 0 )) && (( newState & 
90022e14:	69eb      	ldr	r3, [r5, #28]
90022e16:	2b00      	cmp	r3, #0
90022e18:	d05c      	beq.n	90022ed4 <CoreView_ChangeViewState+0x100>
90022e1a:	0561      	lsls	r1, r4, #21
90022e1c:	d501      	bpl.n	90022e22 <CoreView_ChangeViewState+0x4e>
      CoreViewStateEmbedded ) == CoreViewStateEmbedded )) && (( deltaState & CoreViewStateVisible ) 
90022e1e:	07f2      	lsls	r2, r6, #31
90022e20:	d439      	bmi.n	90022e96 <CoreView_ChangeViewState+0xc2>
  if (( _this->Owner != 0 ) && (( deltaState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022e22:	4639      	mov	r1, r7
90022e24:	0573      	lsls	r3, r6, #21
90022e26:	d533      	bpl.n	90022e90 <CoreView_ChangeViewState+0xbc>
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022e28:	6a2b      	ldr	r3, [r5, #32]
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e2a:	ac08      	add	r4, sp, #32
    _this->layoutContext = 0;
90022e2c:	2200      	movs	r2, #0
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022e2e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e32:	4620      	mov	r0, r4
    _this->layoutContext = 0;
90022e34:	61ea      	str	r2, [r5, #28]
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022e36:	622b      	str	r3, [r5, #32]
    _this->Owner->Super2.viewState = _this->Owner->Super2.viewState | CoreViewStatePendingLayout;
90022e38:	6a0b      	ldr	r3, [r1, #32]
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e3a:	4a2f      	ldr	r2, [pc, #188]	; (90022ef8 <CoreView_ChangeViewState+0x124>)
    _this->Owner->Super2.viewState = _this->Owner->Super2.viewState | CoreViewStatePendingLayout;
90022e3c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
90022e40:	620b      	str	r3, [r1, #32]
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e42:	f7fc fd9d 	bl	9001f980 <EwNewSlot>
90022e46:	462a      	mov	r2, r5
90022e48:	e894 0003 	ldmia.w	r4, {r0, r1}
}
90022e4c:	b00c      	add	sp, #48	; 0x30
90022e4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e52:	f7fc bdc3 	b.w	9001f9dc <EwPostSignal>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90022e56:	f10d 0810 	add.w	r8, sp, #16
90022e5a:	682b      	ldr	r3, [r5, #0]
90022e5c:	4629      	mov	r1, r5
90022e5e:	4640      	mov	r0, r8
90022e60:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90022e62:	4798      	blx	r3
90022e64:	f10d 0c20 	add.w	ip, sp, #32
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022e68:	f8d7 e000 	ldr.w	lr, [r7]
90022e6c:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
90022e70:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
90022e74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022e76:	4638      	mov	r0, r7
90022e78:	9300      	str	r3, [sp, #0]
90022e7a:	f8de 7060 	ldr.w	r7, [lr, #96]	; 0x60
90022e7e:	e89c 000e 	ldmia.w	ip, {r1, r2, r3}
90022e82:	47b8      	blx	r7
  if (((( _this->layoutContext != 0 ) && ( _this->Owner != 0 )) && (( newState & 
90022e84:	e9d5 7306 	ldrd	r7, r3, [r5, #24]
90022e88:	4639      	mov	r1, r7
90022e8a:	b1c3      	cbz	r3, 90022ebe <CoreView_ChangeViewState+0xea>
90022e8c:	2f00      	cmp	r7, #0
90022e8e:	d1c4      	bne.n	90022e1a <CoreView_ChangeViewState+0x46>
}
90022e90:	b00c      	add	sp, #48	; 0x30
90022e92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022e96:	6a2b      	ldr	r3, [r5, #32]
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022e98:	ac02      	add	r4, sp, #8
90022e9a:	4639      	mov	r1, r7
90022e9c:	4a16      	ldr	r2, [pc, #88]	; (90022ef8 <CoreView_ChangeViewState+0x124>)
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022e9e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022ea2:	4620      	mov	r0, r4
    _this->viewState = _this->viewState | CoreViewStateRequestLayout;
90022ea4:	622b      	str	r3, [r5, #32]
    _this->Owner->Super2.viewState = _this->Owner->Super2.viewState | CoreViewStatePendingLayout;
90022ea6:	6a3b      	ldr	r3, [r7, #32]
90022ea8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
90022eac:	623b      	str	r3, [r7, #32]
    EwPostSignal( EwNewSlot( _this->Owner, CoreGroup_updateComponent ), ((XObject)_this ));
90022eae:	f7fc fd67 	bl	9001f980 <EwNewSlot>
90022eb2:	462a      	mov	r2, r5
90022eb4:	e894 0003 	ldmia.w	r4, {r0, r1}
90022eb8:	f7fc fd90 	bl	9001f9dc <EwPostSignal>
90022ebc:	69a9      	ldr	r1, [r5, #24]
  if (( _this->Owner != 0 ) && (( deltaState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022ebe:	2900      	cmp	r1, #0
90022ec0:	d1b0      	bne.n	90022e24 <CoreView_ChangeViewState+0x50>
90022ec2:	e7e5      	b.n	90022e90 <CoreView_ChangeViewState+0xbc>
    if ( focusable && ( _this->Owner->Focus == 0 ))
90022ec4:	2b00      	cmp	r3, #0
90022ec6:	d1a1      	bne.n	90022e0c <CoreView_ChangeViewState+0x38>
  ((CoreGroup)_this)->_.VMT->OnSetFocus((CoreGroup)_this, value );
90022ec8:	683b      	ldr	r3, [r7, #0]
90022eca:	4638      	mov	r0, r7
90022ecc:	4629      	mov	r1, r5
90022ece:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90022ed0:	4798      	blx	r3
}
90022ed2:	e00c      	b.n	90022eee <CoreView_ChangeViewState+0x11a>
90022ed4:	4639      	mov	r1, r7
  if (( _this->Owner != 0 ) && (( deltaState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90022ed6:	2900      	cmp	r1, #0
90022ed8:	d1a4      	bne.n	90022e24 <CoreView_ChangeViewState+0x50>
90022eda:	e7d9      	b.n	90022e90 <CoreView_ChangeViewState+0xbc>
  if (( aView == 0 ) || ( aView->Owner != _this ))
90022edc:	2114      	movs	r1, #20
90022ede:	4628      	mov	r0, r5
90022ee0:	f7ff ff24 	bl	90022d2c <CoreGroup_FindSiblingView.part.0>
  ((CoreGroup)_this)->_.VMT->OnSetFocus((CoreGroup)_this, value );
90022ee4:	683b      	ldr	r3, [r7, #0]
90022ee6:	4601      	mov	r1, r0
90022ee8:	4638      	mov	r0, r7
90022eea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90022eec:	4798      	blx	r3
  if (( _this->Owner != 0 ) && !!( deltaState & ( CoreViewStateAlphaBlended | CoreViewStateEmbedded 
90022eee:	69af      	ldr	r7, [r5, #24]
90022ef0:	2f00      	cmp	r7, #0
90022ef2:	d18b      	bne.n	90022e0c <CoreView_ChangeViewState+0x38>
90022ef4:	e7cc      	b.n	90022e90 <CoreView_ChangeViewState+0xbc>
90022ef6:	bf00      	nop
90022ef8:	9002396d 	.word	0x9002396d

90022efc <CoreGroup_ChangeViewState>:
{
90022efc:	b570      	push	{r4, r5, r6, lr}
90022efe:	4604      	mov	r4, r0
90022f00:	b082      	sub	sp, #8
  XSet oldState = _this->Super2.viewState;
90022f02:	6a06      	ldr	r6, [r0, #32]
  CoreView_ChangeViewState((CoreView)_this, aSetState, aClearState );
90022f04:	f7ff ff66 	bl	90022dd4 <CoreView_ChangeViewState>
  if (( _this->Focus != 0 ) && (( deltaState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022f08:	6c20      	ldr	r0, [r4, #64]	; 0x40
  deltaState = _this->Super2.viewState ^ oldState;
90022f0a:	6a25      	ldr	r5, [r4, #32]
  if (( _this->Focus != 0 ) && (( deltaState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022f0c:	b118      	cbz	r0, 90022f16 <CoreGroup_ChangeViewState+0x1a>
  deltaState = _this->Super2.viewState ^ oldState;
90022f0e:	ea85 0306 	eor.w	r3, r5, r6
  if (( _this->Focus != 0 ) && (( deltaState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022f12:	065b      	lsls	r3, r3, #25
90022f14:	d403      	bmi.n	90022f1e <CoreGroup_ChangeViewState+0x22>
  if ( !!deltaState )
90022f16:	42b5      	cmp	r5, r6
90022f18:	d10b      	bne.n	90022f32 <CoreGroup_ChangeViewState+0x36>
}
90022f1a:	b002      	add	sp, #8
90022f1c:	bd70      	pop	{r4, r5, r6, pc}
    if ((( _this->Super2.viewState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022f1e:	f015 0140 	ands.w	r1, r5, #64	; 0x40
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022f22:	6803      	ldr	r3, [r0, #0]
    if ((( _this->Super2.viewState & CoreViewStateFocused ) == CoreViewStateFocused ))
90022f24:	d017      	beq.n	90022f56 <CoreGroup_ChangeViewState+0x5a>
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022f26:	2200      	movs	r2, #0
90022f28:	2140      	movs	r1, #64	; 0x40
90022f2a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90022f2c:	4798      	blx	r3
  if ( !!deltaState )
90022f2e:	42b5      	cmp	r5, r6
90022f30:	d0f3      	beq.n	90022f1a <CoreGroup_ChangeViewState+0x1e>
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
90022f32:	6a23      	ldr	r3, [r4, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022f34:	466d      	mov	r5, sp
90022f36:	4621      	mov	r1, r4
90022f38:	4a09      	ldr	r2, [pc, #36]	; (90022f60 <CoreGroup_ChangeViewState+0x64>)
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
90022f3a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022f3e:	4628      	mov	r0, r5
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
90022f40:	6223      	str	r3, [r4, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022f42:	f7fc fd1d 	bl	9001f980 <EwNewSlot>
90022f46:	4622      	mov	r2, r4
90022f48:	e895 0003 	ldmia.w	r5, {r0, r1}
}
90022f4c:	b002      	add	sp, #8
90022f4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90022f52:	f7fc bd43 	b.w	9001f9dc <EwPostSignal>
  ((CoreView)_this)->_.VMT->ChangeViewState((CoreView)_this, aSetState, aClearState );
90022f56:	2240      	movs	r2, #64	; 0x40
90022f58:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90022f5a:	4798      	blx	r3
}
90022f5c:	e7db      	b.n	90022f16 <CoreGroup_ChangeViewState+0x1a>
90022f5e:	bf00      	nop
90022f60:	9002396d 	.word	0x9002396d

90022f64 <CoreRoot_ChangeViewState>:
{
90022f64:	b5f0      	push	{r4, r5, r6, r7, lr}
90022f66:	4604      	mov	r4, r0
90022f68:	b08f      	sub	sp, #60	; 0x3c
90022f6a:	460e      	mov	r6, r1
90022f6c:	4615      	mov	r5, r2
  CoreGroup_ChangeViewState((CoreGroup)_this, aSetState, aClearState );
90022f6e:	f7ff ffc5 	bl	90022efc <CoreGroup_ChangeViewState>
  if (( _this->Super3.Owner == 0 ) && ((( aSetState & CoreViewStateVisible ) == 
90022f72:	69a3      	ldr	r3, [r4, #24]
90022f74:	b10b      	cbz	r3, 90022f7a <CoreRoot_ChangeViewState+0x16>
}
90022f76:	b00f      	add	sp, #60	; 0x3c
90022f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
90022f7a:	4335      	orrs	r5, r6
      CoreViewStateVisible ) || (( aClearState & CoreViewStateVisible ) == CoreViewStateVisible )))
90022f7c:	07ea      	lsls	r2, r5, #31
90022f7e:	d51a      	bpl.n	90022fb6 <CoreRoot_ChangeViewState+0x52>
    CoreGroup__InvalidateArea( _this, EwGetRectORect( _this->Super2.Bounds ));
90022f80:	af02      	add	r7, sp, #8
90022f82:	6b22      	ldr	r2, [r4, #48]	; 0x30
90022f84:	f104 0324 	add.w	r3, r4, #36	; 0x24
90022f88:	ae0a      	add	r6, sp, #40	; 0x28
90022f8a:	4638      	mov	r0, r7
90022f8c:	9200      	str	r2, [sp, #0]
90022f8e:	cb0e      	ldmia	r3, {r1, r2, r3}
90022f90:	f7fb fd18 	bl	9001e9c4 <EwGetRectORect>
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022f94:	f8d4 c000 	ldr.w	ip, [r4]
90022f98:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90022f9c:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90022fa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022fa2:	4620      	mov	r0, r4
90022fa4:	9300      	str	r3, [sp, #0]
90022fa6:	f8dc 7060 	ldr.w	r7, [ip, #96]	; 0x60
90022faa:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90022fae:	47b8      	blx	r7
  if (( _this->Super3.Owner == 0 ) && ((( aSetState & CoreViewStateAlphaBlended ) 
90022fb0:	69a3      	ldr	r3, [r4, #24]
90022fb2:	2b00      	cmp	r3, #0
90022fb4:	d1df      	bne.n	90022f76 <CoreRoot_ChangeViewState+0x12>
      == CoreViewStateAlphaBlended ) || (( aClearState & CoreViewStateAlphaBlended ) 
90022fb6:	07ab      	lsls	r3, r5, #30
90022fb8:	d5dd      	bpl.n	90022f76 <CoreRoot_ChangeViewState+0x12>
    CoreGroup__InvalidateArea( _this, EwGetRectORect( _this->Super2.Bounds ));
90022fba:	6b22      	ldr	r2, [r4, #48]	; 0x30
90022fbc:	ae06      	add	r6, sp, #24
90022fbe:	f104 0324 	add.w	r3, r4, #36	; 0x24
90022fc2:	ad0a      	add	r5, sp, #40	; 0x28
90022fc4:	4630      	mov	r0, r6
90022fc6:	9200      	str	r2, [sp, #0]
90022fc8:	cb0e      	ldmia	r3, {r1, r2, r3}
90022fca:	f7fb fcfb 	bl	9001e9c4 <EwGetRectORect>
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90022fce:	6827      	ldr	r7, [r4, #0]
90022fd0:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90022fd4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90022fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90022fda:	4620      	mov	r0, r4
90022fdc:	9300      	str	r3, [sp, #0]
90022fde:	6e3c      	ldr	r4, [r7, #96]	; 0x60
90022fe0:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90022fe4:	47a0      	blx	r4
}
90022fe6:	b00f      	add	sp, #60	; 0x3c
90022fe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
90022fea:	bf00      	nop

90022fec <CoreRoot_DoesNeedUpdate.part.0>:
XBool CoreRoot_DoesNeedUpdate( CoreRoot _this )
90022fec:	b510      	push	{r4, lr}
90022fee:	b084      	sub	sp, #16
  overlayArea = EwGetOverlayArea( 0, 0 );
90022ff0:	2200      	movs	r2, #0
90022ff2:	466c      	mov	r4, sp
90022ff4:	4611      	mov	r1, r2
90022ff6:	4620      	mov	r0, r4
90022ff8:	f7ef fcfa 	bl	900129f0 <EwGetOverlayArea>
  if ( !EwIsRectEmpty( overlayArea ))
90022ffc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90023000:	f7fb fb9a 	bl	9001e738 <EwIsRectEmpty>
}
90023004:	fab0 f080 	clz	r0, r0
90023008:	0940      	lsrs	r0, r0, #5
9002300a:	b004      	add	sp, #16
9002300c:	bd10      	pop	{r4, pc}
9002300e:	bf00      	nop

90023010 <EwCheckIndex.part.0.constprop.0>:
  static int EwCheckIndex( int aIndex, int aRange, const char* aFile, int aLine )
90023010:	b500      	push	{lr}
90023012:	b083      	sub	sp, #12
90023014:	4603      	mov	r3, r0
      EwPrint( "[FATAL ERROR in %s:%d] Array index %d out of bounds %d",
90023016:	4805      	ldr	r0, [pc, #20]	; (9002302c <EwCheckIndex.part.0.constprop.0+0x1c>)
90023018:	9100      	str	r1, [sp, #0]
9002301a:	4905      	ldr	r1, [pc, #20]	; (90023030 <EwCheckIndex.part.0.constprop.0+0x20>)
9002301c:	f7f9 fde4 	bl	9001cbe8 <EwPrint>
  }
90023020:	b003      	add	sp, #12
90023022:	f85d eb04 	ldr.w	lr, [sp], #4
      EwPanic();
90023026:	f003 be49 	b.w	90026cbc <EwPanic>
9002302a:	bf00      	nop
9002302c:	900333c0 	.word	0x900333c0
90023030:	90033380 	.word	0x90033380

90023034 <CoreRoot_InvalidateArea>:
{
90023034:	b084      	sub	sp, #16
90023036:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002303a:	4604      	mov	r4, r0
9002303c:	b09f      	sub	sp, #124	; 0x7c
  if ( _this->updateLock > 0 )
9002303e:	f8d0 009c 	ldr.w	r0, [r0, #156]	; 0x9c
{
90023042:	ae29      	add	r6, sp, #164	; 0xa4
  if ( _this->updateLock > 0 )
90023044:	2800      	cmp	r0, #0
{
90023046:	e886 000e 	stmia.w	r6, {r1, r2, r3}
  if ( _this->updateLock > 0 )
9002304a:	dc6e      	bgt.n	9002312a <CoreRoot_InvalidateArea+0xf6>
  fullScreenUpdate = (XBool)EwFullScreenUpdate;
9002304c:	4bbf      	ldr	r3, [pc, #764]	; (9002334c <CoreRoot_InvalidateArea+0x318>)
  if ( fullScreenUpdate )
9002304e:	781b      	ldrb	r3, [r3, #0]
90023050:	2b00      	cmp	r3, #0
90023052:	d15e      	bne.n	90023112 <CoreRoot_InvalidateArea+0xde>
  if ( _this->Super3.Owner != 0 )
90023054:	69a3      	ldr	r3, [r4, #24]
90023056:	b15b      	cbz	r3, 90023070 <CoreRoot_InvalidateArea+0x3c>
    CoreGroup_InvalidateArea((CoreGroup)_this, aArea );
90023058:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002305a:	4620      	mov	r0, r4
9002305c:	9300      	str	r3, [sp, #0]
9002305e:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90023062:	f7ff fb43 	bl	900226ec <CoreGroup_InvalidateArea>
}
90023066:	b01f      	add	sp, #124	; 0x7c
90023068:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002306c:	b004      	add	sp, #16
9002306e:	4770      	bx	lr
  aArea = EwIntersectRect( EwMoveRectPos( aArea, _this->Super2.Bounds.Point1 ), 
90023070:	f104 0724 	add.w	r7, r4, #36	; 0x24
90023074:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023076:	f10d 0a04 	add.w	sl, sp, #4
9002307a:	f10d 0848 	add.w	r8, sp, #72	; 0x48
9002307e:	e897 0003 	ldmia.w	r7, {r0, r1}
90023082:	e88a 0003 	stmia.w	sl, {r0, r1}
90023086:	4640      	mov	r0, r8
90023088:	9300      	str	r3, [sp, #0]
9002308a:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
9002308e:	f7fb fc56 	bl	9001e93e <EwMoveRectPos>
90023092:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023094:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90023098:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
9002309c:	4630      	mov	r0, r6
9002309e:	e898 000e 	ldmia.w	r8, {r1, r2, r3}
900230a2:	9500      	str	r5, [sp, #0]
900230a4:	f7fb fb6e 	bl	9001e784 <EwIntersectRect>
  if ( EwIsRectEmpty( aArea ))
900230a8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900230ac:	f7fb fb44 	bl	9001e738 <EwIsRectEmpty>
900230b0:	2800      	cmp	r0, #0
900230b2:	d1d8      	bne.n	90023066 <CoreRoot_InvalidateArea+0x32>
  for ( i = 0; i < _this->noOfRegions; i = i + 1 )
900230b4:	f8d4 53dc 	ldr.w	r5, [r4, #988]	; 0x3dc
900230b8:	2d00      	cmp	r5, #0
900230ba:	46a9      	mov	r9, r5
900230bc:	f340 81a0 	ble.w	90023400 <CoreRoot_InvalidateArea+0x3cc>
900230c0:	4607      	mov	r7, r0
900230c2:	f10d 0858 	add.w	r8, sp, #88	; 0x58
    if ( !EwIsRectEmpty( EwIntersectRect( _this->regions[ EwCheckIndex( i, 4 )], 
900230c6:	eb04 1507 	add.w	r5, r4, r7, lsl #4
900230ca:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900230ce:	f505 7966 	add.w	r9, r5, #920	; 0x398
900230d2:	f505 7567 	add.w	r5, r5, #924	; 0x39c
900230d6:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
900230da:	f8d9 3010 	ldr.w	r3, [r9, #16]
900230de:	4640      	mov	r0, r8
900230e0:	9300      	str	r3, [sp, #0]
900230e2:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
900230e6:	f7fb fb4d 	bl	9001e784 <EwIntersectRect>
900230ea:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900230ee:	f7fb fb23 	bl	9001e738 <EwIsRectEmpty>
900230f2:	b318      	cbz	r0, 9002313c <CoreRoot_InvalidateArea+0x108>
  for ( i = 0; i < _this->noOfRegions; i = i + 1 )
900230f4:	f8d4 53dc 	ldr.w	r5, [r4, #988]	; 0x3dc
900230f8:	3701      	adds	r7, #1
900230fa:	42bd      	cmp	r5, r7
900230fc:	46a9      	mov	r9, r5
900230fe:	dd39      	ble.n	90023174 <CoreRoot_InvalidateArea+0x140>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023100:	2f03      	cmp	r7, #3
90023102:	dde0      	ble.n	900230c6 <CoreRoot_InvalidateArea+0x92>
90023104:	2104      	movs	r1, #4
90023106:	f44f 62d9 	mov.w	r2, #1736	; 0x6c8
9002310a:	4608      	mov	r0, r1
9002310c:	f7ff ff80 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023110:	e7d9      	b.n	900230c6 <CoreRoot_InvalidateArea+0x92>
    aArea = EwGetRectORect( _this->Super2.Bounds );
90023112:	6b22      	ldr	r2, [r4, #48]	; 0x30
90023114:	f104 0324 	add.w	r3, r4, #36	; 0x24
90023118:	4630      	mov	r0, r6
9002311a:	9200      	str	r2, [sp, #0]
9002311c:	cb0e      	ldmia	r3, {r1, r2, r3}
9002311e:	f7fb fc51 	bl	9001e9c4 <EwGetRectORect>
  if ( _this->Super3.Owner != 0 )
90023122:	69a3      	ldr	r3, [r4, #24]
90023124:	2b00      	cmp	r3, #0
90023126:	d197      	bne.n	90023058 <CoreRoot_InvalidateArea+0x24>
90023128:	e7a2      	b.n	90023070 <CoreRoot_InvalidateArea+0x3c>
    EwThrow( EwLoadString( &_Const0006 ));
9002312a:	4889      	ldr	r0, [pc, #548]	; (90023350 <CoreRoot_InvalidateArea+0x31c>)
9002312c:	f7fd fd56 	bl	90020bdc <EwLoadString>
}
90023130:	b01f      	add	sp, #124	; 0x7c
90023132:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023136:	b004      	add	sp, #16
    EwThrow( EwLoadString( &_Const0006 ));
90023138:	f7fa b97e 	b.w	9001d438 <EwThrow>
      _this->regions[ EwCheckIndex( i, 4 )] = EwUnionRect( _this->regions[ EwCheckIndex( 
9002313c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90023140:	ae0e      	add	r6, sp, #56	; 0x38
      _this->regionsArea[ EwCheckIndex( i, 4 )] = EwGetRectArea( _this->regions[ 
90023142:	eb04 0487 	add.w	r4, r4, r7, lsl #2
      _this->regions[ EwCheckIndex( i, 4 )] = EwUnionRect( _this->regions[ EwCheckIndex( 
90023146:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
9002314a:	f8d9 3010 	ldr.w	r3, [r9, #16]
9002314e:	4630      	mov	r0, r6
90023150:	9300      	str	r3, [sp, #0]
90023152:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90023156:	f7fb fb4e 	bl	9001e7f6 <EwUnionRect>
9002315a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9002315e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
      _this->regionsArea[ EwCheckIndex( i, 4 )] = EwGetRectArea( _this->regions[ 
90023162:	f7fb fc14 	bl	9001e98e <EwGetRectArea>
90023166:	f8c4 038c 	str.w	r0, [r4, #908]	; 0x38c
}
9002316a:	b01f      	add	sp, #124	; 0x7c
9002316c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023170:	b004      	add	sp, #16
90023172:	4770      	bx	lr
  if ( _this->noOfRegions < 3 )
90023174:	2d02      	cmp	r5, #2
90023176:	f340 8143 	ble.w	90023400 <CoreRoot_InvalidateArea+0x3cc>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
9002317a:	2d04      	cmp	r5, #4
9002317c:	f000 8130 	beq.w	900233e0 <CoreRoot_InvalidateArea+0x3ac>
  _this->regions[ EwCheckIndex( _this->noOfRegions, 4 )] = aArea;
90023180:	eb04 1909 	add.w	r9, r4, r9, lsl #4
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023184:	2d03      	cmp	r5, #3
  _this->regions[ EwCheckIndex( _this->noOfRegions, 4 )] = aArea;
90023186:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9002318a:	f509 7967 	add.w	r9, r9, #924	; 0x39c
9002318e:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023192:	f200 811e 	bhi.w	900233d2 <CoreRoot_InvalidateArea+0x39e>
  _this->regionsArea[ EwCheckIndex( _this->noOfRegions, 4 )] = EwGetRectArea( aArea );
90023196:	eb04 0585 	add.w	r5, r4, r5, lsl #2
  for ( j = 0; j <= _this->noOfRegions; j = j + 1 )
9002319a:	2700      	movs	r7, #0
  _this->regionsArea[ EwCheckIndex( _this->noOfRegions, 4 )] = EwGetRectArea( aArea );
9002319c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900231a0:	f7fb fbf5 	bl	9001e98e <EwGetRectArea>
  for ( j = 0; j <= _this->noOfRegions; j = j + 1 )
900231a4:	f8d4 33dc 	ldr.w	r3, [r4, #988]	; 0x3dc
  _this->regionsArea[ EwCheckIndex( _this->noOfRegions, 4 )] = EwGetRectArea( aArea );
900231a8:	f8c5 038c 	str.w	r0, [r5, #908]	; 0x38c
  for ( j = 0; j <= _this->noOfRegions; j = j + 1 )
900231ac:	2b00      	cmp	r3, #0
900231ae:	f2c0 8141 	blt.w	90023434 <CoreRoot_InvalidateArea+0x400>
900231b2:	f504 7263 	add.w	r2, r4, #908	; 0x38c
900231b6:	f10d 0b68 	add.w	fp, sp, #104	; 0x68
  kk = 0;
900231ba:	9707      	str	r7, [sp, #28]
900231bc:	9206      	str	r2, [sp, #24]
  best = 2147483647;
900231be:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
  jj = 0;
900231c2:	9709      	str	r7, [sp, #36]	; 0x24
900231c4:	4691      	mov	r9, r2
900231c6:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
900231ca:	463a      	mov	r2, r7
900231cc:	970b      	str	r7, [sp, #44]	; 0x2c
    for ( k = j + 1; k <= _this->noOfRegions; k = k + 1 )
900231ce:	3701      	adds	r7, #1
900231d0:	42bb      	cmp	r3, r7
900231d2:	db5e      	blt.n	90023292 <CoreRoot_InvalidateArea+0x25e>
900231d4:	9b06      	ldr	r3, [sp, #24]
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
900231d6:	eb04 1a02 	add.w	sl, r4, r2, lsl #4
    for ( k = j + 1; k <= _this->noOfRegions; k = k + 1 )
900231da:	463d      	mov	r5, r7
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
900231dc:	970d      	str	r7, [sp, #52]	; 0x34
900231de:	3304      	adds	r3, #4
    for ( k = j + 1; k <= _this->noOfRegions; k = k + 1 )
900231e0:	4698      	mov	r8, r3
900231e2:	930c      	str	r3, [sp, #48]	; 0x30
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
900231e4:	f50a 7367 	add.w	r3, sl, #924	; 0x39c
900231e8:	9308      	str	r3, [sp, #32]
900231ea:	eb04 1305 	add.w	r3, r4, r5, lsl #4
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
900231ee:	2d03      	cmp	r5, #3
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
900231f0:	f503 7367 	add.w	r3, r3, #924	; 0x39c
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
900231f4:	d828      	bhi.n	90023248 <CoreRoot_InvalidateArea+0x214>
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
900231f6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
900231f8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900231fa:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
900231fe:	f8da 33a8 	ldr.w	r3, [sl, #936]	; 0x3a8
90023202:	4658      	mov	r0, fp
90023204:	9300      	str	r3, [sp, #0]
90023206:	9b08      	ldr	r3, [sp, #32]
90023208:	cb0e      	ldmia	r3, {r1, r2, r3}
9002320a:	f7fb faf4 	bl	9001e7f6 <EwUnionRect>
9002320e:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
90023212:	f7fb fbbc 	bl	9001e98e <EwGetRectArea>
      XInt32 overhead = ( unionArea << 8 ) / ( _this->regionsArea[ EwCheckIndex( 
90023216:	9b06      	ldr	r3, [sp, #24]
90023218:	0206      	lsls	r6, r0, #8
9002321a:	681f      	ldr	r7, [r3, #0]
        j, 4 )] + _this->regionsArea[ EwCheckIndex( k, 4 )]);
9002321c:	f858 3b04 	ldr.w	r3, [r8], #4
90023220:	443b      	add	r3, r7
      XInt32 overhead = ( unionArea << 8 ) / ( _this->regionsArea[ EwCheckIndex( 
90023222:	fb96 f6f3 	sdiv	r6, r6, r3
      if ( overhead < best )
90023226:	454e      	cmp	r6, r9
90023228:	da03      	bge.n	90023232 <CoreRoot_InvalidateArea+0x1fe>
9002322a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002322c:	46b1      	mov	r9, r6
9002322e:	9507      	str	r5, [sp, #28]
90023230:	9309      	str	r3, [sp, #36]	; 0x24
    for ( k = j + 1; k <= _this->noOfRegions; k = k + 1 )
90023232:	3501      	adds	r5, #1
90023234:	f8d4 33dc 	ldr.w	r3, [r4, #988]	; 0x3dc
90023238:	42ab      	cmp	r3, r5
9002323a:	dad6      	bge.n	900231ea <CoreRoot_InvalidateArea+0x1b6>
9002323c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
  for ( j = 0; j <= _this->noOfRegions; j = j + 1 )
9002323e:	42bb      	cmp	r3, r7
90023240:	db27      	blt.n	90023292 <CoreRoot_InvalidateArea+0x25e>
90023242:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90023244:	9206      	str	r2, [sp, #24]
90023246:	e7c0      	b.n	900231ca <CoreRoot_InvalidateArea+0x196>
90023248:	4628      	mov	r0, r5
9002324a:	f240 62e5 	movw	r2, #1765	; 0x6e5
9002324e:	2104      	movs	r1, #4
90023250:	f7ff fede 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023254:	9e0a      	ldr	r6, [sp, #40]	; 0x28
90023256:	eb04 1305 	add.w	r3, r4, r5, lsl #4
9002325a:	f503 7367 	add.w	r3, r3, #924	; 0x39c
9002325e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023260:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023264:	f8da 33a8 	ldr.w	r3, [sl, #936]	; 0x3a8
90023268:	4658      	mov	r0, fp
9002326a:	9300      	str	r3, [sp, #0]
9002326c:	9b08      	ldr	r3, [sp, #32]
9002326e:	cb0e      	ldmia	r3, {r1, r2, r3}
90023270:	f7fb fac1 	bl	9001e7f6 <EwUnionRect>
90023274:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
90023278:	f7fb fb89 	bl	9001e98e <EwGetRectArea>
      XInt32 overhead = ( unionArea << 8 ) / ( _this->regionsArea[ EwCheckIndex( 
9002327c:	9b06      	ldr	r3, [sp, #24]
      XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
9002327e:	4606      	mov	r6, r0
      XInt32 overhead = ( unionArea << 8 ) / ( _this->regionsArea[ EwCheckIndex( 
90023280:	f240 62e7 	movw	r2, #1767	; 0x6e7
90023284:	2104      	movs	r1, #4
90023286:	4628      	mov	r0, r5
90023288:	0236      	lsls	r6, r6, #8
9002328a:	681f      	ldr	r7, [r3, #0]
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
9002328c:	f7ff fec0 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023290:	e7c4      	b.n	9002321c <CoreRoot_InvalidateArea+0x1e8>
90023292:	e9dd 3a09 	ldrd	r3, sl, [sp, #36]	; 0x24
90023296:	2b03      	cmp	r3, #3
90023298:	d85c      	bhi.n	90023354 <CoreRoot_InvalidateArea+0x320>
9002329a:	9b07      	ldr	r3, [sp, #28]
9002329c:	2b03      	cmp	r3, #3
9002329e:	f240 8106 	bls.w	900234ae <CoreRoot_InvalidateArea+0x47a>
900232a2:	f240 62f2 	movw	r2, #1778	; 0x6f2
900232a6:	2104      	movs	r1, #4
900232a8:	9807      	ldr	r0, [sp, #28]
900232aa:	2701      	movs	r7, #1
900232ac:	f7ff feb0 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
  _this->regions[ EwCheckIndex( jj, 4 )] = EwUnionRect( _this->regions[ EwCheckIndex( 
900232b0:	9b07      	ldr	r3, [sp, #28]
900232b2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900232b6:	9a09      	ldr	r2, [sp, #36]	; 0x24
900232b8:	eb04 1303 	add.w	r3, r4, r3, lsl #4
900232bc:	eb04 1602 	add.w	r6, r4, r2, lsl #4
900232c0:	f503 7367 	add.w	r3, r3, #924	; 0x39c
900232c4:	0115      	lsls	r5, r2, #4
900232c6:	f506 7967 	add.w	r9, r6, #924	; 0x39c
900232ca:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900232cc:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
900232d0:	f8d6 33a8 	ldr.w	r3, [r6, #936]	; 0x3a8
900232d4:	4640      	mov	r0, r8
900232d6:	9300      	str	r3, [sp, #0]
900232d8:	e899 000e 	ldmia.w	r9, {r1, r2, r3}
900232dc:	f7fb fa8b 	bl	9001e7f6 <EwUnionRect>
900232e0:	9b07      	ldr	r3, [sp, #28]
900232e2:	011e      	lsls	r6, r3, #4
900232e4:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900232e8:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
  _this->regionsArea[ EwCheckIndex( jj, 4 )] = EwGetRectArea( _this->regions[ EwCheckIndex( 
900232ec:	1963      	adds	r3, r4, r5
900232ee:	f503 7367 	add.w	r3, r3, #924	; 0x39c
900232f2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
900232f4:	f7fb fb4b 	bl	9001e98e <EwGetRectArea>
900232f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  if ( kk != _this->noOfRegions )
900232fa:	f8d4 53dc 	ldr.w	r5, [r4, #988]	; 0x3dc
  _this->regionsArea[ EwCheckIndex( jj, 4 )] = EwGetRectArea( _this->regions[ EwCheckIndex( 
900232fe:	eb04 0383 	add.w	r3, r4, r3, lsl #2
90023302:	f8c3 038c 	str.w	r0, [r3, #908]	; 0x38c
  if ( kk != _this->noOfRegions )
90023306:	9b07      	ldr	r3, [sp, #28]
90023308:	429d      	cmp	r5, r3
9002330a:	f43f aeac 	beq.w	90023066 <CoreRoot_InvalidateArea+0x32>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
9002330e:	2d03      	cmp	r5, #3
90023310:	d86f      	bhi.n	900233f2 <CoreRoot_InvalidateArea+0x3be>
90023312:	2f00      	cmp	r7, #0
90023314:	f040 8091 	bne.w	9002343a <CoreRoot_InvalidateArea+0x406>
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
90023318:	eb04 1505 	add.w	r5, r4, r5, lsl #4
    _this->regionsArea[ EwCheckIndex( kk, 4 )] = _this->regionsArea[ EwCheckIndex( 
9002331c:	f8d4 73dc 	ldr.w	r7, [r4, #988]	; 0x3dc
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
90023320:	4426      	add	r6, r4
90023322:	f505 7567 	add.w	r5, r5, #924	; 0x39c
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023326:	2f03      	cmp	r7, #3
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
90023328:	f506 7667 	add.w	r6, r6, #924	; 0x39c
9002332c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90023330:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023334:	f200 80ac 	bhi.w	90023490 <CoreRoot_InvalidateArea+0x45c>
    _this->regionsArea[ EwCheckIndex( kk, 4 )] = _this->regionsArea[ EwCheckIndex( 
90023338:	eb04 0787 	add.w	r7, r4, r7, lsl #2
9002333c:	9b07      	ldr	r3, [sp, #28]
9002333e:	eb04 0483 	add.w	r4, r4, r3, lsl #2
90023342:	f8d7 338c 	ldr.w	r3, [r7, #908]	; 0x38c
90023346:	f8c4 338c 	str.w	r3, [r4, #908]	; 0x38c
9002334a:	e68c      	b.n	90023066 <CoreRoot_InvalidateArea+0x32>
9002334c:	200001b8 	.word	0x200001b8
90023350:	9003351c 	.word	0x9003351c
90023354:	4618      	mov	r0, r3
90023356:	f240 62f1 	movw	r2, #1777	; 0x6f1
9002335a:	2104      	movs	r1, #4
9002335c:	f7ff fe58 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023360:	9b07      	ldr	r3, [sp, #28]
90023362:	2b03      	cmp	r3, #3
90023364:	f200 809b 	bhi.w	9002349e <CoreRoot_InvalidateArea+0x46a>
90023368:	2700      	movs	r7, #0
9002336a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002336c:	f240 62f1 	movw	r2, #1777	; 0x6f1
90023370:	2104      	movs	r1, #4
  _this->regions[ EwCheckIndex( jj, 4 )] = EwUnionRect( _this->regions[ EwCheckIndex( 
90023372:	f10d 0838 	add.w	r8, sp, #56	; 0x38
90023376:	4628      	mov	r0, r5
90023378:	eb04 1605 	add.w	r6, r4, r5, lsl #4
9002337c:	f7ff fe48 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023380:	9b07      	ldr	r3, [sp, #28]
90023382:	f506 7967 	add.w	r9, r6, #924	; 0x39c
90023386:	9509      	str	r5, [sp, #36]	; 0x24
90023388:	eb04 1303 	add.w	r3, r4, r3, lsl #4
9002338c:	012d      	lsls	r5, r5, #4
9002338e:	f503 7367 	add.w	r3, r3, #924	; 0x39c
90023392:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023394:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
90023398:	f8d6 33a8 	ldr.w	r3, [r6, #936]	; 0x3a8
9002339c:	4640      	mov	r0, r8
9002339e:	9300      	str	r3, [sp, #0]
900233a0:	e899 000e 	ldmia.w	r9, {r1, r2, r3}
900233a4:	f7fb fa27 	bl	9001e7f6 <EwUnionRect>
900233a8:	9b07      	ldr	r3, [sp, #28]
900233aa:	011e      	lsls	r6, r3, #4
900233ac:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900233b0:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
900233b4:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
900233b8:	4640      	mov	r0, r8
900233ba:	f240 62f3 	movw	r2, #1779	; 0x6f3
900233be:	2104      	movs	r1, #4
900233c0:	f7ff fe26 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900233c4:	f240 62f3 	movw	r2, #1779	; 0x6f3
900233c8:	2104      	movs	r1, #4
900233ca:	4640      	mov	r0, r8
900233cc:	f7ff fe20 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900233d0:	e78c      	b.n	900232ec <CoreRoot_InvalidateArea+0x2b8>
900233d2:	f240 62df 	movw	r2, #1759	; 0x6df
900233d6:	2104      	movs	r1, #4
900233d8:	4628      	mov	r0, r5
900233da:	f7ff fe19 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900233de:	e6da      	b.n	90023196 <CoreRoot_InvalidateArea+0x162>
900233e0:	4629      	mov	r1, r5
900233e2:	4628      	mov	r0, r5
900233e4:	f240 62de 	movw	r2, #1758	; 0x6de
900233e8:	f7ff fe12 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900233ec:	f8d4 53dc 	ldr.w	r5, [r4, #988]	; 0x3dc
900233f0:	e6c6      	b.n	90023180 <CoreRoot_InvalidateArea+0x14c>
900233f2:	f44f 62df 	mov.w	r2, #1784	; 0x6f8
900233f6:	2104      	movs	r1, #4
900233f8:	4628      	mov	r0, r5
900233fa:	f7ff fe09 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900233fe:	e788      	b.n	90023312 <CoreRoot_InvalidateArea+0x2de>
90023400:	2d00      	cmp	r5, #0
90023402:	db3c      	blt.n	9002347e <CoreRoot_InvalidateArea+0x44a>
    _this->regions[ EwCheckIndex( _this->noOfRegions, 4 )] = aArea;
90023404:	eb04 1909 	add.w	r9, r4, r9, lsl #4
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023408:	2d03      	cmp	r5, #3
    _this->regions[ EwCheckIndex( _this->noOfRegions, 4 )] = aArea;
9002340a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9002340e:	f509 7967 	add.w	r9, r9, #924	; 0x39c
90023412:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023416:	d82b      	bhi.n	90023470 <CoreRoot_InvalidateArea+0x43c>
    _this->regionsArea[ EwCheckIndex( _this->noOfRegions, 4 )] = EwGetRectArea( 
90023418:	eb04 0585 	add.w	r5, r4, r5, lsl #2
9002341c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90023420:	f7fb fab5 	bl	9001e98e <EwGetRectArea>
    _this->noOfRegions = _this->noOfRegions + 1;
90023424:	f8d4 33dc 	ldr.w	r3, [r4, #988]	; 0x3dc
    _this->regionsArea[ EwCheckIndex( _this->noOfRegions, 4 )] = EwGetRectArea( 
90023428:	f8c5 038c 	str.w	r0, [r5, #908]	; 0x38c
    _this->noOfRegions = _this->noOfRegions + 1;
9002342c:	3301      	adds	r3, #1
9002342e:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
    return;
90023432:	e618      	b.n	90023066 <CoreRoot_InvalidateArea+0x32>
  kk = 0;
90023434:	9707      	str	r7, [sp, #28]
  jj = 0;
90023436:	9709      	str	r7, [sp, #36]	; 0x24
90023438:	e73a      	b.n	900232b0 <CoreRoot_InvalidateArea+0x27c>
9002343a:	f44f 62df 	mov.w	r2, #1784	; 0x6f8
9002343e:	2104      	movs	r1, #4
90023440:	9807      	ldr	r0, [sp, #28]
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
90023442:	4426      	add	r6, r4
90023444:	f7ff fde4 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
    _this->regionsArea[ EwCheckIndex( kk, 4 )] = _this->regionsArea[ EwCheckIndex( 
90023448:	f8d4 73dc 	ldr.w	r7, [r4, #988]	; 0x3dc
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
9002344c:	eb04 1305 	add.w	r3, r4, r5, lsl #4
90023450:	f506 7567 	add.w	r5, r6, #924	; 0x39c
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023454:	2f03      	cmp	r7, #3
    _this->regions[ EwCheckIndex( kk, 4 )] = _this->regions[ EwCheckIndex( _this->noOfRegions, 
90023456:	f503 7367 	add.w	r3, r3, #924	; 0x39c
9002345a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
9002345c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023460:	d827      	bhi.n	900234b2 <CoreRoot_InvalidateArea+0x47e>
90023462:	f240 62fa 	movw	r2, #1786	; 0x6fa
90023466:	2104      	movs	r1, #4
90023468:	9807      	ldr	r0, [sp, #28]
9002346a:	f7ff fdd1 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002346e:	e763      	b.n	90023338 <CoreRoot_InvalidateArea+0x304>
90023470:	f240 62d5 	movw	r2, #1749	; 0x6d5
90023474:	2104      	movs	r1, #4
90023476:	4628      	mov	r0, r5
90023478:	f7ff fdca 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002347c:	e7cc      	b.n	90023418 <CoreRoot_InvalidateArea+0x3e4>
9002347e:	4628      	mov	r0, r5
90023480:	f240 62d4 	movw	r2, #1748	; 0x6d4
90023484:	2104      	movs	r1, #4
90023486:	f7ff fdc3 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002348a:	f8d4 53dc 	ldr.w	r5, [r4, #988]	; 0x3dc
9002348e:	e7b9      	b.n	90023404 <CoreRoot_InvalidateArea+0x3d0>
90023490:	f240 62fa 	movw	r2, #1786	; 0x6fa
90023494:	2104      	movs	r1, #4
90023496:	4638      	mov	r0, r7
90023498:	f7ff fdba 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002349c:	e74c      	b.n	90023338 <CoreRoot_InvalidateArea+0x304>
9002349e:	f240 62f2 	movw	r2, #1778	; 0x6f2
900234a2:	2104      	movs	r1, #4
900234a4:	9807      	ldr	r0, [sp, #28]
900234a6:	2701      	movs	r7, #1
900234a8:	f7ff fdb2 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900234ac:	e75d      	b.n	9002336a <CoreRoot_InvalidateArea+0x336>
900234ae:	2700      	movs	r7, #0
900234b0:	e6fe      	b.n	900232b0 <CoreRoot_InvalidateArea+0x27c>
900234b2:	f240 62fa 	movw	r2, #1786	; 0x6fa
900234b6:	2104      	movs	r1, #4
900234b8:	4638      	mov	r0, r7
900234ba:	f7ff fda9 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
900234be:	e7d0      	b.n	90023462 <CoreRoot_InvalidateArea+0x42e>

900234c0 <CoreOutline_Draw>:
900234c0:	b082      	sub	sp, #8
900234c2:	e88d 000c 	stmia.w	sp, {r2, r3}
900234c6:	b002      	add	sp, #8
900234c8:	4770      	bx	lr
900234ca:	bf00      	nop

900234cc <CoreRectView__OnSetBounds>:
{
900234cc:	b084      	sub	sp, #16
900234ce:	b570      	push	{r4, r5, r6, lr}
900234d0:	b082      	sub	sp, #8
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900234d2:	6805      	ldr	r5, [r0, #0]
900234d4:	9e0a      	ldr	r6, [sp, #40]	; 0x28
{
900234d6:	ac07      	add	r4, sp, #28
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900234d8:	9600      	str	r6, [sp, #0]
900234da:	6d2d      	ldr	r5, [r5, #80]	; 0x50
{
900234dc:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900234e0:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
900234e4:	47a8      	blx	r5
}
900234e6:	b002      	add	sp, #8
900234e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900234ec:	b004      	add	sp, #16
900234ee:	4770      	bx	lr

900234f0 <CoreGroup_drawContent>:
{
900234f0:	b082      	sub	sp, #8
900234f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900234f6:	ed2d 8b02 	vpush	{d8}
900234fa:	b0ad      	sub	sp, #180	; 0xb4
900234fc:	ee08 1a10 	vmov	s16, r1
  XRect clip = _Const0001;
90023500:	2500      	movs	r5, #0
  CoreView view = _this->first;
90023502:	6b44      	ldr	r4, [r0, #52]	; 0x34
{
90023504:	a938      	add	r1, sp, #224	; 0xe0
  XRect clip = _Const0001;
90023506:	f10d 0930 	add.w	r9, sp, #48	; 0x30
9002350a:	950c      	str	r5, [sp, #48]	; 0x30
9002350c:	f8c9 5004 	str.w	r5, [r9, #4]
{
90023510:	e881 000c 	stmia.w	r1, {r2, r3}
90023514:	f89d 30fc 	ldrb.w	r3, [sp, #252]	; 0xfc
  XRect clip = _Const0001;
90023518:	e9c9 5502 	strd	r5, r5, [r9, #8]
{
9002351c:	9309      	str	r3, [sp, #36]	; 0x24
  while ( view != 0 )
9002351e:	2c00      	cmp	r4, #0
90023520:	f000 80a1 	beq.w	90023666 <CoreGroup_drawContent+0x176>
  XBool outlineVisible = 1;
90023524:	2301      	movs	r3, #1
      CoreOutline outlineView = EwCastObject( view, CoreOutline );
90023526:	f8df 814c 	ldr.w	r8, [pc, #332]	; 90023674 <CoreGroup_drawContent+0x184>
      clip = EwIntersectRect( aClip, EwMoveRectPos( outlineView->Super1.Bounds, 
9002352a:	ad01      	add	r5, sp, #4
  XBool outlineVisible = 1;
9002352c:	9307      	str	r3, [sp, #28]
      clip = EwIntersectRect( aClip, EwMoveRectPos( outlineView->Super1.Bounds, 
9002352e:	ab14      	add	r3, sp, #80	; 0x50
90023530:	9308      	str	r3, [sp, #32]
90023532:	e051      	b.n	900235d8 <CoreGroup_drawContent+0xe8>
    if ((( view->viewState & CoreViewStateVisible ) == CoreViewStateVisible ))
90023534:	07da      	lsls	r2, r3, #31
90023536:	d54c      	bpl.n	900235d2 <CoreGroup_drawContent+0xe2>
      if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90023538:	055b      	lsls	r3, r3, #21
9002353a:	d575      	bpl.n	90023628 <CoreGroup_drawContent+0x138>
        if ( outlineVisible )
9002353c:	9b07      	ldr	r3, [sp, #28]
9002353e:	2b00      	cmp	r3, #0
90023540:	d047      	beq.n	900235d2 <CoreGroup_drawContent+0xe2>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90023542:	ab18      	add	r3, sp, #96	; 0x60
90023544:	6822      	ldr	r2, [r4, #0]
          XRect area = EwIntersectRect( EwMoveRectPos( CoreView__GetExtent( view ), 
90023546:	f10d 0bf0 	add.w	fp, sp, #240	; 0xf0
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
9002354a:	4621      	mov	r1, r4
9002354c:	4618      	mov	r0, r3
9002354e:	6c92      	ldr	r2, [r2, #72]	; 0x48
90023550:	4790      	blx	r2
          XRect area = EwIntersectRect( EwMoveRectPos( CoreView__GetExtent( view ), 
90023552:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
90023556:	ab18      	add	r3, sp, #96	; 0x60
90023558:	ae10      	add	r6, sp, #64	; 0x40
9002355a:	e89b 0003 	ldmia.w	fp, {r0, r1}
9002355e:	e885 0003 	stmia.w	r5, {r0, r1}
90023562:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
90023564:	4650      	mov	r0, sl
90023566:	cb0e      	ldmia	r3, {r1, r2, r3}
90023568:	9700      	str	r7, [sp, #0]
9002356a:	f7fb f9e8 	bl	9001e93e <EwMoveRectPos>
9002356e:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
90023572:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90023576:	4630      	mov	r0, r6
90023578:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
9002357a:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
        XRect area = EwIntersectRect( EwMoveRectPos( CoreView__GetExtent( view ), 
9002357e:	9700      	str	r7, [sp, #0]
90023580:	f7fb f900 	bl	9001e784 <EwIntersectRect>
        if ( !EwIsRectEmpty( area ))
90023584:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90023588:	f7fb f8d6 	bl	9001e738 <EwIsRectEmpty>
9002358c:	bb08      	cbnz	r0, 900235d2 <CoreGroup_drawContent+0xe2>
          CoreView__Draw( view, aCanvas, area, aOffset, aOpacity, aBlend );
9002358e:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
  ((CoreView)_this)->_.VMT->Draw((CoreView)_this, aCanvas, aClip, aOffset, aOpacity
90023592:	f8d4 a000 	ldr.w	sl, [r4]
90023596:	f10d 0e28 	add.w	lr, sp, #40	; 0x28
9002359a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
9002359e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
900235a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
900235a4:	ae02      	add	r6, sp, #8
900235a6:	e89b 0003 	ldmia.w	fp, {r0, r1}
900235aa:	9305      	str	r3, [sp, #20]
900235ac:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
900235ae:	9304      	str	r3, [sp, #16]
900235b0:	e88e 0003 	stmia.w	lr, {r0, r1}
900235b4:	e89c 000c 	ldmia.w	ip, {r2, r3}
900235b8:	e886 0003 	stmia.w	r6, {r0, r1}
900235bc:	a92c      	add	r1, sp, #176	; 0xb0
900235be:	e911 0003 	ldmdb	r1, {r0, r1}
900235c2:	e88d 0003 	stmia.w	sp, {r0, r1}
900235c6:	ee18 1a10 	vmov	r1, s16
900235ca:	f8da 6038 	ldr.w	r6, [sl, #56]	; 0x38
900235ce:	4620      	mov	r0, r4
900235d0:	47b0      	blx	r6
    view = view->next;
900235d2:	6924      	ldr	r4, [r4, #16]
  while ( view != 0 )
900235d4:	2c00      	cmp	r4, #0
900235d6:	d046      	beq.n	90023666 <CoreGroup_drawContent+0x176>
    if ((( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
900235d8:	6a23      	ldr	r3, [r4, #32]
900235da:	0599      	lsls	r1, r3, #22
900235dc:	d5aa      	bpl.n	90023534 <CoreGroup_drawContent+0x44>
      CoreOutline outlineView = EwCastObject( view, CoreOutline );
900235de:	4641      	mov	r1, r8
900235e0:	4620      	mov	r0, r4
900235e2:	f7fa fd19 	bl	9001e018 <EwCastObject>
      clip = EwIntersectRect( aClip, EwMoveRectPos( outlineView->Super1.Bounds, 
900235e6:	993d      	ldr	r1, [sp, #244]	; 0xf4
      CoreOutline outlineView = EwCastObject( view, CoreOutline );
900235e8:	4682      	mov	sl, r0
      clip = EwIntersectRect( aClip, EwMoveRectPos( outlineView->Super1.Bounds, 
900235ea:	983c      	ldr	r0, [sp, #240]	; 0xf0
900235ec:	f10a 0324 	add.w	r3, sl, #36	; 0x24
900235f0:	e885 0003 	stmia.w	r5, {r0, r1}
900235f4:	f8da 2030 	ldr.w	r2, [sl, #48]	; 0x30
900235f8:	9f08      	ldr	r7, [sp, #32]
900235fa:	9200      	str	r2, [sp, #0]
900235fc:	4638      	mov	r0, r7
900235fe:	cb0e      	ldmia	r3, {r1, r2, r3}
90023600:	f7fb f99d 	bl	9001e93e <EwMoveRectPos>
90023604:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90023606:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9002360a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9002360e:	ab38      	add	r3, sp, #224	; 0xe0
90023610:	9600      	str	r6, [sp, #0]
90023612:	4648      	mov	r0, r9
90023614:	cb0e      	ldmia	r3, {r1, r2, r3}
90023616:	f7fb f8b5 	bl	9001e784 <EwIntersectRect>
      == CoreViewStateVisible );
9002361a:	f8da 2020 	ldr.w	r2, [sl, #32]
9002361e:	6a23      	ldr	r3, [r4, #32]
      outlineVisible = (( outlineView->Super2.viewState & CoreViewStateVisible ) 
90023620:	f002 0201 	and.w	r2, r2, #1
90023624:	9207      	str	r2, [sp, #28]
90023626:	e785      	b.n	90023534 <CoreGroup_drawContent+0x44>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90023628:	ab20      	add	r3, sp, #128	; 0x80
9002362a:	6822      	ldr	r2, [r4, #0]
        XRect area = EwIntersectRect( EwMoveRectPos( CoreView__GetExtent( view ), 
9002362c:	f10d 0bf0 	add.w	fp, sp, #240	; 0xf0
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90023630:	4621      	mov	r1, r4
90023632:	4618      	mov	r0, r3
90023634:	6c92      	ldr	r2, [r2, #72]	; 0x48
90023636:	4790      	blx	r2
        XRect area = EwIntersectRect( EwMoveRectPos( CoreView__GetExtent( view ), 
90023638:	f10d 0a90 	add.w	sl, sp, #144	; 0x90
9002363c:	ab20      	add	r3, sp, #128	; 0x80
9002363e:	ae10      	add	r6, sp, #64	; 0x40
90023640:	e89b 0003 	ldmia.w	fp, {r0, r1}
90023644:	e885 0003 	stmia.w	r5, {r0, r1}
90023648:	9f23      	ldr	r7, [sp, #140]	; 0x8c
9002364a:	4650      	mov	r0, sl
9002364c:	cb0e      	ldmia	r3, {r1, r2, r3}
9002364e:	9700      	str	r7, [sp, #0]
90023650:	f7fb f975 	bl	9001e93e <EwMoveRectPos>
90023654:	ab38      	add	r3, sp, #224	; 0xe0
90023656:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023658:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9002365c:	4630      	mov	r0, r6
9002365e:	9f27      	ldr	r7, [sp, #156]	; 0x9c
90023660:	e89a 000e 	ldmia.w	sl, {r1, r2, r3}
90023664:	e78b      	b.n	9002357e <CoreGroup_drawContent+0x8e>
}
90023666:	b02d      	add	sp, #180	; 0xb4
90023668:	ecbd 8b02 	vpop	{d8}
9002366c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023670:	b002      	add	sp, #8
90023672:	4770      	bx	lr
90023674:	900336c8 	.word	0x900336c8

90023678 <CoreGroup_Draw>:
{
90023678:	b082      	sub	sp, #8
9002367a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002367e:	b088      	sub	sp, #32
90023680:	460f      	mov	r7, r1
90023682:	4605      	mov	r5, r0
90023684:	9c14      	ldr	r4, [sp, #80]	; 0x50
90023686:	a90e      	add	r1, sp, #56	; 0x38
90023688:	f89d 6054 	ldrb.w	r6, [sp, #84]	; 0x54
  aOpacity = (( aOpacity + 1 ) * 255 ) >> 8;
9002368c:	3401      	adds	r4, #1
9002368e:	ebc4 2404 	rsb	r4, r4, r4, lsl #8
{
90023692:	e881 000c 	stmia.w	r1, {r2, r3}
  aOpacity = (( aOpacity + 1 ) * 255 ) >> 8;
90023696:	1224      	asrs	r4, r4, #8
  aBlend = (XBool)( aBlend && (( _this->Super2.viewState & CoreViewStateAlphaBlended ) 
90023698:	b116      	cbz	r6, 900236a0 <CoreGroup_Draw+0x28>
9002369a:	6a06      	ldr	r6, [r0, #32]
9002369c:	f3c6 0640 	ubfx	r6, r6, #1, #1
  CoreGroup_drawContent( _this, aCanvas, aClip, EwMovePointPos( aOffset, _this->Super1.Bounds.Point1 ), 
900236a0:	f10d 0818 	add.w	r8, sp, #24
900236a4:	e9d5 3209 	ldrd	r3, r2, [r5, #36]	; 0x24
900236a8:	4640      	mov	r0, r8
900236aa:	9200      	str	r2, [sp, #0]
900236ac:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
900236b0:	f7fa ffa2 	bl	9001e5f8 <EwMovePointPos>
900236b4:	f10d 0c08 	add.w	ip, sp, #8
900236b8:	ab0e      	add	r3, sp, #56	; 0x38
900236ba:	e9cd 4604 	strd	r4, r6, [sp, #16]
900236be:	e898 0003 	ldmia.w	r8, {r0, r1}
900236c2:	cb0c      	ldmia	r3, {r2, r3}
900236c4:	e88c 0003 	stmia.w	ip, {r0, r1}
900236c8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
900236cc:	e88d 0003 	stmia.w	sp, {r0, r1}
900236d0:	4639      	mov	r1, r7
900236d2:	4628      	mov	r0, r5
900236d4:	f7ff ff0c 	bl	900234f0 <CoreGroup_drawContent>
}
900236d8:	b008      	add	sp, #32
900236da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900236de:	b002      	add	sp, #8
900236e0:	4770      	bx	lr
900236e2:	bf00      	nop

900236e4 <CoreRoot_Draw>:
{
900236e4:	b082      	sub	sp, #8
900236e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  fullScreenUpdate = (XBool)EwFullScreenUpdate;
900236ea:	4c2b      	ldr	r4, [pc, #172]	; (90023798 <CoreRoot_Draw+0xb4>)
{
900236ec:	b095      	sub	sp, #84	; 0x54
900236ee:	460d      	mov	r5, r1
  if ( !fullScreenUpdate )
900236f0:	f894 8000 	ldrb.w	r8, [r4]
{
900236f4:	a91e      	add	r1, sp, #120	; 0x78
900236f6:	4604      	mov	r4, r0
900236f8:	f89d 9094 	ldrb.w	r9, [sp, #148]	; 0x94
    GraphicsCanvas_FillRectangle( aCanvas, aClip, EwMoveRectPos( EwMoveRectPos( 
900236fc:	ae22      	add	r6, sp, #136	; 0x88
{
900236fe:	e881 000c 	stmia.w	r1, {r2, r3}
  if ( !fullScreenUpdate )
90023702:	f1b8 0f00 	cmp.w	r8, #0
90023706:	d017      	beq.n	90023738 <CoreRoot_Draw+0x54>
  CoreGroup_Draw((CoreGroup)_this, aCanvas, aClip, aOffset, aOpacity, aBlend );
90023708:	9a24      	ldr	r2, [sp, #144]	; 0x90
9002370a:	ab02      	add	r3, sp, #8
9002370c:	f8cd 9014 	str.w	r9, [sp, #20]
90023710:	9204      	str	r2, [sp, #16]
90023712:	e896 0003 	ldmia.w	r6, {r0, r1}
90023716:	e883 0003 	stmia.w	r3, {r0, r1}
9002371a:	ab1e      	add	r3, sp, #120	; 0x78
9002371c:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
90023720:	e88d 0003 	stmia.w	sp, {r0, r1}
90023724:	4629      	mov	r1, r5
90023726:	4620      	mov	r0, r4
90023728:	cb0c      	ldmia	r3, {r2, r3}
9002372a:	f7ff ffa5 	bl	90023678 <CoreGroup_Draw>
}
9002372e:	b015      	add	sp, #84	; 0x54
90023730:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023734:	b002      	add	sp, #8
90023736:	4770      	bx	lr
    GraphicsCanvas_FillRectangle( aCanvas, aClip, EwMoveRectPos( EwMoveRectPos( 
90023738:	e896 0003 	ldmia.w	r6, {r0, r1}
9002373c:	af01      	add	r7, sp, #4
9002373e:	9b21      	ldr	r3, [sp, #132]	; 0x84
90023740:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
90023744:	f10d 0a40 	add.w	sl, sp, #64	; 0x40
90023748:	e9c7 0100 	strd	r0, r1, [r7]
9002374c:	9300      	str	r3, [sp, #0]
9002374e:	ab1e      	add	r3, sp, #120	; 0x78
90023750:	4658      	mov	r0, fp
90023752:	cb0e      	ldmia	r3, {r1, r2, r3}
90023754:	f7fb f8f3 	bl	9001e93e <EwMoveRectPos>
90023758:	970b      	str	r7, [sp, #44]	; 0x2c
9002375a:	e9d4 0109 	ldrd	r0, r1, [r4, #36]	; 0x24
9002375e:	e9c7 0100 	strd	r0, r1, [r7]
90023762:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90023764:	4650      	mov	r0, sl
90023766:	e89b 000e 	ldmia.w	fp, {r1, r2, r3}
9002376a:	9700      	str	r7, [sp, #0]
9002376c:	f7fb f8e7 	bl	9001e93e <EwMoveRectPos>
90023770:	4b0a      	ldr	r3, [pc, #40]	; (9002379c <CoreRoot_Draw+0xb8>)
90023772:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90023774:	681b      	ldr	r3, [r3, #0]
90023776:	e9cd 3808 	strd	r3, r8, [sp, #32]
9002377a:	e9cd 3306 	strd	r3, r3, [sp, #24]
9002377e:	9305      	str	r3, [sp, #20]
90023780:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
90023784:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90023788:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002378a:	4628      	mov	r0, r5
9002378c:	9300      	str	r3, [sp, #0]
9002378e:	ab1e      	add	r3, sp, #120	; 0x78
90023790:	cb0e      	ldmia	r3, {r1, r2, r3}
90023792:	f001 fc45 	bl	90025020 <GraphicsCanvas_FillRectangle>
90023796:	e7b7      	b.n	90023708 <CoreRoot_Draw+0x24>
90023798:	200001b8 	.word	0x200001b8
9002379c:	90033518 	.word	0x90033518

900237a0 <CoreGroup_recalculateLayout>:
{
900237a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900237a4:	4680      	mov	r8, r0
900237a6:	b099      	sub	sp, #100	; 0x64
  XRect groupBounds = EwGetRectORect( _this->Super1.Bounds );
900237a8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
900237ac:	f108 0324 	add.w	r3, r8, #36	; 0x24
  XBool groupLayout = (( _this->Super2.viewState & CoreViewStateUpdateLayout ) == 
900237b0:	f8d8 5020 	ldr.w	r5, [r8, #32]
  XRect groupBounds = EwGetRectORect( _this->Super1.Bounds );
900237b4:	a808      	add	r0, sp, #32
900237b6:	9200      	str	r2, [sp, #0]
  XRect formBounds2 = _Const0001;
900237b8:	f10d 0940 	add.w	r9, sp, #64	; 0x40
  XBool groupLayout = (( _this->Super2.viewState & CoreViewStateUpdateLayout ) == 
900237bc:	f405 5580 	and.w	r5, r5, #4096	; 0x1000
  XRect groupBounds = EwGetRectORect( _this->Super1.Bounds );
900237c0:	cb0e      	ldmia	r3, {r1, r2, r3}
900237c2:	f7fb f8ff 	bl	9001e9c4 <EwGetRectORect>
  XRect formBounds2 = _Const0001;
900237c6:	2200      	movs	r2, #0
  CoreView view = _this->last;
900237c8:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
  XRect formBounds2 = _Const0001;
900237cc:	f8c9 2004 	str.w	r2, [r9, #4]
900237d0:	9210      	str	r2, [sp, #64]	; 0x40
900237d2:	e9c9 2202 	strd	r2, r2, [r9, #8]
  while ( view != 0 )
900237d6:	b14b      	cbz	r3, 900237ec <CoreGroup_recalculateLayout+0x4c>
    if ((( view->viewState & CoreViewStateRequestLayout ) == CoreViewStateRequestLayout ))
900237d8:	6a1a      	ldr	r2, [r3, #32]
900237da:	f412 6f00 	tst.w	r2, #2048	; 0x800
      view->viewState = view->viewState & ~CoreViewStateRequestLayout;
900237de:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
900237e2:	bf18      	it	ne
900237e4:	621a      	strne	r2, [r3, #32]
    view = view->prev;
900237e6:	695b      	ldr	r3, [r3, #20]
  while ( view != 0 )
900237e8:	2b00      	cmp	r3, #0
900237ea:	d1f5      	bne.n	900237d8 <CoreGroup_recalculateLayout+0x38>
  view = _this->first;
900237ec:	f8d8 4034 	ldr.w	r4, [r8, #52]	; 0x34
  if ( groupLayout )
900237f0:	2d00      	cmp	r5, #0
900237f2:	f040 809d 	bne.w	90023930 <CoreGroup_recalculateLayout+0x190>
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStateUpdatingLayout;
900237f6:	f8d8 3020 	ldr.w	r3, [r8, #32]
  XBool groupLayout = (( _this->Super2.viewState & CoreViewStateUpdateLayout ) == 
900237fa:	9505      	str	r5, [sp, #20]
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStateUpdatingLayout;
900237fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
90023800:	f8c8 3020 	str.w	r3, [r8, #32]
  while ( view != 0 )
90023804:	2c00      	cmp	r4, #0
90023806:	f000 80aa 	beq.w	9002395e <CoreGroup_recalculateLayout+0x1be>
  CoreOutline form = 0;
9002380a:	2700      	movs	r7, #0
9002380c:	ae14      	add	r6, sp, #80	; 0x50
  formLayout = 0;
9002380e:	463d      	mov	r5, r7
90023810:	e00c      	b.n	9002382c <CoreGroup_recalculateLayout+0x8c>
        && (( view->layoutContext != 0 ) && ( 0 != form )))
90023812:	69e3      	ldr	r3, [r4, #28]
90023814:	2f00      	cmp	r7, #0
90023816:	f000 8082 	beq.w	9002391e <CoreGroup_recalculateLayout+0x17e>
9002381a:	b10b      	cbz	r3, 90023820 <CoreGroup_recalculateLayout+0x80>
      view->layoutContext = 0;
9002381c:	2300      	movs	r3, #0
9002381e:	61e3      	str	r3, [r4, #28]
    if ((( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90023820:	f41b 7f00 	tst.w	fp, #512	; 0x200
90023824:	d140      	bne.n	900238a8 <CoreGroup_recalculateLayout+0x108>
    view = view->next;
90023826:	6924      	ldr	r4, [r4, #16]
  while ( view != 0 )
90023828:	2c00      	cmp	r4, #0
9002382a:	d068      	beq.n	900238fe <CoreGroup_recalculateLayout+0x15e>
    if ((( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ) 
9002382c:	f8d4 b020 	ldr.w	fp, [r4, #32]
90023830:	f41b 6380 	ands.w	r3, fp, #1024	; 0x400
90023834:	d1ed      	bne.n	90023812 <CoreGroup_recalculateLayout+0x72>
    if ( view->layoutContext != 0 )
90023836:	69e2      	ldr	r2, [r4, #28]
90023838:	2a00      	cmp	r2, #0
9002383a:	d0f1      	beq.n	90023820 <CoreGroup_recalculateLayout+0x80>
      if ( groupLayout && !(( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
9002383c:	9a05      	ldr	r2, [sp, #20]
9002383e:	2a00      	cmp	r2, #0
90023840:	d0ee      	beq.n	90023820 <CoreGroup_recalculateLayout+0x80>
  return ((CoreView)_this)->_.VMT->ArrangeView((CoreView)_this, aBounds, aFormation );
90023842:	f8d4 c000 	ldr.w	ip, [r4]
90023846:	f10d 0a58 	add.w	sl, sp, #88	; 0x58
9002384a:	9302      	str	r3, [sp, #8]
9002384c:	ab08      	add	r3, sp, #32
9002384e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023850:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023854:	e89a 0003 	ldmia.w	sl, {r0, r1}
90023858:	e896 000c 	ldmia.w	r6, {r2, r3}
9002385c:	e88d 0003 	stmia.w	sp, {r0, r1}
90023860:	4621      	mov	r1, r4
90023862:	f8dc b040 	ldr.w	fp, [ip, #64]	; 0x40
90023866:	a806      	add	r0, sp, #24
90023868:	47d8      	blx	fp
9002386a:	f8d4 b020 	ldr.w	fp, [r4, #32]
      if ( formLayout && (( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
9002386e:	2d00      	cmp	r5, #0
90023870:	d0d6      	beq.n	90023820 <CoreGroup_recalculateLayout+0x80>
90023872:	f41b 6f80 	tst.w	fp, #1024	; 0x400
90023876:	d0d3      	beq.n	90023820 <CoreGroup_recalculateLayout+0x80>
  return ((CoreView)_this)->_.VMT->ArrangeView((CoreView)_this, aBounds, aFormation );
90023878:	2300      	movs	r3, #0
9002387a:	f8d4 c000 	ldr.w	ip, [r4]
9002387e:	9302      	str	r3, [sp, #8]
90023880:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
90023884:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023888:	e89a 0003 	ldmia.w	sl, {r0, r1}
9002388c:	e896 000c 	ldmia.w	r6, {r2, r3}
90023890:	e88d 0003 	stmia.w	sp, {r0, r1}
90023894:	4621      	mov	r1, r4
90023896:	f8dc a040 	ldr.w	sl, [ip, #64]	; 0x40
9002389a:	a806      	add	r0, sp, #24
9002389c:	47d0      	blx	sl
9002389e:	f8d4 b020 	ldr.w	fp, [r4, #32]
    if ((( view->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
900238a2:	f41b 7f00 	tst.w	fp, #512	; 0x200
900238a6:	d0be      	beq.n	90023826 <CoreGroup_recalculateLayout+0x86>
      form = EwCastObject( view, CoreOutline );
900238a8:	492f      	ldr	r1, [pc, #188]	; (90023968 <CoreGroup_recalculateLayout+0x1c8>)
900238aa:	4620      	mov	r0, r4
900238ac:	f7fa fbb4 	bl	9001e018 <EwCastObject>
      if ( formLayout )
900238b0:	f41b 5580 	ands.w	r5, fp, #4096	; 0x1000
      form = EwCastObject( view, CoreOutline );
900238b4:	4607      	mov	r7, r0
      if ( formLayout )
900238b6:	d0b6      	beq.n	90023826 <CoreGroup_recalculateLayout+0x86>
        view->viewState = view->viewState & ~CoreViewStateUpdateLayout;
900238b8:	6a23      	ldr	r3, [r4, #32]
        formBounds = form->Super1.Bounds;
900238ba:	f100 0a24 	add.w	sl, r0, #36	; 0x24
900238be:	ad0c      	add	r5, sp, #48	; 0x30
        view->viewState = view->viewState & ~CoreViewStateUpdateLayout;
900238c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900238c4:	6223      	str	r3, [r4, #32]
        formBounds = form->Super1.Bounds;
900238c6:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
900238ca:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
        formBounds2 = formBounds;
900238ce:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
        formLayout = (XBool)!EwIsRectEmpty( formBounds );
900238d2:	f7fa ff31 	bl	9001e738 <EwIsRectEmpty>
      if ( formLayout )
900238d6:	2800      	cmp	r0, #0
900238d8:	d143      	bne.n	90023962 <CoreGroup_recalculateLayout+0x1c2>
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
900238da:	f8d8 c000 	ldr.w	ip, [r8]
        CoreGroup__InvalidateArea( _this, form->Super1.Bounds );
900238de:	2501      	movs	r5, #1
900238e0:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
900238e4:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
900238e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900238ea:	4640      	mov	r0, r8
900238ec:	9300      	str	r3, [sp, #0]
900238ee:	f8dc a060 	ldr.w	sl, [ip, #96]	; 0x60
900238f2:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
900238f6:	47d0      	blx	sl
    view = view->next;
900238f8:	6924      	ldr	r4, [r4, #16]
  while ( view != 0 )
900238fa:	2c00      	cmp	r4, #0
900238fc:	d196      	bne.n	9002382c <CoreGroup_recalculateLayout+0x8c>
900238fe:	f8d8 3020 	ldr.w	r3, [r8, #32]
  _this->Super2.viewState = _this->Super2.viewState & ~CoreViewStateUpdatingLayout;
90023902:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  CoreGroup_UpdateLayout( _this, EwGetRectSize( groupBounds ));
90023906:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023908:	4630      	mov	r0, r6
  _this->Super2.viewState = _this->Super2.viewState & ~CoreViewStateUpdatingLayout;
9002390a:	f8c8 3020 	str.w	r3, [r8, #32]
  CoreGroup_UpdateLayout( _this, EwGetRectSize( groupBounds ));
9002390e:	ab08      	add	r3, sp, #32
90023910:	9200      	str	r2, [sp, #0]
90023912:	cb0e      	ldmia	r3, {r1, r2, r3}
90023914:	f7fb f847 	bl	9001e9a6 <EwGetRectSize>
}
90023918:	b019      	add	sp, #100	; 0x64
9002391a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if ( view->layoutContext != 0 )
9002391e:	2b00      	cmp	r3, #0
90023920:	f43f af7e 	beq.w	90023820 <CoreGroup_recalculateLayout+0x80>
      if ( formLayout && (( view->viewState & CoreViewStateEmbedded ) == CoreViewStateEmbedded ))
90023924:	2d00      	cmp	r5, #0
90023926:	f43f af7b 	beq.w	90023820 <CoreGroup_recalculateLayout+0x80>
9002392a:	f10d 0a58 	add.w	sl, sp, #88	; 0x58
9002392e:	e7a3      	b.n	90023878 <CoreGroup_recalculateLayout+0xd8>
    _this->Super2.viewState = _this->Super2.viewState & ~CoreViewStateUpdateLayout;
90023930:	f8d8 3020 	ldr.w	r3, [r8, #32]
90023934:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90023938:	f8c8 3020 	str.w	r3, [r8, #32]
    groupLayout = (XBool)!EwIsRectEmpty( groupBounds );
9002393c:	ab08      	add	r3, sp, #32
9002393e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023940:	f7fa fefa 	bl	9001e738 <EwIsRectEmpty>
90023944:	fab0 f380 	clz	r3, r0
90023948:	095b      	lsrs	r3, r3, #5
9002394a:	9305      	str	r3, [sp, #20]
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStateUpdatingLayout;
9002394c:	f8d8 3020 	ldr.w	r3, [r8, #32]
90023950:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
90023954:	f8c8 3020 	str.w	r3, [r8, #32]
  while ( view != 0 )
90023958:	2c00      	cmp	r4, #0
9002395a:	f47f af56 	bne.w	9002380a <CoreGroup_recalculateLayout+0x6a>
9002395e:	ae14      	add	r6, sp, #80	; 0x50
90023960:	e7cf      	b.n	90023902 <CoreGroup_recalculateLayout+0x162>
90023962:	2500      	movs	r5, #0
90023964:	e75f      	b.n	90023826 <CoreGroup_recalculateLayout+0x86>
90023966:	bf00      	nop
90023968:	900336c8 	.word	0x900336c8

9002396c <CoreGroup_updateComponent>:
{
9002396c:	b538      	push	{r3, r4, r5, lr}
  updateLayout = (( _this->Super2.viewState & CoreViewStateUpdateLayout ) == CoreViewStateUpdateLayout );
9002396e:	6a03      	ldr	r3, [r0, #32]
{
90023970:	4604      	mov	r4, r0
  if ((( _this->Super2.viewState & CoreViewStatePendingLayout ) == CoreViewStatePendingLayout ))
90023972:	045a      	lsls	r2, r3, #17
  updateLayout = (( _this->Super2.viewState & CoreViewStateUpdateLayout ) == CoreViewStateUpdateLayout );
90023974:	f403 5580 	and.w	r5, r3, #4096	; 0x1000
  if ((( _this->Super2.viewState & CoreViewStatePendingLayout ) == CoreViewStatePendingLayout ))
90023978:	d407      	bmi.n	9002398a <CoreGroup_updateComponent+0x1e>
  if ((( _this->Super2.viewState & CoreViewStatePendingViewState ) == CoreViewStatePendingViewState ) 
9002397a:	f403 4200 	and.w	r2, r3, #32768	; 0x8000
9002397e:	432a      	orrs	r2, r5
90023980:	d002      	beq.n	90023988 <CoreGroup_updateComponent+0x1c>
    _this->Super2.viewState = _this->Super2.viewState & ~CoreViewStatePendingViewState;
90023982:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
90023986:	6223      	str	r3, [r4, #32]
}
90023988:	bd38      	pop	{r3, r4, r5, pc}
    _this->Super2.viewState = _this->Super2.viewState & ~CoreViewStatePendingLayout;
9002398a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
9002398e:	6203      	str	r3, [r0, #32]
    CoreGroup_recalculateLayout( _this );
90023990:	f7ff ff06 	bl	900237a0 <CoreGroup_recalculateLayout>
90023994:	6a23      	ldr	r3, [r4, #32]
90023996:	e7f0      	b.n	9002397a <CoreGroup_updateComponent+0xe>

90023998 <CoreGroup_InvalidateViewState>:
{
90023998:	b530      	push	{r4, r5, lr}
9002399a:	4604      	mov	r4, r0
9002399c:	b083      	sub	sp, #12
  EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
9002399e:	4a09      	ldr	r2, [pc, #36]	; (900239c4 <CoreGroup_InvalidateViewState+0x2c>)
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
900239a0:	6a23      	ldr	r3, [r4, #32]
  EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
900239a2:	466d      	mov	r5, sp
900239a4:	4621      	mov	r1, r4
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
900239a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
  EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
900239aa:	4628      	mov	r0, r5
  _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingViewState;
900239ac:	6223      	str	r3, [r4, #32]
  EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
900239ae:	f7fb ffe7 	bl	9001f980 <EwNewSlot>
900239b2:	4622      	mov	r2, r4
900239b4:	e895 0003 	ldmia.w	r5, {r0, r1}
}
900239b8:	b003      	add	sp, #12
900239ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
900239be:	f7fc b80d 	b.w	9001f9dc <EwPostSignal>
900239c2:	bf00      	nop
900239c4:	9002396d 	.word	0x9002396d

900239c8 <CoreGroup__Init>:
{
900239c8:	b510      	push	{r4, lr}
900239ca:	4604      	mov	r4, r0
  XObject__Init( &_this->_.Super, aLink, aArg );
900239cc:	f7fa fa0c 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreGroup );
900239d0:	4b04      	ldr	r3, [pc, #16]	; (900239e4 <CoreGroup__Init+0x1c>)
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
900239d2:	221f      	movs	r2, #31
  CoreGroup_InvalidateViewState( _this );
900239d4:	4620      	mov	r0, r4
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
900239d6:	6222      	str	r2, [r4, #32]
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreGroup );
900239d8:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreGroup );
900239da:	6023      	str	r3, [r4, #0]
}
900239dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CoreGroup_InvalidateViewState( _this );
900239e0:	f7ff bfda 	b.w	90023998 <CoreGroup_InvalidateViewState>
900239e4:	90033624 	.word	0x90033624

900239e8 <CoreGroup__InvalidateArea>:
{
900239e8:	b084      	sub	sp, #16
900239ea:	b570      	push	{r4, r5, r6, lr}
900239ec:	b082      	sub	sp, #8
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
900239ee:	6805      	ldr	r5, [r0, #0]
900239f0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
{
900239f2:	ac07      	add	r4, sp, #28
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
900239f4:	9600      	str	r6, [sp, #0]
900239f6:	6e2d      	ldr	r5, [r5, #96]	; 0x60
{
900239f8:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
900239fc:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90023a00:	47a8      	blx	r5
}
90023a02:	b002      	add	sp, #8
90023a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90023a08:	b004      	add	sp, #16
90023a0a:	4770      	bx	lr

90023a0c <CoreGroup_Add>:
{
90023a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
90023a0e:	b08d      	sub	sp, #52	; 0x34
  if ( aView == 0 )
90023a10:	2900      	cmp	r1, #0
90023a12:	f000 8082 	beq.w	90023b1a <CoreGroup_Add+0x10e>
  if ( aView->Owner != 0 )
90023a16:	698b      	ldr	r3, [r1, #24]
90023a18:	460c      	mov	r4, r1
90023a1a:	2b00      	cmp	r3, #0
90023a1c:	d13f      	bne.n	90023a9e <CoreGroup_Add+0x92>
  if (( aOrder < 0 ) && ( _this->last != 0 ))
90023a1e:	2a00      	cmp	r2, #0
90023a20:	4605      	mov	r5, r0
90023a22:	6b83      	ldr	r3, [r0, #56]	; 0x38
90023a24:	db08      	blt.n	90023a38 <CoreGroup_Add+0x2c>
    aView->prev = _this->last;
90023a26:	e9c1 3005 	strd	r3, r0, [r1, #20]
    if ( _this->last != 0 )
90023a2a:	b103      	cbz	r3, 90023a2e <CoreGroup_Add+0x22>
      _this->last->next = aView;
90023a2c:	6119      	str	r1, [r3, #16]
    if ( _this->first == 0 )
90023a2e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
90023a30:	2b00      	cmp	r3, #0
90023a32:	d074      	beq.n	90023b1e <CoreGroup_Add+0x112>
    _this->last = aView;
90023a34:	63ac      	str	r4, [r5, #56]	; 0x38
90023a36:	e00f      	b.n	90023a58 <CoreGroup_Add+0x4c>
  if (( aOrder < 0 ) && ( _this->last != 0 ))
90023a38:	2b00      	cmp	r3, #0
90023a3a:	d072      	beq.n	90023b22 <CoreGroup_Add+0x116>
  while ((( aOrder < 0 ) && ( before != 0 )) && ( before->prev != 0 ))
90023a3c:	3201      	adds	r2, #1
90023a3e:	4619      	mov	r1, r3
90023a40:	695b      	ldr	r3, [r3, #20]
90023a42:	d001      	beq.n	90023a48 <CoreGroup_Add+0x3c>
90023a44:	2b00      	cmp	r3, #0
90023a46:	d1f9      	bne.n	90023a3c <CoreGroup_Add+0x30>
    aView->prev = before->prev;
90023a48:	e9c4 3505 	strd	r3, r5, [r4, #20]
    aView->next = before;
90023a4c:	6121      	str	r1, [r4, #16]
    before->prev = aView;
90023a4e:	614c      	str	r4, [r1, #20]
    if ( aView->prev != 0 )
90023a50:	6963      	ldr	r3, [r4, #20]
90023a52:	2b00      	cmp	r3, #0
90023a54:	d04b      	beq.n	90023aee <CoreGroup_Add+0xe2>
      aView->prev->next = aView;
90023a56:	611c      	str	r4, [r3, #16]
  if ((( aView->viewState & CoreViewStateVisible ) == CoreViewStateVisible ))
90023a58:	6a23      	ldr	r3, [r4, #32]
90023a5a:	07d9      	lsls	r1, r3, #31
90023a5c:	d514      	bpl.n	90023a88 <CoreGroup_Add+0x7c>
  return ((CoreView)_this)->_.VMT->GetExtent((CoreView)_this );
90023a5e:	af04      	add	r7, sp, #16
90023a60:	6823      	ldr	r3, [r4, #0]
90023a62:	4621      	mov	r1, r4
90023a64:	ae08      	add	r6, sp, #32
90023a66:	4638      	mov	r0, r7
90023a68:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90023a6a:	4798      	blx	r3
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90023a6c:	f8d5 c000 	ldr.w	ip, [r5]
90023a70:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90023a74:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023a78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023a7a:	4628      	mov	r0, r5
90023a7c:	9300      	str	r3, [sp, #0]
90023a7e:	f8dc 7060 	ldr.w	r7, [ip, #96]	; 0x60
90023a82:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90023a86:	47b8      	blx	r7
  if (((( _this->Focus == 0 ) && (( aView->viewState & CoreViewStateFocusable ) 
90023a88:	6c2b      	ldr	r3, [r5, #64]	; 0x40
90023a8a:	b32b      	cbz	r3, 90023ad8 <CoreGroup_Add+0xcc>
90023a8c:	6a23      	ldr	r3, [r4, #32]
  if ((( aView->viewState & ( CoreViewStateEmbedded | CoreViewStateVisible )) == 
90023a8e:	f240 4201 	movw	r2, #1025	; 0x401
90023a92:	439a      	bics	r2, r3
90023a94:	d02d      	beq.n	90023af2 <CoreGroup_Add+0xe6>
  if ((( aView->viewState & CoreViewStateIsOutline ) == CoreViewStateIsOutline ))
90023a96:	059a      	lsls	r2, r3, #22
90023a98:	d409      	bmi.n	90023aae <CoreGroup_Add+0xa2>
}
90023a9a:	b00d      	add	sp, #52	; 0x34
90023a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    EwThrow( EwLoadString( &_Const0004 ));
90023a9e:	4822      	ldr	r0, [pc, #136]	; (90023b28 <CoreGroup_Add+0x11c>)
90023aa0:	f7fd f89c 	bl	90020bdc <EwLoadString>
}
90023aa4:	b00d      	add	sp, #52	; 0x34
90023aa6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    EwThrow( EwLoadString( &_Const0004 ));
90023aaa:	f7f9 bcc5 	b.w	9001d438 <EwThrow>
    aView->viewState = aView->viewState | CoreViewStateRequestLayout;
90023aae:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023ab2:	ae08      	add	r6, sp, #32
90023ab4:	4629      	mov	r1, r5
90023ab6:	4a1d      	ldr	r2, [pc, #116]	; (90023b2c <CoreGroup_Add+0x120>)
    aView->viewState = aView->viewState | CoreViewStateRequestLayout;
90023ab8:	6223      	str	r3, [r4, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023aba:	4630      	mov	r0, r6
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingLayout;
90023abc:	6a2b      	ldr	r3, [r5, #32]
90023abe:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
90023ac2:	622b      	str	r3, [r5, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023ac4:	f7fb ff5c 	bl	9001f980 <EwNewSlot>
90023ac8:	462a      	mov	r2, r5
90023aca:	e896 0003 	ldmia.w	r6, {r0, r1}
}
90023ace:	b00d      	add	sp, #52	; 0x34
90023ad0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023ad4:	f7fb bf82 	b.w	9001f9dc <EwPostSignal>
      == CoreViewStateEnabled )) && !(( aView->viewState & CoreViewStateDialog ) 
90023ad8:	6a23      	ldr	r3, [r4, #32]
90023ada:	4a15      	ldr	r2, [pc, #84]	; (90023b30 <CoreGroup_Add+0x124>)
90023adc:	401a      	ands	r2, r3
90023ade:	2a14      	cmp	r2, #20
90023ae0:	d1d5      	bne.n	90023a8e <CoreGroup_Add+0x82>
  ((CoreGroup)_this)->_.VMT->OnSetFocus((CoreGroup)_this, value );
90023ae2:	682b      	ldr	r3, [r5, #0]
90023ae4:	4621      	mov	r1, r4
90023ae6:	4628      	mov	r0, r5
90023ae8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90023aea:	4798      	blx	r3
90023aec:	e7ce      	b.n	90023a8c <CoreGroup_Add+0x80>
      _this->first = aView;
90023aee:	636c      	str	r4, [r5, #52]	; 0x34
90023af0:	e7b2      	b.n	90023a58 <CoreGroup_Add+0x4c>
    aView->viewState = aView->viewState | CoreViewStateRequestLayout;
90023af2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023af6:	ae02      	add	r6, sp, #8
90023af8:	4a0c      	ldr	r2, [pc, #48]	; (90023b2c <CoreGroup_Add+0x120>)
90023afa:	4629      	mov	r1, r5
    aView->viewState = aView->viewState | CoreViewStateRequestLayout;
90023afc:	6223      	str	r3, [r4, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023afe:	4630      	mov	r0, r6
    _this->Super2.viewState = _this->Super2.viewState | CoreViewStatePendingLayout;
90023b00:	6a2b      	ldr	r3, [r5, #32]
90023b02:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
90023b06:	622b      	str	r3, [r5, #32]
    EwPostSignal( EwNewSlot( _this, CoreGroup_updateComponent ), ((XObject)_this ));
90023b08:	f7fb ff3a 	bl	9001f980 <EwNewSlot>
90023b0c:	462a      	mov	r2, r5
90023b0e:	e896 0003 	ldmia.w	r6, {r0, r1}
90023b12:	f7fb ff63 	bl	9001f9dc <EwPostSignal>
90023b16:	6a23      	ldr	r3, [r4, #32]
90023b18:	e7bd      	b.n	90023a96 <CoreGroup_Add+0x8a>
    EwThrow( EwLoadString( &_Const0003 ));
90023b1a:	4806      	ldr	r0, [pc, #24]	; (90023b34 <CoreGroup_Add+0x128>)
90023b1c:	e7c0      	b.n	90023aa0 <CoreGroup_Add+0x94>
      _this->first = aView;
90023b1e:	636c      	str	r4, [r5, #52]	; 0x34
90023b20:	e788      	b.n	90023a34 <CoreGroup_Add+0x28>
    aView->prev = _this->last;
90023b22:	e9c1 3005 	strd	r3, r0, [r1, #20]
    if ( _this->last != 0 )
90023b26:	e782      	b.n	90023a2e <CoreGroup_Add+0x22>
90023b28:	90033510 	.word	0x90033510
90023b2c:	9002396d 	.word	0x9002396d
90023b30:	00010014 	.word	0x00010014
90023b34:	90033508 	.word	0x90033508

90023b38 <CoreRoot__EndUpdate>:
  if ( _this->noOfRegions > 0 )
90023b38:	f8d0 33dc 	ldr.w	r3, [r0, #988]	; 0x3dc
90023b3c:	2b00      	cmp	r3, #0
90023b3e:	dd07      	ble.n	90023b50 <CoreRoot__EndUpdate+0x18>
    _this->fpsCounter = _this->fpsCounter + 1;
90023b40:	f8d0 3354 	ldr.w	r3, [r0, #852]	; 0x354
    _this->noOfRegions = 0;
90023b44:	2200      	movs	r2, #0
    _this->fpsCounter = _this->fpsCounter + 1;
90023b46:	3301      	adds	r3, #1
    _this->noOfRegions = 0;
90023b48:	f8c0 23dc 	str.w	r2, [r0, #988]	; 0x3dc
    _this->fpsCounter = _this->fpsCounter + 1;
90023b4c:	f8c0 3354 	str.w	r3, [r0, #852]	; 0x354
}
90023b50:	4770      	bx	lr
90023b52:	bf00      	nop

90023b54 <CoreRoot_UpdateCanvas>:
{
90023b54:	b082      	sub	sp, #8
90023b56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023b5a:	b0a5      	sub	sp, #148	; 0x94
  XRect wholeArea = _Const0001;
90023b5c:	2400      	movs	r4, #0
{
90023b5e:	4693      	mov	fp, r2
90023b60:	4607      	mov	r7, r0
  XRect canvasArea = EwNewRect2Point( aOffset, EwMovePointPos( aCanvas->Super1.FrameSize, 
90023b62:	9a30      	ldr	r2, [sp, #192]	; 0xc0
  XRect wholeArea = _Const0001;
90023b64:	ad10      	add	r5, sp, #64	; 0x40
{
90023b66:	460e      	mov	r6, r1
  XRect canvasArea = EwNewRect2Point( aOffset, EwMovePointPos( aCanvas->Super1.FrameSize, 
90023b68:	a80a      	add	r0, sp, #40	; 0x28
90023b6a:	9200      	str	r2, [sp, #0]
  XRect wholeArea = _Const0001;
90023b6c:	606c      	str	r4, [r5, #4]
  XRect canvasArea = EwNewRect2Point( aOffset, EwMovePointPos( aCanvas->Super1.FrameSize, 
90023b6e:	f8db 2024 	ldr.w	r2, [fp, #36]	; 0x24
90023b72:	f8db 1020 	ldr.w	r1, [fp, #32]
{
90023b76:	932f      	str	r3, [sp, #188]	; 0xbc
90023b78:	9707      	str	r7, [sp, #28]
  XRect wholeArea = _Const0001;
90023b7a:	9410      	str	r4, [sp, #64]	; 0x40
90023b7c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  XRect canvasArea = EwNewRect2Point( aOffset, EwMovePointPos( aCanvas->Super1.FrameSize, 
90023b80:	f7fa fd3a 	bl	9001e5f8 <EwMovePointPos>
90023b84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023b86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023b88:	a814      	add	r0, sp, #80	; 0x50
90023b8a:	9200      	str	r2, [sp, #0]
90023b8c:	aa2f      	add	r2, sp, #188	; 0xbc
90023b8e:	ca06      	ldmia	r2, {r1, r2}
90023b90:	f7fa fd7b 	bl	9001e68a <EwNewRect2Point>
  _this->updateLock = _this->updateLock + 1;
90023b94:	f8d6 309c 	ldr.w	r3, [r6, #156]	; 0x9c
  XInt32 j = _this->noOfRegions;
90023b98:	f8d6 93dc 	ldr.w	r9, [r6, #988]	; 0x3dc
  _this->updateLock = _this->updateLock + 1;
90023b9c:	1c5a      	adds	r2, r3, #1
  for ( i = 0; ( i < j ) && ( i < 4 ); i = i + 1 )
90023b9e:	45a1      	cmp	r9, r4
  _this->updateLock = _this->updateLock + 1;
90023ba0:	f8c6 209c 	str.w	r2, [r6, #156]	; 0x9c
  for ( i = 0; ( i < j ) && ( i < 4 ); i = i + 1 )
90023ba4:	dd1c      	ble.n	90023be0 <CoreRoot_UpdateCanvas+0x8c>
      CoreView__Draw( _this, aCanvas, EwMoveRectNeg( _this->regions[ EwCheckIndex( 
90023ba6:	ab01      	add	r3, sp, #4
90023ba8:	f506 7a63 	add.w	sl, r6, #908	; 0x38c
90023bac:	9606      	str	r6, [sp, #24]
90023bae:	9308      	str	r3, [sp, #32]
90023bb0:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90023bb4:	9a06      	ldr	r2, [sp, #24]
      wholeArea = EwUnionRect( wholeArea, EwIntersectRect( canvasArea, _this->regions[ 
90023bb6:	f10d 0870 	add.w	r8, sp, #112	; 0x70
      CoreView__Draw( _this, aCanvas, EwMoveRectNeg( _this->regions[ EwCheckIndex( 
90023bba:	eb02 1304 	add.w	r3, r2, r4, lsl #4
    if ( _this->regionsArea[ EwCheckIndex( i, 4 )] > 0 )
90023bbe:	f85a 2b04 	ldr.w	r2, [sl], #4
90023bc2:	2a00      	cmp	r2, #0
      CoreView__Draw( _this, aCanvas, EwMoveRectNeg( _this->regions[ EwCheckIndex( 
90023bc4:	f503 7767 	add.w	r7, r3, #924	; 0x39c
    if ( _this->regionsArea[ EwCheckIndex( i, 4 )] > 0 )
90023bc8:	dc1d      	bgt.n	90023c06 <CoreRoot_UpdateCanvas+0xb2>
      j = j + 1;
90023bca:	f109 0901 	add.w	r9, r9, #1
  for ( i = 0; ( i < j ) && ( i < 4 ); i = i + 1 )
90023bce:	3401      	adds	r4, #1
90023bd0:	45a1      	cmp	r9, r4
90023bd2:	dd01      	ble.n	90023bd8 <CoreRoot_UpdateCanvas+0x84>
90023bd4:	2c03      	cmp	r4, #3
90023bd6:	dded      	ble.n	90023bb4 <CoreRoot_UpdateCanvas+0x60>
90023bd8:	9e06      	ldr	r6, [sp, #24]
90023bda:	f8d6 309c 	ldr.w	r3, [r6, #156]	; 0x9c
90023bde:	3b01      	subs	r3, #1
  _this->updateLock = _this->updateLock - 1;
90023be0:	f8c6 309c 	str.w	r3, [r6, #156]	; 0x9c
  if ( !EwIsRectEmpty( wholeArea ))
90023be4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90023be8:	f7fa fda6 	bl	9001e738 <EwIsRectEmpty>
90023bec:	2800      	cmp	r0, #0
90023bee:	d059      	beq.n	90023ca4 <CoreRoot_UpdateCanvas+0x150>
    return wholeArea;
90023bf0:	9c07      	ldr	r4, [sp, #28]
90023bf2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90023bf6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
90023bfa:	9807      	ldr	r0, [sp, #28]
90023bfc:	b025      	add	sp, #148	; 0x94
90023bfe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023c02:	b002      	add	sp, #8
90023c04:	4770      	bx	lr
      CoreView__Draw( _this, aCanvas, EwMoveRectNeg( _this->regions[ EwCheckIndex( 
90023c06:	aa2f      	add	r2, sp, #188	; 0xbc
90023c08:	9e08      	ldr	r6, [sp, #32]
  ((CoreView)_this)->_.VMT->Draw((CoreView)_this, aCanvas, aClip, aOffset, aOpacity
90023c0a:	f04f 0b01 	mov.w	fp, #1
      CoreView__Draw( _this, aCanvas, EwMoveRectNeg( _this->regions[ EwCheckIndex( 
90023c0e:	e892 0003 	ldmia.w	r2, {r0, r1}
90023c12:	e9c6 0100 	strd	r0, r1, [r6]
90023c16:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
90023c1a:	a818      	add	r0, sp, #96	; 0x60
90023c1c:	9300      	str	r3, [sp, #0]
90023c1e:	e897 000e 	ldmia.w	r7, {r1, r2, r3}
90023c22:	f7fa fe76 	bl	9001e912 <EwMoveRectNeg>
90023c26:	ab2f      	add	r3, sp, #188	; 0xbc
90023c28:	a80c      	add	r0, sp, #48	; 0x30
90023c2a:	e893 0006 	ldmia.w	r3, {r1, r2}
90023c2e:	f7fa fcf6 	bl	9001e61e <EwNegPoint>
90023c32:	ab18      	add	r3, sp, #96	; 0x60
90023c34:	f10d 0c80 	add.w	ip, sp, #128	; 0x80
90023c38:	f10d 0e38 	add.w	lr, sp, #56	; 0x38
90023c3c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023c3e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
90023c42:	ab0c      	add	r3, sp, #48	; 0x30
  ((CoreView)_this)->_.VMT->Draw((CoreView)_this, aCanvas, aClip, aOffset, aOpacity
90023c44:	22ff      	movs	r2, #255	; 0xff
90023c46:	e893 0003 	ldmia.w	r3, {r0, r1}
90023c4a:	ab02      	add	r3, sp, #8
90023c4c:	e88e 0003 	stmia.w	lr, {r0, r1}
90023c50:	e9cd 2b04 	strd	r2, fp, [sp, #16]
90023c54:	9a06      	ldr	r2, [sp, #24]
90023c56:	f8d2 e000 	ldr.w	lr, [r2]
90023c5a:	e883 0003 	stmia.w	r3, {r0, r1}
90023c5e:	ab24      	add	r3, sp, #144	; 0x90
90023c60:	e913 0003 	ldmdb	r3, {r0, r1}
90023c64:	e89c 000c 	ldmia.w	ip, {r2, r3}
90023c68:	e88d 0003 	stmia.w	sp, {r0, r1}
90023c6c:	9909      	ldr	r1, [sp, #36]	; 0x24
90023c6e:	f8de b038 	ldr.w	fp, [lr, #56]	; 0x38
90023c72:	9806      	ldr	r0, [sp, #24]
90023c74:	47d8      	blx	fp
      wholeArea = EwUnionRect( wholeArea, EwIntersectRect( canvasArea, _this->regions[ 
90023c76:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90023c7a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023c7e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023c80:	4640      	mov	r0, r8
90023c82:	9300      	str	r3, [sp, #0]
90023c84:	ab14      	add	r3, sp, #80	; 0x50
90023c86:	cb0e      	ldmia	r3, {r1, r2, r3}
90023c88:	f7fa fd7c 	bl	9001e784 <EwIntersectRect>
90023c8c:	9f13      	ldr	r7, [sp, #76]	; 0x4c
90023c8e:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
90023c92:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023c96:	9700      	str	r7, [sp, #0]
90023c98:	4628      	mov	r0, r5
90023c9a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90023c9e:	f7fa fdaa 	bl	9001e7f6 <EwUnionRect>
90023ca2:	e794      	b.n	90023bce <CoreRoot_UpdateCanvas+0x7a>
    return EwMoveRectNeg( wholeArea, aOffset );
90023ca4:	a92f      	add	r1, sp, #188	; 0xbc
90023ca6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90023ca8:	ab01      	add	r3, sp, #4
90023caa:	c903      	ldmia	r1, {r0, r1}
90023cac:	e883 0003 	stmia.w	r3, {r0, r1}
90023cb0:	9200      	str	r2, [sp, #0]
90023cb2:	9807      	ldr	r0, [sp, #28]
90023cb4:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90023cb8:	f7fa fe2b 	bl	9001e912 <EwMoveRectNeg>
90023cbc:	e79d      	b.n	90023bfa <CoreRoot_UpdateCanvas+0xa6>
90023cbe:	bf00      	nop

90023cc0 <CoreRoot__UpdateCanvas>:
{
90023cc0:	b082      	sub	sp, #8
90023cc2:	b530      	push	{r4, r5, lr}
90023cc4:	b083      	sub	sp, #12
90023cc6:	4604      	mov	r4, r0
  return CoreRoot_UpdateCanvas((CoreRoot)_this, aCanvas, aOffset );
90023cc8:	9d08      	ldr	r5, [sp, #32]
{
90023cca:	9307      	str	r3, [sp, #28]
  return CoreRoot_UpdateCanvas((CoreRoot)_this, aCanvas, aOffset );
90023ccc:	9500      	str	r5, [sp, #0]
90023cce:	f7ff ff41 	bl	90023b54 <CoreRoot_UpdateCanvas>
}
90023cd2:	4620      	mov	r0, r4
90023cd4:	b003      	add	sp, #12
90023cd6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90023cda:	b002      	add	sp, #8
90023cdc:	4770      	bx	lr
90023cde:	bf00      	nop

90023ce0 <CoreRoot_GetUpdateRegion>:
  if ( aRegionNo < 0 )
90023ce0:	2a00      	cmp	r2, #0
{
90023ce2:	b4f0      	push	{r4, r5, r6, r7}
90023ce4:	4607      	mov	r7, r0
  if ( aRegionNo < 0 )
90023ce6:	db1e      	blt.n	90023d26 <CoreRoot_GetUpdateRegion+0x46>
  XInt32 j = _this->noOfRegions;
90023ce8:	f8d1 43dc 	ldr.w	r4, [r1, #988]	; 0x3dc
  for ( i = 0; ( i < j ) && ( i < 4 ); i = i + 1 )
90023cec:	2c00      	cmp	r4, #0
90023cee:	dd1a      	ble.n	90023d26 <CoreRoot_GetUpdateRegion+0x46>
90023cf0:	f501 7563 	add.w	r5, r1, #908	; 0x38c
90023cf4:	2300      	movs	r3, #0
90023cf6:	e006      	b.n	90023d06 <CoreRoot_GetUpdateRegion+0x26>
      j = j + 1;
90023cf8:	3401      	adds	r4, #1
      aRegionNo = aRegionNo + 1;
90023cfa:	3201      	adds	r2, #1
  for ( i = 0; ( i < j ) && ( i < 4 ); i = i + 1 )
90023cfc:	3301      	adds	r3, #1
90023cfe:	429c      	cmp	r4, r3
90023d00:	dd11      	ble.n	90023d26 <CoreRoot_GetUpdateRegion+0x46>
90023d02:	2b03      	cmp	r3, #3
90023d04:	dc0f      	bgt.n	90023d26 <CoreRoot_GetUpdateRegion+0x46>
    if ( _this->regionsArea[ EwCheckIndex( i, 4 )] == 0 )
90023d06:	f855 6b04 	ldr.w	r6, [r5], #4
90023d0a:	2e00      	cmp	r6, #0
90023d0c:	d0f4      	beq.n	90023cf8 <CoreRoot_GetUpdateRegion+0x18>
      if ( i == aRegionNo )
90023d0e:	4293      	cmp	r3, r2
90023d10:	d1f4      	bne.n	90023cfc <CoreRoot_GetUpdateRegion+0x1c>
        return _this->regions[ EwCheckIndex( i, 4 )];
90023d12:	eb01 1303 	add.w	r3, r1, r3, lsl #4
90023d16:	f503 7367 	add.w	r3, r3, #924	; 0x39c
90023d1a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023d1c:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
}
90023d20:	4638      	mov	r0, r7
90023d22:	bcf0      	pop	{r4, r5, r6, r7}
90023d24:	4770      	bx	lr
    return _Const0001;
90023d26:	2300      	movs	r3, #0
}
90023d28:	4638      	mov	r0, r7
    return _Const0001;
90023d2a:	e9c7 3300 	strd	r3, r3, [r7]
90023d2e:	e9c7 3302 	strd	r3, r3, [r7, #8]
}
90023d32:	bcf0      	pop	{r4, r5, r6, r7}
90023d34:	4770      	bx	lr
90023d36:	bf00      	nop

90023d38 <CoreRoot__GetUpdateRegion>:
{
90023d38:	b510      	push	{r4, lr}
90023d3a:	4604      	mov	r4, r0
  return CoreRoot_GetUpdateRegion((CoreRoot)_this, aRegionNo );
90023d3c:	f7ff ffd0 	bl	90023ce0 <CoreRoot_GetUpdateRegion>
}
90023d40:	4620      	mov	r0, r4
90023d42:	bd10      	pop	{r4, pc}

90023d44 <CoreRoot_BeginUpdate>:
{
90023d44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    preserveFramebufferContent = (XBool)EwPreserveFramebufferContent;
90023d48:	49b8      	ldr	r1, [pc, #736]	; (9002402c <CoreRoot_BeginUpdate+0x2e8>)
{
90023d4a:	4681      	mov	r9, r0
90023d4c:	b0a3      	sub	sp, #140	; 0x8c
    fullScreenUpdate           = (XBool)EwFullScreenUpdate;
90023d4e:	4bb8      	ldr	r3, [pc, #736]	; (90024030 <CoreRoot_BeginUpdate+0x2ec>)
    preserveFramebufferContent = (XBool)EwPreserveFramebufferContent;
90023d50:	780d      	ldrb	r5, [r1, #0]
  overlayArea = EwGetOverlayArea( par1, 1 );
90023d52:	2201      	movs	r2, #1
  par1 = (XBool)( _this->noOfRegions > 0 );
90023d54:	f8d9 13dc 	ldr.w	r1, [r9, #988]	; 0x3dc
  overlayArea = EwGetOverlayArea( par1, 1 );
90023d58:	ac0e      	add	r4, sp, #56	; 0x38
    fullScreenUpdate           = (XBool)EwFullScreenUpdate;
90023d5a:	781f      	ldrb	r7, [r3, #0]
  overlayArea = EwGetOverlayArea( par1, 1 );
90023d5c:	2900      	cmp	r1, #0
90023d5e:	4620      	mov	r0, r4
90023d60:	bfd4      	ite	le
90023d62:	2100      	movle	r1, #0
90023d64:	2101      	movgt	r1, #1
90023d66:	f7ee fe43 	bl	900129f0 <EwGetOverlayArea>
  if ( !EwIsRectEmpty( overlayArea ))
90023d6a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90023d6e:	f7fa fce3 	bl	9001e738 <EwIsRectEmpty>
90023d72:	b970      	cbnz	r0, 90023d92 <CoreRoot_BeginUpdate+0x4e>
    CoreGroup__InvalidateArea( _this, overlayArea );
90023d74:	ae16      	add	r6, sp, #88	; 0x58
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90023d76:	f8d9 c000 	ldr.w	ip, [r9]
90023d7a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90023d7e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90023d82:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023d84:	4648      	mov	r0, r9
90023d86:	9300      	str	r3, [sp, #0]
90023d88:	f8dc 4060 	ldr.w	r4, [ip, #96]	; 0x60
90023d8c:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90023d90:	47a0      	blx	r4
  if (( !preserveFramebufferContent && !fullScreenUpdate ) && ( _this->noOfRegions 
90023d92:	ea55 0107 	orrs.w	r1, r5, r7
90023d96:	f8d9 63dc 	ldr.w	r6, [r9, #988]	; 0x3dc
90023d9a:	d132      	bne.n	90023e02 <CoreRoot_BeginUpdate+0xbe>
90023d9c:	2e00      	cmp	r6, #0
90023d9e:	dd30      	ble.n	90023e02 <CoreRoot_BeginUpdate+0xbe>
    XRect tmpRegions[ 3 ] = {0};
90023da0:	464d      	mov	r5, r9
90023da2:	46c8      	mov	r8, r9
90023da4:	2701      	movs	r7, #1
90023da6:	2230      	movs	r2, #48	; 0x30
90023da8:	a816      	add	r0, sp, #88	; 0x58
90023daa:	f00a f90d 	bl	9002dfc8 <memset>
      tmpRegions[ EwCheckIndex( i, 3 )] = _this->regions[ EwCheckIndex( i, 4 )];
90023dae:	f508 7367 	add.w	r3, r8, #924	; 0x39c
90023db2:	aa16      	add	r2, sp, #88	; 0x58
    for ( i = 0; i < tmpNoOfRegions; i = i + 1 )
90023db4:	42b7      	cmp	r7, r6
      tmpRegions[ EwCheckIndex( i, 3 )] = _this->regions[ EwCheckIndex( i, 4 )];
90023db6:	f108 0810 	add.w	r8, r8, #16
90023dba:	eb02 1407 	add.w	r4, r2, r7, lsl #4
90023dbe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023dc0:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
    for ( i = 0; i < tmpNoOfRegions; i = i + 1 )
90023dc4:	f000 80fb 	beq.w	90023fbe <CoreRoot_BeginUpdate+0x27a>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023dc8:	2f03      	cmp	r7, #3
90023dca:	4639      	mov	r1, r7
90023dcc:	4638      	mov	r0, r7
90023dce:	f640 0235 	movw	r2, #2101	; 0x835
90023dd2:	f107 0701 	add.w	r7, r7, #1
90023dd6:	d1ea      	bne.n	90023dae <CoreRoot_BeginUpdate+0x6a>
90023dd8:	f7ff f91a 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023ddc:	e7e7      	b.n	90023dae <CoreRoot_BeginUpdate+0x6a>
90023dde:	ac16      	add	r4, sp, #88	; 0x58
90023de0:	eb09 1c06 	add.w	ip, r9, r6, lsl #4
      _this->lastRegions[ EwCheckIndex( i, 3 )] = tmpRegions[ EwCheckIndex( i, 3 )];
90023de4:	f505 7756 	add.w	r7, r5, #856	; 0x358
90023de8:	3510      	adds	r5, #16
90023dea:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
    for ( i = 0; i < tmpNoOfRegions; i = i + 1 )
90023dee:	4565      	cmp	r5, ip
90023df0:	f104 0410 	add.w	r4, r4, #16
      _this->lastRegions[ EwCheckIndex( i, 3 )] = tmpRegions[ EwCheckIndex( i, 3 )];
90023df4:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
    for ( i = 0; i < tmpNoOfRegions; i = i + 1 )
90023df8:	d1f4      	bne.n	90023de4 <CoreRoot_BeginUpdate+0xa0>
    _this->noOfLastRegions = tmpNoOfRegions;
90023dfa:	f8c9 6388 	str.w	r6, [r9, #904]	; 0x388
90023dfe:	f8d9 63dc 	ldr.w	r6, [r9, #988]	; 0x3dc
  for ( j = 0; j < ( _this->noOfRegions - 1 ); j = j + 1 )
90023e02:	1e74      	subs	r4, r6, #1
90023e04:	2c00      	cmp	r4, #0
90023e06:	dd31      	ble.n	90023e6c <CoreRoot_BeginUpdate+0x128>
90023e08:	f509 7763 	add.w	r7, r9, #908	; 0x38c
90023e0c:	2300      	movs	r3, #0
90023e0e:	46bb      	mov	fp, r7
90023e10:	464f      	mov	r7, r9
90023e12:	1c5d      	adds	r5, r3, #1
90023e14:	46d9      	mov	r9, fp
    if ( _this->regionsArea[ EwCheckIndex( j, 4 )] > 0 )
90023e16:	f85b 2b04 	ldr.w	r2, [fp], #4
90023e1a:	2a00      	cmp	r2, #0
90023e1c:	dc0a      	bgt.n	90023e34 <CoreRoot_BeginUpdate+0xf0>
  for ( j = 0; j < ( _this->noOfRegions - 1 ); j = j + 1 )
90023e1e:	1e74      	subs	r4, r6, #1
90023e20:	42ac      	cmp	r4, r5
90023e22:	dd22      	ble.n	90023e6a <CoreRoot_BeginUpdate+0x126>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023e24:	2d04      	cmp	r5, #4
90023e26:	d041      	beq.n	90023eac <CoreRoot_BeginUpdate+0x168>
90023e28:	462b      	mov	r3, r5
    if ( _this->regionsArea[ EwCheckIndex( j, 4 )] > 0 )
90023e2a:	f85b 2b04 	ldr.w	r2, [fp], #4
90023e2e:	1c5d      	adds	r5, r3, #1
90023e30:	2a00      	cmp	r2, #0
90023e32:	ddf4      	ble.n	90023e1e <CoreRoot_BeginUpdate+0xda>
      for ( k = j + 1; k < _this->noOfRegions; k = k + 1 )
90023e34:	42ae      	cmp	r6, r5
90023e36:	ddf2      	ble.n	90023e1e <CoreRoot_BeginUpdate+0xda>
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023e38:	eb07 1203 	add.w	r2, r7, r3, lsl #4
      for ( k = j + 1; k < _this->noOfRegions; k = k + 1 )
90023e3c:	462c      	mov	r4, r5
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023e3e:	011b      	lsls	r3, r3, #4
90023e40:	9206      	str	r2, [sp, #24]
90023e42:	9309      	str	r3, [sp, #36]	; 0x24
90023e44:	f502 7367 	add.w	r3, r2, #924	; 0x39c
90023e48:	e9cd 3507 	strd	r3, r5, [sp, #28]
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023e4c:	2c03      	cmp	r4, #3
90023e4e:	d87f      	bhi.n	90023f50 <CoreRoot_BeginUpdate+0x20c>
        if ( _this->regionsArea[ EwCheckIndex( k, 4 )] > 0 )
90023e50:	f859 3024 	ldr.w	r3, [r9, r4, lsl #2]
90023e54:	2b00      	cmp	r3, #0
90023e56:	dc33      	bgt.n	90023ec0 <CoreRoot_BeginUpdate+0x17c>
      for ( k = j + 1; k < _this->noOfRegions; k = k + 1 )
90023e58:	3401      	adds	r4, #1
90023e5a:	f8d7 63dc 	ldr.w	r6, [r7, #988]	; 0x3dc
90023e5e:	42a6      	cmp	r6, r4
90023e60:	dcf4      	bgt.n	90023e4c <CoreRoot_BeginUpdate+0x108>
90023e62:	9d08      	ldr	r5, [sp, #32]
  for ( j = 0; j < ( _this->noOfRegions - 1 ); j = j + 1 )
90023e64:	1e74      	subs	r4, r6, #1
90023e66:	42ac      	cmp	r4, r5
90023e68:	dcdc      	bgt.n	90023e24 <CoreRoot_BeginUpdate+0xe0>
90023e6a:	46b9      	mov	r9, r7
  for ( i = _this->noOfRegions - 1; i >= 0; i = i - 1 )
90023e6c:	2c00      	cmp	r4, #0
90023e6e:	db78      	blt.n	90023f62 <CoreRoot_BeginUpdate+0x21e>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023e70:	2c03      	cmp	r4, #3
90023e72:	f509 7763 	add.w	r7, r9, #908	; 0x38c
90023e76:	dc0c      	bgt.n	90023e92 <CoreRoot_BeginUpdate+0x14e>
    if ( _this->regionsArea[ EwCheckIndex( i, 4 )] == 0 )
90023e78:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
90023e7c:	b923      	cbnz	r3, 90023e88 <CoreRoot_BeginUpdate+0x144>
      _this->noOfRegions = _this->noOfRegions - 1;
90023e7e:	f8d9 33dc 	ldr.w	r3, [r9, #988]	; 0x3dc
90023e82:	3b01      	subs	r3, #1
90023e84:	f8c9 33dc 	str.w	r3, [r9, #988]	; 0x3dc
  for ( i = _this->noOfRegions - 1; i >= 0; i = i - 1 )
90023e88:	1e63      	subs	r3, r4, #1
90023e8a:	d468      	bmi.n	90023f5e <CoreRoot_BeginUpdate+0x21a>
90023e8c:	461c      	mov	r4, r3
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023e8e:	2c03      	cmp	r4, #3
90023e90:	ddf2      	ble.n	90023e78 <CoreRoot_BeginUpdate+0x134>
90023e92:	f640 0253 	movw	r2, #2131	; 0x853
90023e96:	2104      	movs	r1, #4
90023e98:	4620      	mov	r0, r4
90023e9a:	f7ff f8b9 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
    if ( _this->regionsArea[ EwCheckIndex( i, 4 )] == 0 )
90023e9e:	f857 2024 	ldr.w	r2, [r7, r4, lsl #2]
90023ea2:	1e63      	subs	r3, r4, #1
90023ea4:	2a00      	cmp	r2, #0
90023ea6:	d0ea      	beq.n	90023e7e <CoreRoot_BeginUpdate+0x13a>
90023ea8:	461c      	mov	r4, r3
90023eaa:	e7f0      	b.n	90023e8e <CoreRoot_BeginUpdate+0x14a>
90023eac:	f640 0241 	movw	r2, #2113	; 0x841
90023eb0:	4629      	mov	r1, r5
90023eb2:	4628      	mov	r0, r5
90023eb4:	f7ff f8ac 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023eb8:	f8d7 63dc 	ldr.w	r6, [r7, #988]	; 0x3dc
90023ebc:	462b      	mov	r3, r5
90023ebe:	e7b4      	b.n	90023e2a <CoreRoot_BeginUpdate+0xe6>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023ec0:	2c03      	cmp	r4, #3
90023ec2:	d852      	bhi.n	90023f6a <CoreRoot_BeginUpdate+0x226>
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023ec4:	eb07 1304 	add.w	r3, r7, r4, lsl #4
90023ec8:	ad01      	add	r5, sp, #4
90023eca:	ea4f 1804 	mov.w	r8, r4, lsl #4
90023ece:	f503 7367 	add.w	r3, r3, #924	; 0x39c
90023ed2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023ed4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90023ed8:	9b06      	ldr	r3, [sp, #24]
90023eda:	a816      	add	r0, sp, #88	; 0x58
90023edc:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
90023ee0:	9300      	str	r3, [sp, #0]
90023ee2:	9b07      	ldr	r3, [sp, #28]
90023ee4:	cb0e      	ldmia	r3, {r1, r2, r3}
90023ee6:	f7fa fc86 	bl	9001e7f6 <EwUnionRect>
90023eea:	ab16      	add	r3, sp, #88	; 0x58
90023eec:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023eee:	f7fa fd4e 	bl	9001e98e <EwGetRectArea>
          if ((( unionArea - _this->regionsArea[ EwCheckIndex( j, 4 )]) - _this->regionsArea[ 
90023ef2:	f85b 3c04 	ldr.w	r3, [fp, #-4]
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023ef6:	4606      	mov	r6, r0
          if ((( unionArea - _this->regionsArea[ EwCheckIndex( j, 4 )]) - _this->regionsArea[ 
90023ef8:	eba0 0a03 	sub.w	sl, r0, r3
90023efc:	f859 3024 	ldr.w	r3, [r9, r4, lsl #2]
90023f00:	ebaa 0303 	sub.w	r3, sl, r3
90023f04:	2b00      	cmp	r3, #0
90023f06:	daa7      	bge.n	90023e58 <CoreRoot_BeginUpdate+0x114>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023f08:	2c03      	cmp	r4, #3
90023f0a:	f200 8087 	bhi.w	9002401c <CoreRoot_BeginUpdate+0x2d8>
            _this->regions[ EwCheckIndex( j, 4 )] = EwUnionRect( _this->regions[ 
90023f0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90023f10:	44b8      	add	r8, r7
90023f12:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
90023f16:	eb07 0c03 	add.w	ip, r7, r3
90023f1a:	f508 7367 	add.w	r3, r8, #924	; 0x39c
90023f1e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023f20:	f50c 7867 	add.w	r8, ip, #924	; 0x39c
90023f24:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90023f28:	f8dc 33a8 	ldr.w	r3, [ip, #936]	; 0x3a8
90023f2c:	4650      	mov	r0, sl
90023f2e:	9300      	str	r3, [sp, #0]
90023f30:	e898 000e 	ldmia.w	r8, {r1, r2, r3}
90023f34:	f7fa fc5f 	bl	9001e7f6 <EwUnionRect>
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023f38:	2c03      	cmp	r4, #3
            _this->regions[ EwCheckIndex( j, 4 )] = EwUnionRect( _this->regions[ 
90023f3a:	e89a 000f 	ldmia.w	sl, {r0, r1, r2, r3}
90023f3e:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
            _this->regionsArea[ EwCheckIndex( j, 4 )] = unionArea;
90023f42:	f84b 6c04 	str.w	r6, [fp, #-4]
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023f46:	d862      	bhi.n	9002400e <CoreRoot_BeginUpdate+0x2ca>
            _this->regionsArea[ EwCheckIndex( k, 4 )] = 0;
90023f48:	2300      	movs	r3, #0
90023f4a:	f849 3024 	str.w	r3, [r9, r4, lsl #2]
90023f4e:	e783      	b.n	90023e58 <CoreRoot_BeginUpdate+0x114>
90023f50:	f640 0243 	movw	r2, #2115	; 0x843
90023f54:	2104      	movs	r1, #4
90023f56:	4620      	mov	r0, r4
90023f58:	f7ff f85a 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023f5c:	e778      	b.n	90023e50 <CoreRoot_BeginUpdate+0x10c>
90023f5e:	f8d9 63dc 	ldr.w	r6, [r9, #988]	; 0x3dc
}
90023f62:	4630      	mov	r0, r6
90023f64:	b023      	add	sp, #140	; 0x8c
90023f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023f6a:	2104      	movs	r1, #4
90023f6c:	4620      	mov	r0, r4
90023f6e:	f640 0246 	movw	r2, #2118	; 0x846
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023f72:	ea4f 1804 	mov.w	r8, r4, lsl #4
90023f76:	eb0d 0501 	add.w	r5, sp, r1
90023f7a:	f7ff f849 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023f7e:	eb07 1304 	add.w	r3, r7, r4, lsl #4
90023f82:	f503 7367 	add.w	r3, r3, #924	; 0x39c
90023f86:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023f88:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90023f8c:	9b06      	ldr	r3, [sp, #24]
90023f8e:	a816      	add	r0, sp, #88	; 0x58
90023f90:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
90023f94:	9300      	str	r3, [sp, #0]
90023f96:	9b07      	ldr	r3, [sp, #28]
90023f98:	cb0e      	ldmia	r3, {r1, r2, r3}
90023f9a:	f7fa fc2c 	bl	9001e7f6 <EwUnionRect>
90023f9e:	ab16      	add	r3, sp, #88	; 0x58
90023fa0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023fa2:	f7fa fcf4 	bl	9001e98e <EwGetRectArea>
          if ((( unionArea - _this->regionsArea[ EwCheckIndex( j, 4 )]) - _this->regionsArea[ 
90023fa6:	f85b 3c04 	ldr.w	r3, [fp, #-4]
          XInt32 unionArea = EwGetRectArea( EwUnionRect( _this->regions[ EwCheckIndex( 
90023faa:	4606      	mov	r6, r0
    return aIndex;
90023fac:	f640 0249 	movw	r2, #2121	; 0x849
90023fb0:	2104      	movs	r1, #4
90023fb2:	4620      	mov	r0, r4
          if ((( unionArea - _this->regionsArea[ EwCheckIndex( j, 4 )]) - _this->regionsArea[ 
90023fb4:	eba6 0a03 	sub.w	sl, r6, r3
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023fb8:	f7ff f82a 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90023fbc:	e79e      	b.n	90023efc <CoreRoot_BeginUpdate+0x1b8>
    for ( i = 0; i < _this->noOfLastRegions; i = i + 1 )
90023fbe:	f8d9 3388 	ldr.w	r3, [r9, #904]	; 0x388
90023fc2:	2b00      	cmp	r3, #0
90023fc4:	f77f af0b 	ble.w	90023dde <CoreRoot_BeginUpdate+0x9a>
90023fc8:	46c8      	mov	r8, r9
90023fca:	2700      	movs	r7, #0
90023fcc:	ac12      	add	r4, sp, #72	; 0x48
    return aIndex;
90023fce:	f508 7356 	add.w	r3, r8, #856	; 0x358
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90023fd2:	f8d9 c000 	ldr.w	ip, [r9]
    for ( i = 0; i < _this->noOfLastRegions; i = i + 1 )
90023fd6:	3701      	adds	r7, #1
90023fd8:	f108 0810 	add.w	r8, r8, #16
90023fdc:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90023fde:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90023fe2:	9b15      	ldr	r3, [sp, #84]	; 0x54
90023fe4:	4648      	mov	r0, r9
90023fe6:	9300      	str	r3, [sp, #0]
90023fe8:	f8dc a060 	ldr.w	sl, [ip, #96]	; 0x60
90023fec:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90023ff0:	47d0      	blx	sl
    for ( i = 0; i < _this->noOfLastRegions; i = i + 1 )
90023ff2:	f8d9 3388 	ldr.w	r3, [r9, #904]	; 0x388
90023ff6:	42bb      	cmp	r3, r7
90023ff8:	f77f aef1 	ble.w	90023dde <CoreRoot_BeginUpdate+0x9a>
90023ffc:	2103      	movs	r1, #3
    if (( aIndex < 0 ) || ( aIndex >= aRange ))
90023ffe:	2f02      	cmp	r7, #2
90024000:	f640 0238 	movw	r2, #2104	; 0x838
90024004:	4608      	mov	r0, r1
90024006:	dde2      	ble.n	90023fce <CoreRoot_BeginUpdate+0x28a>
90024008:	f7ff f802 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002400c:	e7df      	b.n	90023fce <CoreRoot_BeginUpdate+0x28a>
9002400e:	f640 024e 	movw	r2, #2126	; 0x84e
90024012:	2104      	movs	r1, #4
90024014:	4620      	mov	r0, r4
90024016:	f7fe fffb 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
9002401a:	e795      	b.n	90023f48 <CoreRoot_BeginUpdate+0x204>
9002401c:	f640 024c 	movw	r2, #2124	; 0x84c
90024020:	2104      	movs	r1, #4
90024022:	4620      	mov	r0, r4
90024024:	f7fe fff4 	bl	90023010 <EwCheckIndex.part.0.constprop.0>
90024028:	e771      	b.n	90023f0e <CoreRoot_BeginUpdate+0x1ca>
9002402a:	bf00      	nop
9002402c:	20000010 	.word	0x20000010
90024030:	200001b8 	.word	0x200001b8

90024034 <CoreRoot_UpdateGE20>:
{
90024034:	b5f0      	push	{r4, r5, r6, r7, lr}
90024036:	4604      	mov	r4, r0
90024038:	b087      	sub	sp, #28
  if ( CoreRoot_BeginUpdate( _this ) == 0 )
9002403a:	4608      	mov	r0, r1
{
9002403c:	460f      	mov	r7, r1
9002403e:	4615      	mov	r5, r2
  if ( CoreRoot_BeginUpdate( _this ) == 0 )
90024040:	f7ff fe80 	bl	90023d44 <CoreRoot_BeginUpdate>
90024044:	b930      	cbnz	r0, 90024054 <CoreRoot_UpdateGE20+0x20>
    return _Const0001;
90024046:	e9c4 0000 	strd	r0, r0, [r4]
9002404a:	e9c4 0002 	strd	r0, r0, [r4, #8]
}
9002404e:	4620      	mov	r0, r4
90024050:	b007      	add	sp, #28
90024052:	bdf0      	pop	{r4, r5, r6, r7, pc}
  wholeArea = CoreRoot_UpdateCanvas( _this, aCanvas, _Const0000 );
90024054:	4b0e      	ldr	r3, [pc, #56]	; (90024090 <CoreRoot_UpdateGE20+0x5c>)
90024056:	462a      	mov	r2, r5
90024058:	ae02      	add	r6, sp, #8
9002405a:	4639      	mov	r1, r7
9002405c:	685d      	ldr	r5, [r3, #4]
9002405e:	4630      	mov	r0, r6
90024060:	681b      	ldr	r3, [r3, #0]
90024062:	9500      	str	r5, [sp, #0]
90024064:	f7ff fd76 	bl	90023b54 <CoreRoot_UpdateCanvas>
  if ( _this->noOfRegions > 0 )
90024068:	f8d7 33dc 	ldr.w	r3, [r7, #988]	; 0x3dc
9002406c:	2b00      	cmp	r3, #0
9002406e:	dd07      	ble.n	90024080 <CoreRoot_UpdateGE20+0x4c>
    _this->fpsCounter = _this->fpsCounter + 1;
90024070:	f8d7 3354 	ldr.w	r3, [r7, #852]	; 0x354
    _this->noOfRegions = 0;
90024074:	2200      	movs	r2, #0
    _this->fpsCounter = _this->fpsCounter + 1;
90024076:	3301      	adds	r3, #1
    _this->noOfRegions = 0;
90024078:	f8c7 23dc 	str.w	r2, [r7, #988]	; 0x3dc
    _this->fpsCounter = _this->fpsCounter + 1;
9002407c:	f8c7 3354 	str.w	r3, [r7, #852]	; 0x354
  return wholeArea;
90024080:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90024084:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
}
90024088:	4620      	mov	r0, r4
9002408a:	b007      	add	sp, #28
9002408c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002408e:	bf00      	nop
90024090:	900334f8 	.word	0x900334f8

90024094 <CoreRoot__UpdateGE20>:
{
90024094:	b510      	push	{r4, lr}
90024096:	4604      	mov	r4, r0
  return CoreRoot_UpdateGE20((CoreRoot)_this, aCanvas );
90024098:	f7ff ffcc 	bl	90024034 <CoreRoot_UpdateGE20>
}
9002409c:	4620      	mov	r0, r4
9002409e:	bd10      	pop	{r4, pc}

900240a0 <CoreRoot__BeginUpdate>:
  return CoreRoot_BeginUpdate((CoreRoot)_this );
900240a0:	f7ff be50 	b.w	90023d44 <CoreRoot_BeginUpdate>

900240a4 <CoreRoot__DoesNeedUpdate>:
  if ( _this->noOfRegions > 0 )
900240a4:	f8d0 33dc 	ldr.w	r3, [r0, #988]	; 0x3dc
900240a8:	2b00      	cmp	r3, #0
900240aa:	dd01      	ble.n	900240b0 <CoreRoot__DoesNeedUpdate+0xc>
}
900240ac:	2001      	movs	r0, #1
900240ae:	4770      	bx	lr
900240b0:	f7fe bf9c 	b.w	90022fec <CoreRoot_DoesNeedUpdate.part.0>

900240b4 <CoreRoot_Initialize>:
{
900240b4:	b5f0      	push	{r4, r5, r6, r7, lr}
900240b6:	b08d      	sub	sp, #52	; 0x34
  CoreRectView__OnSetBounds( _this, EwNewRect2Point( _Const0000, aSize ));
900240b8:	4f1a      	ldr	r7, [pc, #104]	; (90024124 <CoreRoot_Initialize+0x70>)
{
900240ba:	4605      	mov	r5, r0
900240bc:	ab02      	add	r3, sp, #8
  CoreRectView__OnSetBounds( _this, EwNewRect2Point( _Const0000, aSize ));
900240be:	ae04      	add	r6, sp, #16
900240c0:	ac08      	add	r4, sp, #32
900240c2:	4630      	mov	r0, r6
{
900240c4:	e883 0006 	stmia.w	r3, {r1, r2}
  CoreRectView__OnSetBounds( _this, EwNewRect2Point( _Const0000, aSize ));
900240c8:	9a03      	ldr	r2, [sp, #12]
900240ca:	460b      	mov	r3, r1
900240cc:	9200      	str	r2, [sp, #0]
900240ce:	e897 0006 	ldmia.w	r7, {r1, r2}
900240d2:	f7fa fada 	bl	9001e68a <EwNewRect2Point>
  ((CoreRectView)_this)->_.VMT->OnSetBounds((CoreRectView)_this, value );
900240d6:	682f      	ldr	r7, [r5, #0]
900240d8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900240dc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
900240e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900240e2:	4628      	mov	r0, r5
900240e4:	9300      	str	r3, [sp, #0]
900240e6:	6d3e      	ldr	r6, [r7, #80]	; 0x50
900240e8:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
900240ec:	47b0      	blx	r6
  if ( _this->hasRootFocus )
900240ee:	f895 33e6 	ldrb.w	r3, [r5, #998]	; 0x3e6
    _this->Super3.viewState = _this->Super3.viewState | ( CoreViewStateFocused | 
900240f2:	6a2a      	ldr	r2, [r5, #32]
  if ( _this->hasRootFocus )
900240f4:	b193      	cbz	r3, 9002411c <CoreRoot_Initialize+0x68>
    _this->Super3.viewState = _this->Super3.viewState | ( CoreViewStateFocused | 
900240f6:	f042 0260 	orr.w	r2, r2, #96	; 0x60
900240fa:	f105 0324 	add.w	r3, r5, #36	; 0x24
900240fe:	622a      	str	r2, [r5, #32]
  ((CoreGroup)_this)->_.VMT->InvalidateArea((CoreGroup)_this, aArea );
90024100:	682e      	ldr	r6, [r5, #0]
90024102:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90024104:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90024108:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002410a:	4628      	mov	r0, r5
9002410c:	9300      	str	r3, [sp, #0]
9002410e:	6e36      	ldr	r6, [r6, #96]	; 0x60
90024110:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90024114:	47b0      	blx	r6
}
90024116:	4628      	mov	r0, r5
90024118:	b00d      	add	sp, #52	; 0x34
9002411a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    _this->Super3.viewState = _this->Super3.viewState | CoreViewStateSelected;
9002411c:	f042 0220 	orr.w	r2, r2, #32
90024120:	e7eb      	b.n	900240fa <CoreRoot_Initialize+0x46>
90024122:	bf00      	nop
90024124:	900334f8 	.word	0x900334f8

90024128 <CoreRoot__Initialize>:
{
90024128:	b082      	sub	sp, #8
9002412a:	466b      	mov	r3, sp
9002412c:	e883 0006 	stmia.w	r3, {r1, r2}
  return CoreRoot_Initialize((CoreRoot)_this, aSize );
90024130:	e893 0006 	ldmia.w	r3, {r1, r2}
}
90024134:	b002      	add	sp, #8
  return CoreRoot_Initialize((CoreRoot)_this, aSize );
90024136:	f7ff bfbd 	b.w	900240b4 <CoreRoot_Initialize>
9002413a:	bf00      	nop

9002413c <CoreRoot_DriveMultiTouchMovement>:
{
9002413c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024140:	b099      	sub	sp, #100	; 0x64
  if (( aFinger < 0 ) || ( aFinger > 9 ))
90024142:	2909      	cmp	r1, #9
{
90024144:	4605      	mov	r5, r0
90024146:	af0c      	add	r7, sp, #48	; 0x30
90024148:	e887 000c 	stmia.w	r7, {r2, r3}
  if (( aFinger < 0 ) || ( aFinger > 9 ))
9002414c:	d905      	bls.n	9002415a <CoreRoot_DriveMultiTouchMovement+0x1e>
    _this->currentEventTimestamp = 0;
9002414e:	2000      	movs	r0, #0
90024150:	f8c5 00a0 	str.w	r0, [r5, #160]	; 0xa0
}
90024154:	b019      	add	sp, #100	; 0x64
90024156:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  offset = EwMovePointNeg( aPos, _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )]);
9002415a:	f101 0355 	add.w	r3, r1, #85	; 0x55
9002415e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024160:	eb00 0981 	add.w	r9, r0, r1, lsl #2
90024164:	460e      	mov	r6, r1
90024166:	ea4f 08c3 	mov.w	r8, r3, lsl #3
9002416a:	990d      	ldr	r1, [sp, #52]	; 0x34
9002416c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90024170:	9202      	str	r2, [sp, #8]
  _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )] = aPos;
90024172:	f108 0a04 	add.w	sl, r8, #4
90024176:	9103      	str	r1, [sp, #12]
  offset = EwMovePointNeg( aPos, _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )]);
90024178:	ac0e      	add	r4, sp, #56	; 0x38
  _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )] = aPos;
9002417a:	eb05 010a 	add.w	r1, r5, sl
  offset = EwMovePointNeg( aPos, _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )]);
9002417e:	4620      	mov	r0, r4
  _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )] = aPos;
90024180:	9104      	str	r1, [sp, #16]
  offset = EwMovePointNeg( aPos, _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )]);
90024182:	e9d3 3201 	ldrd	r3, r2, [r3, #4]
90024186:	9200      	str	r2, [sp, #0]
90024188:	e897 0006 	ldmia.w	r7, {r1, r2}
9002418c:	f7fa fa22 	bl	9001e5d4 <EwMovePointNeg>
  _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )] = aPos;
90024190:	9a02      	ldr	r2, [sp, #8]
90024192:	e9dd 7003 	ldrd	r7, r0, [sp, #12]
90024196:	f845 200a 	str.w	r2, [r5, sl]
9002419a:	6047      	str	r7, [r0, #4]
  if (( _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] == 0 ) || !EwCompPoint( 
9002419c:	f8d9 3048 	ldr.w	r3, [r9, #72]	; 0x48
900241a0:	2b00      	cmp	r3, #0
900241a2:	d0d4      	beq.n	9002414e <CoreRoot_DriveMultiTouchMovement+0x12>
900241a4:	4b95      	ldr	r3, [pc, #596]	; (900243fc <CoreRoot_DriveMultiTouchMovement+0x2c0>)
900241a6:	e894 0003 	ldmia.w	r4, {r0, r1}
900241aa:	cb0c      	ldmia	r3, {r2, r3}
900241ac:	f7fa f9f3 	bl	9001e596 <EwCompPoint>
900241b0:	2800      	cmp	r0, #0
900241b2:	d0cc      	beq.n	9002414e <CoreRoot_DriveMultiTouchMovement+0x12>
  grp = _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )]->Owner;
900241b4:	f8d9 3048 	ldr.w	r3, [r9, #72]	; 0x48
900241b8:	699c      	ldr	r4, [r3, #24]
  while (( grp != 0 ) && ((CoreRoot)grp != _this ))
900241ba:	42a5      	cmp	r5, r4
900241bc:	f000 811b 	beq.w	900243f6 <CoreRoot_DriveMultiTouchMovement+0x2ba>
900241c0:	2c00      	cmp	r4, #0
900241c2:	f000 8118 	beq.w	900243f6 <CoreRoot_DriveMultiTouchMovement+0x2ba>
  pos = aPos;
900241c6:	9b02      	ldr	r3, [sp, #8]
900241c8:	f10d 0b40 	add.w	fp, sp, #64	; 0x40
    pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
900241cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
900241ce:	4658      	mov	r0, fp
900241d0:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
900241d4:	9200      	str	r2, [sp, #0]
900241d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
900241d8:	e89b 0006 	ldmia.w	fp, {r1, r2}
900241dc:	f7fa f9fa 	bl	9001e5d4 <EwMovePointNeg>
    grp = grp->Super2.Owner;
900241e0:	69a4      	ldr	r4, [r4, #24]
    pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
900241e2:	e9dd 3710 	ldrd	r3, r7, [sp, #64]	; 0x40
  while (( grp != 0 ) && ((CoreRoot)grp != _this ))
900241e6:	2c00      	cmp	r4, #0
900241e8:	d073      	beq.n	900242d2 <CoreRoot_DriveMultiTouchMovement+0x196>
900241ea:	42a5      	cmp	r5, r4
900241ec:	d1ee      	bne.n	900241cc <CoreRoot_DriveMultiTouchMovement+0x90>
  if (( grp == 0 ) && ((CoreRoot)_this->cursorTargetView[ EwCheckIndex( aFinger, 
900241ee:	2c00      	cmp	r4, #0
900241f0:	d06f      	beq.n	900242d2 <CoreRoot_DriveMultiTouchMovement+0x196>
    _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )] = pos;
900241f2:	f1a8 029c 	sub.w	r2, r8, #156	; 0x9c
  CoreDragEvent event = EwNewObject( CoreDragEvent, 0 );
900241f6:	2100      	movs	r1, #0
900241f8:	4881      	ldr	r0, [pc, #516]	; (90024400 <CoreRoot_DriveMultiTouchMovement+0x2c4>)
900241fa:	f108 0854 	add.w	r8, r8, #84	; 0x54
    _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )] = pos;
900241fe:	18ac      	adds	r4, r5, r2
90024200:	50ab      	str	r3, [r5, r2]
90024202:	9304      	str	r3, [sp, #16]
90024204:	f10d 0a50 	add.w	sl, sp, #80	; 0x50
90024208:	6067      	str	r7, [r4, #4]
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002420a:	f10d 0b28 	add.w	fp, sp, #40	; 0x28
    _this->cursorFinger = aFinger;
9002420e:	f8c5 634c 	str.w	r6, [r5, #844]	; 0x34c
  CoreDragEvent event = EwNewObject( CoreDragEvent, 0 );
90024212:	f7f9 fdf5 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024216:	f8d5 20a0 	ldr.w	r2, [r5, #160]	; 0xa0
  CoreDragEvent event = EwNewObject( CoreDragEvent, 0 );
9002421a:	4604      	mov	r4, r0
  if ( _this->currentEventTimestamp != 0 )
9002421c:	9b04      	ldr	r3, [sp, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
9002421e:	2a00      	cmp	r2, #0
    event->Super1.Time = _this->currentEventTimestamp;
90024220:	bf1c      	itt	ne
90024222:	6102      	strne	r2, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024224:	2101      	movne	r1, #1
90024226:	eb05 02c6 	add.w	r2, r5, r6, lsl #3
9002422a:	bf08      	it	eq
9002422c:	2100      	moveq	r1, #0
9002422e:	4694      	mov	ip, r2
90024230:	7501      	strb	r1, [r0, #20]
    return aIndex;
90024232:	f8d2 1198 	ldr.w	r1, [r2, #408]	; 0x198
90024236:	f8d2 0194 	ldr.w	r0, [r2, #404]	; 0x194
9002423a:	eb05 0208 	add.w	r2, r5, r8
9002423e:	e9cd 3712 	strd	r3, r7, [sp, #72]	; 0x48
90024242:	6852      	ldr	r2, [r2, #4]
    ((CoreEvent)CoreDragEvent_Initialize( CoreRoot_createDragEvent( _this ), aFinger, 
90024244:	f8d9 30a4 	ldr.w	r3, [r9, #164]	; 0xa4
90024248:	f855 7008 	ldr.w	r7, [r5, r8]
9002424c:	f8d9 916c 	ldr.w	r9, [r9, #364]	; 0x16c
90024250:	f103 0801 	add.w	r8, r3, #1
90024254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024256:	9204      	str	r2, [sp, #16]
90024258:	9305      	str	r3, [sp, #20]
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002425a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9002425c:	9706      	str	r7, [sp, #24]
9002425e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90024260:	e88a 0003 	stmia.w	sl, {r0, r1}
90024264:	e9dc 0197 	ldrd	r0, r1, [ip, #604]	; 0x25c
  _this->Finger = aFinger;
90024268:	64a6      	str	r6, [r4, #72]	; 0x48
9002426a:	ae18      	add	r6, sp, #96	; 0x60
9002426c:	e906 0003 	stmdb	r6, {r0, r1}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024270:	9917      	ldr	r1, [sp, #92]	; 0x5c
90024272:	4658      	mov	r0, fp
90024274:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024276:	9100      	str	r1, [sp, #0]
90024278:	9912      	ldr	r1, [sp, #72]	; 0x48
9002427a:	f7fa f9bd 	bl	9001e5f8 <EwMovePointPos>
9002427e:	f104 0240 	add.w	r2, r4, #64	; 0x40
90024282:	e89b 0003 	ldmia.w	fp, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024286:	e9dd 3616 	ldrd	r3, r6, [sp, #88]	; 0x58
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002428a:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
9002428e:	e89a 0006 	ldmia.w	sl, {r1, r2}
90024292:	4658      	mov	r0, fp
90024294:	9600      	str	r6, [sp, #0]
90024296:	f7fa f9af 	bl	9001e5f8 <EwMovePointPos>
9002429a:	f104 0338 	add.w	r3, r4, #56	; 0x38
  _this->GlobalHittingPos = aGlobalHittingPos;
9002429e:	9a04      	ldr	r2, [sp, #16]
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
900242a0:	e89b 0003 	ldmia.w	fp, {r0, r1}
900242a4:	e883 0003 	stmia.w	r3, {r0, r1}
  _this->GlobalHittingPos = aGlobalHittingPos;
900242a8:	9b06      	ldr	r3, [sp, #24]
900242aa:	61e2      	str	r2, [r4, #28]
900242ac:	61a3      	str	r3, [r4, #24]
  _this->Offset = aOffset;
900242ae:	9b05      	ldr	r3, [sp, #20]
  _this->StrikeCount = aSequelCount;
900242b0:	f8c4 8028 	str.w	r8, [r4, #40]	; 0x28
  _this->HoldPeriod = aHoldPeriod;
900242b4:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
  _this->Offset = aOffset;
900242b8:	e9c4 370c 	strd	r3, r7, [r4, #48]	; 0x30
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900242bc:	9b02      	ldr	r3, [sp, #8]
900242be:	6223      	str	r3, [r4, #32]
900242c0:	9b03      	ldr	r3, [sp, #12]
900242c2:	6263      	str	r3, [r4, #36]	; 0x24
  _this->currentEventTimestamp = 0;
900242c4:	2300      	movs	r3, #0
  return 1;
900242c6:	2001      	movs	r0, #1
  _this->currentEventTimestamp = 0;
900242c8:	f8c5 30a0 	str.w	r3, [r5, #160]	; 0xa0
}
900242cc:	b019      	add	sp, #100	; 0x64
900242ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (( grp == 0 ) && ((CoreRoot)_this->cursorTargetView[ EwCheckIndex( aFinger, 
900242d2:	f8d9 2048 	ldr.w	r2, [r9, #72]	; 0x48
900242d6:	42aa      	cmp	r2, r5
900242d8:	9205      	str	r2, [sp, #20]
900242da:	d08a      	beq.n	900241f2 <CoreRoot_DriveMultiTouchMovement+0xb6>
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900242dc:	4621      	mov	r1, r4
    _this->cursorFinger = aFinger;
900242de:	f8c5 634c 	str.w	r6, [r5, #844]	; 0x34c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900242e2:	4848      	ldr	r0, [pc, #288]	; (90024404 <CoreRoot_DriveMultiTouchMovement+0x2c8>)
900242e4:	af14      	add	r7, sp, #80	; 0x50
    _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] = 0;
900242e6:	f8c9 4048 	str.w	r4, [r9, #72]	; 0x48
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900242ea:	f7f9 fd89 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900242ee:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
900242f2:	f108 0c54 	add.w	ip, r8, #84	; 0x54
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900242f6:	4604      	mov	r4, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900242f8:	2b00      	cmp	r3, #0
900242fa:	f10d 0e48 	add.w	lr, sp, #72	; 0x48
  _this->Down = 0;
900242fe:	f04f 0800 	mov.w	r8, #0
    event->Super1.Time = _this->currentEventTimestamp;
90024302:	bf1c      	itt	ne
90024304:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024306:	2201      	movne	r2, #1
90024308:	f855 300a 	ldr.w	r3, [r5, sl]
9002430c:	bf08      	it	eq
9002430e:	2200      	moveq	r2, #0
90024310:	9307      	str	r3, [sp, #28]
90024312:	9b04      	ldr	r3, [sp, #16]
90024314:	7502      	strb	r2, [r0, #20]
    return aIndex;
90024316:	eb05 02c6 	add.w	r2, r5, r6, lsl #3
9002431a:	685b      	ldr	r3, [r3, #4]
9002431c:	9209      	str	r2, [sp, #36]	; 0x24
9002431e:	9304      	str	r3, [sp, #16]
    CoreView_HandleEvent( tmp, ((CoreEvent)CoreCursorEvent_InitializeUp( CoreRoot_createCursorEvent( 
90024320:	f8d9 30a4 	ldr.w	r3, [r9, #164]	; 0xa4
90024324:	e9d2 0183 	ldrd	r0, r1, [r2, #524]	; 0x20c
90024328:	f103 0a01 	add.w	sl, r3, #1
9002432c:	eb05 020c 	add.w	r2, r5, ip
90024330:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024332:	f8d2 b004 	ldr.w	fp, [r2, #4]
90024336:	f855 200c 	ldr.w	r2, [r5, ip]
9002433a:	e88e 0003 	stmia.w	lr, {r0, r1}
9002433e:	e9d3 0165 	ldrd	r0, r1, [r3, #404]	; 0x194
90024342:	9208      	str	r2, [sp, #32]
90024344:	f8d9 216c 	ldr.w	r2, [r9, #364]	; 0x16c
90024348:	e887 0003 	stmia.w	r7, {r0, r1}
9002434c:	e9d3 0197 	ldrd	r0, r1, [r3, #604]	; 0x25c
90024350:	af18      	add	r7, sp, #96	; 0x60
90024352:	9206      	str	r2, [sp, #24]
  _this->Down = 0;
90024354:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
  _this->Finger = aFinger;
90024358:	6426      	str	r6, [r4, #64]	; 0x40
9002435a:	e907 0003 	stmdb	r7, {r0, r1}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002435e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90024360:	a80a      	add	r0, sp, #40	; 0x28
90024362:	9b16      	ldr	r3, [sp, #88]	; 0x58
90024364:	9200      	str	r2, [sp, #0]
90024366:	e89e 0006 	ldmia.w	lr, {r1, r2}
9002436a:	f7fa f945 	bl	9001e5f8 <EwMovePointPos>
9002436e:	a90a      	add	r1, sp, #40	; 0x28
90024370:	f104 0238 	add.w	r2, r4, #56	; 0x38
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024374:	9f17      	ldr	r7, [sp, #92]	; 0x5c
90024376:	9b16      	ldr	r3, [sp, #88]	; 0x58
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024378:	c903      	ldmia	r1, {r0, r1}
9002437a:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
9002437e:	a914      	add	r1, sp, #80	; 0x50
90024380:	a80a      	add	r0, sp, #40	; 0x28
90024382:	c906      	ldmia	r1, {r1, r2}
90024384:	9700      	str	r7, [sp, #0]
90024386:	f7fa f937 	bl	9001e5f8 <EwMovePointPos>
9002438a:	aa0a      	add	r2, sp, #40	; 0x28
9002438c:	f104 0330 	add.w	r3, r4, #48	; 0x30
90024390:	e892 0003 	ldmia.w	r2, {r0, r1}
  _this->GlobalHittingPos = aGlobalHittingPos;
90024394:	9a08      	ldr	r2, [sp, #32]
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024396:	e883 0003 	stmia.w	r3, {r0, r1}
  _this->GlobalCurrentPos = aGlobalCurrentPos;
9002439a:	9b07      	ldr	r3, [sp, #28]
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
9002439c:	4641      	mov	r1, r8
  _this->GlobalHittingPos = aGlobalHittingPos;
9002439e:	61a2      	str	r2, [r4, #24]
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900243a0:	6223      	str	r3, [r4, #32]
  _this->HoldPeriod = aHoldPeriod;
900243a2:	9a06      	ldr	r2, [sp, #24]
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900243a4:	9b04      	ldr	r3, [sp, #16]
  _this->HoldPeriod = aHoldPeriod;
900243a6:	62e2      	str	r2, [r4, #44]	; 0x2c
  _this->GlobalHittingPos = aGlobalHittingPos;
900243a8:	f8c4 b01c 	str.w	fp, [r4, #28]
  _this->StrikeCount = aStrikeCount;
900243ac:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
  _this->AutoDeflected = aAutoDeflected;
900243b0:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900243b4:	6263      	str	r3, [r4, #36]	; 0x24
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
900243b6:	4814      	ldr	r0, [pc, #80]	; (90024408 <CoreRoot_DriveMultiTouchMovement+0x2cc>)
900243b8:	f7f9 fd22 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900243bc:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
900243c0:	4601      	mov	r1, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900243c2:	4543      	cmp	r3, r8
    event->Super1.Time = _this->currentEventTimestamp;
900243c4:	bf1c      	itt	ne
900243c6:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900243c8:	2201      	movne	r2, #1
    CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeUp( 
900243ca:	f8d9 30a4 	ldr.w	r3, [r9, #164]	; 0xa4
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900243ce:	bf08      	it	eq
900243d0:	4642      	moveq	r2, r8
  _this->Finger = aFinger;
900243d2:	6286      	str	r6, [r0, #40]	; 0x28
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900243d4:	7502      	strb	r2, [r0, #20]
    CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeUp( 
900243d6:	3301      	adds	r3, #1
  _this->Down = 0;
900243d8:	2200      	movs	r2, #0
900243da:	8582      	strh	r2, [r0, #44]	; 0x2c
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
900243dc:	2218      	movs	r2, #24
900243de:	682c      	ldr	r4, [r5, #0]
  _this->StrikeCount = aStrikeCount;
900243e0:	6243      	str	r3, [r0, #36]	; 0x24
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900243e2:	9b02      	ldr	r3, [sp, #8]
900243e4:	61c3      	str	r3, [r0, #28]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
900243e6:	4628      	mov	r0, r5
  _this->GlobalCurrentPos = aGlobalCurrentPos;
900243e8:	9b03      	ldr	r3, [sp, #12]
900243ea:	620b      	str	r3, [r1, #32]
  _this->Target = aTarget;
900243ec:	9b05      	ldr	r3, [sp, #20]
900243ee:	618b      	str	r3, [r1, #24]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
900243f0:	6de3      	ldr	r3, [r4, #92]	; 0x5c
900243f2:	4798      	blx	r3
900243f4:	e766      	b.n	900242c4 <CoreRoot_DriveMultiTouchMovement+0x188>
  pos = aPos;
900243f6:	e9dd 3702 	ldrd	r3, r7, [sp, #8]
900243fa:	e6f8      	b.n	900241ee <CoreRoot_DriveMultiTouchMovement+0xb2>
900243fc:	900334f8 	.word	0x900334f8
90024400:	900335ac 	.word	0x900335ac
90024404:	90033534 	.word	0x90033534
90024408:	90033570 	.word	0x90033570

9002440c <CoreRoot__DriveMultiTouchMovement>:
{
9002440c:	b410      	push	{r4}
9002440e:	b083      	sub	sp, #12
90024410:	466c      	mov	r4, sp
90024412:	e884 000c 	stmia.w	r4, {r2, r3}
  return CoreRoot_DriveMultiTouchMovement((CoreRoot)_this, aFinger, aPos );
90024416:	e894 000c 	ldmia.w	r4, {r2, r3}
}
9002441a:	b003      	add	sp, #12
9002441c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return CoreRoot_DriveMultiTouchMovement((CoreRoot)_this, aFinger, aPos );
90024420:	f7ff be8c 	b.w	9002413c <CoreRoot_DriveMultiTouchMovement>

90024424 <CoreCursorEvent_InitializeDown>:
{
90024424:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90024428:	b086      	sub	sp, #24
9002442a:	4604      	mov	r4, r0
  _this->Down = 1;
9002442c:	f04f 0c01 	mov.w	ip, #1
  _this->Finger = aFinger;
90024430:	6401      	str	r1, [r0, #64]	; 0x40
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024432:	ad02      	add	r5, sp, #8
{
90024434:	ae04      	add	r6, sp, #16
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024436:	9f0e      	ldr	r7, [sp, #56]	; 0x38
  _this->Down = 1;
90024438:	f884 c044 	strb.w	ip, [r4, #68]	; 0x44
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002443c:	4628      	mov	r0, r5
9002443e:	9700      	str	r7, [sp, #0]
  _this->HoldPeriod = 0;
90024440:	2700      	movs	r7, #0
{
90024442:	f89d 803c 	ldrb.w	r8, [sp, #60]	; 0x3c
90024446:	e886 000c 	stmia.w	r6, {r2, r3}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002444a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002444c:	e896 0006 	ldmia.w	r6, {r1, r2}
90024450:	f7fa f8d2 	bl	9001e5f8 <EwMovePointPos>
90024454:	f104 0238 	add.w	r2, r4, #56	; 0x38
  _this->HittingPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024458:	e9dd 310d 	ldrd	r3, r1, [sp, #52]	; 0x34
9002445c:	9100      	str	r1, [sp, #0]
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002445e:	e895 0003 	ldmia.w	r5, {r0, r1}
90024462:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024466:	e896 0006 	ldmia.w	r6, {r1, r2}
9002446a:	4628      	mov	r0, r5
  _this->GlobalCurrentPos = aGlobalCurrentPos;
9002446c:	f104 0620 	add.w	r6, r4, #32
  _this->HittingPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024470:	f7fa f8c2 	bl	9001e5f8 <EwMovePointPos>
90024474:	f104 0c30 	add.w	ip, r4, #48	; 0x30
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024478:	ab10      	add	r3, sp, #64	; 0x40
  _this->GlobalHittingPos = aGlobalCurrentPos;
9002447a:	f104 0218 	add.w	r2, r4, #24
  _this->HittingPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002447e:	e895 0003 	ldmia.w	r5, {r0, r1}
  _this->StrikeCount = aStrikeCount;
90024482:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  _this->HittingPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024484:	e88c 0003 	stmia.w	ip, {r0, r1}
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024488:	e893 0003 	ldmia.w	r3, {r0, r1}
  _this->StrikeCount = aStrikeCount;
9002448c:	62a5      	str	r5, [r4, #40]	; 0x28
  _this->AutoDeflected = aAutoDeflected;
9002448e:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
  _this->HoldPeriod = 0;
90024492:	62e7      	str	r7, [r4, #44]	; 0x2c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024494:	e886 0003 	stmia.w	r6, {r0, r1}
  _this->GlobalHittingPos = aGlobalCurrentPos;
90024498:	e882 0003 	stmia.w	r2, {r0, r1}
}
9002449c:	4620      	mov	r0, r4
9002449e:	b006      	add	sp, #24
900244a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900244a4 <CoreKeyPressHandler_HandleEvent>:
  if (( aEvent != 0 ) && CoreKeyEvent_IsCode( aEvent, CoreKeyCodeAnyKey ))
900244a4:	b1f1      	cbz	r1, 900244e4 <CoreKeyPressHandler_HandleEvent+0x40>
      return (XBool)(( _this->CharCode != 0x0000 ) || ( _this->Code != CoreKeyCodeNoKey ));
900244a6:	8b8a      	ldrh	r2, [r1, #28]
900244a8:	4603      	mov	r3, r0
900244aa:	6988      	ldr	r0, [r1, #24]
900244ac:	b1ba      	cbz	r2, 900244de <CoreKeyPressHandler_HandleEvent+0x3a>
{
900244ae:	b410      	push	{r4}
    _this->Down = aEvent->Down;
900244b0:	7f8c      	ldrb	r4, [r1, #30]
    _this->Code = aEvent->Code;
900244b2:	6218      	str	r0, [r3, #32]
    _this->Down = aEvent->Down;
900244b4:	f883 4026 	strb.w	r4, [r3, #38]	; 0x26
    _this->Time = aEvent->Super1.Time;
900244b8:	6909      	ldr	r1, [r1, #16]
    _this->CharCode = aEvent->CharCode;
900244ba:	849a      	strh	r2, [r3, #36]	; 0x24
    _this->Time = aEvent->Super1.Time;
900244bc:	6199      	str	r1, [r3, #24]
    if ( aEvent->Down )
900244be:	b99c      	cbnz	r4, 900244e8 <CoreKeyPressHandler_HandleEvent+0x44>
      _this->Repetition = (XBool)( _this->pressCounter > 1 );
900244c0:	695a      	ldr	r2, [r3, #20]
      return 1;
900244c2:	2001      	movs	r0, #1
      _this->pressCounter = 0;
900244c4:	615c      	str	r4, [r3, #20]
      _this->Repetition = (XBool)( _this->pressCounter > 1 );
900244c6:	4282      	cmp	r2, r0
      _this->RepetitionCount = _this->pressCounter - 1;
900244c8:	f102 32ff 	add.w	r2, r2, #4294967295
      _this->Repetition = (XBool)( _this->pressCounter > 1 );
900244cc:	bfd4      	ite	le
900244ce:	2100      	movle	r1, #0
900244d0:	2101      	movgt	r1, #1
      _this->RepetitionCount = _this->pressCounter - 1;
900244d2:	61da      	str	r2, [r3, #28]
      _this->Repetition = (XBool)( _this->pressCounter > 1 );
900244d4:	f883 1027 	strb.w	r1, [r3, #39]	; 0x27
}
900244d8:	f85d 4b04 	ldr.w	r4, [sp], #4
900244dc:	4770      	bx	lr
      return (XBool)(( _this->CharCode != 0x0000 ) || ( _this->Code != CoreKeyCodeNoKey ));
900244de:	2800      	cmp	r0, #0
900244e0:	d1e5      	bne.n	900244ae <CoreKeyPressHandler_HandleEvent+0xa>
900244e2:	4770      	bx	lr
  return 0;
900244e4:	4608      	mov	r0, r1
}
900244e6:	4770      	bx	lr
      _this->RepetitionCount = _this->pressCounter;
900244e8:	695a      	ldr	r2, [r3, #20]
      _this->pressCounter = _this->pressCounter + 1;
900244ea:	2001      	movs	r0, #1
      _this->Repetition = (XBool)( _this->pressCounter > 0 );
900244ec:	2a00      	cmp	r2, #0
      _this->pressCounter = _this->pressCounter + 1;
900244ee:	eb02 0100 	add.w	r1, r2, r0
      _this->RepetitionCount = _this->pressCounter;
900244f2:	61da      	str	r2, [r3, #28]
      _this->Repetition = (XBool)( _this->pressCounter > 0 );
900244f4:	bfd4      	ite	le
900244f6:	2400      	movle	r4, #0
900244f8:	2401      	movgt	r4, #1
      _this->pressCounter = _this->pressCounter + 1;
900244fa:	6159      	str	r1, [r3, #20]
      _this->Repetition = (XBool)( _this->pressCounter > 0 );
900244fc:	f883 4027 	strb.w	r4, [r3, #39]	; 0x27
}
90024500:	f85d 4b04 	ldr.w	r4, [sp], #4
90024504:	4770      	bx	lr
90024506:	bf00      	nop

90024508 <CoreGroup_processKeyHandlers>:
{
90024508:	b538      	push	{r3, r4, r5, lr}
9002450a:	460b      	mov	r3, r1
9002450c:	4604      	mov	r4, r0
  CoreKeyEvent keyEvent = EwCastObject( aEvent, CoreKeyEvent );
9002450e:	490b      	ldr	r1, [pc, #44]	; (9002453c <CoreGroup_processKeyHandlers+0x34>)
90024510:	4618      	mov	r0, r3
90024512:	f7f9 fd81 	bl	9001e018 <EwCastObject>
  CoreKeyPressHandler handler = _this->keyHandlers;
90024516:	6be4      	ldr	r4, [r4, #60]	; 0x3c
  if ( keyEvent == 0 )
90024518:	b160      	cbz	r0, 90024534 <CoreGroup_processKeyHandlers+0x2c>
  while (( handler != 0 ) && !CoreKeyPressHandler_HandleEvent( handler, keyEvent ))
9002451a:	4605      	mov	r5, r0
9002451c:	b914      	cbnz	r4, 90024524 <CoreGroup_processKeyHandlers+0x1c>
9002451e:	e009      	b.n	90024534 <CoreGroup_processKeyHandlers+0x2c>
    handler = handler->next;
90024520:	6924      	ldr	r4, [r4, #16]
  while (( handler != 0 ) && !CoreKeyPressHandler_HandleEvent( handler, keyEvent ))
90024522:	b13c      	cbz	r4, 90024534 <CoreGroup_processKeyHandlers+0x2c>
90024524:	4629      	mov	r1, r5
90024526:	4620      	mov	r0, r4
90024528:	f7ff ffbc 	bl	900244a4 <CoreKeyPressHandler_HandleEvent>
9002452c:	2800      	cmp	r0, #0
9002452e:	d0f7      	beq.n	90024520 <CoreGroup_processKeyHandlers+0x18>
}
90024530:	4620      	mov	r0, r4
90024532:	bd38      	pop	{r3, r4, r5, pc}
    return 0;
90024534:	2400      	movs	r4, #0
}
90024536:	4620      	mov	r0, r4
90024538:	bd38      	pop	{r3, r4, r5, pc}
9002453a:	bf00      	nop
9002453c:	9003368c 	.word	0x9003368c

90024540 <CoreGroup_DispatchEvent>:
{
90024540:	b570      	push	{r4, r5, r6, lr}
  CoreView view = _this->Focus;
90024542:	6c06      	ldr	r6, [r0, #64]	; 0x40
{
90024544:	460d      	mov	r5, r1
90024546:	4604      	mov	r4, r0
  CoreGroup grp = EwCastObject( view, CoreGroup );
90024548:	490b      	ldr	r1, [pc, #44]	; (90024578 <CoreGroup_DispatchEvent+0x38>)
9002454a:	4630      	mov	r0, r6
9002454c:	f7f9 fd64 	bl	9001e018 <EwCastObject>
  if (( view != 0 ) && (((( view->viewState & CoreViewStateDialog ) == CoreViewStateDialog ) 
90024550:	b14e      	cbz	r6, 90024566 <CoreGroup_DispatchEvent+0x26>
      || (( view->viewState & CoreViewStatePendingFader ) == CoreViewStatePendingFader )))
90024552:	6a33      	ldr	r3, [r6, #32]
  if (( view != 0 ) && (((( view->viewState & CoreViewStateDialog ) == CoreViewStateDialog ) 
90024554:	f413 2fe0 	tst.w	r3, #458752	; 0x70000
90024558:	d005      	beq.n	90024566 <CoreGroup_DispatchEvent+0x26>
    handled = CoreGroup_processKeyHandlers( _this, aEvent );
9002455a:	4629      	mov	r1, r5
9002455c:	4620      	mov	r0, r4
}
9002455e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    handled = CoreGroup_processKeyHandlers( _this, aEvent );
90024562:	f7ff bfd1 	b.w	90024508 <CoreGroup_processKeyHandlers>
  if ( grp != 0 )
90024566:	2800      	cmp	r0, #0
90024568:	d0f7      	beq.n	9002455a <CoreGroup_DispatchEvent+0x1a>
  return ((CoreGroup)_this)->_.VMT->DispatchEvent((CoreGroup)_this, aEvent );
9002456a:	6803      	ldr	r3, [r0, #0]
9002456c:	4629      	mov	r1, r5
9002456e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90024570:	4798      	blx	r3
  if ( handled == 0 )
90024572:	2800      	cmp	r0, #0
90024574:	d0f1      	beq.n	9002455a <CoreGroup_DispatchEvent+0x1a>
}
90024576:	bd70      	pop	{r4, r5, r6, pc}
90024578:	90033624 	.word	0x90033624

9002457c <CoreRoot_DispatchEvent>:
{
9002457c:	b510      	push	{r4, lr}
9002457e:	4604      	mov	r4, r0
  if ( aEvent != 0 )
90024580:	b139      	cbz	r1, 90024592 <CoreRoot_DispatchEvent+0x16>
    aEvent->IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024582:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
90024586:	2b00      	cmp	r3, #0
90024588:	bf16      	itet	ne
9002458a:	2201      	movne	r2, #1
9002458c:	2200      	moveq	r2, #0
      aEvent->Time = _this->currentEventTimestamp;
9002458e:	610b      	strne	r3, [r1, #16]
    aEvent->IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024590:	750a      	strb	r2, [r1, #20]
  handled = CoreGroup_DispatchEvent((CoreGroup)_this, aEvent );
90024592:	4620      	mov	r0, r4
90024594:	f7ff ffd4 	bl	90024540 <CoreGroup_DispatchEvent>
  _this->currentEventTimestamp = 0;
90024598:	2300      	movs	r3, #0
9002459a:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
}
9002459e:	bd10      	pop	{r4, pc}

900245a0 <CoreGroup_BroadcastEvent>:
{
900245a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  CoreView view = _this->last;
900245a4:	6b84      	ldr	r4, [r0, #56]	; 0x38
{
900245a6:	4680      	mov	r8, r0
900245a8:	460e      	mov	r6, r1
  while (( view != 0 ) && ( handled == 0 ))
900245aa:	b314      	cbz	r4, 900245f2 <CoreGroup_BroadcastEvent+0x52>
900245ac:	4615      	mov	r5, r2
      CoreGroup grp = EwCastObject( view, CoreGroup );
900245ae:	4f14      	ldr	r7, [pc, #80]	; (90024600 <CoreGroup_BroadcastEvent+0x60>)
900245b0:	e008      	b.n	900245c4 <CoreGroup_BroadcastEvent+0x24>
    if ( !aFilter || EwSetContains( view->viewState, aFilter ))
900245b2:	6a20      	ldr	r0, [r4, #32]
900245b4:	f7fa fd72 	bl	9001f09c <EwSetContains>
900245b8:	b938      	cbnz	r0, 900245ca <CoreGroup_BroadcastEvent+0x2a>
    view = view->prev;
900245ba:	6964      	ldr	r4, [r4, #20]
{
900245bc:	2301      	movs	r3, #1
900245be:	2000      	movs	r0, #0
  while (( view != 0 ) && ( handled == 0 ))
900245c0:	b1a4      	cbz	r4, 900245ec <CoreGroup_BroadcastEvent+0x4c>
900245c2:	b19b      	cbz	r3, 900245ec <CoreGroup_BroadcastEvent+0x4c>
    if ( !aFilter || EwSetContains( view->viewState, aFilter ))
900245c4:	4629      	mov	r1, r5
900245c6:	2d00      	cmp	r5, #0
900245c8:	d1f3      	bne.n	900245b2 <CoreGroup_BroadcastEvent+0x12>
      CoreGroup grp = EwCastObject( view, CoreGroup );
900245ca:	4639      	mov	r1, r7
900245cc:	4620      	mov	r0, r4
900245ce:	f7f9 fd23 	bl	9001e018 <EwCastObject>
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
900245d2:	462a      	mov	r2, r5
900245d4:	4631      	mov	r1, r6
      if ( grp != 0 )
900245d6:	2800      	cmp	r0, #0
900245d8:	d0ef      	beq.n	900245ba <CoreGroup_BroadcastEvent+0x1a>
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
900245da:	6803      	ldr	r3, [r0, #0]
900245dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
900245de:	4798      	blx	r3
    view = view->prev;
900245e0:	6964      	ldr	r4, [r4, #20]
900245e2:	fab0 f380 	clz	r3, r0
900245e6:	095b      	lsrs	r3, r3, #5
  while (( view != 0 ) && ( handled == 0 ))
900245e8:	2c00      	cmp	r4, #0
900245ea:	d1ea      	bne.n	900245c2 <CoreGroup_BroadcastEvent+0x22>
  if ( handled == 0 )
900245ec:	b108      	cbz	r0, 900245f2 <CoreGroup_BroadcastEvent+0x52>
}
900245ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    handled = CoreGroup_processKeyHandlers( _this, aEvent );
900245f2:	4631      	mov	r1, r6
900245f4:	4640      	mov	r0, r8
}
900245f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    handled = CoreGroup_processKeyHandlers( _this, aEvent );
900245fa:	f7ff bf85 	b.w	90024508 <CoreGroup_processKeyHandlers>
900245fe:	bf00      	nop
90024600:	90033624 	.word	0x90033624

90024604 <CoreRoot_BroadcastEvent>:
{
90024604:	b510      	push	{r4, lr}
90024606:	4604      	mov	r4, r0
  if ( aEvent != 0 )
90024608:	b139      	cbz	r1, 9002461a <CoreRoot_BroadcastEvent+0x16>
    aEvent->IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
9002460a:	f8d0 30a0 	ldr.w	r3, [r0, #160]	; 0xa0
9002460e:	2b00      	cmp	r3, #0
90024610:	bf16      	itet	ne
90024612:	2001      	movne	r0, #1
90024614:	2000      	moveq	r0, #0
      aEvent->Time = _this->currentEventTimestamp;
90024616:	610b      	strne	r3, [r1, #16]
    aEvent->IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024618:	7508      	strb	r0, [r1, #20]
  handled = CoreGroup_BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
9002461a:	4620      	mov	r0, r4
9002461c:	f7ff ffc0 	bl	900245a0 <CoreGroup_BroadcastEvent>
  _this->currentEventTimestamp = 0;
90024620:	2300      	movs	r3, #0
90024622:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
}
90024626:	bd10      	pop	{r4, pc}

90024628 <CoreTimer_restart>:
}

/* 'C' function for method : 'Core::Timer.restart()' */
void CoreTimer_restart( CoreTimer _this, XInt32 aBegin, XInt32 aPeriod )
{
90024628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    aBegin = 0;

  if ( aPeriod < 0 )
    aPeriod = 0;

  tmp = _this->timer;
9002462a:	6987      	ldr	r7, [r0, #24]
{
9002462c:	4604      	mov	r4, r0
9002462e:	460d      	mov	r5, r1
90024630:	4616      	mov	r6, r2

  if (( tmp == 0 ) && (( aBegin > 0 ) || ( aPeriod > 0 )))
90024632:	b15f      	cbz	r7, 9002464c <CoreTimer_restart+0x24>
    }

  if ( tmp != 0 )
    {
      /* At first stop the timer ... */
      EwResetTimer((XTimer*)tmp );
90024634:	4638      	mov	r0, r7
90024636:	f7fd f943 	bl	900218c0 <EwResetTimer>

      /* and then restart it again. */
      EwStartTimer((XTimer*)tmp, aBegin, aPeriod );
9002463a:	ea26 72e6 	bic.w	r2, r6, r6, asr #31
9002463e:	ea25 71e5 	bic.w	r1, r5, r5, asr #31
90024642:	4638      	mov	r0, r7
90024644:	f7fd f96c 	bl	90021920 <EwStartTimer>
    }

  _this->timer = tmp;
90024648:	61a7      	str	r7, [r4, #24]
}
9002464a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  if (( tmp == 0 ) && (( aBegin > 0 ) || ( aPeriod > 0 )))
9002464c:	2900      	cmp	r1, #0
9002464e:	dc01      	bgt.n	90024654 <CoreTimer_restart+0x2c>
90024650:	2a00      	cmp	r2, #0
90024652:	ddf9      	ble.n	90024648 <CoreTimer_restart+0x20>
      tmp = (XHandle)(void*)EwCreateTimer( TimerProc, (XHandle)(void*)this );
90024654:	4621      	mov	r1, r4
90024656:	4803      	ldr	r0, [pc, #12]	; (90024664 <CoreTimer_restart+0x3c>)
90024658:	f7fd f8f0 	bl	9002183c <EwCreateTimer>
  if ( tmp != 0 )
9002465c:	2800      	cmp	r0, #0
9002465e:	d0f3      	beq.n	90024648 <CoreTimer_restart+0x20>
      tmp = (XHandle)(void*)EwCreateTimer( TimerProc, (XHandle)(void*)this );
90024660:	4607      	mov	r7, r0
90024662:	e7e7      	b.n	90024634 <CoreTimer_restart+0xc>
90024664:	90024e0d 	.word	0x90024e0d

90024668 <CoreRoot__Init>:
{
90024668:	b5f0      	push	{r4, r5, r6, r7, lr}
9002466a:	4604      	mov	r4, r0
9002466c:	b083      	sub	sp, #12
  XObject__Init( &_this->_.Super, aLink, aArg );
9002466e:	f7f9 fbbb 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreGroup );
90024672:	4b19      	ldr	r3, [pc, #100]	; (900246d8 <CoreRoot__Init+0x70>)
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
90024674:	221f      	movs	r2, #31
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreRoot );
90024676:	4d19      	ldr	r5, [pc, #100]	; (900246dc <CoreRoot__Init+0x74>)
  CoreTimer__Init( &_this->cursorHoldTimer, &_this->_.XObject, 0 );
90024678:	f104 0674 	add.w	r6, r4, #116	; 0x74
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreGroup );
9002467c:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( CoreGroup );
9002467e:	6023      	str	r3, [r4, #0]
  CoreGroup_InvalidateViewState( _this );
90024680:	4620      	mov	r0, r4
  _this->Super2.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
90024682:	6222      	str	r2, [r4, #32]
  _this->Super3.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
90024684:	277f      	movs	r7, #127	; 0x7f
  CoreGroup_InvalidateViewState( _this );
90024686:	f7ff f987 	bl	90023998 <CoreGroup_InvalidateViewState>
  XObject__Init( &_this->_.Super, aLink, aArg );
9002468a:	4630      	mov	r0, r6
9002468c:	4621      	mov	r1, r4
9002468e:	2200      	movs	r2, #0
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreRoot );
90024690:	60e5      	str	r5, [r4, #12]
  XObject__Init( &_this->_.Super, aLink, aArg );
90024692:	f7f9 fba9 	bl	9001dde8 <XObject__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreTimer );
90024696:	4b12      	ldr	r3, [pc, #72]	; (900246e0 <CoreRoot__Init+0x78>)
  _this->hasRootFocus = 1;
90024698:	2001      	movs	r0, #1
    value = 0;

  if ( value == _this->Period )
    return;

  _this->Period = value;
9002469a:	2232      	movs	r2, #50	; 0x32

  if ( _this->Enabled )
9002469c:	f894 1098 	ldrb.w	r1, [r4, #152]	; 0x98
  _this->_.VMT = EW_CLASS( CoreRoot );
900246a0:	6025      	str	r5, [r4, #0]
  _this->Super3.viewState = CoreViewStateAlphaBlended | CoreViewStateEnabled | CoreViewStateFocusable 
900246a2:	6227      	str	r7, [r4, #32]
  _this->hasRootFocus = 1;
900246a4:	f884 03e6 	strb.w	r0, [r4, #998]	; 0x3e6
  _this->_.XObject._.GCT = EW_CLASS_GCT( CoreTimer );
900246a8:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
  _this->_.VMT = EW_CLASS( CoreTimer );
900246ac:	6763      	str	r3, [r4, #116]	; 0x74
  _this->Period = value;
900246ae:	f8c4 2094 	str.w	r2, [r4, #148]	; 0x94
  if ( _this->Enabled )
900246b2:	b961      	cbnz	r1, 900246ce <CoreRoot__Init+0x66>
  _this->cursorHoldTimer.OnTrigger = EwNewSlot( _this, CoreRoot_cursorHoldTimerProc );
900246b4:	466d      	mov	r5, sp
900246b6:	4621      	mov	r1, r4
900246b8:	4a0a      	ldr	r2, [pc, #40]	; (900246e4 <CoreRoot__Init+0x7c>)
900246ba:	3484      	adds	r4, #132	; 0x84
900246bc:	4628      	mov	r0, r5
900246be:	f7fb f95f 	bl	9001f980 <EwNewSlot>
900246c2:	e895 0003 	ldmia.w	r5, {r0, r1}
900246c6:	e884 0003 	stmia.w	r4, {r0, r1}
}
900246ca:	b003      	add	sp, #12
900246cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    CoreTimer_restart( _this, 0, value );
900246ce:	4630      	mov	r0, r6
900246d0:	2100      	movs	r1, #0
900246d2:	f7ff ffa9 	bl	90024628 <CoreTimer_restart>
900246d6:	e7ed      	b.n	900246b4 <CoreRoot__Init+0x4c>
900246d8:	90033624 	.word	0x90033624
900246dc:	900337b4 	.word	0x900337b4
900246e0:	9003381c 	.word	0x9003381c
900246e4:	9002471d 	.word	0x9002471d

900246e8 <CoreTimer_OnSetEnabled>:
}

/* 'C' function for method : 'Core::Timer.OnSetEnabled()' */
void CoreTimer_OnSetEnabled( CoreTimer _this, XBool value )
{
  if ( value == _this->Enabled )
900246e8:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900246ec:	428b      	cmp	r3, r1
900246ee:	d013      	beq.n	90024718 <CoreTimer_OnSetEnabled+0x30>
    return;

  _this->Enabled = value;
900246f0:	460a      	mov	r2, r1
{
900246f2:	b510      	push	{r4, lr}
900246f4:	4604      	mov	r4, r0
  _this->Enabled = value;
900246f6:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24

  if ( value )
900246fa:	b929      	cbnz	r1, 90024708 <CoreTimer_OnSetEnabled+0x20>
    CoreTimer_restart( _this, 0, _this->Period );
  else
    CoreTimer_restart( _this, 0, 0 );
900246fc:	f7ff ff94 	bl	90024628 <CoreTimer_restart>

  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );

  ticksCount = 0;
  ticksCount = (XUInt32)EwGetTicks();
90024700:	f002 fafe 	bl	90026d00 <EwGetTicks>
  _this->Time = CoreTimer_GetCurrentTime( _this );
90024704:	61e0      	str	r0, [r4, #28]
}
90024706:	bd10      	pop	{r4, pc}
    CoreTimer_restart( _this, 0, _this->Period );
90024708:	6a02      	ldr	r2, [r0, #32]
9002470a:	2100      	movs	r1, #0
9002470c:	f7ff ff8c 	bl	90024628 <CoreTimer_restart>
  ticksCount = (XUInt32)EwGetTicks();
90024710:	f002 faf6 	bl	90026d00 <EwGetTicks>
  _this->Time = CoreTimer_GetCurrentTime( _this );
90024714:	61e0      	str	r0, [r4, #28]
}
90024716:	bd10      	pop	{r4, pc}
90024718:	4770      	bx	lr
9002471a:	bf00      	nop

9002471c <CoreRoot_cursorHoldTimerProc>:
{
9002471c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  found = 0;
90024720:	2300      	movs	r3, #0
{
90024722:	b097      	sub	sp, #92	; 0x5c
90024724:	4682      	mov	sl, r0
90024726:	f100 0844 	add.w	r8, r0, #68	; 0x44
  for ( i = 0; i < 10; i = i + 1 )
9002472a:	469b      	mov	fp, r3
  found = 0;
9002472c:	930a      	str	r3, [sp, #40]	; 0x28
9002472e:	f100 036c 	add.w	r3, r0, #108	; 0x6c
90024732:	4681      	mov	r9, r0
90024734:	465e      	mov	r6, fp
90024736:	9303      	str	r3, [sp, #12]
90024738:	e006      	b.n	90024748 <CoreRoot_cursorHoldTimerProc+0x2c>
  for ( i = 0; i < 10; i = i + 1 )
9002473a:	9b03      	ldr	r3, [sp, #12]
9002473c:	3601      	adds	r6, #1
9002473e:	f109 0908 	add.w	r9, r9, #8
90024742:	4598      	cmp	r8, r3
90024744:	f000 808d 	beq.w	90024862 <CoreRoot_cursorHoldTimerProc+0x146>
    if ( _this->cursorTargetView[ EwCheckIndex( i, 10 )] != 0 )
90024748:	f858 3f04 	ldr.w	r3, [r8, #4]!
9002474c:	2b00      	cmp	r3, #0
9002474e:	d0f4      	beq.n	9002473a <CoreRoot_cursorHoldTimerProc+0x1e>
      XPoint pos = _this->cursorLastPos[ EwCheckIndex( i, 10 )];
90024750:	ac0e      	add	r4, sp, #56	; 0x38
      CoreGroup grp = _this->cursorTargetView[ EwCheckIndex( i, 10 )]->Owner;
90024752:	699f      	ldr	r7, [r3, #24]
      XPoint pos = _this->cursorLastPos[ EwCheckIndex( i, 10 )];
90024754:	e9d9 01ab 	ldrd	r0, r1, [r9, #684]	; 0x2ac
90024758:	e884 0003 	stmia.w	r4, {r0, r1}
      while (( grp != 0 ) && ((CoreRoot)grp != _this ))
9002475c:	b95f      	cbnz	r7, 90024776 <CoreRoot_cursorHoldTimerProc+0x5a>
9002475e:	e087      	b.n	90024870 <CoreRoot_cursorHoldTimerProc+0x154>
        pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
90024760:	6abb      	ldr	r3, [r7, #40]	; 0x28
90024762:	4620      	mov	r0, r4
90024764:	9300      	str	r3, [sp, #0]
90024766:	6a7b      	ldr	r3, [r7, #36]	; 0x24
90024768:	e894 0006 	ldmia.w	r4, {r1, r2}
9002476c:	f7f9 ff32 	bl	9001e5d4 <EwMovePointNeg>
        grp = grp->Super2.Owner;
90024770:	69bf      	ldr	r7, [r7, #24]
      while (( grp != 0 ) && ((CoreRoot)grp != _this ))
90024772:	2f00      	cmp	r7, #0
90024774:	d07c      	beq.n	90024870 <CoreRoot_cursorHoldTimerProc+0x154>
90024776:	45ba      	cmp	sl, r7
90024778:	d1f2      	bne.n	90024760 <CoreRoot_cursorHoldTimerProc+0x44>
      if (( grp == 0 ) && ((CoreRoot)_this->cursorTargetView[ EwCheckIndex( i, 10 )] 
9002477a:	2f00      	cmp	r7, #0
9002477c:	d078      	beq.n	90024870 <CoreRoot_cursorHoldTimerProc+0x154>
        - _this->cursorHittingTime[ EwCheckIndex( i, 10 )]);
9002477e:	f8d8 219c 	ldr.w	r2, [r8, #412]	; 0x19c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024782:	2100      	movs	r1, #0
        - _this->cursorHittingTime[ EwCheckIndex( i, 10 )]);
90024784:	f8da 3090 	ldr.w	r3, [sl, #144]	; 0x90
90024788:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
9002478c:	4881      	ldr	r0, [pc, #516]	; (90024994 <CoreRoot_cursorHoldTimerProc+0x278>)
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002478e:	af0c      	add	r7, sp, #48	; 0x30
        - _this->cursorHittingTime[ EwCheckIndex( i, 10 )]);
90024790:	1a9b      	subs	r3, r3, r2
        if ( _this->cursorHoldPeriod[ EwCheckIndex( i, 10 )] < 10 )
90024792:	2b09      	cmp	r3, #9
          _this->cursorHoldPeriod[ EwCheckIndex( i, 10 )] = 10;
90024794:	bfd8      	it	le
90024796:	230a      	movle	r3, #10
90024798:	f8c8 3124 	str.w	r3, [r8, #292]	; 0x124
        _this->cursorFinger = i;
9002479c:	f8ca 634c 	str.w	r6, [sl, #844]	; 0x34c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900247a0:	f7f9 fb2e 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900247a4:	f8da 30a0 	ldr.w	r3, [sl, #160]	; 0xa0
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
900247a8:	4605      	mov	r5, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900247aa:	2b00      	cmp	r3, #0
900247ac:	bf16      	itet	ne
900247ae:	2201      	movne	r2, #1
900247b0:	2200      	moveq	r2, #0
    event->Super1.Time = _this->currentEventTimestamp;
900247b2:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900247b4:	7502      	strb	r2, [r0, #20]
        found = 1;
900247b6:	2001      	movs	r0, #1
        CoreView_HandleEvent( _this->cursorTargetView[ EwCheckIndex( i, 10 )], ((CoreEvent)CoreCursorEvent_InitializeHold( 
900247b8:	f8d8 1124 	ldr.w	r1, [r8, #292]	; 0x124
900247bc:	aa10      	add	r2, sp, #64	; 0x40
        found = 1;
900247be:	900a      	str	r0, [sp, #40]	; 0x28
900247c0:	f8d9 02ac 	ldr.w	r0, [r9, #684]	; 0x2ac
        CoreView_HandleEvent( _this->cursorTargetView[ EwCheckIndex( i, 10 )], ((CoreEvent)CoreCursorEvent_InitializeHold( 
900247c4:	9104      	str	r1, [sp, #16]
900247c6:	9007      	str	r0, [sp, #28]
900247c8:	f8d9 12fc 	ldr.w	r1, [r9, #764]	; 0x2fc
900247cc:	f8d9 0300 	ldr.w	r0, [r9, #768]	; 0x300
900247d0:	f8d8 305c 	ldr.w	r3, [r8, #92]	; 0x5c
900247d4:	9109      	str	r1, [sp, #36]	; 0x24
900247d6:	9006      	str	r0, [sp, #24]
900247d8:	3301      	adds	r3, #1
900247da:	e894 0003 	ldmia.w	r4, {r0, r1}
  _this->Down = 1;
900247de:	f04f 0401 	mov.w	r4, #1
        CoreView_HandleEvent( _this->cursorTargetView[ EwCheckIndex( i, 10 )], ((CoreEvent)CoreCursorEvent_InitializeHold( 
900247e2:	9305      	str	r3, [sp, #20]
900247e4:	f8d9 32b0 	ldr.w	r3, [r9, #688]	; 0x2b0
900247e8:	e882 0003 	stmia.w	r2, {r0, r1}
900247ec:	e9d9 0165 	ldrd	r0, r1, [r9, #404]	; 0x194
900247f0:	9308      	str	r3, [sp, #32]
900247f2:	e88b 0003 	stmia.w	fp, {r0, r1}
  _this->Down = 1;
900247f6:	e9d9 0197 	ldrd	r0, r1, [r9, #604]	; 0x25c
900247fa:	f885 4044 	strb.w	r4, [r5, #68]	; 0x44
  _this->Finger = aFinger;
900247fe:	ac16      	add	r4, sp, #88	; 0x58
90024800:	642e      	str	r6, [r5, #64]	; 0x40
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024802:	f109 0908 	add.w	r9, r9, #8
  for ( i = 0; i < 10; i = i + 1 )
90024806:	3601      	adds	r6, #1
90024808:	e904 0003 	stmdb	r4, {r0, r1}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002480c:	9915      	ldr	r1, [sp, #84]	; 0x54
9002480e:	4638      	mov	r0, r7
90024810:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024812:	9100      	str	r1, [sp, #0]
90024814:	ca06      	ldmia	r2, {r1, r2}
90024816:	f7f9 feef 	bl	9001e5f8 <EwMovePointPos>
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
9002481a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002481c:	f105 0238 	add.w	r2, r5, #56	; 0x38
90024820:	e897 0003 	ldmia.w	r7, {r0, r1}
90024824:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024828:	e89b 0006 	ldmia.w	fp, {r1, r2}
9002482c:	4638      	mov	r0, r7
9002482e:	9300      	str	r3, [sp, #0]
90024830:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024832:	f7f9 fee1 	bl	9001e5f8 <EwMovePointPos>
90024836:	f105 0330 	add.w	r3, r5, #48	; 0x30
9002483a:	e897 0003 	ldmia.w	r7, {r0, r1}
9002483e:	e883 0003 	stmia.w	r3, {r0, r1}
  _this->StrikeCount = aStrikeCount;
90024842:	9b05      	ldr	r3, [sp, #20]
  _this->HoldPeriod = aHoldPeriod;
90024844:	9904      	ldr	r1, [sp, #16]
  _this->StrikeCount = aStrikeCount;
90024846:	62ab      	str	r3, [r5, #40]	; 0x28
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024848:	9b08      	ldr	r3, [sp, #32]
9002484a:	9807      	ldr	r0, [sp, #28]
9002484c:	626b      	str	r3, [r5, #36]	; 0x24
  for ( i = 0; i < 10; i = i + 1 )
9002484e:	9b03      	ldr	r3, [sp, #12]
  _this->HoldPeriod = aHoldPeriod;
90024850:	62e9      	str	r1, [r5, #44]	; 0x2c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024852:	6228      	str	r0, [r5, #32]
  for ( i = 0; i < 10; i = i + 1 )
90024854:	4598      	cmp	r8, r3
  _this->GlobalHittingPos = aGlobalHittingPos;
90024856:	9909      	ldr	r1, [sp, #36]	; 0x24
90024858:	9806      	ldr	r0, [sp, #24]
9002485a:	61a9      	str	r1, [r5, #24]
9002485c:	61e8      	str	r0, [r5, #28]
  for ( i = 0; i < 10; i = i + 1 )
9002485e:	f47f af73 	bne.w	90024748 <CoreRoot_cursorHoldTimerProc+0x2c>
  if ( !found )
90024862:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024864:	2b00      	cmp	r3, #0
90024866:	f000 808d 	beq.w	90024984 <CoreRoot_cursorHoldTimerProc+0x268>
}
9002486a:	b017      	add	sp, #92	; 0x5c
9002486c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (( grp == 0 ) && ((CoreRoot)_this->cursorTargetView[ EwCheckIndex( i, 10 )] 
90024870:	f8d8 3000 	ldr.w	r3, [r8]
90024874:	4553      	cmp	r3, sl
90024876:	9304      	str	r3, [sp, #16]
90024878:	d081      	beq.n	9002477e <CoreRoot_cursorHoldTimerProc+0x62>
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
9002487a:	4639      	mov	r1, r7
        _this->cursorFinger = i;
9002487c:	f8ca 634c 	str.w	r6, [sl, #844]	; 0x34c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024880:	4844      	ldr	r0, [pc, #272]	; (90024994 <CoreRoot_cursorHoldTimerProc+0x278>)
  _this->Down = 0;
90024882:	f04f 0b00 	mov.w	fp, #0
        _this->cursorTargetView[ EwCheckIndex( i, 10 )] = 0;
90024886:	f8c8 7000 	str.w	r7, [r8]
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
9002488a:	af0c      	add	r7, sp, #48	; 0x30
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
9002488c:	f7f9 fab8 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024890:	f8da 30a0 	ldr.w	r3, [sl, #160]	; 0xa0
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024894:	4604      	mov	r4, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024896:	2b00      	cmp	r3, #0
90024898:	bf16      	itet	ne
9002489a:	2201      	movne	r2, #1
9002489c:	2200      	moveq	r2, #0
    event->Super1.Time = _this->currentEventTimestamp;
9002489e:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
900248a0:	7502      	strb	r2, [r0, #20]
    return aIndex;
900248a2:	aa10      	add	r2, sp, #64	; 0x40
        CoreView_HandleEvent( tmp, ((CoreEvent)CoreCursorEvent_InitializeUp( CoreRoot_createCursorEvent( 
900248a4:	f8d8 3124 	ldr.w	r3, [r8, #292]	; 0x124
900248a8:	f8d8 505c 	ldr.w	r5, [r8, #92]	; 0x5c
900248ac:	9305      	str	r3, [sp, #20]
900248ae:	f8d9 32ac 	ldr.w	r3, [r9, #684]	; 0x2ac
900248b2:	e9d9 0183 	ldrd	r0, r1, [r9, #524]	; 0x20c
900248b6:	9307      	str	r3, [sp, #28]
900248b8:	1c6b      	adds	r3, r5, #1
900248ba:	ad12      	add	r5, sp, #72	; 0x48
900248bc:	9306      	str	r3, [sp, #24]
900248be:	f8d9 32b0 	ldr.w	r3, [r9, #688]	; 0x2b0
900248c2:	e882 0003 	stmia.w	r2, {r0, r1}
900248c6:	e9d9 0165 	ldrd	r0, r1, [r9, #404]	; 0x194
900248ca:	9309      	str	r3, [sp, #36]	; 0x24
900248cc:	f8d9 32fc 	ldr.w	r3, [r9, #764]	; 0x2fc
900248d0:	e885 0003 	stmia.w	r5, {r0, r1}
900248d4:	e9d9 0197 	ldrd	r0, r1, [r9, #604]	; 0x25c
900248d8:	ad16      	add	r5, sp, #88	; 0x58
900248da:	930b      	str	r3, [sp, #44]	; 0x2c
900248dc:	f8d9 3300 	ldr.w	r3, [r9, #768]	; 0x300
  _this->Down = 0;
900248e0:	f884 b044 	strb.w	fp, [r4, #68]	; 0x44
  _this->Finger = aFinger;
900248e4:	6426      	str	r6, [r4, #64]	; 0x40
900248e6:	9308      	str	r3, [sp, #32]
900248e8:	e905 0003 	stmdb	r5, {r0, r1}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
900248ec:	9915      	ldr	r1, [sp, #84]	; 0x54
900248ee:	4638      	mov	r0, r7
900248f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
900248f2:	9100      	str	r1, [sp, #0]
900248f4:	ca06      	ldmia	r2, {r1, r2}
900248f6:	f7f9 fe7f 	bl	9001e5f8 <EwMovePointPos>
900248fa:	f104 0238 	add.w	r2, r4, #56	; 0x38
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
900248fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024900:	9b14      	ldr	r3, [sp, #80]	; 0x50
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024902:	e897 0003 	ldmia.w	r7, {r0, r1}
90024906:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
9002490a:	a912      	add	r1, sp, #72	; 0x48
9002490c:	4638      	mov	r0, r7
9002490e:	c906      	ldmia	r1, {r1, r2}
90024910:	9500      	str	r5, [sp, #0]
90024912:	f7f9 fe71 	bl	9001e5f8 <EwMovePointPos>
90024916:	f104 0330 	add.w	r3, r4, #48	; 0x30
  _this->StrikeCount = aStrikeCount;
9002491a:	9a06      	ldr	r2, [sp, #24]
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
9002491c:	e897 0003 	ldmia.w	r7, {r0, r1}
90024920:	e883 0003 	stmia.w	r3, {r0, r1}
  _this->HoldPeriod = aHoldPeriod;
90024924:	9b05      	ldr	r3, [sp, #20]
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024926:	4659      	mov	r1, fp
  _this->StrikeCount = aStrikeCount;
90024928:	62a2      	str	r2, [r4, #40]	; 0x28
  _this->HoldPeriod = aHoldPeriod;
9002492a:	62e3      	str	r3, [r4, #44]	; 0x2c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
9002492c:	9b07      	ldr	r3, [sp, #28]
  _this->AutoDeflected = aAutoDeflected;
9002492e:	f884 b045 	strb.w	fp, [r4, #69]	; 0x45
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024932:	6223      	str	r3, [r4, #32]
90024934:	9b09      	ldr	r3, [sp, #36]	; 0x24
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024936:	4818      	ldr	r0, [pc, #96]	; (90024998 <CoreRoot_cursorHoldTimerProc+0x27c>)
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024938:	6263      	str	r3, [r4, #36]	; 0x24
  _this->GlobalHittingPos = aGlobalHittingPos;
9002493a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9002493c:	61a3      	str	r3, [r4, #24]
9002493e:	9b08      	ldr	r3, [sp, #32]
90024940:	61e3      	str	r3, [r4, #28]
  _this->Down = 0;
90024942:	2400      	movs	r4, #0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024944:	f7f9 fa5c 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024948:	f8da 30a0 	ldr.w	r3, [sl, #160]	; 0xa0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
9002494c:	4601      	mov	r1, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
9002494e:	f8d9 72b0 	ldr.w	r7, [r9, #688]	; 0x2b0
90024952:	455b      	cmp	r3, fp
90024954:	bf16      	itet	ne
90024956:	2201      	movne	r2, #1
90024958:	465a      	moveq	r2, fp
    event->Super1.Time = _this->currentEventTimestamp;
9002495a:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
9002495c:	7502      	strb	r2, [r0, #20]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
9002495e:	2218      	movs	r2, #24
        CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeUp( 
90024960:	f8d8 305c 	ldr.w	r3, [r8, #92]	; 0x5c
90024964:	f8d9 02ac 	ldr.w	r0, [r9, #684]	; 0x2ac
90024968:	3301      	adds	r3, #1
  _this->Down = 0;
9002496a:	858c      	strh	r4, [r1, #44]	; 0x2c
  _this->Target = aTarget;
9002496c:	9c04      	ldr	r4, [sp, #16]
  _this->StrikeCount = aStrikeCount;
9002496e:	624b      	str	r3, [r1, #36]	; 0x24
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024970:	f8da 3000 	ldr.w	r3, [sl]
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024974:	61c8      	str	r0, [r1, #28]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024976:	4650      	mov	r0, sl
90024978:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
9002497a:	620f      	str	r7, [r1, #32]
  _this->Finger = aFinger;
9002497c:	628e      	str	r6, [r1, #40]	; 0x28
  _this->Target = aTarget;
9002497e:	618c      	str	r4, [r1, #24]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024980:	4798      	blx	r3
90024982:	e6da      	b.n	9002473a <CoreRoot_cursorHoldTimerProc+0x1e>
    CoreTimer_OnSetEnabled( &_this->cursorHoldTimer, 0 );
90024984:	4619      	mov	r1, r3
90024986:	f10a 0074 	add.w	r0, sl, #116	; 0x74
}
9002498a:	b017      	add	sp, #92	; 0x5c
9002498c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    CoreTimer_OnSetEnabled( &_this->cursorHoldTimer, 0 );
90024990:	f7ff beaa 	b.w	900246e8 <CoreTimer_OnSetEnabled>
90024994:	90033534 	.word	0x90033534
90024998:	90033570 	.word	0x90033570

9002499c <CoreRoot_DriveMultiTouchHitting>:
{
9002499c:	b082      	sub	sp, #8
  if (( aFinger < 0 ) || ( aFinger > 9 ))
9002499e:	2a09      	cmp	r2, #9
{
900249a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249a4:	b09f      	sub	sp, #124	; 0x7c
900249a6:	4604      	mov	r4, r0
900249a8:	9329      	str	r3, [sp, #164]	; 0xa4
  if (( aFinger < 0 ) || ( aFinger > 9 ))
900249aa:	d833      	bhi.n	90024a14 <CoreRoot_DriveMultiTouchHitting+0x78>
  ticksCount = _this->currentEventTimestamp;
900249ac:	f8d0 80a0 	ldr.w	r8, [r0, #160]	; 0xa0
  if ( ticksCount == 0 )
900249b0:	4615      	mov	r5, r2
900249b2:	4689      	mov	r9, r1
900249b4:	f1b8 0f00 	cmp.w	r8, #0
900249b8:	d034      	beq.n	90024a24 <CoreRoot_DriveMultiTouchHitting+0x88>
900249ba:	46c2      	mov	sl, r8
  CoreRoot_DriveMultiTouchMovement( _this, aFinger, aPos );
900249bc:	ab29      	add	r3, sp, #164	; 0xa4
900249be:	4629      	mov	r1, r5
900249c0:	4620      	mov	r0, r4
900249c2:	9307      	str	r3, [sp, #28]
900249c4:	e9d3 2300 	ldrd	r2, r3, [r3]
900249c8:	f7ff fbb8 	bl	9002413c <CoreRoot_DriveMultiTouchMovement>
  aPos = _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )];
900249cc:	f105 0355 	add.w	r3, r5, #85	; 0x55
900249d0:	00df      	lsls	r7, r3, #3
900249d2:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
900249d6:	1d3a      	adds	r2, r7, #4
900249d8:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
900249dc:	18a3      	adds	r3, r4, r2
900249de:	f854 b002 	ldr.w	fp, [r4, r2]
900249e2:	685b      	ldr	r3, [r3, #4]
  _this->currentEventTimestamp = savedCurrentEventTimestamp;
900249e4:	f8c4 a0a0 	str.w	sl, [r4, #160]	; 0xa0
  aPos = _this->cursorLastPos[ EwCheckIndex( aFinger, 10 )];
900249e8:	461e      	mov	r6, r3
900249ea:	9308      	str	r3, [sp, #32]
900249ec:	9b07      	ldr	r3, [sp, #28]
900249ee:	e883 0003 	stmia.w	r3, {r0, r1}
  if ( aDown )
900249f2:	f1b9 0f00 	cmp.w	r9, #0
900249f6:	d01b      	beq.n	90024a30 <CoreRoot_DriveMultiTouchHitting+0x94>
    _this->cursorFirstPos[ EwCheckIndex( aFinger, 10 )] = aPos;
900249f8:	f107 0354 	add.w	r3, r7, #84	; 0x54
900249fc:	eb04 0a85 	add.w	sl, r4, r5, lsl #2
90024a00:	18e2      	adds	r2, r4, r3
90024a02:	f844 b003 	str.w	fp, [r4, r3]
90024a06:	6056      	str	r6, [r2, #4]
  if ( aDown && ( _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] == 0 ))
90024a08:	f8da 9048 	ldr.w	r9, [sl, #72]	; 0x48
90024a0c:	f1b9 0f00 	cmp.w	r9, #0
90024a10:	f000 80c3 	beq.w	90024b9a <CoreRoot_DriveMultiTouchHitting+0x1fe>
    _this->currentEventTimestamp = 0;
90024a14:	2000      	movs	r0, #0
90024a16:	f8c4 00a0 	str.w	r0, [r4, #160]	; 0xa0
}
90024a1a:	b01f      	add	sp, #124	; 0x7c
90024a1c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024a20:	b002      	add	sp, #8
90024a22:	4770      	bx	lr
    ticksCount = (XUInt32)EwGetTicks();
90024a24:	f002 f96c 	bl	90026d00 <EwGetTicks>
90024a28:	f8d4 a0a0 	ldr.w	sl, [r4, #160]	; 0xa0
90024a2c:	4680      	mov	r8, r0
90024a2e:	e7c5      	b.n	900249bc <CoreRoot_DriveMultiTouchHitting+0x20>
    return aIndex;
90024a30:	eb04 0885 	add.w	r8, r4, r5, lsl #2
  if ( !aDown && ( _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] != 0 ))
90024a34:	f8d8 9048 	ldr.w	r9, [r8, #72]	; 0x48
90024a38:	f1b9 0f00 	cmp.w	r9, #0
90024a3c:	d0ea      	beq.n	90024a14 <CoreRoot_DriveMultiTouchHitting+0x78>
    CoreGroup grp = _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )]->Owner;
90024a3e:	f8d9 6018 	ldr.w	r6, [r9, #24]
    XPoint pos = aPos;
90024a42:	465a      	mov	r2, fp
90024a44:	9b08      	ldr	r3, [sp, #32]
    while (( grp != 0 ) && ((CoreRoot)grp != _this ))
90024a46:	b1ae      	cbz	r6, 90024a74 <CoreRoot_DriveMultiTouchHitting+0xd8>
90024a48:	42b4      	cmp	r4, r6
90024a4a:	d013      	beq.n	90024a74 <CoreRoot_DriveMultiTouchHitting+0xd8>
90024a4c:	f10d 0948 	add.w	r9, sp, #72	; 0x48
      pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
90024a50:	6ab1      	ldr	r1, [r6, #40]	; 0x28
90024a52:	4648      	mov	r0, r9
90024a54:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
90024a58:	9100      	str	r1, [sp, #0]
90024a5a:	6a73      	ldr	r3, [r6, #36]	; 0x24
90024a5c:	e899 0006 	ldmia.w	r9, {r1, r2}
90024a60:	f7f9 fdb8 	bl	9001e5d4 <EwMovePointNeg>
      grp = grp->Super2.Owner;
90024a64:	69b6      	ldr	r6, [r6, #24]
      pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
90024a66:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
    while (( grp != 0 ) && ((CoreRoot)grp != _this ))
90024a6a:	b10e      	cbz	r6, 90024a70 <CoreRoot_DriveMultiTouchHitting+0xd4>
90024a6c:	42b4      	cmp	r4, r6
90024a6e:	d1ef      	bne.n	90024a50 <CoreRoot_DriveMultiTouchHitting+0xb4>
90024a70:	f8d8 9048 	ldr.w	r9, [r8, #72]	; 0x48
    if ( grp == 0 )
90024a74:	2e00      	cmp	r6, #0
90024a76:	f000 8199 	beq.w	90024dac <CoreRoot_DriveMultiTouchHitting+0x410>
    _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] = 0;
90024a7a:	2100      	movs	r1, #0
    _this->cursorFinger = aFinger;
90024a7c:	f8c4 534c 	str.w	r5, [r4, #844]	; 0x34c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024a80:	4894      	ldr	r0, [pc, #592]	; (90024cd4 <CoreRoot_DriveMultiTouchHitting+0x338>)
90024a82:	3754      	adds	r7, #84	; 0x54
    _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] = 0;
90024a84:	f8c8 1048 	str.w	r1, [r8, #72]	; 0x48
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024a88:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
90024a8c:	9309      	str	r3, [sp, #36]	; 0x24
90024a8e:	9207      	str	r2, [sp, #28]
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024a90:	f7f9 f9b6 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024a94:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024a98:	4606      	mov	r6, r0
  if ( _this->currentEventTimestamp != 0 )
90024a9a:	9a07      	ldr	r2, [sp, #28]
90024a9c:	eb04 0c07 	add.w	ip, r4, r7
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024aa0:	2900      	cmp	r1, #0
  if ( _this->currentEventTimestamp != 0 )
90024aa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024aa4:	59e7      	ldr	r7, [r4, r7]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024aa6:	bf16      	itet	ne
90024aa8:	2001      	movne	r0, #1
90024aaa:	2000      	moveq	r0, #0
    event->Super1.Time = _this->currentEventTimestamp;
90024aac:	6131      	strne	r1, [r6, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024aae:	7530      	strb	r0, [r6, #20]
    return aIndex;
90024ab0:	eb04 00c5 	add.w	r0, r4, r5, lsl #3
90024ab4:	970b      	str	r7, [sp, #44]	; 0x2c
90024ab6:	4686      	mov	lr, r0
90024ab8:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
90024abc:	e9d0 0165 	ldrd	r0, r1, [r0, #404]	; 0x194
90024ac0:	f8dc 2004 	ldr.w	r2, [ip, #4]
90024ac4:	f10d 0c58 	add.w	ip, sp, #88	; 0x58
    CoreView_HandleEvent( tmp, ((CoreEvent)CoreCursorEvent_InitializeUp( CoreRoot_createCursorEvent( 
90024ac8:	f8d8 30a4 	ldr.w	r3, [r8, #164]	; 0xa4
90024acc:	9207      	str	r2, [sp, #28]
90024ace:	3301      	adds	r3, #1
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024ad0:	9a15      	ldr	r2, [sp, #84]	; 0x54
90024ad2:	e88c 0003 	stmia.w	ip, {r0, r1}
90024ad6:	e9de 0197 	ldrd	r0, r1, [lr, #604]	; 0x25c
90024ada:	f10d 0e68 	add.w	lr, sp, #104	; 0x68
  _this->Down = 0;
90024ade:	f04f 0c00 	mov.w	ip, #0
    CoreView_HandleEvent( tmp, ((CoreEvent)CoreCursorEvent_InitializeUp( CoreRoot_createCursorEvent( 
90024ae2:	930a      	str	r3, [sp, #40]	; 0x28
90024ae4:	f8d8 316c 	ldr.w	r3, [r8, #364]	; 0x16c
  _this->Down = 0;
90024ae8:	f886 c044 	strb.w	ip, [r6, #68]	; 0x44
  _this->Finger = aFinger;
90024aec:	6435      	str	r5, [r6, #64]	; 0x40
    CoreView_HandleEvent( tmp, ((CoreEvent)CoreCursorEvent_InitializeUp( CoreRoot_createCursorEvent( 
90024aee:	9309      	str	r3, [sp, #36]	; 0x24
90024af0:	e88e 0003 	stmia.w	lr, {r0, r1}
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024af4:	991b      	ldr	r1, [sp, #108]	; 0x6c
90024af6:	4650      	mov	r0, sl
90024af8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90024afa:	9100      	str	r1, [sp, #0]
90024afc:	9914      	ldr	r1, [sp, #80]	; 0x50
90024afe:	f7f9 fd7b 	bl	9001e5f8 <EwMovePointPos>
90024b02:	f106 0238 	add.w	r2, r6, #56	; 0x38
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024b06:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
90024b08:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  _this->CurrentPos = EwMovePointPos( aCurrentPos, aHitOffset );
90024b0a:	e89a 0003 	ldmia.w	sl, {r0, r1}
90024b0e:	e882 0003 	stmia.w	r2, {r0, r1}
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024b12:	a916      	add	r1, sp, #88	; 0x58
90024b14:	4650      	mov	r0, sl
90024b16:	c906      	ldmia	r1, {r1, r2}
90024b18:	9700      	str	r7, [sp, #0]
90024b1a:	f7f9 fd6d 	bl	9001e5f8 <EwMovePointPos>
90024b1e:	f106 0330 	add.w	r3, r6, #48	; 0x30
  _this->GlobalHittingPos = aGlobalHittingPos;
90024b22:	9a07      	ldr	r2, [sp, #28]
  _this->AutoDeflected = aAutoDeflected;
90024b24:	f04f 0c00 	mov.w	ip, #0
  _this->HittingPos = EwMovePointPos( aHittingPos, aHitOffset );
90024b28:	e89a 0003 	ldmia.w	sl, {r0, r1}
90024b2c:	e883 0003 	stmia.w	r3, {r0, r1}
  _this->GlobalHittingPos = aGlobalHittingPos;
90024b30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024b32:	2100      	movs	r1, #0
  _this->GlobalHittingPos = aGlobalHittingPos;
90024b34:	61f2      	str	r2, [r6, #28]
90024b36:	61b3      	str	r3, [r6, #24]
  _this->HoldPeriod = aHoldPeriod;
90024b38:	9b09      	ldr	r3, [sp, #36]	; 0x24
  _this->StrikeCount = aStrikeCount;
90024b3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  _this->HoldPeriod = aHoldPeriod;
90024b3c:	62f3      	str	r3, [r6, #44]	; 0x2c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024b3e:	9b08      	ldr	r3, [sp, #32]
  _this->StrikeCount = aStrikeCount;
90024b40:	62b2      	str	r2, [r6, #40]	; 0x28
  _this->AutoDeflected = aAutoDeflected;
90024b42:	f886 c045 	strb.w	ip, [r6, #69]	; 0x45
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024b46:	f8c6 b020 	str.w	fp, [r6, #32]
90024b4a:	6273      	str	r3, [r6, #36]	; 0x24
  _this->Down = 0;
90024b4c:	2600      	movs	r6, #0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024b4e:	4862      	ldr	r0, [pc, #392]	; (90024cd8 <CoreRoot_DriveMultiTouchHitting+0x33c>)
90024b50:	f7f9 f956 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024b54:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024b58:	4601      	mov	r1, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024b5a:	2b00      	cmp	r3, #0
    event->Super1.Time = _this->currentEventTimestamp;
90024b5c:	bf1c      	itt	ne
90024b5e:	6103      	strne	r3, [r0, #16]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024b60:	2201      	movne	r2, #1
    CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeUp( 
90024b62:	f8d8 30a4 	ldr.w	r3, [r8, #164]	; 0xa4
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024b66:	bf08      	it	eq
90024b68:	2200      	moveq	r2, #0
  _this->Down = 0;
90024b6a:	8586      	strh	r6, [r0, #44]	; 0x2c
    CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeUp( 
90024b6c:	3301      	adds	r3, #1
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024b6e:	7502      	strb	r2, [r0, #20]
  _this->Finger = aFinger;
90024b70:	6285      	str	r5, [r0, #40]	; 0x28
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024b72:	2218      	movs	r2, #24
  _this->StrikeCount = aStrikeCount;
90024b74:	6243      	str	r3, [r0, #36]	; 0x24
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024b76:	9b08      	ldr	r3, [sp, #32]
90024b78:	f8c0 b01c 	str.w	fp, [r0, #28]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024b7c:	4620      	mov	r0, r4
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024b7e:	620b      	str	r3, [r1, #32]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024b80:	6823      	ldr	r3, [r4, #0]
  _this->Target = aTarget;
90024b82:	f8c1 9018 	str.w	r9, [r1, #24]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024b86:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90024b88:	4798      	blx	r3
    return 1;
90024b8a:	2001      	movs	r0, #1
    _this->currentEventTimestamp = 0;
90024b8c:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
}
90024b90:	b01f      	add	sp, #124	; 0x7c
90024b92:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b96:	b002      	add	sp, #8
90024b98:	4770      	bx	lr
    if ( EwIsPointInRect( _this->cursorSequelArea[ EwCheckIndex( aFinger, 10 )], 
90024b9a:	012a      	lsls	r2, r5, #4
90024b9c:	962a      	str	r6, [sp, #168]	; 0xa8
90024b9e:	eb04 1305 	add.w	r3, r4, r5, lsl #4
90024ba2:	f8cd b0a4 	str.w	fp, [sp, #164]	; 0xa4
90024ba6:	4616      	mov	r6, r2
90024ba8:	9a07      	ldr	r2, [sp, #28]
90024baa:	33cc      	adds	r3, #204	; 0xcc
90024bac:	e892 0003 	ldmia.w	r2, {r0, r1}
90024bb0:	e88d 0003 	stmia.w	sp, {r0, r1}
90024bb4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90024bb6:	f7f9 fda8 	bl	9001e70a <EwIsPointInRect>
90024bba:	b148      	cbz	r0, 90024bd0 <CoreRoot_DriveMultiTouchHitting+0x234>
        aPos ) && (( ticksCount - _this->cursorHittingTime[ EwCheckIndex( aFinger, 
90024bbc:	f8da 31e4 	ldr.w	r3, [sl, #484]	; 0x1e4
90024bc0:	eba8 0303 	sub.w	r3, r8, r3
90024bc4:	2bfa      	cmp	r3, #250	; 0xfa
90024bc6:	f200 80f7 	bhi.w	90024db8 <CoreRoot_DriveMultiTouchHitting+0x41c>
      EwCheckIndex( aFinger, 10 )] + 1;
90024bca:	f8da 00a4 	ldr.w	r0, [sl, #164]	; 0xa4
90024bce:	3001      	adds	r0, #1
    _this->cursorSequelArea[ EwCheckIndex( aFinger, 10 )] = EwMoveRectPos( _Const0007, 
90024bd0:	4632      	mov	r2, r6
90024bd2:	f8ca 00a4 	str.w	r0, [sl, #164]	; 0xa4
90024bd6:	ab01      	add	r3, sp, #4
90024bd8:	4422      	add	r2, r4
90024bda:	9309      	str	r3, [sp, #36]	; 0x24
90024bdc:	4691      	mov	r9, r2
90024bde:	4a3f      	ldr	r2, [pc, #252]	; (90024cdc <CoreRoot_DriveMultiTouchHitting+0x340>)
90024be0:	68d2      	ldr	r2, [r2, #12]
90024be2:	4616      	mov	r6, r2
90024be4:	9a07      	ldr	r2, [sp, #28]
90024be6:	e892 0003 	ldmia.w	r2, {r0, r1}
90024bea:	e883 0003 	stmia.w	r3, {r0, r1}
90024bee:	960a      	str	r6, [sp, #40]	; 0x28
90024bf0:	9600      	str	r6, [sp, #0]
90024bf2:	ae0e      	add	r6, sp, #56	; 0x38
90024bf4:	4939      	ldr	r1, [pc, #228]	; (90024cdc <CoreRoot_DriveMultiTouchHitting+0x340>)
90024bf6:	4630      	mov	r0, r6
90024bf8:	ae0e      	add	r6, sp, #56	; 0x38
90024bfa:	c90e      	ldmia	r1, {r1, r2, r3}
90024bfc:	f7f9 fe9f 	bl	9001e93e <EwMoveRectPos>
90024c00:	f109 0ccc 	add.w	ip, r9, #204	; 0xcc
90024c04:	f10d 0968 	add.w	r9, sp, #104	; 0x68
90024c08:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
90024c0c:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    hit = CoreView__CursorHitTest( _this, EwMoveRectPos( _Const0007, aPos ), aFinger, 
90024c10:	9b07      	ldr	r3, [sp, #28]
    _this->cursorHittingTime[ EwCheckIndex( aFinger, 10 )] = ticksCount;
90024c12:	f8ca 81e4 	str.w	r8, [sl, #484]	; 0x1e4
  return ((CoreView)_this)->_.VMT->CursorHitTest((CoreView)_this, aArea, aFinger
90024c16:	f04f 0800 	mov.w	r8, #0
    hit = CoreView__CursorHitTest( _this, EwMoveRectPos( _Const0007, aPos ), aFinger, 
90024c1a:	e893 0003 	ldmia.w	r3, {r0, r1}
90024c1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024c20:	e883 0003 	stmia.w	r3, {r0, r1}
90024c24:	492d      	ldr	r1, [pc, #180]	; (90024cdc <CoreRoot_DriveMultiTouchHitting+0x340>)
90024c26:	980a      	ldr	r0, [sp, #40]	; 0x28
90024c28:	c90e      	ldmia	r1, {r1, r2, r3}
90024c2a:	9000      	str	r0, [sp, #0]
90024c2c:	a816      	add	r0, sp, #88	; 0x58
90024c2e:	f7f9 fe86 	bl	9001e93e <EwMoveRectPos>
90024c32:	f8da 30a4 	ldr.w	r3, [sl, #164]	; 0xa4
  return ((CoreView)_this)->_.VMT->CursorHitTest((CoreView)_this, aArea, aFinger
90024c36:	f8d4 c000 	ldr.w	ip, [r4]
    hit = CoreView__CursorHitTest( _this, EwMoveRectPos( _Const0007, aPos ), aFinger, 
90024c3a:	3301      	adds	r3, #1
  return ((CoreView)_this)->_.VMT->CursorHitTest((CoreView)_this, aArea, aFinger
90024c3c:	9501      	str	r5, [sp, #4]
90024c3e:	f8cd 8010 	str.w	r8, [sp, #16]
90024c42:	e9cd 3802 	strd	r3, r8, [sp, #8]
90024c46:	ab16      	add	r3, sp, #88	; 0x58
90024c48:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90024c4a:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
90024c4e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90024c50:	4620      	mov	r0, r4
90024c52:	9300      	str	r3, [sp, #0]
90024c54:	f8dc 303c 	ldr.w	r3, [ip, #60]	; 0x3c
90024c58:	461e      	mov	r6, r3
90024c5a:	e899 000e 	ldmia.w	r9, {r1, r2, r3}
90024c5e:	47b0      	blx	r6
    if ( hit != 0 )
90024c60:	900a      	str	r0, [sp, #40]	; 0x28
90024c62:	2800      	cmp	r0, #0
90024c64:	f000 8097 	beq.w	90024d96 <CoreRoot_DriveMultiTouchHitting+0x3fa>
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024c68:	4641      	mov	r1, r8
90024c6a:	481b      	ldr	r0, [pc, #108]	; (90024cd8 <CoreRoot_DriveMultiTouchHitting+0x33c>)
90024c6c:	f7f9 f8c8 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024c70:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
  CoreCursorGrabEvent event = EwNewObject( CoreCursorGrabEvent, 0 );
90024c74:	4601      	mov	r1, r0
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024c76:	9e08      	ldr	r6, [sp, #32]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024c78:	4543      	cmp	r3, r8
90024c7a:	bf0e      	itee	eq
90024c7c:	4642      	moveq	r2, r8
90024c7e:	2201      	movne	r2, #1
    event->Super1.Time = _this->currentEventTimestamp;
90024c80:	6103      	strne	r3, [r0, #16]
  _this->Down = 1;
90024c82:	2301      	movs	r3, #1
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024c84:	7502      	strb	r2, [r0, #20]
  _this->Target = aTarget;
90024c86:	f04f 0800 	mov.w	r8, #0
      CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeDown( 
90024c8a:	f8da 20a4 	ldr.w	r2, [sl, #164]	; 0xa4
  _this->Down = 1;
90024c8e:	8583      	strh	r3, [r0, #44]	; 0x2c
      CoreGroup__BroadcastEvent( _this, ((CoreEvent)CoreCursorGrabEvent_InitializeDown( 
90024c90:	441a      	add	r2, r3
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024c92:	6823      	ldr	r3, [r4, #0]
  _this->Finger = aFinger;
90024c94:	6285      	str	r5, [r0, #40]	; 0x28
  _this->StrikeCount = aStrikeCount;
90024c96:	6242      	str	r2, [r0, #36]	; 0x24
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024c98:	2218      	movs	r2, #24
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024c9a:	f8c0 b01c 	str.w	fp, [r0, #28]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024c9e:	4620      	mov	r0, r4
90024ca0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
  _this->GlobalCurrentPos = aGlobalCurrentPos;
90024ca2:	620e      	str	r6, [r1, #32]
  _this->Target = aTarget;
90024ca4:	f8c1 8018 	str.w	r8, [r1, #24]
  return ((CoreGroup)_this)->_.VMT->BroadcastEvent((CoreGroup)_this, aEvent, aFilter );
90024ca8:	4798      	blx	r3
    grp = hit->View->Owner;
90024caa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024cac:	691a      	ldr	r2, [r3, #16]
90024cae:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
      _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] = 0;
90024cb2:	f8ca 8048 	str.w	r8, [sl, #72]	; 0x48
      _this->cursorHitOffset[ EwCheckIndex( aFinger, 10 )] = _Const0000;
90024cb6:	e9c3 8897 	strd	r8, r8, [r3, #604]	; 0x25c
    grp = hit->View->Owner;
90024cba:	f8d2 8018 	ldr.w	r8, [r2, #24]
    while (( grp != 0 ) && ((CoreRoot)grp != _this ))
90024cbe:	4544      	cmp	r4, r8
90024cc0:	d022      	beq.n	90024d08 <CoreRoot_DriveMultiTouchHitting+0x36c>
90024cc2:	f1b8 0f00 	cmp.w	r8, #0
90024cc6:	d01f      	beq.n	90024d08 <CoreRoot_DriveMultiTouchHitting+0x36c>
90024cc8:	4621      	mov	r1, r4
90024cca:	465b      	mov	r3, fp
90024ccc:	4644      	mov	r4, r8
90024cce:	9a08      	ldr	r2, [sp, #32]
90024cd0:	4688      	mov	r8, r1
90024cd2:	e007      	b.n	90024ce4 <CoreRoot_DriveMultiTouchHitting+0x348>
90024cd4:	90033534 	.word	0x90033534
90024cd8:	90033570 	.word	0x90033570
90024cdc:	90033524 	.word	0x90033524
90024ce0:	45a0      	cmp	r8, r4
90024ce2:	d00e      	beq.n	90024d02 <CoreRoot_DriveMultiTouchHitting+0x366>
      pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
90024ce4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90024ce6:	4648      	mov	r0, r9
90024ce8:	e9cd 321a 	strd	r3, r2, [sp, #104]	; 0x68
90024cec:	9100      	str	r1, [sp, #0]
90024cee:	6a63      	ldr	r3, [r4, #36]	; 0x24
90024cf0:	e899 0006 	ldmia.w	r9, {r1, r2}
90024cf4:	f7f9 fc6e 	bl	9001e5d4 <EwMovePointNeg>
      grp = grp->Super2.Owner;
90024cf8:	69a4      	ldr	r4, [r4, #24]
      pos = EwMovePointNeg( pos, grp->Super1.Bounds.Point1 );
90024cfa:	e9dd 321a 	ldrd	r3, r2, [sp, #104]	; 0x68
    while (( grp != 0 ) && ((CoreRoot)grp != _this ))
90024cfe:	2c00      	cmp	r4, #0
90024d00:	d1ee      	bne.n	90024ce0 <CoreRoot_DriveMultiTouchHitting+0x344>
90024d02:	469b      	mov	fp, r3
90024d04:	4644      	mov	r4, r8
90024d06:	9208      	str	r2, [sp, #32]
    _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d08:	f1a7 039c 	sub.w	r3, r7, #156	; 0x9c
    _this->cursorHittingPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d0c:	f5a7 728a 	sub.w	r2, r7, #276	; 0x114
90024d10:	9e08      	ldr	r6, [sp, #32]
    _this->cursorHoldPeriod[ EwCheckIndex( aFinger, 10 )] = 0;
90024d12:	2700      	movs	r7, #0
    _this->cursorHittingPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d14:	f844 b002 	str.w	fp, [r4, r2]
90024d18:	18a0      	adds	r0, r4, r2
    _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d1a:	18e2      	adds	r2, r4, r3
    CoreTimer_OnSetEnabled( &_this->cursorHoldTimer, 1 );
90024d1c:	2101      	movs	r1, #1
    _this->cursorHittingPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d1e:	6046      	str	r6, [r0, #4]
    CoreTimer_OnSetEnabled( &_this->cursorHoldTimer, 1 );
90024d20:	f104 0074 	add.w	r0, r4, #116	; 0x74
    _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )] = pos;
90024d24:	f844 b003 	str.w	fp, [r4, r3]
90024d28:	6056      	str	r6, [r2, #4]
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d2a:	2600      	movs	r6, #0
    _this->cursorHoldPeriod[ EwCheckIndex( aFinger, 10 )] = 0;
90024d2c:	f8ca 716c 	str.w	r7, [sl, #364]	; 0x16c
    CoreTimer_OnSetEnabled( &_this->cursorHoldTimer, 1 );
90024d30:	f7ff fcda 	bl	900246e8 <CoreTimer_OnSetEnabled>
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024d34:	4639      	mov	r1, r7
90024d36:	4821      	ldr	r0, [pc, #132]	; (90024dbc <CoreRoot_DriveMultiTouchHitting+0x420>)
    _this->cursorFinger = aFinger;
90024d38:	f8c4 534c 	str.w	r5, [r4, #844]	; 0x34c
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024d3c:	f7f9 f860 	bl	9001de00 <EwNewObjectIndirect>
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024d40:	f8d4 30a0 	ldr.w	r3, [r4, #160]	; 0xa0
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d44:	f8da 10a4 	ldr.w	r1, [sl, #164]	; 0xa4
  CoreCursorEvent event = EwNewObject( CoreCursorEvent, 0 );
90024d48:	4607      	mov	r7, r0
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024d4a:	2b00      	cmp	r3, #0
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d4c:	f8cd b068 	str.w	fp, [sp, #104]	; 0x68
90024d50:	f101 0c01 	add.w	ip, r1, #1
90024d54:	9908      	ldr	r1, [sp, #32]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024d56:	bf14      	ite	ne
90024d58:	2201      	movne	r2, #1
90024d5a:	2200      	moveq	r2, #0
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d5c:	911b      	str	r1, [sp, #108]	; 0x6c
90024d5e:	9907      	ldr	r1, [sp, #28]
  event->Super1.IsTimeExact = (XBool)( _this->currentEventTimestamp != 0 );
90024d60:	7502      	strb	r2, [r0, #20]
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d62:	aa04      	add	r2, sp, #16
    event->Super1.Time = _this->currentEventTimestamp;
90024d64:	bf18      	it	ne
90024d66:	6103      	strne	r3, [r0, #16]
    ((CoreEvent)CoreCursorEvent_InitializeDown( CoreRoot_createCursorEvent( _this ), 
90024d68:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90024d6c:	c903      	ldmia	r1, {r0, r1}
90024d6e:	e882 0003 	stmia.w	r2, {r0, r1}
90024d72:	e9d3 0197 	ldrd	r0, r1, [r3, #604]	; 0x25c
90024d76:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024d78:	9603      	str	r6, [sp, #12]
90024d7a:	e883 0003 	stmia.w	r3, {r0, r1}
90024d7e:	4629      	mov	r1, r5
90024d80:	4638      	mov	r0, r7
90024d82:	e899 000c 	ldmia.w	r9, {r2, r3}
90024d86:	f8cd c000 	str.w	ip, [sp]
90024d8a:	f7ff fb4b 	bl	90024424 <CoreCursorEvent_InitializeDown>
    return 1;
90024d8e:	2001      	movs	r0, #1
    _this->currentEventTimestamp = 0;
90024d90:	f8c4 60a0 	str.w	r6, [r4, #160]	; 0xa0
    return 1;
90024d94:	e641      	b.n	90024a1a <CoreRoot_DriveMultiTouchHitting+0x7e>
      _this->cursorTargetView[ EwCheckIndex( aFinger, 10 )] = 0;
90024d96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90024d98:	eb04 05c5 	add.w	r5, r4, r5, lsl #3
90024d9c:	f8ca 3048 	str.w	r3, [sl, #72]	; 0x48
      return 0;
90024da0:	4618      	mov	r0, r3
      _this->cursorHitOffset[ EwCheckIndex( aFinger, 10 )] = _Const0000;
90024da2:	e9c5 3397 	strd	r3, r3, [r5, #604]	; 0x25c
      _this->currentEventTimestamp = 0;
90024da6:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
      return 0;
90024daa:	e636      	b.n	90024a1a <CoreRoot_DriveMultiTouchHitting+0x7e>
      pos = _this->cursorCurrentPos[ EwCheckIndex( aFinger, 10 )];
90024dac:	f1a7 039c 	sub.w	r3, r7, #156	; 0x9c
90024db0:	18e1      	adds	r1, r4, r3
90024db2:	58e2      	ldr	r2, [r4, r3]
90024db4:	684b      	ldr	r3, [r1, #4]
90024db6:	e660      	b.n	90024a7a <CoreRoot_DriveMultiTouchHitting+0xde>
      _this->cursorSequelCounter[ EwCheckIndex( aFinger, 10 )] = 0;
90024db8:	4648      	mov	r0, r9
90024dba:	e709      	b.n	90024bd0 <CoreRoot_DriveMultiTouchHitting+0x234>
90024dbc:	90033534 	.word	0x90033534

90024dc0 <CoreRoot__DriveMultiTouchHitting>:
{
90024dc0:	b082      	sub	sp, #8
90024dc2:	b510      	push	{r4, lr}
90024dc4:	b082      	sub	sp, #8
  return CoreRoot_DriveMultiTouchHitting((CoreRoot)_this, aDown, aFinger, aPos );
90024dc6:	9c06      	ldr	r4, [sp, #24]
{
90024dc8:	9305      	str	r3, [sp, #20]
  return CoreRoot_DriveMultiTouchHitting((CoreRoot)_this, aDown, aFinger, aPos );
90024dca:	9400      	str	r4, [sp, #0]
90024dcc:	f7ff fde6 	bl	9002499c <CoreRoot_DriveMultiTouchHitting>
}
90024dd0:	b002      	add	sp, #8
90024dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90024dd6:	b002      	add	sp, #8
90024dd8:	4770      	bx	lr
90024dda:	bf00      	nop

90024ddc <CoreTimer_Trigger>:
/* The method Trigger() will be invoked when the timer is expired (when the interval 
   defined in @Begin or @Period is elapsed). The method can be overridden and implemented 
   in derived classes. The default implementation of this method sends a signal 
   to the slot method stored in the @OnTrigger property. */
void CoreTimer_Trigger( CoreTimer _this )
{
90024ddc:	b510      	push	{r4, lr}
90024dde:	4604      	mov	r4, r0
  ticksCount = (XUInt32)EwGetTicks();
90024de0:	f001 ff8e 	bl	90026d00 <EwGetTicks>
  _this->Time = CoreTimer_GetCurrentTime( _this );

  if ( _this->Period == 0 )
90024de4:	6a21      	ldr	r1, [r4, #32]
  _this->Time = CoreTimer_GetCurrentTime( _this );
90024de6:	61e0      	str	r0, [r4, #28]
  if ( _this->Period == 0 )
90024de8:	b131      	cbz	r1, 90024df8 <CoreTimer_Trigger+0x1c>
    CoreTimer_OnSetEnabled( _this, 0 );

  EwSignal( _this->OnTrigger, ((XObject)_this ));
90024dea:	4622      	mov	r2, r4
90024dec:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
}
90024df0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  EwSignal( _this->OnTrigger, ((XObject)_this ));
90024df4:	f7fa bde7 	b.w	9001f9c6 <EwSignal>
    CoreTimer_OnSetEnabled( _this, 0 );
90024df8:	4620      	mov	r0, r4
90024dfa:	f7ff fc75 	bl	900246e8 <CoreTimer_OnSetEnabled>
  EwSignal( _this->OnTrigger, ((XObject)_this ));
90024dfe:	4622      	mov	r2, r4
90024e00:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
}
90024e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  EwSignal( _this->OnTrigger, ((XObject)_this ));
90024e08:	f7fa bddd 	b.w	9001f9c6 <EwSignal>

90024e0c <TimerProc>:

/* Wrapper function for the non virtual method : 'Core::Timer.Trigger()' */
void CoreTimer__Trigger( void* _this )
{
  CoreTimer_Trigger((CoreTimer)_this );
90024e0c:	f7ff bfe6 	b.w	90024ddc <CoreTimer_Trigger>

90024e10 <GraphicsCanvas__Init>:
static const XStringRes _Const0004 = { _StringsDefault0, 0x003F };
static const XStringRes _Const0005 = { _StringsDefault0, 0x0073 };

/* Initializer for the class 'Graphics::Canvas' */
void GraphicsCanvas__Init( GraphicsCanvas _this, XObject aLink, XHandle aArg )
{
90024e10:	b510      	push	{r4, lr}
90024e12:	4604      	mov	r4, r0
  /* At first initialize the super class ... */
  ResourcesBitmap__Init( &_this->_.Super, aLink, aArg );
90024e14:	f000 fa06 	bl	90025224 <ResourcesBitmap__Init>

  /* Allow the Immediate Garbage Collection to evalute the members of this class. */
  _this->_.XObject._.GCT = EW_CLASS_GCT( GraphicsCanvas );
90024e18:	4b03      	ldr	r3, [pc, #12]	; (90024e28 <GraphicsCanvas__Init+0x18>)
void GraphicsCanvas_Init( GraphicsCanvas _this, XHandle aArg )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( aArg );

  _this->Super1.Mutable = 1;
90024e1a:	2201      	movs	r2, #1
  _this->_.XObject._.GCT = EW_CLASS_GCT( GraphicsCanvas );
90024e1c:	60e3      	str	r3, [r4, #12]
  _this->Super1.Mutable = 1;
90024e1e:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
  _this->_.VMT = EW_CLASS( GraphicsCanvas );
90024e22:	6023      	str	r3, [r4, #0]
}
90024e24:	bd10      	pop	{r4, pc}
90024e26:	bf00      	nop
90024e28:	90033944 	.word	0x90033944

90024e2c <GraphicsCanvas__ReInit>:
  ResourcesBitmap__ReInit( &_this->_.Super );
90024e2c:	f000 b998 	b.w	90025160 <ResourcesBitmap__ReInit>

90024e30 <GraphicsCanvas_OnSetFrameSize>:
}

/* 'C' function for method : 'Graphics::Canvas.OnSetFrameSize()' */
void GraphicsCanvas_OnSetFrameSize( GraphicsCanvas _this, XPoint value )
{
90024e30:	b5f0      	push	{r4, r5, r6, r7, lr}
90024e32:	b083      	sub	sp, #12
  XHandle handle;

  if (( value.X <= 0 ) || ( value.Y <= 0 ))
90024e34:	2a00      	cmp	r2, #0
{
90024e36:	4604      	mov	r4, r0
90024e38:	466e      	mov	r6, sp
90024e3a:	e886 0006 	stmia.w	r6, {r1, r2}
  if (( value.X <= 0 ) || ( value.Y <= 0 ))
90024e3e:	dd21      	ble.n	90024e84 <GraphicsCanvas_OnSetFrameSize+0x54>
90024e40:	2900      	cmp	r1, #0
90024e42:	4615      	mov	r5, r2
90024e44:	460f      	mov	r7, r1
90024e46:	dd1d      	ble.n	90024e84 <GraphicsCanvas_OnSetFrameSize+0x54>
    value = _Const0000;

  if ( !EwCompPoint( value, _this->Super1.FrameSize ))
90024e48:	e9cd 7500 	strd	r7, r5, [sp]
90024e4c:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
90024e50:	e896 0003 	ldmia.w	r6, {r0, r1}
90024e54:	f7f9 fb9f 	bl	9001e596 <EwCompPoint>
90024e58:	b190      	cbz	r0, 90024e80 <GraphicsCanvas_OnSetFrameSize+0x50>
    return;

  if ( _this->attached )
90024e5a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
90024e5e:	b9d3      	cbnz	r3, 90024e96 <GraphicsCanvas_OnSetFrameSize+0x66>
  {
    EwThrow( EwLoadString( &_Const0001 ));
    return;
  }

  _this->Super1.FrameSize = value;
90024e60:	e9c4 7508 	strd	r7, r5, [r4, #32]
  _this->Super1.Animated = (XBool)(((( _this->Super1.FrameSize.X > 0 ) && ( _this->Super1.FrameSize.Y 
90024e64:	b145      	cbz	r5, 90024e78 <GraphicsCanvas_OnSetFrameSize+0x48>
90024e66:	b13f      	cbz	r7, 90024e78 <GraphicsCanvas_OnSetFrameSize+0x48>
  > 0 )) && ( _this->Super1.FrameDelay > 0 )) && ( _this->Super1.NoOfFrames > 1 ));
90024e68:	69a2      	ldr	r2, [r4, #24]
90024e6a:	2a00      	cmp	r2, #0
90024e6c:	dd04      	ble.n	90024e78 <GraphicsCanvas_OnSetFrameSize+0x48>
90024e6e:	69e3      	ldr	r3, [r4, #28]
90024e70:	2b01      	cmp	r3, #1
90024e72:	bfd4      	ite	le
90024e74:	2300      	movle	r3, #0
90024e76:	2301      	movgt	r3, #1

  if ( _this->Super1.bitmap == 0 )
90024e78:	6960      	ldr	r0, [r4, #20]
  _this->Super1.Animated = (XBool)(((( _this->Super1.FrameSize.X > 0 ) && ( _this->Super1.FrameSize.Y 
90024e7a:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
  if ( _this->Super1.bitmap == 0 )
90024e7e:	b920      	cbnz	r0, 90024e8a <GraphicsCanvas_OnSetFrameSize+0x5a>
    return;

  handle = _this->Super1.bitmap;
  EwFreeBitmap((XBitmap*)handle );
  _this->Super1.bitmap = 0;
}
90024e80:	b003      	add	sp, #12
90024e82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    value = _Const0000;
90024e84:	2500      	movs	r5, #0
90024e86:	462f      	mov	r7, r5
90024e88:	e7de      	b.n	90024e48 <GraphicsCanvas_OnSetFrameSize+0x18>
  EwFreeBitmap((XBitmap*)handle );
90024e8a:	f7e7 f89b 	bl	9000bfc4 <EwFreeBitmap>
  _this->Super1.bitmap = 0;
90024e8e:	2300      	movs	r3, #0
90024e90:	6163      	str	r3, [r4, #20]
}
90024e92:	b003      	add	sp, #12
90024e94:	bdf0      	pop	{r4, r5, r6, r7, pc}
    EwThrow( EwLoadString( &_Const0001 ));
90024e96:	4804      	ldr	r0, [pc, #16]	; (90024ea8 <GraphicsCanvas_OnSetFrameSize+0x78>)
90024e98:	f7fb fea0 	bl	90020bdc <EwLoadString>
}
90024e9c:	b003      	add	sp, #12
90024e9e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
    EwThrow( EwLoadString( &_Const0001 ));
90024ea2:	f7f8 bac9 	b.w	9001d438 <EwThrow>
90024ea6:	bf00      	nop
90024ea8:	90033928 	.word	0x90033928

90024eac <GraphicsCanvas__Done>:
  if ( _this->attached )
90024eac:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90024eb0:	b153      	cbz	r3, 90024ec8 <GraphicsCanvas__Done+0x1c>
  {
    EwThrow( EwLoadString( &_Const0004 ));
    return 0;
  }

  _this->Super1.bitmap = 0;
90024eb2:	2300      	movs	r3, #0
  _this->attached = 0;
  _this->Super1.FrameSize = _Const0000;
  _this->Super1.FrameDelay = 0;
  _this->Super1.NoOfFrames = 1;
90024eb4:	2201      	movs	r2, #1
  _this->Super1.bitmap = 0;
90024eb6:	6143      	str	r3, [r0, #20]
  _this->attached = 0;
90024eb8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
  _this->Super1.FrameDelay = 0;
90024ebc:	6183      	str	r3, [r0, #24]
  _this->Super1.Animated = 0;
90024ebe:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
  _this->Super1.NoOfFrames = 1;
90024ec2:	61c2      	str	r2, [r0, #28]
  _this->Super1.FrameSize = _Const0000;
90024ec4:	e9c0 3308 	strd	r3, r3, [r0, #32]
  _this->_.Super._.VMT = EW_CLASS( ResourcesBitmap );
90024ec8:	4b01      	ldr	r3, [pc, #4]	; (90024ed0 <GraphicsCanvas__Done+0x24>)
90024eca:	6003      	str	r3, [r0, #0]
  ResourcesBitmap__Done( &_this->_.Super );
90024ecc:	f000 b94c 	b.w	90025168 <ResourcesBitmap__Done>
90024ed0:	900339bc 	.word	0x900339bc

90024ed4 <GraphicsCanvas__DetachBitmap>:
  return _this;
}

/* Wrapper function for the non virtual method : 'Graphics::Canvas.DetachBitmap()' */
GraphicsCanvas GraphicsCanvas__DetachBitmap( void* _this )
{
90024ed4:	b510      	push	{r4, lr}
  if ( !_this->attached )
90024ed6:	f890 4040 	ldrb.w	r4, [r0, #64]	; 0x40
90024eda:	b15c      	cbz	r4, 90024ef4 <GraphicsCanvas__DetachBitmap+0x20>
  _this->Super1.bitmap = 0;
90024edc:	2200      	movs	r2, #0
  _this->Super1.NoOfFrames = 1;
90024ede:	2101      	movs	r1, #1
  _this->Super1.bitmap = 0;
90024ee0:	6142      	str	r2, [r0, #20]
  _this->attached = 0;
90024ee2:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
  _this->Super1.FrameDelay = 0;
90024ee6:	6182      	str	r2, [r0, #24]
  _this->Super1.Animated = 0;
90024ee8:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
  _this->Super1.NoOfFrames = 1;
90024eec:	61c1      	str	r1, [r0, #28]
  _this->Super1.FrameSize = _Const0000;
90024eee:	e9c0 2208 	strd	r2, r2, [r0, #32]
  return GraphicsCanvas_DetachBitmap((GraphicsCanvas)_this );
}
90024ef2:	bd10      	pop	{r4, pc}
    EwThrow( EwLoadString( &_Const0004 ));
90024ef4:	4803      	ldr	r0, [pc, #12]	; (90024f04 <GraphicsCanvas__DetachBitmap+0x30>)
90024ef6:	f7fb fe71 	bl	90020bdc <EwLoadString>
90024efa:	f7f8 fa9d 	bl	9001d438 <EwThrow>
90024efe:	4620      	mov	r0, r4
}
90024f00:	bd10      	pop	{r4, pc}
90024f02:	bf00      	nop
90024f04:	90033934 	.word	0x90033934

90024f08 <GraphicsCanvas_AttachBitmap>:
/* The method AttachBitmap() exists for the integration purpose with the underlying 
   target system. You will never need to invoke this method directly from your GUI 
   application. The method is invoked at the beginning of the screen update.
   The method connects the canvas object with the framebuffer. */
GraphicsCanvas GraphicsCanvas_AttachBitmap( GraphicsCanvas _this, XHandle aBitmap )
{
90024f08:	b538      	push	{r3, r4, r5, lr}
  XInt32 noOfFrames;
  XPoint frameSize;
  XInt32 frameDelay;

  if ( _this->Super1.bitmap != 0 )
90024f0a:	6943      	ldr	r3, [r0, #20]
90024f0c:	b9ab      	cbnz	r3, 90024f3a <GraphicsCanvas_AttachBitmap+0x32>
  {
    EwThrow( EwLoadString( &_Const0005 ));
    return 0;
  }

  if ( aBitmap == 0 )
90024f0e:	b199      	cbz	r1, 90024f38 <GraphicsCanvas_AttachBitmap+0x30>
    return _this;

  _this->Super1.bitmap = aBitmap;
  _this->attached = 1;
90024f10:	2301      	movs	r3, #1
  _this->Super1.bitmap = aBitmap;
90024f12:	6141      	str	r1, [r0, #20]
  _this->attached = 1;
90024f14:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
  frameSize = _Const0000;
  frameDelay = 0;
  {
    XBitmap* bmp = (XBitmap*)aBitmap;

    noOfFrames = bmp->NoOfVirtFrames;
90024f18:	694a      	ldr	r2, [r1, #20]
    frameSize  = bmp->FrameSize;
    frameDelay = bmp->FrameDelay;
90024f1a:	68cb      	ldr	r3, [r1, #12]
    frameSize  = bmp->FrameSize;
90024f1c:	684c      	ldr	r4, [r1, #4]
  }
  _this->Super1.NoOfFrames = noOfFrames;
  _this->Super1.FrameSize = frameSize;
  _this->Super1.FrameDelay = frameDelay;
  _this->Super1.Animated = (XBool)(( _this->Super1.FrameDelay > 0 ) && ( _this->Super1.NoOfFrames 
90024f1e:	2b00      	cmp	r3, #0
90024f20:	bfc8      	it	gt
90024f22:	2a01      	cmpgt	r2, #1
    frameSize  = bmp->FrameSize;
90024f24:	6889      	ldr	r1, [r1, #8]
  _this->Super1.NoOfFrames = noOfFrames;
90024f26:	61c2      	str	r2, [r0, #28]
  _this->Super1.Animated = (XBool)(( _this->Super1.FrameDelay > 0 ) && ( _this->Super1.NoOfFrames 
90024f28:	bfcc      	ite	gt
90024f2a:	2501      	movgt	r5, #1
90024f2c:	2500      	movle	r5, #0
  _this->Super1.FrameDelay = frameDelay;
90024f2e:	6183      	str	r3, [r0, #24]
  _this->Super1.Animated = (XBool)(( _this->Super1.FrameDelay > 0 ) && ( _this->Super1.NoOfFrames 
90024f30:	f880 5029 	strb.w	r5, [r0, #41]	; 0x29
  _this->Super1.FrameSize = frameSize;
90024f34:	e9c0 4108 	strd	r4, r1, [r0, #32]
  > 1 ));
  return _this;
}
90024f38:	bd38      	pop	{r3, r4, r5, pc}
    EwThrow( EwLoadString( &_Const0005 ));
90024f3a:	4803      	ldr	r0, [pc, #12]	; (90024f48 <GraphicsCanvas_AttachBitmap+0x40>)
90024f3c:	f7fb fe4e 	bl	90020bdc <EwLoadString>
90024f40:	f7f8 fa7a 	bl	9001d438 <EwThrow>
90024f44:	2000      	movs	r0, #0
}
90024f46:	bd38      	pop	{r3, r4, r5, pc}
90024f48:	9003393c 	.word	0x9003393c

90024f4c <GraphicsCanvas__AttachBitmap>:

/* Wrapper function for the non virtual method : 'Graphics::Canvas.AttachBitmap()' */
GraphicsCanvas GraphicsCanvas__AttachBitmap( void* _this, XHandle aBitmap )
{
  return GraphicsCanvas_AttachBitmap((GraphicsCanvas)_this, aBitmap );
90024f4c:	f7ff bfdc 	b.w	90024f08 <GraphicsCanvas_AttachBitmap>

90024f50 <GraphicsCanvas_DrawText>:
   drawn pixel will overwrite the old content. */
void GraphicsCanvas_DrawText( GraphicsCanvas _this, XRect aClip, ResourcesFont aFont, 
  XString aString, XInt32 aOffset, XInt32 aCount, XRect aDstRect, XPoint aSrcPos, 
  XInt32 aMinWidth, XEnum aOrientation, XColor aColorTL, XColor aColorTR, XColor 
  aColorBR, XColor aColorBL, XBool aBlend )
{
90024f50:	b084      	sub	sp, #16
90024f52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f56:	b089      	sub	sp, #36	; 0x24
  XInt32 dstFrameNo;
  XHandle dstBitmap;
  XHandle srcFont;
  XRect tempRect;

  if ( _this->Super1.bitmap == 0 )
90024f58:	6946      	ldr	r6, [r0, #20]
{
90024f5a:	4605      	mov	r5, r0
90024f5c:	ac13      	add	r4, sp, #76	; 0x4c
90024f5e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
90024f60:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
90024f64:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
90024f68:	e884 000e 	stmia.w	r4, {r1, r2, r3}
90024f6c:	e9dd 8b18 	ldrd	r8, fp, [sp, #96]	; 0x60
90024f70:	9b22      	ldr	r3, [sp, #136]	; 0x88
90024f72:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
  if ( _this->Super1.bitmap == 0 )
90024f76:	2e00      	cmp	r6, #0
90024f78:	d032      	beq.n	90024fe0 <GraphicsCanvas_DrawText+0x90>
    return;

  if ( aOffset < 0 )
    aOffset = 0;

  if ((( aFont == 0 ) || ( aFont->font == 0 )) || (( aOffset > 0 ) && ( aOffset 
90024f7a:	2f00      	cmp	r7, #0
90024f7c:	d039      	beq.n	90024ff2 <GraphicsCanvas_DrawText+0xa2>
90024f7e:	f8d7 c014 	ldr.w	ip, [r7, #20]
90024f82:	f1bc 0f00 	cmp.w	ip, #0
90024f86:	d034      	beq.n	90024ff2 <GraphicsCanvas_DrawText+0xa2>
90024f88:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
90024f8c:	f1bb 0f00 	cmp.w	fp, #0
90024f90:	9101      	str	r1, [sp, #4]
90024f92:	dc35      	bgt.n	90025000 <GraphicsCanvas_DrawText+0xb0>
      >= EwGetStringLength( aString ))))
    return;

  orient = 0;

  if ( aOrientation == ViewsOrientationRotated_90 )
90024f94:	2b01      	cmp	r3, #1
90024f96:	d041      	beq.n	9002501c <GraphicsCanvas_DrawText+0xcc>
    orient = 90;
  else
    if ( aOrientation == ViewsOrientationRotated_180 )
90024f98:	2b02      	cmp	r3, #2
90024f9a:	d02f      	beq.n	90024ffc <GraphicsCanvas_DrawText+0xac>
      orient = 180;
    else
      if ( aOrientation == ViewsOrientationRotated_270 )
        orient = 270;
90024f9c:	2b03      	cmp	r3, #3
90024f9e:	bf14      	ite	ne
90024fa0:	2300      	movne	r3, #0
90024fa2:	f44f 7387 	moveq.w	r3, #270	; 0x10e

  dstFrameNo = _this->DstFrameNr;
90024fa6:	6be9      	ldr	r1, [r5, #60]	; 0x3c
  dstBitmap = _this->Super1.bitmap;
  srcFont = aFont->font;
  tempRect = aClip;
90024fa8:	af04      	add	r7, sp, #16
  {
    EwDrawText((XBitmap*)dstBitmap, (XFont*)srcFont, aString + aOffset, aCount,
90024faa:	9227      	str	r2, [sp, #156]	; 0x9c
90024fac:	ad17      	add	r5, sp, #92	; 0x5c
  dstFrameNo = _this->DstFrameNr;
90024fae:	9102      	str	r1, [sp, #8]
    EwDrawText((XBitmap*)dstBitmap, (XFont*)srcFont, aString + aOffset, aCount,
90024fb0:	e9cd a321 	strd	sl, r3, [sp, #132]	; 0x84
  tempRect = aClip;
90024fb4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90024fb8:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
    EwDrawText((XBitmap*)dstBitmap, (XFont*)srcFont, aString + aOffset, aCount,
90024fbc:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90024fc0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
90024fc4:	9a01      	ldr	r2, [sp, #4]
90024fc6:	464b      	mov	r3, r9
90024fc8:	9c02      	ldr	r4, [sp, #8]
90024fca:	4661      	mov	r1, ip
90024fcc:	eb08 0242 	add.w	r2, r8, r2, lsl #1
90024fd0:	4630      	mov	r0, r6
90024fd2:	9416      	str	r4, [sp, #88]	; 0x58
                dstFrameNo, tempRect, aDstRect, aSrcPos, aMinWidth, orient, aColorTL, aColorTR,
                aColorBR, aColorBL, aBlend );
  }
}
90024fd4:	b009      	add	sp, #36	; 0x24
90024fd6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024fda:	b004      	add	sp, #16
    EwDrawText((XBitmap*)dstBitmap, (XFont*)srcFont, aString + aOffset, aCount,
90024fdc:	f7ec b84a 	b.w	90011074 <EwDrawText>
    ResourcesBitmap__Update( _this );
90024fe0:	e9cd 3201 	strd	r3, r2, [sp, #4]
90024fe4:	f000 f95a 	bl	9002529c <ResourcesBitmap__Update>
  if ( _this->Super1.bitmap == 0 )
90024fe8:	696e      	ldr	r6, [r5, #20]
90024fea:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
90024fee:	2e00      	cmp	r6, #0
90024ff0:	d1c3      	bne.n	90024f7a <GraphicsCanvas_DrawText+0x2a>
}
90024ff2:	b009      	add	sp, #36	; 0x24
90024ff4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024ff8:	b004      	add	sp, #16
90024ffa:	4770      	bx	lr
      orient = 180;
90024ffc:	23b4      	movs	r3, #180	; 0xb4
90024ffe:	e7d2      	b.n	90024fa6 <GraphicsCanvas_DrawText+0x56>
      >= EwGetStringLength( aString ))))
90025000:	4640      	mov	r0, r8
90025002:	e9cd 3202 	strd	r3, r2, [sp, #8]
90025006:	f7fb ff89 	bl	90020f1c <EwGetStringLength>
  if ((( aFont == 0 ) || ( aFont->font == 0 )) || (( aOffset > 0 ) && ( aOffset 
9002500a:	9901      	ldr	r1, [sp, #4]
9002500c:	4288      	cmp	r0, r1
9002500e:	ddf0      	ble.n	90024ff2 <GraphicsCanvas_DrawText+0xa2>
90025010:	f8d7 c014 	ldr.w	ip, [r7, #20]
90025014:	696e      	ldr	r6, [r5, #20]
90025016:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
9002501a:	e7bb      	b.n	90024f94 <GraphicsCanvas_DrawText+0x44>
    orient = 90;
9002501c:	235a      	movs	r3, #90	; 0x5a
9002501e:	e7c2      	b.n	90024fa6 <GraphicsCanvas_DrawText+0x56>

90025020 <GraphicsCanvas_FillRectangle>:
   are combined with the pixel already existing in the destination bitmap. If aBlend 
   is 'true', the drawn pixel are alpha-blended with the background, otherwise the 
   drawn pixel will overwrite the old content. */
void GraphicsCanvas_FillRectangle( GraphicsCanvas _this, XRect aClip, XRect aDstRect, 
  XColor aColorTL, XColor aColorTR, XColor aColorBR, XColor aColorBL, XBool aBlend )
{
90025020:	b084      	sub	sp, #16
90025022:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90025026:	b08c      	sub	sp, #48	; 0x30
  XHandle dstBitmap;
  XInt32 dstFrameNo;

  if ( _this->Super1.bitmap == 0 )
90025028:	6945      	ldr	r5, [r0, #20]
{
9002502a:	4604      	mov	r4, r0
9002502c:	af13      	add	r7, sp, #76	; 0x4c
9002502e:	f89d 807c 	ldrb.w	r8, [sp, #124]	; 0x7c
90025032:	e887 000e 	stmia.w	r7, {r1, r2, r3}
  if ( _this->Super1.bitmap == 0 )
90025036:	b1e5      	cbz	r5, 90025072 <GraphicsCanvas_FillRectangle+0x52>
    return;

  dstBitmap = _this->Super1.bitmap;
  dstFrameNo = _this->DstFrameNr;
  {
    EwFillRectangle((XBitmap*)dstBitmap, dstFrameNo, aClip, aDstRect, aColorTL, aColorTR,
90025038:	ab17      	add	r3, sp, #92	; 0x5c
9002503a:	ae02      	add	r6, sp, #8
9002503c:	e9dd 211d 	ldrd	r2, r1, [sp, #116]	; 0x74
90025040:	e9cd 1809 	strd	r1, r8, [sp, #36]	; 0x24
90025044:	9208      	str	r2, [sp, #32]
90025046:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	; 0x6c
9002504a:	e9cd 2106 	strd	r2, r1, [sp, #24]
9002504e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90025050:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90025054:	e9dd 0115 	ldrd	r0, r1, [sp, #84]	; 0x54
90025058:	e897 000c 	ldmia.w	r7, {r2, r3}
9002505c:	e88d 0003 	stmia.w	sp, {r0, r1}
90025060:	4628      	mov	r0, r5
90025062:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90025064:	f7e7 fd0a 	bl	9000ca7c <EwFillRectangle>
                     aColorBR, aColorBL, aBlend );
  }
}
90025068:	b00c      	add	sp, #48	; 0x30
9002506a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002506e:	b004      	add	sp, #16
90025070:	4770      	bx	lr
    ResourcesBitmap__Update( _this );
90025072:	f000 f913 	bl	9002529c <ResourcesBitmap__Update>
  if ( _this->Super1.bitmap == 0 )
90025076:	6965      	ldr	r5, [r4, #20]
90025078:	2d00      	cmp	r5, #0
9002507a:	d1dd      	bne.n	90025038 <GraphicsCanvas_FillRectangle+0x18>
}
9002507c:	b00c      	add	sp, #48	; 0x30
9002507e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90025082:	b004      	add	sp, #16
90025084:	4770      	bx	lr
90025086:	bf00      	nop

90025088 <GraphicsCanvas_Update>:
  if ((( _this->Super1.bitmap == 0 ) && ( _this->Super1.FrameSize.X > 0 )) && ( 
90025088:	6943      	ldr	r3, [r0, #20]
{
9002508a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002508e:	4605      	mov	r5, r0
90025090:	b091      	sub	sp, #68	; 0x44
  if ((( _this->Super1.bitmap == 0 ) && ( _this->Super1.FrameSize.X > 0 )) && ( 
90025092:	b92b      	cbnz	r3, 900250a0 <GraphicsCanvas_Update+0x18>
90025094:	6a02      	ldr	r2, [r0, #32]
90025096:	2a00      	cmp	r2, #0
90025098:	dd02      	ble.n	900250a0 <GraphicsCanvas_Update+0x18>
9002509a:	6a42      	ldr	r2, [r0, #36]	; 0x24
9002509c:	2a00      	cmp	r2, #0
9002509e:	dc0d      	bgt.n	900250bc <GraphicsCanvas_Update+0x34>
900250a0:	f105 042c 	add.w	r4, r5, #44	; 0x2c
  if ( !EwIsRectEmpty( _this->InvalidArea ))
900250a4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
900250a8:	f7f9 fb46 	bl	9001e738 <EwIsRectEmpty>
900250ac:	b918      	cbnz	r0, 900250b6 <GraphicsCanvas_Update+0x2e>
    _this->InvalidArea = _Const0003;
900250ae:	62e8      	str	r0, [r5, #44]	; 0x2c
900250b0:	60e0      	str	r0, [r4, #12]
900250b2:	e9c4 0001 	strd	r0, r0, [r4, #4]
}
900250b6:	b011      	add	sp, #68	; 0x44
900250b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    XPoint frameSize = _this->Super1.FrameSize;
900250bc:	e9d0 0108 	ldrd	r0, r1, [r0, #32]
900250c0:	aa0e      	add	r2, sp, #56	; 0x38
      handle = (XHandle)EwCreateBitmap( EW_PIXEL_FORMAT_NATIVE, frameSize, 
900250c2:	69ec      	ldr	r4, [r5, #28]
    XPoint frameSize = _this->Super1.FrameSize;
900250c4:	e882 0003 	stmia.w	r2, {r0, r1}
      handle = (XHandle)EwCreateBitmap( EW_PIXEL_FORMAT_NATIVE, frameSize, 
900250c8:	9400      	str	r4, [sp, #0]
900250ca:	4618      	mov	r0, r3
900250cc:	69ab      	ldr	r3, [r5, #24]
900250ce:	ca06      	ldmia	r2, {r1, r2}
900250d0:	f7e6 ffc6 	bl	9000c060 <EwCreateBitmap>
    _this->Super1.bitmap = handle;
900250d4:	6168      	str	r0, [r5, #20]
    if ( _this->Super1.bitmap == 0 )
900250d6:	b920      	cbnz	r0, 900250e2 <GraphicsCanvas_Update+0x5a>
      _this->Super1.NoOfFrames = 1;
900250d8:	2301      	movs	r3, #1
      _this->Super1.FrameSize = _Const0000;
900250da:	e9c5 0008 	strd	r0, r0, [r5, #32]
      _this->Super1.NoOfFrames = 1;
900250de:	e9c5 0306 	strd	r0, r3, [r5, #24]
    _this->InvalidArea = EwNewRect2Point( _Const0000, _this->Super1.FrameSize );
900250e2:	6a69      	ldr	r1, [r5, #36]	; 0x24
900250e4:	ae0a      	add	r6, sp, #40	; 0x28
900250e6:	4a1b      	ldr	r2, [pc, #108]	; (90025154 <GraphicsCanvas_Update+0xcc>)
900250e8:	f105 042c 	add.w	r4, r5, #44	; 0x2c
900250ec:	6a2b      	ldr	r3, [r5, #32]
900250ee:	4630      	mov	r0, r6
900250f0:	9100      	str	r1, [sp, #0]
900250f2:	ca06      	ldmia	r2, {r1, r2}
900250f4:	f7f9 fac9 	bl	9001e68a <EwNewRect2Point>
    if ( !!_this->Super1.bitmap )
900250f8:	696f      	ldr	r7, [r5, #20]
    _this->InvalidArea = EwNewRect2Point( _Const0000, _this->Super1.FrameSize );
900250fa:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
900250fe:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
    if ( !!_this->Super1.bitmap )
90025102:	2f00      	cmp	r7, #0
90025104:	d0ce      	beq.n	900250a4 <GraphicsCanvas_Update+0x1c>
      for ( _this->DstFrameNr = _this->Super1.NoOfFrames - 1; _this->DstFrameNr 
90025106:	69eb      	ldr	r3, [r5, #28]
      XInt32 dstFrameNr = _this->DstFrameNr;
90025108:	f8d5 903c 	ldr.w	r9, [r5, #60]	; 0x3c
      for ( _this->DstFrameNr = _this->Super1.NoOfFrames - 1; _this->DstFrameNr 
9002510c:	3b01      	subs	r3, #1
9002510e:	2b00      	cmp	r3, #0
90025110:	63eb      	str	r3, [r5, #60]	; 0x3c
90025112:	db1b      	blt.n	9002514c <GraphicsCanvas_Update+0xc4>
90025114:	4b10      	ldr	r3, [pc, #64]	; (90025158 <GraphicsCanvas_Update+0xd0>)
90025116:	af01      	add	r7, sp, #4
        GraphicsCanvas_FillRectangle( _this, _this->InvalidArea, _this->InvalidArea, 
90025118:	f04f 0800 	mov.w	r8, #0
9002511c:	681e      	ldr	r6, [r3, #0]
9002511e:	f8d5 c038 	ldr.w	ip, [r5, #56]	; 0x38
90025122:	9605      	str	r6, [sp, #20]
90025124:	e9cd 6808 	strd	r6, r8, [sp, #32]
90025128:	e9cd 6606 	strd	r6, r6, [sp, #24]
9002512c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90025130:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
90025134:	f8cd c000 	str.w	ip, [sp]
90025138:	4628      	mov	r0, r5
9002513a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
9002513e:	f7ff ff6f 	bl	90025020 <GraphicsCanvas_FillRectangle>
           >= 0; _this->DstFrameNr-- )
90025142:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90025144:	3b01      	subs	r3, #1
      for ( _this->DstFrameNr = _this->Super1.NoOfFrames - 1; _this->DstFrameNr 
90025146:	2b00      	cmp	r3, #0
           >= 0; _this->DstFrameNr-- )
90025148:	63eb      	str	r3, [r5, #60]	; 0x3c
      for ( _this->DstFrameNr = _this->Super1.NoOfFrames - 1; _this->DstFrameNr 
9002514a:	dae8      	bge.n	9002511e <GraphicsCanvas_Update+0x96>
      _this->DstFrameNr = dstFrameNr;
9002514c:	f8c5 903c 	str.w	r9, [r5, #60]	; 0x3c
90025150:	e7a8      	b.n	900250a4 <GraphicsCanvas_Update+0x1c>
90025152:	bf00      	nop
90025154:	90033920 	.word	0x90033920
90025158:	90033930 	.word	0x90033930

9002515c <ResourcesBitmap_Update>:
/* 'C' function for method : 'Resources::Bitmap.Update()' */
void ResourcesBitmap_Update( ResourcesBitmap _this )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );
}
9002515c:	4770      	bx	lr
9002515e:	bf00      	nop

90025160 <ResourcesBitmap__ReInit>:
  CoreResource__ReInit( &_this->_.Super );
90025160:	f7fd b936 	b.w	900223d0 <CoreResource__ReInit>

90025164 <ResourcesFont__ReInit>:

/* Re-Initializer for the class 'Resources::Font' */
void ResourcesFont__ReInit( ResourcesFont _this )
{
  /* At first re-initialize the super class ... */
  CoreResource__ReInit( &_this->_.Super );
90025164:	f7fd b934 	b.w	900223d0 <CoreResource__ReInit>

90025168 <ResourcesBitmap__Done>:
{
90025168:	b510      	push	{r4, lr}
9002516a:	4604      	mov	r4, r0
  if ( _this->bitmap == 0 )
9002516c:	6940      	ldr	r0, [r0, #20]
9002516e:	b150      	cbz	r0, 90025186 <ResourcesBitmap__Done+0x1e>
  EwFreeBitmap((XBitmap*)handle );
90025170:	f7e6 ff28 	bl	9000bfc4 <EwFreeBitmap>
  _this->bitmap = 0;
90025174:	2300      	movs	r3, #0
  _this->NoOfFrames = 1;
90025176:	2201      	movs	r2, #1
  _this->bitmap = 0;
90025178:	6163      	str	r3, [r4, #20]
  _this->FrameDelay = 0;
9002517a:	61a3      	str	r3, [r4, #24]
  _this->Animated = 0;
9002517c:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
  _this->NoOfFrames = 1;
90025180:	61e2      	str	r2, [r4, #28]
  _this->FrameSize = _Const0000;
90025182:	e9c4 3308 	strd	r3, r3, [r4, #32]
  _this->_.Super._.VMT = EW_CLASS( CoreResource );
90025186:	4b03      	ldr	r3, [pc, #12]	; (90025194 <ResourcesBitmap__Done+0x2c>)
  CoreResource__Done( &_this->_.Super );
90025188:	4620      	mov	r0, r4
  _this->_.Super._.VMT = EW_CLASS( CoreResource );
9002518a:	6023      	str	r3, [r4, #0]
}
9002518c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CoreResource__Done( &_this->_.Super );
90025190:	f7fd bd82 	b.w	90022c98 <CoreResource__Done>
90025194:	90033778 	.word	0x90033778

90025198 <ResourcesBitmap_OnSetFrameSize>:
{
90025198:	b500      	push	{lr}
9002519a:	b083      	sub	sp, #12
    EwThrow( EwLoadString( &_Const0001 ));
9002519c:	4805      	ldr	r0, [pc, #20]	; (900251b4 <ResourcesBitmap_OnSetFrameSize+0x1c>)
{
9002519e:	ab02      	add	r3, sp, #8
900251a0:	e903 0006 	stmdb	r3, {r1, r2}
    EwThrow( EwLoadString( &_Const0001 ));
900251a4:	f7fb fd1a 	bl	90020bdc <EwLoadString>
}
900251a8:	b003      	add	sp, #12
900251aa:	f85d eb04 	ldr.w	lr, [sp], #4
    EwThrow( EwLoadString( &_Const0001 ));
900251ae:	f7f8 b943 	b.w	9001d438 <EwThrow>
900251b2:	bf00      	nop
900251b4:	900339b4 	.word	0x900339b4

900251b8 <ResourcesFont__Done>:
}

/* Finalizer method for the class 'Resources::Font' */
void ResourcesFont__Done( ResourcesFont _this )
{
900251b8:	b510      	push	{r4, lr}
900251ba:	4604      	mov	r4, r0
/* 'C' function for method : 'Resources::Font.freeFont()' */
void ResourcesFont_freeFont( ResourcesFont _this )
{
  XHandle handle;

  if ( _this->font == 0 )
900251bc:	6940      	ldr	r0, [r0, #20]
900251be:	b130      	cbz	r0, 900251ce <ResourcesFont__Done+0x16>
    return;

  handle = _this->font;
  EwFreeFont((XFont*)handle );
900251c0:	f7e7 fae0 	bl	9000c784 <EwFreeFont>
  _this->font = 0;
900251c4:	2300      	movs	r3, #0
900251c6:	6163      	str	r3, [r4, #20]
  _this->Ascent = 0;
  _this->Descent = 0;
  _this->Leading = 0;
900251c8:	61a3      	str	r3, [r4, #24]
  _this->Descent = 0;
900251ca:	e9c4 3307 	strd	r3, r3, [r4, #28]
  _this->_.Super._.VMT = EW_CLASS( CoreResource );
900251ce:	4b03      	ldr	r3, [pc, #12]	; (900251dc <ResourcesFont__Done+0x24>)
  CoreResource__Done( &_this->_.Super );
900251d0:	4620      	mov	r0, r4
  _this->_.Super._.VMT = EW_CLASS( CoreResource );
900251d2:	6023      	str	r3, [r4, #0]
}
900251d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  CoreResource__Done( &_this->_.Super );
900251d8:	f7fd bd5e 	b.w	90022c98 <CoreResource__Done>
900251dc:	90033778 	.word	0x90033778

900251e0 <ResourcesBitmap_Init.part.0>:
void ResourcesBitmap_Init( ResourcesBitmap _this, XHandle aArg )
900251e0:	b570      	push	{r4, r5, r6, lr}
900251e2:	4604      	mov	r4, r0
    XBitmap* bmp = EwLoadBitmap((const XBmpRes*)aArg );
900251e4:	4608      	mov	r0, r1
900251e6:	f7e6 ff7b 	bl	9000c0e0 <EwLoadBitmap>
    if ( bmp )
900251ea:	b188      	cbz	r0, 90025210 <ResourcesBitmap_Init.part.0+0x30>
      noOfFrames = bmp->NoOfVirtFrames;
900251ec:	6942      	ldr	r2, [r0, #20]
      frameDelay = bmp->FrameDelay;
900251ee:	68c3      	ldr	r3, [r0, #12]
      frameSize  = bmp->FrameSize;
900251f0:	6846      	ldr	r6, [r0, #4]
900251f2:	2a01      	cmp	r2, #1
900251f4:	bfc8      	it	gt
900251f6:	2b00      	cmpgt	r3, #0
900251f8:	6885      	ldr	r5, [r0, #8]
  _this->bitmap = handle;
900251fa:	bfcc      	ite	gt
900251fc:	2101      	movgt	r1, #1
900251fe:	2100      	movle	r1, #0
  _this->FrameSize = frameSize;
90025200:	6265      	str	r5, [r4, #36]	; 0x24
  _this->Animated = (XBool)((( _this->bitmap != 0 ) && ( _this->FrameDelay > 0 )) 
90025202:	f884 1029 	strb.w	r1, [r4, #41]	; 0x29
  _this->FrameSize = frameSize;
90025206:	e9c4 2607 	strd	r2, r6, [r4, #28]
  _this->bitmap = handle;
9002520a:	e9c4 0305 	strd	r0, r3, [r4, #20]
}
9002520e:	bd70      	pop	{r4, r5, r6, pc}
  _this->NoOfFrames = noOfFrames;
90025210:	2301      	movs	r3, #1
  _this->FrameDelay = frameDelay;
90025212:	4601      	mov	r1, r0
  _this->bitmap = handle;
90025214:	6160      	str	r0, [r4, #20]
  _this->FrameSize = frameSize;
90025216:	6220      	str	r0, [r4, #32]
90025218:	6260      	str	r0, [r4, #36]	; 0x24
  _this->Animated = (XBool)((( _this->bitmap != 0 ) && ( _this->FrameDelay > 0 )) 
9002521a:	f884 1029 	strb.w	r1, [r4, #41]	; 0x29
  _this->NoOfFrames = noOfFrames;
9002521e:	e9c4 0306 	strd	r0, r3, [r4, #24]
}
90025222:	bd70      	pop	{r4, r5, r6, pc}

90025224 <ResourcesBitmap__Init>:
{
90025224:	b538      	push	{r3, r4, r5, lr}
90025226:	4604      	mov	r4, r0
90025228:	4615      	mov	r5, r2
  CoreResource__Init( &_this->_.Super, aLink, aArg );
9002522a:	f7fd fd47 	bl	90022cbc <CoreResource__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( ResourcesBitmap );
9002522e:	4b06      	ldr	r3, [pc, #24]	; (90025248 <ResourcesBitmap__Init+0x24>)
  _this->NoOfFrames = 1;
90025230:	2201      	movs	r2, #1
  _this->_.XObject._.GCT = EW_CLASS_GCT( ResourcesBitmap );
90025232:	60e3      	str	r3, [r4, #12]
  _this->NoOfFrames = 1;
90025234:	61e2      	str	r2, [r4, #28]
  _this->_.VMT = EW_CLASS( ResourcesBitmap );
90025236:	6023      	str	r3, [r4, #0]
  if ( aArg == 0 )
90025238:	b905      	cbnz	r5, 9002523c <ResourcesBitmap__Init+0x18>
}
9002523a:	bd38      	pop	{r3, r4, r5, pc}
9002523c:	4629      	mov	r1, r5
9002523e:	4620      	mov	r0, r4
90025240:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90025244:	f7ff bfcc 	b.w	900251e0 <ResourcesBitmap_Init.part.0>
90025248:	900339bc 	.word	0x900339bc

9002524c <ResourcesFont_loadFont.part.0>:
}

/* 'C' function for method : 'Resources::Font.loadFont()' */
void ResourcesFont_loadFont( ResourcesFont _this, XHandle aFontResource )
9002524c:	b510      	push	{r4, lr}
9002524e:	4604      	mov	r4, r0
  ascent = 0;
  descent = 0;
  leading = 0;
  {
    /* aFontResource is a pointer to a memory where the font resource is stored. */
    XFont* font = EwLoadFont((const XFntRes*)aFontResource );
90025250:	4608      	mov	r0, r1
90025252:	f7e7 fa27 	bl	9000c6a4 <EwLoadFont>

    /* After the font has been loaded query its ascent and descent. */
    if ( font )
90025256:	b138      	cbz	r0, 90025268 <ResourcesFont_loadFont.part.0+0x1c>
    {
      ascent  = font->Ascent;
      descent = font->Descent;
      leading = font->Leading;
90025258:	6883      	ldr	r3, [r0, #8]
      descent = font->Descent;
9002525a:	e9d0 1200 	ldrd	r1, r2, [r0]
    }

    handle = (XHandle)(void*)font;
  }
  _this->font = handle;
9002525e:	6160      	str	r0, [r4, #20]
  _this->Ascent = ascent;
  _this->Descent = descent;
  _this->Leading = leading;
90025260:	61a3      	str	r3, [r4, #24]
  _this->Descent = descent;
90025262:	e9c4 2107 	strd	r2, r1, [r4, #28]
}
90025266:	bd10      	pop	{r4, pc}
  leading = 0;
90025268:	4603      	mov	r3, r0
  descent = 0;
9002526a:	4602      	mov	r2, r0
  ascent = 0;
9002526c:	4601      	mov	r1, r0
  _this->font = handle;
9002526e:	6160      	str	r0, [r4, #20]
  _this->Leading = leading;
90025270:	61a3      	str	r3, [r4, #24]
  _this->Descent = descent;
90025272:	e9c4 2107 	strd	r2, r1, [r4, #28]
}
90025276:	bd10      	pop	{r4, pc}

90025278 <ResourcesFont__Init>:
{
90025278:	b538      	push	{r3, r4, r5, lr}
9002527a:	4604      	mov	r4, r0
9002527c:	4615      	mov	r5, r2
  CoreResource__Init( &_this->_.Super, aLink, aArg );
9002527e:	f7fd fd1d 	bl	90022cbc <CoreResource__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( ResourcesFont );
90025282:	4b05      	ldr	r3, [pc, #20]	; (90025298 <ResourcesFont__Init+0x20>)
90025284:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( ResourcesFont );
90025286:	6023      	str	r3, [r4, #0]
  if ( aFontResource == 0 )
90025288:	b905      	cbnz	r5, 9002528c <ResourcesFont__Init+0x14>
}
9002528a:	bd38      	pop	{r3, r4, r5, pc}
9002528c:	4629      	mov	r1, r5
9002528e:	4620      	mov	r0, r4
90025290:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90025294:	f7ff bfda 	b.w	9002524c <ResourcesFont_loadFont.part.0>
90025298:	90033a00 	.word	0x90033a00

9002529c <ResourcesBitmap__Update>:
  ((ResourcesBitmap)_this)->_.VMT->Update((ResourcesBitmap)_this );
9002529c:	6803      	ldr	r3, [r0, #0]
9002529e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900252a0:	4718      	bx	r3
900252a2:	bf00      	nop

900252a4 <ResourcesFont_GetFlowTextAdvance>:
XInt32 ResourcesFont_GetFlowTextAdvance( ResourcesFont _this, XString aFlowString )
{
  XHandle handle;
  XInt32 advance;

  if ( _this->font == 0 )
900252a4:	6940      	ldr	r0, [r0, #20]
900252a6:	b900      	cbnz	r0, 900252aa <ResourcesFont_GetFlowTextAdvance+0x6>

  handle = _this->font;
  advance = 0;
  advance = EwGetFlowTextAdvance((XFont*)handle, aFlowString );
  return advance;
}
900252a8:	4770      	bx	lr
  advance = EwGetFlowTextAdvance((XFont*)handle, aFlowString );
900252aa:	f7ee b89d 	b.w	900133e8 <EwGetFlowTextAdvance>
900252ae:	bf00      	nop

900252b0 <ResourcesFont_ParseFlowString>:

/* 'C' function for method : 'Resources::Font.ParseFlowString()' */
XString ResourcesFont_ParseFlowString( ResourcesFont _this, XString aString, XInt32 
  aOffset, XInt32 aWidth, XInt32 aMaxNoOfRows, XHandle aBidi )
{
900252b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900252b4:	4605      	mov	r5, r0
  XString result;

  if ( aOffset < 0 )
    aOffset = 0;

  if (( _this->font == 0 ) || (( aOffset > 0 ) && ( aOffset >= EwGetStringLength( 
900252b6:	6940      	ldr	r0, [r0, #20]
{
900252b8:	e9dd 9a08 	ldrd	r9, sl, [sp, #32]
  if (( _this->font == 0 ) || (( aOffset > 0 ) && ( aOffset >= EwGetStringLength( 
900252bc:	b1a8      	cbz	r0, 900252ea <ResourcesFont_ParseFlowString+0x3a>
900252be:	2a00      	cmp	r2, #0
900252c0:	460e      	mov	r6, r1
900252c2:	461f      	mov	r7, r3
900252c4:	ea22 78e2 	bic.w	r8, r2, r2, asr #31
900252c8:	dd05      	ble.n	900252d6 <ResourcesFont_ParseFlowString+0x26>
900252ca:	4608      	mov	r0, r1
900252cc:	f7fb fe26 	bl	90020f1c <EwGetStringLength>
900252d0:	4540      	cmp	r0, r8
900252d2:	dd0a      	ble.n	900252ea <ResourcesFont_ParseFlowString+0x3a>
900252d4:	6968      	ldr	r0, [r5, #20]
      aString ))))
    return 0;

  handle = _this->font;
  result = 0;
  result = EwParseFlowString((XFont*)handle, aString + aOffset, aWidth, aMaxNoOfRows, aBidi );
900252d6:	464b      	mov	r3, r9
900252d8:	463a      	mov	r2, r7
900252da:	eb06 0148 	add.w	r1, r6, r8, lsl #1
900252de:	f8cd a020 	str.w	sl, [sp, #32]
  return result;
}
900252e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  result = EwParseFlowString((XFont*)handle, aString + aOffset, aWidth, aMaxNoOfRows, aBidi );
900252e6:	f7ed bdbd 	b.w	90012e64 <EwParseFlowString>
}
900252ea:	2000      	movs	r0, #0
900252ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900252f0 <ResourcesFont_GetTextAdvance>:
   is zero, the calculation starts with the first sign. The parameter aCount determines 
   the max. number of following sigs to calculate the advance value. If aCount is 
   -1, all signs until the end of the string will be evaluated. */
XInt32 ResourcesFont_GetTextAdvance( ResourcesFont _this, XString aString, XInt32 
  aOffset, XInt32 aCount )
{
900252f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900252f2:	4604      	mov	r4, r0
  XInt32 advance;

  if ( aOffset < 0 )
    aOffset = 0;

  if (( _this->font == 0 ) || (( aOffset > 0 ) && ( aOffset >= EwGetStringLength( 
900252f4:	6940      	ldr	r0, [r0, #20]
900252f6:	b190      	cbz	r0, 9002531e <ResourcesFont_GetTextAdvance+0x2e>
900252f8:	2a00      	cmp	r2, #0
900252fa:	460d      	mov	r5, r1
900252fc:	461e      	mov	r6, r3
900252fe:	ea22 77e2 	bic.w	r7, r2, r2, asr #31
90025302:	dd05      	ble.n	90025310 <ResourcesFont_GetTextAdvance+0x20>
90025304:	4608      	mov	r0, r1
90025306:	f7fb fe09 	bl	90020f1c <EwGetStringLength>
9002530a:	42b8      	cmp	r0, r7
9002530c:	dd07      	ble.n	9002531e <ResourcesFont_GetTextAdvance+0x2e>
9002530e:	6960      	ldr	r0, [r4, #20]
      aString ))))
    return 0;

  handle = _this->font;
  advance = 0;
  advance = EwGetTextAdvance((XFont*)handle, aString + aOffset, aCount );
90025310:	4632      	mov	r2, r6
90025312:	eb05 0147 	add.w	r1, r5, r7, lsl #1
  return advance;
}
90025316:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
  advance = EwGetTextAdvance((XFont*)handle, aString + aOffset, aCount );
9002531a:	f7eb be48 	b.w	90010fae <EwGetTextAdvance>
}
9002531e:	2000      	movs	r0, #0
90025320:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90025322:	bf00      	nop

90025324 <ViewsText_preOnUpdateSlot>:
void ViewsText_preOnUpdateSlot( ViewsText _this, XObject sender )
{
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( _this );
  EW_UNUSED_ARG( sender );
}
90025324:	4770      	bx	lr
90025326:	bf00      	nop

90025328 <ViewsRectangle__Init>:
{
90025328:	b510      	push	{r4, lr}
9002532a:	4604      	mov	r4, r0
  CoreRectView__Init( &_this->_.Super, aLink, aArg );
9002532c:	f7fd f814 	bl	90022358 <CoreRectView__Init>
  _this->Color = _Const0000;
90025330:	4a03      	ldr	r2, [pc, #12]	; (90025340 <ViewsRectangle__Init+0x18>)
  _this->_.XObject._.GCT = EW_CLASS_GCT( ViewsRectangle );
90025332:	4b04      	ldr	r3, [pc, #16]	; (90025344 <ViewsRectangle__Init+0x1c>)
  _this->Color = _Const0000;
90025334:	6812      	ldr	r2, [r2, #0]
  _this->_.XObject._.GCT = EW_CLASS_GCT( ViewsRectangle );
90025336:	60e3      	str	r3, [r4, #12]
  _this->Color = _Const0000;
90025338:	6362      	str	r2, [r4, #52]	; 0x34
  _this->_.VMT = EW_CLASS( ViewsRectangle );
9002533a:	6023      	str	r3, [r4, #0]
}
9002533c:	bd10      	pop	{r4, pc}
9002533e:	bf00      	nop
90025340:	90033a6c 	.word	0x90033a6c
90025344:	90033a78 	.word	0x90033a78

90025348 <ViewsText__Init>:
{
90025348:	b510      	push	{r4, lr}
9002534a:	4604      	mov	r4, r0
  CoreRectView__Init( &_this->_.Super, aLink, aArg );
9002534c:	f7fd f804 	bl	90022358 <CoreRectView__Init>
  _this->_.XObject._.GCT = EW_CLASS_GCT( ViewsText );
90025350:	4b01      	ldr	r3, [pc, #4]	; (90025358 <ViewsText__Init+0x10>)
90025352:	60e3      	str	r3, [r4, #12]
  _this->_.VMT = EW_CLASS( ViewsText );
90025354:	6023      	str	r3, [r4, #0]
}
90025356:	bd10      	pop	{r4, pc}
90025358:	90033ad0 	.word	0x90033ad0

9002535c <ViewsRectangle__ReInit>:
  CoreRectView__ReInit( &_this->_.Super );
9002535c:	f7fd b828 	b.w	900223b0 <CoreRectView__ReInit>

90025360 <ViewsText__ReInit>:
  CoreRectView__ReInit( &_this->_.Super );
90025360:	f7fd b826 	b.w	900223b0 <CoreRectView__ReInit>

90025364 <ViewsRectangle__Done>:
  _this->_.Super._.VMT = EW_CLASS( CoreRectView );
90025364:	4b01      	ldr	r3, [pc, #4]	; (9002536c <ViewsRectangle__Done+0x8>)
90025366:	6003      	str	r3, [r0, #0]
  CoreRectView__Done( &_this->_.Super );
90025368:	f7fd b846 	b.w	900223f8 <CoreRectView__Done>
9002536c:	90033720 	.word	0x90033720

90025370 <ViewsText__Done>:
  _this->_.Super._.VMT = EW_CLASS( CoreRectView );
90025370:	4b01      	ldr	r3, [pc, #4]	; (90025378 <ViewsText__Done+0x8>)
90025372:	6003      	str	r3, [r0, #0]
  CoreRectView__Done( &_this->_.Super );
90025374:	f7fd b840 	b.w	900223f8 <CoreRectView__Done>
90025378:	90033720 	.word	0x90033720

9002537c <ViewsRectangle_Draw>:
{
9002537c:	b082      	sub	sp, #8
9002537e:	4684      	mov	ip, r0
90025380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025384:	b093      	sub	sp, #76	; 0x4c
  XColor c = _this->Color;
90025386:	f890 b034 	ldrb.w	fp, [r0, #52]	; 0x34
9002538a:	f890 8035 	ldrb.w	r8, [r0, #53]	; 0x35
{
9002538e:	468a      	mov	sl, r1
  XColor c = _this->Color;
90025390:	f890 7036 	ldrb.w	r7, [r0, #54]	; 0x36
{
90025394:	a81c      	add	r0, sp, #112	; 0x70
90025396:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
9002539a:	9922      	ldr	r1, [sp, #136]	; 0x88
  XColor c = _this->Color;
9002539c:	f89c 6037 	ldrb.w	r6, [ip, #55]	; 0x37
{
900253a0:	e880 000c 	stmia.w	r0, {r2, r3}
  aBlend = (XBool)( aBlend && (( _this->Super2.viewState & CoreViewStateAlphaBlended ) 
900253a4:	f1b9 0f00 	cmp.w	r9, #0
900253a8:	d003      	beq.n	900253b2 <ViewsRectangle_Draw+0x36>
900253aa:	f8dc 3020 	ldr.w	r3, [ip, #32]
900253ae:	f3c3 0940 	ubfx	r9, r3, #1, #1
  aOpacity = aOpacity + 1;
900253b2:	1c4b      	adds	r3, r1, #1
  ctl = ctr = cbl = cbr = c;
900253b4:	f88d b028 	strb.w	fp, [sp, #40]	; 0x28
900253b8:	f88d 8029 	strb.w	r8, [sp, #41]	; 0x29
  if ( aOpacity < 256 )
900253bc:	2bff      	cmp	r3, #255	; 0xff
  ctl = ctr = cbl = cbr = c;
900253be:	f88d 702a 	strb.w	r7, [sp, #42]	; 0x2a
  if ( aOpacity < 256 )
900253c2:	dc03      	bgt.n	900253cc <ViewsRectangle_Draw+0x50>
    ctl.Alpha = (XUInt8)(( aOpacity * ctl.Alpha ) >> 8 );
900253c4:	fb03 f606 	mul.w	r6, r3, r6
900253c8:	f3c6 2607 	ubfx	r6, r6, #8, #8
  GraphicsCanvas_FillRectangle( aCanvas, aClip, EwMoveRectPos( _this->Super1.Bounds, 
900253cc:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
900253d0:	ac01      	add	r4, sp, #4
900253d2:	f10c 0c24 	add.w	ip, ip, #36	; 0x24
900253d6:	ad0e      	add	r5, sp, #56	; 0x38
900253d8:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
900253dc:	e884 0003 	stmia.w	r4, {r0, r1}
900253e0:	4628      	mov	r0, r5
900253e2:	9300      	str	r3, [sp, #0]
900253e4:	e89c 000e 	ldmia.w	ip, {r1, r2, r3}
900253e8:	f7f9 faa9 	bl	9001e93e <EwMoveRectPos>
900253ec:	f88d 602b 	strb.w	r6, [sp, #43]	; 0x2b
900253f0:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
900253f4:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
900253f8:	f88d 6033 	strb.w	r6, [sp, #51]	; 0x33
900253fc:	f88d b02c 	strb.w	fp, [sp, #44]	; 0x2c
90025400:	f88d 802d 	strb.w	r8, [sp, #45]	; 0x2d
90025404:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
90025408:	f88d b034 	strb.w	fp, [sp, #52]	; 0x34
9002540c:	f88d 8035 	strb.w	r8, [sp, #53]	; 0x35
90025410:	f88d 7036 	strb.w	r7, [sp, #54]	; 0x36
90025414:	f88d b030 	strb.w	fp, [sp, #48]	; 0x30
90025418:	f88d 8031 	strb.w	r8, [sp, #49]	; 0x31
9002541c:	f88d 7032 	strb.w	r7, [sp, #50]	; 0x32
90025420:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90025422:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
90025426:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	; 0x28
9002542a:	e9cd 0908 	strd	r0, r9, [sp, #32]
9002542e:	e9cd 2106 	strd	r2, r1, [sp, #24]
90025432:	9305      	str	r3, [sp, #20]
90025434:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90025438:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9002543c:	ab1c      	add	r3, sp, #112	; 0x70
9002543e:	4650      	mov	r0, sl
90025440:	9600      	str	r6, [sp, #0]
90025442:	cb0e      	ldmia	r3, {r1, r2, r3}
90025444:	f7ff fdec 	bl	90025020 <GraphicsCanvas_FillRectangle>
}
90025448:	b013      	add	sp, #76	; 0x4c
9002544a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002544e:	b002      	add	sp, #8
90025450:	4770      	bx	lr
90025452:	bf00      	nop

90025454 <ViewsText_OnSetBounds>:
{
90025454:	b084      	sub	sp, #16
90025456:	b570      	push	{r4, r5, r6, lr}
90025458:	b086      	sub	sp, #24
9002545a:	4605      	mov	r5, r0
  if ( !EwCompRect( value, _this->Super1.Bounds ))
9002545c:	3024      	adds	r0, #36	; 0x24
{
9002545e:	ac0b      	add	r4, sp, #44	; 0x2c
90025460:	e884 000e 	stmia.w	r4, {r1, r2, r3}
  if ( !EwCompRect( value, _this->Super1.Bounds ))
90025464:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90025466:	e88d 000f 	stmia.w	sp, {r0, r1, r2, r3}
9002546a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
9002546e:	f7f9 f924 	bl	9001e6ba <EwCompRect>
90025472:	b920      	cbnz	r0, 9002547e <ViewsText_OnSetBounds+0x2a>
}
90025474:	b006      	add	sp, #24
90025476:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9002547a:	b004      	add	sp, #16
9002547c:	4770      	bx	lr
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
9002547e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  EwPostSignal( EwNewSlot( _this, ViewsText_preOnUpdateSlot ), ((XObject)_this ));
90025480:	ae04      	add	r6, sp, #16
  CoreRectView_OnSetBounds((CoreRectView)_this, value );
90025482:	4628      	mov	r0, r5
90025484:	9300      	str	r3, [sp, #0]
90025486:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
9002548a:	f7fd f8a9 	bl	900225e0 <CoreRectView_OnSetBounds>
  EwPostSignal( EwNewSlot( _this, ViewsText_preOnUpdateSlot ), ((XObject)_this ));
9002548e:	4630      	mov	r0, r6
90025490:	4629      	mov	r1, r5
90025492:	4a06      	ldr	r2, [pc, #24]	; (900254ac <ViewsText_OnSetBounds+0x58>)
90025494:	f7fa fa74 	bl	9001f980 <EwNewSlot>
90025498:	462a      	mov	r2, r5
9002549a:	e896 0003 	ldmia.w	r6, {r0, r1}
}
9002549e:	b006      	add	sp, #24
900254a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900254a4:	b004      	add	sp, #16
  EwPostSignal( EwNewSlot( _this, ViewsText_preOnUpdateSlot ), ((XObject)_this ));
900254a6:	f7fa ba99 	b.w	9001f9dc <EwPostSignal>
900254aa:	bf00      	nop
900254ac:	90025325 	.word	0x90025325

900254b0 <ViewsText_preReparseSlot>:

/* 'C' function for method : 'Views::Text.preReparseSlot()' */
void ViewsText_preReparseSlot( ViewsText _this, XObject sender )
{
900254b0:	b530      	push	{r4, r5, lr}
900254b2:	b083      	sub	sp, #12
900254b4:	4604      	mov	r4, r0
  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  EwPostSignal( EwNewSlot( _this, ViewsText_reparseSlot ), ((XObject)_this ));
900254b6:	4a07      	ldr	r2, [pc, #28]	; (900254d4 <ViewsText_preReparseSlot+0x24>)
900254b8:	466d      	mov	r5, sp
900254ba:	4621      	mov	r1, r4
900254bc:	4628      	mov	r0, r5
900254be:	f7fa fa5f 	bl	9001f980 <EwNewSlot>
900254c2:	4622      	mov	r2, r4
900254c4:	e895 0003 	ldmia.w	r5, {r0, r1}
}
900254c8:	b003      	add	sp, #12
900254ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  EwPostSignal( EwNewSlot( _this, ViewsText_reparseSlot ), ((XObject)_this ));
900254ce:	f7fa ba85 	b.w	9001f9dc <EwPostSignal>
900254d2:	bf00      	nop
900254d4:	900254d9 	.word	0x900254d9

900254d8 <ViewsText_reparseSlot>:
  ResourcesFont font;

  /* Dummy expressions to avoid the 'C' warning 'unused argument'. */
  EW_UNUSED_ARG( sender );

  if ( _this->reparsed )
900254d8:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
900254dc:	2b00      	cmp	r3, #0
900254de:	d141      	bne.n	90025564 <ViewsText_reparseSlot+0x8c>
{
900254e0:	b530      	push	{r4, r5, lr}
    return;

  font = _this->Font;
900254e2:	6b45      	ldr	r5, [r0, #52]	; 0x34
{
900254e4:	b085      	sub	sp, #20
900254e6:	4604      	mov	r4, r0

  if ((( font != 0 ) && !!!font->Ascent ) && !!!font->Descent )
900254e8:	b11d      	cbz	r5, 900254f2 <ViewsText_reparseSlot+0x1a>
900254ea:	6a2b      	ldr	r3, [r5, #32]
900254ec:	bb03      	cbnz	r3, 90025530 <ViewsText_reparseSlot+0x58>
900254ee:	69eb      	ldr	r3, [r5, #28]
900254f0:	b9f3      	cbnz	r3, 90025530 <ViewsText_reparseSlot+0x58>
    font = 0;

  _this->reparsed = 1;
900254f2:	2301      	movs	r3, #1

  if (( EwCompString( _this->String, 0 ) != 0 ) && ( font != 0 ))
900254f4:	2100      	movs	r1, #0
900254f6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  _this->reparsed = 1;
900254f8:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  if (( EwCompString( _this->String, 0 ) != 0 ) && ( font != 0 ))
900254fc:	f7fb fb48 	bl	90020b90 <EwCompString>
    XInt32 length = EwGetStringLength( _this->String );
    _this->flowString = EwShareString( ResourcesFont_ParseFlowString( font, _this->String, 
    0, -1, length, 0 ));
  }
  else
    _this->flowString = 0;
90025500:	2300      	movs	r3, #0
90025502:	63a3      	str	r3, [r4, #56]	; 0x38

  _this->textSize = _Const0001;
90025504:	2300      	movs	r3, #0

  if (( _this->Super2.Owner != 0 ) && (( _this->Super2.viewState & CoreViewStateVisible ) 
90025506:	69a0      	ldr	r0, [r4, #24]
  _this->textSize = _Const0001;
90025508:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if (( _this->Super2.Owner != 0 ) && (( _this->Super2.viewState & CoreViewStateVisible ) 
9002550c:	b110      	cbz	r0, 90025514 <ViewsText_reparseSlot+0x3c>
9002550e:	6a23      	ldr	r3, [r4, #32]
90025510:	07db      	lsls	r3, r3, #31
90025512:	d428      	bmi.n	90025566 <ViewsText_reparseSlot+0x8e>
      == CoreViewStateVisible ))
    CoreGroup__InvalidateArea( _this->Super2.Owner, _this->Super1.Bounds );

  EwPostSignal( EwNewSlot( _this, ViewsText_preOnUpdateSlot ), ((XObject)_this ));
90025514:	ad02      	add	r5, sp, #8
90025516:	4621      	mov	r1, r4
90025518:	4a17      	ldr	r2, [pc, #92]	; (90025578 <ViewsText_reparseSlot+0xa0>)
9002551a:	4628      	mov	r0, r5
9002551c:	f7fa fa30 	bl	9001f980 <EwNewSlot>
90025520:	4622      	mov	r2, r4
90025522:	e895 0003 	ldmia.w	r5, {r0, r1}
}
90025526:	b005      	add	sp, #20
90025528:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  EwPostSignal( EwNewSlot( _this, ViewsText_preOnUpdateSlot ), ((XObject)_this ));
9002552c:	f7fa ba56 	b.w	9001f9dc <EwPostSignal>
  _this->reparsed = 1;
90025530:	2301      	movs	r3, #1
  if (( EwCompString( _this->String, 0 ) != 0 ) && ( font != 0 ))
90025532:	2100      	movs	r1, #0
90025534:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  _this->reparsed = 1;
90025536:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  if (( EwCompString( _this->String, 0 ) != 0 ) && ( font != 0 ))
9002553a:	f7fb fb29 	bl	90020b90 <EwCompString>
9002553e:	2800      	cmp	r0, #0
90025540:	d0de      	beq.n	90025500 <ViewsText_reparseSlot+0x28>
    XInt32 length = EwGetStringLength( _this->String );
90025542:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90025544:	f7fb fcea 	bl	90020f1c <EwGetStringLength>
    _this->flowString = EwShareString( ResourcesFont_ParseFlowString( font, _this->String, 
90025548:	2200      	movs	r2, #0
    XInt32 length = EwGetStringLength( _this->String );
9002554a:	4603      	mov	r3, r0
    _this->flowString = EwShareString( ResourcesFont_ParseFlowString( font, _this->String, 
9002554c:	4628      	mov	r0, r5
9002554e:	9201      	str	r2, [sp, #4]
90025550:	9300      	str	r3, [sp, #0]
90025552:	f04f 33ff 	mov.w	r3, #4294967295
90025556:	6be1      	ldr	r1, [r4, #60]	; 0x3c
90025558:	f7ff feaa 	bl	900252b0 <ResourcesFont_ParseFlowString>
9002555c:	f7fb fc42 	bl	90020de4 <EwShareString>
90025560:	63a0      	str	r0, [r4, #56]	; 0x38
  {
90025562:	e7cf      	b.n	90025504 <ViewsText_reparseSlot+0x2c>
90025564:	4770      	bx	lr
    CoreGroup__InvalidateArea( _this->Super2.Owner, _this->Super1.Bounds );
90025566:	6b22      	ldr	r2, [r4, #48]	; 0x30
90025568:	f104 0324 	add.w	r3, r4, #36	; 0x24
9002556c:	9200      	str	r2, [sp, #0]
9002556e:	cb0e      	ldmia	r3, {r1, r2, r3}
90025570:	f7fe fa3a 	bl	900239e8 <CoreGroup__InvalidateArea>
90025574:	e7ce      	b.n	90025514 <ViewsText_reparseSlot+0x3c>
90025576:	bf00      	nop
90025578:	90025325 	.word	0x90025325

9002557c <ViewsRectangle_OnSetColor>:
{
9002557c:	b510      	push	{r4, lr}
9002557e:	4604      	mov	r4, r0
90025580:	b084      	sub	sp, #16
  if ( !EwCompColor( value, _this->Color ))
90025582:	4608      	mov	r0, r1
{
90025584:	9103      	str	r1, [sp, #12]
  if ( !EwCompColor( value, _this->Color ))
90025586:	6b61      	ldr	r1, [r4, #52]	; 0x34
90025588:	f7f7 fae9 	bl	9001cb5e <EwCompColor>
9002558c:	b130      	cbz	r0, 9002559c <ViewsRectangle_OnSetColor+0x20>
  _this->Color = value;
9002558e:	9b03      	ldr	r3, [sp, #12]
  if (( _this->Super2.Owner != 0 ) && (( _this->Super2.viewState & CoreViewStateVisible ) 
90025590:	69a0      	ldr	r0, [r4, #24]
  _this->Color = value;
90025592:	6363      	str	r3, [r4, #52]	; 0x34
  if (( _this->Super2.Owner != 0 ) && (( _this->Super2.viewState & CoreViewStateVisible ) 
90025594:	b110      	cbz	r0, 9002559c <ViewsRectangle_OnSetColor+0x20>
90025596:	6a23      	ldr	r3, [r4, #32]
90025598:	07db      	lsls	r3, r3, #31
9002559a:	d401      	bmi.n	900255a0 <ViewsRectangle_OnSetColor+0x24>
}
9002559c:	b004      	add	sp, #16
9002559e:	bd10      	pop	{r4, pc}
    CoreGroup__InvalidateArea( _this->Super2.Owner, _this->Super1.Bounds );
900255a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
900255a2:	3424      	adds	r4, #36	; 0x24
900255a4:	9300      	str	r3, [sp, #0]
900255a6:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
900255aa:	f7fe fa1d 	bl	900239e8 <CoreGroup__InvalidateArea>
}
900255ae:	b004      	add	sp, #16
900255b0:	bd10      	pop	{r4, pc}
900255b2:	bf00      	nop

900255b4 <ViewsText_OnSetString>:

/* 'C' function for method : 'Views::Text.OnSetString()' */
void ViewsText_OnSetString( ViewsText _this, XString value )
{
900255b4:	b530      	push	{r4, r5, lr}
900255b6:	460d      	mov	r5, r1
900255b8:	b083      	sub	sp, #12
900255ba:	4604      	mov	r4, r0
  if ( !EwCompString( value, _this->String ))
900255bc:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
900255be:	4628      	mov	r0, r5
900255c0:	f7fb fae6 	bl	90020b90 <EwCompString>
900255c4:	b908      	cbnz	r0, 900255ca <ViewsText_OnSetString+0x16>

  _this->String = EwShareString( value );
  _this->flowString = 0;
  _this->reparsed = 0;
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
}
900255c6:	b003      	add	sp, #12
900255c8:	bd30      	pop	{r4, r5, pc}
  _this->String = EwShareString( value );
900255ca:	4628      	mov	r0, r5
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
900255cc:	466d      	mov	r5, sp
  _this->String = EwShareString( value );
900255ce:	f7fb fc09 	bl	90020de4 <EwShareString>
  _this->flowString = 0;
900255d2:	2300      	movs	r3, #0
  _this->String = EwShareString( value );
900255d4:	4602      	mov	r2, r0
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
900255d6:	4621      	mov	r1, r4
900255d8:	4628      	mov	r0, r5
  _this->flowString = 0;
900255da:	63a3      	str	r3, [r4, #56]	; 0x38
  _this->String = EwShareString( value );
900255dc:	63e2      	str	r2, [r4, #60]	; 0x3c
  _this->reparsed = 0;
900255de:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
900255e2:	4a05      	ldr	r2, [pc, #20]	; (900255f8 <ViewsText_OnSetString+0x44>)
900255e4:	f7fa f9cc 	bl	9001f980 <EwNewSlot>
900255e8:	4622      	mov	r2, r4
900255ea:	e895 0003 	ldmia.w	r5, {r0, r1}
}
900255ee:	b003      	add	sp, #12
900255f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
900255f4:	f7fa b9f2 	b.w	9001f9dc <EwPostSignal>
900255f8:	900254b1 	.word	0x900254b1

900255fc <ViewsText_OnSetFont>:

/* 'C' function for method : 'Views::Text.OnSetFont()' */
void ViewsText_OnSetFont( ViewsText _this, ResourcesFont value )
{
  if ( value == _this->Font )
900255fc:	6b43      	ldr	r3, [r0, #52]	; 0x34
900255fe:	428b      	cmp	r3, r1
90025600:	d015      	beq.n	9002562e <ViewsText_OnSetFont+0x32>
    return;

  _this->Font = value;
  _this->flowString = 0;
90025602:	2300      	movs	r3, #0
  _this->reparsed = 0;
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
90025604:	4a0a      	ldr	r2, [pc, #40]	; (90025630 <ViewsText_OnSetFont+0x34>)
{
90025606:	b530      	push	{r4, r5, lr}
90025608:	b083      	sub	sp, #12
9002560a:	4604      	mov	r4, r0
  _this->Font = value;
9002560c:	6341      	str	r1, [r0, #52]	; 0x34
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
9002560e:	4601      	mov	r1, r0
90025610:	466d      	mov	r5, sp
  _this->flowString = 0;
90025612:	6383      	str	r3, [r0, #56]	; 0x38
  _this->reparsed = 0;
90025614:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
90025618:	4628      	mov	r0, r5
9002561a:	f7fa f9b1 	bl	9001f980 <EwNewSlot>
9002561e:	4622      	mov	r2, r4
90025620:	e895 0003 	ldmia.w	r5, {r0, r1}
}
90025624:	b003      	add	sp, #12
90025626:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  EwPostSignal( EwNewSlot( _this, ViewsText_preReparseSlot ), ((XObject)_this ));
9002562a:	f7fa b9d7 	b.w	9001f9dc <EwPostSignal>
9002562e:	4770      	bx	lr
90025630:	900254b1 	.word	0x900254b1

90025634 <ViewsText_GetContentArea>:
   the view will show the text. This area is expressed in coordinates relative to 
   the top-left corner of the view's @Owner. The method takes in account all properties 
   which do affect the position and the alignment of the text, e.g. @Alignment, 
   @Orientation, @ScrollOffset, @WrapText, etc. */
XRect ViewsText_GetContentArea( ViewsText _this )
{
90025634:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90025638:	460c      	mov	r4, r1
9002563a:	b099      	sub	sp, #100	; 0x64
9002563c:	4606      	mov	r6, r0
  XInt32 width;
  XInt32 height;
  XRect rd;
  XRect rs;

  if ( !EwCompString( _this->String, 0 ) || ( _this->Font == 0 ))
9002563e:	2100      	movs	r1, #0
90025640:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90025642:	f7fb faa5 	bl	90020b90 <EwCompString>
90025646:	2800      	cmp	r0, #0
90025648:	f000 80a5 	beq.w	90025796 <ViewsText_GetContentArea+0x162>
9002564c:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002564e:	2b00      	cmp	r3, #0
90025650:	f000 80a1 	beq.w	90025796 <ViewsText_GetContentArea+0x162>
    return _Const0002;

  if ( !_this->reparsed )
90025654:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
90025658:	2b00      	cmp	r3, #0
9002565a:	f000 80a5 	beq.w	900257a8 <ViewsText_GetContentArea+0x174>
    EwSignal( EwNewSlot( _this, ViewsText_reparseSlot ), ((XObject)_this ));

  if ( !EwCompString( _this->flowString, 0 ))
9002565e:	2100      	movs	r1, #0
90025660:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90025662:	f7fb fa95 	bl	90020b90 <EwCompString>
90025666:	b938      	cbnz	r0, 90025678 <ViewsText_GetContentArea+0x44>
    return _Const0002;
90025668:	e9c6 0000 	strd	r0, r0, [r6]
9002566c:	e9c6 0002 	strd	r0, r0, [r6, #8]
    rs = EwSetRectY( rs, ( rd.Point1.Y + ( EwGetRectH( rd ) / 2 )) - ( EwGetRectH( 
    rs ) / 2 ));

  rs = EwMoveRectPos( rs, bounds.Point1 );
  return rs;
}
90025670:	4630      	mov	r0, r6
90025672:	b019      	add	sp, #100	; 0x64
90025674:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  leading = _this->Font->Leading;
90025678:	6b63      	ldr	r3, [r4, #52]	; 0x34
  if ( !EwCompPoint( _this->textSize, _Const0001 ))
9002567a:	4a68      	ldr	r2, [pc, #416]	; (9002581c <ViewsText_GetContentArea+0x1e8>)
  leading = _this->Font->Leading;
9002567c:	f8d3 9018 	ldr.w	r9, [r3, #24]
  rh = ( _this->Font->Ascent + _this->Font->Descent ) + _this->Font->Leading;
90025680:	e9d3 0507 	ldrd	r0, r5, [r3, #28]
  if ( !EwCompPoint( _this->textSize, _Const0001 ))
90025684:	ca0c      	ldmia	r2, {r2, r3}
  rh = ( _this->Font->Ascent + _this->Font->Descent ) + _this->Font->Leading;
90025686:	4405      	add	r5, r0
  if ( !EwCompPoint( _this->textSize, _Const0001 ))
90025688:	e9d4 0110 	ldrd	r0, r1, [r4, #64]	; 0x40
  rh = ( _this->Font->Ascent + _this->Font->Descent ) + _this->Font->Leading;
9002568c:	444d      	add	r5, r9
  if ( !EwCompPoint( _this->textSize, _Const0001 ))
9002568e:	f7f8 ff82 	bl	9001e596 <EwCompPoint>
90025692:	2800      	cmp	r0, #0
90025694:	f000 80bc 	beq.w	90025810 <ViewsText_GetContentArea+0x1dc>
  _this->textSize.Y = (( EwGetStringChar( _this->flowString, 0 ) * rh ) - leading );
90025698:	2100      	movs	r1, #0
9002569a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9002569c:	f7fb fc11 	bl	90020ec2 <EwGetStringChar>
900256a0:	fb05 f000 	mul.w	r0, r5, r0
  bounds = _this->Super1.Bounds;
900256a4:	f104 0324 	add.w	r3, r4, #36	; 0x24
900256a8:	f10d 0830 	add.w	r8, sp, #48	; 0x30
  _this->textSize.Y = (( EwGetStringChar( _this->flowString, 0 ) * rh ) - leading );
900256ac:	eba0 0909 	sub.w	r9, r0, r9
  rd = EwNewRect( 0, 0, width, height );
900256b0:	af10      	add	r7, sp, #64	; 0x40
  rs = EwNewRect2Point( rd.Point1, EwMovePointPos( rd.Point1, _this->textSize ));
900256b2:	ad14      	add	r5, sp, #80	; 0x50
  bounds = _this->Super1.Bounds;
900256b4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  _this->textSize.Y = (( EwGetStringChar( _this->flowString, 0 ) * rh ) - leading );
900256b6:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
  bounds = _this->Super1.Bounds;
900256ba:	e888 000f 	stmia.w	r8, {r0, r1, r2, r3}
  width = EwGetRectW( bounds );
900256be:	f7f9 f95d 	bl	9001e97c <EwGetRectW>
900256c2:	4681      	mov	r9, r0
  height = EwGetRectH( bounds );
900256c4:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
900256c8:	f7f9 f950 	bl	9001e96c <EwGetRectH>
  rd = EwNewRect( 0, 0, width, height );
900256cc:	2200      	movs	r2, #0
  height = EwGetRectH( bounds );
900256ce:	4601      	mov	r1, r0
  rd = EwNewRect( 0, 0, width, height );
900256d0:	464b      	mov	r3, r9
900256d2:	4638      	mov	r0, r7
900256d4:	9100      	str	r1, [sp, #0]
900256d6:	4611      	mov	r1, r2
900256d8:	f7f8 ffd0 	bl	9001e67c <EwNewRect>
  rs = EwNewRect2Point( rd.Point1, EwMovePointPos( rd.Point1, _this->textSize ));
900256dc:	a80a      	add	r0, sp, #40	; 0x28
900256de:	e9d4 3210 	ldrd	r3, r2, [r4, #64]	; 0x40
900256e2:	9200      	str	r2, [sp, #0]
900256e4:	e897 0006 	ldmia.w	r7, {r1, r2}
900256e8:	f7f8 ff86 	bl	9001e5f8 <EwMovePointPos>
900256ec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900256ee:	4628      	mov	r0, r5
900256f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900256f2:	9200      	str	r2, [sp, #0]
900256f4:	e897 0006 	ldmia.w	r7, {r1, r2}
900256f8:	f7f8 ffc7 	bl	9001e68a <EwNewRect2Point>
  if ( EwGetRectW( rs ) != EwGetRectW( rd ))
900256fc:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90025700:	f7f9 f93c 	bl	9001e97c <EwGetRectW>
90025704:	4604      	mov	r4, r0
90025706:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9002570a:	f7f9 f937 	bl	9001e97c <EwGetRectW>
9002570e:	4284      	cmp	r4, r0
90025710:	d15d      	bne.n	900257ce <ViewsText_GetContentArea+0x19a>
90025712:	ac04      	add	r4, sp, #16
  if ( EwGetRectH( rs ) != EwGetRectH( rd ))
90025714:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90025718:	f7f9 f928 	bl	9001e96c <EwGetRectH>
9002571c:	4681      	mov	r9, r0
9002571e:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90025722:	f7f9 f923 	bl	9001e96c <EwGetRectH>
90025726:	4581      	cmp	r9, r0
90025728:	d01f      	beq.n	9002576a <ViewsText_GetContentArea+0x136>
    rs = EwSetRectY( rs, ( rd.Point1.Y + ( EwGetRectH( rd ) / 2 )) - ( EwGetRectH( 
9002572a:	f8dd 9044 	ldr.w	r9, [sp, #68]	; 0x44
9002572e:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90025732:	f7f9 f91b 	bl	9001e96c <EwGetRectH>
90025736:	2800      	cmp	r0, #0
90025738:	bfb8      	it	lt
9002573a:	3001      	addlt	r0, #1
9002573c:	eb09 0760 	add.w	r7, r9, r0, asr #1
90025740:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
90025744:	f7f9 f912 	bl	9001e96c <EwGetRectH>
    rs ) / 2 ));
90025748:	2800      	cmp	r0, #0
    rs = EwSetRectY( rs, ( rd.Point1.Y + ( EwGetRectH( rd ) / 2 )) - ( EwGetRectH( 
9002574a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    rs ) / 2 ));
9002574c:	bfb8      	it	lt
9002574e:	3001      	addlt	r0, #1
    rs = EwSetRectY( rs, ( rd.Point1.Y + ( EwGetRectH( rd ) / 2 )) - ( EwGetRectH( 
90025750:	eba7 0760 	sub.w	r7, r7, r0, asr #1
90025754:	4620      	mov	r0, r4
90025756:	e9cd 3700 	strd	r3, r7, [sp]
9002575a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9002575e:	f7f9 f9dc 	bl	9001eb1a <EwSetRectY>
90025762:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90025766:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  rs = EwMoveRectPos( rs, bounds.Point1 );
9002576a:	e898 0003 	ldmia.w	r8, {r0, r1}
9002576e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
90025770:	ab01      	add	r3, sp, #4
90025772:	e883 0003 	stmia.w	r3, {r0, r1}
90025776:	4620      	mov	r0, r4
90025778:	9200      	str	r2, [sp, #0]
9002577a:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
9002577e:	f7f9 f8de 	bl	9001e93e <EwMoveRectPos>
90025782:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
90025786:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  return rs;
9002578a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
}
9002578e:	4630      	mov	r0, r6
90025790:	b019      	add	sp, #100	; 0x64
90025792:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    return _Const0002;
90025796:	2300      	movs	r3, #0
}
90025798:	4630      	mov	r0, r6
    return _Const0002;
9002579a:	e9c6 3300 	strd	r3, r3, [r6]
9002579e:	e9c6 3302 	strd	r3, r3, [r6, #8]
}
900257a2:	b019      	add	sp, #100	; 0x64
900257a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    EwSignal( EwNewSlot( _this, ViewsText_reparseSlot ), ((XObject)_this ));
900257a8:	ad08      	add	r5, sp, #32
900257aa:	4a1d      	ldr	r2, [pc, #116]	; (90025820 <ViewsText_GetContentArea+0x1ec>)
900257ac:	4621      	mov	r1, r4
900257ae:	4628      	mov	r0, r5
900257b0:	f7fa f8e6 	bl	9001f980 <EwNewSlot>
900257b4:	4622      	mov	r2, r4
900257b6:	e895 0003 	ldmia.w	r5, {r0, r1}
900257ba:	f7fa f904 	bl	9001f9c6 <EwSignal>
  if ( !EwCompString( _this->flowString, 0 ))
900257be:	2100      	movs	r1, #0
900257c0:	6ba0      	ldr	r0, [r4, #56]	; 0x38
900257c2:	f7fb f9e5 	bl	90020b90 <EwCompString>
900257c6:	2800      	cmp	r0, #0
900257c8:	f43f af4e 	beq.w	90025668 <ViewsText_GetContentArea+0x34>
900257cc:	e754      	b.n	90025678 <ViewsText_GetContentArea+0x44>
    rs = EwSetRectX( rs, ( rd.Point1.X + ( EwGetRectW( rd ) / 2 )) - ( EwGetRectW( 
900257ce:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
900257d2:	9c10      	ldr	r4, [sp, #64]	; 0x40
900257d4:	f7f9 f8d2 	bl	9001e97c <EwGetRectW>
900257d8:	2800      	cmp	r0, #0
900257da:	bfb8      	it	lt
900257dc:	3001      	addlt	r0, #1
900257de:	eb04 0960 	add.w	r9, r4, r0, asr #1
900257e2:	ac04      	add	r4, sp, #16
900257e4:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
900257e8:	f7f9 f8c8 	bl	9001e97c <EwGetRectW>
    rs ) / 2 ));
900257ec:	2800      	cmp	r0, #0
    rs = EwSetRectX( rs, ( rd.Point1.X + ( EwGetRectW( rd ) / 2 )) - ( EwGetRectW( 
900257ee:	9a17      	ldr	r2, [sp, #92]	; 0x5c
    rs ) / 2 ));
900257f0:	bfb8      	it	lt
900257f2:	3001      	addlt	r0, #1
    rs = EwSetRectX( rs, ( rd.Point1.X + ( EwGetRectW( rd ) / 2 )) - ( EwGetRectW( 
900257f4:	eba9 0360 	sub.w	r3, r9, r0, asr #1
900257f8:	4620      	mov	r0, r4
900257fa:	e9cd 2300 	strd	r2, r3, [sp]
900257fe:	e895 000e 	ldmia.w	r5, {r1, r2, r3}
90025802:	f7f9 f976 	bl	9001eaf2 <EwSetRectX>
90025806:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
9002580a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
9002580e:	e781      	b.n	90025714 <ViewsText_GetContentArea+0xe0>
    _this->textSize.X = ResourcesFont_GetFlowTextAdvance( _this->Font, _this->flowString );
90025810:	e9d4 010d 	ldrd	r0, r1, [r4, #52]	; 0x34
90025814:	f7ff fd46 	bl	900252a4 <ResourcesFont_GetFlowTextAdvance>
90025818:	6420      	str	r0, [r4, #64]	; 0x40
9002581a:	e73d      	b.n	90025698 <ViewsText_GetContentArea+0x64>
9002581c:	90033a70 	.word	0x90033a70
90025820:	900254d9 	.word	0x900254d9

90025824 <ViewsText_Draw>:
{
90025824:	b082      	sub	sp, #8
90025826:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002582a:	ed2d 8b02 	vpush	{d8}
9002582e:	b0af      	sub	sp, #188	; 0xbc
90025830:	468b      	mov	fp, r1
90025832:	4604      	mov	r4, r0
  if ( !EwCompString( _this->flowString, 0 ) || ( _this->Font == 0 ))
90025834:	2100      	movs	r1, #0
{
90025836:	ad3a      	add	r5, sp, #232	; 0xe8
  if ( !EwCompString( _this->flowString, 0 ) || ( _this->Font == 0 ))
90025838:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
9002583a:	e885 000c 	stmia.w	r5, {r2, r3}
  if ( !EwCompString( _this->flowString, 0 ) || ( _this->Font == 0 ))
9002583e:	f7fb f9a7 	bl	90020b90 <EwCompString>
90025842:	2800      	cmp	r0, #0
90025844:	f000 80fd 	beq.w	90025a42 <ViewsText_Draw+0x21e>
90025848:	f8d4 8034 	ldr.w	r8, [r4, #52]	; 0x34
9002584c:	f1b8 0f00 	cmp.w	r8, #0
90025850:	f000 80f7 	beq.w	90025a42 <ViewsText_Draw+0x21e>
  rd = EwMoveRectPos( _this->Super1.Bounds, aOffset );
90025854:	f10d 0af8 	add.w	sl, sp, #248	; 0xf8
90025858:	6b22      	ldr	r2, [r4, #48]	; 0x30
9002585a:	f10d 0904 	add.w	r9, sp, #4
9002585e:	f104 0324 	add.w	r3, r4, #36	; 0x24
  area = EwMoveRectPos( ViewsText_GetContentArea( _this ), aOffset );
90025862:	ae2a      	add	r6, sp, #168	; 0xa8
90025864:	ad26      	add	r5, sp, #152	; 0x98
  rd = EwMoveRectPos( _this->Super1.Bounds, aOffset );
90025866:	e89a 0003 	ldmia.w	sl, {r0, r1}
9002586a:	e889 0003 	stmia.w	r9, {r0, r1}
9002586e:	a822      	add	r0, sp, #136	; 0x88
90025870:	9200      	str	r2, [sp, #0]
90025872:	cb0e      	ldmia	r3, {r1, r2, r3}
90025874:	f7f9 f863 	bl	9001e93e <EwMoveRectPos>
  noOfRows = EwGetStringChar( _this->flowString, 0 );
90025878:	2100      	movs	r1, #0
9002587a:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9002587c:	f7fb fb21 	bl	90020ec2 <EwGetStringChar>
  area = EwMoveRectPos( ViewsText_GetContentArea( _this ), aOffset );
90025880:	4621      	mov	r1, r4
  noOfRows = EwGetStringChar( _this->flowString, 0 );
90025882:	4607      	mov	r7, r0
  area = EwMoveRectPos( ViewsText_GetContentArea( _this ), aOffset );
90025884:	4630      	mov	r0, r6
90025886:	f7ff fed5 	bl	90025634 <ViewsText_GetContentArea>
9002588a:	e89a 0003 	ldmia.w	sl, {r0, r1}
9002588e:	e889 0003 	stmia.w	r9, {r0, r1}
90025892:	e896 000e 	ldmia.w	r6, {r1, r2, r3}
90025896:	9e2d      	ldr	r6, [sp, #180]	; 0xb4
90025898:	4628      	mov	r0, r5
9002589a:	9600      	str	r6, [sp, #0]
9002589c:	f7f9 f84f 	bl	9001e93e <EwMoveRectPos>
900258a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  ofs = EwNewPoint( rd.Point1.X - area.Point1.X, ( rd.Point1.Y - area.Point1.Y ) 
900258a2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900258a4:	a81c      	add	r0, sp, #112	; 0x70
900258a6:	f8d8 6020 	ldr.w	r6, [r8, #32]
900258aa:	1ad2      	subs	r2, r2, r3
900258ac:	9922      	ldr	r1, [sp, #136]	; 0x88
  area = EwMoveRectPos( ViewsText_GetContentArea( _this ), aOffset );
900258ae:	9312      	str	r3, [sp, #72]	; 0x48
  ofs = EwNewPoint( rd.Point1.X - area.Point1.X, ( rd.Point1.Y - area.Point1.Y ) 
900258b0:	9b26      	ldr	r3, [sp, #152]	; 0x98
900258b2:	1b92      	subs	r2, r2, r6
900258b4:	1ac9      	subs	r1, r1, r3
900258b6:	f7f8 fe6b 	bl	9001e590 <EwNewPoint>
  if ( noOfRows < 1 )
900258ba:	2f00      	cmp	r7, #0
900258bc:	f000 80c1 	beq.w	90025a42 <ViewsText_Draw+0x21e>
  ctl = ctr = cbl = cbr = _Const0000;
900258c0:	4981      	ldr	r1, [pc, #516]	; (90025ac8 <ViewsText_Draw+0x2a4>)
900258c2:	22ff      	movs	r2, #255	; 0xff
  opacity = ((( aOpacity + 1 ) * 255 ) >> 8 ) + 1;
900258c4:	9b40      	ldr	r3, [sp, #256]	; 0x100
900258c6:	ee08 ba10 	vmov	s16, fp
  ctl = ctr = cbl = cbr = _Const0000;
900258ca:	6809      	ldr	r1, [r1, #0]
  opacity = ((( aOpacity + 1 ) * 255 ) >> 8 ) + 1;
900258cc:	3301      	adds	r3, #1
  ctl = ctr = cbl = cbr = _Const0000;
900258ce:	911a      	str	r1, [sp, #104]	; 0x68
900258d0:	f88d 206b 	strb.w	r2, [sp, #107]	; 0x6b
  opacity = ((( aOpacity + 1 ) * 255 ) >> 8 ) + 1;
900258d4:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
  ctl = ctr = cbl = cbr = _Const0000;
900258d8:	991a      	ldr	r1, [sp, #104]	; 0x68
  opacity = ((( aOpacity + 1 ) * 255 ) >> 8 ) + 1;
900258da:	121b      	asrs	r3, r3, #8
  ctl = ctr = cbl = cbr = _Const0000;
900258dc:	911b      	str	r1, [sp, #108]	; 0x6c
900258de:	f88d 206f 	strb.w	r2, [sp, #111]	; 0x6f
  opacity = ((( aOpacity + 1 ) * 255 ) >> 8 ) + 1;
900258e2:	3301      	adds	r3, #1
  ctl = ctr = cbl = cbr = _Const0000;
900258e4:	991b      	ldr	r1, [sp, #108]	; 0x6c
  if ( opacity < 256 )
900258e6:	4293      	cmp	r3, r2
  ctl = ctr = cbl = cbr = _Const0000;
900258e8:	9119      	str	r1, [sp, #100]	; 0x64
900258ea:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
900258ee:	9919      	ldr	r1, [sp, #100]	; 0x64
900258f0:	9118      	str	r1, [sp, #96]	; 0x60
  if ( opacity < 256 )
900258f2:	f340 80ad 	ble.w	90025a50 <ViewsText_Draw+0x22c>
  ctl = ctr = cbl = cbr = _Const0000;
900258f6:	4693      	mov	fp, r2
  if ( noOfRows == 1 )
900258f8:	2f01      	cmp	r7, #1
900258fa:	f000 80b0 	beq.w	90025a5e <ViewsText_Draw+0x23a>
  rowHeight = ( font->Ascent + font->Descent ) + leading;
900258fe:	f8d8 1018 	ldr.w	r1, [r8, #24]
  clipY2 = aClip.Point2.Y - area.Point1.Y;
90025902:	983d      	ldr	r0, [sp, #244]	; 0xf4
  rowHeight = ( font->Ascent + font->Descent ) + leading;
90025904:	e9d8 2307 	ldrd	r2, r3, [r8, #28]
  clipY2 = aClip.Point2.Y - area.Point1.Y;
90025908:	9014      	str	r0, [sp, #80]	; 0x50
  rowHeight = ( font->Ascent + font->Descent ) + leading;
9002590a:	4413      	add	r3, r2
  clipY1 = aClip.Point1.Y - area.Point1.Y;
9002590c:	9a3b      	ldr	r2, [sp, #236]	; 0xec
  rowHeight = ( font->Ascent + font->Descent ) + leading;
9002590e:	185f      	adds	r7, r3, r1
  clipY1 = aClip.Point1.Y - area.Point1.Y;
90025910:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025912:	eba2 0903 	sub.w	r9, r2, r3
  rowHeight = ( font->Ascent + font->Descent ) + leading;
90025916:	9713      	str	r7, [sp, #76]	; 0x4c
  areaW = EwGetRectW( area );
90025918:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
9002591c:	f7f9 f82e 	bl	9001e97c <EwGetRectW>
90025920:	4603      	mov	r3, r0
  c = EwGetStringChar( _this->flowString, 1 );
90025922:	2101      	movs	r1, #1
90025924:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  areaW = EwGetRectW( area );
90025926:	9315      	str	r3, [sp, #84]	; 0x54
  c = EwGetStringChar( _this->flowString, 1 );
90025928:	f7fb facb 	bl	90020ec2 <EwGetStringChar>
  while ((( y + rowHeight ) < clipY1 ) && ( c > 0 ))
9002592c:	454f      	cmp	r7, r9
  c = EwGetStringChar( _this->flowString, 1 );
9002592e:	4606      	mov	r6, r0
  while ((( y + rowHeight ) < clipY1 ) && ( c > 0 ))
90025930:	f280 80c6 	bge.w	90025ac0 <ViewsText_Draw+0x29c>
90025934:	2800      	cmp	r0, #0
90025936:	f000 8084 	beq.w	90025a42 <ViewsText_Draw+0x21e>
9002593a:	46ba      	mov	sl, r7
  i = 1;
9002593c:	2501      	movs	r5, #1
9002593e:	463e      	mov	r6, r7
90025940:	e001      	b.n	90025946 <ViewsText_Draw+0x122>
  while ((( y + rowHeight ) < clipY1 ) && ( c > 0 ))
90025942:	2800      	cmp	r0, #0
90025944:	d07d      	beq.n	90025a42 <ViewsText_Draw+0x21e>
    i = i + c;
90025946:	4405      	add	r5, r0
    c = EwGetStringChar( _this->flowString, i );
90025948:	4657      	mov	r7, sl
  while ((( y + rowHeight ) < clipY1 ) && ( c > 0 ))
9002594a:	44b2      	add	sl, r6
    c = EwGetStringChar( _this->flowString, i );
9002594c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9002594e:	4629      	mov	r1, r5
90025950:	f7fb fab7 	bl	90020ec2 <EwGetStringChar>
  while ((( y + rowHeight ) < clipY1 ) && ( c > 0 ))
90025954:	45ca      	cmp	sl, r9
90025956:	dbf4      	blt.n	90025942 <ViewsText_Draw+0x11e>
90025958:	4606      	mov	r6, r0
  clipY2 = aClip.Point2.Y - area.Point1.Y;
9002595a:	9b14      	ldr	r3, [sp, #80]	; 0x50
  while (( y < clipY2 ) && ( c > 0 ))
9002595c:	2e00      	cmp	r6, #0
  clipY2 = aClip.Point2.Y - area.Point1.Y;
9002595e:	9a12      	ldr	r2, [sp, #72]	; 0x48
90025960:	eba3 0302 	sub.w	r3, r3, r2
90025964:	9314      	str	r3, [sp, #80]	; 0x50
  while (( y < clipY2 ) && ( c > 0 ))
90025966:	dd6c      	ble.n	90025a42 <ViewsText_Draw+0x21e>
90025968:	42bb      	cmp	r3, r7
9002596a:	dd6a      	ble.n	90025a42 <ViewsText_Draw+0x21e>
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
9002596c:	9b15      	ldr	r3, [sp, #84]	; 0x54
9002596e:	aa09      	add	r2, sp, #36	; 0x24
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, i + 1, c - 
90025970:	9412      	str	r4, [sp, #72]	; 0x48
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
90025972:	2b00      	cmp	r3, #0
90025974:	9217      	str	r2, [sp, #92]	; 0x5c
90025976:	aa05      	add	r2, sp, #20
90025978:	bfb8      	it	lt
9002597a:	3301      	addlt	r3, #1
9002597c:	9216      	str	r2, [sp, #88]	; 0x58
9002597e:	105b      	asrs	r3, r3, #1
90025980:	425b      	negs	r3, r3
90025982:	9315      	str	r3, [sp, #84]	; 0x54
90025984:	e001      	b.n	9002598a <ViewsText_Draw+0x166>
  while (( y < clipY2 ) && ( c > 0 ))
90025986:	2800      	cmp	r0, #0
90025988:	dd5b      	ble.n	90025a42 <ViewsText_Draw+0x21e>
    XPoint ofs2 = EwMovePointNeg( ofs, EwNewPoint( 0, y ));
9002598a:	463a      	mov	r2, r7
9002598c:	2100      	movs	r1, #0
9002598e:	a820      	add	r0, sp, #128	; 0x80
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
90025990:	f105 0901 	add.w	r9, r5, #1
    XPoint ofs2 = EwMovePointNeg( ofs, EwNewPoint( 0, y ));
90025994:	f7f8 fdfc 	bl	9001e590 <EwNewPoint>
90025998:	a81e      	add	r0, sp, #120	; 0x78
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
9002599a:	f106 3aff 	add.w	sl, r6, #4294967295
    i = i + c;
9002599e:	4435      	add	r5, r6
    XPoint ofs2 = EwMovePointNeg( ofs, EwNewPoint( 0, y ));
900259a0:	e9dd 3220 	ldrd	r3, r2, [sp, #128]	; 0x80
900259a4:	9200      	str	r2, [sp, #0]
    y = y + rowHeight;
900259a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900259a8:	4417      	add	r7, r2
    XPoint ofs2 = EwMovePointNeg( ofs, EwNewPoint( 0, y ));
900259aa:	aa1c      	add	r2, sp, #112	; 0x70
900259ac:	ca06      	ldmia	r2, {r1, r2}
900259ae:	f7f8 fe11 	bl	9001e5d4 <EwMovePointNeg>
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
900259b2:	9912      	ldr	r1, [sp, #72]	; 0x48
900259b4:	464a      	mov	r2, r9
900259b6:	4653      	mov	r3, sl
900259b8:	6b89      	ldr	r1, [r1, #56]	; 0x38
900259ba:	4640      	mov	r0, r8
900259bc:	9e15      	ldr	r6, [sp, #84]	; 0x54
900259be:	9c1e      	ldr	r4, [sp, #120]	; 0x78
900259c0:	f7ff fc96 	bl	900252f0 <ResourcesFont_GetTextAdvance>
    _this->flowString, i + 1, c - 1 ) / 2 ));
900259c4:	2800      	cmp	r0, #0
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, i + 1, c - 
900259c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
900259c8:	4434      	add	r4, r6
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, i + 1, c - 
900259ca:	f88d b06b 	strb.w	fp, [sp, #107]	; 0x6b
    _this->flowString, i + 1, c - 1 ) / 2 ));
900259ce:	bfb8      	it	lt
900259d0:	3001      	addlt	r0, #1
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, i + 1, c - 
900259d2:	f8d3 c038 	ldr.w	ip, [r3, #56]	; 0x38
900259d6:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
    ofs2.X = (( ofs2.X - ( areaW / 2 )) + ( ResourcesFont_GetTextAdvance( font, 
900259da:	eb04 0060 	add.w	r0, r4, r0, asr #1
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, i + 1, c - 
900259de:	f88d b067 	strb.w	fp, [sp, #103]	; 0x67
900259e2:	9a19      	ldr	r2, [sp, #100]	; 0x64
900259e4:	901e      	str	r0, [sp, #120]	; 0x78
900259e6:	2001      	movs	r0, #1
900259e8:	e9dd 131a 	ldrd	r1, r3, [sp, #104]	; 0x68
900259ec:	9011      	str	r0, [sp, #68]	; 0x44
900259ee:	2000      	movs	r0, #0
900259f0:	9310      	str	r3, [sp, #64]	; 0x40
900259f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900259f4:	930d      	str	r3, [sp, #52]	; 0x34
900259f6:	ab1e      	add	r3, sp, #120	; 0x78
900259f8:	e9cd 000b 	strd	r0, r0, [sp, #44]	; 0x2c
900259fc:	e9cd 210e 	strd	r2, r1, [sp, #56]	; 0x38
90025a00:	e893 0003 	ldmia.w	r3, {r0, r1}
90025a04:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90025a06:	e883 0003 	stmia.w	r3, {r0, r1}
90025a0a:	ab22      	add	r3, sp, #136	; 0x88
90025a0c:	9e16      	ldr	r6, [sp, #88]	; 0x58
90025a0e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90025a10:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
90025a14:	ab3a      	add	r3, sp, #232	; 0xe8
90025a16:	f8cd a010 	str.w	sl, [sp, #16]
90025a1a:	ee18 0a10 	vmov	r0, s16
90025a1e:	e9cd c902 	strd	ip, r9, [sp, #8]
90025a22:	9e3d      	ldr	r6, [sp, #244]	; 0xf4
90025a24:	f8cd 8004 	str.w	r8, [sp, #4]
90025a28:	cb0e      	ldmia	r3, {r1, r2, r3}
90025a2a:	9600      	str	r6, [sp, #0]
90025a2c:	f7ff fa90 	bl	90024f50 <GraphicsCanvas_DrawText>
    c = EwGetStringChar( _this->flowString, i );
90025a30:	9b12      	ldr	r3, [sp, #72]	; 0x48
90025a32:	4629      	mov	r1, r5
90025a34:	6b98      	ldr	r0, [r3, #56]	; 0x38
90025a36:	f7fb fa44 	bl	90020ec2 <EwGetStringChar>
  while (( y < clipY2 ) && ( c > 0 ))
90025a3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
    c = EwGetStringChar( _this->flowString, i );
90025a3c:	4606      	mov	r6, r0
  while (( y < clipY2 ) && ( c > 0 ))
90025a3e:	42bb      	cmp	r3, r7
90025a40:	dca1      	bgt.n	90025986 <ViewsText_Draw+0x162>
}
90025a42:	b02f      	add	sp, #188	; 0xbc
90025a44:	ecbd 8b02 	vpop	{d8}
90025a48:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025a4c:	b002      	add	sp, #8
90025a4e:	4770      	bx	lr
    ctl.Alpha = (XUInt8)(( 255 * opacity ) >> 8 );
90025a50:	ebc3 2303 	rsb	r3, r3, r3, lsl #8
90025a54:	f3c3 2b07 	ubfx	fp, r3, #8, #8
90025a58:	f88d b063 	strb.w	fp, [sp, #99]	; 0x63
    cbl.Alpha = (XUInt8)(( 255 * opacity ) >> 8 );
90025a5c:	e74c      	b.n	900258f8 <ViewsText_Draw+0xd4>
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, 2, EwGetStringChar( 
90025a5e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
90025a60:	4639      	mov	r1, r7
90025a62:	ac05      	add	r4, sp, #20
90025a64:	4628      	mov	r0, r5
90025a66:	f7fb fa2c 	bl	90020ec2 <EwGetStringChar>
90025a6a:	f88d b06f 	strb.w	fp, [sp, #111]	; 0x6f
90025a6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
90025a70:	2200      	movs	r2, #0
90025a72:	f88d b06b 	strb.w	fp, [sp, #107]	; 0x6b
    _this->flowString, 1 ) - 1, rd, ofs, 0, ViewsOrientationNormal, ctl, ctr, cbr, 
90025a76:	1e46      	subs	r6, r0, #1
    GraphicsCanvas_DrawText( aCanvas, aClip, font, _this->flowString, 2, EwGetStringChar( 
90025a78:	9110      	str	r1, [sp, #64]	; 0x40
90025a7a:	ab09      	add	r3, sp, #36	; 0x24
90025a7c:	920c      	str	r2, [sp, #48]	; 0x30
90025a7e:	920b      	str	r2, [sp, #44]	; 0x2c
90025a80:	991a      	ldr	r1, [sp, #104]	; 0x68
90025a82:	9a18      	ldr	r2, [sp, #96]	; 0x60
90025a84:	f88d b067 	strb.w	fp, [sp, #103]	; 0x67
90025a88:	910f      	str	r1, [sp, #60]	; 0x3c
90025a8a:	920d      	str	r2, [sp, #52]	; 0x34
90025a8c:	aa1c      	add	r2, sp, #112	; 0x70
90025a8e:	9919      	ldr	r1, [sp, #100]	; 0x64
90025a90:	9711      	str	r7, [sp, #68]	; 0x44
90025a92:	2702      	movs	r7, #2
90025a94:	910e      	str	r1, [sp, #56]	; 0x38
90025a96:	e892 0003 	ldmia.w	r2, {r0, r1}
90025a9a:	e883 0003 	stmia.w	r3, {r0, r1}
90025a9e:	ab22      	add	r3, sp, #136	; 0x88
90025aa0:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
90025aa2:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90025aa6:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
90025aa8:	ee18 0a10 	vmov	r0, s16
90025aac:	9604      	str	r6, [sp, #16]
90025aae:	9300      	str	r3, [sp, #0]
90025ab0:	ab3a      	add	r3, sp, #232	; 0xe8
90025ab2:	9703      	str	r7, [sp, #12]
90025ab4:	e9cd 8501 	strd	r8, r5, [sp, #4]
90025ab8:	cb0e      	ldmia	r3, {r1, r2, r3}
90025aba:	f7ff fa49 	bl	90024f50 <GraphicsCanvas_DrawText>
    return;
90025abe:	e7c0      	b.n	90025a42 <ViewsText_Draw+0x21e>
  i = 1;
90025ac0:	2501      	movs	r5, #1
  y = 0;
90025ac2:	2700      	movs	r7, #0
90025ac4:	e749      	b.n	9002595a <ViewsText_Draw+0x136>
90025ac6:	bf00      	nop
90025ac8:	90033a6c 	.word	0x90033a6c

90025acc <HardButtonIsrCallback>:
     from an interrupt handler or another task/thread/process.
  */

#endif

}
90025acc:	4770      	bx	lr
90025ace:	bf00      	nop

90025ad0 <DeviceDriver_Initialize>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void DeviceDriver_Initialize( void )
{
90025ad0:	b508      	push	{r3, lr}
     You can implement here the necessary code to initialize your particular
     hardware, to open needed devices, to open communication channels, etc.
  */

  /* configure LED */
  EwBspInOutInitLed();
90025ad2:	f002 f873 	bl	90027bbc <EwBspInOutInitLed>

  /* Configure interrupt for hardware button */
  EwBspInOutInitButton( HardButtonIsrCallback );
90025ad6:	4802      	ldr	r0, [pc, #8]	; (90025ae0 <DeviceDriver_Initialize+0x10>)

  EwLockObject( DeviceObject );

#endif

}
90025ad8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  EwBspInOutInitButton( HardButtonIsrCallback );
90025adc:	f002 b83e 	b.w	90027b5c <EwBspInOutInitButton>
90025ae0:	90025acd 	.word	0x90025acd

90025ae4 <DeviceDriver_Deinitialize>:

  DeviceObject = 0;

#endif

}
90025ae4:	4770      	bx	lr
90025ae6:	bf00      	nop

90025ae8 <DeviceDriver_ProcessData>:
     system event was triggered. The return value is used by the main loop, to
     decide whether the GUI application has changed or not.
  */

  return needUpdate;
}
90025ae8:	2000      	movs	r0, #0
90025aea:	4770      	bx	lr

90025aec <EwInit>:
* RETURN VALUE:
*   1 if successful, 0 otherwise.
*
*******************************************************************************/
int EwInit( void )
{
90025aec:	b5f0      	push	{r4, r5, r6, r7, lr}
90025aee:	b08d      	sub	sp, #52	; 0x34
  /* initalize system clocks */
  EwBspClockInit();
90025af0:	f001 fa5c 	bl	90026fac <EwBspClockInit>

  /* set RTC, if current RTC time is before the minimum time */
  if ( EwBspClockGetTime() < RTC_MINIMUM_TIME )
90025af4:	f001 fa8e 	bl	90027014 <EwBspClockGetTime>
90025af8:	4b42      	ldr	r3, [pc, #264]	; (90025c04 <EwInit+0x118>)
90025afa:	4298      	cmp	r0, r3
90025afc:	d97e      	bls.n	90025bfc <EwInit+0x110>
    EwBspClockSetTime( RTC_DEFAULT_TIME );

  /* initialize display */
  EwPrint( "Initialize Display...                        " );
  CHECK_HANDLE( EwBspDisplayInit( EwScreenSize.X, EwScreenSize.Y, &DisplayInfo ));
90025afe:	4c42      	ldr	r4, [pc, #264]	; (90025c08 <EwInit+0x11c>)
  EwPrint( "Initialize Display...                        " );
90025b00:	4842      	ldr	r0, [pc, #264]	; (90025c0c <EwInit+0x120>)
90025b02:	f7f7 f871 	bl	9001cbe8 <EwPrint>
  CHECK_HANDLE( EwBspDisplayInit( EwScreenSize.X, EwScreenSize.Y, &DisplayInfo ));
90025b06:	4d42      	ldr	r5, [pc, #264]	; (90025c10 <EwInit+0x124>)
90025b08:	e9d4 6700 	ldrd	r6, r7, [r4]
90025b0c:	462a      	mov	r2, r5
90025b0e:	4630      	mov	r0, r6
90025b10:	4639      	mov	r1, r7
90025b12:	f001 fd2b 	bl	9002756c <EwBspDisplayInit>
90025b16:	2800      	cmp	r0, #0
90025b18:	d06a      	beq.n	90025bf0 <EwInit+0x104>
90025b1a:	483e      	ldr	r0, [pc, #248]	; (90025c14 <EwInit+0x128>)
90025b1c:	f7f7 f864 	bl	9001cbe8 <EwPrint>

  /* initialize touchscreen */
  EwPrint( "Initialize Touch Driver...                   " );
90025b20:	483d      	ldr	r0, [pc, #244]	; (90025c18 <EwInit+0x12c>)
90025b22:	f7f7 f861 	bl	9001cbe8 <EwPrint>
  CHECK_HANDLE( EwBspTouchInit( EwScreenSize.X, EwScreenSize.Y, &DisplayInfo ));
90025b26:	462a      	mov	r2, r5
90025b28:	4639      	mov	r1, r7
90025b2a:	4630      	mov	r0, r6
90025b2c:	f002 f976 	bl	90027e1c <EwBspTouchInit>
90025b30:	2800      	cmp	r0, #0
90025b32:	d05d      	beq.n	90025bf0 <EwInit+0x104>
90025b34:	4837      	ldr	r0, [pc, #220]	; (90025c14 <EwInit+0x128>)
90025b36:	f7f7 f857 	bl	9001cbe8 <EwPrint>

  #if EW_MEMORY_POOL_SIZE > 0
    /* initialize heap manager */
    EwPrint( "Initialize Memory Manager...                 " );
90025b3a:	4838      	ldr	r0, [pc, #224]	; (90025c1c <EwInit+0x130>)
90025b3c:	f7f7 f854 	bl	9001cbe8 <EwPrint>
    EwInitHeap( 0 );
90025b40:	2000      	movs	r0, #0
90025b42:	f7f7 fcb9 	bl	9001d4b8 <EwInitHeap>
    EwAddHeapMemoryPool( (void*)EW_MEMORY_POOL_ADDR, EW_MEMORY_POOL_SIZE );
90025b46:	4936      	ldr	r1, [pc, #216]	; (90025c20 <EwInit+0x134>)
90025b48:	4836      	ldr	r0, [pc, #216]	; (90025c24 <EwInit+0x138>)
90025b4a:	f7f7 fcd1 	bl	9001d4f0 <EwAddHeapMemoryPool>

    #if EW_EXTRA_POOL_SIZE > 0
      EwAddHeapMemoryPool( (void*)EW_EXTRA_POOL_ADDR, EW_EXTRA_POOL_SIZE );
    #endif

    EwPrint( "[OK]\n" );
90025b4e:	4831      	ldr	r0, [pc, #196]	; (90025c14 <EwInit+0x128>)
90025b50:	f7f7 f84a 	bl	9001cbe8 <EwPrint>
  #endif

  /* initialize the Graphics Engine and Runtime Environment */
  EwPrint( "Initialize Graphics Engine...                " );
90025b54:	4834      	ldr	r0, [pc, #208]	; (90025c28 <EwInit+0x13c>)
90025b56:	f7f7 f847 	bl	9001cbe8 <EwPrint>
  CHECK_HANDLE( EwInitGraphicsEngine( 0 ));
90025b5a:	2000      	movs	r0, #0
90025b5c:	f7e6 fc2e 	bl	9000c3bc <EwInitGraphicsEngine>
90025b60:	2800      	cmp	r0, #0
90025b62:	d045      	beq.n	90025bf0 <EwInit+0x104>
90025b64:	482b      	ldr	r0, [pc, #172]	; (90025c14 <EwInit+0x128>)
90025b66:	f7f7 f83f 	bl	9001cbe8 <EwPrint>

  /* create the applications root object ... */
  EwPrint( "Create Embedded Wizard Root Object...        " );
90025b6a:	4830      	ldr	r0, [pc, #192]	; (90025c2c <EwInit+0x140>)
90025b6c:	f7f7 f83c 	bl	9001cbe8 <EwPrint>
  RootObject = (CoreRoot)EwNewObjectIndirect( EwApplicationClass, 0 );
90025b70:	4b2f      	ldr	r3, [pc, #188]	; (90025c30 <EwInit+0x144>)
90025b72:	4e30      	ldr	r6, [pc, #192]	; (90025c34 <EwInit+0x148>)
90025b74:	2100      	movs	r1, #0
90025b76:	6818      	ldr	r0, [r3, #0]
90025b78:	f7f8 f942 	bl	9001de00 <EwNewObjectIndirect>
90025b7c:	6030      	str	r0, [r6, #0]
  CHECK_HANDLE( RootObject );
90025b7e:	2800      	cmp	r0, #0
90025b80:	d036      	beq.n	90025bf0 <EwInit+0x104>
90025b82:	4824      	ldr	r0, [pc, #144]	; (90025c14 <EwInit+0x128>)
  EwLockObject( RootObject );
  CoreRoot__Initialize( RootObject, EwScreenSize );

  /* create Embedded Wizard viewport object to provide uniform access to the framebuffer */
  EwPrint( "Create Embedded Wizard Viewport...           " );
  Viewport = EwInitViewport( EwScreenSize, EwNewRect( 0, 0, DisplayInfo.BufferWidth, DisplayInfo.BufferHeight ),
90025b84:	af08      	add	r7, sp, #32
  CHECK_HANDLE( RootObject );
90025b86:	f7f7 f82f 	bl	9001cbe8 <EwPrint>
  EwLockObject( RootObject );
90025b8a:	6830      	ldr	r0, [r6, #0]
90025b8c:	f7f8 fa67 	bl	9001e05e <EwLockObject>
  CoreRoot__Initialize( RootObject, EwScreenSize );
90025b90:	6830      	ldr	r0, [r6, #0]
90025b92:	e894 0006 	ldmia.w	r4, {r1, r2}
90025b96:	f7fe fac7 	bl	90024128 <CoreRoot__Initialize>
  EwPrint( "Create Embedded Wizard Viewport...           " );
90025b9a:	4827      	ldr	r0, [pc, #156]	; (90025c38 <EwInit+0x14c>)
90025b9c:	f7f7 f824 	bl	9001cbe8 <EwPrint>
  Viewport = EwInitViewport( EwScreenSize, EwNewRect( 0, 0, DisplayInfo.BufferWidth, DisplayInfo.BufferHeight ),
90025ba0:	68eb      	ldr	r3, [r5, #12]
90025ba2:	2200      	movs	r2, #0
90025ba4:	4638      	mov	r0, r7
90025ba6:	9300      	str	r3, [sp, #0]
90025ba8:	4611      	mov	r1, r2
90025baa:	68ab      	ldr	r3, [r5, #8]
90025bac:	f7f8 fd66 	bl	9001e67c <EwNewRect>
90025bb0:	2300      	movs	r3, #0
90025bb2:	6868      	ldr	r0, [r5, #4]
90025bb4:	22ff      	movs	r2, #255	; 0xff
90025bb6:	9302      	str	r3, [sp, #8]
90025bb8:	6829      	ldr	r1, [r5, #0]
90025bba:	9203      	str	r2, [sp, #12]
90025bbc:	e9cd 3306 	strd	r3, r3, [sp, #24]
90025bc0:	ab0c      	add	r3, sp, #48	; 0x30
90025bc2:	e9cd 1004 	strd	r1, r0, [sp, #16]
90025bc6:	e913 0003 	ldmdb	r3, {r0, r1}
90025bca:	e897 000c 	ldmia.w	r7, {r2, r3}
90025bce:	e88d 0003 	stmia.w	sp, {r0, r1}
90025bd2:	e894 0003 	ldmia.w	r4, {r0, r1}
90025bd6:	f7e6 fde7 	bl	9000c7a8 <EwInitViewport>
90025bda:	4b18      	ldr	r3, [pc, #96]	; (90025c3c <EwInit+0x150>)
90025bdc:	6018      	str	r0, [r3, #0]
    0, 255, DisplayInfo.FrameBuffer, DisplayInfo.DoubleBuffer, 0, 0 );
  CHECK_HANDLE( Viewport );
90025bde:	b138      	cbz	r0, 90025bf0 <EwInit+0x104>
90025be0:	480c      	ldr	r0, [pc, #48]	; (90025c14 <EwInit+0x128>)
90025be2:	f7f7 f801 	bl	9001cbe8 <EwPrint>

  /* initialize your device driver(s) that provide data for your GUI */
  DeviceDriver_Initialize();
90025be6:	f7ff ff73 	bl	90025ad0 <DeviceDriver_Initialize>

  return 1;
90025bea:	2001      	movs	r0, #1
}
90025bec:	b00d      	add	sp, #52	; 0x34
90025bee:	bdf0      	pop	{r4, r5, r6, r7, pc}
  CHECK_HANDLE( EwBspDisplayInit( EwScreenSize.X, EwScreenSize.Y, &DisplayInfo ));
90025bf0:	4813      	ldr	r0, [pc, #76]	; (90025c40 <EwInit+0x154>)
90025bf2:	f7f6 fff9 	bl	9001cbe8 <EwPrint>
90025bf6:	2000      	movs	r0, #0
}
90025bf8:	b00d      	add	sp, #52	; 0x34
90025bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    EwBspClockSetTime( RTC_DEFAULT_TIME );
90025bfc:	4811      	ldr	r0, [pc, #68]	; (90025c44 <EwInit+0x158>)
90025bfe:	f001 fa4b 	bl	90027098 <EwBspClockSetTime>
90025c02:	e77c      	b.n	90025afe <EwInit+0x12>
90025c04:	3a4fc87f 	.word	0x3a4fc87f
90025c08:	900334f0 	.word	0x900334f0
90025c0c:	90033b38 	.word	0x90033b38
90025c10:	2000034c 	.word	0x2000034c
90025c14:	90033b74 	.word	0x90033b74
90025c18:	90033b7c 	.word	0x90033b7c
90025c1c:	90033bac 	.word	0x90033bac
90025c20:	00780800 	.word	0x00780800
90025c24:	d003fc00 	.word	0xd003fc00
90025c28:	90033bdc 	.word	0x90033bdc
90025c2c:	90033c0c 	.word	0x90033c0c
90025c30:	900334ec 	.word	0x900334ec
90025c34:	2000036c 	.word	0x2000036c
90025c38:	90033c3c 	.word	0x90033c3c
90025c3c:	20000370 	.word	0x20000370
90025c40:	90033b68 	.word	0x90033b68
90025c44:	608826f0 	.word	0x608826f0

90025c48 <EwDone>:
* RETURN VALUE:
*   None.
*
*******************************************************************************/
void EwDone( void )
{
90025c48:	b570      	push	{r4, r5, r6, lr}
  /* deinitialize your device driver(s) */
  DeviceDriver_Deinitialize();

  /* destroy the applications root object and release unused resources and memory */
  EwPrint( "Shutting down Application...                 " );
  EwDoneViewport( Viewport );
90025c4a:	4e16      	ldr	r6, [pc, #88]	; (90025ca4 <EwDone+0x5c>)
  DeviceDriver_Deinitialize();
90025c4c:	f7ff ff4a 	bl	90025ae4 <DeviceDriver_Deinitialize>
  EwUnlockObject( RootObject );
90025c50:	4d15      	ldr	r5, [pc, #84]	; (90025ca8 <EwDone+0x60>)
  EwPrint( "Shutting down Application...                 " );
90025c52:	4816      	ldr	r0, [pc, #88]	; (90025cac <EwDone+0x64>)
  EwReclaimMemory();
  EwPrint( "[OK]\n" );
90025c54:	4c16      	ldr	r4, [pc, #88]	; (90025cb0 <EwDone+0x68>)
  EwPrint( "Shutting down Application...                 " );
90025c56:	f7f6 ffc7 	bl	9001cbe8 <EwPrint>
  EwDoneViewport( Viewport );
90025c5a:	6830      	ldr	r0, [r6, #0]
90025c5c:	f7ea fab2 	bl	900101c4 <EwDoneViewport>
  EwUnlockObject( RootObject );
90025c60:	6828      	ldr	r0, [r5, #0]
90025c62:	f7f8 fa25 	bl	9001e0b0 <EwUnlockObject>
  EwReclaimMemory();
90025c66:	f7f8 fa4d 	bl	9001e104 <EwReclaimMemory>
  EwPrint( "[OK]\n" );
90025c6a:	4620      	mov	r0, r4
90025c6c:	f7f6 ffbc 	bl	9001cbe8 <EwPrint>

  /* deinitialize the Graphics Engine */
  EwPrint( "Deinitialize Graphics Engine...              " );
90025c70:	4810      	ldr	r0, [pc, #64]	; (90025cb4 <EwDone+0x6c>)
90025c72:	f7f6 ffb9 	bl	9001cbe8 <EwPrint>
  EwDoneGraphicsEngine();
90025c76:	f7e6 f9d5 	bl	9000c024 <EwDoneGraphicsEngine>
  EwPrint( "[OK]\n" );
90025c7a:	4620      	mov	r0, r4
90025c7c:	f7f6 ffb4 	bl	9001cbe8 <EwPrint>

  #if EW_MEMORY_POOL_SIZE > 0
    /* deinitialize heap manager */
    EwDoneHeap();
90025c80:	f7f7 fc2a 	bl	9001d4d8 <EwDoneHeap>
  #endif

  EwPrint( "Deinitialize Touch Driver...                 " );
90025c84:	480c      	ldr	r0, [pc, #48]	; (90025cb8 <EwDone+0x70>)
90025c86:	f7f6 ffaf 	bl	9001cbe8 <EwPrint>
  EwBspTouchDone();
90025c8a:	f002 f92d 	bl	90027ee8 <EwBspTouchDone>
  EwPrint( "[OK]\n" );
90025c8e:	4620      	mov	r0, r4
90025c90:	f7f6 ffaa 	bl	9001cbe8 <EwPrint>

  /* deinitialize display */
  EwBspDisplayDone( &DisplayInfo );
90025c94:	4809      	ldr	r0, [pc, #36]	; (90025cbc <EwDone+0x74>)
90025c96:	f001 fd01 	bl	9002769c <EwBspDisplayDone>

  Viewport   = 0;
90025c9a:	2300      	movs	r3, #0
90025c9c:	6033      	str	r3, [r6, #0]
  RootObject = 0;
90025c9e:	602b      	str	r3, [r5, #0]
}
90025ca0:	bd70      	pop	{r4, r5, r6, pc}
90025ca2:	bf00      	nop
90025ca4:	20000370 	.word	0x20000370
90025ca8:	2000036c 	.word	0x2000036c
90025cac:	90033c6c 	.word	0x90033c6c
90025cb0:	90033b74 	.word	0x90033b74
90025cb4:	90033c9c 	.word	0x90033c9c
90025cb8:	90033ccc 	.word	0x90033ccc
90025cbc:	2000034c 	.word	0x2000034c

90025cc0 <EwProcess>:
* RETURN VALUE:
*   1, if further processing is needed, 0 otherwise.
*
*******************************************************************************/
int EwProcess( void )
{
90025cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025cc4:	b08f      	sub	sp, #60	; 0x3c
  int          finger;
  XPoint       touchPos;

  /* process data of your device driver(s) and update the GUI
     application by setting properties or by triggering events */
  devices = DeviceDriver_ProcessData();
90025cc6:	f7ff ff0f 	bl	90025ae8 <DeviceDriver_ProcessData>
90025cca:	4607      	mov	r7, r0
    events |= CoreRoot__DriveKeyboardHitting( RootObject, cmd, 0, 1 );
    events |= CoreRoot__DriveKeyboardHitting( RootObject, cmd, 0, 0 );
  }

  /* receive (multi-) touch inputs and provide it to the application */
  noOfTouch = EwBspTouchGetEvents( &touchEvent );
90025ccc:	a807      	add	r0, sp, #28
90025cce:	f002 f90d 	bl	90027eec <EwBspTouchGetEvents>

  if ( noOfTouch > 0 )
90025cd2:	1e06      	subs	r6, r0, #0
90025cd4:	dd4b      	ble.n	90025d6e <EwProcess+0xae>
  {
    for ( touch = 0; touch < noOfTouch; touch++ )
90025cd6:	2400      	movs	r4, #0
      else if ( touchEvent[ touch ].State == EW_BSP_TOUCH_MOVE )
        events |= CoreRoot__DriveMultiTouchMovement( RootObject, finger, touchPos );

      /* end of touch cycle */
      else if ( touchEvent[ touch ].State == EW_BSP_TOUCH_UP )
        events |= CoreRoot__DriveMultiTouchHitting(  RootObject, 0, finger, touchPos );
90025cd8:	f8df 819c 	ldr.w	r8, [pc, #412]	; 90025e78 <EwProcess+0x1b8>
        events |= CoreRoot__DriveMultiTouchMovement( RootObject, finger, touchPos );
90025cdc:	f10d 0920 	add.w	r9, sp, #32
90025ce0:	4625      	mov	r5, r4
90025ce2:	e006      	b.n	90025cf2 <EwProcess+0x32>
      else if ( touchEvent[ touch ].State == EW_BSP_TOUCH_MOVE )
90025ce4:	2902      	cmp	r1, #2
90025ce6:	d031      	beq.n	90025d4c <EwProcess+0x8c>
      else if ( touchEvent[ touch ].State == EW_BSP_TOUCH_UP )
90025ce8:	2903      	cmp	r1, #3
90025cea:	d038      	beq.n	90025d5e <EwProcess+0x9e>
    for ( touch = 0; touch < noOfTouch; touch++ )
90025cec:	3401      	adds	r4, #1
90025cee:	42a6      	cmp	r6, r4
90025cf0:	d015      	beq.n	90025d1e <EwProcess+0x5e>
      finger     = touchEvent[ touch ].Finger;
90025cf2:	9907      	ldr	r1, [sp, #28]
90025cf4:	0123      	lsls	r3, r4, #4
90025cf6:	eb01 1204 	add.w	r2, r1, r4, lsl #4
      touchPos.X = touchEvent[ touch ].XPos;
90025cfa:	58cb      	ldr	r3, [r1, r3]
      if ( touchEvent[ touch ].State == EW_BSP_TOUCH_DOWN )
90025cfc:	68d1      	ldr	r1, [r2, #12]
      touchPos.Y = touchEvent[ touch ].YPos;
90025cfe:	6850      	ldr	r0, [r2, #4]
      if ( touchEvent[ touch ].State == EW_BSP_TOUCH_DOWN )
90025d00:	2901      	cmp	r1, #1
      finger     = touchEvent[ touch ].Finger;
90025d02:	6892      	ldr	r2, [r2, #8]
      touchPos.Y = touchEvent[ touch ].YPos;
90025d04:	e9cd 3008 	strd	r3, r0, [sp, #32]
      if ( touchEvent[ touch ].State == EW_BSP_TOUCH_DOWN )
90025d08:	d1ec      	bne.n	90025ce4 <EwProcess+0x24>
    for ( touch = 0; touch < noOfTouch; touch++ )
90025d0a:	3401      	adds	r4, #1
        events |= CoreRoot__DriveMultiTouchHitting(  RootObject, 1, finger, touchPos );
90025d0c:	9000      	str	r0, [sp, #0]
90025d0e:	f8d8 0000 	ldr.w	r0, [r8]
90025d12:	f7ff f855 	bl	90024dc0 <CoreRoot__DriveMultiTouchHitting>
    for ( touch = 0; touch < noOfTouch; touch++ )
90025d16:	42a6      	cmp	r6, r4
        events |= CoreRoot__DriveMultiTouchHitting(  RootObject, 1, finger, touchPos );
90025d18:	ea45 0500 	orr.w	r5, r5, r0
    for ( touch = 0; touch < noOfTouch; touch++ )
90025d1c:	d1e9      	bne.n	90025cf2 <EwProcess+0x32>
    }
  }

  /* process expired timers */
  timers = EwProcessTimers();
90025d1e:	f7fb fe1b 	bl	90021958 <EwProcessTimers>
90025d22:	4604      	mov	r4, r0

  /* process the pending signals */
  signals = EwProcessSignals();
90025d24:	f7f9 fe86 	bl	9001fa34 <EwProcessSignals>

  /* refresh the screen, if something has changed and draw its content */
  if ( devices || timers || signals || events )
90025d28:	4325      	orrs	r5, r4
90025d2a:	432f      	orrs	r7, r5
90025d2c:	ea57 0300 	orrs.w	r3, r7, r0
90025d30:	d072      	beq.n	90025e18 <EwProcess+0x158>
  {
    if ( CoreRoot__DoesNeedUpdate( RootObject ))
90025d32:	4d51      	ldr	r5, [pc, #324]	; (90025e78 <EwProcess+0x1b8>)
90025d34:	6828      	ldr	r0, [r5, #0]
90025d36:	f7fe f9b5 	bl	900240a4 <CoreRoot__DoesNeedUpdate>
90025d3a:	b9d0      	cbnz	r0, 90025d72 <EwProcess+0xb2>
      EwUpdate( Viewport, RootObject );

    /* just for debugging purposes: check the memory structure */
    EwVerifyHeap();
90025d3c:	f7f7 fd1a 	bl	9001d774 <EwVerifyHeap>

    /* after each processed message start the garbage collection */
    EwReclaimMemory();
90025d40:	f7f8 f9e0 	bl	9001e104 <EwReclaimMemory>
    /* otherwise sleep/suspend the UI application until a certain event occurs or a timer expires... */
    EwBspEventWait( EwNextTimerExpiration());
  }

  return 1;
}
90025d44:	2001      	movs	r0, #1
90025d46:	b00f      	add	sp, #60	; 0x3c
90025d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        events |= CoreRoot__DriveMultiTouchMovement( RootObject, finger, touchPos );
90025d4c:	4611      	mov	r1, r2
90025d4e:	f8d8 0000 	ldr.w	r0, [r8]
90025d52:	e899 000c 	ldmia.w	r9, {r2, r3}
90025d56:	f7fe fb59 	bl	9002440c <CoreRoot__DriveMultiTouchMovement>
90025d5a:	4305      	orrs	r5, r0
90025d5c:	e7c6      	b.n	90025cec <EwProcess+0x2c>
        events |= CoreRoot__DriveMultiTouchHitting(  RootObject, 0, finger, touchPos );
90025d5e:	9000      	str	r0, [sp, #0]
90025d60:	2100      	movs	r1, #0
90025d62:	f8d8 0000 	ldr.w	r0, [r8]
90025d66:	f7ff f82b 	bl	90024dc0 <CoreRoot__DriveMultiTouchHitting>
90025d6a:	4305      	orrs	r5, r0
90025d6c:	e7be      	b.n	90025cec <EwProcess+0x2c>
90025d6e:	2500      	movs	r5, #0
90025d70:	e7d5      	b.n	90025d1e <EwProcess+0x5e>
      EwUpdate( Viewport, RootObject );
90025d72:	4b42      	ldr	r3, [pc, #264]	; (90025e7c <EwProcess+0x1bc>)
*
*******************************************************************************/
static void EwUpdate( XViewport* aViewport, CoreRoot aApplication )
{
  XBitmap*       bitmap;
  GraphicsCanvas canvas     = EwNewObject( GraphicsCanvas, 0 );
90025d74:	2100      	movs	r1, #0
90025d76:	4842      	ldr	r0, [pc, #264]	; (90025e80 <EwProcess+0x1c0>)
  XRect          updateRect = {{ 0, 0 }, { 0, 0 }};
90025d78:	ac0a      	add	r4, sp, #40	; 0x28
      EwUpdate( Viewport, RootObject );
90025d7a:	f8d5 9000 	ldr.w	r9, [r5]
90025d7e:	681e      	ldr	r6, [r3, #0]
  GraphicsCanvas canvas     = EwNewObject( GraphicsCanvas, 0 );
90025d80:	f7f8 f83e 	bl	9001de00 <EwNewObjectIndirect>
  XRect          updateRect = {{ 0, 0 }, { 0, 0 }};
90025d84:	2300      	movs	r3, #0

  if ( !canvas )
90025d86:	4605      	mov	r5, r0
  XRect          updateRect = {{ 0, 0 }, { 0, 0 }};
90025d88:	6063      	str	r3, [r4, #4]
90025d8a:	930a      	str	r3, [sp, #40]	; 0x28
90025d8c:	e9c4 3302 	strd	r3, r3, [r4, #8]
  if ( !canvas )
90025d90:	2800      	cmp	r0, #0
90025d92:	d0d3      	beq.n	90025d3c <EwProcess+0x7c>
    return;

  if ( DisplayInfo.UpdateMode == EW_BSP_DISPLAY_UPDATE_NORMAL )
90025d94:	f8df b0ec 	ldr.w	fp, [pc, #236]	; 90025e84 <EwProcess+0x1c4>
90025d98:	f8db 3018 	ldr.w	r3, [fp, #24]
90025d9c:	2b00      	cmp	r3, #0
90025d9e:	d043      	beq.n	90025e28 <EwProcess+0x168>
      EwEndUpdate( aViewport, updateRect );
    }
  }
  else
  {
    int regions = CoreRoot__BeginUpdate( aApplication );
90025da0:	4648      	mov	r0, r9

    while ( regions-- )
    {
      /* get rectangular area of the update region for scratch-pad buffer */
      if ( DisplayInfo.UpdateMode == EW_BSP_DISPLAY_UPDATE_SCRATCHPAD )
        updateRect = CoreRoot__GetUpdateRegion( aApplication, regions );
90025da2:	f10d 0808 	add.w	r8, sp, #8
    int regions = CoreRoot__BeginUpdate( aApplication );
90025da6:	f7fe f97b 	bl	900240a0 <CoreRoot__BeginUpdate>
    while ( regions-- )
90025daa:	f100 3aff 	add.w	sl, r0, #4294967295
90025dae:	f1ba 3fff 	cmp.w	sl, #4294967295
90025db2:	d02d      	beq.n	90025e10 <EwProcess+0x150>
      if ( DisplayInfo.UpdateMode == EW_BSP_DISPLAY_UPDATE_SCRATCHPAD )
90025db4:	f8db 3018 	ldr.w	r3, [fp, #24]
90025db8:	2b02      	cmp	r3, #2
90025dba:	d11c      	bne.n	90025df6 <EwProcess+0x136>
90025dbc:	e052      	b.n	90025e64 <EwProcess+0x1a4>

      /* iterate through all update areas */
      while ( EwBspDisplayGetUpdateArea( &updateRect ))
      {
        /* update the current subarea */
        bitmap = EwBeginUpdateArea( aViewport, updateRect );
90025dbe:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90025dc0:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90025dc4:	9700      	str	r7, [sp, #0]
90025dc6:	f7e6 fddb 	bl	9000c980 <EwBeginUpdateArea>
90025dca:	4601      	mov	r1, r0
        GraphicsCanvas__AttachBitmap( canvas, (XHandle)bitmap );
90025dcc:	4628      	mov	r0, r5
90025dce:	f7ff f8bd 	bl	90024f4c <GraphicsCanvas__AttachBitmap>
        CoreRoot__UpdateCanvas( aApplication, canvas, updateRect.Point1 );
90025dd2:	462a      	mov	r2, r5
90025dd4:	4640      	mov	r0, r8
90025dd6:	e9dd 310a 	ldrd	r3, r1, [sp, #40]	; 0x28
90025dda:	9100      	str	r1, [sp, #0]
90025ddc:	4649      	mov	r1, r9
90025dde:	f7fd ff6f 	bl	90023cc0 <CoreRoot__UpdateCanvas>
        GraphicsCanvas__DetachBitmap( canvas );
90025de2:	4628      	mov	r0, r5
90025de4:	f7ff f876 	bl	90024ed4 <GraphicsCanvas__DetachBitmap>
        EwEndUpdate( aViewport, updateRect );
90025de8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025dea:	4630      	mov	r0, r6
90025dec:	9300      	str	r3, [sp, #0]
90025dee:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90025df2:	f7ea f84f 	bl	9000fe94 <EwEndUpdate>
      while ( EwBspDisplayGetUpdateArea( &updateRect ))
90025df6:	4620      	mov	r0, r4
90025df8:	f001 fc52 	bl	900276a0 <EwBspDisplayGetUpdateArea>
90025dfc:	4603      	mov	r3, r0
        bitmap = EwBeginUpdateArea( aViewport, updateRect );
90025dfe:	4630      	mov	r0, r6
      while ( EwBspDisplayGetUpdateArea( &updateRect ))
90025e00:	2b00      	cmp	r3, #0
90025e02:	d1dc      	bne.n	90025dbe <EwProcess+0xfe>
      }

      if ( DisplayInfo.UpdateMode != EW_BSP_DISPLAY_UPDATE_SCRATCHPAD )
90025e04:	f8db 3018 	ldr.w	r3, [fp, #24]
90025e08:	f10a 3aff 	add.w	sl, sl, #4294967295
90025e0c:	2b02      	cmp	r3, #2
90025e0e:	d0ce      	beq.n	90025dae <EwProcess+0xee>
        break;
    }
    CoreRoot__EndUpdate( aApplication );
90025e10:	4648      	mov	r0, r9
90025e12:	f7fd fe91 	bl	90023b38 <CoreRoot__EndUpdate>
90025e16:	e791      	b.n	90025d3c <EwProcess+0x7c>
    EwBspEventWait( EwNextTimerExpiration());
90025e18:	f7fb fde8 	bl	900219ec <EwNextTimerExpiration>
90025e1c:	f001 fc64 	bl	900276e8 <EwBspEventWait>
}
90025e20:	2001      	movs	r0, #1
90025e22:	b00f      	add	sp, #60	; 0x3c
90025e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bitmap = EwBeginUpdate( aViewport );
90025e28:	4630      	mov	r0, r6
90025e2a:	f7e6 fd5b 	bl	9000c8e4 <EwBeginUpdate>
    if ( bitmap  )
90025e2e:	4601      	mov	r1, r0
90025e30:	2800      	cmp	r0, #0
90025e32:	d083      	beq.n	90025d3c <EwProcess+0x7c>
      updateRect = CoreRoot__UpdateGE20( aApplication, canvas );
90025e34:	af02      	add	r7, sp, #8
      GraphicsCanvas__AttachBitmap( canvas, (XHandle)bitmap );
90025e36:	4628      	mov	r0, r5
90025e38:	f7ff f888 	bl	90024f4c <GraphicsCanvas__AttachBitmap>
      updateRect = CoreRoot__UpdateGE20( aApplication, canvas );
90025e3c:	4649      	mov	r1, r9
90025e3e:	4638      	mov	r0, r7
90025e40:	462a      	mov	r2, r5
90025e42:	f7fe f927 	bl	90024094 <CoreRoot__UpdateGE20>
90025e46:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90025e4a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
      GraphicsCanvas__DetachBitmap( canvas );
90025e4e:	4628      	mov	r0, r5
90025e50:	f7ff f840 	bl	90024ed4 <GraphicsCanvas__DetachBitmap>
      EwEndUpdate( aViewport, updateRect );
90025e54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90025e56:	4630      	mov	r0, r6
90025e58:	9300      	str	r3, [sp, #0]
90025e5a:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
90025e5e:	f7ea f819 	bl	9000fe94 <EwEndUpdate>
90025e62:	e76b      	b.n	90025d3c <EwProcess+0x7c>
        updateRect = CoreRoot__GetUpdateRegion( aApplication, regions );
90025e64:	4652      	mov	r2, sl
90025e66:	4649      	mov	r1, r9
90025e68:	4640      	mov	r0, r8
90025e6a:	f7fd ff65 	bl	90023d38 <CoreRoot__GetUpdateRegion>
90025e6e:	e898 000f 	ldmia.w	r8, {r0, r1, r2, r3}
90025e72:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
90025e76:	e7be      	b.n	90025df6 <EwProcess+0x136>
90025e78:	2000036c 	.word	0x2000036c
90025e7c:	20000370 	.word	0x20000370
90025e80:	90033944 	.word	0x90033944
90025e84:	2000034c 	.word	0x2000034c

90025e88 <EwPrintSystemInfo>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwPrintSystemInfo( void )
{
90025e88:	b570      	push	{r4, r5, r6, lr}
  EwPrint( "---------------------------------------------\n" );
90025e8a:	4e4f      	ldr	r6, [pc, #316]	; (90025fc8 <EwPrintSystemInfo+0x140>)
  #endif
  #if EW_USE_SCRATCHPAD_BUFFER == 1
  EwPrint( "Scratch-pad buffer address                   0x%08X  \n", DisplayInfo.FrameBuffer );
  EwPrint( "Scratch-pad buffer size                      %u pixel\n", DisplayInfo.BufferWidth * DisplayInfo.BufferHeight );
  #else
  EwPrint( "Framebuffer address                          0x%08X  \n", DisplayInfo.FrameBuffer );
90025e8c:	4d4f      	ldr	r5, [pc, #316]	; (90025fcc <EwPrintSystemInfo+0x144>)
  EwPrint( "---------------------------------------------\n" );
90025e8e:	4630      	mov	r0, r6
  #endif
  EwPrint( "Display size                                 %u x %u \n", DisplayInfo.DisplayWidth, DisplayInfo.DisplayHeight );
  EwPrint( "Framebuffer size                             %u x %u \n", DisplayInfo.BufferWidth, DisplayInfo.BufferHeight );
  EwPrint( "EwScreenSize                                 %d x %d \n", EwScreenSize.X, EwScreenSize.Y );
  EwPrint( "Graphics accelerator                         %s      \n", GRAPHICS_ACCELERATOR_STRING );
  EwPrint( "Warp function support                        %s      \n", WARP_FUNCTION_SUPPORT_STRING );
90025e90:	4c4f      	ldr	r4, [pc, #316]	; (90025fd0 <EwPrintSystemInfo+0x148>)
  EwPrint( "---------------------------------------------\n" );
90025e92:	f7f6 fea9 	bl	9001cbe8 <EwPrint>
  EwPrint( "Target system                                %s      \n", EW_PLATFORM_STRING );
90025e96:	494f      	ldr	r1, [pc, #316]	; (90025fd4 <EwPrintSystemInfo+0x14c>)
90025e98:	484f      	ldr	r0, [pc, #316]	; (90025fd8 <EwPrintSystemInfo+0x150>)
90025e9a:	f7f6 fea5 	bl	9001cbe8 <EwPrint>
  EwPrint( "Color format                                 %s      \n", EW_FRAME_BUFFER_COLOR_FORMAT_STRING );
90025e9e:	494f      	ldr	r1, [pc, #316]	; (90025fdc <EwPrintSystemInfo+0x154>)
90025ea0:	484f      	ldr	r0, [pc, #316]	; (90025fe0 <EwPrintSystemInfo+0x158>)
90025ea2:	f7f6 fea1 	bl	9001cbe8 <EwPrint>
  EwPrint( "MemoryPool address                           0x%08X  \n", EW_MEMORY_POOL_ADDR );
90025ea6:	494f      	ldr	r1, [pc, #316]	; (90025fe4 <EwPrintSystemInfo+0x15c>)
90025ea8:	484f      	ldr	r0, [pc, #316]	; (90025fe8 <EwPrintSystemInfo+0x160>)
90025eaa:	f7f6 fe9d 	bl	9001cbe8 <EwPrint>
  EwPrint( "MemoryPool size                              %u bytes\n", EW_MEMORY_POOL_SIZE );
90025eae:	494f      	ldr	r1, [pc, #316]	; (90025fec <EwPrintSystemInfo+0x164>)
90025eb0:	484f      	ldr	r0, [pc, #316]	; (90025ff0 <EwPrintSystemInfo+0x168>)
90025eb2:	f7f6 fe99 	bl	9001cbe8 <EwPrint>
  EwPrint( "Framebuffer address                          0x%08X  \n", DisplayInfo.FrameBuffer );
90025eb6:	6829      	ldr	r1, [r5, #0]
90025eb8:	484e      	ldr	r0, [pc, #312]	; (90025ff4 <EwPrintSystemInfo+0x16c>)
90025eba:	f7f6 fe95 	bl	9001cbe8 <EwPrint>
  EwPrint( "Doublebuffer address                         0x%08X  \n", DisplayInfo.DoubleBuffer );
90025ebe:	6869      	ldr	r1, [r5, #4]
90025ec0:	484d      	ldr	r0, [pc, #308]	; (90025ff8 <EwPrintSystemInfo+0x170>)
90025ec2:	f7f6 fe91 	bl	9001cbe8 <EwPrint>
  EwPrint( "Display size                                 %u x %u \n", DisplayInfo.DisplayWidth, DisplayInfo.DisplayHeight );
90025ec6:	484d      	ldr	r0, [pc, #308]	; (90025ffc <EwPrintSystemInfo+0x174>)
90025ec8:	e9d5 1204 	ldrd	r1, r2, [r5, #16]
90025ecc:	f7f6 fe8c 	bl	9001cbe8 <EwPrint>
  EwPrint( "Framebuffer size                             %u x %u \n", DisplayInfo.BufferWidth, DisplayInfo.BufferHeight );
90025ed0:	484b      	ldr	r0, [pc, #300]	; (90026000 <EwPrintSystemInfo+0x178>)
90025ed2:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
90025ed6:	f7f6 fe87 	bl	9001cbe8 <EwPrint>
  EwPrint( "EwScreenSize                                 %d x %d \n", EwScreenSize.X, EwScreenSize.Y );
90025eda:	4b4a      	ldr	r3, [pc, #296]	; (90026004 <EwPrintSystemInfo+0x17c>)
90025edc:	484a      	ldr	r0, [pc, #296]	; (90026008 <EwPrintSystemInfo+0x180>)
90025ede:	e9d3 1200 	ldrd	r1, r2, [r3]
90025ee2:	f7f6 fe81 	bl	9001cbe8 <EwPrint>
  EwPrint( "Graphics accelerator                         %s      \n", GRAPHICS_ACCELERATOR_STRING );
90025ee6:	4949      	ldr	r1, [pc, #292]	; (9002600c <EwPrintSystemInfo+0x184>)
90025ee8:	4849      	ldr	r0, [pc, #292]	; (90026010 <EwPrintSystemInfo+0x188>)
90025eea:	f7f6 fe7d 	bl	9001cbe8 <EwPrint>
  EwPrint( "Warp function support                        %s      \n", WARP_FUNCTION_SUPPORT_STRING );
90025eee:	4621      	mov	r1, r4
90025ef0:	4848      	ldr	r0, [pc, #288]	; (90026014 <EwPrintSystemInfo+0x18c>)
90025ef2:	f7f6 fe79 	bl	9001cbe8 <EwPrint>
  EwPrint( "Vector graphics support                      %s      \n", VECTOR_GRAPHICS_SUPPORT_STRING );
90025ef6:	4621      	mov	r1, r4
90025ef8:	4847      	ldr	r0, [pc, #284]	; (90026018 <EwPrintSystemInfo+0x190>)
90025efa:	f7f6 fe75 	bl	9001cbe8 <EwPrint>
  EwPrint( "Bidirectional text support                   %s      \n", BIDI_TEXT_SUPPORT_STRING );
90025efe:	4621      	mov	r1, r4
90025f00:	4846      	ldr	r0, [pc, #280]	; (9002601c <EwPrintSystemInfo+0x194>)
90025f02:	f7f6 fe71 	bl	9001cbe8 <EwPrint>
  EwPrint( "Gradients support                            %s      \n", GRADIENTS_SUPPORT_STRING );
90025f06:	4621      	mov	r1, r4
90025f08:	4845      	ldr	r0, [pc, #276]	; (90026020 <EwPrintSystemInfo+0x198>)
90025f0a:	f7f6 fe6d 	bl	9001cbe8 <EwPrint>
  EwPrint( "Compression support                          %s      \n", COMPRESSION_SUPPORT_STRING );
90025f0e:	4621      	mov	r1, r4
90025f10:	4844      	ldr	r0, [pc, #272]	; (90026024 <EwPrintSystemInfo+0x19c>)
90025f12:	f7f6 fe69 	bl	9001cbe8 <EwPrint>
  EwPrint( "Index8 bitmap resource format                %s      \n", INDEX8_SURFACE_SUPPORT_STRING );
90025f16:	4621      	mov	r1, r4
90025f18:	4843      	ldr	r0, [pc, #268]	; (90026028 <EwPrintSystemInfo+0x1a0>)
90025f1a:	f7f6 fe65 	bl	9001cbe8 <EwPrint>
  EwPrint( "RGB565 bitmap resource format                %s      \n", RGB565_SURFACE_SUPPORT_STRING );
90025f1e:	4621      	mov	r1, r4
90025f20:	4842      	ldr	r0, [pc, #264]	; (9002602c <EwPrintSystemInfo+0x1a4>)
90025f22:	f7f6 fe61 	bl	9001cbe8 <EwPrint>
  EwPrint( "Native bitmap resource format                %s      \n", NATIVE_SURFACE_SUPPORT_STRING );
90025f26:	4621      	mov	r1, r4
90025f28:	4841      	ldr	r0, [pc, #260]	; (90026030 <EwPrintSystemInfo+0x1a8>)
90025f2a:	f7f6 fe5d 	bl	9001cbe8 <EwPrint>
  EwPrint( "Native destination bitmap support            %s      \n", NATIVE_DESTINATION_SURFACE_SUPPORT_STRING );
90025f2e:	4621      	mov	r1, r4
90025f30:	4840      	ldr	r0, [pc, #256]	; (90026034 <EwPrintSystemInfo+0x1ac>)
90025f32:	f7f6 fe59 	bl	9001cbe8 <EwPrint>
  EwPrint( "Operating system                             %s      \n", OPERATING_SYSTEM_STRING );
  EwPrint( "External Flash memory                        %s      \n", EXTERNAL_FLASH_STRING );
  #ifdef EW_BITMAP_PIXEL_SECTION_NAME
  EwPrint( "Linker section for bitmap pixel              %s      \n", EW_STRINGIZE( EW_BITMAP_PIXEL_SECTION_NAME ));
90025f36:	4c40      	ldr	r4, [pc, #256]	; (90026038 <EwPrintSystemInfo+0x1b0>)
  EwPrint( "Operating system                             %s      \n", OPERATING_SYSTEM_STRING );
90025f38:	4940      	ldr	r1, [pc, #256]	; (9002603c <EwPrintSystemInfo+0x1b4>)
90025f3a:	4841      	ldr	r0, [pc, #260]	; (90026040 <EwPrintSystemInfo+0x1b8>)
90025f3c:	f7f6 fe54 	bl	9001cbe8 <EwPrint>
  EwPrint( "External Flash memory                        %s      \n", EXTERNAL_FLASH_STRING );
90025f40:	4940      	ldr	r1, [pc, #256]	; (90026044 <EwPrintSystemInfo+0x1bc>)
90025f42:	4841      	ldr	r0, [pc, #260]	; (90026048 <EwPrintSystemInfo+0x1c0>)
90025f44:	f7f6 fe50 	bl	9001cbe8 <EwPrint>
  EwPrint( "Linker section for bitmap pixel              %s      \n", EW_STRINGIZE( EW_BITMAP_PIXEL_SECTION_NAME ));
90025f48:	4621      	mov	r1, r4
90025f4a:	4840      	ldr	r0, [pc, #256]	; (9002604c <EwPrintSystemInfo+0x1c4>)
90025f4c:	f7f6 fe4c 	bl	9001cbe8 <EwPrint>
  #endif
  #ifdef EW_FONT_PIXEL_SECTION_NAME
  EwPrint( "Linker section for font pixel                %s      \n", EW_STRINGIZE( EW_FONT_PIXEL_SECTION_NAME ));
90025f50:	4621      	mov	r1, r4
90025f52:	483f      	ldr	r0, [pc, #252]	; (90026050 <EwPrintSystemInfo+0x1c8>)
90025f54:	f7f6 fe48 	bl	9001cbe8 <EwPrint>
  #endif
  #ifdef EW_FONT_DATA_SECTION_NAME
  EwPrint( "Linker section for font metrics              %s      \n", EW_STRINGIZE( EW_FONT_DATA_SECTION_NAME ));
90025f58:	4621      	mov	r1, r4
90025f5a:	483e      	ldr	r0, [pc, #248]	; (90026054 <EwPrintSystemInfo+0x1cc>)
90025f5c:	f7f6 fe44 	bl	9001cbe8 <EwPrint>
  #endif
  #ifdef EW_CONST_STRING_SECTION_NAME
  EwPrint( "Linker section for string constants          %s      \n", EW_STRINGIZE( EW_CONST_STRING_SECTION_NAME ));
90025f60:	4621      	mov	r1, r4
90025f62:	483d      	ldr	r0, [pc, #244]	; (90026058 <EwPrintSystemInfo+0x1d0>)
90025f64:	f7f6 fe40 	bl	9001cbe8 <EwPrint>
  #endif
  EwPrint( "Toolchain                                    %s      \n", TOOLCHAIN_STRING );
90025f68:	493c      	ldr	r1, [pc, #240]	; (9002605c <EwPrintSystemInfo+0x1d4>)
90025f6a:	483d      	ldr	r0, [pc, #244]	; (90026060 <EwPrintSystemInfo+0x1d8>)
90025f6c:	f7f6 fe3c 	bl	9001cbe8 <EwPrint>
  #ifdef COMPILER_VERSION_STRING
  EwPrint( "C-Compiler version                           %s      \n", COMPILER_VERSION_STRING );
90025f70:	493c      	ldr	r1, [pc, #240]	; (90026064 <EwPrintSystemInfo+0x1dc>)
90025f72:	483d      	ldr	r0, [pc, #244]	; (90026068 <EwPrintSystemInfo+0x1e0>)
90025f74:	f7f6 fe38 	bl	9001cbe8 <EwPrint>
  #endif
  EwPrint( "Build date and time                          %s, %s  \n", __DATE__, __TIME__ );
90025f78:	4a3c      	ldr	r2, [pc, #240]	; (9002606c <EwPrintSystemInfo+0x1e4>)
90025f7a:	493d      	ldr	r1, [pc, #244]	; (90026070 <EwPrintSystemInfo+0x1e8>)
90025f7c:	483d      	ldr	r0, [pc, #244]	; (90026074 <EwPrintSystemInfo+0x1ec>)
90025f7e:	f7f6 fe33 	bl	9001cbe8 <EwPrint>
  EwPrint( "Runtime Environment (RTE) version            %u.%02u \n", EW_RTE_VERSION >> 16, EW_RTE_VERSION & 0xFF );
90025f82:	2200      	movs	r2, #0
90025f84:	210b      	movs	r1, #11
90025f86:	483c      	ldr	r0, [pc, #240]	; (90026078 <EwPrintSystemInfo+0x1f0>)
90025f88:	f7f6 fe2e 	bl	9001cbe8 <EwPrint>
  EwPrint( "Graphics Engine (GFX) version                %u.%02u \n", EW_GFX_VERSION >> 16, EW_GFX_VERSION & 0xFF );
90025f8c:	2200      	movs	r2, #0
90025f8e:	210b      	movs	r1, #11
90025f90:	483a      	ldr	r0, [pc, #232]	; (9002607c <EwPrintSystemInfo+0x1f4>)
90025f92:	f7f6 fe29 	bl	9001cbe8 <EwPrint>
  EwPrint( "Max surface cache size                       %u bytes\n", EW_MAX_SURFACE_CACHE_SIZE );
90025f96:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
90025f9a:	4839      	ldr	r0, [pc, #228]	; (90026080 <EwPrintSystemInfo+0x1f8>)
90025f9c:	f7f6 fe24 	bl	9001cbe8 <EwPrint>
  EwPrint( "Glyph cache size                             %u x %u \n", EW_MAX_GLYPH_SURFACE_WIDTH, EW_MAX_GLYPH_SURFACE_HEIGHT );
90025fa0:	f44f 7280 	mov.w	r2, #256	; 0x100
90025fa4:	4837      	ldr	r0, [pc, #220]	; (90026084 <EwPrintSystemInfo+0x1fc>)
90025fa6:	4611      	mov	r1, r2
90025fa8:	f7f6 fe1e 	bl	9001cbe8 <EwPrint>
  EwPrint( "Max issue tasks                              %u      \n", EW_MAX_ISSUE_TASKS );
90025fac:	2164      	movs	r1, #100	; 0x64
90025fae:	4836      	ldr	r0, [pc, #216]	; (90026088 <EwPrintSystemInfo+0x200>)
90025fb0:	f7f6 fe1a 	bl	9001cbe8 <EwPrint>
  EwPrint( "Surface rotation                             %u      \n", EW_SURFACE_ROTATION );
90025fb4:	4835      	ldr	r0, [pc, #212]	; (9002608c <EwPrintSystemInfo+0x204>)
90025fb6:	2100      	movs	r1, #0
90025fb8:	f7f6 fe16 	bl	9001cbe8 <EwPrint>
  EwPrint( "---------------------------------------------\n" );
90025fbc:	4630      	mov	r0, r6
}
90025fbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  EwPrint( "---------------------------------------------\n" );
90025fc2:	f7f6 be11 	b.w	9001cbe8 <EwPrint>
90025fc6:	bf00      	nop
90025fc8:	90033cfc 	.word	0x90033cfc
90025fcc:	2000034c 	.word	0x2000034c
90025fd0:	90033f80 	.word	0x90033f80
90025fd4:	90033d2c 	.word	0x90033d2c
90025fd8:	90033d40 	.word	0x90033d40
90025fdc:	90033d78 	.word	0x90033d78
90025fe0:	90033d80 	.word	0x90033d80
90025fe4:	d003fc00 	.word	0xd003fc00
90025fe8:	90033db8 	.word	0x90033db8
90025fec:	00780800 	.word	0x00780800
90025ff0:	90033df0 	.word	0x90033df0
90025ff4:	90033e28 	.word	0x90033e28
90025ff8:	90033e60 	.word	0x90033e60
90025ffc:	90033e98 	.word	0x90033e98
90026000:	90033ed0 	.word	0x90033ed0
90026004:	900334f0 	.word	0x900334f0
90026008:	90033f08 	.word	0x90033f08
9002600c:	90033f40 	.word	0x90033f40
90026010:	90033f48 	.word	0x90033f48
90026014:	90033f88 	.word	0x90033f88
90026018:	90033fc0 	.word	0x90033fc0
9002601c:	90033ff8 	.word	0x90033ff8
90026020:	90034030 	.word	0x90034030
90026024:	90034068 	.word	0x90034068
90026028:	900340a0 	.word	0x900340a0
9002602c:	900340d8 	.word	0x900340d8
90026030:	90034110 	.word	0x90034110
90026034:	90034148 	.word	0x90034148
90026038:	90034208 	.word	0x90034208
9002603c:	90034180 	.word	0x90034180
90026040:	9003418c 	.word	0x9003418c
90026044:	900341c4 	.word	0x900341c4
90026048:	900341d0 	.word	0x900341d0
9002604c:	9003421c 	.word	0x9003421c
90026050:	90034254 	.word	0x90034254
90026054:	9003428c 	.word	0x9003428c
90026058:	900342c4 	.word	0x900342c4
9002605c:	900342fc 	.word	0x900342fc
90026060:	90034300 	.word	0x90034300
90026064:	90034338 	.word	0x90034338
90026068:	90034340 	.word	0x90034340
9002606c:	90034378 	.word	0x90034378
90026070:	90034384 	.word	0x90034384
90026074:	90034390 	.word	0x90034390
90026078:	900343c8 	.word	0x900343c8
9002607c:	90034400 	.word	0x90034400
90026080:	90034438 	.word	0x90034438
90026084:	90034470 	.word	0x90034470
90026088:	900344a8 	.word	0x900344a8
9002608c:	900344e0 	.word	0x900344e0

90026090 <GuiThread>:
* RETURN VALUE:
*   None.
*
*******************************************************************************/
static void GuiThread( const void* arg )
{
90026090:	b508      	push	{r3, lr}
  /* initialize Embedded Wizard application */
  if ( EwInit() == 0 )
90026092:	f7ff fd2b 	bl	90025aec <EwInit>
90026096:	b900      	cbnz	r0, 9002609a <GuiThread+0xa>
  while( EwProcess())
    ;

  /* de-initialize Embedded Wizard application */
  EwDone();
}
90026098:	bd08      	pop	{r3, pc}
  EwPrintSystemInfo();
9002609a:	f7ff fef5 	bl	90025e88 <EwPrintSystemInfo>
  while( EwProcess())
9002609e:	f7ff fe0f 	bl	90025cc0 <EwProcess>
900260a2:	2800      	cmp	r0, #0
900260a4:	d1fb      	bne.n	9002609e <GuiThread+0xe>
}
900260a6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  EwDone();
900260aa:	f7ff bdcd 	b.w	90025c48 <EwDone>
900260ae:	bf00      	nop

900260b0 <main>:
{
900260b0:	b530      	push	{r4, r5, lr}
  osThreadDef( EwThreadHandle, GuiThread, osPriorityNormal, 0, semtstSTACK_SIZE );
900260b2:	4d0f      	ldr	r5, [pc, #60]	; (900260f0 <main+0x40>)
{
900260b4:	b087      	sub	sp, #28
  EwBspSystemInit();
900260b6:	f001 fdff 	bl	90027cb8 <EwBspSystemInit>
  EwBspConsoleInit();
900260ba:	f001 f957 	bl	9002736c <EwBspConsoleInit>
  EwPrint( "Create UI thread...                          " );
900260be:	480d      	ldr	r0, [pc, #52]	; (900260f4 <main+0x44>)
900260c0:	f7f6 fd92 	bl	9001cbe8 <EwPrint>
  osThreadDef( EwThreadHandle, GuiThread, osPriorityNormal, 0, semtstSTACK_SIZE );
900260c4:	ac01      	add	r4, sp, #4
900260c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
900260c8:	682d      	ldr	r5, [r5, #0]
900260ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  osThreadCreate( osThread( EwThreadHandle ), (void*)0 );
900260cc:	2100      	movs	r1, #0
900260ce:	a801      	add	r0, sp, #4
  osThreadDef( EwThreadHandle, GuiThread, osPriorityNormal, 0, semtstSTACK_SIZE );
900260d0:	6025      	str	r5, [r4, #0]
  osThreadCreate( osThread( EwThreadHandle ), (void*)0 );
900260d2:	f006 f9f7 	bl	9002c4c4 <osThreadCreate>
  EwPrint( "[OK]\n" );
900260d6:	4808      	ldr	r0, [pc, #32]	; (900260f8 <main+0x48>)
900260d8:	f7f6 fd86 	bl	9001cbe8 <EwPrint>
  osKernelStart();
900260dc:	f006 f9ec 	bl	9002c4b8 <osKernelStart>
  EwBspConsoleDone();
900260e0:	f001 f95c 	bl	9002739c <EwBspConsoleDone>
  EwBspSystemDone();
900260e4:	f001 fe98 	bl	90027e18 <EwBspSystemDone>
}
900260e8:	2000      	movs	r0, #0
900260ea:	b007      	add	sp, #28
900260ec:	bd30      	pop	{r4, r5, pc}
900260ee:	bf00      	nop
900260f0:	9002fa68 	.word	0x9002fa68
900260f4:	90034528 	.word	0x90034528
900260f8:	90033b74 	.word	0x90033b74

900260fc <GfxSelectSurfaces>:
}


/* helper function to prepare access to surfaces by hardware */
static void GfxSelectSurfaces( unsigned long aDstSurfaceHandle, unsigned long aSrcSurfaceHandle )
{
900260fc:	b4f0      	push	{r4, r5, r6, r7}
  XGfxSurface* dstSurface = (XGfxSurface*)aDstSurfaceHandle;
  XGfxSurface* srcSurface = (XGfxSurface*)aSrcSurfaceHandle;

  /* GA ist started for every instruction separately, increment number for further signing of surfaces */
  TransactionNumber++;
900260fe:	4c2c      	ldr	r4, [pc, #176]	; (900261b0 <GfxSelectSurfaces+0xb4>)
90026100:	8823      	ldrh	r3, [r4, #0]
90026102:	3301      	adds	r3, #1
90026104:	b29b      	uxth	r3, r3
90026106:	8023      	strh	r3, [r4, #0]

  if ( dstSurface )
90026108:	b338      	cbz	r0, 9002615a <GfxSelectSurfaces+0x5e>
  {
    /* check if the given surface was previously modified by CPU */
    if ( dstSurface->Flags & EW_SURFACE_MODIFIED_BY_CPU )
9002610a:	6885      	ldr	r5, [r0, #8]
9002610c:	01aa      	lsls	r2, r5, #6
9002610e:	d51e      	bpl.n	9002614e <GfxSelectSurfaces+0x52>
    {
      /* writeback the cache for the address range of the pixel data */
      EW_CLEAN_CACHE( dstSurface->Pixel, dstSurface->Width * dstSurface->Height * dstSurface->BytesPerPixel );
90026110:	68c2      	ldr	r2, [r0, #12]
90026112:	e9d0 7600 	ldrd	r7, r6, [r0]
90026116:	fb06 f607 	mul.w	r6, r6, r7
9002611a:	fb02 f206 	mul.w	r2, r2, r6
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
9002611e:	2a00      	cmp	r2, #0
90026120:	dd13      	ble.n	9002614a <GfxSelectSurfaces+0x4e>
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90026122:	6983      	ldr	r3, [r0, #24]
90026124:	f003 051f 	and.w	r5, r3, #31
90026128:	4415      	add	r5, r2
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
9002612a:	f3bf 8f4f 	dsb	sy
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9002612e:	4e21      	ldr	r6, [pc, #132]	; (900261b4 <GfxSelectSurfaces+0xb8>)
90026130:	441d      	add	r5, r3
90026132:	f8c6 3268 	str.w	r3, [r6, #616]	; 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90026136:	3320      	adds	r3, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
90026138:	1aea      	subs	r2, r5, r3
9002613a:	2a00      	cmp	r2, #0
9002613c:	dcf9      	bgt.n	90026132 <GfxSelectSurfaces+0x36>
9002613e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90026142:	f3bf 8f6f 	isb	sy
90026146:	6885      	ldr	r5, [r0, #8]
90026148:	8823      	ldrh	r3, [r4, #0]

      /* clear the flag */
      dstSurface->Flags &= ~EW_SURFACE_MODIFIED_BY_CPU;
9002614a:	f025 7500 	bic.w	r5, r5, #33554432	; 0x2000000
    /* sign the surface now as modified by hardware graphics accelerator */
    dstSurface->Flags |= EW_SURFACE_MODIFIED_BY_GA;

    /* store the current transaction number */
    dstSurface->Flags &= ~EW_SURFACE_TRANSACTION_MASK;
    dstSurface->Flags |= ( TransactionNumber & EW_SURFACE_TRANSACTION_MASK );
9002614e:	4a1a      	ldr	r2, [pc, #104]	; (900261b8 <GfxSelectSurfaces+0xbc>)
90026150:	402a      	ands	r2, r5
90026152:	4313      	orrs	r3, r2
90026154:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
90026158:	6083      	str	r3, [r0, #8]
  }

  if ( srcSurface )
9002615a:	b139      	cbz	r1, 9002616c <GfxSelectSurfaces+0x70>
  {
    /* check if the given surface was previously modified by CPU */
    if ( srcSurface->Flags & EW_SURFACE_MODIFIED_BY_CPU )
9002615c:	688a      	ldr	r2, [r1, #8]
9002615e:	0193      	lsls	r3, r2, #6
90026160:	d406      	bmi.n	90026170 <GfxSelectSurfaces+0x74>
      /* clear the flag */
      srcSurface->Flags &= ~EW_SURFACE_MODIFIED_BY_CPU;
    }

    /* store the current transaction number */
    srcSurface->Flags &= ~EW_SURFACE_TRANSACTION_MASK;
90026162:	4b15      	ldr	r3, [pc, #84]	; (900261b8 <GfxSelectSurfaces+0xbc>)
    srcSurface->Flags |= ( TransactionNumber & EW_SURFACE_TRANSACTION_MASK );
90026164:	8820      	ldrh	r0, [r4, #0]
    srcSurface->Flags &= ~EW_SURFACE_TRANSACTION_MASK;
90026166:	4013      	ands	r3, r2
    srcSurface->Flags |= ( TransactionNumber & EW_SURFACE_TRANSACTION_MASK );
90026168:	4303      	orrs	r3, r0
9002616a:	608b      	str	r3, [r1, #8]
  }
}
9002616c:	bcf0      	pop	{r4, r5, r6, r7}
9002616e:	4770      	bx	lr
      EW_CLEAN_CACHE( srcSurface->Pixel, srcSurface->Width * srcSurface->Height * srcSurface->BytesPerPixel );
90026170:	e9d1 3500 	ldrd	r3, r5, [r1]
90026174:	68c8      	ldr	r0, [r1, #12]
90026176:	fb05 f503 	mul.w	r5, r5, r3
9002617a:	fb00 f505 	mul.w	r5, r0, r5
    if ( dsize > 0 ) { 
9002617e:	2d00      	cmp	r5, #0
90026180:	dd12      	ble.n	900261a8 <GfxSelectSurfaces+0xac>
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90026182:	698b      	ldr	r3, [r1, #24]
90026184:	f003 001f 	and.w	r0, r3, #31
90026188:	4428      	add	r0, r5
  __ASM volatile ("dsb 0xF":::"memory");
9002618a:	f3bf 8f4f 	dsb	sy
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
9002618e:	4d09      	ldr	r5, [pc, #36]	; (900261b4 <GfxSelectSurfaces+0xb8>)
90026190:	4418      	add	r0, r3
90026192:	f8c5 3268 	str.w	r3, [r5, #616]	; 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
90026196:	3320      	adds	r3, #32
      } while ( op_size > 0 );
90026198:	1ac2      	subs	r2, r0, r3
9002619a:	2a00      	cmp	r2, #0
9002619c:	dcf9      	bgt.n	90026192 <GfxSelectSurfaces+0x96>
9002619e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900261a2:	f3bf 8f6f 	isb	sy
900261a6:	688a      	ldr	r2, [r1, #8]
      srcSurface->Flags &= ~EW_SURFACE_MODIFIED_BY_CPU;
900261a8:	f022 7200 	bic.w	r2, r2, #33554432	; 0x2000000
900261ac:	e7d9      	b.n	90026162 <GfxSelectSurfaces+0x66>
900261ae:	bf00      	nop
900261b0:	20000378 	.word	0x20000378
900261b4:	e000ed00 	.word	0xe000ed00
900261b8:	ffff0000 	.word	0xffff0000

900261bc <GfxInitGfx>:
{
900261bc:	b470      	push	{r4, r5, r6}
  EwMaxGlyphSurfaceWidth                    = EW_MAX_GLYPH_SURFACE_WIDTH;
900261be:	f44f 7280 	mov.w	r2, #256	; 0x100
  EwMaxSurfaceCacheSize                     = EW_MAX_SURFACE_CACHE_SIZE;
900261c2:	4b10      	ldr	r3, [pc, #64]	; (90026204 <GfxInitGfx+0x48>)
900261c4:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
  EwMaxGlyphSurfaceWidth                    = EW_MAX_GLYPH_SURFACE_WIDTH;
900261c8:	490f      	ldr	r1, [pc, #60]	; (90026208 <GfxInitGfx+0x4c>)
  EwMaxGlyphSurfaceHeight                   = EW_MAX_GLYPH_SURFACE_HEIGHT;
900261ca:	4e10      	ldr	r6, [pc, #64]	; (9002620c <GfxInitGfx+0x50>)
  EwMaxIssueTasks                           = EW_MAX_ISSUE_TASKS;
900261cc:	2564      	movs	r5, #100	; 0x64
900261ce:	4c10      	ldr	r4, [pc, #64]	; (90026210 <GfxInitGfx+0x54>)
  EwMaxSurfaceCacheSize                     = EW_MAX_SURFACE_CACHE_SIZE;
900261d0:	6018      	str	r0, [r3, #0]
  EwLazyLoadBitmaps                         = EW_LAZY_LOAD_BITMAPS;
900261d2:	2001      	movs	r0, #1
  EwMaxGlyphSurfaceWidth                    = EW_MAX_GLYPH_SURFACE_WIDTH;
900261d4:	600a      	str	r2, [r1, #0]
  EwDiscardBitmapsIfNotUsedInCurrentUpdate  = EW_DISCARD_BITMAPS_IF_NOT_USED_IN_CURRENT_UPDATE;
900261d6:	2300      	movs	r3, #0
  EwMaxGlyphSurfaceHeight                   = EW_MAX_GLYPH_SURFACE_HEIGHT;
900261d8:	6032      	str	r2, [r6, #0]
  EwMaxStringCacheSize                      = EW_MAX_STRING_CACHE_SIZE;
900261da:	f44f 4180 	mov.w	r1, #16384	; 0x4000
  EwLazyLoadBitmaps                         = EW_LAZY_LOAD_BITMAPS;
900261de:	4a0d      	ldr	r2, [pc, #52]	; (90026214 <GfxInitGfx+0x58>)
  EwMaxIssueTasks                           = EW_MAX_ISSUE_TASKS;
900261e0:	6025      	str	r5, [r4, #0]
  EwLazyLoadBitmaps                         = EW_LAZY_LOAD_BITMAPS;
900261e2:	6010      	str	r0, [r2, #0]
  EwLazyLoadBitmapsIfAnimatedOnly           = EW_LAZY_LOAD_BITMAPS_IF_ANIMATED_ONLY;
900261e4:	4c0c      	ldr	r4, [pc, #48]	; (90026218 <GfxInitGfx+0x5c>)
  EwDiscardBitmaps                          = EW_DISCARD_BITMAPS;
900261e6:	4a0d      	ldr	r2, [pc, #52]	; (9002621c <GfxInitGfx+0x60>)
  EwLazyLoadBitmapsIfAnimatedOnly           = EW_LAZY_LOAD_BITMAPS_IF_ANIMATED_ONLY;
900261e8:	6020      	str	r0, [r4, #0]
  EwDiscardBitmaps                          = EW_DISCARD_BITMAPS;
900261ea:	6010      	str	r0, [r2, #0]
  EwDiscardBitmapsIfAnimatedOnly            = EW_DISCARD_BITMAPS_IF_ANIMATED_ONLY;
900261ec:	4c0c      	ldr	r4, [pc, #48]	; (90026220 <GfxInitGfx+0x64>)
  EwDiscardBitmapsIfNotUsedInCurrentUpdate  = EW_DISCARD_BITMAPS_IF_NOT_USED_IN_CURRENT_UPDATE;
900261ee:	4a0d      	ldr	r2, [pc, #52]	; (90026224 <GfxInitGfx+0x68>)
  EwDiscardBitmapsIfNotUsedInRecentUpdates  = EW_DISCARD_BITMAPS_IF_NOT_USED_IN_RECENT_UPDATES;
900261f0:	4d0d      	ldr	r5, [pc, #52]	; (90026228 <GfxInitGfx+0x6c>)
  EwDiscardBitmapsIfAnimatedOnly            = EW_DISCARD_BITMAPS_IF_ANIMATED_ONLY;
900261f2:	6020      	str	r0, [r4, #0]
  EwDiscardBitmapsIfNotUsedInCurrentUpdate  = EW_DISCARD_BITMAPS_IF_NOT_USED_IN_CURRENT_UPDATE;
900261f4:	6013      	str	r3, [r2, #0]
    EwPreserveFramebufferContent = 0;
900261f6:	4c0d      	ldr	r4, [pc, #52]	; (9002622c <GfxInitGfx+0x70>)
  EwMaxStringCacheSize                      = EW_MAX_STRING_CACHE_SIZE;
900261f8:	4a0d      	ldr	r2, [pc, #52]	; (90026230 <GfxInitGfx+0x74>)
  EwDiscardBitmapsIfNotUsedInRecentUpdates  = EW_DISCARD_BITMAPS_IF_NOT_USED_IN_RECENT_UPDATES;
900261fa:	602b      	str	r3, [r5, #0]
    EwPreserveFramebufferContent = 0;
900261fc:	6023      	str	r3, [r4, #0]
  EwMaxStringCacheSize                      = EW_MAX_STRING_CACHE_SIZE;
900261fe:	6011      	str	r1, [r2, #0]
}
90026200:	bc70      	pop	{r4, r5, r6}
90026202:	4770      	bx	lr
90026204:	20000014 	.word	0x20000014
90026208:	2000001c 	.word	0x2000001c
9002620c:	20000020 	.word	0x20000020
90026210:	20000018 	.word	0x20000018
90026214:	20000004 	.word	0x20000004
90026218:	200000f8 	.word	0x200000f8
9002621c:	2000000c 	.word	0x2000000c
90026220:	200001a4 	.word	0x200001a4
90026224:	200001a8 	.word	0x200001a8
90026228:	200001ac 	.word	0x200001ac
9002622c:	20000010 	.word	0x20000010
90026230:	20000028 	.word	0x20000028

90026234 <GfxInitViewport>:
{
90026234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026238:	b083      	sub	sp, #12
9002623a:	e9dd 760c 	ldrd	r7, r6, [sp, #48]	; 0x30
9002623e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
    if (( aWidth > aExtentWidth ) || ( aHeight != aExtentHeight ))
90026242:	42b8      	cmp	r0, r7
90026244:	dc5f      	bgt.n	90026306 <GfxInitViewport+0xd2>
90026246:	1b8d      	subs	r5, r1, r6
90026248:	bf18      	it	ne
9002624a:	2501      	movne	r5, #1
9002624c:	2d00      	cmp	r5, #0
9002624e:	d15a      	bne.n	90026306 <GfxInitViewport+0xd2>
  if ( !aDisplay1 )
90026250:	f1b8 0f00 	cmp.w	r8, #0
90026254:	f000 8093 	beq.w	9002637e <GfxInitViewport+0x14a>
    if ( !aDisplay2 )
90026258:	f1b9 0f00 	cmp.w	r9, #0
9002625c:	d072      	beq.n	90026344 <GfxInitViewport+0x110>
  XGfxViewport* viewport = (XGfxViewport*)EwAlloc( sizeof( XGfxViewport ));
9002625e:	2008      	movs	r0, #8
90026260:	f000 fd28 	bl	90026cb4 <EwAlloc>
  if ( !viewport )
90026264:	4604      	mov	r4, r0
90026266:	2800      	cmp	r0, #0
90026268:	d05c      	beq.n	90026324 <GfxInitViewport+0xf0>
  viewport->FrameBuffer      = 0;
9002626a:	6005      	str	r5, [r0, #0]
  viewport->FrameBuffer = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ));
9002626c:	2028      	movs	r0, #40	; 0x28
  viewport->DoubleBuffer     = 0;
9002626e:	6065      	str	r5, [r4, #4]
  viewport->FrameBuffer = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ));
90026270:	f7f3 fd72 	bl	90019d58 <EwAllocVideo>
90026274:	4605      	mov	r5, r0
90026276:	6020      	str	r0, [r4, #0]
  if ( !viewport->FrameBuffer )
90026278:	2800      	cmp	r0, #0
9002627a:	d072      	beq.n	90026362 <GfxInitViewport+0x12e>
  EwZero( viewport->FrameBuffer, sizeof( XGfxSurface ));
9002627c:	2128      	movs	r1, #40	; 0x28
  viewport->FrameBuffer->Flags          = EW_SURFACE_PREALLOCATED;
9002627e:	f04f 7a80 	mov.w	sl, #16777216	; 0x1000000
  EwZero( viewport->FrameBuffer, sizeof( XGfxSurface ));
90026282:	f000 fd3f 	bl	90026d04 <EwZero>
  viewport->FrameBuffer->BytesPerPixel  = 2;
90026286:	f04f 0b02 	mov.w	fp, #2
  viewport->FrameBuffer->Width          = aExtentWidth;
9002628a:	6823      	ldr	r3, [r4, #0]
  viewport->FrameBuffer->Format         = EW_PIXEL_FORMAT_SCREEN;
9002628c:	f04f 35ff 	mov.w	r5, #4294967295
    viewport->DoubleBuffer = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ));
90026290:	2028      	movs	r0, #40	; 0x28
  viewport->FrameBuffer->OrigPixel      = aDisplay1;
90026292:	f8c3 8020 	str.w	r8, [r3, #32]
  viewport->FrameBuffer->Format         = EW_PIXEL_FORMAT_SCREEN;
90026296:	611d      	str	r5, [r3, #16]
  viewport->FrameBuffer->Height         = aExtentHeight;
90026298:	e9c3 7600 	strd	r7, r6, [r3]
  viewport->FrameBuffer->OrigHeight     = aExtentHeight;
9002629c:	e9c3 8606 	strd	r8, r6, [r3, #24]
  viewport->FrameBuffer->BytesPerPixel  = 2;
900262a0:	e9c3 ab02 	strd	sl, fp, [r3, #8]
    viewport->DoubleBuffer = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ));
900262a4:	f7f3 fd58 	bl	90019d58 <EwAllocVideo>
900262a8:	6060      	str	r0, [r4, #4]
    if ( !viewport->DoubleBuffer )
900262aa:	2800      	cmp	r0, #0
900262ac:	d074      	beq.n	90026398 <GfxInitViewport+0x164>
    EwZero( viewport->DoubleBuffer, sizeof( XGfxSurface ));
900262ae:	2128      	movs	r1, #40	; 0x28
900262b0:	f000 fd28 	bl	90026d04 <EwZero>
    viewport->DoubleBuffer->Width          = aExtentWidth;
900262b4:	6863      	ldr	r3, [r4, #4]
    if ( !EwBspGraphicsInit( DMA2D_OUTPUT_RGB565 ))
900262b6:	4658      	mov	r0, fp
    viewport->DoubleBuffer->Format         = EW_PIXEL_FORMAT_SCREEN;
900262b8:	611d      	str	r5, [r3, #16]
    viewport->DoubleBuffer->OrigPixel      = aDisplay2;
900262ba:	f8c3 9020 	str.w	r9, [r3, #32]
    viewport->DoubleBuffer->Height         = aExtentHeight;
900262be:	e9c3 7600 	strd	r7, r6, [r3]
    viewport->DoubleBuffer->BytesPerPixel  = 2;
900262c2:	e9c3 ab02 	strd	sl, fp, [r3, #8]
    viewport->DoubleBuffer->OrigHeight     = aExtentHeight;
900262c6:	e9c3 9606 	strd	r9, r6, [r3, #24]
    if ( !EwBspGraphicsInit( DMA2D_OUTPUT_RGB565 ))
900262ca:	f001 fa6d 	bl	900277a8 <EwBspGraphicsInit>
900262ce:	4605      	mov	r5, r0
900262d0:	2800      	cmp	r0, #0
900262d2:	d071      	beq.n	900263b8 <GfxInitViewport+0x184>
  EwResourcesMemory += sizeof( XGfxViewport );
900262d4:	493f      	ldr	r1, [pc, #252]	; (900263d4 <GfxInitViewport+0x1a0>)
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900262d6:	4840      	ldr	r0, [pc, #256]	; (900263d8 <GfxInitViewport+0x1a4>)
    EwResourcesMemory += sizeof( XGfxSurface );
900262d8:	680b      	ldr	r3, [r1, #0]
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900262da:	6805      	ldr	r5, [r0, #0]
    EwResourcesMemory += sizeof( XGfxSurface );
900262dc:	f103 0258 	add.w	r2, r3, #88	; 0x58
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
900262e0:	4b3e      	ldr	r3, [pc, #248]	; (900263dc <GfxInitViewport+0x1a8>)
    EwResourcesMemory += sizeof( XGfxSurface );
900262e2:	600a      	str	r2, [r1, #0]
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900262e4:	42aa      	cmp	r2, r5
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
900262e6:	493e      	ldr	r1, [pc, #248]	; (900263e0 <GfxInitViewport+0x1ac>)
    EwResourcesMemoryPeak = EwResourcesMemory;
900262e8:	bfc8      	it	gt
900262ea:	6002      	strgt	r2, [r0, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
900262ec:	681b      	ldr	r3, [r3, #0]
900262ee:	6808      	ldr	r0, [r1, #0]
900262f0:	493c      	ldr	r1, [pc, #240]	; (900263e4 <GfxInitViewport+0x1b0>)
900262f2:	4403      	add	r3, r0
900262f4:	6808      	ldr	r0, [r1, #0]
900262f6:	4413      	add	r3, r2
900262f8:	4283      	cmp	r3, r0
  return (unsigned long)viewport;
900262fa:	4620      	mov	r0, r4
    EwMemoryPeak = EwObjectsMemory + EwStringsMemory + EwResourcesMemory;
900262fc:	bfc8      	it	gt
900262fe:	600b      	strgt	r3, [r1, #0]
}
90026300:	b003      	add	sp, #12
90026302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      EW_ERROR( Err02 );
90026306:	22ea      	movs	r2, #234	; 0xea
90026308:	4937      	ldr	r1, [pc, #220]	; (900263e8 <GfxInitViewport+0x1b4>)
9002630a:	4838      	ldr	r0, [pc, #224]	; (900263ec <GfxInitViewport+0x1b8>)
9002630c:	f7f6 fc6c 	bl	9001cbe8 <EwPrint>
90026310:	4837      	ldr	r0, [pc, #220]	; (900263f0 <GfxInitViewport+0x1bc>)
90026312:	f7f6 fc69 	bl	9001cbe8 <EwPrint>
90026316:	4837      	ldr	r0, [pc, #220]	; (900263f4 <GfxInitViewport+0x1c0>)
90026318:	f7f6 fc66 	bl	9001cbe8 <EwPrint>
      return 0;
9002631c:	2000      	movs	r0, #0
}
9002631e:	b003      	add	sp, #12
90026320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    EW_ERROR( Err03 );
90026324:	f44f 7283 	mov.w	r2, #262	; 0x106
90026328:	492f      	ldr	r1, [pc, #188]	; (900263e8 <GfxInitViewport+0x1b4>)
9002632a:	4830      	ldr	r0, [pc, #192]	; (900263ec <GfxInitViewport+0x1b8>)
9002632c:	f7f6 fc5c 	bl	9001cbe8 <EwPrint>
90026330:	4831      	ldr	r0, [pc, #196]	; (900263f8 <GfxInitViewport+0x1c4>)
90026332:	f7f6 fc59 	bl	9001cbe8 <EwPrint>
90026336:	482f      	ldr	r0, [pc, #188]	; (900263f4 <GfxInitViewport+0x1c0>)
90026338:	f7f6 fc56 	bl	9001cbe8 <EwPrint>
    return 0;
9002633c:	4620      	mov	r0, r4
}
9002633e:	b003      	add	sp, #12
90026340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      EW_ERROR( Err04 );
90026344:	22fc      	movs	r2, #252	; 0xfc
90026346:	4928      	ldr	r1, [pc, #160]	; (900263e8 <GfxInitViewport+0x1b4>)
90026348:	4828      	ldr	r0, [pc, #160]	; (900263ec <GfxInitViewport+0x1b8>)
9002634a:	f7f6 fc4d 	bl	9001cbe8 <EwPrint>
9002634e:	482b      	ldr	r0, [pc, #172]	; (900263fc <GfxInitViewport+0x1c8>)
90026350:	f7f6 fc4a 	bl	9001cbe8 <EwPrint>
90026354:	4827      	ldr	r0, [pc, #156]	; (900263f4 <GfxInitViewport+0x1c0>)
90026356:	f7f6 fc47 	bl	9001cbe8 <EwPrint>
      return 0;
9002635a:	4648      	mov	r0, r9
}
9002635c:	b003      	add	sp, #12
9002635e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    EW_ERROR( Err03 );
90026362:	f44f 7288 	mov.w	r2, #272	; 0x110
90026366:	4920      	ldr	r1, [pc, #128]	; (900263e8 <GfxInitViewport+0x1b4>)
90026368:	4820      	ldr	r0, [pc, #128]	; (900263ec <GfxInitViewport+0x1b8>)
9002636a:	f7f6 fc3d 	bl	9001cbe8 <EwPrint>
9002636e:	4822      	ldr	r0, [pc, #136]	; (900263f8 <GfxInitViewport+0x1c4>)
90026370:	f7f6 fc3a 	bl	9001cbe8 <EwPrint>
90026374:	481f      	ldr	r0, [pc, #124]	; (900263f4 <GfxInitViewport+0x1c0>)
90026376:	f7f6 fc37 	bl	9001cbe8 <EwPrint>
    return 0;
9002637a:	4628      	mov	r0, r5
9002637c:	e7c0      	b.n	90026300 <GfxInitViewport+0xcc>
    EW_ERROR( Err01 );
9002637e:	22f3      	movs	r2, #243	; 0xf3
90026380:	4919      	ldr	r1, [pc, #100]	; (900263e8 <GfxInitViewport+0x1b4>)
90026382:	481a      	ldr	r0, [pc, #104]	; (900263ec <GfxInitViewport+0x1b8>)
90026384:	f7f6 fc30 	bl	9001cbe8 <EwPrint>
90026388:	481d      	ldr	r0, [pc, #116]	; (90026400 <GfxInitViewport+0x1cc>)
9002638a:	f7f6 fc2d 	bl	9001cbe8 <EwPrint>
9002638e:	4819      	ldr	r0, [pc, #100]	; (900263f4 <GfxInitViewport+0x1c0>)
90026390:	f7f6 fc2a 	bl	9001cbe8 <EwPrint>
    return 0;
90026394:	4640      	mov	r0, r8
90026396:	e7b3      	b.n	90026300 <GfxInitViewport+0xcc>
      EW_ERROR( Err03 );
90026398:	f240 1225 	movw	r2, #293	; 0x125
9002639c:	4912      	ldr	r1, [pc, #72]	; (900263e8 <GfxInitViewport+0x1b4>)
9002639e:	9001      	str	r0, [sp, #4]
900263a0:	4812      	ldr	r0, [pc, #72]	; (900263ec <GfxInitViewport+0x1b8>)
900263a2:	f7f6 fc21 	bl	9001cbe8 <EwPrint>
900263a6:	4814      	ldr	r0, [pc, #80]	; (900263f8 <GfxInitViewport+0x1c4>)
900263a8:	f7f6 fc1e 	bl	9001cbe8 <EwPrint>
900263ac:	4811      	ldr	r0, [pc, #68]	; (900263f4 <GfxInitViewport+0x1c0>)
900263ae:	f7f6 fc1b 	bl	9001cbe8 <EwPrint>
      return 0;
900263b2:	9b01      	ldr	r3, [sp, #4]
900263b4:	4618      	mov	r0, r3
900263b6:	e7a3      	b.n	90026300 <GfxInitViewport+0xcc>
      EW_ERROR( Err05 );
900263b8:	f240 1245 	movw	r2, #325	; 0x145
900263bc:	490a      	ldr	r1, [pc, #40]	; (900263e8 <GfxInitViewport+0x1b4>)
900263be:	480b      	ldr	r0, [pc, #44]	; (900263ec <GfxInitViewport+0x1b8>)
900263c0:	f7f6 fc12 	bl	9001cbe8 <EwPrint>
900263c4:	480f      	ldr	r0, [pc, #60]	; (90026404 <GfxInitViewport+0x1d0>)
900263c6:	f7f6 fc0f 	bl	9001cbe8 <EwPrint>
900263ca:	480a      	ldr	r0, [pc, #40]	; (900263f4 <GfxInitViewport+0x1c0>)
900263cc:	f7f6 fc0c 	bl	9001cbe8 <EwPrint>
      return 0;
900263d0:	4628      	mov	r0, r5
900263d2:	e795      	b.n	90026300 <GfxInitViewport+0xcc>
900263d4:	200002bc 	.word	0x200002bc
900263d8:	200002d8 	.word	0x200002d8
900263dc:	200002ac 	.word	0x200002ac
900263e0:	200002b8 	.word	0x200002b8
900263e4:	200002c0 	.word	0x200002c0
900263e8:	90034558 	.word	0x90034558
900263ec:	90034598 	.word	0x90034598
900263f0:	900345ac 	.word	0x900345ac
900263f4:	900347f8 	.word	0x900347f8
900263f8:	90034644 	.word	0x90034644
900263fc:	90034624 	.word	0x90034624
90026400:	90034604 	.word	0x90034604
90026404:	90034660 	.word	0x90034660

90026408 <GfxDoneViewport>:
{
90026408:	b510      	push	{r4, lr}
9002640a:	4604      	mov	r4, r0
  EwBspGraphicsWaitForCompletion();
9002640c:	f001 fa02 	bl	90027814 <EwBspGraphicsWaitForCompletion>
    EwBspGraphicsDone();
90026410:	f001 f9fa 	bl	90027808 <EwBspGraphicsDone>
  if ( viewport->DoubleBuffer )
90026414:	6860      	ldr	r0, [r4, #4]
90026416:	b108      	cbz	r0, 9002641c <GfxDoneViewport+0x14>
    EwFree( viewport->DoubleBuffer );
90026418:	f000 fc4e 	bl	90026cb8 <EwFree>
  if ( viewport->FrameBuffer )
9002641c:	6820      	ldr	r0, [r4, #0]
9002641e:	b108      	cbz	r0, 90026424 <GfxDoneViewport+0x1c>
    EwFree( viewport->FrameBuffer );
90026420:	f000 fc4a 	bl	90026cb8 <EwFree>
  EwFree( viewport );
90026424:	4620      	mov	r0, r4
90026426:	f000 fc47 	bl	90026cb8 <EwFree>
    EwResourcesMemory -= sizeof( XGfxSurface );
9002642a:	4a02      	ldr	r2, [pc, #8]	; (90026434 <GfxDoneViewport+0x2c>)
9002642c:	6813      	ldr	r3, [r2, #0]
9002642e:	3b58      	subs	r3, #88	; 0x58
90026430:	6013      	str	r3, [r2, #0]
}
90026432:	bd10      	pop	{r4, pc}
90026434:	200002bc 	.word	0x200002bc

90026438 <GfxBeginUpdate>:
{
90026438:	b510      	push	{r4, lr}
9002643a:	4604      	mov	r4, r0
  EwBspGraphicsWaitForCompletion();
9002643c:	f001 f9ea 	bl	90027814 <EwBspGraphicsWaitForCompletion>
    LoadedClutSurface = 0;
90026440:	4b03      	ldr	r3, [pc, #12]	; (90026450 <GfxBeginUpdate+0x18>)
90026442:	2200      	movs	r2, #0
90026444:	601a      	str	r2, [r3, #0]
  EwBspDisplayWaitForCompletion();
90026446:	f001 f92d 	bl	900276a4 <EwBspDisplayWaitForCompletion>
}
9002644a:	6860      	ldr	r0, [r4, #4]
9002644c:	bd10      	pop	{r4, pc}
9002644e:	bf00      	nop
90026450:	20000374 	.word	0x20000374

90026454 <GfxBeginUpdateArea>:
{
90026454:	b510      	push	{r4, lr}
  EwBspGraphicsWaitForCompletion();
90026456:	f001 f9dd 	bl	90027814 <EwBspGraphicsWaitForCompletion>
    LoadedClutSurface = 0;
9002645a:	2400      	movs	r4, #0
9002645c:	4b08      	ldr	r3, [pc, #32]	; (90026480 <GfxBeginUpdateArea+0x2c>)
9002645e:	601c      	str	r4, [r3, #0]
  EwBspDisplayWaitForCompletion();
90026460:	f001 f920 	bl	900276a4 <EwBspDisplayWaitForCompletion>
      EW_ERROR( Err07 );
90026464:	f240 12fb 	movw	r2, #507	; 0x1fb
90026468:	4906      	ldr	r1, [pc, #24]	; (90026484 <GfxBeginUpdateArea+0x30>)
9002646a:	4807      	ldr	r0, [pc, #28]	; (90026488 <GfxBeginUpdateArea+0x34>)
9002646c:	f7f6 fbbc 	bl	9001cbe8 <EwPrint>
90026470:	4806      	ldr	r0, [pc, #24]	; (9002648c <GfxBeginUpdateArea+0x38>)
90026472:	f7f6 fbb9 	bl	9001cbe8 <EwPrint>
90026476:	4806      	ldr	r0, [pc, #24]	; (90026490 <GfxBeginUpdateArea+0x3c>)
90026478:	f7f6 fbb6 	bl	9001cbe8 <EwPrint>
}
9002647c:	4620      	mov	r0, r4
9002647e:	bd10      	pop	{r4, pc}
90026480:	20000374 	.word	0x20000374
90026484:	90034558 	.word	0x90034558
90026488:	90034598 	.word	0x90034598
9002648c:	90034698 	.word	0x90034698
90026490:	900347f8 	.word	0x900347f8

90026494 <GfxEndUpdate>:
  if (( aWidth <= 0 ) || ( aHeight <= 0 ))
90026494:	2b00      	cmp	r3, #0
{
90026496:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002649a:	f8dd 8020 	ldr.w	r8, [sp, #32]
  if (( aWidth <= 0 ) || ( aHeight <= 0 ))
9002649e:	dd3c      	ble.n	9002651a <GfxEndUpdate+0x86>
900264a0:	f1b8 0f00 	cmp.w	r8, #0
900264a4:	dd39      	ble.n	9002651a <GfxEndUpdate+0x86>
  EwBspGraphicsWaitForCompletion();
900264a6:	4605      	mov	r5, r0
900264a8:	4617      	mov	r7, r2
900264aa:	4699      	mov	r9, r3
900264ac:	460e      	mov	r6, r1
900264ae:	f001 f9b1 	bl	90027814 <EwBspGraphicsWaitForCompletion>
    viewport->DoubleBuffer = viewport->FrameBuffer;
900264b2:	e9d5 2400 	ldrd	r2, r4, [r5]
  if ( viewport->FrameBuffer->Flags & EW_SURFACE_MODIFIED_BY_CPU )
900264b6:	68a3      	ldr	r3, [r4, #8]
    viewport->DoubleBuffer = viewport->FrameBuffer;
900264b8:	e9c5 4200 	strd	r4, r2, [r5]
  if ( viewport->FrameBuffer->Flags & EW_SURFACE_MODIFIED_BY_CPU )
900264bc:	019a      	lsls	r2, r3, #6
900264be:	d51f      	bpl.n	90026500 <GfxEndUpdate+0x6c>
    EW_CLEAN_CACHE( viewport->FrameBuffer->Pixel,
900264c0:	68e2      	ldr	r2, [r4, #12]
900264c2:	e9d4 0100 	ldrd	r0, r1, [r4]
900264c6:	fb01 f100 	mul.w	r1, r1, r0
900264ca:	fb02 f101 	mul.w	r1, r2, r1
    if ( dsize > 0 ) { 
900264ce:	2900      	cmp	r1, #0
900264d0:	dd13      	ble.n	900264fa <GfxEndUpdate+0x66>
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
900264d2:	69a4      	ldr	r4, [r4, #24]
900264d4:	f004 021f 	and.w	r2, r4, #31
900264d8:	440a      	add	r2, r1
  __ASM volatile ("dsb 0xF":::"memory");
900264da:	f3bf 8f4f 	dsb	sy
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
900264de:	4910      	ldr	r1, [pc, #64]	; (90026520 <GfxEndUpdate+0x8c>)
900264e0:	4422      	add	r2, r4
900264e2:	f8c1 4268 	str.w	r4, [r1, #616]	; 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
900264e6:	3420      	adds	r4, #32
      } while ( op_size > 0 );
900264e8:	1b13      	subs	r3, r2, r4
900264ea:	2b00      	cmp	r3, #0
900264ec:	dcf9      	bgt.n	900264e2 <GfxEndUpdate+0x4e>
900264ee:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900264f2:	f3bf 8f6f 	isb	sy
900264f6:	682c      	ldr	r4, [r5, #0]
900264f8:	68a3      	ldr	r3, [r4, #8]
    viewport->FrameBuffer->Flags &= ~EW_SURFACE_MODIFIED_BY_CPU;
900264fa:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
900264fe:	60a3      	str	r3, [r4, #8]
  viewport->FrameBuffer->Height = viewport->FrameBuffer->OrigHeight;
90026500:	69e5      	ldr	r5, [r4, #28]
  EwBspDisplayCommitBuffer( viewport->FrameBuffer->Pixel, aX, aY, aWidth, aHeight );
90026502:	464b      	mov	r3, r9
  viewport->FrameBuffer->Pixel  = viewport->FrameBuffer->OrigPixel;
90026504:	6a20      	ldr	r0, [r4, #32]
  EwBspDisplayCommitBuffer( viewport->FrameBuffer->Pixel, aX, aY, aWidth, aHeight );
90026506:	463a      	mov	r2, r7
  viewport->FrameBuffer->Height = viewport->FrameBuffer->OrigHeight;
90026508:	6065      	str	r5, [r4, #4]
  EwBspDisplayCommitBuffer( viewport->FrameBuffer->Pixel, aX, aY, aWidth, aHeight );
9002650a:	4631      	mov	r1, r6
  viewport->FrameBuffer->Pixel  = viewport->FrameBuffer->OrigPixel;
9002650c:	61a0      	str	r0, [r4, #24]
  EwBspDisplayCommitBuffer( viewport->FrameBuffer->Pixel, aX, aY, aWidth, aHeight );
9002650e:	f8cd 8020 	str.w	r8, [sp, #32]
}
90026512:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  EwBspDisplayCommitBuffer( viewport->FrameBuffer->Pixel, aX, aY, aWidth, aHeight );
90026516:	f001 b8e1 	b.w	900276dc <EwBspDisplayCommitBuffer>
}
9002651a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002651e:	bf00      	nop
90026520:	e000ed00 	.word	0xe000ed00

90026524 <GfxCreateSurface>:
{
90026524:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026528:	4689      	mov	r9, r1
  if ( aFormat == EW_PIXEL_FORMAT_NATIVE )
9002652a:	4605      	mov	r5, r0
{
9002652c:	4690      	mov	r8, r2
  if ( aFormat == EW_PIXEL_FORMAT_NATIVE )
9002652e:	2800      	cmp	r0, #0
90026530:	d052      	beq.n	900265d8 <GfxCreateSurface+0xb4>
  else if ( aFormat == EW_PIXEL_FORMAT_ALPHA8 )
90026532:	2802      	cmp	r0, #2
90026534:	d00a      	beq.n	9002654c <GfxCreateSurface+0x28>
  else if ( aFormat == EW_PIXEL_FORMAT_RGB565 )
90026536:	2803      	cmp	r0, #3
90026538:	d003      	beq.n	90026542 <GfxCreateSurface+0x1e>
  else if ( aFormat == EW_PIXEL_FORMAT_INDEX8 )
9002653a:	2801      	cmp	r0, #1
9002653c:	d051      	beq.n	900265e2 <GfxCreateSurface+0xbe>
  else if ( aFormat == EW_PIXEL_FORMAT_SCREEN )
9002653e:	1c43      	adds	r3, r0, #1
90026540:	d147      	bne.n	900265d2 <GfxCreateSurface+0xae>
90026542:	2300      	movs	r3, #0
    bytesPerPixel = 2;
90026544:	f04f 0a02 	mov.w	sl, #2
  int                     clutSize      = 0;
90026548:	469b      	mov	fp, r3
9002654a:	e003      	b.n	90026554 <GfxCreateSurface+0x30>
9002654c:	2300      	movs	r3, #0
    bytesPerPixel = 1;
9002654e:	f04f 0a01 	mov.w	sl, #1
  int                     clutSize      = 0;
90026552:	469b      	mov	fp, r3
  bitmapSize = aWidth * aHeight * bytesPerPixel + 2 * EW_CACHE_LINE_SIZE;
90026554:	fb08 f609 	mul.w	r6, r8, r9
90026558:	fb0a f606 	mul.w	r6, sl, r6
9002655c:	3640      	adds	r6, #64	; 0x40
  surface = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ) + bitmapSize + clutSize );
9002655e:	18f7      	adds	r7, r6, r3
90026560:	f107 0028 	add.w	r0, r7, #40	; 0x28
90026564:	f7f3 fbf8 	bl	90019d58 <EwAllocVideo>
  if ( !surface )
90026568:	4604      	mov	r4, r0
9002656a:	2800      	cmp	r0, #0
9002656c:	d031      	beq.n	900265d2 <GfxCreateSurface+0xae>
  EwZero( surface, sizeof( XGfxSurface ));
9002656e:	2128      	movs	r1, #40	; 0x28
90026570:	f000 fbc8 	bl	90026d04 <EwZero>
                            + EW_CACHE_ALIGNMENT ) & ~( EW_CACHE_ALIGNMENT ));
90026574:	f104 0347 	add.w	r3, r4, #71	; 0x47
  surface->Flags          = 0;
90026578:	2100      	movs	r1, #0
  surface->AllocSize      = bitmapSize + clutSize;
9002657a:	eb0b 0206 	add.w	r2, fp, r6
                            + EW_CACHE_ALIGNMENT ) & ~( EW_CACHE_ALIGNMENT ));
9002657e:	f023 031f 	bic.w	r3, r3, #31
90026582:	4620      	mov	r0, r4
  surface->Flags          = 0;
90026584:	60a1      	str	r1, [r4, #8]
  surface->AllocSize      = bitmapSize + clutSize;
90026586:	6162      	str	r2, [r4, #20]
  surface->Pixel          = (void*)(((unsigned long)( surface + 1 )
90026588:	61a3      	str	r3, [r4, #24]
  surface->Height         = aHeight;
9002658a:	e9c4 9800 	strd	r9, r8, [r4]
  surface->Format         = aFormat;
9002658e:	e9c4 a503 	strd	sl, r5, [r4, #12]
  if ( clutSize > 0 )
90026592:	f1bb 0f00 	cmp.w	fp, #0
90026596:	d005      	beq.n	900265a4 <GfxCreateSurface+0x80>
    surface->Clut         = (void*)(((unsigned long)( surface + 1 ) + bitmapSize + 3 ) &~ 3 );
90026598:	f104 032b 	add.w	r3, r4, #43	; 0x2b
9002659c:	441e      	add	r6, r3
9002659e:	f026 0603 	bic.w	r6, r6, #3
900265a2:	6266      	str	r6, [r4, #36]	; 0x24
  EwResourcesMemory += sizeof( XGfxSurface ) + surface->AllocSize;
900265a4:	4a11      	ldr	r2, [pc, #68]	; (900265ec <GfxCreateSurface+0xc8>)
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900265a6:	4912      	ldr	r1, [pc, #72]	; (900265f0 <GfxCreateSurface+0xcc>)
  EwResourcesMemory += sizeof( XGfxSurface ) + surface->AllocSize;
900265a8:	6813      	ldr	r3, [r2, #0]
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900265aa:	680c      	ldr	r4, [r1, #0]
  EwResourcesMemory += sizeof( XGfxSurface ) + surface->AllocSize;
900265ac:	3328      	adds	r3, #40	; 0x28
900265ae:	443b      	add	r3, r7
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
900265b0:	42a3      	cmp	r3, r4
  EwResourcesMemory += sizeof( XGfxSurface ) + surface->AllocSize;
900265b2:	6013      	str	r3, [r2, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
900265b4:	4a0f      	ldr	r2, [pc, #60]	; (900265f4 <GfxCreateSurface+0xd0>)
    EwResourcesMemoryPeak = EwResourcesMemory;
900265b6:	bfc8      	it	gt
900265b8:	600b      	strgt	r3, [r1, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
900265ba:	490f      	ldr	r1, [pc, #60]	; (900265f8 <GfxCreateSurface+0xd4>)
900265bc:	6812      	ldr	r2, [r2, #0]
900265be:	680c      	ldr	r4, [r1, #0]
900265c0:	490e      	ldr	r1, [pc, #56]	; (900265fc <GfxCreateSurface+0xd8>)
900265c2:	4422      	add	r2, r4
900265c4:	680c      	ldr	r4, [r1, #0]
900265c6:	4413      	add	r3, r2
900265c8:	42a3      	cmp	r3, r4
    EwMemoryPeak = EwObjectsMemory + EwStringsMemory + EwResourcesMemory;
900265ca:	bfc8      	it	gt
900265cc:	600b      	strgt	r3, [r1, #0]
}
900265ce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return 0;
900265d2:	2000      	movs	r0, #0
}
900265d4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  int                     clutSize      = 0;
900265d8:	4683      	mov	fp, r0
900265da:	4603      	mov	r3, r0
    bytesPerPixel = 4;
900265dc:	f04f 0a04 	mov.w	sl, #4
900265e0:	e7b8      	b.n	90026554 <GfxCreateSurface+0x30>
900265e2:	f240 4303 	movw	r3, #1027	; 0x403
    bytesPerPixel = 1;
900265e6:	4682      	mov	sl, r0
    clutSize = 256 * 4 + 3; /* clut startaddress has to be DWORD aligned */
900265e8:	469b      	mov	fp, r3
900265ea:	e7b3      	b.n	90026554 <GfxCreateSurface+0x30>
900265ec:	200002bc 	.word	0x200002bc
900265f0:	200002d8 	.word	0x200002d8
900265f4:	200002ac 	.word	0x200002ac
900265f8:	200002b8 	.word	0x200002b8
900265fc:	200002c0 	.word	0x200002c0

90026600 <GfxCreateConstSurface>:
{
90026600:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026604:	4688      	mov	r8, r1
  if ( aFormat == EW_PIXEL_FORMAT_NATIVE )
90026606:	4606      	mov	r6, r0
{
90026608:	4617      	mov	r7, r2
9002660a:	461c      	mov	r4, r3
  if ( aFormat == EW_PIXEL_FORMAT_NATIVE )
9002660c:	b140      	cbz	r0, 90026620 <GfxCreateConstSurface+0x20>
  else if ( aFormat == EW_PIXEL_FORMAT_ALPHA8 )
9002660e:	2802      	cmp	r0, #2
90026610:	d043      	beq.n	9002669a <GfxCreateConstSurface+0x9a>
  else if ( aFormat == EW_PIXEL_FORMAT_RGB565 )
90026612:	2803      	cmp	r0, #3
90026614:	d046      	beq.n	900266a4 <GfxCreateConstSurface+0xa4>
  else if ( aFormat == EW_PIXEL_FORMAT_INDEX8 )
90026616:	2801      	cmp	r0, #1
90026618:	d042      	beq.n	900266a0 <GfxCreateConstSurface+0xa0>
    return 0;
9002661a:	2000      	movs	r0, #0
}
9002661c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    bytesPerPixel = 4;
90026620:	f04f 0904 	mov.w	r9, #4
  if ( !aMemory || !aMemory->Pixel1 || ( aMemory->Pitch1X != bytesPerPixel ) ||
90026624:	2c00      	cmp	r4, #0
90026626:	d0f8      	beq.n	9002661a <GfxCreateConstSurface+0x1a>
90026628:	6823      	ldr	r3, [r4, #0]
9002662a:	2b00      	cmp	r3, #0
9002662c:	d0f5      	beq.n	9002661a <GfxCreateConstSurface+0x1a>
9002662e:	6863      	ldr	r3, [r4, #4]
90026630:	454b      	cmp	r3, r9
90026632:	d1f2      	bne.n	9002661a <GfxCreateConstSurface+0x1a>
     ( aMemory->Pitch1Y < (int)( aWidth * bytesPerPixel )))
90026634:	fb08 f309 	mul.w	r3, r8, r9
  if ( !aMemory || !aMemory->Pixel1 || ( aMemory->Pitch1X != bytesPerPixel ) ||
90026638:	68a2      	ldr	r2, [r4, #8]
9002663a:	429a      	cmp	r2, r3
9002663c:	dbed      	blt.n	9002661a <GfxCreateConstSurface+0x1a>
  surface = (XGfxSurface*)EwAllocVideo( sizeof( XGfxSurface ));
9002663e:	2028      	movs	r0, #40	; 0x28
90026640:	f7f3 fb8a 	bl	90019d58 <EwAllocVideo>
  if ( !surface )
90026644:	4605      	mov	r5, r0
90026646:	2800      	cmp	r0, #0
90026648:	d0e7      	beq.n	9002661a <GfxCreateConstSurface+0x1a>
  EwZero( surface, sizeof( XGfxSurface ));
9002664a:	2128      	movs	r1, #40	; 0x28
9002664c:	f000 fb5a 	bl	90026d04 <EwZero>
  EwResourcesMemory += sizeof( XGfxSurface );
90026650:	4916      	ldr	r1, [pc, #88]	; (900266ac <GfxCreateConstSurface+0xac>)
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
90026652:	4817      	ldr	r0, [pc, #92]	; (900266b0 <GfxCreateConstSurface+0xb0>)
  surface->Flags          = EW_SURFACE_PREALLOCATED;
90026654:	f04f 7c80 	mov.w	ip, #16777216	; 0x1000000
  EwResourcesMemory += sizeof( XGfxSurface );
90026658:	680a      	ldr	r2, [r1, #0]
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
9002665a:	6803      	ldr	r3, [r0, #0]
  EwResourcesMemory += sizeof( XGfxSurface );
9002665c:	3228      	adds	r2, #40	; 0x28
  surface->Width          = aWidth;
9002665e:	f8c5 8000 	str.w	r8, [r5]
  surface->Height         = aHeight;
90026662:	606f      	str	r7, [r5, #4]
  if ( EwResourcesMemory > EwResourcesMemoryPeak )
90026664:	429a      	cmp	r2, r3
  surface->Pixel          = (void*)( aMemory->Pixel1 );
90026666:	6827      	ldr	r7, [r4, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
90026668:	4b12      	ldr	r3, [pc, #72]	; (900266b4 <GfxCreateConstSurface+0xb4>)
  EwResourcesMemory += sizeof( XGfxSurface );
9002666a:	600a      	str	r2, [r1, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
9002666c:	4912      	ldr	r1, [pc, #72]	; (900266b8 <GfxCreateConstSurface+0xb8>)
    EwResourcesMemoryPeak = EwResourcesMemory;
9002666e:	bfc8      	it	gt
90026670:	6002      	strgt	r2, [r0, #0]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
90026672:	681b      	ldr	r3, [r3, #0]
90026674:	6808      	ldr	r0, [r1, #0]
90026676:	4911      	ldr	r1, [pc, #68]	; (900266bc <GfxCreateConstSurface+0xbc>)
90026678:	4403      	add	r3, r0
  surface->Clut           = (void*)( aMemory->Clut );
9002667a:	69a4      	ldr	r4, [r4, #24]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
9002667c:	6808      	ldr	r0, [r1, #0]
9002667e:	4413      	add	r3, r2
  surface->BytesPerPixel  = bytesPerPixel;
90026680:	f8c5 900c 	str.w	r9, [r5, #12]
  surface->Format         = aFormat;
90026684:	612e      	str	r6, [r5, #16]
  if (( EwObjectsMemory + EwStringsMemory + EwResourcesMemory ) > EwMemoryPeak )
90026686:	4283      	cmp	r3, r0
  surface->Pixel          = (void*)( aMemory->Pixel1 );
90026688:	61af      	str	r7, [r5, #24]
  return (unsigned long)surface;
9002668a:	4628      	mov	r0, r5
  surface->Clut           = (void*)( aMemory->Clut );
9002668c:	626c      	str	r4, [r5, #36]	; 0x24
  surface->Flags          = EW_SURFACE_PREALLOCATED;
9002668e:	f8c5 c008 	str.w	ip, [r5, #8]
    EwMemoryPeak = EwObjectsMemory + EwStringsMemory + EwResourcesMemory;
90026692:	bfc8      	it	gt
90026694:	600b      	strgt	r3, [r1, #0]
}
90026696:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    bytesPerPixel = 1;
9002669a:	f04f 0901 	mov.w	r9, #1
9002669e:	e7c1      	b.n	90026624 <GfxCreateConstSurface+0x24>
900266a0:	4681      	mov	r9, r0
900266a2:	e7bf      	b.n	90026624 <GfxCreateConstSurface+0x24>
    bytesPerPixel = 2;
900266a4:	f04f 0902 	mov.w	r9, #2
900266a8:	e7bc      	b.n	90026624 <GfxCreateConstSurface+0x24>
900266aa:	bf00      	nop
900266ac:	200002bc 	.word	0x200002bc
900266b0:	200002d8 	.word	0x200002d8
900266b4:	200002ac 	.word	0x200002ac
900266b8:	200002b8 	.word	0x200002b8
900266bc:	200002c0 	.word	0x200002c0

900266c0 <GfxDestroySurface>:
    if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
900266c0:	4b0a      	ldr	r3, [pc, #40]	; (900266ec <GfxDestroySurface+0x2c>)
900266c2:	8902      	ldrh	r2, [r0, #8]
900266c4:	881b      	ldrh	r3, [r3, #0]
900266c6:	429a      	cmp	r2, r3
{
900266c8:	b510      	push	{r4, lr}
900266ca:	4604      	mov	r4, r0
    if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
900266cc:	d00a      	beq.n	900266e4 <GfxDestroySurface+0x24>
  EwResourcesMemory -= sizeof( XGfxSurface ) + surface->AllocSize;
900266ce:	4a08      	ldr	r2, [pc, #32]	; (900266f0 <GfxDestroySurface+0x30>)
  EwFreeVideo( surface );
900266d0:	4620      	mov	r0, r4
  EwResourcesMemory -= sizeof( XGfxSurface ) + surface->AllocSize;
900266d2:	6961      	ldr	r1, [r4, #20]
900266d4:	6813      	ldr	r3, [r2, #0]
900266d6:	3b28      	subs	r3, #40	; 0x28
900266d8:	1a5b      	subs	r3, r3, r1
}
900266da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  EwResourcesMemory -= sizeof( XGfxSurface ) + surface->AllocSize;
900266de:	6013      	str	r3, [r2, #0]
  EwFreeVideo( surface );
900266e0:	f7f3 bc2e 	b.w	90019f40 <EwFreeVideo>
  EwBspGraphicsWaitForCompletion();
900266e4:	f001 f896 	bl	90027814 <EwBspGraphicsWaitForCompletion>
}
900266e8:	e7f1      	b.n	900266ce <GfxDestroySurface+0xe>
900266ea:	bf00      	nop
900266ec:	20000378 	.word	0x20000378
900266f0:	200002bc 	.word	0x200002bc

900266f4 <GfxLockSurface>:
{
900266f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
900266f8:	4b24      	ldr	r3, [pc, #144]	; (9002678c <GfxLockSurface+0x98>)
{
900266fa:	4604      	mov	r4, r0
  if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
900266fc:	6880      	ldr	r0, [r0, #8]
{
900266fe:	4616      	mov	r6, r2
  if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
90026700:	881b      	ldrh	r3, [r3, #0]
{
90026702:	4688      	mov	r8, r1
  if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
90026704:	b282      	uxth	r2, r0
{
90026706:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90026708:	9f0d      	ldr	r7, [sp, #52]	; 0x34
  if (( surface->Flags & EW_SURFACE_TRANSACTION_MASK ) == TransactionNumber )
9002670a:	429a      	cmp	r2, r3
9002670c:	d03a      	beq.n	90026784 <GfxLockSurface+0x90>
  if ( surface->Flags & EW_SURFACE_MODIFIED_BY_GA )
9002670e:	0143      	lsls	r3, r0, #5
90026710:	d51e      	bpl.n	90026750 <GfxLockSurface+0x5c>
    EW_INVALIDATE_CACHE( surface->Pixel, surface->Width * surface->Height * surface->BytesPerPixel );
90026712:	68e3      	ldr	r3, [r4, #12]
90026714:	e9d4 1200 	ldrd	r1, r2, [r4]
90026718:	fb02 f101 	mul.w	r1, r2, r1
9002671c:	fb03 f201 	mul.w	r2, r3, r1
    if ( dsize > 0 ) { 
90026720:	2a00      	cmp	r2, #0
90026722:	dd12      	ble.n	9002674a <GfxLockSurface+0x56>
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
90026724:	69a3      	ldr	r3, [r4, #24]
90026726:	f003 011f 	and.w	r1, r3, #31
9002672a:	4411      	add	r1, r2
  __ASM volatile ("dsb 0xF":::"memory");
9002672c:	f3bf 8f4f 	dsb	sy
        SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90026730:	4817      	ldr	r0, [pc, #92]	; (90026790 <GfxLockSurface+0x9c>)
90026732:	4419      	add	r1, r3
90026734:	f8c0 325c 	str.w	r3, [r0, #604]	; 0x25c
        op_addr += __SCB_DCACHE_LINE_SIZE;
90026738:	3320      	adds	r3, #32
      } while ( op_size > 0 );
9002673a:	1aca      	subs	r2, r1, r3
9002673c:	2a00      	cmp	r2, #0
9002673e:	dcf9      	bgt.n	90026734 <GfxLockSurface+0x40>
90026740:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90026744:	f3bf 8f6f 	isb	sy
90026748:	68a0      	ldr	r0, [r4, #8]
    surface->Flags &= ~EW_SURFACE_MODIFIED_BY_GA;
9002674a:	f020 6080 	bic.w	r0, r0, #67108864	; 0x4000000
9002674e:	60a0      	str	r0, [r4, #8]
  if ( aWritePixel )
90026750:	b11d      	cbz	r5, 9002675a <GfxLockSurface+0x66>
    surface->Flags |= EW_SURFACE_MODIFIED_BY_CPU;
90026752:	68a3      	ldr	r3, [r4, #8]
90026754:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90026758:	60a3      	str	r3, [r4, #8]
  EwZero( aMemory, sizeof( XSurfaceMemory ));
9002675a:	4638      	mov	r0, r7
9002675c:	211c      	movs	r1, #28
9002675e:	f000 fad1 	bl	90026d04 <EwZero>
  aMemory->Pixel1  = (unsigned char*)surface->Pixel + (( aY * surface->Width ) + aX ) * surface->BytesPerPixel;
90026762:	6823      	ldr	r3, [r4, #0]
90026764:	68e2      	ldr	r2, [r4, #12]
}
90026766:	2001      	movs	r0, #1
  aMemory->Pixel1  = (unsigned char*)surface->Pixel + (( aY * surface->Width ) + aX ) * surface->BytesPerPixel;
90026768:	69a5      	ldr	r5, [r4, #24]
9002676a:	fb06 8603 	mla	r6, r6, r3, r8
  aMemory->Clut    = surface->Clut;
9002676e:	6a61      	ldr	r1, [r4, #36]	; 0x24
  aMemory->Pitch1Y = surface->Width * surface->BytesPerPixel;
90026770:	fb02 f303 	mul.w	r3, r2, r3
  aMemory->Pixel1  = (unsigned char*)surface->Pixel + (( aY * surface->Width ) + aX ) * surface->BytesPerPixel;
90026774:	fb02 5606 	mla	r6, r2, r6, r5
  aMemory->Pitch1Y = surface->Width * surface->BytesPerPixel;
90026778:	60bb      	str	r3, [r7, #8]
  aMemory->Clut    = surface->Clut;
9002677a:	61b9      	str	r1, [r7, #24]
  aMemory->Pitch1X = surface->BytesPerPixel;
9002677c:	e9c7 6200 	strd	r6, r2, [r7]
}
90026780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  EwBspGraphicsWaitForCompletion();
90026784:	f001 f846 	bl	90027814 <EwBspGraphicsWaitForCompletion>
90026788:	68a0      	ldr	r0, [r4, #8]
}
9002678a:	e7c0      	b.n	9002670e <GfxLockSurface+0x1a>
9002678c:	20000378 	.word	0x20000378
90026790:	e000ed00 	.word	0xe000ed00

90026794 <GfxUnlockSurface>:
}
90026794:	4770      	bx	lr
90026796:	bf00      	nop

90026798 <GfxFillDriver>:
*   None
*
*******************************************************************************/
void GfxFillDriver( unsigned long aDstHandle, int aDstX, int aDstY,
  int aWidth, int aHeight, int aBlend, unsigned long* aColors )
{
90026798:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int          dstFormat = dstSurface->Format;

#ifndef EW_DONT_USE_GFX_EMULATION

  /* make a software emulation of the drawing function */
  if ( UseGraphicsAccelerator == 0 )
9002679c:	4c3d      	ldr	r4, [pc, #244]	; (90026894 <GfxFillDriver+0xfc>)
{
9002679e:	b0a7      	sub	sp, #156	; 0x9c
900267a0:	468a      	mov	sl, r1
900267a2:	461f      	mov	r7, r3
  if ( UseGraphicsAccelerator == 0 )
900267a4:	f894 c000 	ldrb.w	ip, [r4]
{
900267a8:	4614      	mov	r4, r2
  int          dstFormat = dstSurface->Format;
900267aa:	f8d0 b010 	ldr.w	fp, [r0, #16]
{
900267ae:	f8dd 90c0 	ldr.w	r9, [sp, #192]	; 0xc0
  if ( UseGraphicsAccelerator == 0 )
900267b2:	f1bc 0f00 	cmp.w	ip, #0
900267b6:	d132      	bne.n	9002681e <GfxFillDriver+0x86>
    XSurfaceMemory dstMem;
    XGradient      gradient;
    XFillWorker    worker = 0;

    /* obtain direct access to the destination buffer */
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
900267b8:	ad09      	add	r5, sp, #36	; 0x24
900267ba:	2601      	movs	r6, #1
900267bc:	4663      	mov	r3, ip
900267be:	4662      	mov	r2, ip
900267c0:	4661      	mov	r1, ip
900267c2:	f8cd c018 	str.w	ip, [sp, #24]
900267c6:	f8cd c014 	str.w	ip, [sp, #20]
900267ca:	9507      	str	r5, [sp, #28]
900267cc:	9604      	str	r6, [sp, #16]
900267ce:	e9cd cc02 	strd	ip, ip, [sp, #8]
900267d2:	e9cd cc00 	strd	ip, ip, [sp]
900267d6:	f7ff ff8d 	bl	900266f4 <GfxLockSurface>

    /* select the necessary drawing function */
    if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
900267da:	f1bb 3fff 	cmp.w	fp, #4294967295
900267de:	d052      	beq.n	90026886 <GfxFillDriver+0xee>
      worker = aBlend ? EwScreenFillRowSolidBlend : EwScreenFillRowSolid;
    else
      worker = aBlend ? EwFillRowSolidBlend : EwFillRowSolid;
900267e0:	4b2d      	ldr	r3, [pc, #180]	; (90026898 <GfxFillDriver+0x100>)
900267e2:	4e2e      	ldr	r6, [pc, #184]	; (9002689c <GfxFillDriver+0x104>)
900267e4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
900267e6:	2a00      	cmp	r2, #0
900267e8:	bf18      	it	ne
900267ea:	461e      	movne	r6, r3

    /* let the Graphics Engine make the drawing operation */
    EwInitColorGradient( aWidth, aHeight, (unsigned int*)aColors, &gradient );
900267ec:	f10d 0840 	add.w	r8, sp, #64	; 0x40
900267f0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
900267f2:	4649      	mov	r1, r9
900267f4:	4638      	mov	r0, r7
900267f6:	4643      	mov	r3, r8
900267f8:	f7f1 ffe0 	bl	900187bc <EwInitColorGradient>
    EwEmulateFill( &dstMem, aDstX, aDstY, aWidth, aHeight, &gradient, aWidth, aHeight, worker );
900267fc:	463b      	mov	r3, r7
900267fe:	4622      	mov	r2, r4
90026800:	4651      	mov	r1, sl
90026802:	4628      	mov	r0, r5
90026804:	f8cd 8004 	str.w	r8, [sp, #4]
90026808:	9604      	str	r6, [sp, #16]
9002680a:	f8cd 900c 	str.w	r9, [sp, #12]
9002680e:	9702      	str	r7, [sp, #8]
90026810:	f8cd 9000 	str.w	r9, [sp]
90026814:	f7f2 fa56 	bl	90018cc4 <EwEmulateFill>
    if ( aBlend )
      EwBspGraphicsFillBlend( (uint32_t)dst, dstOfs, aWidth, aHeight, dstColorFormat, color );
    else
      EwBspGraphicsFill( (uint32_t)dst, dstOfs, aWidth, aHeight, dstColorFormat, color );
  }
}
90026818:	b027      	add	sp, #156	; 0x9c
9002681a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    uint32_t color = ( EW_ALPHA( aColors[0]) << 24 )
9002681e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
90026820:	4605      	mov	r5, r0
    GfxSelectSurfaces( aDstHandle, 0 );
90026822:	2100      	movs	r1, #0
    uint32_t color = ( EW_ALPHA( aColors[0]) << 24 )
90026824:	681b      	ldr	r3, [r3, #0]
                   | ( EW_RED  ( aColors[0]) << 16 )
90026826:	ea4f 4803 	mov.w	r8, r3, lsl #16
                   |   EW_BLUE ( aColors[0]);
9002682a:	f3c3 4207 	ubfx	r2, r3, #16, #8
    uint32_t color = ( EW_ALPHA( aColors[0]) << 24 )
9002682e:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
                   | ( EW_RED  ( aColors[0]) << 16 )
90026832:	f408 087f 	and.w	r8, r8, #16711680	; 0xff0000
    uint32_t color = ( EW_ALPHA( aColors[0]) << 24 )
90026836:	ea48 0802 	orr.w	r8, r8, r2
9002683a:	ea48 0603 	orr.w	r6, r8, r3
    GfxSelectSurfaces( aDstHandle, 0 );
9002683e:	f7ff fc5d 	bl	900260fc <GfxSelectSurfaces>
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026842:	6829      	ldr	r1, [r5, #0]
      dstColorFormat = DMA2D_OUTPUT_RGB565;
90026844:	f1bb 3fff 	cmp.w	fp, #4294967295
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026848:	68eb      	ldr	r3, [r5, #12]
9002684a:	fb04 a401 	mla	r4, r4, r1, sl
9002684e:	69a8      	ldr	r0, [r5, #24]
    dstOfs = dstSurface->Width - aWidth;
90026850:	eba1 0107 	sub.w	r1, r1, r7
      dstColorFormat = DMA2D_OUTPUT_RGB565;
90026854:	bf18      	it	ne
90026856:	2200      	movne	r2, #0
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026858:	fb03 0004 	mla	r0, r3, r4, r0
    if ( aBlend )
9002685c:	9b31      	ldr	r3, [sp, #196]	; 0xc4
      dstColorFormat = DMA2D_OUTPUT_RGB565;
9002685e:	bf08      	it	eq
90026860:	2202      	moveq	r2, #2
      EwBspGraphicsFillBlend( (uint32_t)dst, dstOfs, aWidth, aHeight, dstColorFormat, color );
90026862:	9601      	str	r6, [sp, #4]
    if ( aBlend )
90026864:	b13b      	cbz	r3, 90026876 <GfxFillDriver+0xde>
      EwBspGraphicsFillBlend( (uint32_t)dst, dstOfs, aWidth, aHeight, dstColorFormat, color );
90026866:	9200      	str	r2, [sp, #0]
90026868:	464b      	mov	r3, r9
9002686a:	463a      	mov	r2, r7
9002686c:	f001 f818 	bl	900278a0 <EwBspGraphicsFillBlend>
}
90026870:	b027      	add	sp, #156	; 0x9c
90026872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      EwBspGraphicsFill( (uint32_t)dst, dstOfs, aWidth, aHeight, dstColorFormat, color );
90026876:	9200      	str	r2, [sp, #0]
90026878:	464b      	mov	r3, r9
9002687a:	463a      	mov	r2, r7
9002687c:	f000 ffd2 	bl	90027824 <EwBspGraphicsFill>
}
90026880:	b027      	add	sp, #156	; 0x9c
90026882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      worker = aBlend ? EwScreenFillRowSolidBlend : EwScreenFillRowSolid;
90026886:	4b06      	ldr	r3, [pc, #24]	; (900268a0 <GfxFillDriver+0x108>)
90026888:	4e06      	ldr	r6, [pc, #24]	; (900268a4 <GfxFillDriver+0x10c>)
9002688a:	9a31      	ldr	r2, [sp, #196]	; 0xc4
9002688c:	2a00      	cmp	r2, #0
9002688e:	bf18      	it	ne
90026890:	461e      	movne	r6, r3
90026892:	e7ab      	b.n	900267ec <GfxFillDriver+0x54>
90026894:	2000002c 	.word	0x2000002c
90026898:	90004e2b 	.word	0x90004e2b
9002689c:	90004df5 	.word	0x90004df5
900268a0:	90007d27 	.word	0x90007d27
900268a4:	90007c9f 	.word	0x90007c9f

900268a8 <GfxCopyDriver>:
*
*******************************************************************************/
void GfxCopyDriver( unsigned long aDstHandle, unsigned long aSrcHandle,
  int aDstX, int aDstY, int aSrcX, int aSrcY, int aWidth, int aHeight,
  int aBlend, unsigned long* aColors )
{
900268a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int          srcFormat = srcSurface->Format;

#ifndef EW_DONT_USE_GFX_EMULATION

  /* make a software emulation of the drawing function */
  if ( UseGraphicsAccelerator == 0 )
900268ac:	4e72      	ldr	r6, [pc, #456]	; (90026a78 <GfxCopyDriver+0x1d0>)
{
900268ae:	b0af      	sub	sp, #188	; 0xbc
900268b0:	461d      	mov	r5, r3
900268b2:	460c      	mov	r4, r1
  if ( UseGraphicsAccelerator == 0 )
900268b4:	7833      	ldrb	r3, [r6, #0]
{
900268b6:	4691      	mov	r9, r2
  int          dstFormat = dstSurface->Format;
900268b8:	6906      	ldr	r6, [r0, #16]
  int          srcFormat = srcSurface->Format;
900268ba:	f8d1 a010 	ldr.w	sl, [r1, #16]
{
900268be:	f8dd 80e8 	ldr.w	r8, [sp, #232]	; 0xe8
  if ( UseGraphicsAccelerator == 0 )
900268c2:	2b00      	cmp	r3, #0
900268c4:	d155      	bne.n	90026972 <GfxCopyDriver+0xca>
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
    XGradient      gradient;
    XCopyWorker    worker = 0;

    /* obtain direct access to the destination and source buffer */
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
900268c6:	af0a      	add	r7, sp, #40	; 0x28
900268c8:	461a      	mov	r2, r3
900268ca:	4619      	mov	r1, r3
900268cc:	9303      	str	r3, [sp, #12]
900268ce:	9707      	str	r7, [sp, #28]
900268d0:	2701      	movs	r7, #1
900268d2:	9302      	str	r3, [sp, #8]
    GfxLockSurface( aSrcHandle, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, &srcMem );
900268d4:	f10d 0b44 	add.w	fp, sp, #68	; 0x44
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
900268d8:	9704      	str	r7, [sp, #16]
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
900268da:	9f3d      	ldr	r7, [sp, #244]	; 0xf4
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
900268dc:	9308      	str	r3, [sp, #32]
900268de:	e9cd 3305 	strd	r3, r3, [sp, #20]
900268e2:	e9cd 3300 	strd	r3, r3, [sp]
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
900268e6:	78ff      	ldrb	r7, [r7, #3]
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
900268e8:	f7ff ff04 	bl	900266f4 <GfxLockSurface>
    GfxLockSurface( aSrcHandle, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, &srcMem );
900268ec:	2301      	movs	r3, #1
900268ee:	4620      	mov	r0, r4
900268f0:	f8cd b01c 	str.w	fp, [sp, #28]
900268f4:	9303      	str	r3, [sp, #12]
900268f6:	9b08      	ldr	r3, [sp, #32]
900268f8:	461a      	mov	r2, r3
900268fa:	4619      	mov	r1, r3
900268fc:	9304      	str	r3, [sp, #16]
900268fe:	9300      	str	r3, [sp, #0]
90026900:	e9cd 3305 	strd	r3, r3, [sp, #20]
90026904:	e9cd 3301 	strd	r3, r3, [sp, #4]
90026908:	f7ff fef4 	bl	900266f4 <GfxLockSurface>

    /* select the necessary drawing function */
    if ( srcFormat == EW_PIXEL_FORMAT_NATIVE )
9002690c:	9b08      	ldr	r3, [sp, #32]
9002690e:	f1ba 0f00 	cmp.w	sl, #0
90026912:	d123      	bne.n	9002695c <GfxCopyDriver+0xb4>
    {
      if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
90026914:	3601      	adds	r6, #1
90026916:	d070      	beq.n	900269fa <GfxCopyDriver+0x152>
        worker = (alpha == 0xFF) ? EwScreenCopyNativeRow : EwScreenCopyNativeRowSolid;
      else
        worker = (alpha == 0xFF) ? EwCopyNativeRow : EwCopyNativeRowSolid;
90026918:	4c58      	ldr	r4, [pc, #352]	; (90026a7c <GfxCopyDriver+0x1d4>)
9002691a:	4a59      	ldr	r2, [pc, #356]	; (90026a80 <GfxCopyDriver+0x1d8>)
9002691c:	2fff      	cmp	r7, #255	; 0xff
9002691e:	bf18      	it	ne
90026920:	4614      	movne	r4, r2
      else
        worker = (alpha == 0xFF) ? EwCopyIndex8Row : EwCopyIndex8RowSolid;
    }

    /* let the Graphics Engine make the drawing operation */
    EwInitColorGradient( aWidth, aHeight, (unsigned int*)aColors, &gradient );
90026922:	ae18      	add	r6, sp, #96	; 0x60
90026924:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
90026926:	993b      	ldr	r1, [sp, #236]	; 0xec
90026928:	4640      	mov	r0, r8
9002692a:	4633      	mov	r3, r6
9002692c:	f7f1 ff46 	bl	900187bc <EwInitColorGradient>
    EwEmulateCopy( &dstMem, &srcMem, aDstX, aDstY, aWidth, aHeight, aSrcX, aSrcY, &gradient, aWidth, aHeight, worker );
90026930:	9407      	str	r4, [sp, #28]
90026932:	9c38      	ldr	r4, [sp, #224]	; 0xe0
90026934:	462b      	mov	r3, r5
90026936:	9a3b      	ldr	r2, [sp, #236]	; 0xec
90026938:	4659      	mov	r1, fp
9002693a:	9839      	ldr	r0, [sp, #228]	; 0xe4
9002693c:	9402      	str	r4, [sp, #8]
9002693e:	9c3b      	ldr	r4, [sp, #236]	; 0xec
90026940:	9206      	str	r2, [sp, #24]
90026942:	464a      	mov	r2, r9
90026944:	9003      	str	r0, [sp, #12]
90026946:	a80a      	add	r0, sp, #40	; 0x28
90026948:	9604      	str	r6, [sp, #16]
9002694a:	f8cd 8014 	str.w	r8, [sp, #20]
9002694e:	e9cd 8400 	strd	r8, r4, [sp]
90026952:	f7f2 fa88 	bl	90018e66 <EwEmulateCopy>
    }

    /* choose the appropriate DMA2D drawing operation */
    EwBspGraphicsCopy( (uint32_t)dst, (uint32_t)src, dstOfs, srcOfs, aWidth, aHeight, dstColorFormat, srcColorFormat, color );
  }
}
90026956:	b02f      	add	sp, #188	; 0xbc
90026958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
9002695c:	f1ba 0f02 	cmp.w	sl, #2
90026960:	d051      	beq.n	90026a06 <GfxCopyDriver+0x15e>
    else if ( srcFormat == EW_PIXEL_FORMAT_RGB565 )
90026962:	f1ba 0f03 	cmp.w	sl, #3
90026966:	d069      	beq.n	90026a3c <GfxCopyDriver+0x194>
    else if ( srcFormat == EW_PIXEL_FORMAT_INDEX8 )
90026968:	f1ba 0f01 	cmp.w	sl, #1
9002696c:	d076      	beq.n	90026a5c <GfxCopyDriver+0x1b4>
    XCopyWorker    worker = 0;
9002696e:	461c      	mov	r4, r3
90026970:	e7d7      	b.n	90026922 <GfxCopyDriver+0x7a>
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026972:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
90026974:	4607      	mov	r7, r0
90026976:	681b      	ldr	r3, [r3, #0]
                            | ( EW_RED  ( aColors[0]) << 16 )
90026978:	ea4f 4b03 	mov.w	fp, r3, lsl #16
                            |   EW_BLUE ( aColors[0]);
9002697c:	f3c3 4207 	ubfx	r2, r3, #16, #8
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026980:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
                            | ( EW_RED  ( aColors[0]) << 16 )
90026984:	f40b 0b7f 	and.w	fp, fp, #16711680	; 0xff0000
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026988:	ea4b 0b02 	orr.w	fp, fp, r2
9002698c:	ea4b 0b03 	orr.w	fp, fp, r3
    GfxSelectSurfaces( aDstHandle, aSrcHandle );
90026990:	f7ff fbb4 	bl	900260fc <GfxSelectSurfaces>
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026994:	683a      	ldr	r2, [r7, #0]
      dstColorFormat = DMA2D_OUTPUT_RGB565;
90026996:	3601      	adds	r6, #1
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
90026998:	680b      	ldr	r3, [r1, #0]
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
9002699a:	fb05 9502 	mla	r5, r5, r2, r9
9002699e:	69b9      	ldr	r1, [r7, #24]
900269a0:	68f8      	ldr	r0, [r7, #12]
      dstColorFormat = DMA2D_OUTPUT_RGB565;
900269a2:	bf14      	ite	ne
900269a4:	f04f 0900 	movne.w	r9, #0
900269a8:	f04f 0902 	moveq.w	r9, #2
    if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
900269ac:	f1ba 0f02 	cmp.w	sl, #2
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
900269b0:	fb00 1505 	mla	r5, r0, r5, r1
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
900269b4:	68e1      	ldr	r1, [r4, #12]
    dstOfs = dstSurface->Width - aWidth;
900269b6:	eba2 0208 	sub.w	r2, r2, r8
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
900269ba:	e9dd 7638 	ldrd	r7, r6, [sp, #224]	; 0xe0
900269be:	fb06 7603 	mla	r6, r6, r3, r7
900269c2:	69a7      	ldr	r7, [r4, #24]
    srcOfs = srcSurface->Width - aWidth;
900269c4:	eba3 0308 	sub.w	r3, r3, r8
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
900269c8:	fb01 7606 	mla	r6, r1, r6, r7
    if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
900269cc:	d032      	beq.n	90026a34 <GfxCopyDriver+0x18c>
    else if ( srcFormat == EW_PIXEL_FORMAT_RGB565 )
900269ce:	f1ba 0f03 	cmp.w	sl, #3
900269d2:	d031      	beq.n	90026a38 <GfxCopyDriver+0x190>
    else if ( srcFormat == EW_PIXEL_FORMAT_INDEX8 )
900269d4:	f1ba 0f01 	cmp.w	sl, #1
900269d8:	d01c      	beq.n	90026a14 <GfxCopyDriver+0x16c>
    uint32_t srcColorFormat = DMA2D_INPUT_ARGB8888;
900269da:	2100      	movs	r1, #0
    EwBspGraphicsCopy( (uint32_t)dst, (uint32_t)src, dstOfs, srcOfs, aWidth, aHeight, dstColorFormat, srcColorFormat, color );
900269dc:	983b      	ldr	r0, [sp, #236]	; 0xec
900269de:	f8cd 9008 	str.w	r9, [sp, #8]
900269e2:	9001      	str	r0, [sp, #4]
900269e4:	4628      	mov	r0, r5
900269e6:	f8cd 8000 	str.w	r8, [sp]
900269ea:	e9cd 1b03 	strd	r1, fp, [sp, #12]
900269ee:	4631      	mov	r1, r6
900269f0:	f000 ffac 	bl	9002794c <EwBspGraphicsCopy>
}
900269f4:	b02f      	add	sp, #188	; 0xbc
900269f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        worker = (alpha == 0xFF) ? EwScreenCopyNativeRow : EwScreenCopyNativeRowSolid;
900269fa:	4c22      	ldr	r4, [pc, #136]	; (90026a84 <GfxCopyDriver+0x1dc>)
900269fc:	4a22      	ldr	r2, [pc, #136]	; (90026a88 <GfxCopyDriver+0x1e0>)
900269fe:	2fff      	cmp	r7, #255	; 0xff
90026a00:	bf18      	it	ne
90026a02:	4614      	movne	r4, r2
90026a04:	e78d      	b.n	90026922 <GfxCopyDriver+0x7a>
        worker = EwCopyAlpha8RowSolid;
90026a06:	4c21      	ldr	r4, [pc, #132]	; (90026a8c <GfxCopyDriver+0x1e4>)
90026a08:	4a21      	ldr	r2, [pc, #132]	; (90026a90 <GfxCopyDriver+0x1e8>)
90026a0a:	f1b6 3fff 	cmp.w	r6, #4294967295
90026a0e:	bf18      	it	ne
90026a10:	4614      	movne	r4, r2
90026a12:	e786      	b.n	90026922 <GfxCopyDriver+0x7a>
      if ( srcSurface != LoadedClutSurface )
90026a14:	4f1f      	ldr	r7, [pc, #124]	; (90026a94 <GfxCopyDriver+0x1ec>)
90026a16:	6839      	ldr	r1, [r7, #0]
90026a18:	42a1      	cmp	r1, r4
90026a1a:	d017      	beq.n	90026a4c <GfxCopyDriver+0x1a4>
        EwBspGraphicsLoadClut( (uint32_t)srcSurface->Clut, 256 );
90026a1c:	f44f 7180 	mov.w	r1, #256	; 0x100
90026a20:	6a60      	ldr	r0, [r4, #36]	; 0x24
90026a22:	e9cd 2308 	strd	r2, r3, [sp, #32]
90026a26:	f001 f85b 	bl	90027ae0 <EwBspGraphicsLoadClut>
      srcColorFormat = DMA2D_INPUT_L8;
90026a2a:	2105      	movs	r1, #5
        LoadedClutSurface = srcSurface;
90026a2c:	603c      	str	r4, [r7, #0]
90026a2e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90026a32:	e7d3      	b.n	900269dc <GfxCopyDriver+0x134>
      srcColorFormat = DMA2D_INPUT_A8;
90026a34:	2109      	movs	r1, #9
90026a36:	e7d1      	b.n	900269dc <GfxCopyDriver+0x134>
      srcColorFormat = DMA2D_INPUT_RGB565;
90026a38:	2102      	movs	r1, #2
90026a3a:	e7cf      	b.n	900269dc <GfxCopyDriver+0x134>
      if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
90026a3c:	3601      	adds	r6, #1
90026a3e:	d007      	beq.n	90026a50 <GfxCopyDriver+0x1a8>
        worker = (alpha == 0xFF) ? EwCopyRGB565Row : EwCopyRGB565RowSolid;
90026a40:	4c15      	ldr	r4, [pc, #84]	; (90026a98 <GfxCopyDriver+0x1f0>)
90026a42:	4b16      	ldr	r3, [pc, #88]	; (90026a9c <GfxCopyDriver+0x1f4>)
90026a44:	2fff      	cmp	r7, #255	; 0xff
90026a46:	bf18      	it	ne
90026a48:	461c      	movne	r4, r3
90026a4a:	e76a      	b.n	90026922 <GfxCopyDriver+0x7a>
      srcColorFormat = DMA2D_INPUT_L8;
90026a4c:	2105      	movs	r1, #5
90026a4e:	e7c5      	b.n	900269dc <GfxCopyDriver+0x134>
        worker = (alpha == 0xFF) ? EwScreenCopyRGB565Row : EwScreenCopyRGB565RowSolid;
90026a50:	4c13      	ldr	r4, [pc, #76]	; (90026aa0 <GfxCopyDriver+0x1f8>)
90026a52:	4b14      	ldr	r3, [pc, #80]	; (90026aa4 <GfxCopyDriver+0x1fc>)
90026a54:	2fff      	cmp	r7, #255	; 0xff
90026a56:	bf18      	it	ne
90026a58:	461c      	movne	r4, r3
90026a5a:	e762      	b.n	90026922 <GfxCopyDriver+0x7a>
      if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
90026a5c:	3601      	adds	r6, #1
90026a5e:	d005      	beq.n	90026a6c <GfxCopyDriver+0x1c4>
        worker = (alpha == 0xFF) ? EwCopyIndex8Row : EwCopyIndex8RowSolid;
90026a60:	4c11      	ldr	r4, [pc, #68]	; (90026aa8 <GfxCopyDriver+0x200>)
90026a62:	4b12      	ldr	r3, [pc, #72]	; (90026aac <GfxCopyDriver+0x204>)
90026a64:	2fff      	cmp	r7, #255	; 0xff
90026a66:	bf18      	it	ne
90026a68:	461c      	movne	r4, r3
90026a6a:	e75a      	b.n	90026922 <GfxCopyDriver+0x7a>
        worker = (alpha == 0xFF) ? EwScreenCopyIndex8Row : EwScreenCopyIndex8RowSolid;
90026a6c:	4c10      	ldr	r4, [pc, #64]	; (90026ab0 <GfxCopyDriver+0x208>)
90026a6e:	4b11      	ldr	r3, [pc, #68]	; (90026ab4 <GfxCopyDriver+0x20c>)
90026a70:	2fff      	cmp	r7, #255	; 0xff
90026a72:	bf18      	it	ne
90026a74:	461c      	movne	r4, r3
90026a76:	e754      	b.n	90026922 <GfxCopyDriver+0x7a>
90026a78:	2000002c 	.word	0x2000002c
90026a7c:	90005021 	.word	0x90005021
90026a80:	900050cd 	.word	0x900050cd
90026a84:	90007eeb 	.word	0x90007eeb
90026a88:	90007fa5 	.word	0x90007fa5
90026a8c:	900083cd 	.word	0x900083cd
90026a90:	90005521 	.word	0x90005521
90026a94:	20000374 	.word	0x20000374
90026a98:	900057e5 	.word	0x900057e5
90026a9c:	90005827 	.word	0x90005827
90026aa0:	900086b5 	.word	0x900086b5
90026aa4:	900086cd 	.word	0x900086cd
90026aa8:	9000527d 	.word	0x9000527d
90026aac:	90005341 	.word	0x90005341
90026ab0:	90008141 	.word	0x90008141
90026ab4:	90008205 	.word	0x90008205

90026ab8 <GfxBlendDriver>:
*
*******************************************************************************/
void GfxBlendDriver( unsigned long aDstHandle, unsigned long aSrcHandle,
  int aDstX, int aDstY, int aSrcX, int aSrcY, int aWidth, int aHeight,
  int aBlend, unsigned long* aColors )
{
90026ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  int          dstFormat = dstSurface->Format;

#ifndef EW_DONT_USE_GFX_EMULATION

  /* make a software emulation of the drawing function */
  if ( UseGraphicsAccelerator == 0 )
90026abc:	4e6f      	ldr	r6, [pc, #444]	; (90026c7c <GfxBlendDriver+0x1c4>)
{
90026abe:	b0af      	sub	sp, #188	; 0xbc
90026ac0:	461d      	mov	r5, r3
90026ac2:	460c      	mov	r4, r1
  if ( UseGraphicsAccelerator == 0 )
90026ac4:	7833      	ldrb	r3, [r6, #0]
{
90026ac6:	4691      	mov	r9, r2
  int          dstFormat = dstSurface->Format;
90026ac8:	6906      	ldr	r6, [r0, #16]
  int          srcFormat = srcSurface->Format;
90026aca:	f8d1 a010 	ldr.w	sl, [r1, #16]
{
90026ace:	f8dd 80e8 	ldr.w	r8, [sp, #232]	; 0xe8
  if ( UseGraphicsAccelerator == 0 )
90026ad2:	2b00      	cmp	r3, #0
90026ad4:	d155      	bne.n	90026b82 <GfxBlendDriver+0xca>
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
    XGradient      gradient;
    XCopyWorker    worker = 0;

    /* obtain direct access to the destination and source buffer */
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
90026ad6:	af0a      	add	r7, sp, #40	; 0x28
90026ad8:	461a      	mov	r2, r3
90026ada:	4619      	mov	r1, r3
90026adc:	9303      	str	r3, [sp, #12]
90026ade:	9707      	str	r7, [sp, #28]
90026ae0:	2701      	movs	r7, #1
90026ae2:	9302      	str	r3, [sp, #8]
    GfxLockSurface( aSrcHandle, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, &srcMem );
90026ae4:	f10d 0b44 	add.w	fp, sp, #68	; 0x44
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
90026ae8:	9704      	str	r7, [sp, #16]
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
90026aea:	9f3d      	ldr	r7, [sp, #244]	; 0xf4
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
90026aec:	9308      	str	r3, [sp, #32]
90026aee:	e9cd 3305 	strd	r3, r3, [sp, #20]
90026af2:	e9cd 3300 	strd	r3, r3, [sp]
    unsigned char  alpha  = EW_ALPHA( aColors[0]);
90026af6:	78ff      	ldrb	r7, [r7, #3]
    GfxLockSurface( aDstHandle, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, &dstMem );
90026af8:	f7ff fdfc 	bl	900266f4 <GfxLockSurface>
    GfxLockSurface( aSrcHandle, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, &srcMem );
90026afc:	2301      	movs	r3, #1
90026afe:	4620      	mov	r0, r4
90026b00:	f8cd b01c 	str.w	fp, [sp, #28]
90026b04:	9303      	str	r3, [sp, #12]
90026b06:	9b08      	ldr	r3, [sp, #32]
90026b08:	461a      	mov	r2, r3
90026b0a:	4619      	mov	r1, r3
90026b0c:	9304      	str	r3, [sp, #16]
90026b0e:	9300      	str	r3, [sp, #0]
90026b10:	e9cd 3305 	strd	r3, r3, [sp, #20]
90026b14:	e9cd 3301 	strd	r3, r3, [sp, #4]
90026b18:	f7ff fdec 	bl	900266f4 <GfxLockSurface>

    /* select the necessary drawing function */
    if ( srcFormat == EW_PIXEL_FORMAT_NATIVE )
90026b1c:	9b08      	ldr	r3, [sp, #32]
90026b1e:	f1ba 0f00 	cmp.w	sl, #0
90026b22:	d123      	bne.n	90026b6c <GfxBlendDriver+0xb4>
    {
      if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
90026b24:	3601      	adds	r6, #1
90026b26:	d070      	beq.n	90026c0a <GfxBlendDriver+0x152>
        worker = (alpha == 0xFF) ? EwScreenCopyNativeRowBlend : EwScreenCopyNativeRowSolidBlend;
      else
        worker = (alpha == 0xFF) ? EwCopyNativeRowBlend : EwCopyNativeRowSolidBlend;
90026b28:	4c55      	ldr	r4, [pc, #340]	; (90026c80 <GfxBlendDriver+0x1c8>)
90026b2a:	4a56      	ldr	r2, [pc, #344]	; (90026c84 <GfxBlendDriver+0x1cc>)
90026b2c:	2fff      	cmp	r7, #255	; 0xff
90026b2e:	bf18      	it	ne
90026b30:	4614      	movne	r4, r2
      else
        worker = (alpha == 0xFF) ? EwCopyIndex8RowBlend : EwCopyIndex8RowSolidBlend;
    }

    /* let the Graphics Engine make the drawing operation */
    EwInitColorGradient( aWidth, aHeight, (unsigned int*)aColors, &gradient );
90026b32:	ae18      	add	r6, sp, #96	; 0x60
90026b34:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
90026b36:	993b      	ldr	r1, [sp, #236]	; 0xec
90026b38:	4640      	mov	r0, r8
90026b3a:	4633      	mov	r3, r6
90026b3c:	f7f1 fe3e 	bl	900187bc <EwInitColorGradient>
    EwEmulateCopy( &dstMem, &srcMem, aDstX, aDstY, aWidth, aHeight, aSrcX, aSrcY, &gradient, aWidth, aHeight, worker );
90026b40:	9407      	str	r4, [sp, #28]
90026b42:	9c38      	ldr	r4, [sp, #224]	; 0xe0
90026b44:	462b      	mov	r3, r5
90026b46:	9a3b      	ldr	r2, [sp, #236]	; 0xec
90026b48:	4659      	mov	r1, fp
90026b4a:	9839      	ldr	r0, [sp, #228]	; 0xe4
90026b4c:	9402      	str	r4, [sp, #8]
90026b4e:	9c3b      	ldr	r4, [sp, #236]	; 0xec
90026b50:	9206      	str	r2, [sp, #24]
90026b52:	464a      	mov	r2, r9
90026b54:	9003      	str	r0, [sp, #12]
90026b56:	a80a      	add	r0, sp, #40	; 0x28
90026b58:	9604      	str	r6, [sp, #16]
90026b5a:	f8cd 8014 	str.w	r8, [sp, #20]
90026b5e:	e9cd 8400 	strd	r8, r4, [sp]
90026b62:	f7f2 f980 	bl	90018e66 <EwEmulateCopy>
    }

    /* choose the appropriate DMA2D drawing operation */
    EwBspGraphicsCopyBlend( (uint32_t)dst, (uint32_t)src, dstOfs, srcOfs, aWidth, aHeight, dstColorFormat, srcColorFormat, color );
  }
}
90026b66:	b02f      	add	sp, #188	; 0xbc
90026b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
90026b6c:	f1ba 0f02 	cmp.w	sl, #2
90026b70:	d051      	beq.n	90026c16 <GfxBlendDriver+0x15e>
    else if ( srcFormat == EW_PIXEL_FORMAT_RGB565 )
90026b72:	f1ba 0f03 	cmp.w	sl, #3
90026b76:	d069      	beq.n	90026c4c <GfxBlendDriver+0x194>
    else if ( srcFormat == EW_PIXEL_FORMAT_INDEX8 )
90026b78:	f1ba 0f01 	cmp.w	sl, #1
90026b7c:	d06f      	beq.n	90026c5e <GfxBlendDriver+0x1a6>
    XCopyWorker    worker = 0;
90026b7e:	461c      	mov	r4, r3
90026b80:	e7d7      	b.n	90026b32 <GfxBlendDriver+0x7a>
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026b82:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
90026b84:	4607      	mov	r7, r0
90026b86:	681b      	ldr	r3, [r3, #0]
                            | ( EW_RED  ( aColors[0]) << 16 )
90026b88:	ea4f 4b03 	mov.w	fp, r3, lsl #16
                            |   EW_BLUE ( aColors[0]);
90026b8c:	f3c3 4207 	ubfx	r2, r3, #16, #8
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026b90:	f003 23ff 	and.w	r3, r3, #4278255360	; 0xff00ff00
                            | ( EW_RED  ( aColors[0]) << 16 )
90026b94:	f40b 0b7f 	and.w	fp, fp, #16711680	; 0xff0000
    uint32_t color          = ( EW_ALPHA( aColors[0]) << 24 )
90026b98:	ea4b 0b02 	orr.w	fp, fp, r2
90026b9c:	ea4b 0b03 	orr.w	fp, fp, r3
    GfxSelectSurfaces( aDstHandle, aSrcHandle );
90026ba0:	f7ff faac 	bl	900260fc <GfxSelectSurfaces>
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026ba4:	683a      	ldr	r2, [r7, #0]
      dstColorFormat = DMA2D_OUTPUT_RGB565;
90026ba6:	3601      	adds	r6, #1
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
90026ba8:	680b      	ldr	r3, [r1, #0]
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026baa:	fb05 9502 	mla	r5, r5, r2, r9
90026bae:	69b9      	ldr	r1, [r7, #24]
90026bb0:	68f8      	ldr	r0, [r7, #12]
      dstColorFormat = DMA2D_OUTPUT_RGB565;
90026bb2:	bf14      	ite	ne
90026bb4:	f04f 0900 	movne.w	r9, #0
90026bb8:	f04f 0902 	moveq.w	r9, #2
    if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
90026bbc:	f1ba 0f02 	cmp.w	sl, #2
    dst    = (void*)((unsigned char*)dstSurface->Pixel + (( aDstY * dstSurface->Width ) + aDstX ) * dstSurface->BytesPerPixel );
90026bc0:	fb00 1505 	mla	r5, r0, r5, r1
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
90026bc4:	68e1      	ldr	r1, [r4, #12]
    dstOfs = dstSurface->Width - aWidth;
90026bc6:	eba2 0208 	sub.w	r2, r2, r8
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
90026bca:	e9dd 7638 	ldrd	r7, r6, [sp, #224]	; 0xe0
90026bce:	fb06 7603 	mla	r6, r6, r3, r7
90026bd2:	69a7      	ldr	r7, [r4, #24]
    srcOfs = srcSurface->Width - aWidth;
90026bd4:	eba3 0308 	sub.w	r3, r3, r8
    src    = (void*)((unsigned char*)srcSurface->Pixel + (( aSrcY * srcSurface->Width ) + aSrcX ) * srcSurface->BytesPerPixel );
90026bd8:	fb01 7606 	mla	r6, r1, r6, r7
    if ( srcFormat == EW_PIXEL_FORMAT_ALPHA8 )
90026bdc:	d032      	beq.n	90026c44 <GfxBlendDriver+0x18c>
    else if ( srcFormat == EW_PIXEL_FORMAT_RGB565 )
90026bde:	f1ba 0f03 	cmp.w	sl, #3
90026be2:	d031      	beq.n	90026c48 <GfxBlendDriver+0x190>
    else if ( srcFormat == EW_PIXEL_FORMAT_INDEX8 )
90026be4:	f1ba 0f01 	cmp.w	sl, #1
90026be8:	d01c      	beq.n	90026c24 <GfxBlendDriver+0x16c>
    uint32_t srcColorFormat = DMA2D_INPUT_ARGB8888;
90026bea:	2100      	movs	r1, #0
    EwBspGraphicsCopyBlend( (uint32_t)dst, (uint32_t)src, dstOfs, srcOfs, aWidth, aHeight, dstColorFormat, srcColorFormat, color );
90026bec:	983b      	ldr	r0, [sp, #236]	; 0xec
90026bee:	f8cd 9008 	str.w	r9, [sp, #8]
90026bf2:	9001      	str	r0, [sp, #4]
90026bf4:	4628      	mov	r0, r5
90026bf6:	f8cd 8000 	str.w	r8, [sp]
90026bfa:	e9cd 1b03 	strd	r1, fp, [sp, #12]
90026bfe:	4631      	mov	r1, r6
90026c00:	f000 ff0e 	bl	90027a20 <EwBspGraphicsCopyBlend>
}
90026c04:	b02f      	add	sp, #188	; 0xbc
90026c06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        worker = (alpha == 0xFF) ? EwScreenCopyNativeRowBlend : EwScreenCopyNativeRowSolidBlend;
90026c0a:	4c1f      	ldr	r4, [pc, #124]	; (90026c88 <GfxBlendDriver+0x1d0>)
90026c0c:	4a1f      	ldr	r2, [pc, #124]	; (90026c8c <GfxBlendDriver+0x1d4>)
90026c0e:	2fff      	cmp	r7, #255	; 0xff
90026c10:	bf18      	it	ne
90026c12:	4614      	movne	r4, r2
90026c14:	e78d      	b.n	90026b32 <GfxBlendDriver+0x7a>
        worker = EwCopyAlpha8RowSolidBlend;
90026c16:	4c1e      	ldr	r4, [pc, #120]	; (90026c90 <GfxBlendDriver+0x1d8>)
90026c18:	4a1e      	ldr	r2, [pc, #120]	; (90026c94 <GfxBlendDriver+0x1dc>)
90026c1a:	f1b6 3fff 	cmp.w	r6, #4294967295
90026c1e:	bf18      	it	ne
90026c20:	4614      	movne	r4, r2
90026c22:	e786      	b.n	90026b32 <GfxBlendDriver+0x7a>
      if ( srcSurface != LoadedClutSurface )
90026c24:	4f1c      	ldr	r7, [pc, #112]	; (90026c98 <GfxBlendDriver+0x1e0>)
90026c26:	6839      	ldr	r1, [r7, #0]
90026c28:	42a1      	cmp	r1, r4
90026c2a:	d016      	beq.n	90026c5a <GfxBlendDriver+0x1a2>
        EwBspGraphicsLoadClut( (uint32_t)srcSurface->Clut, 256 );
90026c2c:	f44f 7180 	mov.w	r1, #256	; 0x100
90026c30:	6a60      	ldr	r0, [r4, #36]	; 0x24
90026c32:	e9cd 2308 	strd	r2, r3, [sp, #32]
90026c36:	f000 ff53 	bl	90027ae0 <EwBspGraphicsLoadClut>
      srcColorFormat = DMA2D_INPUT_L8;
90026c3a:	2105      	movs	r1, #5
        LoadedClutSurface = srcSurface;
90026c3c:	603c      	str	r4, [r7, #0]
90026c3e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90026c42:	e7d3      	b.n	90026bec <GfxBlendDriver+0x134>
      srcColorFormat = DMA2D_INPUT_A8;
90026c44:	2109      	movs	r1, #9
90026c46:	e7d1      	b.n	90026bec <GfxBlendDriver+0x134>
      srcColorFormat = DMA2D_INPUT_RGB565;
90026c48:	2102      	movs	r1, #2
90026c4a:	e7cf      	b.n	90026bec <GfxBlendDriver+0x134>
        worker = EwCopyRGB565RowSolidBlend;
90026c4c:	4c13      	ldr	r4, [pc, #76]	; (90026c9c <GfxBlendDriver+0x1e4>)
90026c4e:	4b14      	ldr	r3, [pc, #80]	; (90026ca0 <GfxBlendDriver+0x1e8>)
90026c50:	f1b6 3fff 	cmp.w	r6, #4294967295
90026c54:	bf18      	it	ne
90026c56:	461c      	movne	r4, r3
90026c58:	e76b      	b.n	90026b32 <GfxBlendDriver+0x7a>
      srcColorFormat = DMA2D_INPUT_L8;
90026c5a:	2105      	movs	r1, #5
90026c5c:	e7c6      	b.n	90026bec <GfxBlendDriver+0x134>
      if ( dstFormat == EW_PIXEL_FORMAT_SCREEN )
90026c5e:	3601      	adds	r6, #1
90026c60:	d005      	beq.n	90026c6e <GfxBlendDriver+0x1b6>
        worker = (alpha == 0xFF) ? EwCopyIndex8RowBlend : EwCopyIndex8RowSolidBlend;
90026c62:	4c10      	ldr	r4, [pc, #64]	; (90026ca4 <GfxBlendDriver+0x1ec>)
90026c64:	4b10      	ldr	r3, [pc, #64]	; (90026ca8 <GfxBlendDriver+0x1f0>)
90026c66:	2fff      	cmp	r7, #255	; 0xff
90026c68:	bf18      	it	ne
90026c6a:	461c      	movne	r4, r3
90026c6c:	e761      	b.n	90026b32 <GfxBlendDriver+0x7a>
        worker = (alpha == 0xFF) ? EwScreenCopyIndex8RowBlend : EwScreenCopyIndex8RowSolidBlend;
90026c6e:	4c0f      	ldr	r4, [pc, #60]	; (90026cac <GfxBlendDriver+0x1f4>)
90026c70:	4b0f      	ldr	r3, [pc, #60]	; (90026cb0 <GfxBlendDriver+0x1f8>)
90026c72:	2fff      	cmp	r7, #255	; 0xff
90026c74:	bf18      	it	ne
90026c76:	461c      	movne	r4, r3
90026c78:	e75b      	b.n	90026b32 <GfxBlendDriver+0x7a>
90026c7a:	bf00      	nop
90026c7c:	2000002c 	.word	0x2000002c
90026c80:	90005039 	.word	0x90005039
90026c84:	900050f9 	.word	0x900050f9
90026c88:	90007f35 	.word	0x90007f35
90026c8c:	90007ff7 	.word	0x90007ff7
90026c90:	9000845d 	.word	0x9000845d
90026c94:	90005579 	.word	0x90005579
90026c98:	20000374 	.word	0x20000374
90026c9c:	90008709 	.word	0x90008709
90026ca0:	90005879 	.word	0x90005879
90026ca4:	9000529d 	.word	0x9000529d
90026ca8:	90005375 	.word	0x90005375
90026cac:	90008193 	.word	0x90008193
90026cb0:	90008261 	.word	0x90008261

90026cb4 <EwAlloc>:
*   there is no memory available.
*
*******************************************************************************/
void* EwAlloc( int aSize )
{
  void* mem = EwAllocHeapBlock( aSize );
90026cb4:	f7f6 be5e 	b.w	9001d974 <EwAllocHeapBlock>

90026cb8 <EwFree>:
*   None
*
*******************************************************************************/
void EwFree( void* aMemory )
{
  EwFreeHeapBlock( aMemory );
90026cb8:	f7f6 bf42 	b.w	9001db40 <EwFreeHeapBlock>

90026cbc <EwPanic>:
*
*******************************************************************************/
void EwPanic( void )
{
  /* Print out the message ... */
  EwPrint( "\nPANIC: System halted\n" );
90026cbc:	4802      	ldr	r0, [pc, #8]	; (90026cc8 <EwPanic+0xc>)
{
90026cbe:	b508      	push	{r3, lr}
  EwPrint( "\nPANIC: System halted\n" );
90026cc0:	f7f5 ff92 	bl	9001cbe8 <EwPrint>

  /* ... and stay in the never ending loop */
  for ( ;; )
90026cc4:	e7fe      	b.n	90026cc4 <EwPanic+0x8>
90026cc6:	bf00      	nop
90026cc8:	900346d8 	.word	0x900346d8

90026ccc <EwConsoleOutput>:
*   None
*
*******************************************************************************/
void EwConsoleOutput( const char* aMessage )
{
  while( *aMessage )
90026ccc:	7803      	ldrb	r3, [r0, #0]
90026cce:	b1ab      	cbz	r3, 90026cfc <EwConsoleOutput+0x30>
{
90026cd0:	b510      	push	{r4, lr}
90026cd2:	4604      	mov	r4, r0
90026cd4:	e005      	b.n	90026ce2 <EwConsoleOutput+0x16>
  {
    /* add carriage return in case of newline */
    if ( *aMessage == '\n' )
      EwBspConsolePutCharacter( '\r' );

    EwBspConsolePutCharacter( *aMessage++ );
90026cd6:	f814 0b01 	ldrb.w	r0, [r4], #1
90026cda:	f000 fb61 	bl	900273a0 <EwBspConsolePutCharacter>
  while( *aMessage )
90026cde:	7823      	ldrb	r3, [r4, #0]
90026ce0:	b15b      	cbz	r3, 90026cfa <EwConsoleOutput+0x2e>
    if ( *aMessage == '\n' )
90026ce2:	2b0a      	cmp	r3, #10
90026ce4:	d1f7      	bne.n	90026cd6 <EwConsoleOutput+0xa>
      EwBspConsolePutCharacter( '\r' );
90026ce6:	200d      	movs	r0, #13
90026ce8:	f000 fb5a 	bl	900273a0 <EwBspConsolePutCharacter>
    EwBspConsolePutCharacter( *aMessage++ );
90026cec:	f814 0b01 	ldrb.w	r0, [r4], #1
90026cf0:	f000 fb56 	bl	900273a0 <EwBspConsolePutCharacter>
  while( *aMessage )
90026cf4:	7823      	ldrb	r3, [r4, #0]
90026cf6:	2b00      	cmp	r3, #0
90026cf8:	d1f3      	bne.n	90026ce2 <EwConsoleOutput+0x16>
  }
}
90026cfa:	bd10      	pop	{r4, pc}
90026cfc:	4770      	bx	lr
90026cfe:	bf00      	nop

90026d00 <EwGetTicks>:
*   Number of milliseconds since the system was started.
*
*******************************************************************************/
unsigned long EwGetTicks( void )
{
  return EwBspClockGetTicks();
90026d00:	f000 b982 	b.w	90027008 <EwBspClockGetTicks>

90026d04 <EwZero>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwZero( void* aDstPtr, int aCount )
{
90026d04:	460a      	mov	r2, r1
  memset( aDstPtr, 0, aCount );
90026d06:	2100      	movs	r1, #0
90026d08:	f007 b95e 	b.w	9002dfc8 <memset>

90026d0c <EwFill>:
*   None
*
*******************************************************************************/
void EwFill( void* aDstPtr, unsigned char aValue, int aCount )
{
  memset( aDstPtr, aValue, aCount );
90026d0c:	f007 b95c 	b.w	9002dfc8 <memset>

90026d10 <EwMove>:
*   None
*
*******************************************************************************/
void EwMove( void* aDstPtr, const void* aSrcPtr, int aCount )
{
  memmove( aDstPtr, aSrcPtr, aCount );
90026d10:	f007 b940 	b.w	9002df94 <memmove>

90026d14 <EwCopy>:
*   None
*
*******************************************************************************/
void EwCopy( void* aDstPtr, const void* aSrcPtr, int aCount )
{
  memcpy( aDstPtr, aSrcPtr, aCount );
90026d14:	f007 b930 	b.w	9002df78 <memcpy>

90026d18 <EwMathSin>:
*******************************************************************************/
XFloat EwMathSin( XFloat aAngle )
{
  static const float factor = (float)( 3.1415926535 / 180.0 );

  return sinf( aAngle * factor );
90026d18:	eddf 7a02 	vldr	s15, [pc, #8]	; 90026d24 <EwMathSin+0xc>
90026d1c:	ee20 0a27 	vmul.f32	s0, s0, s15
90026d20:	f008 bc42 	b.w	9002f5a8 <sinf>
90026d24:	3c8efa35 	.word	0x3c8efa35

90026d28 <EwMathCos>:
*******************************************************************************/
XFloat EwMathCos( XFloat aAngle )
{
  static const float factor = (float)( 3.1415926535 / 180.0 );

  return cosf( aAngle * factor );
90026d28:	eddf 7a02 	vldr	s15, [pc, #8]	; 90026d34 <EwMathCos+0xc>
90026d2c:	ee20 0a27 	vmul.f32	s0, s0, s15
90026d30:	f008 b9ae 	b.w	9002f090 <cosf>
90026d34:	3c8efa35 	.word	0x3c8efa35

90026d38 <EwMathArcCos>:
* RETURN VALUE:
*   Returns the determinated angle in the range 0 .. +180 degress.
*
*******************************************************************************/
XFloat EwMathArcCos( XFloat aValue )
{
90026d38:	b508      	push	{r3, lr}
  static const float factor = (float)( 180.0 / 3.1415926535 );

  return acosf( aValue ) * factor;
90026d3a:	f008 fcd5 	bl	9002f6e8 <acosf>
90026d3e:	eddf 7a02 	vldr	s15, [pc, #8]	; 90026d48 <EwMathArcCos+0x10>
}
90026d42:	ee20 0a27 	vmul.f32	s0, s0, s15
90026d46:	bd08      	pop	{r3, pc}
90026d48:	42652ee1 	.word	0x42652ee1

90026d4c <EwMathSqrt>:
*   Returns the determinated square root value.
*
*******************************************************************************/
XFloat EwMathSqrt( XFloat aValue )
{
  return sqrtf( aValue );
90026d4c:	eeb5 0a40 	vcmp.f32	s0, #0.0
{
90026d50:	b508      	push	{r3, lr}
90026d52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90026d56:	ed2d 8b02 	vpush	{d8}
  return sqrtf( aValue );
90026d5a:	eeb1 8ac0 	vsqrt.f32	s16, s0
90026d5e:	d404      	bmi.n	90026d6a <EwMathSqrt+0x1e>
}
90026d60:	eeb0 0a48 	vmov.f32	s0, s16
90026d64:	ecbd 8b02 	vpop	{d8}
90026d68:	bd08      	pop	{r3, pc}
  return sqrtf( aValue );
90026d6a:	f008 fcef 	bl	9002f74c <sqrtf>
90026d6e:	e7f7      	b.n	90026d60 <EwMathSqrt+0x14>

90026d70 <EwMathPow>:
*   Returns the determinated power value.
*
*******************************************************************************/
XFloat EwMathPow( XFloat aA, XFloat aB )
{
  return powf( aA, aB );
90026d70:	f008 ba8a 	b.w	9002f288 <powf>

90026d74 <EwMathRandInt32>:
* RETURN VALUE:
*   Returns the determinated random value.
*
*******************************************************************************/
XInt32 EwMathRandInt32( XInt32 aValue1, XInt32 aValue2 )
{
90026d74:	b570      	push	{r4, r5, r6, lr}
  unsigned int r;

  /* For the first time set the random start value */
  if ( !RandInitialized )
90026d76:	4e0b      	ldr	r6, [pc, #44]	; (90026da4 <EwMathRandInt32+0x30>)
{
90026d78:	4605      	mov	r5, r0
90026d7a:	460c      	mov	r4, r1
  if ( !RandInitialized )
90026d7c:	6833      	ldr	r3, [r6, #0]
90026d7e:	b153      	cbz	r3, 90026d96 <EwMathRandInt32+0x22>
  {
    srand((unsigned)EwGetTime());
    RandInitialized = 1;
  }

  r = rand();
90026d80:	f007 f958 	bl	9002e034 <rand>
  r = ( r & 0xFFFF ) ^ ( r >> 16 );
  return aValue1 + (((int)r * ( aValue2 - aValue1 )) >> 16 );
90026d84:	1b64      	subs	r4, r4, r5
  r = ( r & 0xFFFF ) ^ ( r >> 16 );
90026d86:	b283      	uxth	r3, r0
90026d88:	ea83 4310 	eor.w	r3, r3, r0, lsr #16
  return aValue1 + (((int)r * ( aValue2 - aValue1 )) >> 16 );
90026d8c:	fb03 f304 	mul.w	r3, r3, r4
}
90026d90:	eb05 4023 	add.w	r0, r5, r3, asr #16
90026d94:	bd70      	pop	{r4, r5, r6, pc}
  return EwBspClockGetTime();
90026d96:	f000 f93d 	bl	90027014 <EwBspClockGetTime>
    srand((unsigned)EwGetTime());
90026d9a:	f007 f91d 	bl	9002dfd8 <srand>
    RandInitialized = 1;
90026d9e:	2301      	movs	r3, #1
90026da0:	6033      	str	r3, [r6, #0]
90026da2:	e7ed      	b.n	90026d80 <EwMathRandInt32+0xc>
90026da4:	2000037c 	.word	0x2000037c

90026da8 <EwMathFloor>:
*
*******************************************************************************/
XFloat EwMathFloor( XFloat aValue )
{
  return floorf( aValue );
}
90026da8:	febb 0a40 	vrintm.f32	s0, s0
90026dac:	4770      	bx	lr
90026dae:	bf00      	nop

90026db0 <EwMathCeil>:
*
*******************************************************************************/
XFloat EwMathCeil( XFloat aValue )
{
  return ceilf( aValue );
}
90026db0:	feba 0a40 	vrintp.f32	s0, s0
90026db4:	4770      	bx	lr
90026db6:	bf00      	nop

90026db8 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90026db8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90026dba:	6904      	ldr	r4, [r0, #16]
90026dbc:	8900      	ldrh	r0, [r0, #8]
90026dbe:	46a4      	mov	ip, r4
}
90026dc0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90026dc4:	4760      	bx	ip
90026dc6:	bf00      	nop

90026dc8 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90026dc8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90026dca:	68c4      	ldr	r4, [r0, #12]
90026dcc:	8900      	ldrh	r0, [r0, #8]
90026dce:	46a4      	mov	ip, r4
}
90026dd0:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90026dd4:	4760      	bx	ip
90026dd6:	bf00      	nop

90026dd8 <FT5336_ReadID>:
{
90026dd8:	b510      	push	{r4, lr}
90026dda:	b082      	sub	sp, #8
90026ddc:	460c      	mov	r4, r1
  ret = ft5336_chip_id(&pObj->Ctx, &ident);
90026dde:	3018      	adds	r0, #24
90026de0:	f10d 0107 	add.w	r1, sp, #7
90026de4:	f000 f8b2 	bl	90026f4c <ft5336_chip_id>
  *Id = ( uint32_t )ident;
90026de8:	f89d 3007 	ldrb.w	r3, [sp, #7]
90026dec:	6023      	str	r3, [r4, #0]
}
90026dee:	b002      	add	sp, #8
90026df0:	bd10      	pop	{r4, pc}
90026df2:	bf00      	nop

90026df4 <FT5336_GetMultiTouchState>:
{
90026df4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90026df8:	f100 0518 	add.w	r5, r0, #24
{
90026dfc:	b088      	sub	sp, #32
90026dfe:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90026e00:	4628      	mov	r0, r5
90026e02:	4669      	mov	r1, sp
90026e04:	f000 f886 	bl	90026f14 <ft5336_td_status>
90026e08:	2800      	cmp	r0, #0
90026e0a:	d13a      	bne.n	90026e82 <FT5336_GetMultiTouchState+0x8e>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90026e0c:	f89d 3000 	ldrb.w	r3, [sp]
90026e10:	2b05      	cmp	r3, #5
90026e12:	bf88      	it	hi
90026e14:	2300      	movhi	r3, #0
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90026e16:	6023      	str	r3, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90026e18:	4628      	mov	r0, r5
90026e1a:	231e      	movs	r3, #30
90026e1c:	466a      	mov	r2, sp
90026e1e:	2103      	movs	r1, #3
90026e20:	f000 f870 	bl	90026f04 <ft5336_read_reg>
90026e24:	bb80      	cbnz	r0, 90026e88 <FT5336_GetMultiTouchState+0x94>
90026e26:	466b      	mov	r3, sp
90026e28:	1d22      	adds	r2, r4, #4
90026e2a:	f104 0118 	add.w	r1, r4, #24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90026e2e:	f893 c000 	ldrb.w	ip, [r3]
90026e32:	3306      	adds	r3, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90026e34:	f813 6c04 	ldrb.w	r6, [r3, #-4]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90026e38:	ea4f 250c 	mov.w	r5, ip, lsl #8
90026e3c:	f813 8c05 	ldrb.w	r8, [r3, #-5]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90026e40:	0234      	lsls	r4, r6, #8
90026e42:	f813 ec03 	ldrb.w	lr, [r3, #-3]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90026e46:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90026e4a:	f813 7c01 	ldrb.w	r7, [r3, #-1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90026e4e:	f404 6470 	and.w	r4, r4, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90026e52:	ea4f 1c9c 	mov.w	ip, ip, lsr #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90026e56:	ea45 0508 	orr.w	r5, r5, r8
    State->TouchId[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TID_BIT_MASK) >> 4);
90026e5a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90026e5c:	ea44 040e 	orr.w	r4, r4, lr
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90026e60:	093f      	lsrs	r7, r7, #4
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90026e62:	f842 5b04 	str.w	r5, [r2], #4
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
90026e66:	4291      	cmp	r1, r2
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90026e68:	f813 ec02 	ldrb.w	lr, [r3, #-2]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90026e6c:	f8c2 c038 	str.w	ip, [r2, #56]	; 0x38
    State->TouchId[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TID_BIT_MASK) >> 4);
90026e70:	6616      	str	r6, [r2, #96]	; 0x60
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90026e72:	6114      	str	r4, [r2, #16]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90026e74:	f8c2 e024 	str.w	lr, [r2, #36]	; 0x24
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90026e78:	64d7      	str	r7, [r2, #76]	; 0x4c
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
90026e7a:	d1d8      	bne.n	90026e2e <FT5336_GetMultiTouchState+0x3a>
}
90026e7c:	b008      	add	sp, #32
90026e7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026e82:	f04f 33ff 	mov.w	r3, #4294967295
90026e86:	e7c6      	b.n	90026e16 <FT5336_GetMultiTouchState+0x22>
    ret = FT5336_ERROR;
90026e88:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90026e8c:	e7f6      	b.n	90026e7c <FT5336_GetMultiTouchState+0x88>
90026e8e:	bf00      	nop

90026e90 <FT5336_Init>:
{
90026e90:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90026e92:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90026e96:	b98d      	cbnz	r5, 90026ebc <FT5336_Init+0x2c>
    pObj->IO.Init();
90026e98:	4606      	mov	r6, r0
90026e9a:	4604      	mov	r4, r0
90026e9c:	f856 3b18 	ldr.w	r3, [r6], #24
90026ea0:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90026ea2:	4629      	mov	r1, r5
90026ea4:	4630      	mov	r0, r6
90026ea6:	f000 f843 	bl	90026f30 <ft5336_g_mode>
  if(ret != FT5336_OK)
90026eaa:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90026eac:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90026eb0:	bf18      	it	ne
90026eb2:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90026eb4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90026eb8:	4240      	negs	r0, r0
}
90026eba:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90026ebc:	2000      	movs	r0, #0
}
90026ebe:	bd70      	pop	{r4, r5, r6, pc}

90026ec0 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90026ec0:	b1c0      	cbz	r0, 90026ef4 <FT5336_RegisterBusIO+0x34>
    pObj->IO.WriteReg  = pIO->WriteReg;
90026ec2:	68ca      	ldr	r2, [r1, #12]
{
90026ec4:	b470      	push	{r4, r5, r6}
    pObj->IO.DeInit    = pIO->DeInit;
90026ec6:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90026eca:	890e      	ldrh	r6, [r1, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90026ecc:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.GetTick   = pIO->GetTick;
90026ed0:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90026ed4:	4909      	ldr	r1, [pc, #36]	; (90026efc <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90026ed6:	60c2      	str	r2, [r0, #12]
    pObj->Ctx.WriteReg = WriteRegWrap;
90026ed8:	4a09      	ldr	r2, [pc, #36]	; (90026f00 <FT5336_RegisterBusIO+0x40>)
    pObj->IO.Address   = pIO->Address;
90026eda:	8106      	strh	r6, [r0, #8]
    pObj->Ctx.WriteReg = WriteRegWrap;
90026edc:	6182      	str	r2, [r0, #24]
    pObj->IO.GetTick   = pIO->GetTick;
90026ede:	e9c0 5404 	strd	r5, r4, [r0, #16]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90026ee2:	e9c0 1007 	strd	r1, r0, [r0, #28]
    if(pObj->IO.Init != NULL)
90026ee6:	b10b      	cbz	r3, 90026eec <FT5336_RegisterBusIO+0x2c>
}
90026ee8:	bc70      	pop	{r4, r5, r6}
      ret = pObj->IO.Init();
90026eea:	4718      	bx	r3
}
90026eec:	f04f 30ff 	mov.w	r0, #4294967295
90026ef0:	bc70      	pop	{r4, r5, r6}
90026ef2:	4770      	bx	lr
90026ef4:	f04f 30ff 	mov.w	r0, #4294967295
90026ef8:	4770      	bx	lr
90026efa:	bf00      	nop
90026efc:	90026db9 	.word	0x90026db9
90026f00:	90026dc9 	.word	0x90026dc9

90026f04 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90026f04:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f06:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90026f0a:	46a4      	mov	ip, r4
}
90026f0c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f10:	4760      	bx	ip
90026f12:	bf00      	nop

90026f14 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90026f14:	b538      	push	{r3, r4, r5, lr}
90026f16:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f18:	6845      	ldr	r5, [r0, #4]
90026f1a:	2301      	movs	r3, #1
90026f1c:	2102      	movs	r1, #2
90026f1e:	4622      	mov	r2, r4
90026f20:	6880      	ldr	r0, [r0, #8]
90026f22:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90026f24:	b918      	cbnz	r0, 90026f2e <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90026f26:	7823      	ldrb	r3, [r4, #0]
90026f28:	f003 030f 	and.w	r3, r3, #15
90026f2c:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90026f2e:	bd38      	pop	{r3, r4, r5, pc}

90026f30 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90026f30:	b510      	push	{r4, lr}
90026f32:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90026f34:	6804      	ldr	r4, [r0, #0]
90026f36:	2301      	movs	r3, #1
90026f38:	6880      	ldr	r0, [r0, #8]
{
90026f3a:	f88d 1007 	strb.w	r1, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90026f3e:	f10d 0207 	add.w	r2, sp, #7
90026f42:	21a4      	movs	r1, #164	; 0xa4
90026f44:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90026f46:	b002      	add	sp, #8
90026f48:	bd10      	pop	{r4, pc}
90026f4a:	bf00      	nop

90026f4c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90026f4c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f4e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90026f52:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f54:	2301      	movs	r3, #1
90026f56:	46a4      	mov	ip, r4
90026f58:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90026f5a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90026f5e:	4760      	bx	ip

90026f60 <HAL_RTC_MspInit>:
  *        the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval None
  */
void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
{
90026f60:	b500      	push	{lr}
90026f62:	b0c3      	sub	sp, #268	; 0x10c
  RCC_OscInitTypeDef        RCC_OscInitStruct;
  RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;

  /*##-1- Configure LSE as RTC clock source ##################################*/
  RCC_OscInitStruct.OscillatorType =  RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_LSE;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
90026f64:	2300      	movs	r3, #0
  RCC_OscInitStruct.OscillatorType =  RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_LSE;
90026f66:	210c      	movs	r1, #12
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
90026f68:	2201      	movs	r2, #1
  RCC_OscInitStruct.LSIState = RCC_LSI_OFF;
  if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90026f6a:	4668      	mov	r0, sp
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
90026f6c:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.OscillatorType =  RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_LSE;
90026f6e:	9100      	str	r1, [sp, #0]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
90026f70:	9202      	str	r2, [sp, #8]
  RCC_OscInitStruct.LSIState = RCC_LSI_OFF;
90026f72:	9305      	str	r3, [sp, #20]
  if(HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90026f74:	f002 ff8e 	bl	90029e94 <HAL_RCC_OscConfig>
90026f78:	b110      	cbz	r0, 90026f80 <HAL_RTC_MspInit+0x20>
  }

  /*##-2- Enable RTC peripheral Clocks #######################################*/
  /* Enable RTC Clock */
  __HAL_RCC_RTC_ENABLE();
}
90026f7a:	b043      	add	sp, #268	; 0x10c
90026f7c:	f85d fb04 	ldr.w	pc, [sp], #4
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
90026f80:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
90026f84:	f44f 7380 	mov.w	r3, #256	; 0x100
  if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90026f88:	a813      	add	r0, sp, #76	; 0x4c
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
90026f8a:	9213      	str	r2, [sp, #76]	; 0x4c
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
90026f8c:	933f      	str	r3, [sp, #252]	; 0xfc
  if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90026f8e:	f003 fd87 	bl	9002aaa0 <HAL_RCCEx_PeriphCLKConfig>
90026f92:	2800      	cmp	r0, #0
90026f94:	d1f1      	bne.n	90026f7a <HAL_RTC_MspInit+0x1a>
  __HAL_RCC_RTC_ENABLE();
90026f96:	4a04      	ldr	r2, [pc, #16]	; (90026fa8 <HAL_RTC_MspInit+0x48>)
90026f98:	6f13      	ldr	r3, [r2, #112]	; 0x70
90026f9a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
90026f9e:	6713      	str	r3, [r2, #112]	; 0x70
}
90026fa0:	b043      	add	sp, #268	; 0x10c
90026fa2:	f85d fb04 	ldr.w	pc, [sp], #4
90026fa6:	bf00      	nop
90026fa8:	58024400 	.word	0x58024400

90026fac <EwBspClockInit>:
void EwBspClockInit( void )
{
  RtcHandle.Instance = RTC;

  EmWiSystemTicks = 0;
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fac:	4a0d      	ldr	r2, [pc, #52]	; (90026fe4 <EwBspClockInit+0x38>)
{
90026fae:	b538      	push	{r3, r4, r5, lr}
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fb0:	6810      	ldr	r0, [r2, #0]
  EmWiSystemTicks = 0;
90026fb2:	2500      	movs	r5, #0
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fb4:	4b0c      	ldr	r3, [pc, #48]	; (90026fe8 <EwBspClockInit+0x3c>)
  RtcHandle.Instance = RTC;
90026fb6:	4c0d      	ldr	r4, [pc, #52]	; (90026fec <EwBspClockInit+0x40>)
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fb8:	fba3 3000 	umull	r3, r0, r3, r0
  RtcHandle.Instance = RTC;
90026fbc:	4a0c      	ldr	r2, [pc, #48]	; (90026ff0 <EwBspClockInit+0x44>)
  EmWiSystemTicks = 0;
90026fbe:	4b0d      	ldr	r3, [pc, #52]	; (90026ff4 <EwBspClockInit+0x48>)
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fc0:	0980      	lsrs	r0, r0, #6
  RtcHandle.Instance = RTC;
90026fc2:	6022      	str	r2, [r4, #0]
  EmWiSystemTicks = 0;
90026fc4:	601d      	str	r5, [r3, #0]
  HAL_SYSTICK_Config( SystemCoreClock / 1000 );
90026fc6:	f001 fc5d 	bl	90028884 <HAL_SYSTICK_Config>
     - OutPut         = Output Disable
     - OutPutPolarity = High Polarity
     - OutPutType     = Open Drain */
  RtcHandle.Init.HourFormat     = RTC_HOURFORMAT_24;
  RtcHandle.Init.AsynchPrediv   = RTC_ASYNCH_PREDIV;
  RtcHandle.Init.SynchPrediv    = RTC_SYNCH_PREDIV;
90026fca:	23f9      	movs	r3, #249	; 0xf9
  RtcHandle.Init.AsynchPrediv   = RTC_ASYNCH_PREDIV;
90026fcc:	227f      	movs	r2, #127	; 0x7f
  RtcHandle.Init.OutPut         = RTC_OUTPUT_DISABLE;
  RtcHandle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
  RtcHandle.Init.OutPutType     = RTC_OUTPUT_TYPE_OPENDRAIN;

  HAL_RTC_Init( &RtcHandle );
90026fce:	4620      	mov	r0, r4
  RtcHandle.Init.HourFormat     = RTC_HOURFORMAT_24;
90026fd0:	6065      	str	r5, [r4, #4]
  RtcHandle.Init.OutPut         = RTC_OUTPUT_DISABLE;
90026fd2:	6125      	str	r5, [r4, #16]
  RtcHandle.Init.OutPutType     = RTC_OUTPUT_TYPE_OPENDRAIN;
90026fd4:	e9c4 5506 	strd	r5, r5, [r4, #24]
  RtcHandle.Init.SynchPrediv    = RTC_SYNCH_PREDIV;
90026fd8:	e9c4 2302 	strd	r2, r3, [r4, #8]
}
90026fdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_RTC_Init( &RtcHandle );
90026fe0:	f004 bce8 	b.w	9002b9b4 <HAL_RTC_Init>
90026fe4:	20000030 	.word	0x20000030
90026fe8:	10624dd3 	.word	0x10624dd3
90026fec:	20000388 	.word	0x20000388
90026ff0:	58004000 	.word	0x58004000
90026ff4:	20000380 	.word	0x20000380

90026ff8 <EwBspClockTickIncrement>:
*   None
*
*******************************************************************************/
void EwBspClockTickIncrement( void )
{
  EmWiSystemTicks++;
90026ff8:	4a02      	ldr	r2, [pc, #8]	; (90027004 <EwBspClockTickIncrement+0xc>)
90026ffa:	6813      	ldr	r3, [r2, #0]
90026ffc:	3301      	adds	r3, #1
90026ffe:	6013      	str	r3, [r2, #0]
}
90027000:	4770      	bx	lr
90027002:	bf00      	nop
90027004:	20000380 	.word	0x20000380

90027008 <EwBspClockGetTicks>:
*   The current ticks counter value.
*
*******************************************************************************/
unsigned long EwBspClockGetTicks( void )
{
  return EmWiSystemTicks;
90027008:	4b01      	ldr	r3, [pc, #4]	; (90027010 <EwBspClockGetTicks+0x8>)
9002700a:	6818      	ldr	r0, [r3, #0]
}
9002700c:	4770      	bx	lr
9002700e:	bf00      	nop
90027010:	20000380 	.word	0x20000380

90027014 <EwBspClockGetTime>:
* RETURN VALUE:
*   The current time in seconds since 01.01.1970.
*
*******************************************************************************/
unsigned long EwBspClockGetTime( void )
{
90027014:	b570      	push	{r4, r5, r6, lr}
90027016:	b086      	sub	sp, #24
  RTC_TimeTypeDef currentTime;
  RTC_DateTypeDef currentDate;

  HAL_RTC_GetTime( &RtcHandle, &currentTime, RTC_FORMAT_BIN );
90027018:	2200      	movs	r2, #0
9002701a:	481b      	ldr	r0, [pc, #108]	; (90027088 <EwBspClockGetTime+0x74>)
9002701c:	a901      	add	r1, sp, #4
9002701e:	f004 fc07 	bl	9002b830 <HAL_RTC_GetTime>
  HAL_RTC_GetDate( &RtcHandle, &currentDate, RTC_FORMAT_BIN );
90027022:	4669      	mov	r1, sp
90027024:	2200      	movs	r2, #0
90027026:	4818      	ldr	r0, [pc, #96]	; (90027088 <EwBspClockGetTime+0x74>)
90027028:	f004 fc36 	bl	9002b898 <HAL_RTC_GetDate>

  unsigned long   days;
  unsigned long   year   = currentDate.Year;
9002702c:	f89d 5003 	ldrb.w	r5, [sp, #3]

  /* year is the number of years since 2000 */
  /* calculate number of days since 01.01.1970 until begin of current
     year including the additional days of leap years */

  days = (year + 30) * 365 + (year + 27) / 4;
90027030:	f642 20c6 	movw	r0, #10950	; 0x2ac6
90027034:	f240 136d 	movw	r3, #365	; 0x16d
90027038:	f105 021b 	add.w	r2, r5, #27
  unsigned long   month  = currentDate.Month;
9002703c:	f89d 4001 	ldrb.w	r4, [sp, #1]
  days = (year + 30) * 365 + (year + 27) / 4;
90027040:	fb03 0305 	mla	r3, r3, r5, r0

  if (year & 0x3)
90027044:	07ad      	lsls	r5, r5, #30
  {
    days += DaysToMonth[month - 1];
90027046:	f104 34ff 	add.w	r4, r4, #4294967295
  unsigned long   hour   = currentTime.Hours;
9002704a:	f89d 1004 	ldrb.w	r1, [sp, #4]
  days = (year + 30) * 365 + (year + 27) / 4;
9002704e:	eb03 0392 	add.w	r3, r3, r2, lsr #2
    days += DaysToMonth[month - 1];
90027052:	bf18      	it	ne
90027054:	4d0d      	ldrne	r5, [pc, #52]	; (9002708c <EwBspClockGetTime+0x78>)
  unsigned long   minute = currentTime.Minutes;
90027056:	f89d 2005 	ldrb.w	r2, [sp, #5]
  }
  else
  {
    days += DaysToMonthInLeapYear[month - 1];
9002705a:	bf08      	it	eq
9002705c:	4d0c      	ldreq	r5, [pc, #48]	; (90027090 <EwBspClockGetTime+0x7c>)
  days += day;

  timeInSeconds =
    days   * RtcTicksPerDay +
    hour   * RtcTicksPerHour +
    minute * RtcTicksPerMinute +
9002705e:	ebc2 1202 	rsb	r2, r2, r2, lsl #4
  unsigned long   day    = currentDate.Date;
90027062:	f89d 0002 	ldrb.w	r0, [sp, #2]
    days += DaysToMonthInLeapYear[month - 1];
90027066:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
    minute * RtcTicksPerMinute +
9002706a:	0092      	lsls	r2, r2, #2
  unsigned long   second = currentTime.Seconds;
9002706c:	f89d 6006 	ldrb.w	r6, [sp, #6]
    days += DaysToMonthInLeapYear[month - 1];
90027070:	4423      	add	r3, r4
    hour   * RtcTicksPerHour +
90027072:	f44f 6461 	mov.w	r4, #3600	; 0xe10
  timeInSeconds =
90027076:	fb04 2201 	mla	r2, r4, r1, r2
  days += day;
9002707a:	4403      	add	r3, r0
    days   * RtcTicksPerDay +
9002707c:	4805      	ldr	r0, [pc, #20]	; (90027094 <EwBspClockGetTime+0x80>)
  timeInSeconds =
9002707e:	4432      	add	r2, r6
    second;

  return timeInSeconds;
}
90027080:	fb00 2003 	mla	r0, r0, r3, r2
90027084:	b006      	add	sp, #24
90027086:	bd70      	pop	{r4, r5, r6, pc}
90027088:	20000388 	.word	0x20000388
9002708c:	900346f0 	.word	0x900346f0
90027090:	90034724 	.word	0x90034724
90027094:	00015180 	.word	0x00015180

90027098 <EwBspClockSetTime>:
  unsigned int hour;
  unsigned int minute;
  unsigned int second;

  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
90027098:	4b5d      	ldr	r3, [pc, #372]	; (90027210 <EwBspClockSetTime+0x178>)
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
9002709a:	495e      	ldr	r1, [pc, #376]	; (90027214 <EwBspClockSetTime+0x17c>)
  second  = ( unsigned int ) (( aTime / RtcTicksPerSecond  ) % 60 );

  /* calculation of the date */
  day       = ( unsigned int ) ( aTime / RtcTicksPerDay + 365);
9002709c:	4a5e      	ldr	r2, [pc, #376]	; (90027218 <EwBspClockSetTime+0x180>)
{
9002709e:	b5f0      	push	{r4, r5, r6, r7, lr}
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270a0:	fba3 5700 	umull	r5, r7, r3, r0
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270a4:	4c5d      	ldr	r4, [pc, #372]	; (9002721c <EwBspClockSetTime+0x184>)
900270a6:	fba1 5100 	umull	r5, r1, r1, r0

  if ( day >= 48213 )
900270aa:	f64b 4654 	movw	r6, #48212	; 0xbc54
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270ae:	097f      	lsrs	r7, r7, #5
  day       = ( unsigned int ) ( aTime / RtcTicksPerDay + 365);
900270b0:	fba2 5200 	umull	r5, r2, r2, r0
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270b4:	0ac9      	lsrs	r1, r1, #11
{
900270b6:	b087      	sub	sp, #28
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270b8:	fba3 5307 	umull	r5, r3, r3, r7
  day       = ( unsigned int ) ( aTime / RtcTicksPerDay + 365);
900270bc:	0c12      	lsrs	r2, r2, #16
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270be:	fba4 5401 	umull	r5, r4, r4, r1
  second  = ( unsigned int ) (( aTime / RtcTicksPerSecond  ) % 60 );
900270c2:	ebc7 1507 	rsb	r5, r7, r7, lsl #4
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270c6:	095b      	lsrs	r3, r3, #5
  day       = ( unsigned int ) ( aTime / RtcTicksPerDay + 365);
900270c8:	f202 1c6d 	addw	ip, r2, #365	; 0x16d
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270cc:	0924      	lsrs	r4, r4, #4
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270ce:	ebc3 1303 	rsb	r3, r3, r3, lsl #4
  if ( day >= 48213 )
900270d2:	45b4      	cmp	ip, r6
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
  minute  = ( unsigned int ) (( aTime / RtcTicksPerMinute  ) % 60 );
900270d8:	eba7 0383 	sub.w	r3, r7, r3, lsl #2
  hour    = ( unsigned int ) (( aTime / RtcTicksPerHour    ) % 24 );
900270dc:	eba1 04c4 	sub.w	r4, r1, r4, lsl #3
  second  = ( unsigned int ) (( aTime / RtcTicksPerSecond  ) % 60 );
900270e0:	eba0 0585 	sub.w	r5, r0, r5, lsl #2
  if ( day >= 48213 )
900270e4:	d96f      	bls.n	900271c6 <EwBspClockSetTime+0x12e>
    day++;
900270e6:	f502 71b7 	add.w	r1, r2, #366	; 0x16e

  year4     = day / DaysPer4Years;
900270ea:	4a4d      	ldr	r2, [pc, #308]	; (90027220 <EwBspClockSetTime+0x188>)
900270ec:	f240 56b5 	movw	r6, #1461	; 0x5b5
  day      -= year4 * DaysPer4Years;
  year      = day / 365;
900270f0:	484c      	ldr	r0, [pc, #304]	; (90027224 <EwBspClockSetTime+0x18c>)
  year4     = day / DaysPer4Years;
900270f2:	fba2 7201 	umull	r7, r2, r2, r1
900270f6:	09d2      	lsrs	r2, r2, #7
  day      -= year4 * DaysPer4Years;
900270f8:	fb06 1112 	mls	r1, r6, r2, r1
  year      = day / 365;
900270fc:	fba0 6001 	umull	r6, r0, r0, r1
90027100:	1a0e      	subs	r6, r1, r0
90027102:	eb00 0056 	add.w	r0, r0, r6, lsr #1
90027106:	0a00      	lsrs	r0, r0, #8

  if ( year == 4 )
90027108:	2804      	cmp	r0, #4
9002710a:	d04a      	beq.n	900271a2 <EwBspClockSetTime+0x10a>
9002710c:	f240 166d 	movw	r6, #365	; 0x16d
90027110:	f200 77b1 	addw	r7, r0, #1969	; 0x7b1
90027114:	fb06 f000 	mul.w	r0, r6, r0
    if ( !( year4 % 100 == LeapYearsFromBeginToNext400Year )
       && ( year4 %  25 == LeapYearsFromBeginToNext400Year ))
      year = 4;
  }

  day  -= year * 365;
90027118:	1a09      	subs	r1, r1, r0
     for the month. */

  month = day >> 5;

  /* correct month if necessary */
  if ( ( year % 4 != 0 ) ||
9002711a:	07b8      	lsls	r0, r7, #30
  year  = year4 * 4 + year + 1969;
9002711c:	eb07 0282 	add.w	r2, r7, r2, lsl #2
  month = day >> 5;
90027120:	ea4f 1651 	mov.w	r6, r1, lsr #5
  if ( ( year % 4 != 0 ) ||
90027124:	d02b      	beq.n	9002717e <EwBspClockSetTime+0xe6>
      (( year % 100 == 0 ) && ( year % 400 != 0 )) )
  {
    /* no leap year */
    if ( day >= DaysToMonth[ month + 1 ] )
90027126:	1c77      	adds	r7, r6, #1
90027128:	f8df c114 	ldr.w	ip, [pc, #276]	; 90027240 <EwBspClockSetTime+0x1a8>
9002712c:	f85c 0027 	ldr.w	r0, [ip, r7, lsl #2]
90027130:	4288      	cmp	r0, r1
90027132:	d832      	bhi.n	9002719a <EwBspClockSetTime+0x102>
  {
    /* leap year */
    if ( day >= DaysToMonthInLeapYear[ month + 1 ] )
      month++;

    day -= DaysToMonthInLeapYear[ month ];
90027134:	1a09      	subs	r1, r1, r0
  }

  memset( &rtcTime, 0, sizeof( rtcTime ));
90027136:	2600      	movs	r6, #0
  rtcTime.Hours   = hour;
  rtcTime.Minutes = minute;
  rtcTime.Seconds = second;
  rtcDate.Date    = day + 1;
  rtcDate.Month   = month + 1;
  rtcDate.Year    = year - 2000;
90027138:	f102 0030 	add.w	r0, r2, #48	; 0x30
  rtcDate.Month   = month + 1;
9002713c:	3701      	adds	r7, #1
  rtcDate.Date    = day + 1;
9002713e:	3101      	adds	r1, #1

  HAL_RTC_SetTime( &RtcHandle, &rtcTime, RTC_FORMAT_BIN );
90027140:	4632      	mov	r2, r6
  rtcDate.Year    = year - 2000;
90027142:	f88d 0003 	strb.w	r0, [sp, #3]
  rtcDate.Date    = day + 1;
90027146:	f88d 1002 	strb.w	r1, [sp, #2]
  HAL_RTC_SetTime( &RtcHandle, &rtcTime, RTC_FORMAT_BIN );
9002714a:	a901      	add	r1, sp, #4
9002714c:	4836      	ldr	r0, [pc, #216]	; (90027228 <EwBspClockSetTime+0x190>)
  memset( &rtcTime, 0, sizeof( rtcTime ));
9002714e:	9601      	str	r6, [sp, #4]
  rtcDate.Month   = month + 1;
90027150:	f88d 7001 	strb.w	r7, [sp, #1]
  rtcTime.Minutes = minute;
90027154:	f88d 3005 	strb.w	r3, [sp, #5]
  memset( &rtcDate, 0, sizeof( rtcDate ));
90027158:	f88d 6000 	strb.w	r6, [sp]
  rtcTime.Hours   = hour;
9002715c:	f88d 4004 	strb.w	r4, [sp, #4]
  rtcTime.Seconds = second;
90027160:	f88d 5006 	strb.w	r5, [sp, #6]
  memset( &rtcTime, 0, sizeof( rtcTime ));
90027164:	e9cd 6602 	strd	r6, r6, [sp, #8]
90027168:	e9cd 6604 	strd	r6, r6, [sp, #16]
  HAL_RTC_SetTime( &RtcHandle, &rtcTime, RTC_FORMAT_BIN );
9002716c:	f004 fc6e 	bl	9002ba4c <HAL_RTC_SetTime>
  HAL_RTC_SetDate( &RtcHandle, &rtcDate, RTC_FORMAT_BIN );
90027170:	4632      	mov	r2, r6
90027172:	4669      	mov	r1, sp
90027174:	482c      	ldr	r0, [pc, #176]	; (90027228 <EwBspClockSetTime+0x190>)
90027176:	f004 fceb 	bl	9002bb50 <HAL_RTC_SetDate>
}
9002717a:	b007      	add	sp, #28
9002717c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002717e:	482b      	ldr	r0, [pc, #172]	; (9002722c <EwBspClockSetTime+0x194>)
  if ( ( year % 4 != 0 ) ||
90027180:	4f2b      	ldr	r7, [pc, #172]	; (90027230 <EwBspClockSetTime+0x198>)
90027182:	fb00 f002 	mul.w	r0, r0, r2
90027186:	ebb7 0fb0 	cmp.w	r7, r0, ror #2
9002718a:	d235      	bcs.n	900271f8 <EwBspClockSetTime+0x160>
    if ( day >= DaysToMonthInLeapYear[ month + 1 ] )
9002718c:	1c77      	adds	r7, r6, #1
9002718e:	f8df c0b4 	ldr.w	ip, [pc, #180]	; 90027244 <EwBspClockSetTime+0x1ac>
90027192:	f85c 0027 	ldr.w	r0, [ip, r7, lsl #2]
90027196:	4288      	cmp	r0, r1
90027198:	d9cc      	bls.n	90027134 <EwBspClockSetTime+0x9c>
9002719a:	f85c 0026 	ldr.w	r0, [ip, r6, lsl #2]
9002719e:	4637      	mov	r7, r6
900271a0:	e7c8      	b.n	90027134 <EwBspClockSetTime+0x9c>
900271a2:	4e24      	ldr	r6, [pc, #144]	; (90027234 <EwBspClockSetTime+0x19c>)
       && ( year4 %  25 == LeapYearsFromBeginToNext400Year ))
900271a4:	f240 7cb4 	movw	ip, #1972	; 0x7b4
900271a8:	4820      	ldr	r0, [pc, #128]	; (9002722c <EwBspClockSetTime+0x194>)
900271aa:	f240 77b5 	movw	r7, #1973	; 0x7b5
900271ae:	fb00 6002 	mla	r0, r0, r2, r6
900271b2:	4e21      	ldr	r6, [pc, #132]	; (90027238 <EwBspClockSetTime+0x1a0>)
900271b4:	42b0      	cmp	r0, r6
900271b6:	f240 56b4 	movw	r6, #1460	; 0x5b4
900271ba:	f240 4047 	movw	r0, #1095	; 0x447
900271be:	bf8c      	ite	hi
900271c0:	4667      	movhi	r7, ip
900271c2:	4630      	movls	r0, r6
900271c4:	e7a8      	b.n	90027118 <EwBspClockSetTime+0x80>
  year4     = day / DaysPer4Years;
900271c6:	4a16      	ldr	r2, [pc, #88]	; (90027220 <EwBspClockSetTime+0x188>)
900271c8:	f240 51b5 	movw	r1, #1461	; 0x5b5
  year      = day / 365;
900271cc:	4815      	ldr	r0, [pc, #84]	; (90027224 <EwBspClockSetTime+0x18c>)
  year4     = day / DaysPer4Years;
900271ce:	fba2 620c 	umull	r6, r2, r2, ip
900271d2:	09d2      	lsrs	r2, r2, #7
  day      -= year4 * DaysPer4Years;
900271d4:	fb01 c112 	mls	r1, r1, r2, ip
  year      = day / 365;
900271d8:	fba0 6001 	umull	r6, r0, r0, r1
900271dc:	1a0e      	subs	r6, r1, r0
900271de:	eb00 0056 	add.w	r0, r0, r6, lsr #1
900271e2:	0a00      	lsrs	r0, r0, #8
  if ( year == 4 )
900271e4:	2804      	cmp	r0, #4
900271e6:	d191      	bne.n	9002710c <EwBspClockSetTime+0x74>
    if ( !( year4 % 100 == LeapYearsFromBeginToNext400Year )
900271e8:	2a07      	cmp	r2, #7
900271ea:	d1da      	bne.n	900271a2 <EwBspClockSetTime+0x10a>
  day  -= year * 365;
900271ec:	f2a1 4147 	subw	r1, r1, #1095	; 0x447
  year  = year4 * 4 + year + 1969;
900271f0:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
  month = day >> 5;
900271f4:	094e      	lsrs	r6, r1, #5
  if ( ( year % 4 != 0 ) ||
900271f6:	e7c9      	b.n	9002718c <EwBspClockSetTime+0xf4>
      (( year % 100 == 0 ) && ( year % 400 != 0 )) )
900271f8:	4f10      	ldr	r7, [pc, #64]	; (9002723c <EwBspClockSetTime+0x1a4>)
900271fa:	ebb7 1f30 	cmp.w	r7, r0, ror #4
900271fe:	d2c5      	bcs.n	9002718c <EwBspClockSetTime+0xf4>
    if ( day >= DaysToMonth[ month + 1 ] )
90027200:	1c77      	adds	r7, r6, #1
90027202:	f8df c03c 	ldr.w	ip, [pc, #60]	; 90027240 <EwBspClockSetTime+0x1a8>
90027206:	f85c 0027 	ldr.w	r0, [ip, r7, lsl #2]
9002720a:	4288      	cmp	r0, r1
9002720c:	d992      	bls.n	90027134 <EwBspClockSetTime+0x9c>
9002720e:	e7c4      	b.n	9002719a <EwBspClockSetTime+0x102>
90027210:	88888889 	.word	0x88888889
90027214:	91a2b3c5 	.word	0x91a2b3c5
90027218:	c22e4507 	.word	0xc22e4507
9002721c:	aaaaaaab 	.word	0xaaaaaaab
90027220:	166db073 	.word	0x166db073
90027224:	6719f361 	.word	0x6719f361
90027228:	20000388 	.word	0x20000388
9002722c:	c28f5c29 	.word	0xc28f5c29
90027230:	028f5c28 	.word	0x028f5c28
90027234:	ae147ae1 	.word	0xae147ae1
90027238:	0a3d70a3 	.word	0x0a3d70a3
9002723c:	00a3d70a 	.word	0x00a3d70a
90027240:	900346f0 	.word	0x900346f0
90027244:	90034724 	.word	0x90034724

90027248 <EwBspClockCpuLoadSetActive>:
{
  #if EW_CPU_LOAD_MEASURING == 1

    static char initialized = 0;

    if ( !initialized )
90027248:	4a14      	ldr	r2, [pc, #80]	; (9002729c <EwBspClockCpuLoadSetActive+0x54>)
{
9002724a:	b470      	push	{r4, r5, r6}
    if ( !initialized )
9002724c:	7813      	ldrb	r3, [r2, #0]
9002724e:	b15b      	cbz	r3, 90027268 <EwBspClockCpuLoadSetActive+0x20>
90027250:	4913      	ldr	r1, [pc, #76]	; (900272a0 <EwBspClockCpuLoadSetActive+0x58>)
90027252:	4c14      	ldr	r4, [pc, #80]	; (900272a4 <EwBspClockCpuLoadSetActive+0x5c>)
90027254:	680b      	ldr	r3, [r1, #0]
90027256:	6820      	ldr	r0, [r4, #0]
    cycCnt = DWT->CYCCNT;
90027258:	4a13      	ldr	r2, [pc, #76]	; (900272a8 <EwBspClockCpuLoadSetActive+0x60>)
9002725a:	6852      	ldr	r2, [r2, #4]
    {
      CycleCounterInit();
      initialized = 1;
    }

    SleepingTime += GetCycleCounterDelta();
9002725c:	4413      	add	r3, r2
    PrevCycCnt = cycCnt;
9002725e:	6022      	str	r2, [r4, #0]
    SleepingTime += GetCycleCounterDelta();
90027260:	1a1b      	subs	r3, r3, r0

  #endif
}
90027262:	bc70      	pop	{r4, r5, r6}
    SleepingTime += GetCycleCounterDelta();
90027264:	600b      	str	r3, [r1, #0]
}
90027266:	4770      	bx	lr
    CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
90027268:	4910      	ldr	r1, [pc, #64]	; (900272ac <EwBspClockCpuLoadSetActive+0x64>)
    if ((*(uint32_t*)0xE0001FB4) & 1)
9002726a:	4811      	ldr	r0, [pc, #68]	; (900272b0 <EwBspClockCpuLoadSetActive+0x68>)
    CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
9002726c:	68cb      	ldr	r3, [r1, #12]
    if ((*(uint32_t*)0xE0001FB4) & 1)
9002726e:	6800      	ldr	r0, [r0, #0]
    CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
90027270:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
90027274:	60cb      	str	r3, [r1, #12]
    if ((*(uint32_t*)0xE0001FB4) & 1)
90027276:	07c3      	lsls	r3, r0, #31
90027278:	d502      	bpl.n	90027280 <EwBspClockCpuLoadSetActive+0x38>
      *(uint32_t*)0xE0001FB0 = 0xC5ACCE55;
9002727a:	4b0e      	ldr	r3, [pc, #56]	; (900272b4 <EwBspClockCpuLoadSetActive+0x6c>)
9002727c:	490e      	ldr	r1, [pc, #56]	; (900272b8 <EwBspClockCpuLoadSetActive+0x70>)
9002727e:	6019      	str	r1, [r3, #0]
    DWT->CYCCNT = 0;
90027280:	2100      	movs	r1, #0
90027282:	4b09      	ldr	r3, [pc, #36]	; (900272a8 <EwBspClockCpuLoadSetActive+0x60>)
    WorkingTime   = 0;
90027284:	4c0d      	ldr	r4, [pc, #52]	; (900272bc <EwBspClockCpuLoadSetActive+0x74>)
      initialized = 1;
90027286:	2501      	movs	r5, #1
    DWT->CTRL = 0x40000001;
90027288:	4e0d      	ldr	r6, [pc, #52]	; (900272c0 <EwBspClockCpuLoadSetActive+0x78>)
      initialized = 1;
9002728a:	4608      	mov	r0, r1
    DWT->CYCCNT = 0;
9002728c:	6059      	str	r1, [r3, #4]
    DWT->CTRL = 0x40000001;
9002728e:	601e      	str	r6, [r3, #0]
      initialized = 1;
90027290:	460b      	mov	r3, r1
    WorkingTime   = 0;
90027292:	6021      	str	r1, [r4, #0]
      initialized = 1;
90027294:	7015      	strb	r5, [r2, #0]
90027296:	4902      	ldr	r1, [pc, #8]	; (900272a0 <EwBspClockCpuLoadSetActive+0x58>)
90027298:	4c02      	ldr	r4, [pc, #8]	; (900272a4 <EwBspClockCpuLoadSetActive+0x5c>)
9002729a:	e7dd      	b.n	90027258 <EwBspClockCpuLoadSetActive+0x10>
9002729c:	200003b4 	.word	0x200003b4
900272a0:	200003ac 	.word	0x200003ac
900272a4:	20000384 	.word	0x20000384
900272a8:	e0001000 	.word	0xe0001000
900272ac:	e000edf0 	.word	0xe000edf0
900272b0:	e0001fb4 	.word	0xe0001fb4
900272b4:	e0001fb0 	.word	0xe0001fb0
900272b8:	c5acce55 	.word	0xc5acce55
900272bc:	200003b0 	.word	0x200003b0
900272c0:	40000001 	.word	0x40000001

900272c4 <EwBspClockCpuLoadSetIdle>:
    cycCnt = DWT->CYCCNT;
900272c4:	4b06      	ldr	r3, [pc, #24]	; (900272e0 <EwBspClockCpuLoadSetIdle+0x1c>)
*******************************************************************************/
void EwBspClockCpuLoadSetIdle( void )
{
  #if EW_CPU_LOAD_MEASURING == 1

    WorkingTime += GetCycleCounterDelta();
900272c6:	4a07      	ldr	r2, [pc, #28]	; (900272e4 <EwBspClockCpuLoadSetIdle+0x20>)
    cycCnt = DWT->CYCCNT;
900272c8:	6858      	ldr	r0, [r3, #4]
    result = cycCnt - PrevCycCnt;
900272ca:	4907      	ldr	r1, [pc, #28]	; (900272e8 <EwBspClockCpuLoadSetIdle+0x24>)
    WorkingTime += GetCycleCounterDelta();
900272cc:	6813      	ldr	r3, [r2, #0]
{
900272ce:	b410      	push	{r4}
    WorkingTime += GetCycleCounterDelta();
900272d0:	4403      	add	r3, r0
    result = cycCnt - PrevCycCnt;
900272d2:	680c      	ldr	r4, [r1, #0]
    PrevCycCnt = cycCnt;
900272d4:	6008      	str	r0, [r1, #0]
    WorkingTime += GetCycleCounterDelta();
900272d6:	1b1b      	subs	r3, r3, r4

  #endif
}
900272d8:	f85d 4b04 	ldr.w	r4, [sp], #4
    WorkingTime += GetCycleCounterDelta();
900272dc:	6013      	str	r3, [r2, #0]
}
900272de:	4770      	bx	lr
900272e0:	e0001000 	.word	0xe0001000
900272e4:	200003b0 	.word	0x200003b0
900272e8:	20000384 	.word	0x20000384

900272ec <HAL_UART_MspInit>:
{
  GPIO_InitTypeDef  GPIO_InitStruct;

  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
900272ec:	4b1d      	ldr	r3, [pc, #116]	; (90027364 <HAL_UART_MspInit+0x78>)
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
  GPIO_InitStruct.Alternate = USARTx_TX_AF;

  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
900272ee:	481e      	ldr	r0, [pc, #120]	; (90027368 <HAL_UART_MspInit+0x7c>)
  USARTx_TX_GPIO_CLK_ENABLE();
900272f0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
{
900272f4:	b570      	push	{r4, r5, r6, lr}
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
900272f6:	2502      	movs	r5, #2
{
900272f8:	b088      	sub	sp, #32
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
900272fa:	f44f 6680 	mov.w	r6, #1024	; 0x400
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
900272fe:	2401      	movs	r4, #1
  USARTx_TX_GPIO_CLK_ENABLE();
90027300:	432a      	orrs	r2, r5
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
90027302:	a903      	add	r1, sp, #12
  USARTx_TX_GPIO_CLK_ENABLE();
90027304:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90027308:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9002730c:	402a      	ands	r2, r5
9002730e:	9200      	str	r2, [sp, #0]
90027310:	9a00      	ldr	r2, [sp, #0]
  USARTx_RX_GPIO_CLK_ENABLE();
90027312:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027316:	432a      	orrs	r2, r5
90027318:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9002731c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027320:	402a      	ands	r2, r5
90027322:	9201      	str	r2, [sp, #4]
90027324:	9a01      	ldr	r2, [sp, #4]
  USARTx_CLK_ENABLE();
90027326:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
9002732a:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9002732e:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90027332:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
90027336:	9504      	str	r5, [sp, #16]
  USARTx_CLK_ENABLE();
90027338:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
9002733c:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
9002733e:	2507      	movs	r5, #7
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
90027340:	9603      	str	r6, [sp, #12]
  USARTx_CLK_ENABLE();
90027342:	9302      	str	r3, [sp, #8]
90027344:	9b02      	ldr	r3, [sp, #8]
  GPIO_InitStruct.Pull      = GPIO_PULLUP;
90027346:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
90027348:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
9002734a:	f001 fdd1 	bl	90028ef0 <HAL_GPIO_Init>

  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_RX_PIN;
9002734e:	f44f 6300 	mov.w	r3, #2048	; 0x800
  GPIO_InitStruct.Alternate = USARTx_RX_AF;

  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
90027352:	a903      	add	r1, sp, #12
90027354:	4804      	ldr	r0, [pc, #16]	; (90027368 <HAL_UART_MspInit+0x7c>)
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
90027356:	9507      	str	r5, [sp, #28]
  GPIO_InitStruct.Pin       = USARTx_RX_PIN;
90027358:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
9002735a:	f001 fdc9 	bl	90028ef0 <HAL_GPIO_Init>
}
9002735e:	b008      	add	sp, #32
90027360:	bd70      	pop	{r4, r5, r6, pc}
90027362:	bf00      	nop
90027364:	58024400 	.word	0x58024400
90027368:	58020400 	.word	0x58020400

9002736c <EwBspConsoleInit>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspConsoleInit( void )
{
9002736c:	b410      	push	{r4}
  UART_Handle.Instance            = UART_PORTID;
9002736e:	4809      	ldr	r0, [pc, #36]	; (90027394 <EwBspConsoleInit+0x28>)
  UART_Handle.Init.BaudRate       = 115200;
90027370:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
  UART_Handle.Instance            = UART_PORTID;
90027374:	4c08      	ldr	r4, [pc, #32]	; (90027398 <EwBspConsoleInit+0x2c>)
  UART_Handle.Init.WordLength     = UART_WORDLENGTH_8B;
90027376:	2300      	movs	r3, #0
  UART_Handle.Init.StopBits       = UART_STOPBITS_1;
  UART_Handle.Init.Parity         = UART_PARITY_NONE;
  UART_Handle.Init.Mode           = UART_MODE_TX_RX;
90027378:	220c      	movs	r2, #12
  UART_Handle.Init.Parity         = UART_PARITY_NONE;
9002737a:	6103      	str	r3, [r0, #16]
  UART_Handle.Init.Mode           = UART_MODE_TX_RX;
9002737c:	6142      	str	r2, [r0, #20]
  UART_Handle.Init.BaudRate       = 115200;
9002737e:	e9c0 4100 	strd	r4, r1, [r0]
  UART_Handle.Init.HwFlowCtl      = UART_HWCONTROL_NONE;
  UART_Handle.Init.OverSampling   = UART_OVERSAMPLING_16;

  HAL_UART_Init( &UART_Handle );
}
90027382:	f85d 4b04 	ldr.w	r4, [sp], #4
  UART_Handle.Init.StopBits       = UART_STOPBITS_1;
90027386:	e9c0 3302 	strd	r3, r3, [r0, #8]
  UART_Handle.Init.OverSampling   = UART_OVERSAMPLING_16;
9002738a:	e9c0 3306 	strd	r3, r3, [r0, #24]
  HAL_UART_Init( &UART_Handle );
9002738e:	f005 b85f 	b.w	9002c450 <HAL_UART_Init>
90027392:	bf00      	nop
90027394:	20003880 	.word	0x20003880
90027398:	40004800 	.word	0x40004800

9002739c <EwBspConsoleDone>:
*   None
*
*******************************************************************************/
void EwBspConsoleDone( void )
{
}
9002739c:	4770      	bx	lr
9002739e:	bf00      	nop

900273a0 <EwBspConsolePutCharacter>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspConsolePutCharacter( unsigned char aCharacter )
{
900273a0:	b510      	push	{r4, lr}
900273a2:	b082      	sub	sp, #8
900273a4:	4604      	mov	r4, r0
  HAL_UART_Transmit( &UART_Handle, (uint8_t*)&aCharacter, 1, 10 );
900273a6:	230a      	movs	r3, #10
900273a8:	2201      	movs	r2, #1
900273aa:	f10d 0107 	add.w	r1, sp, #7
900273ae:	4803      	ldr	r0, [pc, #12]	; (900273bc <EwBspConsolePutCharacter+0x1c>)
{
900273b0:	f88d 4007 	strb.w	r4, [sp, #7]
  HAL_UART_Transmit( &UART_Handle, (uint8_t*)&aCharacter, 1, 10 );
900273b4:	f004 ffa0 	bl	9002c2f8 <HAL_UART_Transmit>
}
900273b8:	b002      	add	sp, #8
900273ba:	bd10      	pop	{r4, pc}
900273bc:	20003880 	.word	0x20003880

900273c0 <HAL_LTDC_MspInit>:
void HAL_LTDC_MspInit(LTDC_HandleTypeDef *hltdc)
{
  GPIO_InitTypeDef gpio_init_structure;

 /* Enable the LTDC and DMA2D clocks */
  __HAL_RCC_LTDC_CLK_ENABLE();
900273c0:	4b49      	ldr	r3, [pc, #292]	; (900274e8 <HAL_LTDC_MspInit+0x128>)
  __HAL_RCC_GPIOK_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOD_CLK_ENABLE();
  /*** LTDC Pins configuration ***/
  /* GPIOI configuration */
  gpio_init_structure.Pin       = GPIO_PIN_0 |GPIO_PIN_1 |GPIO_PIN_9 |GPIO_PIN_12 | GPIO_PIN_14 | GPIO_PIN_15;
900273c2:	f24d 2003 	movw	r0, #53763	; 0xd203
  __HAL_RCC_LTDC_CLK_ENABLE();
900273c6:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
900273ca:	f042 0208 	orr.w	r2, r2, #8
{
900273ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_RCC_LTDC_CLK_ENABLE();
900273d2:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
{
900273d6:	b08c      	sub	sp, #48	; 0x30
  __HAL_RCC_LTDC_CLK_ENABLE();
900273d8:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900273dc:	2402      	movs	r4, #2
  gpio_init_structure.Pull      = GPIO_NOPULL;
900273de:	2500      	movs	r5, #0
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
900273e0:	260e      	movs	r6, #14
  __HAL_RCC_LTDC_CLK_ENABLE();
900273e2:	f002 0208 	and.w	r2, r2, #8
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
900273e6:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);

  gpio_init_structure.Pin       = GPIO_PIN_7;     /* LCD_DISP pin has to be manually controlled */
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900273e8:	4f40      	ldr	r7, [pc, #256]	; (900274ec <HAL_LTDC_MspInit+0x12c>)
  gpio_init_structure.Pin       = GPIO_PIN_7;     /* LCD_DISP pin has to be manually controlled */
900273ea:	f04f 0880 	mov.w	r8, #128	; 0x80
  __HAL_RCC_LTDC_CLK_ENABLE();
900273ee:	9201      	str	r2, [sp, #4]
900273f0:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900273f2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900273f6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900273fa:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900273fe:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027402:	f402 7280 	and.w	r2, r2, #256	; 0x100
90027406:	9202      	str	r2, [sp, #8]
90027408:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
9002740a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9002740e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
90027412:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90027416:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9002741a:	f402 7200 	and.w	r2, r2, #512	; 0x200
9002741e:	9203      	str	r2, [sp, #12]
90027420:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOK_CLK_ENABLE();
90027422:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027426:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
9002742a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9002742e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027432:	f402 6280 	and.w	r2, r2, #1024	; 0x400
90027436:	9204      	str	r2, [sp, #16]
90027438:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
9002743a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9002743e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
90027442:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90027446:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9002744a:	f002 0280 	and.w	r2, r2, #128	; 0x80
9002744e:	9205      	str	r2, [sp, #20]
90027450:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90027452:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90027456:	f042 0208 	orr.w	r2, r2, #8
9002745a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9002745e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Pin       = GPIO_PIN_0 |GPIO_PIN_1 |GPIO_PIN_9 |GPIO_PIN_12 | GPIO_PIN_14 | GPIO_PIN_15;
90027462:	9007      	str	r0, [sp, #28]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90027464:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
90027468:	4821      	ldr	r0, [pc, #132]	; (900274f0 <HAL_LTDC_MspInit+0x130>)
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
9002746a:	9408      	str	r4, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9002746c:	9306      	str	r3, [sp, #24]
9002746e:	9b06      	ldr	r3, [sp, #24]
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
90027470:	960b      	str	r6, [sp, #44]	; 0x2c
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
90027472:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOI, &gpio_init_structure);
90027476:	f001 fd3b 	bl	90028ef0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1  | GPIO_PIN_3 | \
9002747a:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  HAL_GPIO_Init(GPIOJ, &gpio_init_structure);
9002747e:	a907      	add	r1, sp, #28
90027480:	481c      	ldr	r0, [pc, #112]	; (900274f4 <HAL_LTDC_MspInit+0x134>)
  gpio_init_structure.Pin       = GPIO_PIN_0 | GPIO_PIN_1  | GPIO_PIN_3 | \
90027482:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
90027484:	e9cd 460a 	strd	r4, r6, [sp, #40]	; 0x28
  gpio_init_structure.Pull      = GPIO_NOPULL;
90027488:	e9cd 4508 	strd	r4, r5, [sp, #32]
  HAL_GPIO_Init(GPIOJ, &gpio_init_structure);
9002748c:	f001 fd30 	bl	90028ef0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = GPIO_PIN_2 | GPIO_PIN_3 | \
90027490:	237c      	movs	r3, #124	; 0x7c
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
90027492:	a907      	add	r1, sp, #28
90027494:	4818      	ldr	r0, [pc, #96]	; (900274f8 <HAL_LTDC_MspInit+0x138>)
  gpio_init_structure.Pin       = GPIO_PIN_2 | GPIO_PIN_3 | \
90027496:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
90027498:	e9cd 460a 	strd	r4, r6, [sp, #40]	; 0x28
  gpio_init_structure.Pull      = GPIO_NOPULL;
9002749c:	e9cd 4508 	strd	r4, r5, [sp, #32]
  HAL_GPIO_Init(GPIOK, &gpio_init_structure);
900274a0:	f001 fd26 	bl	90028ef0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       =  GPIO_PIN_9 | GPIO_PIN_1;
900274a4:	f240 2302 	movw	r3, #514	; 0x202
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900274a8:	a907      	add	r1, sp, #28
  gpio_init_structure.Alternate = GPIO_AF14_LTDC;
900274aa:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900274ac:	4813      	ldr	r0, [pc, #76]	; (900274fc <HAL_LTDC_MspInit+0x13c>)
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
900274ae:	2601      	movs	r6, #1
  gpio_init_structure.Pin       =  GPIO_PIN_9 | GPIO_PIN_1;
900274b0:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
900274b2:	940a      	str	r4, [sp, #40]	; 0x28
  gpio_init_structure.Pull      = GPIO_NOPULL;
900274b4:	e9cd 4508 	strd	r4, r5, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900274b8:	f001 fd1a 	bl	90028ef0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900274bc:	a907      	add	r1, sp, #28
900274be:	4638      	mov	r0, r7
  gpio_init_structure.Mode      = GPIO_MODE_OUTPUT_PP;
900274c0:	e9cd 8607 	strd	r8, r6, [sp, #28]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
900274c4:	f001 fd14 	bl	90028ef0 <HAL_GPIO_Init>
    /* Assert display enable LCD_DISP pin */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_7, GPIO_PIN_SET);
900274c8:	4632      	mov	r2, r6
900274ca:	4641      	mov	r1, r8
900274cc:	4638      	mov	r0, r7
900274ce:	f001 ff01 	bl	900292d4 <HAL_GPIO_WritePin>

  /* Set LTDC Interrupt priority */
  HAL_NVIC_SetPriority(LTDC_IRQn, 8, 0);
900274d2:	462a      	mov	r2, r5
900274d4:	2108      	movs	r1, #8
900274d6:	2058      	movs	r0, #88	; 0x58
900274d8:	f001 f978 	bl	900287cc <HAL_NVIC_SetPriority>

  /* Enable LTDC Interrupt */
  HAL_NVIC_EnableIRQ(LTDC_IRQn);
900274dc:	2058      	movs	r0, #88	; 0x58
900274de:	f001 f9af 	bl	90028840 <HAL_NVIC_EnableIRQ>
}
900274e2:	b00c      	add	sp, #48	; 0x30
900274e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900274e8:	58024400 	.word	0x58024400
900274ec:	58020c00 	.word	0x58020c00
900274f0:	58022000 	.word	0x58022000
900274f4:	58022400 	.word	0x58022400
900274f8:	58022800 	.word	0x58022800
900274fc:	58021c00 	.word	0x58021c00

90027500 <LTDC_IRQHandler>:
  __HAL_RCC_LTDC_RELEASE_RESET();
}

void LTDC_IRQHandler( void )
{
  HAL_LTDC_IRQHandler( &LtdcHandle );
90027500:	4801      	ldr	r0, [pc, #4]	; (90027508 <LTDC_IRQHandler+0x8>)
90027502:	f002 bbef 	b.w	90029ce4 <HAL_LTDC_IRQHandler>
90027506:	bf00      	nop
90027508:	20003910 	.word	0x20003910

9002750c <HAL_LTDC_LineEventCallback>:

void HAL_LTDC_LineEventCallback( LTDC_HandleTypeDef* aLtdc )
{
  #if EW_USE_DOUBLE_BUFFER == 1

    register uint32_t pendingBuffer = PendingFramebuffer;
9002750c:	4b11      	ldr	r3, [pc, #68]	; (90027554 <HAL_LTDC_LineEventCallback+0x48>)
    if ( CurrentFramebuffer != pendingBuffer )
9002750e:	4a12      	ldr	r2, [pc, #72]	; (90027558 <HAL_LTDC_LineEventCallback+0x4c>)
    register uint32_t pendingBuffer = PendingFramebuffer;
90027510:	681b      	ldr	r3, [r3, #0]
    if ( CurrentFramebuffer != pendingBuffer )
90027512:	6812      	ldr	r2, [r2, #0]
90027514:	429a      	cmp	r2, r3
{
90027516:	b510      	push	{r4, lr}
90027518:	4604      	mov	r4, r0
    if ( CurrentFramebuffer != pendingBuffer )
9002751a:	d105      	bne.n	90027528 <HAL_LTDC_LineEventCallback+0x1c>

      #endif
    }

    /* program next V-sync */
    HAL_LTDC_ProgramLineEvent( aLtdc, 0 );
9002751c:	4620      	mov	r0, r4
9002751e:	2100      	movs	r1, #0
      osSemaphoreRelease( LcdUpdateSemaphoreId );

    #endif

  #endif
}
90027520:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_LTDC_ProgramLineEvent( aLtdc, 0 );
90027524:	f002 bc70 	b.w	90029e08 <HAL_LTDC_ProgramLineEvent>
      LayerConfig.FBStartAdress = pendingBuffer;
90027528:	490c      	ldr	r1, [pc, #48]	; (9002755c <HAL_LTDC_LineEventCallback+0x50>)
      if ( HAL_LTDC_ConfigLayer( &LtdcHandle, &LayerConfig, LAYER_INDEX ) != HAL_OK )
9002752a:	2200      	movs	r2, #0
9002752c:	480c      	ldr	r0, [pc, #48]	; (90027560 <HAL_LTDC_LineEventCallback+0x54>)
      LayerConfig.FBStartAdress = pendingBuffer;
9002752e:	624b      	str	r3, [r1, #36]	; 0x24
      if ( HAL_LTDC_ConfigLayer( &LtdcHandle, &LayerConfig, LAYER_INDEX ) != HAL_OK )
90027530:	f002 fc3a 	bl	90029da8 <HAL_LTDC_ConfigLayer>
90027534:	b948      	cbnz	r0, 9002754a <HAL_LTDC_LineEventCallback+0x3e>
        osSemaphoreRelease( LcdUpdateSemaphoreId );
90027536:	4b0b      	ldr	r3, [pc, #44]	; (90027564 <HAL_LTDC_LineEventCallback+0x58>)
90027538:	6818      	ldr	r0, [r3, #0]
9002753a:	f005 f86b 	bl	9002c614 <osSemaphoreRelease>
    HAL_LTDC_ProgramLineEvent( aLtdc, 0 );
9002753e:	4620      	mov	r0, r4
90027540:	2100      	movs	r1, #0
}
90027542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_LTDC_ProgramLineEvent( aLtdc, 0 );
90027546:	f002 bc5f 	b.w	90029e08 <HAL_LTDC_ProgramLineEvent>
        EwPrint( "HAL_LTDC_LineEventCallback: Could not change layer configuration!\n" );
9002754a:	4807      	ldr	r0, [pc, #28]	; (90027568 <HAL_LTDC_LineEventCallback+0x5c>)
9002754c:	f7f5 fb4c 	bl	9001cbe8 <EwPrint>
90027550:	e7f1      	b.n	90027536 <HAL_LTDC_LineEventCallback+0x2a>
90027552:	bf00      	nop
90027554:	200003c0 	.word	0x200003c0
90027558:	200003b8 	.word	0x200003b8
9002755c:	200039b8 	.word	0x200039b8
90027560:	20003910 	.word	0x20003910
90027564:	200003bc 	.word	0x200003bc
90027568:	90034758 	.word	0x90034758

9002756c <EwBspDisplayInit>:
* RETURN VALUE:
*   Returns 1 if successful, 0 otherwise.
*
*******************************************************************************/
int EwBspDisplayInit( int aGuiWidth, int aGuiHeight, XDisplayInfo* aDisplayInfo )
{
9002756c:	b5f0      	push	{r4, r5, r6, r7, lr}
  EW_UNUSED_ARG( aGuiWidth );
  EW_UNUSED_ARG( aGuiHeight );

  /* check and clean display info structure */
  if ( !aDisplayInfo )
9002756e:	4614      	mov	r4, r2
{
90027570:	b083      	sub	sp, #12
  if ( !aDisplayInfo )
90027572:	2a00      	cmp	r2, #0
90027574:	d07f      	beq.n	90027676 <EwBspDisplayInit+0x10a>
    return 0;
  memset( aDisplayInfo, 0, sizeof( XDisplayInfo ));
90027576:	2220      	movs	r2, #32
90027578:	2100      	movs	r1, #0
9002757a:	4620      	mov	r0, r4

  /* initialize given framebuffer */
  memset((void*)EW_FRAME_BUFFER_ADDR, 0, EW_FRAME_BUFFER_WIDTH * EW_FRAME_BUFFER_HEIGHT * EW_FRAME_BUFFER_DEPTH );
9002757c:	f04f 4650 	mov.w	r6, #3489660928	; 0xd0000000
  memset( aDisplayInfo, 0, sizeof( XDisplayInfo ));
90027580:	f006 fd22 	bl	9002dfc8 <memset>
  memset((void*)EW_FRAME_BUFFER_ADDR, 0, EW_FRAME_BUFFER_WIDTH * EW_FRAME_BUFFER_HEIGHT * EW_FRAME_BUFFER_DEPTH );
90027584:	2100      	movs	r1, #0
90027586:	f44f 327f 	mov.w	r2, #261120	; 0x3fc00
9002758a:	4630      	mov	r0, r6

  #if EW_USE_FREE_RTOS == 1

    /* create the LCD update semaphore */
    osSemaphoreDef( LcdUpdateSemaphore );
9002758c:	460d      	mov	r5, r1
  memset((void*)EW_FRAME_BUFFER_ADDR, 0, EW_FRAME_BUFFER_WIDTH * EW_FRAME_BUFFER_HEIGHT * EW_FRAME_BUFFER_DEPTH );
9002758e:	f006 fd1b 	bl	9002dfc8 <memset>
    LcdUpdateSemaphoreId = osSemaphoreCreate( osSemaphore( LcdUpdateSemaphore ), 1 );
90027592:	2101      	movs	r1, #1
90027594:	a801      	add	r0, sp, #4
    osSemaphoreDef( LcdUpdateSemaphore );
90027596:	9501      	str	r5, [sp, #4]
    LcdUpdateSemaphoreId = osSemaphoreCreate( osSemaphore( LcdUpdateSemaphore ), 1 );
90027598:	f004 fffc 	bl	9002c594 <osSemaphoreCreate>
  LtdcHandle.Init.Backcolor.Red   = 0;

  LtdcHandle.Instance = LTDC;

  /* Layer1 Configuration */
  LayerConfig.WindowX0 = 0;
9002759c:	4937      	ldr	r1, [pc, #220]	; (9002767c <EwBspDisplayInit+0x110>)
  #elif ( EW_FRAME_BUFFER_COLOR_FORMAT == EW_FRAME_BUFFER_COLOR_FORMAT_RGB888 )
    LayerConfig.PixelFormat = LTDC_PIXEL_FORMAT_RGB888;
  #elif ( EW_FRAME_BUFFER_COLOR_FORMAT == EW_FRAME_BUFFER_COLOR_FORMAT_RGBA4444 )
    LayerConfig.PixelFormat = LTDC_PIXEL_FORMAT_ARGB4444;
  #elif ( EW_FRAME_BUFFER_COLOR_FORMAT == EW_FRAME_BUFFER_COLOR_FORMAT_RGB565 )
    LayerConfig.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
9002759e:	2702      	movs	r7, #2
  LtdcHandle.Instance = LTDC;
900275a0:	4b37      	ldr	r3, [pc, #220]	; (90027680 <EwBspDisplayInit+0x114>)
  LayerConfig.Backcolor.Blue  = 0;
  LayerConfig.Backcolor.Green = 0;
  LayerConfig.Backcolor.Red   = 0;

  /* Configure blending factors */
  LayerConfig.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
900275a2:	f44f 6280 	mov.w	r2, #1024	; 0x400
  LayerConfig.FBStartAdress = (uint32_t)EW_FRAME_BUFFER_ADDR;
900275a6:	624e      	str	r6, [r1, #36]	; 0x24
  LayerConfig.Alpha = 255;
900275a8:	f04f 0cff 	mov.w	ip, #255	; 0xff
    LcdUpdateSemaphoreId = osSemaphoreCreate( osSemaphore( LcdUpdateSemaphore ), 1 );
900275ac:	4e35      	ldr	r6, [pc, #212]	; (90027684 <EwBspDisplayInit+0x118>)
    LayerConfig.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
900275ae:	610f      	str	r7, [r1, #16]
  LayerConfig.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900275b0:	2705      	movs	r7, #5
    LcdUpdateSemaphoreId = osSemaphoreCreate( osSemaphore( LcdUpdateSemaphore ), 1 );
900275b2:	6030      	str	r0, [r6, #0]
  LtdcHandle.Init.HorizontalSync = 40 - SHIFT;
900275b4:	201e      	movs	r0, #30
  LtdcHandle.Init.HSPolarity = LTDC_HSPOLARITY_AL;
900275b6:	605d      	str	r5, [r3, #4]
  LayerConfig.WindowX0 = 0;
900275b8:	600d      	str	r5, [r1, #0]
  LayerConfig.WindowY0 = 0;
900275ba:	608d      	str	r5, [r1, #8]
  LayerConfig.Alpha0          = 0;
900275bc:	618d      	str	r5, [r1, #24]
  LayerConfig.Backcolor.Blue  = 0;
900275be:	860d      	strh	r5, [r1, #48]	; 0x30
  LayerConfig.Backcolor.Red   = 0;
900275c0:	f881 5032 	strb.w	r5, [r1, #50]	; 0x32
  LayerConfig.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
900275c4:	61ca      	str	r2, [r1, #28]
  LtdcHandle.Init.VerticalSync = 9;
900275c6:	2209      	movs	r2, #9
  LtdcHandle.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
900275c8:	611d      	str	r5, [r3, #16]
  LtdcHandle.Init.Backcolor.Blue  = 0;
900275ca:	869d      	strh	r5, [r3, #52]	; 0x34
  LtdcHandle.Init.Backcolor.Red   = 0;
900275cc:	f883 5036 	strb.w	r5, [r3, #54]	; 0x36
  LayerConfig.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
900275d0:	620f      	str	r7, [r1, #32]
  LtdcHandle.Init.AccumulatedHBP = 53 - SHIFT;
900275d2:	272b      	movs	r7, #43	; 0x2b
  LtdcHandle.Init.HorizontalSync = 40 - SHIFT;
900275d4:	6158      	str	r0, [r3, #20]
  LtdcHandle.Init.AccumulatedVBP = 11;
900275d6:	200b      	movs	r0, #11
  LtdcHandle.Init.VerticalSync = 9;
900275d8:	619a      	str	r2, [r3, #24]
  LtdcHandle.Init.AccumulatedActiveH = 283;
900275da:	f240 121b 	movw	r2, #283	; 0x11b
  LtdcHandle.Init.AccumulatedHBP = 53 - SHIFT;
900275de:	61df      	str	r7, [r3, #28]
  LtdcHandle.Init.TotalWidth = 565 - SHIFT;
900275e0:	f240 272b 	movw	r7, #555	; 0x22b
  LtdcHandle.Init.AccumulatedVBP = 11;
900275e4:	6218      	str	r0, [r3, #32]
  LtdcHandle.Init.TotalHeigh = 285;
900275e6:	f240 101d 	movw	r0, #285	; 0x11d
  LtdcHandle.Init.AccumulatedActiveH = 283;
900275ea:	629a      	str	r2, [r3, #40]	; 0x28
  LayerConfig.WindowY1 = EW_FRAME_BUFFER_HEIGHT;
900275ec:	f44f 7288 	mov.w	r2, #272	; 0x110
  LayerConfig.Alpha = 255;
900275f0:	f8c1 c014 	str.w	ip, [r1, #20]
  LayerConfig.WindowY1 = EW_FRAME_BUFFER_HEIGHT;
900275f4:	60ca      	str	r2, [r1, #12]

  /* Configure the number of lines and number of pixels per line */
  LayerConfig.ImageWidth  = EW_FRAME_BUFFER_WIDTH;
  LayerConfig.ImageHeight = EW_FRAME_BUFFER_HEIGHT;
900275f6:	62ca      	str	r2, [r1, #44]	; 0x2c
  LtdcHandle.Init.DEPolarity = LTDC_DEPOLARITY_AL;
900275f8:	e9c3 5502 	strd	r5, r5, [r3, #8]
  LtdcHandle.Instance = LTDC;
900275fc:	4d22      	ldr	r5, [pc, #136]	; (90027688 <EwBspDisplayInit+0x11c>)
900275fe:	601d      	str	r5, [r3, #0]
  LtdcHandle.Init.AccumulatedActiveW = 533 - SHIFT;
90027600:	f240 250b 	movw	r5, #523	; 0x20b
90027604:	625d      	str	r5, [r3, #36]	; 0x24
  LayerConfig.WindowX1 = EW_FRAME_BUFFER_WIDTH;
90027606:	f44f 75f0 	mov.w	r5, #480	; 0x1e0
  LtdcHandle.Init.TotalHeigh = 285;
9002760a:	e9c3 700b 	strd	r7, r0, [r3, #44]	; 0x2c

  /* Configure the LTDC */
  if ( HAL_LTDC_Init( &LtdcHandle ) != HAL_OK )
9002760e:	4618      	mov	r0, r3
  LayerConfig.WindowX1 = EW_FRAME_BUFFER_WIDTH;
90027610:	604d      	str	r5, [r1, #4]
  LayerConfig.ImageWidth  = EW_FRAME_BUFFER_WIDTH;
90027612:	628d      	str	r5, [r1, #40]	; 0x28
  if ( HAL_LTDC_Init( &LtdcHandle ) != HAL_OK )
90027614:	f002 faee 	bl	90029bf4 <HAL_LTDC_Init>
90027618:	bb48      	cbnz	r0, 9002766e <EwBspDisplayInit+0x102>
    EwPrint( "EwBspDisplayInit: Could not configure LTDC!\n" );

  /* Configure the Layer */
  if ( HAL_LTDC_ConfigLayer( &LtdcHandle, &LayerConfig, LAYER_INDEX ) != HAL_OK )
9002761a:	2200      	movs	r2, #0
9002761c:	4917      	ldr	r1, [pc, #92]	; (9002767c <EwBspDisplayInit+0x110>)
9002761e:	4818      	ldr	r0, [pc, #96]	; (90027680 <EwBspDisplayInit+0x114>)
90027620:	f002 fbc2 	bl	90029da8 <HAL_LTDC_ConfigLayer>
90027624:	b9f8      	cbnz	r0, 90027666 <EwBspDisplayInit+0xfa>
    EwPrint( "EwBspDisplayInit: Could not configure layer!\n" );

  #if EW_USE_FREE_RTOS == 1

    /* initially take the LcdUpdate token for the first LCD update */
    osSemaphoreWait( LcdUpdateSemaphoreId , 1000 );
90027626:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
9002762a:	6830      	ldr	r0, [r6, #0]
9002762c:	f004 ffc6 	bl	9002c5bc <osSemaphoreWait>
  #endif

  #if EW_USE_DOUBLE_BUFFER == 1

    /* Configure the vsync */
    if ( HAL_LTDC_ProgramLineEvent( &LtdcHandle, 0 ) != HAL_OK )
90027630:	2100      	movs	r1, #0
90027632:	4813      	ldr	r0, [pc, #76]	; (90027680 <EwBspDisplayInit+0x114>)
90027634:	f002 fbe8 	bl	90029e08 <HAL_LTDC_ProgramLineEvent>
90027638:	b988      	cbnz	r0, 9002765e <EwBspDisplayInit+0xf2>
      EwPrint( "EwBspDisplayInit: Could not configure interrupt for vsync!\n" );

  #endif

  /* return the current display configuration */
  aDisplayInfo->FrameBuffer    = (void*)EW_FRAME_BUFFER_ADDR;
9002763a:	f04f 4550 	mov.w	r5, #3489660928	; 0xd0000000
  aDisplayInfo->DoubleBuffer   = (void*)EW_DOUBLE_BUFFER_ADDR;
9002763e:	4813      	ldr	r0, [pc, #76]	; (9002768c <EwBspDisplayInit+0x120>)
  aDisplayInfo->BufferWidth    = EW_FRAME_BUFFER_WIDTH;
90027640:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  aDisplayInfo->BufferHeight   = EW_FRAME_BUFFER_HEIGHT;
90027644:	f44f 7388 	mov.w	r3, #272	; 0x110
  aDisplayInfo->DisplayWidth   = EW_DISPLAY_WIDTH;
  aDisplayInfo->DisplayHeight  = EW_DISPLAY_HEIGHT;

  #if EW_USE_DOUBLE_BUFFER == 1
    aDisplayInfo->UpdateMode   = EW_BSP_DISPLAY_UPDATE_NORMAL;
90027648:	2100      	movs	r1, #0
  aDisplayInfo->BufferWidth    = EW_FRAME_BUFFER_WIDTH;
9002764a:	60a2      	str	r2, [r4, #8]
  aDisplayInfo->DoubleBuffer   = (void*)EW_DOUBLE_BUFFER_ADDR;
9002764c:	e9c4 5000 	strd	r5, r0, [r4]
  #else
    aDisplayInfo->UpdateMode   = EW_BSP_DISPLAY_UPDATE_PARTIAL;
  #endif

  return 1;
90027650:	2001      	movs	r0, #1
  aDisplayInfo->BufferHeight   = EW_FRAME_BUFFER_HEIGHT;
90027652:	e9c4 3203 	strd	r3, r2, [r4, #12]
    aDisplayInfo->UpdateMode   = EW_BSP_DISPLAY_UPDATE_NORMAL;
90027656:	e9c4 3105 	strd	r3, r1, [r4, #20]
}
9002765a:	b003      	add	sp, #12
9002765c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      EwPrint( "EwBspDisplayInit: Could not configure interrupt for vsync!\n" );
9002765e:	480c      	ldr	r0, [pc, #48]	; (90027690 <EwBspDisplayInit+0x124>)
90027660:	f7f5 fac2 	bl	9001cbe8 <EwPrint>
90027664:	e7e9      	b.n	9002763a <EwBspDisplayInit+0xce>
    EwPrint( "EwBspDisplayInit: Could not configure layer!\n" );
90027666:	480b      	ldr	r0, [pc, #44]	; (90027694 <EwBspDisplayInit+0x128>)
90027668:	f7f5 fabe 	bl	9001cbe8 <EwPrint>
9002766c:	e7db      	b.n	90027626 <EwBspDisplayInit+0xba>
    EwPrint( "EwBspDisplayInit: Could not configure LTDC!\n" );
9002766e:	480a      	ldr	r0, [pc, #40]	; (90027698 <EwBspDisplayInit+0x12c>)
90027670:	f7f5 faba 	bl	9001cbe8 <EwPrint>
90027674:	e7d1      	b.n	9002761a <EwBspDisplayInit+0xae>
    return 0;
90027676:	4610      	mov	r0, r2
}
90027678:	b003      	add	sp, #12
9002767a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002767c:	200039b8 	.word	0x200039b8
90027680:	20003910 	.word	0x20003910
90027684:	200003bc 	.word	0x200003bc
90027688:	50001000 	.word	0x50001000
9002768c:	d07c0400 	.word	0xd07c0400
90027690:	900347fc 	.word	0x900347fc
90027694:	900347cc 	.word	0x900347cc
90027698:	9003479c 	.word	0x9003479c

9002769c <EwBspDisplayDone>:
*
*******************************************************************************/
void EwBspDisplayDone( XDisplayInfo* aDisplayInfo )
{
  EW_UNUSED_ARG( aDisplayInfo );
}
9002769c:	4770      	bx	lr
9002769e:	bf00      	nop

900276a0 <EwBspDisplayGetUpdateArea>:
    field = 0;

  #endif

  return 0;
}
900276a0:	2000      	movs	r0, #0
900276a2:	4770      	bx	lr

900276a4 <EwBspDisplayWaitForCompletion>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspDisplayWaitForCompletion( void )
{
900276a4:	b538      	push	{r3, r4, r5, lr}
  #if EW_USE_DOUBLE_BUFFER == 1

    register uint32_t pendingBuffer = PendingFramebuffer;
900276a6:	4b0a      	ldr	r3, [pc, #40]	; (900276d0 <EwBspDisplayWaitForCompletion+0x2c>)
    if ( CurrentFramebuffer == pendingBuffer )
900276a8:	4c0a      	ldr	r4, [pc, #40]	; (900276d4 <EwBspDisplayWaitForCompletion+0x30>)
    register uint32_t pendingBuffer = PendingFramebuffer;
900276aa:	681d      	ldr	r5, [r3, #0]
    if ( CurrentFramebuffer == pendingBuffer )
900276ac:	6823      	ldr	r3, [r4, #0]
900276ae:	42ab      	cmp	r3, r5
900276b0:	d00c      	beq.n	900276cc <EwBspDisplayWaitForCompletion+0x28>
      return;

    CPU_LOAD_SET_IDLE();
900276b2:	f7ff fe07 	bl	900272c4 <EwBspClockCpuLoadSetIdle>

    #if EW_USE_FREE_RTOS == 1

      /* wait until pending framebuffer is used as current framebuffer and
         use CPU time for other tasks */
      osSemaphoreWait( LcdUpdateSemaphoreId, 1000 );
900276b6:	4b08      	ldr	r3, [pc, #32]	; (900276d8 <EwBspDisplayWaitForCompletion+0x34>)
900276b8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
900276bc:	6818      	ldr	r0, [r3, #0]
900276be:	f004 ff7d 	bl	9002c5bc <osSemaphoreWait>
      CurrentFramebuffer = pendingBuffer;
900276c2:	6025      	str	r5, [r4, #0]
    #endif

    CPU_LOAD_SET_ACTIVE();

  #endif
}
900276c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    CPU_LOAD_SET_ACTIVE();
900276c8:	f7ff bdbe 	b.w	90027248 <EwBspClockCpuLoadSetActive>
}
900276cc:	bd38      	pop	{r3, r4, r5, pc}
900276ce:	bf00      	nop
900276d0:	200003c0 	.word	0x200003c0
900276d4:	200003b8 	.word	0x200003b8
900276d8:	200003bc 	.word	0x200003bc

900276dc <EwBspDisplayCommitBuffer>:
void EwBspDisplayCommitBuffer( void* aAddress, int aX, int aY, int aWidth, int aHeight )
{
  #if EW_USE_DOUBLE_BUFFER == 1

    /* set pending framebuffer address to be used on next V-sync */
    PendingFramebuffer = (uint32_t)aAddress;
900276dc:	4b01      	ldr	r3, [pc, #4]	; (900276e4 <EwBspDisplayCommitBuffer+0x8>)
900276de:	6018      	str	r0, [r3, #0]

  #endif
}
900276e0:	4770      	bx	lr
900276e2:	bf00      	nop
900276e4:	200003c0 	.word	0x200003c0

900276e8 <EwBspEventWait>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspEventWait( int aTimeout )
{
900276e8:	b530      	push	{r4, r5, lr}
  if ( aTimeout > 0 )
900276ea:	1e04      	subs	r4, r0, #0
{
900276ec:	b085      	sub	sp, #20
  if ( aTimeout > 0 )
900276ee:	dc01      	bgt.n	900276f4 <EwBspEventWait+0xc>

    #endif

    CPU_LOAD_SET_ACTIVE();
  }
}
900276f0:	b005      	add	sp, #20
900276f2:	bd30      	pop	{r4, r5, pc}
      if ( ThreadId == 0 )
900276f4:	4d0b      	ldr	r5, [pc, #44]	; (90027724 <EwBspEventWait+0x3c>)
    CPU_LOAD_SET_IDLE();
900276f6:	f7ff fde5 	bl	900272c4 <EwBspClockCpuLoadSetIdle>
      if ( ThreadId == 0 )
900276fa:	682b      	ldr	r3, [r5, #0]
900276fc:	b16b      	cbz	r3, 9002771a <EwBspEventWait+0x32>
      osSignalWait( OS_SIGNAL_WAKEUP_UI, aTimeout );
900276fe:	2c0a      	cmp	r4, #10
90027700:	4622      	mov	r2, r4
90027702:	f04f 0101 	mov.w	r1, #1
90027706:	4668      	mov	r0, sp
90027708:	bfa8      	it	ge
9002770a:	220a      	movge	r2, #10
9002770c:	f004 fef4 	bl	9002c4f8 <osSignalWait>
}
90027710:	b005      	add	sp, #20
90027712:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    CPU_LOAD_SET_ACTIVE();
90027716:	f7ff bd97 	b.w	90027248 <EwBspClockCpuLoadSetActive>
        ThreadId = osThreadGetId();
9002771a:	f004 feeb 	bl	9002c4f4 <osThreadGetId>
9002771e:	6028      	str	r0, [r5, #0]
90027720:	e7ed      	b.n	900276fe <EwBspEventWait+0x16>
90027722:	bf00      	nop
90027724:	200003c4 	.word	0x200003c4

90027728 <EwBspGraphicsWaitForCompletion.part.0>:
*
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspGraphicsWaitForCompletion()
90027728:	b508      	push	{r3, lr}
{
  /* return immediately if no DMA2D transfer is ongoing */
  if ( TransferInProgress == 0 )
    return;

  CPU_LOAD_SET_IDLE();
9002772a:	f7ff fdcb 	bl	900272c4 <EwBspClockCpuLoadSetIdle>

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  #if EW_USE_FREE_RTOS == 1

    osSemaphoreWait( AcceleratorSemaphoreId, 1000 );
9002772e:	4b06      	ldr	r3, [pc, #24]	; (90027748 <EwBspGraphicsWaitForCompletion.part.0+0x20>)
90027730:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
90027734:	6818      	ldr	r0, [r3, #0]
90027736:	f004 ff41 	bl	9002c5bc <osSemaphoreWait>
    TransferInProgress = 0;
9002773a:	4b04      	ldr	r3, [pc, #16]	; (9002774c <EwBspGraphicsWaitForCompletion.part.0+0x24>)
9002773c:	2200      	movs	r2, #0
9002773e:	701a      	strb	r2, [r3, #0]
  TransferInProgress = 0;

#endif

  CPU_LOAD_SET_ACTIVE();
}
90027740:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  CPU_LOAD_SET_ACTIVE();
90027744:	f7ff bd80 	b.w	90027248 <EwBspClockCpuLoadSetActive>
90027748:	200039ec 	.word	0x200039ec
9002774c:	20000430 	.word	0x20000430

90027750 <HAL_DMA2D_MspInit>:
  __HAL_RCC_DMA2D_CLK_ENABLE();
90027750:	4b0c      	ldr	r3, [pc, #48]	; (90027784 <HAL_DMA2D_MspInit+0x34>)
  HAL_NVIC_SetPriority(DMA2D_IRQn, 8, 0);
90027752:	2200      	movs	r2, #0
90027754:	2108      	movs	r1, #8
90027756:	205a      	movs	r0, #90	; 0x5a
{
90027758:	b510      	push	{r4, lr}
  __HAL_RCC_DMA2D_CLK_ENABLE();
9002775a:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
9002775e:	b082      	sub	sp, #8
  __HAL_RCC_DMA2D_CLK_ENABLE();
90027760:	f044 0410 	orr.w	r4, r4, #16
90027764:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90027768:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
9002776c:	f003 0310 	and.w	r3, r3, #16
90027770:	9301      	str	r3, [sp, #4]
90027772:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(DMA2D_IRQn, 8, 0);
90027774:	f001 f82a 	bl	900287cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90027778:	205a      	movs	r0, #90	; 0x5a
}
9002777a:	b002      	add	sp, #8
9002777c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90027780:	f001 b85e 	b.w	90028840 <HAL_NVIC_EnableIRQ>
90027784:	58024400 	.word	0x58024400

90027788 <HAL_DMA2D_MspDeInit>:
{
90027788:	b508      	push	{r3, lr}
   HAL_NVIC_DisableIRQ(DMA2D_IRQn);
9002778a:	205a      	movs	r0, #90	; 0x5a
9002778c:	f001 f866 	bl	9002885c <HAL_NVIC_DisableIRQ>
  __HAL_RCC_DMA2D_FORCE_RESET();
90027790:	4b04      	ldr	r3, [pc, #16]	; (900277a4 <HAL_DMA2D_MspDeInit+0x1c>)
90027792:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90027794:	f042 0210 	orr.w	r2, r2, #16
90027798:	67da      	str	r2, [r3, #124]	; 0x7c
  __HAL_RCC_DMA2D_RELEASE_RESET();
9002779a:	6fda      	ldr	r2, [r3, #124]	; 0x7c
9002779c:	f022 0210 	bic.w	r2, r2, #16
900277a0:	67da      	str	r2, [r3, #124]	; 0x7c
}
900277a2:	bd08      	pop	{r3, pc}
900277a4:	58024400 	.word	0x58024400

900277a8 <EwBspGraphicsInit>:
{
900277a8:	b570      	push	{r4, r5, r6, lr}
  memset( &Accelerator, 0, sizeof( DMA2D_HandleTypeDef ));
900277aa:	2100      	movs	r1, #0
900277ac:	4c12      	ldr	r4, [pc, #72]	; (900277f8 <EwBspGraphicsInit+0x50>)
{
900277ae:	b082      	sub	sp, #8
  memset( &Accelerator, 0, sizeof( DMA2D_HandleTypeDef ));
900277b0:	2268      	movs	r2, #104	; 0x68
    osSemaphoreDef(AcceleratorSemaphore);
900277b2:	460d      	mov	r5, r1
{
900277b4:	4606      	mov	r6, r0
  memset( &Accelerator, 0, sizeof( DMA2D_HandleTypeDef ));
900277b6:	4620      	mov	r0, r4
900277b8:	f006 fc06 	bl	9002dfc8 <memset>
    AcceleratorSemaphoreId = osSemaphoreCreate(osSemaphore(AcceleratorSemaphore), 1);
900277bc:	2101      	movs	r1, #1
900277be:	a801      	add	r0, sp, #4
    osSemaphoreDef(AcceleratorSemaphore);
900277c0:	9501      	str	r5, [sp, #4]
    AcceleratorSemaphoreId = osSemaphoreCreate(osSemaphore(AcceleratorSemaphore), 1);
900277c2:	f004 fee7 	bl	9002c594 <osSemaphoreCreate>
900277c6:	4b0d      	ldr	r3, [pc, #52]	; (900277fc <EwBspGraphicsInit+0x54>)
    osSemaphoreWait( AcceleratorSemaphoreId, 1000 );
900277c8:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
    AcceleratorSemaphoreId = osSemaphoreCreate(osSemaphore(AcceleratorSemaphore), 1);
900277cc:	6018      	str	r0, [r3, #0]
    osSemaphoreWait( AcceleratorSemaphoreId, 1000 );
900277ce:	f004 fef5 	bl	9002c5bc <osSemaphoreWait>
  Accelerator.Instance       = DMA2D;
900277d2:	4a0b      	ldr	r2, [pc, #44]	; (90027800 <EwBspGraphicsInit+0x58>)
  if ( HAL_DMA2D_Init( &Accelerator ) != HAL_OK )
900277d4:	4620      	mov	r0, r4
  TransferInProgress  = 0;
900277d6:	4b0b      	ldr	r3, [pc, #44]	; (90027804 <EwBspGraphicsInit+0x5c>)
  Accelerator.State          = HAL_DMA2D_STATE_RESET;
900277d8:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
  Accelerator.Init.ColorMode = aDstColorMode;
900277dc:	60a6      	str	r6, [r4, #8]
  Accelerator.Init.Mode      = DMA2D_M2M;
900277de:	6065      	str	r5, [r4, #4]
  Accelerator.Lock           = HAL_UNLOCKED;
900277e0:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
  Accelerator.Instance       = DMA2D;
900277e4:	6022      	str	r2, [r4, #0]
  TransferInProgress  = 0;
900277e6:	701d      	strb	r5, [r3, #0]
  if ( HAL_DMA2D_Init( &Accelerator ) != HAL_OK )
900277e8:	f001 f8fa 	bl	900289e0 <HAL_DMA2D_Init>
}
900277ec:	fab0 f080 	clz	r0, r0
900277f0:	0940      	lsrs	r0, r0, #5
900277f2:	b002      	add	sp, #8
900277f4:	bd70      	pop	{r4, r5, r6, pc}
900277f6:	bf00      	nop
900277f8:	200003c8 	.word	0x200003c8
900277fc:	200039ec 	.word	0x200039ec
90027800:	52001000 	.word	0x52001000
90027804:	20000430 	.word	0x20000430

90027808 <EwBspGraphicsDone>:
  HAL_DMA2D_DeInit( &Accelerator );
90027808:	4801      	ldr	r0, [pc, #4]	; (90027810 <EwBspGraphicsDone+0x8>)
9002780a:	f001 ba31 	b.w	90028c70 <HAL_DMA2D_DeInit>
9002780e:	bf00      	nop
90027810:	200003c8 	.word	0x200003c8

90027814 <EwBspGraphicsWaitForCompletion>:
  if ( TransferInProgress == 0 )
90027814:	4b02      	ldr	r3, [pc, #8]	; (90027820 <EwBspGraphicsWaitForCompletion+0xc>)
90027816:	781b      	ldrb	r3, [r3, #0]
90027818:	b903      	cbnz	r3, 9002781c <EwBspGraphicsWaitForCompletion+0x8>
}
9002781a:	4770      	bx	lr
9002781c:	f7ff bf84 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027820:	20000430 	.word	0x20000430

90027824 <EwBspGraphicsFill>:
*   None
*
*******************************************************************************/
void EwBspGraphicsFill( uint32_t aDstAddr, uint32_t aDstOffset, uint32_t aWidth,
  uint32_t aHeight, uint32_t aDstColorMode, uint32_t aSrcColor )
{
90027824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  if ( TransferInProgress == 0 )
90027828:	f8df 9070 	ldr.w	r9, [pc, #112]	; 9002789c <EwBspGraphicsFill+0x78>
{
9002782c:	b084      	sub	sp, #16
9002782e:	4688      	mov	r8, r1
90027830:	4605      	mov	r5, r0
  if ( TransferInProgress == 0 )
90027832:	f899 4000 	ldrb.w	r4, [r9]
{
90027836:	4616      	mov	r6, r2
90027838:	461f      	mov	r7, r3
9002783a:	e9dd a10c 	ldrd	sl, r1, [sp, #48]	; 0x30
  if ( TransferInProgress == 0 )
9002783e:	b11c      	cbz	r4, 90027848 <EwBspGraphicsFill+0x24>
90027840:	9103      	str	r1, [sp, #12]
90027842:	f7ff ff71 	bl	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027846:	9903      	ldr	r1, [sp, #12]
  /* ensure that previous DMA2D instruction is finished */
  EwBspGraphicsWaitForCompletion();

  /* prepare destination output configuration */
  Accelerator.Init.Mode                  = DMA2D_R2M;
90027848:	4c12      	ldr	r4, [pc, #72]	; (90027894 <EwBspGraphicsFill+0x70>)
9002784a:	f44f 3340 	mov.w	r3, #196608	; 0x30000
9002784e:	9103      	str	r1, [sp, #12]
  Accelerator.Init.ColorMode             = aDstColorMode;
  Accelerator.Init.OutputOffset          = aDstOffset;

  /* initialize the DMA2D graphics accelerator */
  HAL_DMA2D_Init( &Accelerator );
90027850:	4620      	mov	r0, r4
  Accelerator.Init.Mode                  = DMA2D_R2M;
90027852:	6063      	str	r3, [r4, #4]
  Accelerator.Init.ColorMode             = aDstColorMode;
90027854:	f8c4 a008 	str.w	sl, [r4, #8]
  Accelerator.Init.OutputOffset          = aDstOffset;
90027858:	f8c4 800c 	str.w	r8, [r4, #12]
  HAL_DMA2D_Init( &Accelerator );
9002785c:	f001 f8c0 	bl	900289e0 <HAL_DMA2D_Init>

  /* set the flag for DMA2D transfer */
  TransferInProgress = 1;
90027860:	f04f 0c01 	mov.w	ip, #1

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  /* start the transfer */
  HAL_DMA2D_Start_IT( &Accelerator, aSrcColor, aDstAddr, aWidth, aHeight );
90027864:	4633      	mov	r3, r6
90027866:	4620      	mov	r0, r4
90027868:	462a      	mov	r2, r5
9002786a:	9903      	ldr	r1, [sp, #12]
9002786c:	9700      	str	r7, [sp, #0]
  TransferInProgress = 1;
9002786e:	f889 c000 	strb.w	ip, [r9]
  HAL_DMA2D_Start_IT( &Accelerator, aSrcColor, aDstAddr, aWidth, aHeight );
90027872:	f001 f8f7 	bl	90028a64 <HAL_DMA2D_Start_IT>
  HAL_DMA2D_Start( &Accelerator, aSrcColor, aDstAddr, aWidth, aHeight );

#endif

  /* check for immediate completion of drawing operation */
  if ( !ConcurrentOperation )
90027876:	4b08      	ldr	r3, [pc, #32]	; (90027898 <EwBspGraphicsFill+0x74>)
90027878:	781b      	ldrb	r3, [r3, #0]
9002787a:	b913      	cbnz	r3, 90027882 <EwBspGraphicsFill+0x5e>
  if ( TransferInProgress == 0 )
9002787c:	f899 3000 	ldrb.w	r3, [r9]
90027880:	b913      	cbnz	r3, 90027888 <EwBspGraphicsFill+0x64>
    EwBspGraphicsWaitForCompletion();
}
90027882:	b004      	add	sp, #16
90027884:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90027888:	b004      	add	sp, #16
9002788a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002788e:	f7ff bf4b 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027892:	bf00      	nop
90027894:	200003c8 	.word	0x200003c8
90027898:	2000002d 	.word	0x2000002d
9002789c:	20000430 	.word	0x20000430

900278a0 <EwBspGraphicsFillBlend>:
*   None
*
*******************************************************************************/
void EwBspGraphicsFillBlend( uint32_t aDstAddr, uint32_t aDstOffset, uint32_t aWidth,
  uint32_t aHeight, uint32_t aDstColorMode, uint32_t aSrcColor )
{
900278a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ( TransferInProgress == 0 )
900278a4:	f8df a0a0 	ldr.w	sl, [pc, #160]	; 90027948 <EwBspGraphicsFillBlend+0xa8>
{
900278a8:	b083      	sub	sp, #12
900278aa:	4606      	mov	r6, r0
900278ac:	460d      	mov	r5, r1
  if ( TransferInProgress == 0 )
900278ae:	f89a 4000 	ldrb.w	r4, [sl]
{
900278b2:	4617      	mov	r7, r2
900278b4:	4698      	mov	r8, r3
900278b6:	e9dd 9b0c 	ldrd	r9, fp, [sp, #48]	; 0x30
  if ( TransferInProgress == 0 )
900278ba:	b10c      	cbz	r4, 900278c0 <EwBspGraphicsFillBlend+0x20>
900278bc:	f7ff ff34 	bl	90027728 <EwBspGraphicsWaitForCompletion.part.0>
  Accelerator.LayerCfg[0].InputColorMode = aDstColorMode;
  Accelerator.LayerCfg[0].AlphaMode      = DMA2D_COMBINE_ALPHA;
  Accelerator.LayerCfg[0].InputAlpha     = 255;

  /* replace alpha channel if destination does not provide one */
  if (( aDstColorMode == DMA2D_OUTPUT_RGB888 ) || ( aDstColorMode == DMA2D_OUTPUT_RGB565 ))
900278c0:	f109 33ff 	add.w	r3, r9, #4294967295
  Accelerator.Init.Mode                  = DMA2D_M2M_BLEND;
900278c4:	4c1e      	ldr	r4, [pc, #120]	; (90027940 <EwBspGraphicsFillBlend+0xa0>)
900278c6:	f44f 3000 	mov.w	r0, #131072	; 0x20000
  Accelerator.LayerCfg[0].AlphaMode      = DMA2D_COMBINE_ALPHA;
900278ca:	2102      	movs	r1, #2
  Accelerator.LayerCfg[0].InputAlpha     = 255;
900278cc:	22ff      	movs	r2, #255	; 0xff
  if (( aDstColorMode == DMA2D_OUTPUT_RGB888 ) || ( aDstColorMode == DMA2D_OUTPUT_RGB565 ))
900278ce:	2b01      	cmp	r3, #1
  Accelerator.LayerCfg[0].InputOffset    = aDstOffset;
900278d0:	62a5      	str	r5, [r4, #40]	; 0x28
  Accelerator.LayerCfg[0].InputColorMode = aDstColorMode;
900278d2:	f8c4 902c 	str.w	r9, [r4, #44]	; 0x2c
  Accelerator.Init.Mode                  = DMA2D_M2M_BLEND;
900278d6:	6060      	str	r0, [r4, #4]
  Accelerator.Init.OutputOffset          = aDstOffset;
900278d8:	e9c4 9502 	strd	r9, r5, [r4, #8]
  Accelerator.LayerCfg[0].InputAlpha     = 255;
900278dc:	e9c4 120c 	strd	r1, r2, [r4, #48]	; 0x30
  if (( aDstColorMode == DMA2D_OUTPUT_RGB888 ) || ( aDstColorMode == DMA2D_OUTPUT_RGB565 ))
900278e0:	d801      	bhi.n	900278e6 <EwBspGraphicsFillBlend+0x46>
    Accelerator.LayerCfg[0].AlphaMode    = DMA2D_REPLACE_ALPHA;
900278e2:	2301      	movs	r3, #1
900278e4:	6323      	str	r3, [r4, #48]	; 0x30

  /* foreground layer configuration is used as source of transfer */
  Accelerator.LayerCfg[1].InputOffset    = 0x00; /* no offset in input */
  Accelerator.LayerCfg[1].InputColorMode = DMA2D_INPUT_A8;
900278e6:	2309      	movs	r3, #9
  Accelerator.LayerCfg[1].AlphaMode      = DMA2D_REPLACE_ALPHA;
900278e8:	2501      	movs	r5, #1
  Accelerator.LayerCfg[1].InputOffset    = 0x00; /* no offset in input */
900278ea:	f04f 0900 	mov.w	r9, #0
  Accelerator.LayerCfg[1].InputAlpha     = aSrcColor;

  /* initialize the DMA2D graphics accelerator */
  HAL_DMA2D_Init( &Accelerator );
900278ee:	4814      	ldr	r0, [pc, #80]	; (90027940 <EwBspGraphicsFillBlend+0xa0>)
  Accelerator.LayerCfg[1].InputAlpha     = aSrcColor;
900278f0:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
  Accelerator.LayerCfg[1].AlphaMode      = DMA2D_REPLACE_ALPHA;
900278f4:	64e5      	str	r5, [r4, #76]	; 0x4c
  Accelerator.LayerCfg[1].InputColorMode = DMA2D_INPUT_A8;
900278f6:	e9c4 9311 	strd	r9, r3, [r4, #68]	; 0x44
  HAL_DMA2D_Init( &Accelerator );
900278fa:	f001 f871 	bl	900289e0 <HAL_DMA2D_Init>

  /* set the layer configurtation (foreground layer) */
  HAL_DMA2D_ConfigLayer( &Accelerator, 1 );
900278fe:	4629      	mov	r1, r5
90027900:	480f      	ldr	r0, [pc, #60]	; (90027940 <EwBspGraphicsFillBlend+0xa0>)
90027902:	f001 fa87 	bl	90028e14 <HAL_DMA2D_ConfigLayer>

  /* set the layer configurtation (background layer) */
  HAL_DMA2D_ConfigLayer( &Accelerator, 0 );
90027906:	4649      	mov	r1, r9
90027908:	480d      	ldr	r0, [pc, #52]	; (90027940 <EwBspGraphicsFillBlend+0xa0>)
9002790a:	f001 fa83 	bl	90028e14 <HAL_DMA2D_ConfigLayer>
  TransferInProgress = 1;

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  /* start the transfer */
  HAL_DMA2D_BlendingStart_IT( &Accelerator, aDstAddr, aDstAddr, aDstAddr, aWidth, aHeight );
9002790e:	4633      	mov	r3, r6
90027910:	4632      	mov	r2, r6
90027912:	4631      	mov	r1, r6
90027914:	480a      	ldr	r0, [pc, #40]	; (90027940 <EwBspGraphicsFillBlend+0xa0>)
  TransferInProgress = 1;
90027916:	f88a 5000 	strb.w	r5, [sl]
  HAL_DMA2D_BlendingStart_IT( &Accelerator, aDstAddr, aDstAddr, aDstAddr, aWidth, aHeight );
9002791a:	e9cd 7800 	strd	r7, r8, [sp]
9002791e:	f001 f8c1 	bl	90028aa4 <HAL_DMA2D_BlendingStart_IT>
  HAL_DMA2D_BlendingStart( &Accelerator, aDstAddr, aDstAddr, aDstAddr, aWidth, aHeight );

#endif

  /* check for immediate completion of drawing operation */
  if ( !ConcurrentOperation )
90027922:	4b08      	ldr	r3, [pc, #32]	; (90027944 <EwBspGraphicsFillBlend+0xa4>)
90027924:	781b      	ldrb	r3, [r3, #0]
90027926:	b913      	cbnz	r3, 9002792e <EwBspGraphicsFillBlend+0x8e>
  if ( TransferInProgress == 0 )
90027928:	f89a 3000 	ldrb.w	r3, [sl]
9002792c:	b913      	cbnz	r3, 90027934 <EwBspGraphicsFillBlend+0x94>
    EwBspGraphicsWaitForCompletion();
}
9002792e:	b003      	add	sp, #12
90027930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027934:	b003      	add	sp, #12
90027936:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002793a:	f7ff bef5 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
9002793e:	bf00      	nop
90027940:	200003c8 	.word	0x200003c8
90027944:	2000002d 	.word	0x2000002d
90027948:	20000430 	.word	0x20000430

9002794c <EwBspGraphicsCopy>:
*
*******************************************************************************/
void EwBspGraphicsCopy( uint32_t aDstAddr, uint32_t aSrcAddr, uint32_t aDstOffset,
  uint32_t aSrcOffset, uint32_t aWidth, uint32_t aHeight, uint32_t aDstColorMode,
  uint32_t aSrcColorMode, uint32_t aSrcColor )
{
9002794c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027950:	b087      	sub	sp, #28
  if ( TransferInProgress == 0 )
90027952:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 90027a1c <EwBspGraphicsCopy+0xd0>
{
90027956:	460e      	mov	r6, r1
90027958:	4691      	mov	r9, r2
9002795a:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
9002795e:	4698      	mov	r8, r3
  if ( TransferInProgress == 0 )
90027960:	f89a c000 	ldrb.w	ip, [sl]
{
90027964:	4605      	mov	r5, r0
  unsigned char alpha = (unsigned char)( aSrcColor >> 24 );
90027966:	ea4f 611b 	mov.w	r1, fp, lsr #24
{
9002796a:	e9dd 3210 	ldrd	r3, r2, [sp, #64]	; 0x40
  unsigned char alpha = (unsigned char)( aSrcColor >> 24 );
9002796e:	460c      	mov	r4, r1
{
90027970:	9202      	str	r2, [sp, #8]
90027972:	e9dd 2712 	ldrd	r2, r7, [sp, #72]	; 0x48
  if ( TransferInProgress == 0 )
90027976:	f1bc 0f00 	cmp.w	ip, #0
9002797a:	d007      	beq.n	9002798c <EwBspGraphicsCopy+0x40>
9002797c:	9103      	str	r1, [sp, #12]
9002797e:	e9cd 3204 	strd	r3, r2, [sp, #16]
90027982:	f7ff fed1 	bl	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027986:	9903      	ldr	r1, [sp, #12]
90027988:	e9dd 3204 	ldrd	r3, r2, [sp, #16]

  /* ensure that previous DMA2D instruction is finished */
  EwBspGraphicsWaitForCompletion();

  /* prepare destination output configuration */
  Accelerator.Init.Mode                  = ((aDstColorMode == aSrcColorMode) && (alpha == 0xFF)) ? DMA2D_M2M : DMA2D_M2M_PFC;
9002798c:	42ba      	cmp	r2, r7
9002798e:	d10e      	bne.n	900279ae <EwBspGraphicsCopy+0x62>
90027990:	2cff      	cmp	r4, #255	; 0xff
90027992:	d10c      	bne.n	900279ae <EwBspGraphicsCopy+0x62>
90027994:	4c1f      	ldr	r4, [pc, #124]	; (90027a14 <EwBspGraphicsCopy+0xc8>)
90027996:	2000      	movs	r0, #0

  /* prepare source input configuration */
  Accelerator.LayerCfg[1].InputOffset    = aSrcOffset;
  Accelerator.LayerCfg[1].InputColorMode = aSrcColorMode;

  if ( aSrcColorMode == DMA2D_INPUT_A8 )
90027998:	2f09      	cmp	r7, #9
  Accelerator.Init.Mode                  = ((aDstColorMode == aSrcColorMode) && (alpha == 0xFF)) ? DMA2D_M2M : DMA2D_M2M_PFC;
9002799a:	6060      	str	r0, [r4, #4]
  Accelerator.Init.OutputOffset          = aDstOffset;
9002799c:	e9c4 2902 	strd	r2, r9, [r4, #8]
  Accelerator.LayerCfg[1].InputColorMode = aSrcColorMode;
900279a0:	e9c4 8711 	strd	r8, r7, [r4, #68]	; 0x44
  if ( aSrcColorMode == DMA2D_INPUT_A8 )
900279a4:	d130      	bne.n	90027a08 <EwBspGraphicsCopy+0xbc>
  {
    Accelerator.LayerCfg[1].AlphaMode    = DMA2D_COMBINE_ALPHA;
900279a6:	2202      	movs	r2, #2
900279a8:	e9c4 2b13 	strd	r2, fp, [r4, #76]	; 0x4c
    Accelerator.LayerCfg[1].InputAlpha   = aSrcColor;
900279ac:	e00e      	b.n	900279cc <EwBspGraphicsCopy+0x80>
  Accelerator.Init.Mode                  = ((aDstColorMode == aSrcColorMode) && (alpha == 0xFF)) ? DMA2D_M2M : DMA2D_M2M_PFC;
900279ae:	4c19      	ldr	r4, [pc, #100]	; (90027a14 <EwBspGraphicsCopy+0xc8>)
900279b0:	f44f 3080 	mov.w	r0, #65536	; 0x10000
  if ( aSrcColorMode == DMA2D_INPUT_A8 )
900279b4:	2f09      	cmp	r7, #9
  Accelerator.Init.Mode                  = ((aDstColorMode == aSrcColorMode) && (alpha == 0xFF)) ? DMA2D_M2M : DMA2D_M2M_PFC;
900279b6:	6060      	str	r0, [r4, #4]
  Accelerator.Init.OutputOffset          = aDstOffset;
900279b8:	e9c4 2902 	strd	r2, r9, [r4, #8]
  Accelerator.LayerCfg[1].InputColorMode = aSrcColorMode;
900279bc:	e9c4 8711 	strd	r8, r7, [r4, #68]	; 0x44
  if ( aSrcColorMode == DMA2D_INPUT_A8 )
900279c0:	d0f1      	beq.n	900279a6 <EwBspGraphicsCopy+0x5a>
  }
  else
  {
    Accelerator.LayerCfg[1].AlphaMode    = (alpha == 0xFF) ? DMA2D_NO_MODIF_ALPHA : DMA2D_COMBINE_ALPHA;
900279c2:	29ff      	cmp	r1, #255	; 0xff
900279c4:	d020      	beq.n	90027a08 <EwBspGraphicsCopy+0xbc>
900279c6:	2202      	movs	r2, #2
    Accelerator.LayerCfg[1].InputAlpha   = alpha;
900279c8:	e9c4 2113 	strd	r2, r1, [r4, #76]	; 0x4c
  }

  /* initialize the DMA2D graphics accelerator */
  HAL_DMA2D_Init( &Accelerator );
900279cc:	4811      	ldr	r0, [pc, #68]	; (90027a14 <EwBspGraphicsCopy+0xc8>)

  /* set the layer configurtation (foreground layer) */
  HAL_DMA2D_ConfigLayer( &Accelerator, 1 );

  /* set the flag for DMA2D transfer */
  TransferInProgress = 1;
900279ce:	2401      	movs	r4, #1
900279d0:	9303      	str	r3, [sp, #12]
  HAL_DMA2D_Init( &Accelerator );
900279d2:	f001 f805 	bl	900289e0 <HAL_DMA2D_Init>
  HAL_DMA2D_ConfigLayer( &Accelerator, 1 );
900279d6:	2101      	movs	r1, #1
900279d8:	480e      	ldr	r0, [pc, #56]	; (90027a14 <EwBspGraphicsCopy+0xc8>)
900279da:	f001 fa1b 	bl	90028e14 <HAL_DMA2D_ConfigLayer>

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  /* start the transfer */
  HAL_DMA2D_Start_IT( &Accelerator, aSrcAddr, aDstAddr, aWidth, aHeight );
900279de:	9b02      	ldr	r3, [sp, #8]
900279e0:	462a      	mov	r2, r5
900279e2:	4631      	mov	r1, r6
900279e4:	9300      	str	r3, [sp, #0]
900279e6:	480b      	ldr	r0, [pc, #44]	; (90027a14 <EwBspGraphicsCopy+0xc8>)
900279e8:	9b03      	ldr	r3, [sp, #12]
  TransferInProgress = 1;
900279ea:	f88a 4000 	strb.w	r4, [sl]
  HAL_DMA2D_Start_IT( &Accelerator, aSrcAddr, aDstAddr, aWidth, aHeight );
900279ee:	f001 f839 	bl	90028a64 <HAL_DMA2D_Start_IT>
  HAL_DMA2D_Start( &Accelerator, aSrcAddr, aDstAddr, aWidth, aHeight );

#endif

  /* check for immediate completion of drawing operation */
  if ( !ConcurrentOperation )
900279f2:	4b09      	ldr	r3, [pc, #36]	; (90027a18 <EwBspGraphicsCopy+0xcc>)
900279f4:	781b      	ldrb	r3, [r3, #0]
900279f6:	b94b      	cbnz	r3, 90027a0c <EwBspGraphicsCopy+0xc0>
  if ( TransferInProgress == 0 )
900279f8:	f89a 3000 	ldrb.w	r3, [sl]
900279fc:	b133      	cbz	r3, 90027a0c <EwBspGraphicsCopy+0xc0>
    EwBspGraphicsWaitForCompletion();
}
900279fe:	b007      	add	sp, #28
90027a00:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027a04:	f7ff be90 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
    Accelerator.LayerCfg[1].AlphaMode    = (alpha == 0xFF) ? DMA2D_NO_MODIF_ALPHA : DMA2D_COMBINE_ALPHA;
90027a08:	2200      	movs	r2, #0
90027a0a:	e7dd      	b.n	900279c8 <EwBspGraphicsCopy+0x7c>
}
90027a0c:	b007      	add	sp, #28
90027a0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027a12:	bf00      	nop
90027a14:	200003c8 	.word	0x200003c8
90027a18:	2000002d 	.word	0x2000002d
90027a1c:	20000430 	.word	0x20000430

90027a20 <EwBspGraphicsCopyBlend>:
*
*******************************************************************************/
void EwBspGraphicsCopyBlend( uint32_t aDstAddr, uint32_t aSrcAddr, uint32_t aDstOffset,
  uint32_t aSrcOffset, uint32_t aWidth, uint32_t aHeight, uint32_t aDstColorMode,
  uint32_t aSrcColorMode, uint32_t aSrcColor )
{
90027a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if ( TransferInProgress == 0 )
90027a24:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 90027adc <EwBspGraphicsCopyBlend+0xbc>
{
90027a28:	b087      	sub	sp, #28
90027a2a:	4606      	mov	r6, r0
90027a2c:	4615      	mov	r5, r2
  if ( TransferInProgress == 0 )
90027a2e:	f899 4000 	ldrb.w	r4, [r9]
{
90027a32:	4698      	mov	r8, r3
90027a34:	460f      	mov	r7, r1
90027a36:	9b14      	ldr	r3, [sp, #80]	; 0x50
90027a38:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
90027a3c:	e9dd 0212 	ldrd	r0, r2, [sp, #72]	; 0x48
  if ( TransferInProgress == 0 )
90027a40:	b13c      	cbz	r4, 90027a52 <EwBspGraphicsCopyBlend+0x32>
90027a42:	9003      	str	r0, [sp, #12]
90027a44:	e9cd 2304 	strd	r2, r3, [sp, #16]
90027a48:	f7ff fe6e 	bl	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027a4c:	9803      	ldr	r0, [sp, #12]
90027a4e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]

  /* ensure that previous DMA2D instruction is finished */
  EwBspGraphicsWaitForCompletion();

  /* prepare destination output configuration */
  Accelerator.Init.Mode                  = DMA2D_M2M_BLEND;
90027a52:	4c20      	ldr	r4, [pc, #128]	; (90027ad4 <EwBspGraphicsCopyBlend+0xb4>)
90027a54:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  Accelerator.Init.OutputOffset          = aDstOffset;

  /* prepare destination input configuration */
  Accelerator.LayerCfg[0].InputOffset    = aDstOffset;
  Accelerator.LayerCfg[0].InputColorMode = aDstColorMode;
  Accelerator.LayerCfg[0].AlphaMode      = DMA2D_NO_MODIF_ALPHA;
90027a58:	2100      	movs	r1, #0

  /* prepare source input configuration */
  Accelerator.LayerCfg[1].InputOffset    = aSrcOffset;
  Accelerator.LayerCfg[1].InputColorMode = aSrcColorMode;

  if ( aSrcColorMode == DMA2D_INPUT_A8 )
90027a5a:	2a09      	cmp	r2, #9
  Accelerator.Init.Mode                  = DMA2D_M2M_BLEND;
90027a5c:	f8c4 c004 	str.w	ip, [r4, #4]
  Accelerator.Init.OutputOffset          = aDstOffset;
90027a60:	e9c4 0502 	strd	r0, r5, [r4, #8]
  Accelerator.LayerCfg[0].InputColorMode = aDstColorMode;
90027a64:	e9c4 500a 	strd	r5, r0, [r4, #40]	; 0x28
  Accelerator.LayerCfg[1].InputColorMode = aSrcColorMode;
90027a68:	e9c4 8211 	strd	r8, r2, [r4, #68]	; 0x44
  Accelerator.LayerCfg[0].InputAlpha     = 0;
90027a6c:	e9c4 110c 	strd	r1, r1, [r4, #48]	; 0x30
  if ( aSrcColorMode == DMA2D_INPUT_A8 )
90027a70:	d02c      	beq.n	90027acc <EwBspGraphicsCopyBlend+0xac>
  unsigned char alpha = (unsigned char)( aSrcColor >> 24 );
90027a72:	0e1b      	lsrs	r3, r3, #24
    Accelerator.LayerCfg[1].AlphaMode    = DMA2D_COMBINE_ALPHA;
    Accelerator.LayerCfg[1].InputAlpha   = aSrcColor;
  }
  else
  {
    Accelerator.LayerCfg[1].AlphaMode    = (alpha == 0xFF) ? DMA2D_NO_MODIF_ALPHA : DMA2D_COMBINE_ALPHA;
90027a74:	2bff      	cmp	r3, #255	; 0xff
    Accelerator.LayerCfg[1].InputAlpha   = alpha;
90027a76:	6523      	str	r3, [r4, #80]	; 0x50
    Accelerator.LayerCfg[1].AlphaMode    = (alpha == 0xFF) ? DMA2D_NO_MODIF_ALPHA : DMA2D_COMBINE_ALPHA;
90027a78:	bf0c      	ite	eq
90027a7a:	2300      	moveq	r3, #0
90027a7c:	2302      	movne	r3, #2
90027a7e:	64e3      	str	r3, [r4, #76]	; 0x4c
  }

  /* initialize the DMA2D graphics accelerator */
  HAL_DMA2D_Init( &Accelerator );
90027a80:	4814      	ldr	r0, [pc, #80]	; (90027ad4 <EwBspGraphicsCopyBlend+0xb4>)

  /* set the layer configurtation (background layer) */
  HAL_DMA2D_ConfigLayer( &Accelerator, 0 );

  /* set the flag for DMA2D transfer */
  TransferInProgress = 1;
90027a82:	2401      	movs	r4, #1
  HAL_DMA2D_Init( &Accelerator );
90027a84:	f000 ffac 	bl	900289e0 <HAL_DMA2D_Init>
  HAL_DMA2D_ConfigLayer( &Accelerator, 1 );
90027a88:	2101      	movs	r1, #1
90027a8a:	4812      	ldr	r0, [pc, #72]	; (90027ad4 <EwBspGraphicsCopyBlend+0xb4>)
90027a8c:	f001 f9c2 	bl	90028e14 <HAL_DMA2D_ConfigLayer>
  HAL_DMA2D_ConfigLayer( &Accelerator, 0 );
90027a90:	2100      	movs	r1, #0
90027a92:	4810      	ldr	r0, [pc, #64]	; (90027ad4 <EwBspGraphicsCopyBlend+0xb4>)
90027a94:	f001 f9be 	bl	90028e14 <HAL_DMA2D_ConfigLayer>

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  /* start the transfer */
  HAL_DMA2D_BlendingStart_IT( &Accelerator, aSrcAddr, aDstAddr, aDstAddr, aWidth, aHeight );
90027a98:	4633      	mov	r3, r6
90027a9a:	4639      	mov	r1, r7
90027a9c:	4632      	mov	r2, r6
90027a9e:	480d      	ldr	r0, [pc, #52]	; (90027ad4 <EwBspGraphicsCopyBlend+0xb4>)
90027aa0:	f8cd b004 	str.w	fp, [sp, #4]
90027aa4:	f8cd a000 	str.w	sl, [sp]
  TransferInProgress = 1;
90027aa8:	f889 4000 	strb.w	r4, [r9]
  HAL_DMA2D_BlendingStart_IT( &Accelerator, aSrcAddr, aDstAddr, aDstAddr, aWidth, aHeight );
90027aac:	f000 fffa 	bl	90028aa4 <HAL_DMA2D_BlendingStart_IT>
  HAL_DMA2D_BlendingStart( &Accelerator, aSrcAddr, aDstAddr, aDstAddr, aWidth, aHeight );

#endif

  /* check for immediate completion of drawing operation */
  if ( !ConcurrentOperation )
90027ab0:	4b09      	ldr	r3, [pc, #36]	; (90027ad8 <EwBspGraphicsCopyBlend+0xb8>)
90027ab2:	781b      	ldrb	r3, [r3, #0]
90027ab4:	b913      	cbnz	r3, 90027abc <EwBspGraphicsCopyBlend+0x9c>
  if ( TransferInProgress == 0 )
90027ab6:	f899 3000 	ldrb.w	r3, [r9]
90027aba:	b913      	cbnz	r3, 90027ac2 <EwBspGraphicsCopyBlend+0xa2>
    EwBspGraphicsWaitForCompletion();
}
90027abc:	b007      	add	sp, #28
90027abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027ac2:	b007      	add	sp, #28
90027ac4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ac8:	f7ff be2e 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
    Accelerator.LayerCfg[1].AlphaMode    = DMA2D_COMBINE_ALPHA;
90027acc:	2202      	movs	r2, #2
90027ace:	e9c4 2313 	strd	r2, r3, [r4, #76]	; 0x4c
    Accelerator.LayerCfg[1].InputAlpha   = aSrcColor;
90027ad2:	e7d5      	b.n	90027a80 <EwBspGraphicsCopyBlend+0x60>
90027ad4:	200003c8 	.word	0x200003c8
90027ad8:	2000002d 	.word	0x2000002d
90027adc:	20000430 	.word	0x20000430

90027ae0 <EwBspGraphicsLoadClut>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspGraphicsLoadClut( uint32_t aClutAddr, uint32_t aClutSize )
{
90027ae0:	b570      	push	{r4, r5, r6, lr}
  if ( TransferInProgress == 0 )
90027ae2:	4e11      	ldr	r6, [pc, #68]	; (90027b28 <EwBspGraphicsLoadClut+0x48>)
{
90027ae4:	b086      	sub	sp, #24
90027ae6:	4605      	mov	r5, r0
90027ae8:	460c      	mov	r4, r1
  if ( TransferInProgress == 0 )
90027aea:	7833      	ldrb	r3, [r6, #0]
90027aec:	b10b      	cbz	r3, 90027af2 <EwBspGraphicsLoadClut+0x12>
90027aee:	f7ff fe1b 	bl	90027728 <EwBspGraphicsWaitForCompletion.part.0>
  clutCfg.pCLUT         = (uint32_t*)aClutAddr;
  clutCfg.CLUTColorMode = DMA2D_CCM_ARGB8888;
  clutCfg.Size          = aClutSize - 1; /* size is expected as size - 1 ... */

  /* set the flag for CLUT transfer */
  TransferInProgress = 1;
90027af2:	2301      	movs	r3, #1
  clutCfg.CLUTColorMode = DMA2D_CCM_ARGB8888;
90027af4:	2200      	movs	r2, #0
  clutCfg.Size          = aClutSize - 1; /* size is expected as size - 1 ... */
90027af6:	3c01      	subs	r4, #1
  clutCfg.pCLUT         = (uint32_t*)aClutAddr;
90027af8:	9503      	str	r5, [sp, #12]

#ifdef EW_USE_DMA2D_INTERRUPT_MODE

  /* start the transfer */
  HAL_DMA2D_CLUTLoad_IT( &Accelerator, clutCfg, 1 );
90027afa:	9300      	str	r3, [sp, #0]
  TransferInProgress = 1;
90027afc:	7033      	strb	r3, [r6, #0]
  HAL_DMA2D_CLUTLoad_IT( &Accelerator, clutCfg, 1 );
90027afe:	ab06      	add	r3, sp, #24
90027b00:	480a      	ldr	r0, [pc, #40]	; (90027b2c <EwBspGraphicsLoadClut+0x4c>)
  clutCfg.CLUTColorMode = DMA2D_CCM_ARGB8888;
90027b02:	e9cd 2404 	strd	r2, r4, [sp, #16]
  HAL_DMA2D_CLUTLoad_IT( &Accelerator, clutCfg, 1 );
90027b06:	e913 000e 	ldmdb	r3, {r1, r2, r3}
90027b0a:	f001 f839 	bl	90028b80 <HAL_DMA2D_CLUTLoad_IT>
  HAL_DMA2D_CLUTLoad( &Accelerator, clutCfg, 1 );

#endif

  /* check for immediate completion of CLUT loading */
  if ( !ConcurrentOperation )
90027b0e:	4b08      	ldr	r3, [pc, #32]	; (90027b30 <EwBspGraphicsLoadClut+0x50>)
90027b10:	781b      	ldrb	r3, [r3, #0]
90027b12:	b90b      	cbnz	r3, 90027b18 <EwBspGraphicsLoadClut+0x38>
  if ( TransferInProgress == 0 )
90027b14:	7833      	ldrb	r3, [r6, #0]
90027b16:	b90b      	cbnz	r3, 90027b1c <EwBspGraphicsLoadClut+0x3c>
    EwBspGraphicsWaitForCompletion();
}
90027b18:	b006      	add	sp, #24
90027b1a:	bd70      	pop	{r4, r5, r6, pc}
90027b1c:	b006      	add	sp, #24
90027b1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90027b22:	f7ff be01 	b.w	90027728 <EwBspGraphicsWaitForCompletion.part.0>
90027b26:	bf00      	nop
90027b28:	20000430 	.word	0x20000430
90027b2c:	200003c8 	.word	0x200003c8
90027b30:	2000002d 	.word	0x2000002d

90027b34 <DMA2D_IRQHandler>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void DMA2D_IRQHandler( void )
{
90027b34:	b510      	push	{r4, lr}
  HAL_DMA2D_IRQHandler( &Accelerator );
90027b36:	4c07      	ldr	r4, [pc, #28]	; (90027b54 <DMA2D_IRQHandler+0x20>)
90027b38:	4620      	mov	r0, r4
90027b3a:	f001 f8d5 	bl	90028ce8 <HAL_DMA2D_IRQHandler>

  if ( Accelerator.State == HAL_DMA2D_STATE_READY )
90027b3e:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90027b42:	2b01      	cmp	r3, #1
90027b44:	d000      	beq.n	90027b48 <DMA2D_IRQHandler+0x14>

      TransferInProgress = 0;

    #endif
  }
}
90027b46:	bd10      	pop	{r4, pc}
      osSemaphoreRelease( AcceleratorSemaphoreId );
90027b48:	4b03      	ldr	r3, [pc, #12]	; (90027b58 <DMA2D_IRQHandler+0x24>)
}
90027b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      osSemaphoreRelease( AcceleratorSemaphoreId );
90027b4e:	6818      	ldr	r0, [r3, #0]
90027b50:	f004 bd60 	b.w	9002c614 <osSemaphoreRelease>
90027b54:	200003c8 	.word	0x200003c8
90027b58:	200039ec 	.word	0x200039ec

90027b5c <EwBspInOutInitButton>:
void EwBspInOutInitButton( TButtonCallback aButtonCallback )
{
  GPIO_InitTypeDef GPIO_InitStructure;

  /* Enable GPIOI clock */
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b5c:	4b13      	ldr	r3, [pc, #76]	; (90027bac <EwBspInOutInitButton+0x50>)

  /* Configure PI11 pin as input floating */
  GPIO_InitStructure.Mode = GPIO_MODE_IT_RISING_FALLING;
  GPIO_InitStructure.Pull = GPIO_NOPULL;
  GPIO_InitStructure.Pin = BUTTON_USER_PIN;
90027b5e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b62:	f8d3 10e0 	ldr.w	r1, [r3, #224]	; 0xe0
{
90027b66:	b570      	push	{r4, r5, r6, lr}
90027b68:	4604      	mov	r4, r0
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b6a:	f041 0004 	orr.w	r0, r1, #4
{
90027b6e:	b086      	sub	sp, #24
  GPIO_InitStructure.Pull = GPIO_NOPULL;
90027b70:	2500      	movs	r5, #0
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b72:	f8c3 00e0 	str.w	r0, [r3, #224]	; 0xe0
90027b76:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  HAL_GPIO_Init( BUTTON_USER_GPIO_PORT, &GPIO_InitStructure );
90027b7a:	a901      	add	r1, sp, #4
  GPIO_InitStructure.Mode = GPIO_MODE_IT_RISING_FALLING;
90027b7c:	4e0c      	ldr	r6, [pc, #48]	; (90027bb0 <EwBspInOutInitButton+0x54>)
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b7e:	f003 0304 	and.w	r3, r3, #4
  HAL_GPIO_Init( BUTTON_USER_GPIO_PORT, &GPIO_InitStructure );
90027b82:	480c      	ldr	r0, [pc, #48]	; (90027bb4 <EwBspInOutInitButton+0x58>)
  GPIO_InitStructure.Pin = BUTTON_USER_PIN;
90027b84:	9201      	str	r2, [sp, #4]
  BUTTON_USER_GPIO_CLK_ENABLE();
90027b86:	9300      	str	r3, [sp, #0]
90027b88:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStructure.Mode = GPIO_MODE_IT_RISING_FALLING;
90027b8a:	9602      	str	r6, [sp, #8]
  GPIO_InitStructure.Pull = GPIO_NOPULL;
90027b8c:	9503      	str	r5, [sp, #12]
  HAL_GPIO_Init( BUTTON_USER_GPIO_PORT, &GPIO_InitStructure );
90027b8e:	f001 f9af 	bl	90028ef0 <HAL_GPIO_Init>

  /* Enable and set EXTI Line Interrupt to the lowest priority */
  HAL_NVIC_SetPriority( BUTTON_USER_EXTI_IRQn, 8, 0 );
90027b92:	462a      	mov	r2, r5
90027b94:	2108      	movs	r1, #8
90027b96:	2028      	movs	r0, #40	; 0x28
90027b98:	f000 fe18 	bl	900287cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ( BUTTON_USER_EXTI_IRQn );
90027b9c:	2028      	movs	r0, #40	; 0x28
90027b9e:	f000 fe4f 	bl	90028840 <HAL_NVIC_EnableIRQ>

  ButtonCallback = aButtonCallback;
90027ba2:	4b05      	ldr	r3, [pc, #20]	; (90027bb8 <EwBspInOutInitButton+0x5c>)
90027ba4:	601c      	str	r4, [r3, #0]
}
90027ba6:	b006      	add	sp, #24
90027ba8:	bd70      	pop	{r4, r5, r6, pc}
90027baa:	bf00      	nop
90027bac:	58024400 	.word	0x58024400
90027bb0:	11310000 	.word	0x11310000
90027bb4:	58020800 	.word	0x58020800
90027bb8:	20000434 	.word	0x20000434

90027bbc <EwBspInOutInitLed>:
*   None
*
*******************************************************************************/
void EwBspInOutInitLed( void )
{
  BSP_LED_Init( EW_LED );
90027bbc:	2000      	movs	r0, #0
90027bbe:	f000 bb1d 	b.w	900281fc <BSP_LED_Init>
90027bc2:	bf00      	nop

90027bc4 <EwBspInOutEventHandler>:
*******************************************************************************/
void EwBspInOutEventHandler( int aEventId )
{
  uint16_t GPIO_Pin = ( uint16_t ) aEventId;

  if ( GPIO_Pin == BUTTON_USER_PIN )
90027bc4:	b281      	uxth	r1, r0
90027bc6:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
90027bca:	d000      	beq.n	90027bce <EwBspInOutEventHandler+0xa>
90027bcc:	4770      	bx	lr
  {
    GPIO_PinState pinState;

    pinState = HAL_GPIO_ReadPin( BUTTON_USER_GPIO_PORT, GPIO_Pin );
90027bce:	4805      	ldr	r0, [pc, #20]	; (90027be4 <EwBspInOutEventHandler+0x20>)
{
90027bd0:	b510      	push	{r4, lr}
    pinState = HAL_GPIO_ReadPin( BUTTON_USER_GPIO_PORT, GPIO_Pin );
90027bd2:	f001 fb79 	bl	900292c8 <HAL_GPIO_ReadPin>

    if ( ButtonCallback )
90027bd6:	4b04      	ldr	r3, [pc, #16]	; (90027be8 <EwBspInOutEventHandler+0x24>)
90027bd8:	681b      	ldr	r3, [r3, #0]
90027bda:	b113      	cbz	r3, 90027be2 <EwBspInOutEventHandler+0x1e>
      ButtonCallback( pinState );
  }
}
90027bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      ButtonCallback( pinState );
90027be0:	4718      	bx	r3
}
90027be2:	bd10      	pop	{r4, pc}
90027be4:	58020800 	.word	0x58020800
90027be8:	20000434 	.word	0x20000434

90027bec <SystemClock_Config>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
static void SystemClock_Config( void )
{
90027bec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  RCC_ClkInitTypeDef        RCC_ClkInitStruct;
  RCC_OscInitTypeDef        RCC_OscInitStruct;
  RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;

  /*!< Supply configuration update enable */
   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY); /* PWR set to LDO for the STM32H750B-DISCO board */
90027bf0:	2002      	movs	r0, #2
{
90027bf2:	b0cd      	sub	sp, #308	; 0x134
   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY); /* PWR set to LDO for the STM32H750B-DISCO board */
90027bf4:	f002 f928 	bl	90029e48 <HAL_PWREx_ConfigSupply>

  /* The voltage scaling allows optimizing the power consumption when the device is
     clocked below the maximum system frequency, to update the voltage scaling value
     regarding system frequency refer to product datasheet.  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90027bf8:	492d      	ldr	r1, [pc, #180]	; (90027cb0 <SystemClock_Config+0xc4>)
90027bfa:	2200      	movs	r2, #0
90027bfc:	4b2d      	ldr	r3, [pc, #180]	; (90027cb4 <SystemClock_Config+0xc8>)
90027bfe:	9201      	str	r2, [sp, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90027c00:	461a      	mov	r2, r3
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90027c02:	6ac8      	ldr	r0, [r1, #44]	; 0x2c
90027c04:	f020 0001 	bic.w	r0, r0, #1
90027c08:	62c8      	str	r0, [r1, #44]	; 0x2c
90027c0a:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
90027c0c:	f001 0101 	and.w	r1, r1, #1
90027c10:	9101      	str	r1, [sp, #4]
90027c12:	6999      	ldr	r1, [r3, #24]
90027c14:	f441 4140 	orr.w	r1, r1, #49152	; 0xc000
90027c18:	6199      	str	r1, [r3, #24]
90027c1a:	699b      	ldr	r3, [r3, #24]
90027c1c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90027c20:	9301      	str	r3, [sp, #4]
90027c22:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90027c24:	6993      	ldr	r3, [r2, #24]
90027c26:	049b      	lsls	r3, r3, #18
90027c28:	d5fc      	bpl.n	90027c24 <SystemClock_Config+0x38>

  /* Enable HSE Oscillator and activate PLL with HSE as source */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
90027c2a:	2500      	movs	r5, #0
  RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90027c2c:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLP = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  RCC_OscInitStruct.PLL.PLLQ = 4;

  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90027c2e:	f04f 0808 	mov.w	r8, #8
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90027c32:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90027c34:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLM = 5;
90027c38:	2705      	movs	r7, #5
  RCC_OscInitStruct.PLL.PLLN = 160;
90027c3a:	26a0      	movs	r6, #160	; 0xa0
  RCC_OscInitStruct.PLL.PLLQ = 4;
90027c3c:	f04f 0904 	mov.w	r9, #4

  HAL_RCC_OscConfig(&RCC_OscInitStruct);
90027c40:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90027c42:	920a      	str	r2, [sp, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
90027c44:	930b      	str	r3, [sp, #44]	; 0x2c
  RCC_OscInitStruct.HSIState = RCC_HSI_OFF;
90027c46:	950d      	str	r5, [sp, #52]	; 0x34
  RCC_OscInitStruct.CSIState = RCC_CSI_OFF;
90027c48:	9511      	str	r5, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = 2;
90027c4a:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
90027c4c:	9419      	str	r4, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLQ = 4;
90027c4e:	f8cd 9060 	str.w	r9, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90027c52:	f8cd 8068 	str.w	r8, [sp, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90027c56:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90027c5a:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLN = 160;
90027c5e:	e9cd 7615 	strd	r7, r6, [sp, #84]	; 0x54
  HAL_RCC_OscConfig(&RCC_OscInitStruct);
90027c62:	f002 f917 	bl	90029e94 <HAL_RCC_OscConfig>

  /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2
     clocks dividers */
  /* Select PLL as system clock source and configure  bus clocks dividers */
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 | \
90027c66:	203f      	movs	r0, #63	; 0x3f
                                 RCC_CLOCKTYPE_PCLK2  | RCC_CLOCKTYPE_D3PCLK1);

  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90027c68:	f04f 0c03 	mov.w	ip, #3
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90027c6c:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90027c6e:	f44f 6280 	mov.w	r2, #1024	; 0x400
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
90027c72:	4649      	mov	r1, r9
  RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 | \
90027c74:	9002      	str	r0, [sp, #8]
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
90027c76:	eb0d 0008 	add.w	r0, sp, r8
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90027c7a:	f8cd c00c 	str.w	ip, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90027c7e:	9208      	str	r2, [sp, #32]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90027c80:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
90027c82:	f8cd 8014 	str.w	r8, [sp, #20]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90027c86:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90027c88:	e9cd 3306 	strd	r3, r3, [sp, #24]
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4);
90027c8c:	f002 fca0 	bl	9002a5d0 <HAL_RCC_ClockConfig>
  /* LCD clock configuration */
  /* PLL3_VCO Input = HSE_VALUE/PLL3M = 5 Mhz */
  /* PLL3_VCO Output = PLL3_VCO Input * PLL3N = 800 Mhz */
  /* PLLLCDCLK = PLL3_VCO Output/PLL3R = 800/83 = 9.63 Mhz */
  /* LTDC clock frequency = PLLLCDCLK = 9.63 Mhz */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90027c90:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  PeriphClkInitStruct.PLL3.PLL3M = 5;
  PeriphClkInitStruct.PLL3.PLL3N = 160;
  PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
  PeriphClkInitStruct.PLL3.PLL3P = 2;
  PeriphClkInitStruct.PLL3.PLL3Q = 2;
  PeriphClkInitStruct.PLL3.PLL3R = 83;
90027c94:	2353      	movs	r3, #83	; 0x53
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
90027c96:	a81d      	add	r0, sp, #116	; 0x74
  PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
90027c98:	952d      	str	r5, [sp, #180]	; 0xb4
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90027c9a:	921d      	str	r2, [sp, #116]	; 0x74
  PeriphClkInitStruct.PLL3.PLL3R = 83;
90027c9c:	932a      	str	r3, [sp, #168]	; 0xa8
  PeriphClkInitStruct.PLL3.PLL3N = 160;
90027c9e:	e9cd 7626 	strd	r7, r6, [sp, #152]	; 0x98
  PeriphClkInitStruct.PLL3.PLL3Q = 2;
90027ca2:	e9cd 4428 	strd	r4, r4, [sp, #160]	; 0xa0
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
90027ca6:	f002 fefb 	bl	9002aaa0 <HAL_RCCEx_PeriphCLKConfig>
}
90027caa:	b04d      	add	sp, #308	; 0x134
90027cac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90027cb0:	58000400 	.word	0x58000400
90027cb4:	58024800 	.word	0x58024800

90027cb8 <EwBspSystemInit>:
* RETURN VALUE:
*   None
*
*******************************************************************************/
void EwBspSystemInit( void )
{
90027cb8:	b5f0      	push	{r4, r5, r6, r7, lr}
90027cba:	b085      	sub	sp, #20
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027cbc:	2501      	movs	r5, #1
  HAL_MPU_Disable();
90027cbe:	f000 fdf9 	bl	900288b4 <HAL_MPU_Disable>
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_ENABLE;
90027cc2:	4f4e      	ldr	r7, [pc, #312]	; (90027dfc <EwBspSystemInit+0x144>)
  MPU_InitStruct.BaseAddress      = 0x24000000;
90027cc4:	f04f 5210 	mov.w	r2, #603979776	; 0x24000000
  MPU_InitStruct.Size             = MPU_REGION_SIZE_512KB;
90027cc8:	4b4d      	ldr	r3, [pc, #308]	; (90027e00 <EwBspSystemInit+0x148>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027cca:	4668      	mov	r0, sp
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027ccc:	f8ad 5000 	strh.w	r5, [sp]
  MPU_InitStruct.BaseAddress      = 0x24000000;
90027cd0:	9201      	str	r2, [sp, #4]
  MPU_InitStruct.BaseAddress      = 0x90000000;
90027cd2:	f04f 4610 	mov.w	r6, #2415919104	; 0x90000000
  MPU_InitStruct.BaseAddress      = 0xD0000000;
90027cd6:	f04f 4450 	mov.w	r4, #3489660928	; 0xd0000000
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_ENABLE;
90027cda:	e9cd 3702 	strd	r3, r7, [sp, #8]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027cde:	f000 fe0b 	bl	900288f8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027ce2:	f240 2301 	movw	r3, #513	; 0x201
  MPU_InitStruct.Size             = MPU_REGION_SIZE_256MB;
90027ce6:	221b      	movs	r2, #27
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027ce8:	4668      	mov	r0, sp
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027cea:	f8ad 3000 	strh.w	r3, [sp]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
90027cee:	f240 1301 	movw	r3, #257	; 0x101
  MPU_InitStruct.BaseAddress      = 0x90000000;
90027cf2:	9601      	str	r6, [sp, #4]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
90027cf4:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027cf8:	f000 fdfe 	bl	900288f8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027cfc:	f240 3201 	movw	r2, #769	; 0x301
  MPU_InitStruct.Size             = MPU_REGION_SIZE_128MB; /* region size according to the QSPI memory size */
90027d00:	4b40      	ldr	r3, [pc, #256]	; (90027e04 <EwBspSystemInit+0x14c>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d02:	4668      	mov	r0, sp
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027d04:	f8ad 2000 	strh.w	r2, [sp]
  MPU_InitStruct.Size             = MPU_REGION_SIZE_128MB; /* region size according to the QSPI memory size */
90027d08:	9302      	str	r3, [sp, #8]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_ENABLE;
90027d0a:	9703      	str	r7, [sp, #12]
  MPU_InitStruct.BaseAddress      = 0x90000000;
90027d0c:	9601      	str	r6, [sp, #4]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d0e:	f000 fdf3 	bl	900288f8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027d12:	f240 4201 	movw	r2, #1025	; 0x401
  MPU_InitStruct.Size             = MPU_REGION_SIZE_512MB;
90027d16:	231c      	movs	r3, #28
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d18:	4668      	mov	r0, sp
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
90027d1a:	9503      	str	r5, [sp, #12]
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027d1c:	f8ad 2000 	strh.w	r2, [sp]
  MPU_InitStruct.Size             = MPU_REGION_SIZE_512MB;
90027d20:	e9cd 4301 	strd	r4, r3, [sp, #4]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d24:	f000 fde8 	bl	900288f8 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size             = MPU_REGION_SIZE_8MB; /* region size according to SDRAM size - only 8MB are used */
90027d28:	4a37      	ldr	r2, [pc, #220]	; (90027e08 <EwBspSystemInit+0x150>)
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
90027d2a:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027d2e:	f240 7101 	movw	r1, #1793	; 0x701
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d32:	4668      	mov	r0, sp
  MPU_InitStruct.BaseAddress      = 0xD0000000;
90027d34:	9401      	str	r4, [sp, #4]
  MPU_InitStruct.Enable           = MPU_REGION_ENABLE;
90027d36:	f8ad 1000 	strh.w	r1, [sp]
  MPU_InitStruct.DisableExec      = MPU_INSTRUCTION_ACCESS_DISABLE;
90027d3a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90027d3e:	f000 fddb 	bl	900288f8 <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90027d42:	2004      	movs	r0, #4
90027d44:	f000 fdc6 	bl	900288d4 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90027d48:	4a30      	ldr	r2, [pc, #192]	; (90027e0c <EwBspSystemInit+0x154>)
90027d4a:	6953      	ldr	r3, [r2, #20]
90027d4c:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90027d50:	d111      	bne.n	90027d76 <EwBspSystemInit+0xbe>
  __ASM volatile ("dsb 0xF":::"memory");
90027d52:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90027d56:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90027d5a:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90027d5e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90027d62:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90027d66:	6953      	ldr	r3, [r2, #20]
90027d68:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90027d6c:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90027d6e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90027d72:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90027d76:	4825      	ldr	r0, [pc, #148]	; (90027e0c <EwBspSystemInit+0x154>)
90027d78:	6943      	ldr	r3, [r0, #20]
90027d7a:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90027d7e:	d124      	bne.n	90027dca <EwBspSystemInit+0x112>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90027d80:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90027d84:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90027d88:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90027d8c:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90027d90:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90027d94:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90027d98:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90027d9a:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90027d9e:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90027da0:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90027da4:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90027da6:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90027daa:	1c5a      	adds	r2, r3, #1
90027dac:	d1f8      	bne.n	90027da0 <EwBspSystemInit+0xe8>
    } while(sets-- != 0U);
90027dae:	3c20      	subs	r4, #32
90027db0:	f114 0f20 	cmn.w	r4, #32
90027db4:	d1f1      	bne.n	90027d9a <EwBspSystemInit+0xe2>
90027db6:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90027dba:	6943      	ldr	r3, [r0, #20]
90027dbc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90027dc0:	6143      	str	r3, [r0, #20]
90027dc2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90027dc6:	f3bf 8f6f 	isb	sy
  SCB_EnableICache();

  /* Enable D-Cache */
  SCB_EnableDCache();

  HAL_Init();
90027dca:	f000 fca3 	bl	90028714 <HAL_Init>

  SystemClock_Config();
90027dce:	f7ff ff0d 	bl	90027bec <SystemClock_Config>

  /* Disable FMC bank1 (0x6000 0000 - 0x6FFF FFFF), since it is not used.
     This setting avoids unneeded speculative access to the first FMC bank.
     See also STM Application Note AN4861 */
  __HAL_RCC_FMC_CLK_ENABLE();
90027dd2:	4b0f      	ldr	r3, [pc, #60]	; (90027e10 <EwBspSystemInit+0x158>)
  FMC_NORSRAM_DEVICE->BTCR[0]&=~0x1;
90027dd4:	490f      	ldr	r1, [pc, #60]	; (90027e14 <EwBspSystemInit+0x15c>)
  __HAL_RCC_FMC_CLK_ENABLE();
90027dd6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90027dda:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90027dde:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90027de2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90027de6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
90027dea:	9300      	str	r3, [sp, #0]
90027dec:	9b00      	ldr	r3, [sp, #0]
  FMC_NORSRAM_DEVICE->BTCR[0]&=~0x1;
90027dee:	680b      	ldr	r3, [r1, #0]
90027df0:	f023 0301 	bic.w	r3, r3, #1
90027df4:	600b      	str	r3, [r1, #0]
}
90027df6:	b005      	add	sp, #20
90027df8:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027dfa:	bf00      	nop
90027dfc:	00010100 	.word	0x00010100
90027e00:	03000012 	.word	0x03000012
90027e04:	0300001a 	.word	0x0300001a
90027e08:	03000016 	.word	0x03000016
90027e0c:	e000ed00 	.word	0xe000ed00
90027e10:	58024400 	.word	0x58024400
90027e14:	52004000 	.word	0x52004000

90027e18 <EwBspSystemDone>:
*   None
*
*******************************************************************************/
void EwBspSystemDone( void )
{
}
90027e18:	4770      	bx	lr
90027e1a:	bf00      	nop

90027e1c <EwBspTouchInit>:
* RETURN VALUE:
*   Returns 1 if successful, 0 otherwise.
*
*******************************************************************************/
int EwBspTouchInit( int aGuiWidth, int aGuiHeight, XDisplayInfo* aDisplayInfo )
{
90027e1c:	b570      	push	{r4, r5, r6, lr}
  FT5336_IO_t IOCtx;
  uint32_t    id = 0;
90027e1e:	2000      	movs	r0, #0
{
90027e20:	b088      	sub	sp, #32

  EW_UNUSED_ARG( aGuiWidth );
  EW_UNUSED_ARG( aGuiHeight );

  /* Configure the touch screen driver */
  IOCtx.Init        = BSP_I2C4_Init;
90027e22:	4d23      	ldr	r5, [pc, #140]	; (90027eb0 <EwBspTouchInit+0x94>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;
  IOCtx.Address     = TS_I2C_ADDRESS;
90027e24:	2370      	movs	r3, #112	; 0x70
  uint32_t    id = 0;
90027e26:	9001      	str	r0, [sp, #4]
{
90027e28:	4614      	mov	r4, r2
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90027e2a:	4822      	ldr	r0, [pc, #136]	; (90027eb4 <EwBspTouchInit+0x98>)

  if ( FT5336_RegisterBusIO ( &FT5336Obj, &IOCtx) != FT5336_OK )
90027e2c:	a902      	add	r1, sp, #8
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90027e2e:	4e22      	ldr	r6, [pc, #136]	; (90027eb8 <EwBspTouchInit+0x9c>)
  IOCtx.GetTick     = BSP_GetTick;
90027e30:	4a22      	ldr	r2, [pc, #136]	; (90027ebc <EwBspTouchInit+0xa0>)
  IOCtx.Init        = BSP_I2C4_Init;
90027e32:	9502      	str	r5, [sp, #8]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90027e34:	4d22      	ldr	r5, [pc, #136]	; (90027ec0 <EwBspTouchInit+0xa4>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90027e36:	9006      	str	r0, [sp, #24]
  if ( FT5336_RegisterBusIO ( &FT5336Obj, &IOCtx) != FT5336_OK )
90027e38:	4822      	ldr	r0, [pc, #136]	; (90027ec4 <EwBspTouchInit+0xa8>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90027e3a:	9603      	str	r6, [sp, #12]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90027e3c:	9505      	str	r5, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90027e3e:	9207      	str	r2, [sp, #28]
  IOCtx.Address     = TS_I2C_ADDRESS;
90027e40:	f8ad 3010 	strh.w	r3, [sp, #16]
  if ( FT5336_RegisterBusIO ( &FT5336Obj, &IOCtx) != FT5336_OK )
90027e44:	f7ff f83c 	bl	90026ec0 <FT5336_RegisterBusIO>
90027e48:	b110      	cbz	r0, 90027e50 <EwBspTouchInit+0x34>
    return 0;
90027e4a:	2000      	movs	r0, #0
    EwPrint( "EwBspTouchInit: Using TouchArea %d, %d - %d, %d\n", TouchAreaMinX, TouchAreaMinY, TouchAreaMaxX, TouchAreaMaxY );

  #endif

  return 1;
}
90027e4c:	b008      	add	sp, #32
90027e4e:	bd70      	pop	{r4, r5, r6, pc}
  if (( FT5336_ReadID( &FT5336Obj, &id ) != FT5336_OK ) || ( id != FT5336_ID ))
90027e50:	a901      	add	r1, sp, #4
90027e52:	481c      	ldr	r0, [pc, #112]	; (90027ec4 <EwBspTouchInit+0xa8>)
90027e54:	f7fe ffc0 	bl	90026dd8 <FT5336_ReadID>
90027e58:	2800      	cmp	r0, #0
90027e5a:	d1f6      	bne.n	90027e4a <EwBspTouchInit+0x2e>
90027e5c:	9b01      	ldr	r3, [sp, #4]
90027e5e:	2b51      	cmp	r3, #81	; 0x51
90027e60:	d1f3      	bne.n	90027e4a <EwBspTouchInit+0x2e>
  if ( FT5336_Init( &FT5336Obj ) != FT5336_OK )
90027e62:	4818      	ldr	r0, [pc, #96]	; (90027ec4 <EwBspTouchInit+0xa8>)
90027e64:	f7ff f814 	bl	90026e90 <FT5336_Init>
90027e68:	4605      	mov	r5, r0
90027e6a:	2800      	cmp	r0, #0
90027e6c:	d1ed      	bne.n	90027e4a <EwBspTouchInit+0x2e>
  memset( TouchData, 0, sizeof( TouchData ));
90027e6e:	4601      	mov	r1, r0
90027e70:	2250      	movs	r2, #80	; 0x50
90027e72:	4815      	ldr	r0, [pc, #84]	; (90027ec8 <EwBspTouchInit+0xac>)
90027e74:	f006 f8a8 	bl	9002dfc8 <memset>
  memset( TouchEvent, 0, sizeof( TouchEvent ));
90027e78:	2250      	movs	r2, #80	; 0x50
90027e7a:	4629      	mov	r1, r5
90027e7c:	4813      	ldr	r0, [pc, #76]	; (90027ecc <EwBspTouchInit+0xb0>)
90027e7e:	f006 f8a3 	bl	9002dfc8 <memset>
  if ( !aDisplayInfo )
90027e82:	2c00      	cmp	r4, #0
90027e84:	d0e1      	beq.n	90027e4a <EwBspTouchInit+0x2e>
  DisplayWidth   = aDisplayInfo->DisplayWidth;
90027e86:	6921      	ldr	r1, [r4, #16]
  TouchAreaMaxX = EW_TOUCH_AREA_MAX_X;
90027e88:	f44f 76f0 	mov.w	r6, #480	; 0x1e0
  DisplayWidth   = aDisplayInfo->DisplayWidth;
90027e8c:	4b10      	ldr	r3, [pc, #64]	; (90027ed0 <EwBspTouchInit+0xb4>)
  TouchAreaMaxY = EW_TOUCH_AREA_MAX_Y;
90027e8e:	f44f 7288 	mov.w	r2, #272	; 0x110
  DisplayHeight  = aDisplayInfo->DisplayHeight;
90027e92:	6964      	ldr	r4, [r4, #20]
  return 1;
90027e94:	2001      	movs	r0, #1
  DisplayWidth   = aDisplayInfo->DisplayWidth;
90027e96:	6019      	str	r1, [r3, #0]
  DisplayHeight  = aDisplayInfo->DisplayHeight;
90027e98:	4b0e      	ldr	r3, [pc, #56]	; (90027ed4 <EwBspTouchInit+0xb8>)
  TouchAreaMinX = EW_TOUCH_AREA_MIN_X;
90027e9a:	490f      	ldr	r1, [pc, #60]	; (90027ed8 <EwBspTouchInit+0xbc>)
  DisplayHeight  = aDisplayInfo->DisplayHeight;
90027e9c:	601c      	str	r4, [r3, #0]
  TouchAreaMinY = EW_TOUCH_AREA_MIN_Y;
90027e9e:	4b0f      	ldr	r3, [pc, #60]	; (90027edc <EwBspTouchInit+0xc0>)
  TouchAreaMinX = EW_TOUCH_AREA_MIN_X;
90027ea0:	600d      	str	r5, [r1, #0]
  TouchAreaMinY = EW_TOUCH_AREA_MIN_Y;
90027ea2:	601d      	str	r5, [r3, #0]
  TouchAreaMaxX = EW_TOUCH_AREA_MAX_X;
90027ea4:	490e      	ldr	r1, [pc, #56]	; (90027ee0 <EwBspTouchInit+0xc4>)
  TouchAreaMaxY = EW_TOUCH_AREA_MAX_Y;
90027ea6:	4b0f      	ldr	r3, [pc, #60]	; (90027ee4 <EwBspTouchInit+0xc8>)
  TouchAreaMaxX = EW_TOUCH_AREA_MAX_X;
90027ea8:	600e      	str	r6, [r1, #0]
  TouchAreaMaxY = EW_TOUCH_AREA_MAX_Y;
90027eaa:	601a      	str	r2, [r3, #0]
  if (( TouchAreaMaxX == TouchAreaMinX ) || ( TouchAreaMaxY == TouchAreaMinY ))
90027eac:	e7ce      	b.n	90027e4c <EwBspTouchInit+0x30>
90027eae:	bf00      	nop
90027eb0:	90028319 	.word	0x90028319
90027eb4:	90028685 	.word	0x90028685
90027eb8:	90028285 	.word	0x90028285
90027ebc:	900286c1 	.word	0x900286c1
90027ec0:	90028649 	.word	0x90028649
90027ec4:	20000440 	.word	0x20000440
90027ec8:	20000478 	.word	0x20000478
90027ecc:	200004c8 	.word	0x200004c8
90027ed0:	2000043c 	.word	0x2000043c
90027ed4:	20000438 	.word	0x20000438
90027ed8:	20000470 	.word	0x20000470
90027edc:	20000474 	.word	0x20000474
90027ee0:	20000468 	.word	0x20000468
90027ee4:	2000046c 	.word	0x2000046c

90027ee8 <EwBspTouchDone>:
*   None
*
*******************************************************************************/
void EwBspTouchDone( void )
{
}
90027ee8:	4770      	bx	lr
90027eea:	bf00      	nop

90027eec <EwBspTouchGetEvents>:
* RETURN VALUE:
*   Returns the number of detected touch events, otherwise 0.
*
*******************************************************************************/
int EwBspTouchGetEvents( XTouchEvent** aTouchEvent )
{
90027eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ef0:	b0a7      	sub	sp, #156	; 0x9c
  ret = FT5336_GetMultiTouchState( &FT5336Obj, &touchPadState );

  CPU_LOAD_SET_ACTIVE();

  /* all fingers have the state unidentified */
  memset( identified, 0, sizeof( identified ));
90027ef2:	2400      	movs	r4, #0
{
90027ef4:	9001      	str	r0, [sp, #4]
  CPU_LOAD_SET_IDLE();
90027ef6:	f7ff f9e5 	bl	900272c4 <EwBspClockCpuLoadSetIdle>
  ret = FT5336_GetMultiTouchState( &FT5336Obj, &touchPadState );
90027efa:	a907      	add	r1, sp, #28
90027efc:	4879      	ldr	r0, [pc, #484]	; (900280e4 <EwBspTouchGetEvents+0x1f8>)
90027efe:	f7fe ff79 	bl	90026df4 <FT5336_GetMultiTouchState>
90027f02:	4605      	mov	r5, r0
  CPU_LOAD_SET_ACTIVE();
90027f04:	f7ff f9a0 	bl	90027248 <EwBspClockCpuLoadSetActive>
  memset( identified, 0, sizeof( identified ));
90027f08:	9405      	str	r4, [sp, #20]
90027f0a:	f88d 4018 	strb.w	r4, [sp, #24]

  /* get current time in ms */
  ticks = EwGetTicks();
90027f0e:	f7fe fef7 	bl	90026d00 <EwGetTicks>
90027f12:	9000      	str	r0, [sp, #0]

  /* iterate through all touch events from the hardware */
  if ( ret == FT5336_OK )
90027f14:	2d00      	cmp	r5, #0
90027f16:	d171      	bne.n	90027ffc <EwBspTouchGetEvents+0x110>
    for ( t = 0; t < touchPadState.TouchDetected; t++ )
90027f18:	9907      	ldr	r1, [sp, #28]
90027f1a:	2900      	cmp	r1, #0
90027f1c:	d038      	beq.n	90027f90 <EwBspTouchGetEvents+0xa4>
      touchY = touchPadState.TouchY[ t ];

    #endif

    /* convert raw touch coordinates into display coordinates */
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f1e:	4d72      	ldr	r5, [pc, #456]	; (900280e8 <EwBspTouchGetEvents+0x1fc>)
90027f20:	a808      	add	r0, sp, #32
90027f22:	4b72      	ldr	r3, [pc, #456]	; (900280ec <EwBspTouchGetEvents+0x200>)
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f24:	4c72      	ldr	r4, [pc, #456]	; (900280f0 <EwBspTouchGetEvents+0x204>)
90027f26:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90027f2a:	4a72      	ldr	r2, [pc, #456]	; (900280f4 <EwBspTouchGetEvents+0x208>)
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f2c:	f8d5 9000 	ldr.w	r9, [r5]
90027f30:	681b      	ldr	r3, [r3, #0]
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f32:	f8d4 8000 	ldr.w	r8, [r4]
90027f36:	46ca      	mov	sl, r9
90027f38:	6814      	ldr	r4, [r2, #0]
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f3a:	eba3 0e09 	sub.w	lr, r3, r9
90027f3e:	4a6e      	ldr	r2, [pc, #440]	; (900280f8 <EwBspTouchGetEvents+0x20c>)
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f40:	4b6e      	ldr	r3, [pc, #440]	; (900280fc <EwBspTouchGetEvents+0x210>)
90027f42:	eba4 0b08 	sub.w	fp, r4, r8
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f46:	6816      	ldr	r6, [r2, #0]
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f48:	f8d3 c000 	ldr.w	ip, [r3]
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f4c:	6943      	ldr	r3, [r0, #20]
90027f4e:	4602      	mov	r2, r0
90027f50:	3004      	adds	r0, #4
90027f52:	eba3 030a 	sub.w	r3, r3, sl
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f56:	6812      	ldr	r2, [r2, #0]
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f58:	fb06 f303 	mul.w	r3, r6, r3
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f5c:	eba2 0208 	sub.w	r2, r2, r8
    touchX = (( touchX - TouchAreaMinX ) * DisplayWidth ) / ( TouchAreaMaxX - TouchAreaMinX );
90027f60:	fb93 f3fe 	sdiv	r3, r3, lr
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f64:	fb0c f202 	mul.w	r2, ip, r2

    /* check for valid display coordinates */
    if (( touchX < 0 ) || ( touchX > DisplayWidth ) ||
90027f68:	0fdc      	lsrs	r4, r3, #31
    touchY = (( touchY - TouchAreaMinY ) * DisplayHeight ) / ( TouchAreaMaxY - TouchAreaMinY );
90027f6a:	fb92 f2fb 	sdiv	r2, r2, fp
        ( touchY < 0 ) || ( touchY > DisplayHeight ))
90027f6e:	429e      	cmp	r6, r3
90027f70:	bfb8      	it	lt
90027f72:	f044 0401 	orrlt.w	r4, r4, #1
90027f76:	ea54 74d2 	orrs.w	r4, r4, r2, lsr #31
90027f7a:	d105      	bne.n	90027f88 <EwBspTouchGetEvents+0x9c>
90027f7c:	4594      	cmp	ip, r2
90027f7e:	bfac      	ite	ge
90027f80:	2400      	movge	r4, #0
90027f82:	2401      	movlt	r4, #1
90027f84:	2c00      	cmp	r4, #0
90027f86:	d03b      	beq.n	90028000 <EwBspTouchGetEvents+0x114>
    for ( t = 0; t < touchPadState.TouchDetected; t++ )
90027f88:	4288      	cmp	r0, r1
90027f8a:	d1df      	bne.n	90027f4c <EwBspTouchGetEvents+0x60>
90027f8c:	f89d 1014 	ldrb.w	r1, [sp, #20]
90027f90:	2000      	movs	r0, #0
90027f92:	f10d 0c15 	add.w	ip, sp, #21
90027f96:	4b5a      	ldr	r3, [pc, #360]	; (90028100 <EwBspTouchGetEvents+0x214>)
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_MOVE;

    /* end of a touch cycle */
    else if ( !identified[ f ] && ( touch->State != EW_BSP_TOUCH_IDLE ))
    {
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_UP;
90027f98:	f04f 0e03 	mov.w	lr, #3
    for ( t = 0; t < touchPadState.TouchDetected; t++ )
90027f9c:	4602      	mov	r2, r0
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_UP;
90027f9e:	4c59      	ldr	r4, [pc, #356]	; (90028104 <EwBspTouchGetEvents+0x218>)
    if ( identified[ f ] && ( touch->State == EW_BSP_TOUCH_DOWN ))
90027fa0:	b161      	cbz	r1, 90027fbc <EwBspTouchGetEvents+0xd0>
90027fa2:	7b59      	ldrb	r1, [r3, #13]
90027fa4:	2901      	cmp	r1, #1
90027fa6:	d024      	beq.n	90027ff2 <EwBspTouchGetEvents+0x106>
    else if ( identified[ f ] && ( touch->State == EW_BSP_TOUCH_MOVE ))
90027fa8:	2902      	cmp	r1, #2
90027faa:	d022      	beq.n	90027ff2 <EwBspTouchGetEvents+0x106>
  for ( f = 0; f < NO_OF_FINGERS; f++ )
90027fac:	3201      	adds	r2, #1
90027fae:	3310      	adds	r3, #16
90027fb0:	2a05      	cmp	r2, #5
90027fb2:	d017      	beq.n	90027fe4 <EwBspTouchGetEvents+0xf8>
90027fb4:	f81c 1b01 	ldrb.w	r1, [ip], #1
    if ( identified[ f ] && ( touch->State == EW_BSP_TOUCH_DOWN ))
90027fb8:	2900      	cmp	r1, #0
90027fba:	d1f2      	bne.n	90027fa2 <EwBspTouchGetEvents+0xb6>
    else if ( !identified[ f ] && ( touch->State != EW_BSP_TOUCH_IDLE ))
90027fbc:	7b5e      	ldrb	r6, [r3, #13]
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_UP;
90027fbe:	0105      	lsls	r5, r0, #4
90027fc0:	eb04 1700 	add.w	r7, r4, r0, lsl #4
    else if ( !identified[ f ] && ( touch->State != EW_BSP_TOUCH_IDLE ))
90027fc4:	2e00      	cmp	r6, #0
90027fc6:	d0f1      	beq.n	90027fac <EwBspTouchGetEvents+0xc0>
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_UP;
90027fc8:	f8c7 e00c 	str.w	lr, [r7, #12]
      touch->State = EW_BSP_TOUCH_IDLE;
90027fcc:	7359      	strb	r1, [r3, #13]
    }
    else
      continue;

    TouchEvent[ noOfEvents ].XPos   = touch->XPos;
90027fce:	1961      	adds	r1, r4, r5

      EwPrint( "Touch event for finger %d with state %d ( %4d, %4d )\n", f, TouchEvent[ noOfEvents ].State, TouchEvent[ noOfEvents ].XPos, TouchEvent[ noOfEvents ].YPos );

    #endif

    noOfEvents++;
90027fd0:	3001      	adds	r0, #1
    TouchEvent[ noOfEvents ].XPos   = touch->XPos;
90027fd2:	e9d3 6700 	ldrd	r6, r7, [r3]
90027fd6:	3310      	adds	r3, #16
90027fd8:	5166      	str	r6, [r4, r5]
    TouchEvent[ noOfEvents ].YPos   = touch->YPos;
90027fda:	e9c1 7201 	strd	r7, r2, [r1, #4]
  for ( f = 0; f < NO_OF_FINGERS; f++ )
90027fde:	3201      	adds	r2, #1
90027fe0:	2a05      	cmp	r2, #5
90027fe2:	d1e7      	bne.n	90027fb4 <EwBspTouchGetEvents+0xc8>
  }

  /* return the prepared touch events and the number of prepared touch events */
  if ( aTouchEvent )
90027fe4:	9a01      	ldr	r2, [sp, #4]
90027fe6:	b10a      	cbz	r2, 90027fec <EwBspTouchGetEvents+0x100>
    *aTouchEvent = TouchEvent;
90027fe8:	4b46      	ldr	r3, [pc, #280]	; (90028104 <EwBspTouchGetEvents+0x218>)
90027fea:	6013      	str	r3, [r2, #0]

  return noOfEvents;
}
90027fec:	b027      	add	sp, #156	; 0x9c
90027fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      TouchEvent[ noOfEvents ].State = EW_BSP_TOUCH_MOVE;
90027ff2:	eb04 1600 	add.w	r6, r4, r0, lsl #4
90027ff6:	0105      	lsls	r5, r0, #4
90027ff8:	60f1      	str	r1, [r6, #12]
90027ffa:	e7e8      	b.n	90027fce <EwBspTouchGetEvents+0xe2>
90027ffc:	4621      	mov	r1, r4
90027ffe:	e7c7      	b.n	90027f90 <EwBspTouchGetEvents+0xa4>
90028000:	4d3f      	ldr	r5, [pc, #252]	; (90028100 <EwBspTouchGetEvents+0x214>)
    for ( finger = -1, f = 0; f < NO_OF_FINGERS; f++ )
90028002:	f04f 39ff 	mov.w	r9, #4294967295
90028006:	e9cd a102 	strd	sl, r1, [sp, #8]
9002800a:	e008      	b.n	9002801e <EwBspTouchGetEvents+0x132>
      if (( touch->State != EW_BSP_TOUCH_IDLE ) && ( touch->TouchId == touchPadState.TouchId[ t ]))
9002800c:	6e07      	ldr	r7, [r0, #96]	; 0x60
9002800e:	f895 a00c 	ldrb.w	sl, [r5, #12]
90028012:	45ba      	cmp	sl, r7
90028014:	d053      	beq.n	900280be <EwBspTouchGetEvents+0x1d2>
    for ( finger = -1, f = 0; f < NO_OF_FINGERS; f++ )
90028016:	3401      	adds	r4, #1
90028018:	3510      	adds	r5, #16
9002801a:	2c05      	cmp	r4, #5
9002801c:	d022      	beq.n	90028064 <EwBspTouchGetEvents+0x178>
      if (( touch->State != EW_BSP_TOUCH_IDLE ) && ( touch->TouchId == touchPadState.TouchId[ t ]))
9002801e:	7b6f      	ldrb	r7, [r5, #13]
90028020:	2f00      	cmp	r7, #0
90028022:	d1f3      	bne.n	9002800c <EwBspTouchGetEvents+0x120>
      if (( touch->State == EW_BSP_TOUCH_IDLE ) && ( ticks < touch->Ticks + DELTA_TIME )
90028024:	68af      	ldr	r7, [r5, #8]
90028026:	9900      	ldr	r1, [sp, #0]
90028028:	f507 77fa 	add.w	r7, r7, #500	; 0x1f4
9002802c:	428f      	cmp	r7, r1
9002802e:	d911      	bls.n	90028054 <EwBspTouchGetEvents+0x168>
        && ( x > touch->XPos - DELTA_TOUCH ) && ( x < touch->XPos + DELTA_TOUCH )
90028030:	682f      	ldr	r7, [r5, #0]
90028032:	f1a7 0a0f 	sub.w	sl, r7, #15
90028036:	370f      	adds	r7, #15
90028038:	459a      	cmp	sl, r3
9002803a:	dc0b      	bgt.n	90028054 <EwBspTouchGetEvents+0x168>
9002803c:	429f      	cmp	r7, r3
9002803e:	db09      	blt.n	90028054 <EwBspTouchGetEvents+0x168>
        && ( y > touch->YPos - DELTA_TOUCH ) && ( y < touch->YPos + DELTA_TOUCH ))
90028040:	686f      	ldr	r7, [r5, #4]
90028042:	f1a7 0a0f 	sub.w	sl, r7, #15
90028046:	370f      	adds	r7, #15
90028048:	4592      	cmp	sl, r2
9002804a:	dc03      	bgt.n	90028054 <EwBspTouchGetEvents+0x168>
9002804c:	4297      	cmp	r7, r2
9002804e:	db01      	blt.n	90028054 <EwBspTouchGetEvents+0x168>
90028050:	46a1      	mov	r9, r4
90028052:	e7e0      	b.n	90028016 <EwBspTouchGetEvents+0x12a>
      if (( touch->State == EW_BSP_TOUCH_IDLE ) && ( finger == -1 ))
90028054:	f1b9 3fff 	cmp.w	r9, #4294967295
90028058:	bf08      	it	eq
9002805a:	46a1      	moveq	r9, r4
    for ( finger = -1, f = 0; f < NO_OF_FINGERS; f++ )
9002805c:	3401      	adds	r4, #1
9002805e:	3510      	adds	r5, #16
90028060:	2c05      	cmp	r4, #5
90028062:	d1dc      	bne.n	9002801e <EwBspTouchGetEvents+0x132>
    if ( finger >= 0 )
90028064:	f1b9 3fff 	cmp.w	r9, #4294967295
90028068:	e9dd a102 	ldrd	sl, r1, [sp, #8]
9002806c:	d08c      	beq.n	90027f88 <EwBspTouchGetEvents+0x9c>
      if ( touch->State == EW_BSP_TOUCH_IDLE )
9002806e:	4c24      	ldr	r4, [pc, #144]	; (90028100 <EwBspTouchGetEvents+0x214>)
      identified[ finger ] = 1;
90028070:	ad26      	add	r5, sp, #152	; 0x98
      if ( touch->State == EW_BSP_TOUCH_IDLE )
90028072:	eb04 1409 	add.w	r4, r4, r9, lsl #4
      identified[ finger ] = 1;
90028076:	444d      	add	r5, r9
      if ( touch->State == EW_BSP_TOUCH_IDLE )
90028078:	ea4f 1909 	mov.w	r9, r9, lsl #4
9002807c:	7b67      	ldrb	r7, [r4, #13]
9002807e:	9702      	str	r7, [sp, #8]
      identified[ finger ] = 1;
90028080:	f04f 0701 	mov.w	r7, #1
90028084:	f805 7c84 	strb.w	r7, [r5, #-132]
      if ( touch->State == EW_BSP_TOUCH_IDLE )
90028088:	9d02      	ldr	r5, [sp, #8]
9002808a:	b95d      	cbnz	r5, 900280a4 <EwBspTouchGetEvents+0x1b8>
        touch->State = EW_BSP_TOUCH_DOWN;
9002808c:	7367      	strb	r7, [r4, #13]
9002808e:	6e07      	ldr	r7, [r0, #96]	; 0x60
      touch->XPos    = x;
90028090:	4d1b      	ldr	r5, [pc, #108]	; (90028100 <EwBspTouchGetEvents+0x214>)
90028092:	eb05 0409 	add.w	r4, r5, r9
90028096:	f845 3009 	str.w	r3, [r5, r9]
      touch->Ticks   = ticks;
9002809a:	9b00      	ldr	r3, [sp, #0]
      touch->YPos    = y;
9002809c:	6062      	str	r2, [r4, #4]
      touch->TouchId = touchPadState.TouchId[ t ];
9002809e:	7327      	strb	r7, [r4, #12]
      touch->Ticks   = ticks;
900280a0:	60a3      	str	r3, [r4, #8]
900280a2:	e771      	b.n	90027f88 <EwBspTouchGetEvents+0x9c>
900280a4:	6e07      	ldr	r7, [r0, #96]	; 0x60
        if (( touch->XPos != x ) || ( touch->YPos != y ))
900280a6:	4d16      	ldr	r5, [pc, #88]	; (90028100 <EwBspTouchGetEvents+0x214>)
900280a8:	f855 4009 	ldr.w	r4, [r5, r9]
900280ac:	444d      	add	r5, r9
900280ae:	429c      	cmp	r4, r3
900280b0:	d010      	beq.n	900280d4 <EwBspTouchGetEvents+0x1e8>
          touch->State = EW_BSP_TOUCH_MOVE;
900280b2:	4c13      	ldr	r4, [pc, #76]	; (90028100 <EwBspTouchGetEvents+0x214>)
900280b4:	f04f 0502 	mov.w	r5, #2
900280b8:	444c      	add	r4, r9
900280ba:	7365      	strb	r5, [r4, #13]
900280bc:	e7e8      	b.n	90028090 <EwBspTouchGetEvents+0x1a4>
      identified[ finger ] = 1;
900280be:	ad26      	add	r5, sp, #152	; 0x98
900280c0:	ea4f 1904 	mov.w	r9, r4, lsl #4
900280c4:	4425      	add	r5, r4
900280c6:	f04f 0401 	mov.w	r4, #1
900280ca:	e9dd a102 	ldrd	sl, r1, [sp, #8]
900280ce:	f805 4c84 	strb.w	r4, [r5, #-132]
      if ( touch->State == EW_BSP_TOUCH_IDLE )
900280d2:	e7e8      	b.n	900280a6 <EwBspTouchGetEvents+0x1ba>
        if (( touch->XPos != x ) || ( touch->YPos != y ))
900280d4:	686c      	ldr	r4, [r5, #4]
900280d6:	4294      	cmp	r4, r2
900280d8:	d1eb      	bne.n	900280b2 <EwBspTouchGetEvents+0x1c6>
          touch->State = EW_BSP_TOUCH_HOLD;
900280da:	f04f 0404 	mov.w	r4, #4
900280de:	736c      	strb	r4, [r5, #13]
900280e0:	e7d6      	b.n	90028090 <EwBspTouchGetEvents+0x1a4>
900280e2:	bf00      	nop
900280e4:	20000440 	.word	0x20000440
900280e8:	20000470 	.word	0x20000470
900280ec:	20000468 	.word	0x20000468
900280f0:	20000474 	.word	0x20000474
900280f4:	2000046c 	.word	0x2000046c
900280f8:	2000043c 	.word	0x2000043c
900280fc:	20000438 	.word	0x20000438
90028100:	20000478 	.word	0x20000478
90028104:	200004c8 	.word	0x200004c8

90028108 <NMI_Handler>:
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
}
90028108:	4770      	bx	lr
9002810a:	bf00      	nop

9002810c <HardFault_Handler>:
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
  EwPrint( "System halted! [HardFault_Handler]\n" );
9002810c:	4802      	ldr	r0, [pc, #8]	; (90028118 <HardFault_Handler+0xc>)
{
9002810e:	b508      	push	{r3, lr}
  EwPrint( "System halted! [HardFault_Handler]\n" );
90028110:	f7f4 fd6a 	bl	9001cbe8 <EwPrint>

  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
90028114:	e7fe      	b.n	90028114 <HardFault_Handler+0x8>
90028116:	bf00      	nop
90028118:	90034838 	.word	0x90034838

9002811c <MemManage_Handler>:
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
  EwPrint( "System halted! [MemManage_Handler]\n" );
9002811c:	4802      	ldr	r0, [pc, #8]	; (90028128 <MemManage_Handler+0xc>)
{
9002811e:	b508      	push	{r3, lr}
  EwPrint( "System halted! [MemManage_Handler]\n" );
90028120:	f7f4 fd62 	bl	9001cbe8 <EwPrint>

  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
90028124:	e7fe      	b.n	90028124 <MemManage_Handler+0x8>
90028126:	bf00      	nop
90028128:	9003485c 	.word	0x9003485c

9002812c <BusFault_Handler>:
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
  EwPrint( "System halted! [BusFault_Handler]\n" );
9002812c:	4802      	ldr	r0, [pc, #8]	; (90028138 <BusFault_Handler+0xc>)
{
9002812e:	b508      	push	{r3, lr}
  EwPrint( "System halted! [BusFault_Handler]\n" );
90028130:	f7f4 fd5a 	bl	9001cbe8 <EwPrint>

  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
90028134:	e7fe      	b.n	90028134 <BusFault_Handler+0x8>
90028136:	bf00      	nop
90028138:	90034880 	.word	0x90034880

9002813c <UsageFault_Handler>:
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
  EwPrint( "System halted! [UsageFault_Handler]\n" );
9002813c:	4802      	ldr	r0, [pc, #8]	; (90028148 <UsageFault_Handler+0xc>)
{
9002813e:	b508      	push	{r3, lr}
  EwPrint( "System halted! [UsageFault_Handler]\n" );
90028140:	f7f4 fd52 	bl	9001cbe8 <EwPrint>

  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
90028144:	e7fe      	b.n	90028144 <UsageFault_Handler+0x8>
90028146:	bf00      	nop
90028148:	900348a4 	.word	0x900348a4

9002814c <DebugMon_Handler>:
9002814c:	4770      	bx	lr
9002814e:	bf00      	nop

90028150 <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
90028150:	b508      	push	{r3, lr}
  HAL_IncTick();
90028152:	f000 fb0f 	bl	90028774 <HAL_IncTick>
  EwBspClockTickIncrement();
90028156:	f7fe ff4f 	bl	90026ff8 <EwBspClockTickIncrement>

  #if EW_USE_FREE_RTOS == 1
    osSystickHandler();
  #endif
}
9002815a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    osSystickHandler();
9002815e:	f004 ba5b 	b.w	9002c618 <osSystickHandler>
90028162:	bf00      	nop

90028164 <EXTI15_10_IRQHandler>:
  * @param  None
  * @retval None
  */
void EXTI15_10_IRQHandler( void )
{
  HAL_GPIO_EXTI_IRQHandler( BUTTON_USER_PIN );
90028164:	f44f 5000 	mov.w	r0, #8192	; 0x2000
{
90028168:	b508      	push	{r3, lr}
  HAL_GPIO_EXTI_IRQHandler( BUTTON_USER_PIN );
9002816a:	f001 f8b9 	bl	900292e0 <HAL_GPIO_EXTI_IRQHandler>
  EwBspInOutEventHandler( BUTTON_USER_PIN );
9002816e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
}
90028172:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  EwBspInOutEventHandler( BUTTON_USER_PIN );
90028176:	f7ff bd25 	b.w	90027bc4 <EwBspInOutEventHandler>
9002817a:	bf00      	nop

9002817c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
9002817c:	b430      	push	{r4, r5}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */
    
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9002817e:	4c19      	ldr	r4, [pc, #100]	; (900281e4 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
  
  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90028180:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90028182:	4b19      	ldr	r3, [pc, #100]	; (900281e8 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90028184:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90028188:	4818      	ldr	r0, [pc, #96]	; (900281ec <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9002818a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;

  /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
9002818e:	4d18      	ldr	r5, [pc, #96]	; (900281f0 <SystemInit+0x74>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90028190:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90028194:	681c      	ldr	r4, [r3, #0]
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90028196:	4917      	ldr	r1, [pc, #92]	; (900281f4 <SystemInit+0x78>)
  RCC->CR |= RCC_CR_HSION;
90028198:	f044 0401 	orr.w	r4, r4, #1
9002819c:	601c      	str	r4, [r3, #0]
  RCC->CFGR = 0x00000000;
9002819e:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900281a0:	681c      	ldr	r4, [r3, #0]
900281a2:	4020      	ands	r0, r4
900281a4:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900281a6:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900281a8:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900281aa:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900281ac:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
900281ae:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
900281b0:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
900281b2:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
900281b4:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
900281b6:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
900281b8:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
900281ba:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
900281bc:	6818      	ldr	r0, [r3, #0]
900281be:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
900281c2:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
900281c4:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900281c6:	682b      	ldr	r3, [r5, #0]
900281c8:	4019      	ands	r1, r3
900281ca:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
900281ce:	d202      	bcs.n	900281d6 <SystemInit+0x5a>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x00000001U;
900281d0:	4b09      	ldr	r3, [pc, #36]	; (900281f8 <SystemInit+0x7c>)
900281d2:	2201      	movs	r2, #1
900281d4:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET;       /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = APPLICATION_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation to APPLICATION_ADDRESS in preprocessor defines */
900281d6:	4b03      	ldr	r3, [pc, #12]	; (900281e4 <SystemInit+0x68>)
900281d8:	f04f 4210 	mov.w	r2, #2415919104	; 0x90000000
#endif  


}
900281dc:	bc30      	pop	{r4, r5}
  SCB->VTOR = APPLICATION_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation to APPLICATION_ADDRESS in preprocessor defines */
900281de:	609a      	str	r2, [r3, #8]
}
900281e0:	4770      	bx	lr
900281e2:	bf00      	nop
900281e4:	e000ed00 	.word	0xe000ed00
900281e8:	58024400 	.word	0x58024400
900281ec:	eaf6ed7f 	.word	0xeaf6ed7f
900281f0:	5c001000 	.word	0x5c001000
900281f4:	ffff0000 	.word	0xffff0000
900281f8:	51008108 	.word	0x51008108

900281fc <BSP_LED_Init>:
  *            @arg  LED1
  *            @arg  LED2
  * @retval BSP status
  */
int32_t  BSP_LED_Init(Led_TypeDef Led)
{
900281fc:	b570      	push	{r4, r5, r6, lr}
  int32_t ret = BSP_ERROR_NONE;
  GPIO_InitTypeDef  gpio_init_structure;

  /* Enable the GPIO_LED clock */
  if (Led == LED1)
900281fe:	4603      	mov	r3, r0
{
90028200:	b08a      	sub	sp, #40	; 0x28
  if (Led == LED1)
90028202:	bb28      	cbnz	r0, 90028250 <BSP_LED_Init+0x54>
  {
    LED1_GPIO_CLK_ENABLE() ;
90028204:	4a1c      	ldr	r2, [pc, #112]	; (90028278 <BSP_LED_Init+0x7c>)
  int32_t ret = BSP_ERROR_NONE;
90028206:	4606      	mov	r6, r0
    LED1_GPIO_CLK_ENABLE() ;
90028208:	f8d2 10e0 	ldr.w	r1, [r2, #224]	; 0xe0
9002820c:	f441 7100 	orr.w	r1, r1, #512	; 0x200
90028210:	f8c2 10e0 	str.w	r1, [r2, #224]	; 0xe0
90028214:	f8d2 20e0 	ldr.w	r2, [r2, #224]	; 0xe0
90028218:	f402 7200 	and.w	r2, r2, #512	; 0x200
9002821c:	9203      	str	r2, [sp, #12]
9002821e:	9a03      	ldr	r2, [sp, #12]
  {
    ret = BSP_ERROR_WRONG_PARAM;
  }

  /* configure the GPIO_LED pin */
  gpio_init_structure.Pin = LED_PIN [Led];
90028220:	4916      	ldr	r1, [pc, #88]	; (9002827c <BSP_LED_Init+0x80>)
  gpio_init_structure.Mode = GPIO_MODE_OUTPUT_PP;
90028222:	2401      	movs	r4, #1
  gpio_init_structure.Pull = GPIO_PULLUP;
  gpio_init_structure.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init (LED_PORT [Led], &gpio_init_structure);
90028224:	4816      	ldr	r0, [pc, #88]	; (90028280 <BSP_LED_Init+0x84>)
  gpio_init_structure.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90028226:	2203      	movs	r2, #3
  gpio_init_structure.Pin = LED_PIN [Led];
90028228:	f851 5023 	ldr.w	r5, [r1, r3, lsl #2]
  HAL_GPIO_Init (LED_PORT [Led], &gpio_init_structure);
9002822c:	a905      	add	r1, sp, #20
9002822e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
  gpio_init_structure.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90028232:	e9cd 4207 	strd	r4, r2, [sp, #28]
  HAL_GPIO_Init (LED_PORT [Led], &gpio_init_structure);
90028236:	9001      	str	r0, [sp, #4]
  gpio_init_structure.Pin = LED_PIN [Led];
90028238:	e9cd 5405 	strd	r5, r4, [sp, #20]
  HAL_GPIO_Init (LED_PORT [Led], &gpio_init_structure);
9002823c:	f000 fe58 	bl	90028ef0 <HAL_GPIO_Init>

  /* By default, turn off LED */
  HAL_GPIO_WritePin (LED_PORT [Led], (uint16_t)LED_PIN [Led], GPIO_PIN_SET);
90028240:	9801      	ldr	r0, [sp, #4]
90028242:	4622      	mov	r2, r4
90028244:	b2a9      	uxth	r1, r5
90028246:	f001 f845 	bl	900292d4 <HAL_GPIO_WritePin>
  return ret;
  }
9002824a:	4630      	mov	r0, r6
9002824c:	b00a      	add	sp, #40	; 0x28
9002824e:	bd70      	pop	{r4, r5, r6, pc}
  else if (Led == LED2)
90028250:	2801      	cmp	r0, #1
90028252:	d10e      	bne.n	90028272 <BSP_LED_Init+0x76>
    LED2_GPIO_CLK_ENABLE() ;
90028254:	4a08      	ldr	r2, [pc, #32]	; (90028278 <BSP_LED_Init+0x7c>)
  int32_t ret = BSP_ERROR_NONE;
90028256:	2600      	movs	r6, #0
    LED2_GPIO_CLK_ENABLE() ;
90028258:	f8d2 10e0 	ldr.w	r1, [r2, #224]	; 0xe0
9002825c:	f441 7180 	orr.w	r1, r1, #256	; 0x100
90028260:	f8c2 10e0 	str.w	r1, [r2, #224]	; 0xe0
90028264:	f8d2 20e0 	ldr.w	r2, [r2, #224]	; 0xe0
90028268:	f402 7280 	and.w	r2, r2, #256	; 0x100
9002826c:	9204      	str	r2, [sp, #16]
9002826e:	9a04      	ldr	r2, [sp, #16]
90028270:	e7d6      	b.n	90028220 <BSP_LED_Init+0x24>
    ret = BSP_ERROR_WRONG_PARAM;
90028272:	f06f 0601 	mvn.w	r6, #1
90028276:	e7d3      	b.n	90028220 <BSP_LED_Init+0x24>
90028278:	58024400 	.word	0x58024400
9002827c:	900348dc 	.word	0x900348dc
90028280:	900348e4 	.word	0x900348e4

90028284 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90028284:	4a10      	ldr	r2, [pc, #64]	; (900282c8 <BSP_I2C4_DeInit+0x44>)
{
90028286:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90028288:	6813      	ldr	r3, [r2, #0]
9002828a:	3b01      	subs	r3, #1
9002828c:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9002828e:	b10b      	cbz	r3, 90028294 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90028290:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90028292:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90028294:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90028298:	480c      	ldr	r0, [pc, #48]	; (900282cc <BSP_I2C4_DeInit+0x48>)
9002829a:	f000 ff47 	bl	9002912c <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9002829e:	480b      	ldr	r0, [pc, #44]	; (900282cc <BSP_I2C4_DeInit+0x48>)
900282a0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
900282a4:	f000 ff42 	bl	9002912c <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
900282a8:	4a09      	ldr	r2, [pc, #36]	; (900282d0 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900282aa:	480a      	ldr	r0, [pc, #40]	; (900282d4 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
900282ac:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
900282b0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900282b4:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
900282b8:	f001 f9c8 	bl	9002964c <HAL_I2C_DeInit>
900282bc:	2800      	cmp	r0, #0
900282be:	d0e7      	beq.n	90028290 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
900282c0:	f06f 0007 	mvn.w	r0, #7
}
900282c4:	bd08      	pop	{r3, pc}
900282c6:	bf00      	nop
900282c8:	20000518 	.word	0x20000518
900282cc:	58020c00 	.word	0x58020c00
900282d0:	58024400 	.word	0x58024400
900282d4:	200039f0 	.word	0x200039f0

900282d8 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900282d8:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900282da:	2201      	movs	r2, #1
{
900282dc:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
900282de:	6041      	str	r1, [r0, #4]
{
900282e0:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900282e2:	6203      	str	r3, [r0, #32]
  hI2c->Init.OwnAddress1      = 0;
900282e4:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
900282e8:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
900282ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900282f0:	f001 f956 	bl	900295a0 <HAL_I2C_Init>
900282f4:	b108      	cbz	r0, 900282fa <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900282f6:	2001      	movs	r0, #1
}
900282f8:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900282fa:	4601      	mov	r1, r0
900282fc:	4620      	mov	r0, r4
900282fe:	f001 fb8b 	bl	90029a18 <HAL_I2CEx_ConfigAnalogFilter>
90028302:	2800      	cmp	r0, #0
90028304:	d1f7      	bne.n	900282f6 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90028306:	4601      	mov	r1, r0
90028308:	4620      	mov	r0, r4
9002830a:	f001 fbb1 	bl	90029a70 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
9002830e:	3800      	subs	r0, #0
90028310:	bf18      	it	ne
90028312:	2001      	movne	r0, #1
}
90028314:	bd10      	pop	{r4, pc}
90028316:	bf00      	nop

90028318 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90028318:	4bc2      	ldr	r3, [pc, #776]	; (90028624 <BSP_I2C4_Init+0x30c>)
  hbus_i2c4.Instance = BUS_I2C4;
9002831a:	48c3      	ldr	r0, [pc, #780]	; (90028628 <BSP_I2C4_Init+0x310>)
9002831c:	4ac3      	ldr	r2, [pc, #780]	; (9002862c <BSP_I2C4_Init+0x314>)
{
9002831e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
90028322:	f8d3 b000 	ldr.w	fp, [r3]
{
90028326:	b095      	sub	sp, #84	; 0x54
  hbus_i2c4.Instance = BUS_I2C4;
90028328:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
9002832a:	f1bb 0f00 	cmp.w	fp, #0
9002832e:	d003      	beq.n	90028338 <BSP_I2C4_Init+0x20>
  int32_t ret = BSP_ERROR_NONE;
90028330:	2000      	movs	r0, #0
}
90028332:	b015      	add	sp, #84	; 0x54
90028334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90028338:	2201      	movs	r2, #1
9002833a:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
9002833c:	f001 fb66 	bl	90029a0c <HAL_I2C_GetState>
90028340:	2800      	cmp	r0, #0
90028342:	d1f5      	bne.n	90028330 <BSP_I2C4_Init+0x18>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90028344:	4cba      	ldr	r4, [pc, #744]	; (90028630 <BSP_I2C4_Init+0x318>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90028346:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
9002834a:	2712      	movs	r7, #18
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
9002834c:	2602      	movs	r6, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9002834e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90028352:	2504      	movs	r5, #4
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90028354:	a90f      	add	r1, sp, #60	; 0x3c
90028356:	48b7      	ldr	r0, [pc, #732]	; (90028634 <BSP_I2C4_Init+0x31c>)
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90028358:	f043 0308 	orr.w	r3, r3, #8
9002835c:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90028360:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90028364:	f003 0308 	and.w	r3, r3, #8
90028368:	930c      	str	r3, [sp, #48]	; 0x30
9002836a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9002836c:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90028370:	f043 0308 	orr.w	r3, r3, #8
90028374:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90028378:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pull      = GPIO_NOPULL;
9002837c:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90028380:	f003 0308 	and.w	r3, r3, #8
90028384:	930d      	str	r3, [sp, #52]	; 0x34
90028386:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
90028388:	e9cd 270f 	strd	r2, r7, [sp, #60]	; 0x3c
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
9002838c:	e9cd 6512 	strd	r6, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90028390:	f000 fdae 	bl	90028ef0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90028394:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90028398:	a90f      	add	r1, sp, #60	; 0x3c
9002839a:	48a6      	ldr	r0, [pc, #664]	; (90028634 <BSP_I2C4_Init+0x31c>)
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9002839c:	930f      	str	r3, [sp, #60]	; 0x3c
  gpio_init_structure.Mode      = GPIO_MODE_AF_OD;
9002839e:	9710      	str	r7, [sp, #64]	; 0x40
  gpio_init_structure.Pull      = GPIO_NOPULL;
900283a0:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
900283a4:	e9cd 6512 	strd	r6, r5, [sp, #72]	; 0x48
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
900283a8:	f000 fda2 	bl	90028ef0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
900283ac:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900283b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900283b4:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
900283b8:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
900283bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
900283c0:	930e      	str	r3, [sp, #56]	; 0x38
900283c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  BUS_I2C4_FORCE_RESET();
900283c4:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900283c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
900283cc:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
900283d0:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
900283d4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
900283d8:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900283dc:	f002 fa56 	bl	9002a88c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900283e0:	2800      	cmp	r0, #0
900283e2:	f000 80f7 	beq.w	900285d4 <BSP_I2C4_Init+0x2bc>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900283e6:	4b94      	ldr	r3, [pc, #592]	; (90028638 <BSP_I2C4_Init+0x320>)
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900283e8:	f640 19f6 	movw	r9, #2550	; 0x9f6
900283ec:	4a93      	ldr	r2, [pc, #588]	; (9002863c <BSP_I2C4_Init+0x324>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900283ee:	f06f 071d 	mvn.w	r7, #29
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900283f2:	eb03 0350 	add.w	r3, r3, r0, lsr #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900283f6:	465c      	mov	r4, fp
900283f8:	6816      	ldr	r6, [r2, #0]
  uint32_t prev_presc = I2C_PRESC_MAX;
900283fa:	2510      	movs	r5, #16
900283fc:	f8cd b00c 	str.w	fp, [sp, #12]
90028400:	f8cd b000 	str.w	fp, [sp]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90028404:	f8df 823c 	ldr.w	r8, [pc, #572]	; 90028644 <BSP_I2C4_Init+0x32c>
90028408:	9605      	str	r6, [sp, #20]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
9002840a:	fbb3 f2f0 	udiv	r2, r3, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9002840e:	eb02 0342 	add.w	r3, r2, r2, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90028412:	4610      	mov	r0, r2
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90028414:	eba9 0982 	sub.w	r9, r9, r2, lsl #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90028418:	9201      	str	r2, [sp, #4]
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
9002841a:	1aff      	subs	r7, r7, r3
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
9002841c:	0053      	lsls	r3, r2, #1
9002841e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
90028422:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
90028426:	9304      	str	r3, [sp, #16]
90028428:	46cb      	mov	fp, r9
{
9002842a:	4686      	mov	lr, r0
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
9002842c:	f04f 0c00 	mov.w	ip, #0
90028430:	e004      	b.n	9002843c <BSP_I2C4_Init+0x124>
90028432:	f1bc 0f10 	cmp.w	ip, #16
90028436:	4486      	add	lr, r0
90028438:	f000 80db 	beq.w	900285f2 <BSP_I2C4_Init+0x2da>
      if (tscldel >= (uint32_t)tscldel_min)
9002843c:	f240 3379 	movw	r3, #889	; 0x379
90028440:	46e2      	mov	sl, ip
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90028442:	f10c 0c01 	add.w	ip, ip, #1
      if (tscldel >= (uint32_t)tscldel_min)
90028446:	459e      	cmp	lr, r3
90028448:	d9f3      	bls.n	90028432 <BSP_I2C4_Init+0x11a>
9002844a:	2200      	movs	r2, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9002844c:	f8cd c008 	str.w	ip, [sp, #8]
90028450:	f8dd c000 	ldr.w	ip, [sp]
90028454:	4611      	mov	r1, r2
90028456:	e003      	b.n	90028460 <BSP_I2C4_Init+0x148>
90028458:	3101      	adds	r1, #1
9002845a:	2910      	cmp	r1, #16
9002845c:	f000 80c4 	beq.w	900285e8 <BSP_I2C4_Init+0x2d0>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90028460:	42ba      	cmp	r2, r7
90028462:	bf34      	ite	cc
90028464:	2300      	movcc	r3, #0
90028466:	2301      	movcs	r3, #1
90028468:	455a      	cmp	r2, fp
9002846a:	4402      	add	r2, r0
9002846c:	bf88      	it	hi
9002846e:	2300      	movhi	r3, #0
            if(presc != prev_presc)
90028470:	42a5      	cmp	r5, r4
90028472:	bf0c      	ite	eq
90028474:	2300      	moveq	r3, #0
90028476:	f003 0301 	andne.w	r3, r3, #1
9002847a:	2b00      	cmp	r3, #0
9002847c:	d0ec      	beq.n	90028458 <BSP_I2C4_Init+0x140>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9002847e:	eb06 0586 	add.w	r5, r6, r6, lsl #2
              I2c_valid_timing_nbr ++;
90028482:	3601      	adds	r6, #1
90028484:	469c      	mov	ip, r3
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90028486:	2e7f      	cmp	r6, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90028488:	eb08 0385 	add.w	r3, r8, r5, lsl #2
9002848c:	f848 4025 	str.w	r4, [r8, r5, lsl #2]
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90028490:	4625      	mov	r5, r4
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90028492:	e9c3 a101 	strd	sl, r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90028496:	d9df      	bls.n	90028458 <BSP_I2C4_Init+0x140>
90028498:	4b68      	ldr	r3, [pc, #416]	; (9002863c <BSP_I2C4_Init+0x324>)
9002849a:	f8dd b00c 	ldr.w	fp, [sp, #12]
9002849e:	9606      	str	r6, [sp, #24]
900284a0:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
900284a4:	601e      	str	r6, [r3, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900284a6:	9a04      	ldr	r2, [sp, #16]
900284a8:	f241 200c 	movw	r0, #4620	; 0x120c
900284ac:	f640 739f 	movw	r3, #3999	; 0xf9f
900284b0:	4c63      	ldr	r4, [pc, #396]	; (90028640 <BSP_I2C4_Init+0x328>)
900284b2:	4611      	mov	r1, r2
900284b4:	f8df e18c 	ldr.w	lr, [pc, #396]	; 90028644 <BSP_I2C4_Init+0x32c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900284b8:	f242 7810 	movw	r8, #10000	; 0x2710
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900284bc:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
900284c0:	3132      	adds	r1, #50	; 0x32
900284c2:	9107      	str	r1, [sp, #28]
900284c4:	1a81      	subs	r1, r0, r2
900284c6:	9108      	str	r1, [sp, #32]
900284c8:	9901      	ldr	r1, [sp, #4]
900284ca:	428b      	cmp	r3, r1
900284cc:	bf38      	it	cc
900284ce:	460b      	movcc	r3, r1
900284d0:	9303      	str	r3, [sp, #12]
900284d2:	1913      	adds	r3, r2, r4
900284d4:	9309      	str	r3, [sp, #36]	; 0x24
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900284d6:	2300      	movs	r3, #0
900284d8:	9300      	str	r3, [sp, #0]
900284da:	f04f 33ff 	mov.w	r3, #4294967295
900284de:	9302      	str	r3, [sp, #8]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900284e0:	9b01      	ldr	r3, [sp, #4]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900284e2:	2400      	movs	r4, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900284e4:	f8de 0000 	ldr.w	r0, [lr]
900284e8:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900284ec:	9b08      	ldr	r3, [sp, #32]
900284ee:	1a1f      	subs	r7, r3, r0
900284f0:	9b07      	ldr	r3, [sp, #28]
900284f2:	181a      	adds	r2, r3, r0
900284f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900284f6:	007f      	lsls	r7, r7, #1
900284f8:	4403      	add	r3, r0
900284fa:	9305      	str	r3, [sp, #20]
900284fc:	e005      	b.n	9002850a <BSP_I2C4_Init+0x1f2>
900284fe:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
90028502:	4402      	add	r2, r0
90028504:	eba7 0700 	sub.w	r7, r7, r0
90028508:	d03e      	beq.n	90028588 <BSP_I2C4_Init+0x270>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9002850a:	f241 235c 	movw	r3, #4700	; 0x125c
9002850e:	46a1      	mov	r9, r4
90028510:	f1a2 0532 	sub.w	r5, r2, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90028514:	3401      	adds	r4, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90028516:	429a      	cmp	r2, r3
90028518:	d9f1      	bls.n	900284fe <BSP_I2C4_Init+0x1e6>
9002851a:	9b01      	ldr	r3, [sp, #4]
9002851c:	ebb3 0f95 	cmp.w	r3, r5, lsr #2
90028520:	d2ed      	bcs.n	900284fe <BSP_I2C4_Init+0x1e6>
90028522:	f242 4c4a 	movw	ip, #9290	; 0x244a
90028526:	9b05      	ldr	r3, [sp, #20]
90028528:	463e      	mov	r6, r7
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9002852a:	2100      	movs	r1, #0
9002852c:	4413      	add	r3, r2
9002852e:	ebac 0c05 	sub.w	ip, ip, r5
90028532:	4693      	mov	fp, r2
90028534:	9404      	str	r4, [sp, #16]
90028536:	e005      	b.n	90028544 <BSP_I2C4_Init+0x22c>
90028538:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9002853c:	eba6 0600 	sub.w	r6, r6, r0
90028540:	4403      	add	r3, r0
90028542:	d01e      	beq.n	90028582 <BSP_I2C4_Init+0x26a>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90028544:	eb0c 0503 	add.w	r5, ip, r3
90028548:	9c03      	ldr	r4, [sp, #12]
9002854a:	460a      	mov	r2, r1
9002854c:	f203 6a83 	addw	sl, r3, #1667	; 0x683
90028550:	42ac      	cmp	r4, r5
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90028552:	f101 0101 	add.w	r1, r1, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90028556:	d2ef      	bcs.n	90028538 <BSP_I2C4_Init+0x220>
90028558:	f241 0447 	movw	r4, #4167	; 0x1047
9002855c:	45a2      	cmp	sl, r4
9002855e:	d8eb      	bhi.n	90028538 <BSP_I2C4_Init+0x220>
            if (error < 0)
90028560:	ea33 0523 	bics.w	r5, r3, r3, asr #32
90028564:	bf28      	it	cs
90028566:	4635      	movcs	r5, r6
            if ((uint32_t)error < prev_error)
90028568:	45a8      	cmp	r8, r5
9002856a:	d9e5      	bls.n	90028538 <BSP_I2C4_Init+0x220>
              I2c_valid_timing[count].sclh = sclh;
9002856c:	9c00      	ldr	r4, [sp, #0]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9002856e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
              I2c_valid_timing[count].sclh = sclh;
90028572:	46a8      	mov	r8, r5
90028574:	eba6 0600 	sub.w	r6, r6, r0
90028578:	4403      	add	r3, r0
9002857a:	9402      	str	r4, [sp, #8]
9002857c:	e9ce 2903 	strd	r2, r9, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90028580:	d1e0      	bne.n	90028544 <BSP_I2C4_Init+0x22c>
90028582:	9c04      	ldr	r4, [sp, #16]
90028584:	465a      	mov	r2, fp
90028586:	e7ba      	b.n	900284fe <BSP_I2C4_Init+0x1e6>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90028588:	9b00      	ldr	r3, [sp, #0]
9002858a:	f10e 0e14 	add.w	lr, lr, #20
9002858e:	9a06      	ldr	r2, [sp, #24]
90028590:	3301      	adds	r3, #1
90028592:	4293      	cmp	r3, r2
90028594:	9300      	str	r3, [sp, #0]
90028596:	d1a3      	bne.n	900284e0 <BSP_I2C4_Init+0x1c8>
        if (idx < I2C_VALID_TIMING_NBR)
90028598:	9b02      	ldr	r3, [sp, #8]
9002859a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
9002859e:	2b7f      	cmp	r3, #127	; 0x7f
900285a0:	d818      	bhi.n	900285d4 <BSP_I2C4_Init+0x2bc>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900285a2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900285a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900285a8:	eb02 0483 	add.w	r4, r2, r3, lsl #2
900285ac:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900285b0:	6862      	ldr	r2, [r4, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900285b2:	7c23      	ldrb	r3, [r4, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900285b4:	0510      	lsls	r0, r2, #20
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900285b6:	68a1      	ldr	r1, [r4, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900285b8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900285bc:	68e2      	ldr	r2, [r4, #12]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900285be:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900285c2:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900285c4:	0212      	lsls	r2, r2, #8
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900285c6:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900285c8:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900285cc:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900285ce:	430b      	orrs	r3, r1
900285d0:	ea43 0b02 	orr.w	fp, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900285d4:	4659      	mov	r1, fp
900285d6:	4814      	ldr	r0, [pc, #80]	; (90028628 <BSP_I2C4_Init+0x310>)
900285d8:	f7ff fe7e 	bl	900282d8 <MX_I2C4_Init>
900285dc:	2800      	cmp	r0, #0
900285de:	f43f aea7 	beq.w	90028330 <BSP_I2C4_Init+0x18>
          ret = BSP_ERROR_BUS_FAILURE;
900285e2:	f06f 0007 	mvn.w	r0, #7
  return ret;
900285e6:	e6a4      	b.n	90028332 <BSP_I2C4_Init+0x1a>
900285e8:	f8cd c000 	str.w	ip, [sp]
900285ec:	f8dd c008 	ldr.w	ip, [sp, #8]
900285f0:	e71f      	b.n	90028432 <BSP_I2C4_Init+0x11a>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900285f2:	3401      	adds	r4, #1
900285f4:	9b01      	ldr	r3, [sp, #4]
900285f6:	2c10      	cmp	r4, #16
900285f8:	4418      	add	r0, r3
900285fa:	f47f af16 	bne.w	9002842a <BSP_I2C4_Init+0x112>
900285fe:	f8dd a000 	ldr.w	sl, [sp]
90028602:	f8dd b00c 	ldr.w	fp, [sp, #12]
90028606:	9606      	str	r6, [sp, #24]
90028608:	f1ba 0f00 	cmp.w	sl, #0
9002860c:	d007      	beq.n	9002861e <BSP_I2C4_Init+0x306>
9002860e:	4b0b      	ldr	r3, [pc, #44]	; (9002863c <BSP_I2C4_Init+0x324>)
90028610:	601e      	str	r6, [r3, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90028612:	9b06      	ldr	r3, [sp, #24]
90028614:	2b00      	cmp	r3, #0
90028616:	d0dd      	beq.n	900285d4 <BSP_I2C4_Init+0x2bc>
90028618:	4b0a      	ldr	r3, [pc, #40]	; (90028644 <BSP_I2C4_Init+0x32c>)
9002861a:	930a      	str	r3, [sp, #40]	; 0x28
9002861c:	e743      	b.n	900284a6 <BSP_I2C4_Init+0x18e>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9002861e:	9b05      	ldr	r3, [sp, #20]
90028620:	9306      	str	r3, [sp, #24]
90028622:	e7f6      	b.n	90028612 <BSP_I2C4_Init+0x2fa>
90028624:	20000518 	.word	0x20000518
90028628:	200039f0 	.word	0x200039f0
9002862c:	58001c00 	.word	0x58001c00
90028630:	58024400 	.word	0x58024400
90028634:	58020c00 	.word	0x58020c00
90028638:	3b9aca00 	.word	0x3b9aca00
9002863c:	20000f1c 	.word	0x20000f1c
90028640:	ffffdbb6 	.word	0xffffdbb6
90028644:	2000051c 	.word	0x2000051c

90028648 <BSP_I2C4_WriteReg>:
{
90028648:	b530      	push	{r4, r5, lr}
9002864a:	460d      	mov	r5, r1
9002864c:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9002864e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
90028652:	4601      	mov	r1, r0
90028654:	9200      	str	r2, [sp, #0]
90028656:	462a      	mov	r2, r5
90028658:	9301      	str	r3, [sp, #4]
9002865a:	2301      	movs	r3, #1
9002865c:	4808      	ldr	r0, [pc, #32]	; (90028680 <BSP_I2C4_WriteReg+0x38>)
9002865e:	9402      	str	r4, [sp, #8]
90028660:	f001 f80e 	bl	90029680 <HAL_I2C_Mem_Write>
90028664:	b908      	cbnz	r0, 9002866a <BSP_I2C4_WriteReg+0x22>
}
90028666:	b005      	add	sp, #20
90028668:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9002866a:	4805      	ldr	r0, [pc, #20]	; (90028680 <BSP_I2C4_WriteReg+0x38>)
9002866c:	f001 f9d2 	bl	90029a14 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90028670:	2804      	cmp	r0, #4
90028672:	bf0c      	ite	eq
90028674:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90028678:	f06f 0003 	mvnne.w	r0, #3
9002867c:	e7f3      	b.n	90028666 <BSP_I2C4_WriteReg+0x1e>
9002867e:	bf00      	nop
90028680:	200039f0 	.word	0x200039f0

90028684 <BSP_I2C4_ReadReg>:
{
90028684:	b530      	push	{r4, r5, lr}
90028686:	460d      	mov	r5, r1
90028688:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9002868a:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
9002868e:	4601      	mov	r1, r0
90028690:	9200      	str	r2, [sp, #0]
90028692:	462a      	mov	r2, r5
90028694:	9301      	str	r3, [sp, #4]
90028696:	2301      	movs	r3, #1
90028698:	4808      	ldr	r0, [pc, #32]	; (900286bc <BSP_I2C4_ReadReg+0x38>)
9002869a:	9402      	str	r4, [sp, #8]
9002869c:	f001 f8d0 	bl	90029840 <HAL_I2C_Mem_Read>
900286a0:	b908      	cbnz	r0, 900286a6 <BSP_I2C4_ReadReg+0x22>
}
900286a2:	b005      	add	sp, #20
900286a4:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900286a6:	4805      	ldr	r0, [pc, #20]	; (900286bc <BSP_I2C4_ReadReg+0x38>)
900286a8:	f001 f9b4 	bl	90029a14 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
900286ac:	2804      	cmp	r0, #4
900286ae:	bf0c      	ite	eq
900286b0:	f06f 0065 	mvneq.w	r0, #101	; 0x65
900286b4:	f06f 0003 	mvnne.w	r0, #3
900286b8:	e7f3      	b.n	900286a2 <BSP_I2C4_ReadReg+0x1e>
900286ba:	bf00      	nop
900286bc:	200039f0 	.word	0x200039f0

900286c0 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
900286c0:	f000 b864 	b.w	9002878c <HAL_GetTick>

900286c4 <HAL_MspInit>:
__weak void HAL_MspInit(void)
{
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_MspInit could be implemented in the user file
   */
}
900286c4:	4770      	bx	lr
900286c6:	bf00      	nop

900286c8 <HAL_InitTick>:
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
900286c8:	4b0f      	ldr	r3, [pc, #60]	; (90028708 <HAL_InitTick+0x40>)
900286ca:	781b      	ldrb	r3, [r3, #0]
900286cc:	b90b      	cbnz	r3, 900286d2 <HAL_InitTick+0xa>
  {
    return HAL_ERROR;
900286ce:	2001      	movs	r0, #1
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
}
900286d0:	4770      	bx	lr
{
900286d2:	b510      	push	{r4, lr}
900286d4:	4604      	mov	r4, r0
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
900286d6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
900286da:	4a0c      	ldr	r2, [pc, #48]	; (9002870c <HAL_InitTick+0x44>)
900286dc:	fbb0 f3f3 	udiv	r3, r0, r3
900286e0:	6810      	ldr	r0, [r2, #0]
900286e2:	fbb0 f0f3 	udiv	r0, r0, r3
900286e6:	f000 f8cd 	bl	90028884 <HAL_SYSTICK_Config>
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900286ea:	2c0f      	cmp	r4, #15
900286ec:	d800      	bhi.n	900286f0 <HAL_InitTick+0x28>
900286ee:	b108      	cbz	r0, 900286f4 <HAL_InitTick+0x2c>
    return HAL_ERROR;
900286f0:	2001      	movs	r0, #1
}
900286f2:	bd10      	pop	{r4, pc}
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
900286f4:	2200      	movs	r2, #0
900286f6:	4621      	mov	r1, r4
900286f8:	f04f 30ff 	mov.w	r0, #4294967295
900286fc:	f000 f866 	bl	900287cc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
90028700:	4b03      	ldr	r3, [pc, #12]	; (90028710 <HAL_InitTick+0x48>)
90028702:	2000      	movs	r0, #0
90028704:	601c      	str	r4, [r3, #0]
}
90028706:	bd10      	pop	{r4, pc}
90028708:	20000038 	.word	0x20000038
9002870c:	20000030 	.word	0x20000030
90028710:	2000003c 	.word	0x2000003c

90028714 <HAL_Init>:
{
90028714:	b538      	push	{r3, r4, r5, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90028716:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90028718:	4c12      	ldr	r4, [pc, #72]	; (90028764 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
9002871a:	f000 f843 	bl	900287a4 <HAL_NVIC_SetPriorityGrouping>
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002871e:	4d12      	ldr	r5, [pc, #72]	; (90028768 <HAL_Init+0x54>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90028720:	f001 feb2 	bl	9002a488 <HAL_RCC_GetSysClockFreq>
90028724:	4b11      	ldr	r3, [pc, #68]	; (9002876c <HAL_Init+0x58>)
90028726:	4602      	mov	r2, r0
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90028728:	200f      	movs	r0, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002872a:	6999      	ldr	r1, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002872c:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002872e:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90028732:	4003      	ands	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90028734:	5c61      	ldrb	r1, [r4, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90028736:	5ce3      	ldrb	r3, [r4, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90028738:	f001 011f 	and.w	r1, r1, #31
  SystemCoreClock = common_system_clock;
9002873c:	4c0c      	ldr	r4, [pc, #48]	; (90028770 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002873e:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90028742:	40ca      	lsrs	r2, r1
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90028744:	fa22 f303 	lsr.w	r3, r2, r3
  SystemCoreClock = common_system_clock;
90028748:	6022      	str	r2, [r4, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002874a:	602b      	str	r3, [r5, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
9002874c:	f7ff ffbc 	bl	900286c8 <HAL_InitTick>
90028750:	b110      	cbz	r0, 90028758 <HAL_Init+0x44>
    return HAL_ERROR;
90028752:	2401      	movs	r4, #1
}
90028754:	4620      	mov	r0, r4
90028756:	bd38      	pop	{r3, r4, r5, pc}
90028758:	4604      	mov	r4, r0
  HAL_MspInit();
9002875a:	f7ff ffb3 	bl	900286c4 <HAL_MspInit>
}
9002875e:	4620      	mov	r0, r4
90028760:	bd38      	pop	{r3, r4, r5, pc}
90028762:	bf00      	nop
90028764:	900348cc 	.word	0x900348cc
90028768:	20000034 	.word	0x20000034
9002876c:	58024400 	.word	0x58024400
90028770:	20000030 	.word	0x20000030

90028774 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90028774:	4a03      	ldr	r2, [pc, #12]	; (90028784 <HAL_IncTick+0x10>)
90028776:	4b04      	ldr	r3, [pc, #16]	; (90028788 <HAL_IncTick+0x14>)
90028778:	6811      	ldr	r1, [r2, #0]
9002877a:	781b      	ldrb	r3, [r3, #0]
9002877c:	440b      	add	r3, r1
9002877e:	6013      	str	r3, [r2, #0]
}
90028780:	4770      	bx	lr
90028782:	bf00      	nop
90028784:	20003a3c 	.word	0x20003a3c
90028788:	20000038 	.word	0x20000038

9002878c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
9002878c:	4b01      	ldr	r3, [pc, #4]	; (90028794 <HAL_GetTick+0x8>)
9002878e:	6818      	ldr	r0, [r3, #0]
}
90028790:	4770      	bx	lr
90028792:	bf00      	nop
90028794:	20003a3c 	.word	0x20003a3c

90028798 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90028798:	4b01      	ldr	r3, [pc, #4]	; (900287a0 <HAL_GetREVID+0x8>)
9002879a:	6818      	ldr	r0, [r3, #0]
}
9002879c:	0c00      	lsrs	r0, r0, #16
9002879e:	4770      	bx	lr
900287a0:	5c001000 	.word	0x5c001000

900287a4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900287a4:	4907      	ldr	r1, [pc, #28]	; (900287c4 <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900287a6:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
900287a8:	4b07      	ldr	r3, [pc, #28]	; (900287c8 <HAL_NVIC_SetPriorityGrouping+0x24>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
900287aa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
900287ac:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
900287b0:	b410      	push	{r4}
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
900287b2:	f64f 04ff 	movw	r4, #63743	; 0xf8ff
900287b6:	4022      	ands	r2, r4
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
900287b8:	f85d 4b04 	ldr.w	r4, [sp], #4
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
900287bc:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
900287be:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
900287c0:	60cb      	str	r3, [r1, #12]
900287c2:	4770      	bx	lr
900287c4:	e000ed00 	.word	0xe000ed00
900287c8:	05fa0000 	.word	0x05fa0000

900287cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
900287cc:	4b19      	ldr	r3, [pc, #100]	; (90028834 <HAL_NVIC_SetPriority+0x68>)
900287ce:	68db      	ldr	r3, [r3, #12]
900287d0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
900287d4:	b430      	push	{r4, r5}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900287d6:	f1c3 0507 	rsb	r5, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900287da:	1d1c      	adds	r4, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
900287dc:	2d04      	cmp	r5, #4
900287de:	bf28      	it	cs
900287e0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
900287e2:	2c06      	cmp	r4, #6
900287e4:	d919      	bls.n	9002881a <HAL_NVIC_SetPriority+0x4e>
900287e6:	3b03      	subs	r3, #3
900287e8:	f04f 34ff 	mov.w	r4, #4294967295
900287ec:	409c      	lsls	r4, r3
900287ee:	ea22 0204 	bic.w	r2, r2, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900287f2:	f04f 34ff 	mov.w	r4, #4294967295
  if ((int32_t)(IRQn) >= 0)
900287f6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
900287f8:	fa04 f405 	lsl.w	r4, r4, r5
900287fc:	ea21 0104 	bic.w	r1, r1, r4
90028800:	fa01 f103 	lsl.w	r1, r1, r3
90028804:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90028808:	db0a      	blt.n	90028820 <HAL_NVIC_SetPriority+0x54>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9002880a:	0109      	lsls	r1, r1, #4
9002880c:	4b0a      	ldr	r3, [pc, #40]	; (90028838 <HAL_NVIC_SetPriority+0x6c>)
9002880e:	b2c9      	uxtb	r1, r1
90028810:	4403      	add	r3, r0
90028812:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90028816:	bc30      	pop	{r4, r5}
90028818:	4770      	bx	lr
9002881a:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
9002881c:	4613      	mov	r3, r2
9002881e:	e7e8      	b.n	900287f2 <HAL_NVIC_SetPriority+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90028820:	f000 000f 	and.w	r0, r0, #15
90028824:	0109      	lsls	r1, r1, #4
90028826:	4b05      	ldr	r3, [pc, #20]	; (9002883c <HAL_NVIC_SetPriority+0x70>)
90028828:	b2c9      	uxtb	r1, r1
9002882a:	4403      	add	r3, r0
9002882c:	7619      	strb	r1, [r3, #24]
9002882e:	bc30      	pop	{r4, r5}
90028830:	4770      	bx	lr
90028832:	bf00      	nop
90028834:	e000ed00 	.word	0xe000ed00
90028838:	e000e100 	.word	0xe000e100
9002883c:	e000ecfc 	.word	0xe000ecfc

90028840 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90028840:	2800      	cmp	r0, #0
90028842:	db07      	blt.n	90028854 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90028844:	2301      	movs	r3, #1
90028846:	f000 011f 	and.w	r1, r0, #31
9002884a:	4a03      	ldr	r2, [pc, #12]	; (90028858 <HAL_NVIC_EnableIRQ+0x18>)
9002884c:	0940      	lsrs	r0, r0, #5
9002884e:	408b      	lsls	r3, r1
90028850:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90028854:	4770      	bx	lr
90028856:	bf00      	nop
90028858:	e000e100 	.word	0xe000e100

9002885c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
9002885c:	2800      	cmp	r0, #0
9002885e:	db0d      	blt.n	9002887c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90028860:	0943      	lsrs	r3, r0, #5
90028862:	2201      	movs	r2, #1
90028864:	f000 001f 	and.w	r0, r0, #31
90028868:	4905      	ldr	r1, [pc, #20]	; (90028880 <HAL_NVIC_DisableIRQ+0x24>)
9002886a:	3320      	adds	r3, #32
9002886c:	fa02 f000 	lsl.w	r0, r2, r0
90028870:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90028874:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90028878:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
9002887c:	4770      	bx	lr
9002887e:	bf00      	nop
90028880:	e000e100 	.word	0xe000e100

90028884 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
90028884:	3801      	subs	r0, #1
90028886:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
9002888a:	d20d      	bcs.n	900288a8 <HAL_SYSTICK_Config+0x24>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
9002888c:	4b07      	ldr	r3, [pc, #28]	; (900288ac <HAL_SYSTICK_Config+0x28>)
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
9002888e:	2200      	movs	r2, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
90028890:	2107      	movs	r1, #7
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
90028892:	b430      	push	{r4, r5}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90028894:	25f0      	movs	r5, #240	; 0xf0
90028896:	4c06      	ldr	r4, [pc, #24]	; (900288b0 <HAL_SYSTICK_Config+0x2c>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
90028898:	6058      	str	r0, [r3, #4]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
9002889a:	4610      	mov	r0, r2
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9002889c:	f884 5023 	strb.w	r5, [r4, #35]	; 0x23
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
900288a0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
900288a2:	6019      	str	r1, [r3, #0]
   return SysTick_Config(TicksNumb);
}
900288a4:	bc30      	pop	{r4, r5}
900288a6:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
900288a8:	2001      	movs	r0, #1
900288aa:	4770      	bx	lr
900288ac:	e000e010 	.word	0xe000e010
900288b0:	e000ed00 	.word	0xe000ed00

900288b4 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
900288b4:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900288b8:	4a04      	ldr	r2, [pc, #16]	; (900288cc <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
900288ba:	2000      	movs	r0, #0
900288bc:	4904      	ldr	r1, [pc, #16]	; (900288d0 <HAL_MPU_Disable+0x1c>)
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
900288be:	6a53      	ldr	r3, [r2, #36]	; 0x24
900288c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
900288c4:	6253      	str	r3, [r2, #36]	; 0x24
  MPU->CTRL = 0;
900288c6:	6048      	str	r0, [r1, #4]
}
900288c8:	4770      	bx	lr
900288ca:	bf00      	nop
900288cc:	e000ed00 	.word	0xe000ed00
900288d0:	e000ed90 	.word	0xe000ed90

900288d4 <HAL_MPU_Enable>:
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900288d4:	4a06      	ldr	r2, [pc, #24]	; (900288f0 <HAL_MPU_Enable+0x1c>)
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
900288d6:	f040 0001 	orr.w	r0, r0, #1
900288da:	4b06      	ldr	r3, [pc, #24]	; (900288f4 <HAL_MPU_Enable+0x20>)
900288dc:	6058      	str	r0, [r3, #4]
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
900288de:	6a53      	ldr	r3, [r2, #36]	; 0x24
900288e0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
900288e4:	6253      	str	r3, [r2, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
900288e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900288ea:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
900288ee:	4770      	bx	lr
900288f0:	e000ed00 	.word	0xe000ed00
900288f4:	e000ed90 	.word	0xe000ed90

900288f8 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
900288f8:	4a12      	ldr	r2, [pc, #72]	; (90028944 <HAL_MPU_ConfigRegion+0x4c>)
900288fa:	7843      	ldrb	r3, [r0, #1]
900288fc:	6093      	str	r3, [r2, #8]

  if ((MPU_Init->Enable) != 0UL)
900288fe:	7801      	ldrb	r1, [r0, #0]
90028900:	b1e9      	cbz	r1, 9002893e <HAL_MPU_ConfigRegion+0x46>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90028902:	6843      	ldr	r3, [r0, #4]
{
90028904:	b470      	push	{r4, r5, r6}
    MPU->RBAR = MPU_Init->BaseAddress;
90028906:	60d3      	str	r3, [r2, #12]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90028908:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9002890a:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
9002890c:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
9002890e:	7a85      	ldrb	r5, [r0, #10]
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90028910:	7b86      	ldrb	r6, [r0, #14]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90028912:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90028916:	7b44      	ldrb	r4, [r0, #13]
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90028918:	430b      	orrs	r3, r1
9002891a:	7a01      	ldrb	r1, [r0, #8]
9002891c:	ea43 43c5 	orr.w	r3, r3, r5, lsl #19
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90028920:	7bc5      	ldrb	r5, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90028922:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90028926:	7a44      	ldrb	r4, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90028928:	ea43 4346 	orr.w	r3, r3, r6, lsl #17
9002892c:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90028930:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
90028934:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90028938:	bc70      	pop	{r4, r5, r6}
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
9002893a:	6113      	str	r3, [r2, #16]
}
9002893c:	4770      	bx	lr
    MPU->RBAR = 0x00;
9002893e:	60d1      	str	r1, [r2, #12]
    MPU->RASR = 0x00;
90028940:	6111      	str	r1, [r2, #16]
90028942:	4770      	bx	lr
90028944:	e000ed90 	.word	0xe000ed90

90028948 <DMA2D_SetConfig>:
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,
                            uint32_t Height)
{
90028948:	b470      	push	{r4, r5, r6}
9002894a:	9c03      	ldr	r4, [sp, #12]

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
9002894c:	e9d0 5600 	ldrd	r5, r6, [r0]
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL | DMA2D_NLR_PL), (Height | (Width << DMA2D_NLR_PL_Pos)));
90028950:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
90028954:	6c6c      	ldr	r4, [r5, #68]	; 0x44
  if (hdma2d->Init.Mode == DMA2D_R2M)
90028956:	f5b6 3f40 	cmp.w	r6, #196608	; 0x30000
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL | DMA2D_NLR_PL), (Height | (Width << DMA2D_NLR_PL_Pos)));
9002895a:	f004 4440 	and.w	r4, r4, #3221225472	; 0xc0000000
9002895e:	ea43 0304 	orr.w	r3, r3, r4
90028962:	646b      	str	r3, [r5, #68]	; 0x44
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
90028964:	63ea      	str	r2, [r5, #60]	; 0x3c
  if (hdma2d->Init.Mode == DMA2D_R2M)
90028966:	d008      	beq.n	9002897a <DMA2D_SetConfig+0x32>
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
  }
  else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG) /*M2M_blending with fixed color FG DMA2D Mode selected*/
90028968:	f5b6 2f80 	cmp.w	r6, #262144	; 0x40000
9002896c:	d002      	beq.n	90028974 <DMA2D_SetConfig+0x2c>
    WRITE_REG(hdma2d->Instance->BGMAR, pdata);
  }
  else /* M2M, M2M_PFC,M2M_Blending or M2M_blending with fixed color BG DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
9002896e:	60e9      	str	r1, [r5, #12]
  }
}
90028970:	bc70      	pop	{r4, r5, r6}
90028972:	4770      	bx	lr
    WRITE_REG(hdma2d->Instance->BGMAR, pdata);
90028974:	6169      	str	r1, [r5, #20]
}
90028976:	bc70      	pop	{r4, r5, r6}
90028978:	4770      	bx	lr
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
9002897a:	6883      	ldr	r3, [r0, #8]
9002897c:	b1b3      	cbz	r3, 900289ac <DMA2D_SetConfig+0x64>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
9002897e:	2b01      	cmp	r3, #1
90028980:	d017      	beq.n	900289b2 <DMA2D_SetConfig+0x6a>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
90028982:	2b02      	cmp	r3, #2
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
90028984:	f401 027f 	and.w	r2, r1, #16711680	; 0xff0000
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
90028988:	f401 447f 	and.w	r4, r1, #65280	; 0xff00
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
9002898c:	b2c8      	uxtb	r0, r1
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
9002898e:	d01e      	beq.n	900289ce <DMA2D_SetConfig+0x86>
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
90028990:	2b03      	cmp	r3, #3
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
90028992:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
90028996:	d00f      	beq.n	900289b8 <DMA2D_SetConfig+0x70>
      tmp2 = (tmp2 >> 20U);
90028998:	0d13      	lsrs	r3, r2, #20
      tmp3 = (tmp3 >> 12U);
9002899a:	0b24      	lsrs	r4, r4, #12
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
9002899c:	021b      	lsls	r3, r3, #8
      tmp1 = (tmp1 >> 28U);
9002899e:	0f09      	lsrs	r1, r1, #28
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
900289a0:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
900289a4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
900289a8:	ea43 3101 	orr.w	r1, r3, r1, lsl #12
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
900289ac:	63a9      	str	r1, [r5, #56]	; 0x38
}
900289ae:	bc70      	pop	{r4, r5, r6}
900289b0:	4770      	bx	lr
      tmp = (tmp3 | tmp2 | tmp4);
900289b2:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
900289b6:	e7f9      	b.n	900289ac <DMA2D_SetConfig+0x64>
      tmp2 = (tmp2 >> 19U);
900289b8:	0cd2      	lsrs	r2, r2, #19
      tmp3 = (tmp3 >> 11U);
900289ba:	0ae4      	lsrs	r4, r4, #11
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
900289bc:	0293      	lsls	r3, r2, #10
      tmp1 = (tmp1 >> 31U);
900289be:	0fc9      	lsrs	r1, r1, #31
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
900289c0:	ea43 1344 	orr.w	r3, r3, r4, lsl #5
900289c4:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
900289c8:	ea43 31c1 	orr.w	r1, r3, r1, lsl #15
900289cc:	e7ee      	b.n	900289ac <DMA2D_SetConfig+0x64>
      tmp2 = (tmp2 >> 19U);
900289ce:	0cd1      	lsrs	r1, r2, #19
      tmp3 = (tmp3 >> 10U);
900289d0:	0aa4      	lsrs	r4, r4, #10
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
900289d2:	02c9      	lsls	r1, r1, #11
900289d4:	ea41 1144 	orr.w	r1, r1, r4, lsl #5
900289d8:	ea41 01d0 	orr.w	r1, r1, r0, lsr #3
900289dc:	e7e6      	b.n	900289ac <DMA2D_SetConfig+0x64>
900289de:	bf00      	nop

900289e0 <HAL_DMA2D_Init>:
  if (hdma2d == NULL)
900289e0:	2800      	cmp	r0, #0
900289e2:	d036      	beq.n	90028a52 <HAL_DMA2D_Init+0x72>
{
900289e4:	b570      	push	{r4, r5, r6, lr}
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900289e6:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
900289ea:	4604      	mov	r4, r0
900289ec:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900289f0:	b353      	cbz	r3, 90028a48 <HAL_DMA2D_Init+0x68>
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900289f2:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900289f4:	2202      	movs	r2, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900289f6:	69e0      	ldr	r0, [r4, #28]
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
900289f8:	2500      	movs	r5, #0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900289fa:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900289fe:	4916      	ldr	r1, [pc, #88]	; (90028a58 <HAL_DMA2D_Init+0x78>)
90028a00:	681e      	ldr	r6, [r3, #0]
90028a02:	6862      	ldr	r2, [r4, #4]
90028a04:	4031      	ands	r1, r6
90028a06:	4302      	orrs	r2, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a08:	4814      	ldr	r0, [pc, #80]	; (90028a5c <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90028a0a:	4311      	orrs	r1, r2
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a0c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90028a0e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a10:	69a1      	ldr	r1, [r4, #24]
90028a12:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90028a14:	430a      	orrs	r2, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90028a16:	4912      	ldr	r1, [pc, #72]	; (90028a60 <HAL_DMA2D_Init+0x80>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a18:	4030      	ands	r0, r6
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90028a1a:	2601      	movs	r6, #1
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a1c:	4302      	orrs	r2, r0
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90028a1e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90028a20:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90028a22:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90028a24:	4011      	ands	r1, r2
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90028a26:	6962      	ldr	r2, [r4, #20]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90028a28:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90028a2a:	0552      	lsls	r2, r2, #21
90028a2c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90028a2e:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90028a30:	6b59      	ldr	r1, [r3, #52]	; 0x34
90028a32:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
  return HAL_OK;
90028a36:	4628      	mov	r0, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90028a38:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90028a3c:	430a      	orrs	r2, r1
90028a3e:	635a      	str	r2, [r3, #52]	; 0x34
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90028a40:	6665      	str	r5, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90028a42:	f884 6061 	strb.w	r6, [r4, #97]	; 0x61
}
90028a46:	bd70      	pop	{r4, r5, r6, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90028a48:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90028a4c:	f7fe fe80 	bl	90027750 <HAL_DMA2D_MspInit>
90028a50:	e7cf      	b.n	900289f2 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90028a52:	2001      	movs	r0, #1
}
90028a54:	4770      	bx	lr
90028a56:	bf00      	nop
90028a58:	fff8ffbf 	.word	0xfff8ffbf
90028a5c:	fffffef8 	.word	0xfffffef8
90028a60:	ffff0000 	.word	0xffff0000

90028a64 <HAL_DMA2D_Start_IT>:
{
90028a64:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
90028a66:	f890 5060 	ldrb.w	r5, [r0, #96]	; 0x60
{
90028a6a:	b083      	sub	sp, #12
  __HAL_LOCK(hdma2d);
90028a6c:	2d01      	cmp	r5, #1
90028a6e:	d015      	beq.n	90028a9c <HAL_DMA2D_Start_IT+0x38>
90028a70:	2601      	movs	r6, #1
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
90028a72:	9f08      	ldr	r7, [sp, #32]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028a74:	2502      	movs	r5, #2
90028a76:	4604      	mov	r4, r0
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
90028a78:	9700      	str	r7, [sp, #0]
  __HAL_LOCK(hdma2d);
90028a7a:	f880 6060 	strb.w	r6, [r0, #96]	; 0x60
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028a7e:	f880 5061 	strb.w	r5, [r0, #97]	; 0x61
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
90028a82:	f7ff ff61 	bl	90028948 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028a86:	6823      	ldr	r3, [r4, #0]
  return HAL_OK;
90028a88:	2000      	movs	r0, #0
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028a8a:	681a      	ldr	r2, [r3, #0]
90028a8c:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
90028a90:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
90028a92:	681a      	ldr	r2, [r3, #0]
90028a94:	4332      	orrs	r2, r6
90028a96:	601a      	str	r2, [r3, #0]
}
90028a98:	b003      	add	sp, #12
90028a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  __HAL_LOCK(hdma2d);
90028a9c:	2002      	movs	r0, #2
}
90028a9e:	b003      	add	sp, #12
90028aa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90028aa2:	bf00      	nop

90028aa4 <HAL_DMA2D_BlendingStart_IT>:
{
90028aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(hdma2d);
90028aa6:	f890 6060 	ldrb.w	r6, [r0, #96]	; 0x60
{
90028aaa:	b083      	sub	sp, #12
  __HAL_LOCK(hdma2d);
90028aac:	2e01      	cmp	r6, #1
90028aae:	d034      	beq.n	90028b1a <HAL_DMA2D_BlendingStart_IT+0x76>
  if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
90028ab0:	6846      	ldr	r6, [r0, #4]
90028ab2:	4617      	mov	r7, r2
  __HAL_LOCK(hdma2d);
90028ab4:	f04f 0c01 	mov.w	ip, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028ab8:	2202      	movs	r2, #2
  if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
90028aba:	f5b6 2f80 	cmp.w	r6, #262144	; 0x40000
90028abe:	4604      	mov	r4, r0
  __HAL_LOCK(hdma2d);
90028ac0:	f880 c060 	strb.w	ip, [r0, #96]	; 0x60
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028ac4:	f880 2061 	strb.w	r2, [r0, #97]	; 0x61
  if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_FG)
90028ac8:	d01c      	beq.n	90028b04 <HAL_DMA2D_BlendingStart_IT+0x60>
  else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
90028aca:	f5b6 2fa0 	cmp.w	r6, #327680	; 0x50000
    DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
90028ace:	461a      	mov	r2, r3
    WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
90028ad0:	6805      	ldr	r5, [r0, #0]
    DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
90028ad2:	9b08      	ldr	r3, [sp, #32]
  else if (hdma2d->Init.Mode == DMA2D_M2M_BLEND_BG)
90028ad4:	d010      	beq.n	90028af8 <HAL_DMA2D_BlendingStart_IT+0x54>
    WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
90028ad6:	616f      	str	r7, [r5, #20]
    DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
90028ad8:	9d09      	ldr	r5, [sp, #36]	; 0x24
90028ada:	9500      	str	r5, [sp, #0]
90028adc:	f7ff ff34 	bl	90028948 <DMA2D_SetConfig>
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028ae0:	6823      	ldr	r3, [r4, #0]
  return HAL_OK;
90028ae2:	2000      	movs	r0, #0
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028ae4:	681a      	ldr	r2, [r3, #0]
90028ae6:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
90028aea:	601a      	str	r2, [r3, #0]
  __HAL_DMA2D_ENABLE(hdma2d);
90028aec:	681a      	ldr	r2, [r3, #0]
90028aee:	f042 0201 	orr.w	r2, r2, #1
90028af2:	601a      	str	r2, [r3, #0]
}
90028af4:	b003      	add	sp, #12
90028af6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    WRITE_REG(hdma2d->Instance->BGCOLR, SrcAddress2);
90028af8:	62af      	str	r7, [r5, #40]	; 0x28
    DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
90028afa:	9d09      	ldr	r5, [sp, #36]	; 0x24
90028afc:	9500      	str	r5, [sp, #0]
90028afe:	f7ff ff23 	bl	90028948 <DMA2D_SetConfig>
90028b02:	e7ed      	b.n	90028ae0 <HAL_DMA2D_BlendingStart_IT+0x3c>
90028b04:	460d      	mov	r5, r1
    WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
90028b06:	6806      	ldr	r6, [r0, #0]
    DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
90028b08:	461a      	mov	r2, r3
90028b0a:	4639      	mov	r1, r7
    WRITE_REG(hdma2d->Instance->FGCOLR, SrcAddress1);
90028b0c:	6235      	str	r5, [r6, #32]
    DMA2D_SetConfig(hdma2d, SrcAddress2, DstAddress, Width, Height);
90028b0e:	9d09      	ldr	r5, [sp, #36]	; 0x24
90028b10:	9b08      	ldr	r3, [sp, #32]
90028b12:	9500      	str	r5, [sp, #0]
90028b14:	f7ff ff18 	bl	90028948 <DMA2D_SetConfig>
90028b18:	e7e2      	b.n	90028ae0 <HAL_DMA2D_BlendingStart_IT+0x3c>
  __HAL_LOCK(hdma2d);
90028b1a:	2002      	movs	r0, #2
}
90028b1c:	b003      	add	sp, #12
90028b1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

90028b20 <HAL_DMA2D_Abort>:
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT | DMA2D_CR_START, DMA2D_CR_ABORT);
90028b20:	6802      	ldr	r2, [r0, #0]
{
90028b22:	b538      	push	{r3, r4, r5, lr}
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT | DMA2D_CR_START, DMA2D_CR_ABORT);
90028b24:	6813      	ldr	r3, [r2, #0]
{
90028b26:	4604      	mov	r4, r0
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT | DMA2D_CR_START, DMA2D_CR_ABORT);
90028b28:	f023 0305 	bic.w	r3, r3, #5
90028b2c:	f043 0304 	orr.w	r3, r3, #4
90028b30:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90028b32:	f7ff fe2b 	bl	9002878c <HAL_GetTick>
90028b36:	4605      	mov	r5, r0
  while ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
90028b38:	e005      	b.n	90028b46 <HAL_DMA2D_Abort+0x26>
    if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_ABORT)
90028b3a:	f7ff fe27 	bl	9002878c <HAL_GetTick>
90028b3e:	1b43      	subs	r3, r0, r5
90028b40:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
90028b44:	d80f      	bhi.n	90028b66 <HAL_DMA2D_Abort+0x46>
  while ((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
90028b46:	6822      	ldr	r2, [r4, #0]
90028b48:	6813      	ldr	r3, [r2, #0]
90028b4a:	f013 0301 	ands.w	r3, r3, #1
90028b4e:	d1f4      	bne.n	90028b3a <HAL_DMA2D_Abort+0x1a>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028b50:	6811      	ldr	r1, [r2, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028b52:	2501      	movs	r5, #1
  return HAL_OK;
90028b54:	4618      	mov	r0, r3
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC | DMA2D_IT_TE | DMA2D_IT_CE);
90028b56:	f421 510c 	bic.w	r1, r1, #8960	; 0x2300
90028b5a:	6011      	str	r1, [r2, #0]
  __HAL_UNLOCK(hdma2d);
90028b5c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028b60:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
}
90028b64:	bd38      	pop	{r3, r4, r5, pc}
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028b66:	6e63      	ldr	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
90028b68:	2203      	movs	r2, #3
      __HAL_UNLOCK(hdma2d);
90028b6a:	2100      	movs	r1, #0
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028b6c:	f043 0320 	orr.w	r3, r3, #32
      __HAL_UNLOCK(hdma2d);
90028b70:	4610      	mov	r0, r2
90028b72:	f884 1060 	strb.w	r1, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028b76:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
90028b78:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
}
90028b7c:	bd38      	pop	{r3, r4, r5, pc}
90028b7e:	bf00      	nop

90028b80 <HAL_DMA2D_CLUTLoad_IT>:
{
90028b80:	b430      	push	{r4, r5}
90028b82:	b084      	sub	sp, #16
  __HAL_LOCK(hdma2d);
90028b84:	f890 4060 	ldrb.w	r4, [r0, #96]	; 0x60
{
90028b88:	ad04      	add	r5, sp, #16
  __HAL_LOCK(hdma2d);
90028b8a:	2c01      	cmp	r4, #1
{
90028b8c:	e905 000e 	stmdb	r5, {r1, r2, r3}
90028b90:	e9dd 5301 	ldrd	r5, r3, [sp, #4]
90028b94:	9903      	ldr	r1, [sp, #12]
  __HAL_LOCK(hdma2d);
90028b96:	d033      	beq.n	90028c00 <HAL_DMA2D_CLUTLoad_IT+0x80>
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028b98:	2202      	movs	r2, #2
  __HAL_LOCK(hdma2d);
90028b9a:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028b9c:	f880 2061 	strb.w	r2, [r0, #97]	; 0x61
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90028ba0:	9a06      	ldr	r2, [sp, #24]
  __HAL_LOCK(hdma2d);
90028ba2:	f880 4060 	strb.w	r4, [r0, #96]	; 0x60
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90028ba6:	b1aa      	cbz	r2, 90028bd4 <HAL_DMA2D_CLUTLoad_IT+0x54>
    WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
90028ba8:	6802      	ldr	r2, [r0, #0]
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
90028baa:	011b      	lsls	r3, r3, #4
90028bac:	4c16      	ldr	r4, [pc, #88]	; (90028c08 <HAL_DMA2D_CLUTLoad_IT+0x88>)
  return HAL_OK;
90028bae:	2000      	movs	r0, #0
    WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
90028bb0:	62d5      	str	r5, [r2, #44]	; 0x2c
    MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM),
90028bb2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90028bb6:	69d1      	ldr	r1, [r2, #28]
90028bb8:	400c      	ands	r4, r1
90028bba:	4323      	orrs	r3, r4
90028bbc:	61d3      	str	r3, [r2, #28]
    __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
90028bbe:	6813      	ldr	r3, [r2, #0]
90028bc0:	f443 5364 	orr.w	r3, r3, #14592	; 0x3900
90028bc4:	6013      	str	r3, [r2, #0]
    SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);
90028bc6:	69d3      	ldr	r3, [r2, #28]
90028bc8:	f043 0320 	orr.w	r3, r3, #32
90028bcc:	61d3      	str	r3, [r2, #28]
}
90028bce:	b004      	add	sp, #16
90028bd0:	bc30      	pop	{r4, r5}
90028bd2:	4770      	bx	lr
    WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
90028bd4:	6802      	ldr	r2, [r0, #0]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
90028bd6:	011b      	lsls	r3, r3, #4
90028bd8:	4c0b      	ldr	r4, [pc, #44]	; (90028c08 <HAL_DMA2D_CLUTLoad_IT+0x88>)
    WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
90028bda:	6315      	str	r5, [r2, #48]	; 0x30
    MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
90028bdc:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90028be0:	6a51      	ldr	r1, [r2, #36]	; 0x24
  return HAL_OK;
90028be2:	9806      	ldr	r0, [sp, #24]
    MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM),
90028be4:	400c      	ands	r4, r1
90028be6:	4323      	orrs	r3, r4
90028be8:	6253      	str	r3, [r2, #36]	; 0x24
    __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
90028bea:	6813      	ldr	r3, [r2, #0]
90028bec:	f443 5364 	orr.w	r3, r3, #14592	; 0x3900
90028bf0:	6013      	str	r3, [r2, #0]
    SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
90028bf2:	6a53      	ldr	r3, [r2, #36]	; 0x24
90028bf4:	f043 0320 	orr.w	r3, r3, #32
90028bf8:	6253      	str	r3, [r2, #36]	; 0x24
}
90028bfa:	b004      	add	sp, #16
90028bfc:	bc30      	pop	{r4, r5}
90028bfe:	4770      	bx	lr
  __HAL_LOCK(hdma2d);
90028c00:	2002      	movs	r0, #2
}
90028c02:	b004      	add	sp, #16
90028c04:	bc30      	pop	{r4, r5}
90028c06:	4770      	bx	lr
90028c08:	ffff00ef 	.word	0xffff00ef

90028c0c <HAL_DMA2D_CLUTLoading_Abort>:
{
90028c0c:	b570      	push	{r4, r5, r6, lr}
  const __IO uint32_t *reg =  &(hdma2d->Instance->BGPFCCR);  /* by default, point at background register */
90028c0e:	6804      	ldr	r4, [r0, #0]
  if (LayerIdx == DMA2D_FOREGROUND_LAYER)
90028c10:	2901      	cmp	r1, #1
{
90028c12:	4606      	mov	r6, r0
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
90028c14:	6823      	ldr	r3, [r4, #0]
90028c16:	f043 0304 	orr.w	r3, r3, #4
90028c1a:	6023      	str	r3, [r4, #0]
  const __IO uint32_t *reg =  &(hdma2d->Instance->BGPFCCR);  /* by default, point at background register */
90028c1c:	bf14      	ite	ne
90028c1e:	3424      	addne	r4, #36	; 0x24
    reg  = &(hdma2d->Instance->FGPFCCR);
90028c20:	341c      	addeq	r4, #28
  tickstart = HAL_GetTick();
90028c22:	f7ff fdb3 	bl	9002878c <HAL_GetTick>
90028c26:	4605      	mov	r5, r0
  while ((*reg & DMA2D_BGPFCCR_START) != 0U)
90028c28:	e005      	b.n	90028c36 <HAL_DMA2D_CLUTLoading_Abort+0x2a>
    if ((HAL_GetTick() - tickstart) > DMA2D_TIMEOUT_ABORT)
90028c2a:	f7ff fdaf 	bl	9002878c <HAL_GetTick>
90028c2e:	1b43      	subs	r3, r0, r5
90028c30:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
90028c34:	d80f      	bhi.n	90028c56 <HAL_DMA2D_CLUTLoading_Abort+0x4a>
  while ((*reg & DMA2D_BGPFCCR_START) != 0U)
90028c36:	6823      	ldr	r3, [r4, #0]
90028c38:	f013 0320 	ands.w	r3, r3, #32
90028c3c:	d1f5      	bne.n	90028c2a <HAL_DMA2D_CLUTLoading_Abort+0x1e>
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
90028c3e:	6831      	ldr	r1, [r6, #0]
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028c40:	2401      	movs	r4, #1
  return HAL_OK;
90028c42:	4618      	mov	r0, r3
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE | DMA2D_IT_CAE);
90028c44:	680a      	ldr	r2, [r1, #0]
90028c46:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
90028c4a:	600a      	str	r2, [r1, #0]
  __HAL_UNLOCK(hdma2d);
90028c4c:	f886 3060 	strb.w	r3, [r6, #96]	; 0x60
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028c50:	f886 4061 	strb.w	r4, [r6, #97]	; 0x61
}
90028c54:	bd70      	pop	{r4, r5, r6, pc}
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028c56:	6e73      	ldr	r3, [r6, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
90028c58:	2203      	movs	r2, #3
      __HAL_UNLOCK(hdma2d);
90028c5a:	2100      	movs	r1, #0
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028c5c:	f043 0320 	orr.w	r3, r3, #32
      __HAL_UNLOCK(hdma2d);
90028c60:	4610      	mov	r0, r2
90028c62:	f886 1060 	strb.w	r1, [r6, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
90028c66:	6673      	str	r3, [r6, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
90028c68:	f886 2061 	strb.w	r2, [r6, #97]	; 0x61
}
90028c6c:	bd70      	pop	{r4, r5, r6, pc}
90028c6e:	bf00      	nop

90028c70 <HAL_DMA2D_DeInit>:
  if (hdma2d == NULL)
90028c70:	2800      	cmp	r0, #0
90028c72:	d031      	beq.n	90028cd8 <HAL_DMA2D_DeInit+0x68>
{
90028c74:	b538      	push	{r3, r4, r5, lr}
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
90028c76:	4b19      	ldr	r3, [pc, #100]	; (90028cdc <HAL_DMA2D_DeInit+0x6c>)
90028c78:	4604      	mov	r4, r0
90028c7a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
90028c7e:	f013 0f10 	tst.w	r3, #16
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
90028c82:	6803      	ldr	r3, [r0, #0]
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
90028c84:	d009      	beq.n	90028c9a <HAL_DMA2D_DeInit+0x2a>
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
90028c86:	6819      	ldr	r1, [r3, #0]
90028c88:	f011 0101 	ands.w	r1, r1, #1
90028c8c:	d11e      	bne.n	90028ccc <HAL_DMA2D_DeInit+0x5c>
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
90028c8e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90028c90:	0695      	lsls	r5, r2, #26
90028c92:	d416      	bmi.n	90028cc2 <HAL_DMA2D_DeInit+0x52>
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
90028c94:	69da      	ldr	r2, [r3, #28]
90028c96:	0692      	lsls	r2, r2, #26
90028c98:	d412      	bmi.n	90028cc0 <HAL_DMA2D_DeInit+0x50>
  hdma2d->Instance->CR       =    0U;
90028c9a:	2500      	movs	r5, #0
  hdma2d->Instance->IFCR     = 0x3FU;
90028c9c:	223f      	movs	r2, #63	; 0x3f
  HAL_DMA2D_MspDeInit(hdma2d);
90028c9e:	4620      	mov	r0, r4
  hdma2d->Instance->CR       =    0U;
90028ca0:	601d      	str	r5, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
90028ca2:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
90028ca4:	611d      	str	r5, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
90028ca6:	619d      	str	r5, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
90028ca8:	61dd      	str	r5, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
90028caa:	625d      	str	r5, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
90028cac:	635d      	str	r5, [r3, #52]	; 0x34
  HAL_DMA2D_MspDeInit(hdma2d);
90028cae:	f7fe fd6b 	bl	90027788 <HAL_DMA2D_MspDeInit>
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90028cb2:	6665      	str	r5, [r4, #100]	; 0x64
  return HAL_OK;
90028cb4:	4628      	mov	r0, r5
  __HAL_UNLOCK(hdma2d);
90028cb6:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
90028cba:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
}
90028cbe:	bd38      	pop	{r3, r4, r5, pc}
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
90028cc0:	2101      	movs	r1, #1
90028cc2:	f7ff ffa3 	bl	90028c0c <HAL_DMA2D_CLUTLoading_Abort>
90028cc6:	b928      	cbnz	r0, 90028cd4 <HAL_DMA2D_DeInit+0x64>
90028cc8:	6823      	ldr	r3, [r4, #0]
90028cca:	e7e6      	b.n	90028c9a <HAL_DMA2D_DeInit+0x2a>
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
90028ccc:	f7ff ff28 	bl	90028b20 <HAL_DMA2D_Abort>
90028cd0:	2800      	cmp	r0, #0
90028cd2:	d0f9      	beq.n	90028cc8 <HAL_DMA2D_DeInit+0x58>
    return HAL_ERROR;
90028cd4:	2001      	movs	r0, #1
}
90028cd6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90028cd8:	2001      	movs	r0, #1
}
90028cda:	4770      	bx	lr
90028cdc:	58024400 	.word	0x58024400

90028ce0 <HAL_DMA2D_LineEventCallback>:
90028ce0:	4770      	bx	lr
90028ce2:	bf00      	nop

90028ce4 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90028ce4:	4770      	bx	lr
90028ce6:	bf00      	nop

90028ce8 <HAL_DMA2D_IRQHandler>:
{
90028ce8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90028cea:	6803      	ldr	r3, [r0, #0]
{
90028cec:	4604      	mov	r4, r0
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90028cee:	685d      	ldr	r5, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90028cf0:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90028cf2:	07e9      	lsls	r1, r5, #31
90028cf4:	d501      	bpl.n	90028cfa <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90028cf6:	05f2      	lsls	r2, r6, #23
90028cf8:	d456      	bmi.n	90028da8 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90028cfa:	06af      	lsls	r7, r5, #26
90028cfc:	d501      	bpl.n	90028d02 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
90028cfe:	04b0      	lsls	r0, r6, #18
90028d00:	d43b      	bmi.n	90028d7a <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90028d02:	0729      	lsls	r1, r5, #28
90028d04:	d501      	bpl.n	90028d0a <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90028d06:	0532      	lsls	r2, r6, #20
90028d08:	d421      	bmi.n	90028d4e <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90028d0a:	076b      	lsls	r3, r5, #29
90028d0c:	d501      	bpl.n	90028d12 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
90028d0e:	0577      	lsls	r7, r6, #21
90028d10:	d475      	bmi.n	90028dfe <HAL_DMA2D_IRQHandler+0x116>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90028d12:	07a8      	lsls	r0, r5, #30
90028d14:	d501      	bpl.n	90028d1a <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90028d16:	05b1      	lsls	r1, r6, #22
90028d18:	d404      	bmi.n	90028d24 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90028d1a:	06ea      	lsls	r2, r5, #27
90028d1c:	d501      	bpl.n	90028d22 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
90028d1e:	04f3      	lsls	r3, r6, #19
90028d20:	d45a      	bmi.n	90028dd8 <HAL_DMA2D_IRQHandler+0xf0>
}
90028d22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90028d24:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90028d26:	2702      	movs	r7, #2
      hdma2d->State = HAL_DMA2D_STATE_READY;
90028d28:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90028d2a:	2000      	movs	r0, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90028d2c:	681a      	ldr	r2, [r3, #0]
90028d2e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90028d32:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90028d34:	609f      	str	r7, [r3, #8]
      if (hdma2d->XferCpltCallback != NULL)
90028d36:	6a23      	ldr	r3, [r4, #32]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90028d38:	6e62      	ldr	r2, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90028d3a:	f884 0060 	strb.w	r0, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90028d3e:	6662      	str	r2, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90028d40:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      if (hdma2d->XferCpltCallback != NULL)
90028d44:	2b00      	cmp	r3, #0
90028d46:	d0e8      	beq.n	90028d1a <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90028d48:	4620      	mov	r0, r4
90028d4a:	4798      	blx	r3
90028d4c:	e7e5      	b.n	90028d1a <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90028d4e:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90028d50:	2008      	movs	r0, #8
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028d52:	2104      	movs	r1, #4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90028d54:	681a      	ldr	r2, [r3, #0]
90028d56:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90028d5a:	601a      	str	r2, [r3, #0]
      __HAL_UNLOCK(hdma2d);
90028d5c:	2200      	movs	r2, #0
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90028d5e:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90028d60:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90028d62:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90028d66:	430b      	orrs	r3, r1
      if (hdma2d->XferErrorCallback != NULL)
90028d68:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90028d6a:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028d6c:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      if (hdma2d->XferErrorCallback != NULL)
90028d70:	2a00      	cmp	r2, #0
90028d72:	d0ca      	beq.n	90028d0a <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90028d74:	4620      	mov	r0, r4
90028d76:	4790      	blx	r2
90028d78:	e7c7      	b.n	90028d0a <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90028d7a:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90028d7c:	2020      	movs	r0, #32
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028d7e:	2104      	movs	r1, #4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90028d80:	681a      	ldr	r2, [r3, #0]
90028d82:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90028d86:	601a      	str	r2, [r3, #0]
      __HAL_UNLOCK(hdma2d);
90028d88:	2200      	movs	r2, #0
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90028d8a:	6098      	str	r0, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90028d8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90028d8e:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90028d92:	f043 0302 	orr.w	r3, r3, #2
      if (hdma2d->XferErrorCallback != NULL)
90028d96:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90028d98:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028d9a:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      if (hdma2d->XferErrorCallback != NULL)
90028d9e:	2a00      	cmp	r2, #0
90028da0:	d0af      	beq.n	90028d02 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90028da2:	4620      	mov	r0, r4
90028da4:	4790      	blx	r2
90028da6:	e7ac      	b.n	90028d02 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90028da8:	681a      	ldr	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90028daa:	f04f 0e01 	mov.w	lr, #1
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028dae:	f04f 0c04 	mov.w	ip, #4
      __HAL_UNLOCK(hdma2d);
90028db2:	2700      	movs	r7, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90028db4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
      if (hdma2d->XferErrorCallback != NULL)
90028db8:	6a41      	ldr	r1, [r0, #36]	; 0x24
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90028dba:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90028dbc:	6e42      	ldr	r2, [r0, #100]	; 0x64
90028dbe:	ea42 020e 	orr.w	r2, r2, lr
90028dc2:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90028dc4:	f8c3 e008 	str.w	lr, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90028dc8:	f880 c061 	strb.w	ip, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90028dcc:	f880 7060 	strb.w	r7, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90028dd0:	2900      	cmp	r1, #0
90028dd2:	d092      	beq.n	90028cfa <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90028dd4:	4788      	blx	r1
90028dd6:	e790      	b.n	90028cfa <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90028dd8:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90028dda:	2610      	movs	r6, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90028ddc:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90028dde:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90028de0:	681a      	ldr	r2, [r3, #0]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90028de2:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90028de4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90028de8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90028dea:	609e      	str	r6, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90028dec:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90028dee:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90028df2:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90028df4:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90028df8:	f7ff ff74 	bl	90028ce4 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90028dfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90028dfe:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90028e00:	2104      	movs	r1, #4
      HAL_DMA2D_LineEventCallback(hdma2d);
90028e02:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90028e04:	681a      	ldr	r2, [r3, #0]
90028e06:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
90028e0a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90028e0c:	6099      	str	r1, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90028e0e:	f7ff ff67 	bl	90028ce0 <HAL_DMA2D_LineEventCallback>
90028e12:	e77e      	b.n	90028d12 <HAL_DMA2D_IRQHandler+0x2a>

90028e14 <HAL_DMA2D_ConfigLayer>:
  __HAL_LOCK(hdma2d);
90028e14:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90028e18:	2a01      	cmp	r2, #1
90028e1a:	d063      	beq.n	90028ee4 <HAL_DMA2D_ConfigLayer+0xd0>
90028e1c:	4603      	mov	r3, r0
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e1e:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028e22:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e24:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90028e28:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90028e2a:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90028e2c:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90028e30:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90028e34:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e36:	6b06      	ldr	r6, [r0, #48]	; 0x30
90028e38:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90028e3a:	0512      	lsls	r2, r2, #20
90028e3c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e3e:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90028e42:	f1a4 0609 	sub.w	r6, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e46:	4322      	orrs	r2, r4
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90028e48:	2e01      	cmp	r6, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90028e4a:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90028e4e:	d922      	bls.n	90028e96 <HAL_DMA2D_ConfigLayer+0x82>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90028e50:	6b45      	ldr	r5, [r0, #52]	; 0x34
90028e52:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90028e56:	b981      	cbnz	r1, 90028e7a <HAL_DMA2D_ConfigLayer+0x66>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90028e58:	6818      	ldr	r0, [r3, #0]
90028e5a:	4923      	ldr	r1, [pc, #140]	; (90028ee8 <HAL_DMA2D_ConfigLayer+0xd4>)
90028e5c:	6a45      	ldr	r5, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90028e5e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90028e60:	4029      	ands	r1, r5
90028e62:	430a      	orrs	r2, r1
90028e64:	6242      	str	r2, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90028e66:	6184      	str	r4, [r0, #24]
  __HAL_UNLOCK(hdma2d);
90028e68:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028e6a:	2101      	movs	r1, #1
  return HAL_OK;
90028e6c:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90028e6e:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90028e72:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90028e76:	bc70      	pop	{r4, r5, r6}
90028e78:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90028e7a:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028e7c:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90028e7e:	d129      	bne.n	90028ed4 <HAL_DMA2D_ConfigLayer+0xc0>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028e80:	69e6      	ldr	r6, [r4, #28]
90028e82:	491a      	ldr	r1, [pc, #104]	; (90028eec <HAL_DMA2D_ConfigLayer+0xd8>)
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90028e84:	6c05      	ldr	r5, [r0, #64]	; 0x40
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028e86:	4031      	ands	r1, r6
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028e88:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028e8a:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90028e8e:	430a      	orrs	r2, r1
90028e90:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028e92:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90028e94:	e7e8      	b.n	90028e68 <HAL_DMA2D_ConfigLayer+0x54>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90028e96:	6b44      	ldr	r4, [r0, #52]	; 0x34
90028e98:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90028e9c:	4322      	orrs	r2, r4
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90028e9e:	b161      	cbz	r1, 90028eba <HAL_DMA2D_ConfigLayer+0xa6>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028ea0:	6819      	ldr	r1, [r3, #0]
90028ea2:	4c11      	ldr	r4, [pc, #68]	; (90028ee8 <HAL_DMA2D_ConfigLayer+0xd4>)
90028ea4:	69ce      	ldr	r6, [r1, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90028ea6:	6b45      	ldr	r5, [r0, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028ea8:	4034      	ands	r4, r6
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028eaa:	6a86      	ldr	r6, [r0, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90028eac:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028eb0:	4322      	orrs	r2, r4
90028eb2:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028eb4:	610e      	str	r6, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90028eb6:	620d      	str	r5, [r1, #32]
90028eb8:	e7d6      	b.n	90028e68 <HAL_DMA2D_ConfigLayer+0x54>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90028eba:	6819      	ldr	r1, [r3, #0]
90028ebc:	4c0a      	ldr	r4, [pc, #40]	; (90028ee8 <HAL_DMA2D_ConfigLayer+0xd4>)
90028ebe:	6a4d      	ldr	r5, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90028ec0:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90028ec2:	402c      	ands	r4, r5
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90028ec4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90028ec6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90028eca:	4322      	orrs	r2, r4
90028ecc:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90028ece:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90028ed0:	6288      	str	r0, [r1, #40]	; 0x28
90028ed2:	e7c9      	b.n	90028e68 <HAL_DMA2D_ConfigLayer+0x54>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028ed4:	69e5      	ldr	r5, [r4, #28]
90028ed6:	4904      	ldr	r1, [pc, #16]	; (90028ee8 <HAL_DMA2D_ConfigLayer+0xd4>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028ed8:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90028eda:	4029      	ands	r1, r5
90028edc:	430a      	orrs	r2, r1
90028ede:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90028ee0:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90028ee2:	e7c1      	b.n	90028e68 <HAL_DMA2D_ConfigLayer+0x54>
  __HAL_LOCK(hdma2d);
90028ee4:	2002      	movs	r0, #2
}
90028ee6:	4770      	bx	lr
90028ee8:	00ccfff0 	.word	0x00ccfff0
90028eec:	00c0fff0 	.word	0x00c0fff0

90028ef0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90028ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90028ef4:	680e      	ldr	r6, [r1, #0]
{
90028ef6:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90028ef8:	2e00      	cmp	r6, #0
90028efa:	f000 80d3 	beq.w	900290a4 <HAL_GPIO_Init+0x1b4>
  uint32_t position = 0x00U;
90028efe:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028f00:	f8df a220 	ldr.w	sl, [pc, #544]	; 90029124 <HAL_GPIO_Init+0x234>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
90028f04:	f8df b220 	ldr.w	fp, [pc, #544]	; 90029128 <HAL_GPIO_Init+0x238>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90028f08:	46b1      	mov	r9, r6
90028f0a:	e020      	b.n	90028f4e <HAL_GPIO_Init+0x5e>
        temp = GPIOx->AFR[position >> 3U];
90028f0c:	08da      	lsrs	r2, r3, #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90028f0e:	f003 0c07 	and.w	ip, r3, #7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90028f12:	f004 0403 	and.w	r4, r4, #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90028f16:	f04f 0e0f 	mov.w	lr, #15
90028f1a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90028f1e:	690e      	ldr	r6, [r1, #16]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90028f20:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90028f24:	fa04 f707 	lsl.w	r7, r4, r7
        temp = GPIOx->AFR[position >> 3U];
90028f28:	6a14      	ldr	r4, [r2, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90028f2a:	fa0e fe0c 	lsl.w	lr, lr, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90028f2e:	fa06 f60c 	lsl.w	r6, r6, ip
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90028f32:	ea24 0c0e 	bic.w	ip, r4, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
90028f36:	ea46 060c 	orr.w	r6, r6, ip
        GPIOx->AFR[position >> 3U] = temp;
90028f3a:	6216      	str	r6, [r2, #32]
      temp = GPIOx->MODER;
90028f3c:	6802      	ldr	r2, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90028f3e:	4015      	ands	r5, r2
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90028f40:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
90028f42:	6005      	str	r5, [r0, #0]
        }
        EXTI->FTSR1 = temp;
      }
    }

    position++;
90028f44:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90028f46:	fa39 f203 	lsrs.w	r2, r9, r3
90028f4a:	f000 80ab 	beq.w	900290a4 <HAL_GPIO_Init+0x1b4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90028f4e:	2201      	movs	r2, #1
90028f50:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90028f52:	ea12 0809 	ands.w	r8, r2, r9
90028f56:	d0f5      	beq.n	90028f44 <HAL_GPIO_Init+0x54>
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
90028f58:	684c      	ldr	r4, [r1, #4]
90028f5a:	005f      	lsls	r7, r3, #1
90028f5c:	f024 0c10 	bic.w	ip, r4, #16
90028f60:	f10c 35ff 	add.w	r5, ip, #4294967295
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90028f64:	2d01      	cmp	r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90028f66:	f04f 0503 	mov.w	r5, #3
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90028f6a:	f200 809e 	bhi.w	900290aa <HAL_GPIO_Init+0x1ba>
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90028f6e:	f3c4 1600 	ubfx	r6, r4, #4, #1
        temp = GPIOx->OSPEEDR;
90028f72:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90028f76:	40bd      	lsls	r5, r7
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90028f78:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90028f7a:	ea2e 0e05 	bic.w	lr, lr, r5
90028f7e:	43ed      	mvns	r5, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90028f80:	9601      	str	r6, [sp, #4]
        temp |= (GPIO_Init->Speed << (position * 2U));
90028f82:	68ce      	ldr	r6, [r1, #12]
90028f84:	40be      	lsls	r6, r7
90028f86:	ea46 0e0e 	orr.w	lr, r6, lr
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90028f8a:	9e01      	ldr	r6, [sp, #4]
        GPIOx->OSPEEDR = temp;
90028f8c:	f8c0 e008 	str.w	lr, [r0, #8]
        temp = GPIOx->OTYPER;
90028f90:	f8d0 e004 	ldr.w	lr, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90028f94:	ea2e 0202 	bic.w	r2, lr, r2
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
90028f98:	4316      	orrs	r6, r2
        GPIOx->OTYPER = temp;
90028f9a:	6046      	str	r6, [r0, #4]
      temp = GPIOx->PUPDR;
90028f9c:	68c6      	ldr	r6, [r0, #12]
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90028f9e:	f1bc 0f02 	cmp.w	ip, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90028fa2:	688a      	ldr	r2, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90028fa4:	ea06 0605 	and.w	r6, r6, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90028fa8:	fa02 f207 	lsl.w	r2, r2, r7
90028fac:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->PUPDR = temp;
90028fb0:	60c2      	str	r2, [r0, #12]
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
90028fb2:	d0ab      	beq.n	90028f0c <HAL_GPIO_Init+0x1c>
      temp = GPIOx->MODER;
90028fb4:	6806      	ldr	r6, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90028fb6:	f004 0203 	and.w	r2, r4, #3
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90028fba:	402e      	ands	r6, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90028fbc:	fa02 f707 	lsl.w	r7, r2, r7
90028fc0:	433e      	orrs	r6, r7
      GPIOx->MODER = temp;
90028fc2:	6006      	str	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
90028fc4:	00e6      	lsls	r6, r4, #3
90028fc6:	d5bd      	bpl.n	90028f44 <HAL_GPIO_Init+0x54>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028fc8:	f8da 60f4 	ldr.w	r6, [sl, #244]	; 0xf4
90028fcc:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90028fd0:	f003 0203 	and.w	r2, r3, #3
90028fd4:	250f      	movs	r5, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028fd6:	f046 0602 	orr.w	r6, r6, #2
90028fda:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90028fde:	0092      	lsls	r2, r2, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028fe0:	f8ca 60f4 	str.w	r6, [sl, #244]	; 0xf4
90028fe4:	f507 6780 	add.w	r7, r7, #1024	; 0x400
90028fe8:	f8da 60f4 	ldr.w	r6, [sl, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90028fec:	fa05 fc02 	lsl.w	ip, r5, r2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028ff0:	f006 0602 	and.w	r6, r6, #2
90028ff4:	9603      	str	r6, [sp, #12]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90028ff6:	4e42      	ldr	r6, [pc, #264]	; (90029100 <HAL_GPIO_Init+0x210>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90028ff8:	9d03      	ldr	r5, [sp, #12]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90028ffa:	42b0      	cmp	r0, r6
        temp = SYSCFG->EXTICR[position >> 2U];
90028ffc:	68bd      	ldr	r5, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90028ffe:	ea25 050c 	bic.w	r5, r5, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90029002:	d020      	beq.n	90029046 <HAL_GPIO_Init+0x156>
90029004:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90029008:	42b0      	cmp	r0, r6
9002900a:	d056      	beq.n	900290ba <HAL_GPIO_Init+0x1ca>
9002900c:	4e3d      	ldr	r6, [pc, #244]	; (90029104 <HAL_GPIO_Init+0x214>)
9002900e:	42b0      	cmp	r0, r6
90029010:	d058      	beq.n	900290c4 <HAL_GPIO_Init+0x1d4>
90029012:	4e3d      	ldr	r6, [pc, #244]	; (90029108 <HAL_GPIO_Init+0x218>)
90029014:	42b0      	cmp	r0, r6
90029016:	d04b      	beq.n	900290b0 <HAL_GPIO_Init+0x1c0>
90029018:	4e3c      	ldr	r6, [pc, #240]	; (9002910c <HAL_GPIO_Init+0x21c>)
9002901a:	42b0      	cmp	r0, r6
9002901c:	d05c      	beq.n	900290d8 <HAL_GPIO_Init+0x1e8>
9002901e:	4e3c      	ldr	r6, [pc, #240]	; (90029110 <HAL_GPIO_Init+0x220>)
90029020:	42b0      	cmp	r0, r6
90029022:	d05e      	beq.n	900290e2 <HAL_GPIO_Init+0x1f2>
90029024:	4e3b      	ldr	r6, [pc, #236]	; (90029114 <HAL_GPIO_Init+0x224>)
90029026:	42b0      	cmp	r0, r6
90029028:	d051      	beq.n	900290ce <HAL_GPIO_Init+0x1de>
9002902a:	4e3b      	ldr	r6, [pc, #236]	; (90029118 <HAL_GPIO_Init+0x228>)
9002902c:	42b0      	cmp	r0, r6
9002902e:	d05d      	beq.n	900290ec <HAL_GPIO_Init+0x1fc>
90029030:	4e3a      	ldr	r6, [pc, #232]	; (9002911c <HAL_GPIO_Init+0x22c>)
90029032:	42b0      	cmp	r0, r6
90029034:	d05f      	beq.n	900290f6 <HAL_GPIO_Init+0x206>
90029036:	4e3a      	ldr	r6, [pc, #232]	; (90029120 <HAL_GPIO_Init+0x230>)
90029038:	42b0      	cmp	r0, r6
9002903a:	bf0c      	ite	eq
9002903c:	2609      	moveq	r6, #9
9002903e:	260a      	movne	r6, #10
90029040:	fa06 f202 	lsl.w	r2, r6, r2
90029044:	4315      	orrs	r5, r2
        SYSCFG->EXTICR[position >> 2U] = temp;
90029046:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
90029048:	ea6f 0608 	mvn.w	r6, r8
        temp = EXTI_CurrentCPU->IMR1;
9002904c:	f8db 2000 	ldr.w	r2, [fp]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
90029050:	03e5      	lsls	r5, r4, #15
    position++;
90029052:	f103 0301 	add.w	r3, r3, #1
        temp &= ~(iocurrent);
90029056:	bf54      	ite	pl
90029058:	4032      	andpl	r2, r6
          temp |= iocurrent;
9002905a:	ea48 0202 	orrmi.w	r2, r8, r2
        EXTI_CurrentCPU->IMR1 = temp;
9002905e:	f8cb 2000 	str.w	r2, [fp]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
90029062:	03a2      	lsls	r2, r4, #14
        temp = EXTI_CurrentCPU->EMR1;
90029064:	f8db 5004 	ldr.w	r5, [fp, #4]
        temp = EXTI->RTSR1;
90029068:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9002906c:	bf54      	ite	pl
9002906e:	4035      	andpl	r5, r6
          temp |= iocurrent;
90029070:	ea48 0505 	orrmi.w	r5, r8, r5
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
90029074:	02e7      	lsls	r7, r4, #11
        EXTI_CurrentCPU->EMR1 = temp;
90029076:	f8cb 5004 	str.w	r5, [fp, #4]
        temp = EXTI->RTSR1;
9002907a:	6815      	ldr	r5, [r2, #0]
        EXTI->RTSR1 = temp;
9002907c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90029080:	bf54      	ite	pl
90029082:	4035      	andpl	r5, r6
          temp |= iocurrent;
90029084:	ea48 0505 	orrmi.w	r5, r8, r5
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
90029088:	02a4      	lsls	r4, r4, #10
        EXTI->FTSR1 = temp;
9002908a:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
        EXTI->RTSR1 = temp;
9002908e:	6015      	str	r5, [r2, #0]
        temp = EXTI->FTSR1;
90029090:	6852      	ldr	r2, [r2, #4]
        temp &= ~(iocurrent);
90029092:	bf54      	ite	pl
90029094:	4032      	andpl	r2, r6
          temp |= iocurrent;
90029096:	ea48 0202 	orrmi.w	r2, r8, r2
        EXTI->FTSR1 = temp;
9002909a:	6062      	str	r2, [r4, #4]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9002909c:	fa39 f203 	lsrs.w	r2, r9, r3
900290a0:	f47f af55 	bne.w	90028f4e <HAL_GPIO_Init+0x5e>
  }
}
900290a4:	b005      	add	sp, #20
900290a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900290aa:	40bd      	lsls	r5, r7
900290ac:	43ed      	mvns	r5, r5
900290ae:	e775      	b.n	90028f9c <HAL_GPIO_Init+0xac>
900290b0:	2603      	movs	r6, #3
900290b2:	fa06 f202 	lsl.w	r2, r6, r2
900290b6:	4315      	orrs	r5, r2
900290b8:	e7c5      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290ba:	2601      	movs	r6, #1
900290bc:	fa06 f202 	lsl.w	r2, r6, r2
900290c0:	4315      	orrs	r5, r2
900290c2:	e7c0      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290c4:	2602      	movs	r6, #2
900290c6:	fa06 f202 	lsl.w	r2, r6, r2
900290ca:	4315      	orrs	r5, r2
900290cc:	e7bb      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290ce:	2606      	movs	r6, #6
900290d0:	fa06 f202 	lsl.w	r2, r6, r2
900290d4:	4315      	orrs	r5, r2
900290d6:	e7b6      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290d8:	2604      	movs	r6, #4
900290da:	fa06 f202 	lsl.w	r2, r6, r2
900290de:	4315      	orrs	r5, r2
900290e0:	e7b1      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290e2:	2605      	movs	r6, #5
900290e4:	fa06 f202 	lsl.w	r2, r6, r2
900290e8:	4315      	orrs	r5, r2
900290ea:	e7ac      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290ec:	2607      	movs	r6, #7
900290ee:	fa06 f202 	lsl.w	r2, r6, r2
900290f2:	4315      	orrs	r5, r2
900290f4:	e7a7      	b.n	90029046 <HAL_GPIO_Init+0x156>
900290f6:	2608      	movs	r6, #8
900290f8:	fa06 f202 	lsl.w	r2, r6, r2
900290fc:	4315      	orrs	r5, r2
900290fe:	e7a2      	b.n	90029046 <HAL_GPIO_Init+0x156>
90029100:	58020000 	.word	0x58020000
90029104:	58020800 	.word	0x58020800
90029108:	58020c00 	.word	0x58020c00
9002910c:	58021000 	.word	0x58021000
90029110:	58021400 	.word	0x58021400
90029114:	58021800 	.word	0x58021800
90029118:	58021c00 	.word	0x58021c00
9002911c:	58022000 	.word	0x58022000
90029120:	58022400 	.word	0x58022400
90029124:	58024400 	.word	0x58024400
90029128:	58000080 	.word	0x58000080

9002912c <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9002912c:	2900      	cmp	r1, #0
9002912e:	f000 80ac 	beq.w	9002928a <HAL_GPIO_DeInit+0x15e>
  uint32_t position = 0x00U;
90029132:	2300      	movs	r3, #0
{
90029134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029138:	f8df a170 	ldr.w	sl, [pc, #368]	; 900292ac <HAL_GPIO_DeInit+0x180>
9002913c:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9002913e:	f8df 9170 	ldr.w	r9, [pc, #368]	; 900292b0 <HAL_GPIO_DeInit+0x184>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90029142:	f8df 8170 	ldr.w	r8, [pc, #368]	; 900292b4 <HAL_GPIO_DeInit+0x188>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90029146:	f8df b170 	ldr.w	fp, [pc, #368]	; 900292b8 <HAL_GPIO_DeInit+0x18c>
    iocurrent = GPIO_Pin & (1UL << position) ;
9002914a:	f04f 0e01 	mov.w	lr, #1
9002914e:	fa0e f403 	lsl.w	r4, lr, r3
    if (iocurrent != 0x00U)
90029152:	ea14 0c01 	ands.w	ip, r4, r1
90029156:	d073      	beq.n	90029240 <HAL_GPIO_DeInit+0x114>
      tmp = SYSCFG->EXTICR[position >> 2U];
90029158:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9002915c:	f003 0203 	and.w	r2, r3, #3
90029160:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90029162:	4548      	cmp	r0, r9
90029164:	4455      	add	r5, sl
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90029166:	ea4f 0282 	mov.w	r2, r2, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
9002916a:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9002916c:	fa06 f602 	lsl.w	r6, r6, r2
90029170:	ea07 0706 	and.w	r7, r7, r6
90029174:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90029176:	d023      	beq.n	900291c0 <HAL_GPIO_DeInit+0x94>
90029178:	4558      	cmp	r0, fp
9002917a:	d06a      	beq.n	90029252 <HAL_GPIO_DeInit+0x126>
9002917c:	4f46      	ldr	r7, [pc, #280]	; (90029298 <HAL_GPIO_DeInit+0x16c>)
9002917e:	42b8      	cmp	r0, r7
90029180:	d06a      	beq.n	90029258 <HAL_GPIO_DeInit+0x12c>
90029182:	4f46      	ldr	r7, [pc, #280]	; (9002929c <HAL_GPIO_DeInit+0x170>)
90029184:	42b8      	cmp	r0, r7
90029186:	d071      	beq.n	9002926c <HAL_GPIO_DeInit+0x140>
90029188:	4f45      	ldr	r7, [pc, #276]	; (900292a0 <HAL_GPIO_DeInit+0x174>)
9002918a:	42b8      	cmp	r0, r7
9002918c:	d073      	beq.n	90029276 <HAL_GPIO_DeInit+0x14a>
9002918e:	4f45      	ldr	r7, [pc, #276]	; (900292a4 <HAL_GPIO_DeInit+0x178>)
90029190:	42b8      	cmp	r0, r7
90029192:	d066      	beq.n	90029262 <HAL_GPIO_DeInit+0x136>
90029194:	4f44      	ldr	r7, [pc, #272]	; (900292a8 <HAL_GPIO_DeInit+0x17c>)
90029196:	42b8      	cmp	r0, r7
90029198:	d059      	beq.n	9002924e <HAL_GPIO_DeInit+0x122>
9002919a:	f8df e120 	ldr.w	lr, [pc, #288]	; 900292bc <HAL_GPIO_DeInit+0x190>
9002919e:	4570      	cmp	r0, lr
900291a0:	d074      	beq.n	9002928c <HAL_GPIO_DeInit+0x160>
900291a2:	f8df e11c 	ldr.w	lr, [pc, #284]	; 900292c0 <HAL_GPIO_DeInit+0x194>
900291a6:	4570      	cmp	r0, lr
900291a8:	d06a      	beq.n	90029280 <HAL_GPIO_DeInit+0x154>
900291aa:	f8df e118 	ldr.w	lr, [pc, #280]	; 900292c4 <HAL_GPIO_DeInit+0x198>
900291ae:	4570      	cmp	r0, lr
900291b0:	bf14      	ite	ne
900291b2:	f04f 0e0a 	movne.w	lr, #10
900291b6:	f04f 0e09 	moveq.w	lr, #9
900291ba:	fa0e f202 	lsl.w	r2, lr, r2
900291be:	e000      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
900291c0:	2200      	movs	r2, #0
900291c2:	9f01      	ldr	r7, [sp, #4]
900291c4:	4297      	cmp	r7, r2
900291c6:	d119      	bne.n	900291fc <HAL_GPIO_DeInit+0xd0>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900291c8:	f8d8 7000 	ldr.w	r7, [r8]
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);

        /* Clear Rising Falling edge configuration */
        EXTI->RTSR1 &= ~(iocurrent);
900291cc:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900291d0:	ea27 070c 	bic.w	r7, r7, ip
900291d4:	f8c8 7000 	str.w	r7, [r8]
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900291d8:	f8d8 7004 	ldr.w	r7, [r8, #4]
900291dc:	ea27 070c 	bic.w	r7, r7, ip
900291e0:	f8c8 7004 	str.w	r7, [r8, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900291e4:	6817      	ldr	r7, [r2, #0]
900291e6:	ea27 070c 	bic.w	r7, r7, ip
900291ea:	6017      	str	r7, [r2, #0]
        EXTI->FTSR1 &= ~(iocurrent);
900291ec:	6857      	ldr	r7, [r2, #4]
900291ee:	ea27 070c 	bic.w	r7, r7, ip
900291f2:	6057      	str	r7, [r2, #4]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900291f4:	68aa      	ldr	r2, [r5, #8]
900291f6:	ea22 0606 	bic.w	r6, r2, r6
900291fa:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900291fc:	005a      	lsls	r2, r3, #1
900291fe:	2603      	movs	r6, #3
90029200:	f8d0 c000 	ldr.w	ip, [r0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90029204:	270f      	movs	r7, #15
90029206:	fa23 f506 	lsr.w	r5, r3, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9002920a:	4096      	lsls	r6, r2
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9002920c:	f003 0207 	and.w	r2, r3, #7
90029210:	eb00 0585 	add.w	r5, r0, r5, lsl #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90029214:	ea4c 0c06 	orr.w	ip, ip, r6
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90029218:	0092      	lsls	r2, r2, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9002921a:	f8c0 c000 	str.w	ip, [r0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9002921e:	4097      	lsls	r7, r2
90029220:	6a2a      	ldr	r2, [r5, #32]
90029222:	ea22 0207 	bic.w	r2, r2, r7
90029226:	622a      	str	r2, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90029228:	68c2      	ldr	r2, [r0, #12]
9002922a:	ea22 0206 	bic.w	r2, r2, r6
9002922e:	60c2      	str	r2, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90029230:	6842      	ldr	r2, [r0, #4]
90029232:	ea22 0404 	bic.w	r4, r2, r4
90029236:	6044      	str	r4, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90029238:	6882      	ldr	r2, [r0, #8]
9002923a:	ea22 0606 	bic.w	r6, r2, r6
9002923e:	6086      	str	r6, [r0, #8]
    }

    position++;
90029240:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90029242:	fa31 f203 	lsrs.w	r2, r1, r3
90029246:	d180      	bne.n	9002914a <HAL_GPIO_DeInit+0x1e>
  }
}
90029248:	b003      	add	sp, #12
9002924a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002924e:	f04f 0e06 	mov.w	lr, #6
90029252:	fa0e f202 	lsl.w	r2, lr, r2
90029256:	e7b4      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
90029258:	f04f 0e02 	mov.w	lr, #2
9002925c:	fa0e f202 	lsl.w	r2, lr, r2
90029260:	e7af      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
90029262:	f04f 0e05 	mov.w	lr, #5
90029266:	fa0e f202 	lsl.w	r2, lr, r2
9002926a:	e7aa      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
9002926c:	f04f 0e03 	mov.w	lr, #3
90029270:	fa0e f202 	lsl.w	r2, lr, r2
90029274:	e7a5      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
90029276:	f04f 0e04 	mov.w	lr, #4
9002927a:	fa0e f202 	lsl.w	r2, lr, r2
9002927e:	e7a0      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
90029280:	f04f 0e08 	mov.w	lr, #8
90029284:	fa0e f202 	lsl.w	r2, lr, r2
90029288:	e79b      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
9002928a:	4770      	bx	lr
9002928c:	f04f 0e07 	mov.w	lr, #7
90029290:	fa0e f202 	lsl.w	r2, lr, r2
90029294:	e795      	b.n	900291c2 <HAL_GPIO_DeInit+0x96>
90029296:	bf00      	nop
90029298:	58020800 	.word	0x58020800
9002929c:	58020c00 	.word	0x58020c00
900292a0:	58021000 	.word	0x58021000
900292a4:	58021400 	.word	0x58021400
900292a8:	58021800 	.word	0x58021800
900292ac:	58000400 	.word	0x58000400
900292b0:	58020000 	.word	0x58020000
900292b4:	58000080 	.word	0x58000080
900292b8:	58020400 	.word	0x58020400
900292bc:	58021c00 	.word	0x58021c00
900292c0:	58022000 	.word	0x58022000
900292c4:	58022400 	.word	0x58022400

900292c8 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900292c8:	6903      	ldr	r3, [r0, #16]
900292ca:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900292cc:	bf14      	ite	ne
900292ce:	2001      	movne	r0, #1
900292d0:	2000      	moveq	r0, #0
900292d2:	4770      	bx	lr

900292d4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900292d4:	b902      	cbnz	r2, 900292d8 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900292d6:	0409      	lsls	r1, r1, #16
900292d8:	6181      	str	r1, [r0, #24]
  }
}
900292da:	4770      	bx	lr

900292dc <HAL_GPIO_EXTI_Callback>:
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
900292dc:	4770      	bx	lr
900292de:	bf00      	nop

900292e0 <HAL_GPIO_EXTI_IRQHandler>:
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00U)
900292e0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
900292e4:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
900292e8:	4201      	tst	r1, r0
900292ea:	d100      	bne.n	900292ee <HAL_GPIO_EXTI_IRQHandler+0xe>
900292ec:	4770      	bx	lr
{
900292ee:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
900292f0:	f8c2 0088 	str.w	r0, [r2, #136]	; 0x88
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
900292f4:	f7ff fff2 	bl	900292dc <HAL_GPIO_EXTI_Callback>
}
900292f8:	bd08      	pop	{r3, pc}
900292fa:	bf00      	nop

900292fc <I2C_IsAcknowledgeFailed.part.0>:
  *                the configuration information for the specified I2C.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
900292fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900292fe:	4606      	mov	r6, r0
90029300:	460d      	mov	r5, r1
90029302:	4617      	mov	r7, r2
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
  {
    /* Wait until STOP Flag is reset */
    /* AutoEnd should be initiate after AF */
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90029304:	6834      	ldr	r4, [r6, #0]
90029306:	e001      	b.n	9002930c <I2C_IsAcknowledgeFailed.part.0+0x10>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
90029308:	1c68      	adds	r0, r5, #1
9002930a:	d120      	bne.n	9002934e <I2C_IsAcknowledgeFailed.part.0+0x52>
    while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9002930c:	69a3      	ldr	r3, [r4, #24]
9002930e:	0699      	lsls	r1, r3, #26
90029310:	d5fa      	bpl.n	90029308 <I2C_IsAcknowledgeFailed.part.0+0xc>
        }
      }
    }

    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90029312:	2210      	movs	r2, #16

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90029314:	2320      	movs	r3, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90029316:	61e2      	str	r2, [r4, #28]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90029318:	61e3      	str	r3, [r4, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9002931a:	69a3      	ldr	r3, [r4, #24]
9002931c:	079a      	lsls	r2, r3, #30
9002931e:	d501      	bpl.n	90029324 <I2C_IsAcknowledgeFailed.part.0+0x28>
    hi2c->Instance->TXDR = 0x00U;
90029320:	2300      	movs	r3, #0
90029322:	62a3      	str	r3, [r4, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90029324:	69a3      	ldr	r3, [r4, #24]
90029326:	07db      	lsls	r3, r3, #31
90029328:	d524      	bpl.n	90029374 <I2C_IsAcknowledgeFailed.part.0+0x78>

    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9002932a:	6863      	ldr	r3, [r4, #4]

    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9002932c:	2200      	movs	r2, #0
    I2C_RESET_CR2(hi2c);
9002932e:	4814      	ldr	r0, [pc, #80]	; (90029380 <I2C_IsAcknowledgeFailed.part.0+0x84>)
    hi2c->State = HAL_I2C_STATE_READY;
90029330:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90029332:	4003      	ands	r3, r0
90029334:	6063      	str	r3, [r4, #4]
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
90029336:	6c73      	ldr	r3, [r6, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90029338:	f886 2040 	strb.w	r2, [r6, #64]	; 0x40
    hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
9002933c:	f043 0304 	orr.w	r3, r3, #4
90029340:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90029342:	f886 1041 	strb.w	r1, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90029346:	f886 2042 	strb.w	r2, [r6, #66]	; 0x42

    return HAL_ERROR;
  }
  return HAL_OK;
}
9002934a:	2001      	movs	r0, #1
9002934c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9002934e:	f7ff fa1d 	bl	9002878c <HAL_GetTick>
90029352:	1bc0      	subs	r0, r0, r7
90029354:	4285      	cmp	r5, r0
90029356:	d301      	bcc.n	9002935c <I2C_IsAcknowledgeFailed.part.0+0x60>
90029358:	2d00      	cmp	r5, #0
9002935a:	d1d3      	bne.n	90029304 <I2C_IsAcknowledgeFailed.part.0+0x8>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9002935c:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9002935e:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90029360:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90029362:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90029364:	f886 2040 	strb.w	r2, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90029368:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9002936a:	f886 1041 	strb.w	r1, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
9002936e:	f886 2042 	strb.w	r2, [r6, #66]	; 0x42
          return HAL_ERROR;
90029372:	e7ea      	b.n	9002934a <I2C_IsAcknowledgeFailed.part.0+0x4e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90029374:	69a3      	ldr	r3, [r4, #24]
90029376:	f043 0301 	orr.w	r3, r3, #1
9002937a:	61a3      	str	r3, [r4, #24]
9002937c:	e7d5      	b.n	9002932a <I2C_IsAcknowledgeFailed.part.0+0x2e>
9002937e:	bf00      	nop
90029380:	fe00e800 	.word	0xfe00e800

90029384 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90029384:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029386:	4605      	mov	r5, r0
90029388:	460c      	mov	r4, r1
9002938a:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9002938c:	e007      	b.n	9002939e <I2C_WaitOnTXISFlagUntilTimeout+0x1a>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
9002938e:	699b      	ldr	r3, [r3, #24]
90029390:	06de      	lsls	r6, r3, #27
90029392:	d502      	bpl.n	9002939a <I2C_WaitOnTXISFlagUntilTimeout+0x16>
90029394:	f7ff ffb2 	bl	900292fc <I2C_IsAcknowledgeFailed.part.0>
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
90029398:	b9f0      	cbnz	r0, 900293d8 <I2C_WaitOnTXISFlagUntilTimeout+0x54>
    if (Timeout != HAL_MAX_DELAY)
9002939a:	1c63      	adds	r3, r4, #1
9002939c:	d108      	bne.n	900293b0 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
9002939e:	682b      	ldr	r3, [r5, #0]
900293a0:	463a      	mov	r2, r7
900293a2:	4621      	mov	r1, r4
900293a4:	4628      	mov	r0, r5
900293a6:	699e      	ldr	r6, [r3, #24]
900293a8:	07b6      	lsls	r6, r6, #30
900293aa:	d5f0      	bpl.n	9002938e <I2C_WaitOnTXISFlagUntilTimeout+0xa>
  return HAL_OK;
900293ac:	2000      	movs	r0, #0
}
900293ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900293b0:	f7ff f9ec 	bl	9002878c <HAL_GetTick>
900293b4:	1bc0      	subs	r0, r0, r7
900293b6:	42a0      	cmp	r0, r4
900293b8:	d801      	bhi.n	900293be <I2C_WaitOnTXISFlagUntilTimeout+0x3a>
900293ba:	2c00      	cmp	r4, #0
900293bc:	d1ef      	bne.n	9002939e <I2C_WaitOnTXISFlagUntilTimeout+0x1a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900293be:	6c6b      	ldr	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
900293c0:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
900293c2:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
900293c4:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900293c6:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
900293c8:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900293cc:	646b      	str	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
900293ce:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
900293d2:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
}
900293d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      return HAL_ERROR;
900293d8:	2001      	movs	r0, #1
}
900293da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900293dc <I2C_WaitOnSTOPFlagUntilTimeout>:
{
900293dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900293de:	4605      	mov	r5, r0
900293e0:	460c      	mov	r4, r1
900293e2:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900293e4:	e00b      	b.n	900293fe <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
900293e6:	699b      	ldr	r3, [r3, #24]
900293e8:	06db      	lsls	r3, r3, #27
900293ea:	d502      	bpl.n	900293f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
900293ec:	f7ff ff86 	bl	900292fc <I2C_IsAcknowledgeFailed.part.0>
    if (I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
900293f0:	b9d8      	cbnz	r0, 9002942a <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900293f2:	f7ff f9cb 	bl	9002878c <HAL_GetTick>
900293f6:	1b80      	subs	r0, r0, r6
900293f8:	42a0      	cmp	r0, r4
900293fa:	d809      	bhi.n	90029410 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
900293fc:	b144      	cbz	r4, 90029410 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900293fe:	682b      	ldr	r3, [r5, #0]
90029400:	4632      	mov	r2, r6
90029402:	4621      	mov	r1, r4
90029404:	4628      	mov	r0, r5
90029406:	699f      	ldr	r7, [r3, #24]
90029408:	06bf      	lsls	r7, r7, #26
9002940a:	d5ec      	bpl.n	900293e6 <I2C_WaitOnSTOPFlagUntilTimeout+0xa>
  return HAL_OK;
9002940c:	2000      	movs	r0, #0
}
9002940e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90029410:	6c6b      	ldr	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90029412:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
90029414:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
90029416:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90029418:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
9002941a:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9002941e:	646b      	str	r3, [r5, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90029420:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90029424:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
}
90029428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      return HAL_ERROR;
9002942a:	2001      	movs	r0, #1
}
9002942c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002942e:	bf00      	nop

90029430 <I2C_WaitOnFlagUntilTimeout>:
{
90029430:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029434:	4680      	mov	r8, r0
90029436:	460f      	mov	r7, r1
90029438:	4616      	mov	r6, r2
9002943a:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9002943c:	f8d8 3000 	ldr.w	r3, [r8]
90029440:	e001      	b.n	90029446 <I2C_WaitOnFlagUntilTimeout+0x16>
    if (Timeout != HAL_MAX_DELAY)
90029442:	1c6a      	adds	r2, r5, #1
90029444:	d10a      	bne.n	9002945c <I2C_WaitOnFlagUntilTimeout+0x2c>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90029446:	699c      	ldr	r4, [r3, #24]
90029448:	ea37 0204 	bics.w	r2, r7, r4
9002944c:	bf0c      	ite	eq
9002944e:	2401      	moveq	r4, #1
90029450:	2400      	movne	r4, #0
90029452:	42b4      	cmp	r4, r6
90029454:	d0f5      	beq.n	90029442 <I2C_WaitOnFlagUntilTimeout+0x12>
  return HAL_OK;
90029456:	2000      	movs	r0, #0
}
90029458:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9002945c:	f7ff f996 	bl	9002878c <HAL_GetTick>
90029460:	9b06      	ldr	r3, [sp, #24]
90029462:	1ac0      	subs	r0, r0, r3
90029464:	42a8      	cmp	r0, r5
90029466:	d801      	bhi.n	9002946c <I2C_WaitOnFlagUntilTimeout+0x3c>
90029468:	2d00      	cmp	r5, #0
9002946a:	d1e7      	bne.n	9002943c <I2C_WaitOnFlagUntilTimeout+0xc>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9002946c:	f8d8 3044 	ldr.w	r3, [r8, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90029470:	2120      	movs	r1, #32
        hi2c->Mode = HAL_I2C_MODE_NONE;
90029472:	2200      	movs	r2, #0
        __HAL_UNLOCK(hi2c);
90029474:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90029476:	430b      	orrs	r3, r1
        __HAL_UNLOCK(hi2c);
90029478:	f888 2040 	strb.w	r2, [r8, #64]	; 0x40
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9002947c:	f8c8 3044 	str.w	r3, [r8, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90029480:	f888 1041 	strb.w	r1, [r8, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90029484:	f888 2042 	strb.w	r2, [r8, #66]	; 0x42
        return HAL_ERROR;
90029488:	e7e6      	b.n	90029458 <I2C_WaitOnFlagUntilTimeout+0x28>
9002948a:	bf00      	nop

9002948c <I2C_RequestMemoryWrite>:
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2,
9002948c:	f8d0 c000 	ldr.w	ip, [r0]
90029490:	f3c1 0109 	ubfx	r1, r1, #0, #10
{
90029494:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  MODIFY_REG(hi2c->Instance->CR2,
90029498:	4f1c      	ldr	r7, [pc, #112]	; (9002950c <I2C_RequestMemoryWrite+0x80>)
9002949a:	fa5f fe83 	uxtb.w	lr, r3
{
9002949e:	4615      	mov	r5, r2
  MODIFY_REG(hi2c->Instance->CR2,
900294a0:	f8dc 2004 	ldr.w	r2, [ip, #4]
900294a4:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
{
900294a8:	b082      	sub	sp, #8
  MODIFY_REG(hi2c->Instance->CR2,
900294aa:	403a      	ands	r2, r7
{
900294ac:	461e      	mov	r6, r3
  MODIFY_REG(hi2c->Instance->CR2,
900294ae:	4b18      	ldr	r3, [pc, #96]	; (90029510 <I2C_RequestMemoryWrite+0x84>)
{
900294b0:	4604      	mov	r4, r0
  MODIFY_REG(hi2c->Instance->CR2,
900294b2:	4311      	orrs	r1, r2
{
900294b4:	9f08      	ldr	r7, [sp, #32]
900294b6:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
  MODIFY_REG(hi2c->Instance->CR2,
900294ba:	430b      	orrs	r3, r1
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900294bc:	4639      	mov	r1, r7
900294be:	4642      	mov	r2, r8
  MODIFY_REG(hi2c->Instance->CR2,
900294c0:	f8cc 3004 	str.w	r3, [ip, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900294c4:	f7ff ff5e 	bl	90029384 <I2C_WaitOnTXISFlagUntilTimeout>
900294c8:	b9e0      	cbnz	r0, 90029504 <I2C_RequestMemoryWrite+0x78>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900294ca:	2e01      	cmp	r6, #1
900294cc:	d110      	bne.n	900294f0 <I2C_RequestMemoryWrite+0x64>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900294ce:	6823      	ldr	r3, [r4, #0]
900294d0:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900294d2:	4620      	mov	r0, r4
900294d4:	2200      	movs	r2, #0
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900294d6:	629d      	str	r5, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
900294d8:	2180      	movs	r1, #128	; 0x80
900294da:	463b      	mov	r3, r7
900294dc:	f8cd 8000 	str.w	r8, [sp]
900294e0:	f7ff ffa6 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
900294e4:	3800      	subs	r0, #0
900294e6:	bf18      	it	ne
900294e8:	2001      	movne	r0, #1
}
900294ea:	b002      	add	sp, #8
900294ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900294f0:	6820      	ldr	r0, [r4, #0]
900294f2:	0a2b      	lsrs	r3, r5, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900294f4:	4642      	mov	r2, r8
900294f6:	4639      	mov	r1, r7
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900294f8:	6283      	str	r3, [r0, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900294fa:	4620      	mov	r0, r4
900294fc:	f7ff ff42 	bl	90029384 <I2C_WaitOnTXISFlagUntilTimeout>
90029500:	2800      	cmp	r0, #0
90029502:	d0e4      	beq.n	900294ce <I2C_RequestMemoryWrite+0x42>
    return HAL_ERROR;
90029504:	2001      	movs	r0, #1
}
90029506:	b002      	add	sp, #8
90029508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002950c:	fc009800 	.word	0xfc009800
90029510:	81002000 	.word	0x81002000

90029514 <I2C_RequestMemoryRead>:
  MODIFY_REG(hi2c->Instance->CR2,
90029514:	f8d0 c000 	ldr.w	ip, [r0]
90029518:	f3c1 0109 	ubfx	r1, r1, #0, #10
{
9002951c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  MODIFY_REG(hi2c->Instance->CR2,
90029520:	4f1c      	ldr	r7, [pc, #112]	; (90029594 <I2C_RequestMemoryRead+0x80>)
90029522:	fa5f fe83 	uxtb.w	lr, r3
{
90029526:	4615      	mov	r5, r2
  MODIFY_REG(hi2c->Instance->CR2,
90029528:	f8dc 2004 	ldr.w	r2, [ip, #4]
9002952c:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
{
90029530:	b082      	sub	sp, #8
  MODIFY_REG(hi2c->Instance->CR2,
90029532:	403a      	ands	r2, r7
{
90029534:	461e      	mov	r6, r3
  MODIFY_REG(hi2c->Instance->CR2,
90029536:	4b18      	ldr	r3, [pc, #96]	; (90029598 <I2C_RequestMemoryRead+0x84>)
{
90029538:	4604      	mov	r4, r0
  MODIFY_REG(hi2c->Instance->CR2,
9002953a:	4311      	orrs	r1, r2
{
9002953c:	9f08      	ldr	r7, [sp, #32]
9002953e:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
  MODIFY_REG(hi2c->Instance->CR2,
90029542:	430b      	orrs	r3, r1
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90029544:	4639      	mov	r1, r7
90029546:	4642      	mov	r2, r8
  MODIFY_REG(hi2c->Instance->CR2,
90029548:	f8cc 3004 	str.w	r3, [ip, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9002954c:	f7ff ff1a 	bl	90029384 <I2C_WaitOnTXISFlagUntilTimeout>
90029550:	b9e0      	cbnz	r0, 9002958c <I2C_RequestMemoryRead+0x78>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90029552:	2e01      	cmp	r6, #1
90029554:	d110      	bne.n	90029578 <I2C_RequestMemoryRead+0x64>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90029556:	6823      	ldr	r3, [r4, #0]
90029558:	b2ed      	uxtb	r5, r5
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
9002955a:	4620      	mov	r0, r4
9002955c:	2200      	movs	r2, #0
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9002955e:	629d      	str	r5, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90029560:	2140      	movs	r1, #64	; 0x40
90029562:	463b      	mov	r3, r7
90029564:	f8cd 8000 	str.w	r8, [sp]
90029568:	f7ff ff62 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
9002956c:	3800      	subs	r0, #0
9002956e:	bf18      	it	ne
90029570:	2001      	movne	r0, #1
}
90029572:	b002      	add	sp, #8
90029574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90029578:	6820      	ldr	r0, [r4, #0]
9002957a:	0a2b      	lsrs	r3, r5, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9002957c:	4642      	mov	r2, r8
9002957e:	4639      	mov	r1, r7
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90029580:	6283      	str	r3, [r0, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90029582:	4620      	mov	r0, r4
90029584:	f7ff fefe 	bl	90029384 <I2C_WaitOnTXISFlagUntilTimeout>
90029588:	2800      	cmp	r0, #0
9002958a:	d0e4      	beq.n	90029556 <I2C_RequestMemoryRead+0x42>
    return HAL_ERROR;
9002958c:	2001      	movs	r0, #1
}
9002958e:	b002      	add	sp, #8
90029590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90029594:	fc009800 	.word	0xfc009800
90029598:	80002000 	.word	0x80002000

9002959c <HAL_I2C_MspInit>:
}
9002959c:	4770      	bx	lr
9002959e:	bf00      	nop

900295a0 <HAL_I2C_Init>:
  if (hi2c == NULL)
900295a0:	2800      	cmp	r0, #0
900295a2:	d04d      	beq.n	90029640 <HAL_I2C_Init+0xa0>
{
900295a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900295a6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
900295aa:	4604      	mov	r4, r0
900295ac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900295b0:	2b00      	cmp	r3, #0
900295b2:	d040      	beq.n	90029636 <HAL_I2C_Init+0x96>
  hi2c->State = HAL_I2C_STATE_BUSY;
900295b4:	2124      	movs	r1, #36	; 0x24
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900295b6:	68e0      	ldr	r0, [r4, #12]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900295b8:	e9d4 3200 	ldrd	r3, r2, [r4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900295bc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900295c0:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900295c2:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900295c4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  __HAL_I2C_DISABLE(hi2c);
900295c8:	f021 0101 	bic.w	r1, r1, #1
900295cc:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900295ce:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900295d0:	689a      	ldr	r2, [r3, #8]
900295d2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900295d6:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900295d8:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900295da:	d028      	beq.n	9002962e <HAL_I2C_Init+0x8e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900295dc:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900295e0:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900295e2:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900295e4:	d102      	bne.n	900295ec <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
900295e6:	f44f 6200 	mov.w	r2, #2048	; 0x800
900295ea:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900295ec:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900295ee:	2100      	movs	r1, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900295f0:	4814      	ldr	r0, [pc, #80]	; (90029644 <HAL_I2C_Init+0xa4>)
  hi2c->State = HAL_I2C_STATE_READY;
900295f2:	2720      	movs	r7, #32
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
900295f4:	69a6      	ldr	r6, [r4, #24]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900295f6:	4310      	orrs	r0, r2
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
900295f8:	e9d4 2504 	ldrd	r2, r5, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900295fc:	6058      	str	r0, [r3, #4]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
900295fe:	432a      	orrs	r2, r5
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90029600:	68d8      	ldr	r0, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90029602:	69e5      	ldr	r5, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
90029604:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90029608:	6a26      	ldr	r6, [r4, #32]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
9002960a:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9002960e:	4335      	orrs	r5, r6
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90029610:	60d8      	str	r0, [r3, #12]
  return HAL_OK;
90029612:	4608      	mov	r0, r1
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddress2Masks << 8));
90029614:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90029616:	601d      	str	r5, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90029618:	681a      	ldr	r2, [r3, #0]
9002961a:	f042 0201 	orr.w	r2, r2, #1
9002961e:	601a      	str	r2, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90029620:	6461      	str	r1, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90029622:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90029626:	6321      	str	r1, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90029628:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
}
9002962c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9002962e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90029632:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90029634:	e7da      	b.n	900295ec <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
90029636:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
9002963a:	f7ff ffaf 	bl	9002959c <HAL_I2C_MspInit>
9002963e:	e7b9      	b.n	900295b4 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90029640:	2001      	movs	r0, #1
}
90029642:	4770      	bx	lr
90029644:	02008000 	.word	0x02008000

90029648 <HAL_I2C_MspDeInit>:
90029648:	4770      	bx	lr
9002964a:	bf00      	nop

9002964c <HAL_I2C_DeInit>:
  if (hi2c == NULL)
9002964c:	b1b0      	cbz	r0, 9002967c <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
9002964e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90029650:	2324      	movs	r3, #36	; 0x24
{
90029652:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
90029654:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90029658:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
9002965a:	6813      	ldr	r3, [r2, #0]
9002965c:	f023 0301 	bic.w	r3, r3, #1
90029660:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
90029662:	f7ff fff1 	bl	90029648 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90029666:	2300      	movs	r3, #0
90029668:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
9002966a:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
9002966c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
90029670:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
90029674:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90029676:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
9002967a:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
9002967c:	2001      	movs	r0, #1
}
9002967e:	4770      	bx	lr

90029680 <HAL_I2C_Mem_Write>:
{
90029680:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029684:	461f      	mov	r7, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90029686:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9002968a:	b085      	sub	sp, #20
  if (hi2c->State == HAL_I2C_STATE_READY)
9002968c:	2b20      	cmp	r3, #32
{
9002968e:	f8bd b03c 	ldrh.w	fp, [sp, #60]	; 0x3c
90029692:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
  if (hi2c->State == HAL_I2C_STATE_READY)
90029696:	d128      	bne.n	900296ea <HAL_I2C_Mem_Write+0x6a>
    if ((pData == NULL) || (Size == 0U))
90029698:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002969a:	4604      	mov	r4, r0
9002969c:	b1f3      	cbz	r3, 900296dc <HAL_I2C_Mem_Write+0x5c>
9002969e:	f1bb 0f00 	cmp.w	fp, #0
900296a2:	d01b      	beq.n	900296dc <HAL_I2C_Mem_Write+0x5c>
    __HAL_LOCK(hi2c);
900296a4:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
900296a8:	2b01      	cmp	r3, #1
900296aa:	d01e      	beq.n	900296ea <HAL_I2C_Mem_Write+0x6a>
900296ac:	f04f 0a01 	mov.w	sl, #1
900296b0:	460d      	mov	r5, r1
900296b2:	4616      	mov	r6, r2
900296b4:	f880 a040 	strb.w	sl, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
900296b8:	f7ff f868 	bl	9002878c <HAL_GetTick>
900296bc:	4680      	mov	r8, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900296be:	4652      	mov	r2, sl
900296c0:	2319      	movs	r3, #25
900296c2:	f44f 4100 	mov.w	r1, #32768	; 0x8000
900296c6:	4620      	mov	r0, r4
900296c8:	f8cd 8000 	str.w	r8, [sp]
900296cc:	f7ff feb0 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
900296d0:	9003      	str	r0, [sp, #12]
900296d2:	b170      	cbz	r0, 900296f2 <HAL_I2C_Mem_Write+0x72>
      return HAL_ERROR;
900296d4:	2001      	movs	r0, #1
}
900296d6:	b005      	add	sp, #20
900296d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900296dc:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900296e0:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900296e2:	6463      	str	r3, [r4, #68]	; 0x44
}
900296e4:	b005      	add	sp, #20
900296e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
900296ea:	2002      	movs	r0, #2
}
900296ec:	b005      	add	sp, #20
900296ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900296f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900296f4:	2121      	movs	r1, #33	; 0x21
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900296f6:	2040      	movs	r0, #64	; 0x40
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900296f8:	4632      	mov	r2, r6
    hi2c->pBuffPtr  = pData;
900296fa:	6263      	str	r3, [r4, #36]	; 0x24
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900296fc:	463b      	mov	r3, r7
    hi2c->XferISR   = NULL;
900296fe:	9f03      	ldr	r7, [sp, #12]
90029700:	6367      	str	r7, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90029702:	e9cd 9800 	strd	r9, r8, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90029706:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
9002970a:	4629      	mov	r1, r5
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9002970c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90029710:	4620      	mov	r0, r4
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90029712:	6467      	str	r7, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
90029714:	f8a4 b02a 	strh.w	fp, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
90029718:	f7ff feb8 	bl	9002948c <I2C_RequestMemoryWrite>
9002971c:	2800      	cmp	r0, #0
9002971e:	d15a      	bne.n	900297d6 <HAL_I2C_Mem_Write+0x156>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90029720:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90029722:	b29b      	uxth	r3, r3
90029724:	2bff      	cmp	r3, #255	; 0xff
90029726:	d95b      	bls.n	900297e0 <HAL_I2C_Mem_Write+0x160>
  MODIFY_REG(hi2c->Instance->CR2,
90029728:	6821      	ldr	r1, [r4, #0]
9002972a:	f3c5 0009 	ubfx	r0, r5, #0, #10
9002972e:	4e41      	ldr	r6, [pc, #260]	; (90029834 <HAL_I2C_Mem_Write+0x1b4>)
      hi2c->XferSize = MAX_NBYTE_SIZE;
90029730:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
90029732:	684b      	ldr	r3, [r1, #4]
90029734:	4605      	mov	r5, r0
      hi2c->XferSize = MAX_NBYTE_SIZE;
90029736:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
90029738:	4033      	ands	r3, r6
9002973a:	4a3f      	ldr	r2, [pc, #252]	; (90029838 <HAL_I2C_Mem_Write+0x1b8>)
9002973c:	4303      	orrs	r3, r0
9002973e:	431a      	orrs	r2, r3
90029740:	604a      	str	r2, [r1, #4]
90029742:	4e3c      	ldr	r6, [pc, #240]	; (90029834 <HAL_I2C_Mem_Write+0x1b4>)
90029744:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 90029838 <HAL_I2C_Mem_Write+0x1b8>
90029748:	e003      	b.n	90029752 <HAL_I2C_Mem_Write+0xd2>
    } while (hi2c->XferCount > 0U);
9002974a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9002974c:	b29b      	uxth	r3, r3
9002974e:	2b00      	cmp	r3, #0
90029750:	d059      	beq.n	90029806 <HAL_I2C_Mem_Write+0x186>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90029752:	4642      	mov	r2, r8
90029754:	4649      	mov	r1, r9
90029756:	4620      	mov	r0, r4
90029758:	f7ff fe14 	bl	90029384 <I2C_WaitOnTXISFlagUntilTimeout>
9002975c:	2800      	cmp	r0, #0
9002975e:	d1b9      	bne.n	900296d4 <HAL_I2C_Mem_Write+0x54>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90029760:	6a62      	ldr	r2, [r4, #36]	; 0x24
90029762:	6827      	ldr	r7, [r4, #0]
90029764:	f812 1b01 	ldrb.w	r1, [r2], #1
      hi2c->XferSize--;
90029768:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9002976a:	62b9      	str	r1, [r7, #40]	; 0x28
      hi2c->XferCount--;
9002976c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9002976e:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
90029770:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
90029772:	3901      	subs	r1, #1
      hi2c->XferSize--;
90029774:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90029776:	b289      	uxth	r1, r1
      hi2c->XferSize--;
90029778:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
9002977a:	8561      	strh	r1, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9002977c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
9002977e:	b292      	uxth	r2, r2
90029780:	2b00      	cmp	r3, #0
90029782:	d1e2      	bne.n	9002974a <HAL_I2C_Mem_Write+0xca>
90029784:	2a00      	cmp	r2, #0
90029786:	d0e0      	beq.n	9002974a <HAL_I2C_Mem_Write+0xca>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90029788:	4602      	mov	r2, r0
9002978a:	464b      	mov	r3, r9
9002978c:	2180      	movs	r1, #128	; 0x80
9002978e:	4620      	mov	r0, r4
90029790:	f8cd 8000 	str.w	r8, [sp]
90029794:	f7ff fe4c 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90029798:	22ff      	movs	r2, #255	; 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9002979a:	2800      	cmp	r0, #0
9002979c:	d19a      	bne.n	900296d4 <HAL_I2C_Mem_Write+0x54>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
9002979e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900297a0:	b29b      	uxth	r3, r3
900297a2:	4293      	cmp	r3, r2
900297a4:	d908      	bls.n	900297b8 <HAL_I2C_Mem_Write+0x138>
  MODIFY_REG(hi2c->Instance->CR2,
900297a6:	6821      	ldr	r1, [r4, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900297a8:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
900297aa:	684b      	ldr	r3, [r1, #4]
900297ac:	4033      	ands	r3, r6
900297ae:	432b      	orrs	r3, r5
900297b0:	ea43 030a 	orr.w	r3, r3, sl
900297b4:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | I2C_CR2_START | I2C_CR2_STOP)), \
             (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) |
                        (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | (uint32_t)Mode | (uint32_t)Request));
}
900297b6:	e7c8      	b.n	9002974a <HAL_I2C_Mem_Write+0xca>
          hi2c->XferSize = hi2c->XferCount;
900297b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
900297ba:	6821      	ldr	r1, [r4, #0]
          hi2c->XferSize = hi2c->XferCount;
900297bc:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
900297be:	6848      	ldr	r0, [r1, #4]
900297c0:	b2d3      	uxtb	r3, r2
          hi2c->XferSize = hi2c->XferCount;
900297c2:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
900297c4:	ea00 0206 	and.w	r2, r0, r6
900297c8:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
900297cc:	4313      	orrs	r3, r2
900297ce:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
900297d2:	604b      	str	r3, [r1, #4]
}
900297d4:	e7b9      	b.n	9002974a <HAL_I2C_Mem_Write+0xca>
      __HAL_UNLOCK(hi2c);
900297d6:	9b03      	ldr	r3, [sp, #12]
      return HAL_ERROR;
900297d8:	4650      	mov	r0, sl
      __HAL_UNLOCK(hi2c);
900297da:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
900297de:	e77a      	b.n	900296d6 <HAL_I2C_Mem_Write+0x56>
      hi2c->XferSize = hi2c->XferCount;
900297e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
900297e2:	f3c5 0309 	ubfx	r3, r5, #0, #10
900297e6:	6820      	ldr	r0, [r4, #0]
      hi2c->XferSize = hi2c->XferCount;
900297e8:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
900297ea:	4f12      	ldr	r7, [pc, #72]	; (90029834 <HAL_I2C_Mem_Write+0x1b4>)
900297ec:	6841      	ldr	r1, [r0, #4]
900297ee:	461d      	mov	r5, r3
900297f0:	b2d6      	uxtb	r6, r2
      hi2c->XferSize = hi2c->XferCount;
900297f2:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
900297f4:	ea01 0207 	and.w	r2, r1, r7
900297f8:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900297fc:	4313      	orrs	r3, r2
900297fe:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90029802:	6043      	str	r3, [r0, #4]
}
90029804:	e79d      	b.n	90029742 <HAL_I2C_Mem_Write+0xc2>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90029806:	4642      	mov	r2, r8
90029808:	4649      	mov	r1, r9
9002980a:	4620      	mov	r0, r4
9002980c:	f7ff fde6 	bl	900293dc <I2C_WaitOnSTOPFlagUntilTimeout>
90029810:	2800      	cmp	r0, #0
90029812:	f47f af5f 	bne.w	900296d4 <HAL_I2C_Mem_Write+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90029816:	6823      	ldr	r3, [r4, #0]
90029818:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
9002981a:	4d08      	ldr	r5, [pc, #32]	; (9002983c <HAL_I2C_Mem_Write+0x1bc>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9002981c:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9002981e:	685a      	ldr	r2, [r3, #4]
90029820:	402a      	ands	r2, r5
90029822:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90029824:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90029828:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9002982c:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90029830:	e751      	b.n	900296d6 <HAL_I2C_Mem_Write+0x56>
90029832:	bf00      	nop
90029834:	fc009c00 	.word	0xfc009c00
90029838:	01ff0000 	.word	0x01ff0000
9002983c:	fe00e800 	.word	0xfe00e800

90029840 <HAL_I2C_Mem_Read>:
{
90029840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029844:	461f      	mov	r7, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90029846:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
9002984a:	b085      	sub	sp, #20
  if (hi2c->State == HAL_I2C_STATE_READY)
9002984c:	2b20      	cmp	r3, #32
{
9002984e:	f8bd b03c 	ldrh.w	fp, [sp, #60]	; 0x3c
90029852:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
  if (hi2c->State == HAL_I2C_STATE_READY)
90029856:	d128      	bne.n	900298aa <HAL_I2C_Mem_Read+0x6a>
    if ((pData == NULL) || (Size == 0U))
90029858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9002985a:	4604      	mov	r4, r0
9002985c:	b1f3      	cbz	r3, 9002989c <HAL_I2C_Mem_Read+0x5c>
9002985e:	f1bb 0f00 	cmp.w	fp, #0
90029862:	d01b      	beq.n	9002989c <HAL_I2C_Mem_Read+0x5c>
    __HAL_LOCK(hi2c);
90029864:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90029868:	2b01      	cmp	r3, #1
9002986a:	d01e      	beq.n	900298aa <HAL_I2C_Mem_Read+0x6a>
9002986c:	f04f 0a01 	mov.w	sl, #1
90029870:	460d      	mov	r5, r1
90029872:	4616      	mov	r6, r2
90029874:	f880 a040 	strb.w	sl, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90029878:	f7fe ff88 	bl	9002878c <HAL_GetTick>
9002987c:	4680      	mov	r8, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
9002987e:	4652      	mov	r2, sl
90029880:	2319      	movs	r3, #25
90029882:	f44f 4100 	mov.w	r1, #32768	; 0x8000
90029886:	4620      	mov	r0, r4
90029888:	f8cd 8000 	str.w	r8, [sp]
9002988c:	f7ff fdd0 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
90029890:	9003      	str	r0, [sp, #12]
90029892:	b170      	cbz	r0, 900298b2 <HAL_I2C_Mem_Read+0x72>
      return HAL_ERROR;
90029894:	2001      	movs	r0, #1
}
90029896:	b005      	add	sp, #20
90029898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9002989c:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900298a0:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900298a2:	6463      	str	r3, [r4, #68]	; 0x44
}
900298a4:	b005      	add	sp, #20
900298a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
900298aa:	2002      	movs	r0, #2
}
900298ac:	b005      	add	sp, #20
900298ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900298b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900298b4:	2122      	movs	r1, #34	; 0x22
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900298b6:	2040      	movs	r0, #64	; 0x40
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298b8:	4632      	mov	r2, r6
    hi2c->pBuffPtr  = pData;
900298ba:	6263      	str	r3, [r4, #36]	; 0x24
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298bc:	463b      	mov	r3, r7
    hi2c->XferISR   = NULL;
900298be:	9f03      	ldr	r7, [sp, #12]
900298c0:	6367      	str	r7, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298c2:	e9cd 9800 	strd	r9, r8, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900298c6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298ca:	4629      	mov	r1, r5
    hi2c->Mode      = HAL_I2C_MODE_MEM;
900298cc:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298d0:	4620      	mov	r0, r4
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900298d2:	6467      	str	r7, [r4, #68]	; 0x44
    hi2c->XferCount = Size;
900298d4:	f8a4 b02a 	strh.w	fp, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
900298d8:	f7ff fe1c 	bl	90029514 <I2C_RequestMemoryRead>
900298dc:	2800      	cmp	r0, #0
900298de:	d15c      	bne.n	9002999a <HAL_I2C_Mem_Read+0x15a>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900298e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900298e2:	b29b      	uxth	r3, r3
900298e4:	2bff      	cmp	r3, #255	; 0xff
900298e6:	d95d      	bls.n	900299a4 <HAL_I2C_Mem_Read+0x164>
  MODIFY_REG(hi2c->Instance->CR2,
900298e8:	6821      	ldr	r1, [r4, #0]
900298ea:	f3c5 0009 	ubfx	r0, r5, #0, #10
900298ee:	4e41      	ldr	r6, [pc, #260]	; (900299f4 <HAL_I2C_Mem_Read+0x1b4>)
      hi2c->XferSize = MAX_NBYTE_SIZE;
900298f0:	22ff      	movs	r2, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2,
900298f2:	684b      	ldr	r3, [r1, #4]
900298f4:	4605      	mov	r5, r0
      hi2c->XferSize = MAX_NBYTE_SIZE;
900298f6:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
900298f8:	4033      	ands	r3, r6
900298fa:	4a3f      	ldr	r2, [pc, #252]	; (900299f8 <HAL_I2C_Mem_Read+0x1b8>)
900298fc:	4303      	orrs	r3, r0
900298fe:	431a      	orrs	r2, r3
90029900:	604a      	str	r2, [r1, #4]
90029902:	4e3e      	ldr	r6, [pc, #248]	; (900299fc <HAL_I2C_Mem_Read+0x1bc>)
90029904:	4f3e      	ldr	r7, [pc, #248]	; (90029a00 <HAL_I2C_Mem_Read+0x1c0>)
90029906:	e003      	b.n	90029910 <HAL_I2C_Mem_Read+0xd0>
    } while (hi2c->XferCount > 0U);
90029908:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9002990a:	b29b      	uxth	r3, r3
9002990c:	2b00      	cmp	r3, #0
9002990e:	d05b      	beq.n	900299c8 <HAL_I2C_Mem_Read+0x188>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90029910:	464b      	mov	r3, r9
90029912:	2200      	movs	r2, #0
90029914:	2104      	movs	r1, #4
90029916:	4620      	mov	r0, r4
90029918:	f8cd 8000 	str.w	r8, [sp]
9002991c:	f7ff fd88 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
90029920:	2800      	cmp	r0, #0
90029922:	d1b7      	bne.n	90029894 <HAL_I2C_Mem_Read+0x54>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90029924:	6822      	ldr	r2, [r4, #0]
90029926:	6a63      	ldr	r3, [r4, #36]	; 0x24
90029928:	6a52      	ldr	r2, [r2, #36]	; 0x24
9002992a:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
9002992c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
9002992e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
90029930:	3901      	subs	r1, #1
      hi2c->pBuffPtr++;
90029932:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90029934:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90029936:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
90029938:	3201      	adds	r2, #1
      hi2c->XferSize--;
9002993a:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
9002993c:	8561      	strh	r1, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
9002993e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90029940:	8523      	strh	r3, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90029942:	b289      	uxth	r1, r1
      hi2c->pBuffPtr++;
90029944:	6262      	str	r2, [r4, #36]	; 0x24
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90029946:	2b00      	cmp	r3, #0
90029948:	d1de      	bne.n	90029908 <HAL_I2C_Mem_Read+0xc8>
9002994a:	2900      	cmp	r1, #0
9002994c:	d0dc      	beq.n	90029908 <HAL_I2C_Mem_Read+0xc8>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
9002994e:	4602      	mov	r2, r0
90029950:	464b      	mov	r3, r9
90029952:	2180      	movs	r1, #128	; 0x80
90029954:	4620      	mov	r0, r4
90029956:	f8cd 8000 	str.w	r8, [sp]
9002995a:	f7ff fd69 	bl	90029430 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
9002995e:	22ff      	movs	r2, #255	; 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
90029960:	2800      	cmp	r0, #0
90029962:	d197      	bne.n	90029894 <HAL_I2C_Mem_Read+0x54>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90029964:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90029966:	b29b      	uxth	r3, r3
90029968:	4293      	cmp	r3, r2
9002996a:	d907      	bls.n	9002997c <HAL_I2C_Mem_Read+0x13c>
  MODIFY_REG(hi2c->Instance->CR2,
9002996c:	6821      	ldr	r1, [r4, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
9002996e:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
90029970:	684b      	ldr	r3, [r1, #4]
90029972:	4033      	ands	r3, r6
90029974:	432b      	orrs	r3, r5
90029976:	433b      	orrs	r3, r7
90029978:	604b      	str	r3, [r1, #4]
}
9002997a:	e7c5      	b.n	90029908 <HAL_I2C_Mem_Read+0xc8>
          hi2c->XferSize = hi2c->XferCount;
9002997c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
9002997e:	6821      	ldr	r1, [r4, #0]
          hi2c->XferSize = hi2c->XferCount;
90029980:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
90029982:	6848      	ldr	r0, [r1, #4]
90029984:	b2d3      	uxtb	r3, r2
          hi2c->XferSize = hi2c->XferCount;
90029986:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
90029988:	ea00 0206 	and.w	r2, r0, r6
9002998c:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90029990:	4313      	orrs	r3, r2
90029992:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90029996:	604b      	str	r3, [r1, #4]
}
90029998:	e7b6      	b.n	90029908 <HAL_I2C_Mem_Read+0xc8>
      __HAL_UNLOCK(hi2c);
9002999a:	9b03      	ldr	r3, [sp, #12]
      return HAL_ERROR;
9002999c:	4650      	mov	r0, sl
      __HAL_UNLOCK(hi2c);
9002999e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
900299a2:	e778      	b.n	90029896 <HAL_I2C_Mem_Read+0x56>
      hi2c->XferSize = hi2c->XferCount;
900299a4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2,
900299a6:	f3c5 0309 	ubfx	r3, r5, #0, #10
900299aa:	6820      	ldr	r0, [r4, #0]
      hi2c->XferSize = hi2c->XferCount;
900299ac:	b292      	uxth	r2, r2
  MODIFY_REG(hi2c->Instance->CR2,
900299ae:	4f11      	ldr	r7, [pc, #68]	; (900299f4 <HAL_I2C_Mem_Read+0x1b4>)
900299b0:	6841      	ldr	r1, [r0, #4]
900299b2:	461d      	mov	r5, r3
900299b4:	b2d6      	uxtb	r6, r2
      hi2c->XferSize = hi2c->XferCount;
900299b6:	8522      	strh	r2, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2,
900299b8:	4039      	ands	r1, r7
900299ba:	4a12      	ldr	r2, [pc, #72]	; (90029a04 <HAL_I2C_Mem_Read+0x1c4>)
900299bc:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
900299c0:	430b      	orrs	r3, r1
900299c2:	431a      	orrs	r2, r3
900299c4:	6042      	str	r2, [r0, #4]
}
900299c6:	e79c      	b.n	90029902 <HAL_I2C_Mem_Read+0xc2>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900299c8:	4642      	mov	r2, r8
900299ca:	4649      	mov	r1, r9
900299cc:	4620      	mov	r0, r4
900299ce:	f7ff fd05 	bl	900293dc <I2C_WaitOnSTOPFlagUntilTimeout>
900299d2:	2800      	cmp	r0, #0
900299d4:	f47f af5e 	bne.w	90029894 <HAL_I2C_Mem_Read+0x54>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900299d8:	6823      	ldr	r3, [r4, #0]
900299da:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900299dc:	4d0a      	ldr	r5, [pc, #40]	; (90029a08 <HAL_I2C_Mem_Read+0x1c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900299de:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900299e0:	685a      	ldr	r2, [r3, #4]
900299e2:	402a      	ands	r2, r5
900299e4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900299e6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
900299ea:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900299ee:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
900299f2:	e750      	b.n	90029896 <HAL_I2C_Mem_Read+0x56>
900299f4:	fc009800 	.word	0xfc009800
900299f8:	81ff2400 	.word	0x81ff2400
900299fc:	fc009c00 	.word	0xfc009c00
90029a00:	01ff0000 	.word	0x01ff0000
90029a04:	82002400 	.word	0x82002400
90029a08:	fe00e800 	.word	0xfe00e800

90029a0c <HAL_I2C_GetState>:
  return hi2c->State;
90029a0c:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90029a10:	4770      	bx	lr
90029a12:	bf00      	nop

90029a14 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90029a14:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90029a16:	4770      	bx	lr

90029a18 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90029a18:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90029a1c:	2a20      	cmp	r2, #32
90029a1e:	d121      	bne.n	90029a64 <HAL_I2CEx_ConfigAnalogFilter+0x4c>
90029a20:	4603      	mov	r3, r0
{
90029a22:	b470      	push	{r4, r5, r6}
90029a24:	b2d5      	uxtb	r5, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90029a26:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90029a2a:	2a01      	cmp	r2, #1
90029a2c:	d01c      	beq.n	90029a68 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90029a2e:	681a      	ldr	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90029a30:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90029a32:	2600      	movs	r6, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90029a34:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90029a38:	6814      	ldr	r4, [r2, #0]

    return HAL_OK;
90029a3a:	4630      	mov	r0, r6
    __HAL_I2C_DISABLE(hi2c);
90029a3c:	f024 0401 	bic.w	r4, r4, #1
90029a40:	6014      	str	r4, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90029a42:	6814      	ldr	r4, [r2, #0]
90029a44:	f424 5480 	bic.w	r4, r4, #4096	; 0x1000
90029a48:	6014      	str	r4, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90029a4a:	6814      	ldr	r4, [r2, #0]
90029a4c:	4321      	orrs	r1, r4
90029a4e:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90029a50:	6811      	ldr	r1, [r2, #0]
90029a52:	f041 0101 	orr.w	r1, r1, #1
90029a56:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90029a58:	f883 5041 	strb.w	r5, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90029a5c:	f883 6040 	strb.w	r6, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90029a60:	bc70      	pop	{r4, r5, r6}
90029a62:	4770      	bx	lr
    return HAL_BUSY;
90029a64:	2002      	movs	r0, #2
}
90029a66:	4770      	bx	lr
    return HAL_BUSY;
90029a68:	2002      	movs	r0, #2
}
90029a6a:	bc70      	pop	{r4, r5, r6}
90029a6c:	4770      	bx	lr
90029a6e:	bf00      	nop

90029a70 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90029a70:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90029a74:	2a20      	cmp	r2, #32
90029a76:	d120      	bne.n	90029aba <HAL_I2CEx_ConfigDigitalFilter+0x4a>
90029a78:	4603      	mov	r3, r0
{
90029a7a:	b470      	push	{r4, r5, r6}
90029a7c:	b2d6      	uxtb	r6, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90029a7e:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90029a82:	2a01      	cmp	r2, #1
90029a84:	d01b      	beq.n	90029abe <HAL_I2CEx_ConfigDigitalFilter+0x4e>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90029a86:	681a      	ldr	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90029a88:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90029a8a:	2500      	movs	r5, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90029a8c:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90029a90:	6814      	ldr	r4, [r2, #0]

    return HAL_OK;
90029a92:	4628      	mov	r0, r5
    __HAL_I2C_DISABLE(hi2c);
90029a94:	f024 0401 	bic.w	r4, r4, #1
90029a98:	6014      	str	r4, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90029a9a:	6814      	ldr	r4, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90029a9c:	f424 6470 	bic.w	r4, r4, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90029aa0:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
    hi2c->Instance->CR1 = tmpreg;
90029aa4:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90029aa6:	6811      	ldr	r1, [r2, #0]
90029aa8:	f041 0101 	orr.w	r1, r1, #1
90029aac:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90029aae:	f883 6041 	strb.w	r6, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90029ab2:	f883 5040 	strb.w	r5, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90029ab6:	bc70      	pop	{r4, r5, r6}
90029ab8:	4770      	bx	lr
    return HAL_BUSY;
90029aba:	2002      	movs	r0, #2
}
90029abc:	4770      	bx	lr
    return HAL_BUSY;
90029abe:	2002      	movs	r0, #2
}
90029ac0:	bc70      	pop	{r4, r5, r6}
90029ac2:	4770      	bx	lr

90029ac4 <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029ac4:	01d2      	lsls	r2, r2, #7

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90029ac6:	f04f 0c00 	mov.w	ip, #0
{
90029aca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029ace:	3284      	adds	r2, #132	; 0x84
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90029ad0:	6804      	ldr	r4, [r0, #0]
90029ad2:	6848      	ldr	r0, [r1, #4]
{
90029ad4:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029ad6:	18a3      	adds	r3, r4, r2
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90029ad8:	68e5      	ldr	r5, [r4, #12]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90029ada:	f8d1 800c 	ldr.w	r8, [r1, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029ade:	f8d3 e004 	ldr.w	lr, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90029ae2:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029ae6:	680e      	ldr	r6, [r1, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90029ae8:	eb05 0a00 	add.w	sl, r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029aec:	f40e 4570 	and.w	r5, lr, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90029af0:	9001      	str	r0, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029af2:	f106 0b01 	add.w	fp, r6, #1
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90029af6:	6888      	ldr	r0, [r1, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90029af8:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029afa:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90029afc:	f100 0901 	add.w	r9, r0, #1
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90029b00:	f8d1 e010 	ldr.w	lr, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029b04:	f3c5 450b 	ubfx	r5, r5, #16, #12
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90029b08:	4f38      	ldr	r7, [pc, #224]	; (90029bec <LTDC_SetConfig+0x128>)
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029b0a:	445d      	add	r5, fp
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90029b0c:	f8d1 b018 	ldr.w	fp, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90029b10:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90029b14:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90029b16:	f8d4 a00c 	ldr.w	sl, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90029b1a:	689d      	ldr	r5, [r3, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90029b1c:	f3ca 0a0a 	ubfx	sl, sl, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90029b20:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90029b24:	44c2      	add	sl, r8
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90029b26:	f8d1 8014 	ldr.w	r8, [r1, #20]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90029b2a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90029b2c:	68e5      	ldr	r5, [r4, #12]
90029b2e:	f3c5 050a 	ubfx	r5, r5, #0, #11
90029b32:	444d      	add	r5, r9
90029b34:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
90029b38:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90029b3a:	691d      	ldr	r5, [r3, #16]
90029b3c:	f025 0507 	bic.w	r5, r5, #7
90029b40:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90029b42:	f8c3 e010 	str.w	lr, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90029b46:	699d      	ldr	r5, [r3, #24]
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90029b48:	f891 a031 	ldrb.w	sl, [r1, #49]	; 0x31
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90029b4c:	f891 9032 	ldrb.w	r9, [r1, #50]	; 0x32
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
90029b50:	f8c3 c018 	str.w	ip, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
90029b54:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
90029b58:	ea45 650b 	orr.w	r5, r5, fp, lsl #24
90029b5c:	ea45 250a 	orr.w	r5, r5, sl, lsl #8
90029b60:	ea45 4509 	orr.w	r5, r5, r9, lsl #16
90029b64:	619d      	str	r5, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90029b66:	695d      	ldr	r5, [r3, #20]
90029b68:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
90029b6c:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90029b6e:	f8c3 8014 	str.w	r8, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90029b72:	69dd      	ldr	r5, [r3, #28]
90029b74:	402f      	ands	r7, r5
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90029b76:	69cd      	ldr	r5, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90029b78:	61df      	str	r7, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90029b7a:	e9d1 0708 	ldrd	r0, r7, [r1, #32]
90029b7e:	4305      	orrs	r5, r0
90029b80:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
90029b82:	6a9d      	ldr	r5, [r3, #40]	; 0x28
90029b84:	f8c3 c028 	str.w	ip, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
90029b88:	629f      	str	r7, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90029b8a:	f1be 0f00 	cmp.w	lr, #0
90029b8e:	d00b      	beq.n	90029ba8 <LTDC_SetConfig+0xe4>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
90029b90:	f1be 0f01 	cmp.w	lr, #1
90029b94:	d026      	beq.n	90029be4 <LTDC_SetConfig+0x120>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
90029b96:	f1ae 0502 	sub.w	r5, lr, #2
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
90029b9a:	2d02      	cmp	r5, #2
90029b9c:	d902      	bls.n	90029ba4 <LTDC_SetConfig+0xe0>
90029b9e:	f1be 0f07 	cmp.w	lr, #7
90029ba2:	d121      	bne.n	90029be8 <LTDC_SetConfig+0x124>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
  {
    tmp = 2U;
90029ba4:	2702      	movs	r7, #2
90029ba6:	e000      	b.n	90029baa <LTDC_SetConfig+0xe6>
    tmp = 4U;
90029ba8:	2704      	movs	r7, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029baa:	9801      	ldr	r0, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90029bac:	6add      	ldr	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029bae:	1b80      	subs	r0, r0, r6
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90029bb0:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029bb4:	fb07 f000 	mul.w	r0, r7, r0
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90029bb8:	e9d1 6c0a 	ldrd	r6, ip, [r1, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029bbc:	3007      	adds	r0, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90029bbe:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029bc0:	fb06 f607 	mul.w	r6, r6, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90029bc4:	490a      	ldr	r1, [pc, #40]	; (90029bf0 <LTDC_SetConfig+0x12c>)
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90029bc6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
90029bca:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90029bcc:	6b18      	ldr	r0, [r3, #48]	; 0x30
90029bce:	4001      	ands	r1, r0
90029bd0:	6319      	str	r1, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90029bd2:	f8c3 c030 	str.w	ip, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90029bd6:	58a3      	ldr	r3, [r4, r2]
90029bd8:	f043 0301 	orr.w	r3, r3, #1
90029bdc:	50a3      	str	r3, [r4, r2]
}
90029bde:	b003      	add	sp, #12
90029be0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    tmp = 3U;
90029be4:	2703      	movs	r7, #3
90029be6:	e7e0      	b.n	90029baa <LTDC_SetConfig+0xe6>
    tmp = 1U;
90029be8:	2701      	movs	r7, #1
90029bea:	e7de      	b.n	90029baa <LTDC_SetConfig+0xe6>
90029bec:	fffff8f8 	.word	0xfffff8f8
90029bf0:	fffff800 	.word	0xfffff800

90029bf4 <HAL_LTDC_Init>:
  if (hltdc == NULL)
90029bf4:	2800      	cmp	r0, #0
90029bf6:	d06d      	beq.n	90029cd4 <HAL_LTDC_Init+0xe0>
{
90029bf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90029bfa:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
90029bfe:	4604      	mov	r4, r0
90029c00:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90029c04:	2b00      	cmp	r3, #0
90029c06:	d060      	beq.n	90029cca <HAL_LTDC_Init+0xd6>
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c08:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029c0a:	2502      	movs	r5, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c0c:	68e6      	ldr	r6, [r4, #12]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90029c0e:	2100      	movs	r1, #0
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029c10:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90029c14:	6925      	ldr	r5, [r4, #16]
  tmp = (hltdc->Init.HorizontalSync << 16U);
90029c16:	6967      	ldr	r7, [r4, #20]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90029c18:	f8d4 c018 	ldr.w	ip, [r4, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c1c:	e9d4 3200 	ldrd	r3, r2, [r4]
90029c20:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90029c22:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c24:	4332      	orrs	r2, r6
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90029c26:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90029c2a:	4e2b      	ldr	r6, [pc, #172]	; (90029cd8 <HAL_LTDC_Init+0xe4>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90029c2c:	6198      	str	r0, [r3, #24]
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90029c2e:	432a      	orrs	r2, r5
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c30:	6998      	ldr	r0, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
90029c32:	2501      	movs	r5, #1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90029c34:	4302      	orrs	r2, r0
90029c36:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
90029c38:	689a      	ldr	r2, [r3, #8]
90029c3a:	4032      	ands	r2, r6
90029c3c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90029c3e:	6898      	ldr	r0, [r3, #8]
90029c40:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90029c44:	69e7      	ldr	r7, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90029c46:	ea40 000c 	orr.w	r0, r0, ip
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90029c4a:	f8d4 c020 	ldr.w	ip, [r4, #32]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
90029c4e:	6098      	str	r0, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
90029c50:	68d8      	ldr	r0, [r3, #12]
90029c52:	4030      	ands	r0, r6
90029c54:	60d8      	str	r0, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90029c56:	68da      	ldr	r2, [r3, #12]
90029c58:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90029c5c:	6a67      	ldr	r7, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90029c5e:	ea42 020c 	orr.w	r2, r2, ip
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90029c62:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
90029c66:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
90029c68:	691a      	ldr	r2, [r3, #16]
90029c6a:	4032      	ands	r2, r6
90029c6c:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90029c6e:	6918      	ldr	r0, [r3, #16]
90029c70:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
  tmp = (hltdc->Init.TotalWidth << 16U);
90029c74:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
90029c76:	ea40 000c 	orr.w	r0, r0, ip
90029c7a:	6118      	str	r0, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
90029c7c:	6958      	ldr	r0, [r3, #20]
90029c7e:	4006      	ands	r6, r0
90029c80:	615e      	str	r6, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
90029c82:	695a      	ldr	r2, [r3, #20]
90029c84:	6b20      	ldr	r0, [r4, #48]	; 0x30
90029c86:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90029c8a:	4302      	orrs	r2, r0
90029c8c:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90029c8e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90029c90:	f894 7035 	ldrb.w	r7, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90029c94:	f000 407f 	and.w	r0, r0, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90029c98:	f894 6036 	ldrb.w	r6, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90029c9c:	62d8      	str	r0, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90029c9e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
90029ca0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
90029ca4:	4302      	orrs	r2, r0
  return HAL_OK;
90029ca6:	4608      	mov	r0, r1
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90029ca8:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90029cac:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
90029cb0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90029cb2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90029cb4:	f042 0206 	orr.w	r2, r2, #6
90029cb8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
90029cba:	699a      	ldr	r2, [r3, #24]
90029cbc:	432a      	orrs	r2, r5
90029cbe:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90029cc0:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90029cc4:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
}
90029cc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hltdc->Lock = HAL_UNLOCKED;
90029cca:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
90029cce:	f7fd fb77 	bl	900273c0 <HAL_LTDC_MspInit>
90029cd2:	e799      	b.n	90029c08 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90029cd4:	2001      	movs	r0, #1
}
90029cd6:	4770      	bx	lr
90029cd8:	f000f800 	.word	0xf000f800

90029cdc <HAL_LTDC_ErrorCallback>:
90029cdc:	4770      	bx	lr
90029cde:	bf00      	nop

90029ce0 <HAL_LTDC_ReloadEventCallback>:
90029ce0:	4770      	bx	lr
90029ce2:	bf00      	nop

90029ce4 <HAL_LTDC_IRQHandler>:
{
90029ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90029ce6:	6803      	ldr	r3, [r0, #0]
{
90029ce8:	4604      	mov	r4, r0
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90029cea:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90029cec:	6b5e      	ldr	r6, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90029cee:	0769      	lsls	r1, r5, #29
90029cf0:	d501      	bpl.n	90029cf6 <HAL_LTDC_IRQHandler+0x12>
90029cf2:	0772      	lsls	r2, r6, #29
90029cf4:	d41d      	bmi.n	90029d32 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90029cf6:	07ab      	lsls	r3, r5, #30
90029cf8:	d501      	bpl.n	90029cfe <HAL_LTDC_IRQHandler+0x1a>
90029cfa:	07b7      	lsls	r7, r6, #30
90029cfc:	d42d      	bmi.n	90029d5a <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90029cfe:	07e8      	lsls	r0, r5, #31
90029d00:	d501      	bpl.n	90029d06 <HAL_LTDC_IRQHandler+0x22>
90029d02:	07f1      	lsls	r1, r6, #31
90029d04:	d440      	bmi.n	90029d88 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90029d06:	072a      	lsls	r2, r5, #28
90029d08:	d501      	bpl.n	90029d0e <HAL_LTDC_IRQHandler+0x2a>
90029d0a:	0733      	lsls	r3, r6, #28
90029d0c:	d400      	bmi.n	90029d10 <HAL_LTDC_IRQHandler+0x2c>
}
90029d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90029d10:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90029d12:	2608      	movs	r6, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90029d14:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90029d16:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90029d18:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    HAL_LTDC_ReloadEventCallback(hltdc);
90029d1a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90029d1c:	f022 0208 	bic.w	r2, r2, #8
90029d20:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90029d22:	63de      	str	r6, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
90029d24:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90029d28:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90029d2c:	f7ff ffd8 	bl	90029ce0 <HAL_LTDC_ReloadEventCallback>
}
90029d30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90029d32:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90029d34:	2104      	movs	r1, #4
    __HAL_UNLOCK(hltdc);
90029d36:	2700      	movs	r7, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90029d38:	f022 0204 	bic.w	r2, r2, #4
90029d3c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90029d3e:	63d9      	str	r1, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90029d40:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
90029d44:	f880 70a0 	strb.w	r7, [r0, #160]	; 0xa0
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90029d48:	f043 0301 	orr.w	r3, r3, #1
90029d4c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
90029d50:	f880 10a1 	strb.w	r1, [r0, #161]	; 0xa1
    HAL_LTDC_ErrorCallback(hltdc);
90029d54:	f7ff ffc2 	bl	90029cdc <HAL_LTDC_ErrorCallback>
90029d58:	e7cd      	b.n	90029cf6 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90029d5a:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90029d5c:	2002      	movs	r0, #2
    hltdc->State = HAL_LTDC_STATE_ERROR;
90029d5e:	2104      	movs	r1, #4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90029d60:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90029d62:	f022 0202 	bic.w	r2, r2, #2
90029d66:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_UNLOCK(hltdc);
90029d68:	2200      	movs	r2, #0
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90029d6a:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ErrorCallback(hltdc);
90029d6c:	4620      	mov	r0, r4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90029d6e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
90029d72:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90029d76:	f043 0302 	orr.w	r3, r3, #2
90029d7a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
90029d7e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    HAL_LTDC_ErrorCallback(hltdc);
90029d82:	f7ff ffab 	bl	90029cdc <HAL_LTDC_ErrorCallback>
90029d86:	e7ba      	b.n	90029cfe <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90029d88:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90029d8a:	2101      	movs	r1, #1
    __HAL_UNLOCK(hltdc);
90029d8c:	2700      	movs	r7, #0
    HAL_LTDC_LineEventCallback(hltdc);
90029d8e:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90029d90:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90029d92:	f022 0201 	bic.w	r2, r2, #1
90029d96:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90029d98:	63d9      	str	r1, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
90029d9a:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
90029d9e:	f884 70a0 	strb.w	r7, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90029da2:	f7fd fbb3 	bl	9002750c <HAL_LTDC_LineEventCallback>
90029da6:	e7ae      	b.n	90029d06 <HAL_LTDC_IRQHandler+0x22>

90029da8 <HAL_LTDC_ConfigLayer>:
  __HAL_LOCK(hltdc);
90029da8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
90029dac:	2b01      	cmp	r3, #1
90029dae:	d028      	beq.n	90029e02 <HAL_LTDC_ConfigLayer+0x5a>
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029db0:	2302      	movs	r3, #2
90029db2:	4694      	mov	ip, r2
{
90029db4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90029db8:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
90029dba:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90029dbe:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029dc0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90029dc4:	fb04 0402 	mla	r4, r4, r2, r0
90029dc8:	4606      	mov	r6, r0
  __HAL_LOCK(hltdc);
90029dca:	f880 80a0 	strb.w	r8, [r0, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90029dce:	460f      	mov	r7, r1
90029dd0:	3438      	adds	r4, #56	; 0x38
90029dd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90029dd4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90029dd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90029dd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90029dda:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
90029ddc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90029dde:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
90029de0:	4662      	mov	r2, ip
90029de2:	4630      	mov	r0, r6
90029de4:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90029de6:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
90029de8:	f7ff fe6c 	bl	90029ac4 <LTDC_SetConfig>
  __HAL_UNLOCK(hltdc);
90029dec:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90029dee:	6832      	ldr	r2, [r6, #0]
  return HAL_OK;
90029df0:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90029df2:	f8c2 8024 	str.w	r8, [r2, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
90029df6:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
90029dfa:	f886 30a0 	strb.w	r3, [r6, #160]	; 0xa0
}
90029dfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __HAL_LOCK(hltdc);
90029e02:	2002      	movs	r0, #2
}
90029e04:	4770      	bx	lr
90029e06:	bf00      	nop

90029e08 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
90029e08:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
90029e0c:	2a01      	cmp	r2, #1
90029e0e:	d017      	beq.n	90029e40 <HAL_LTDC_ProgramLineEvent+0x38>
90029e10:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029e12:	2002      	movs	r0, #2
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90029e14:	681a      	ldr	r2, [r3, #0]
{
90029e16:	b470      	push	{r4, r5, r6}
  hltdc->State = HAL_LTDC_STATE_BUSY;
90029e18:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  hltdc->State = HAL_LTDC_STATE_READY;
90029e1c:	2501      	movs	r5, #1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90029e1e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
90029e20:	2400      	movs	r4, #0
  LTDC->LIPCR = (uint32_t)Line;
90029e22:	4e08      	ldr	r6, [pc, #32]	; (90029e44 <HAL_LTDC_ProgramLineEvent+0x3c>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90029e24:	f020 0001 	bic.w	r0, r0, #1
90029e28:	6350      	str	r0, [r2, #52]	; 0x34
  return HAL_OK;
90029e2a:	4620      	mov	r0, r4
  LTDC->LIPCR = (uint32_t)Line;
90029e2c:	6431      	str	r1, [r6, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
90029e2e:	6b51      	ldr	r1, [r2, #52]	; 0x34
90029e30:	4329      	orrs	r1, r5
90029e32:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90029e34:	f883 50a1 	strb.w	r5, [r3, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
90029e38:	f883 40a0 	strb.w	r4, [r3, #160]	; 0xa0
}
90029e3c:	bc70      	pop	{r4, r5, r6}
90029e3e:	4770      	bx	lr
  __HAL_LOCK(hltdc);
90029e40:	2002      	movs	r0, #2
}
90029e42:	4770      	bx	lr
90029e44:	50001000 	.word	0x50001000

90029e48 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
90029e48:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
90029e4a:	4b11      	ldr	r3, [pc, #68]	; (90029e90 <HAL_PWREx_ConfigSupply+0x48>)
90029e4c:	68da      	ldr	r2, [r3, #12]
90029e4e:	0752      	lsls	r2, r2, #29
90029e50:	d406      	bmi.n	90029e60 <HAL_PWREx_ConfigSupply+0x18>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
90029e52:	68db      	ldr	r3, [r3, #12]
90029e54:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
90029e58:	1a18      	subs	r0, r3, r0
90029e5a:	bf18      	it	ne
90029e5c:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
90029e5e:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
90029e60:	68da      	ldr	r2, [r3, #12]
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
90029e62:	461d      	mov	r5, r3
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
90029e64:	f022 0207 	bic.w	r2, r2, #7
90029e68:	4310      	orrs	r0, r2
90029e6a:	60d8      	str	r0, [r3, #12]
  tickstart = HAL_GetTick ();
90029e6c:	f7fe fc8e 	bl	9002878c <HAL_GetTick>
90029e70:	4604      	mov	r4, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
90029e72:	e005      	b.n	90029e80 <HAL_PWREx_ConfigSupply+0x38>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
90029e74:	f7fe fc8a 	bl	9002878c <HAL_GetTick>
90029e78:	1b00      	subs	r0, r0, r4
90029e7a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
90029e7e:	d804      	bhi.n	90029e8a <HAL_PWREx_ConfigSupply+0x42>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
90029e80:	686b      	ldr	r3, [r5, #4]
90029e82:	049b      	lsls	r3, r3, #18
90029e84:	d5f6      	bpl.n	90029e74 <HAL_PWREx_ConfigSupply+0x2c>
  return HAL_OK;
90029e86:	2000      	movs	r0, #0
}
90029e88:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
90029e8a:	2001      	movs	r0, #1
}
90029e8c:	bd38      	pop	{r3, r4, r5, pc}
90029e8e:	bf00      	nop
90029e90:	58024800 	.word	0x58024800

90029e94 <HAL_RCC_OscConfig>:
{
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
90029e94:	2800      	cmp	r0, #0
90029e96:	f000 81fb 	beq.w	9002a290 <HAL_RCC_OscConfig+0x3fc>
{
90029e9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
90029e9c:	6803      	ldr	r3, [r0, #0]
90029e9e:	4604      	mov	r4, r0
90029ea0:	07d9      	lsls	r1, r3, #31
90029ea2:	d530      	bpl.n	90029f06 <HAL_RCC_OscConfig+0x72>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
90029ea4:	49a4      	ldr	r1, [pc, #656]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029ea6:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
90029ea8:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
90029eaa:	f002 0238 	and.w	r2, r2, #56	; 0x38
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
90029eae:	2a10      	cmp	r2, #16
90029eb0:	f000 812e 	beq.w	9002a110 <HAL_RCC_OscConfig+0x27c>
90029eb4:	2a18      	cmp	r2, #24
90029eb6:	f000 8126 	beq.w	9002a106 <HAL_RCC_OscConfig+0x272>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
90029eba:	6863      	ldr	r3, [r4, #4]
90029ebc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
90029ec0:	f000 8169 	beq.w	9002a196 <HAL_RCC_OscConfig+0x302>
90029ec4:	2b00      	cmp	r3, #0
90029ec6:	f000 8181 	beq.w	9002a1cc <HAL_RCC_OscConfig+0x338>
90029eca:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
90029ece:	4b9a      	ldr	r3, [pc, #616]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029ed0:	681a      	ldr	r2, [r3, #0]
90029ed2:	f000 827c 	beq.w	9002a3ce <HAL_RCC_OscConfig+0x53a>
90029ed6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90029eda:	601a      	str	r2, [r3, #0]
90029edc:	681a      	ldr	r2, [r3, #0]
90029ede:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
90029ee2:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
90029ee4:	f7fe fc52 	bl	9002878c <HAL_GetTick>

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90029ee8:	4e93      	ldr	r6, [pc, #588]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
        {
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
90029eea:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
90029eee:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90029ef0:	e005      	b.n	90029efe <HAL_RCC_OscConfig+0x6a>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
90029ef2:	f7fe fc4b 	bl	9002878c <HAL_GetTick>
90029ef6:	1b40      	subs	r0, r0, r5
90029ef8:	42b8      	cmp	r0, r7
90029efa:	f200 8165 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
90029efe:	6833      	ldr	r3, [r6, #0]
90029f00:	039b      	lsls	r3, r3, #14
90029f02:	d5f6      	bpl.n	90029ef2 <HAL_RCC_OscConfig+0x5e>
90029f04:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
90029f06:	0799      	lsls	r1, r3, #30
90029f08:	d521      	bpl.n	90029f4e <HAL_RCC_OscConfig+0xba>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
90029f0a:	4a8b      	ldr	r2, [pc, #556]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029f0c:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
90029f0e:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
90029f10:	f013 0338 	ands.w	r3, r3, #56	; 0x38
90029f14:	f040 80a8 	bne.w	9002a068 <HAL_RCC_OscConfig+0x1d4>
    {
      /* When HSI is used as system clock it will not be disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
90029f18:	4b87      	ldr	r3, [pc, #540]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029f1a:	681b      	ldr	r3, [r3, #0]
90029f1c:	075b      	lsls	r3, r3, #29
90029f1e:	d503      	bpl.n	90029f28 <HAL_RCC_OscConfig+0x94>
90029f20:	68e3      	ldr	r3, [r4, #12]
90029f22:	2b00      	cmp	r3, #0
90029f24:	f000 80ed 	beq.w	9002a102 <HAL_RCC_OscConfig+0x26e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
90029f28:	f7fe fc36 	bl	90028798 <HAL_GetREVID>
90029f2c:	f241 0303 	movw	r3, #4099	; 0x1003
90029f30:	4298      	cmp	r0, r3
90029f32:	f200 818b 	bhi.w	9002a24c <HAL_RCC_OscConfig+0x3b8>
90029f36:	6922      	ldr	r2, [r4, #16]
90029f38:	2a40      	cmp	r2, #64	; 0x40
90029f3a:	f000 8250 	beq.w	9002a3de <HAL_RCC_OscConfig+0x54a>
90029f3e:	497e      	ldr	r1, [pc, #504]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029f40:	684b      	ldr	r3, [r1, #4]
90029f42:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
90029f46:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
90029f4a:	604b      	str	r3, [r1, #4]
90029f4c:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
90029f4e:	06d9      	lsls	r1, r3, #27
90029f50:	d456      	bmi.n	9002a000 <HAL_RCC_OscConfig+0x16c>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
90029f52:	071d      	lsls	r5, r3, #28
90029f54:	d517      	bpl.n	90029f86 <HAL_RCC_OscConfig+0xf2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
90029f56:	6963      	ldr	r3, [r4, #20]
90029f58:	2b00      	cmp	r3, #0
90029f5a:	f000 80b4 	beq.w	9002a0c6 <HAL_RCC_OscConfig+0x232>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
90029f5e:	4b76      	ldr	r3, [pc, #472]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029f60:	6f5a      	ldr	r2, [r3, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
90029f62:	461e      	mov	r6, r3
      __HAL_RCC_LSI_ENABLE();
90029f64:	f042 0201 	orr.w	r2, r2, #1
90029f68:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
90029f6a:	f7fe fc0f 	bl	9002878c <HAL_GetTick>
90029f6e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
90029f70:	e005      	b.n	90029f7e <HAL_RCC_OscConfig+0xea>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
90029f72:	f7fe fc0b 	bl	9002878c <HAL_GetTick>
90029f76:	1b40      	subs	r0, r0, r5
90029f78:	2802      	cmp	r0, #2
90029f7a:	f200 8125 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
90029f7e:	6f73      	ldr	r3, [r6, #116]	; 0x74
90029f80:	0798      	lsls	r0, r3, #30
90029f82:	d5f6      	bpl.n	90029f72 <HAL_RCC_OscConfig+0xde>
90029f84:	6823      	ldr	r3, [r4, #0]
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
90029f86:	069a      	lsls	r2, r3, #26
90029f88:	d517      	bpl.n	90029fba <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
90029f8a:	69a3      	ldr	r3, [r4, #24]
90029f8c:	2b00      	cmp	r3, #0
90029f8e:	f000 8136 	beq.w	9002a1fe <HAL_RCC_OscConfig+0x36a>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
90029f92:	4b69      	ldr	r3, [pc, #420]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029f94:	681a      	ldr	r2, [r3, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();

      /* Wait till HSI48 is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
90029f96:	461e      	mov	r6, r3
      __HAL_RCC_HSI48_ENABLE();
90029f98:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90029f9c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
90029f9e:	f7fe fbf5 	bl	9002878c <HAL_GetTick>
90029fa2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
90029fa4:	e005      	b.n	90029fb2 <HAL_RCC_OscConfig+0x11e>
      {
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
90029fa6:	f7fe fbf1 	bl	9002878c <HAL_GetTick>
90029faa:	1b40      	subs	r0, r0, r5
90029fac:	2802      	cmp	r0, #2
90029fae:	f200 810b 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
90029fb2:	6833      	ldr	r3, [r6, #0]
90029fb4:	049f      	lsls	r7, r3, #18
90029fb6:	d5f6      	bpl.n	90029fa6 <HAL_RCC_OscConfig+0x112>
90029fb8:	6823      	ldr	r3, [r4, #0]
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
90029fba:	0759      	lsls	r1, r3, #29
90029fbc:	f100 80b2 	bmi.w	9002a124 <HAL_RCC_OscConfig+0x290>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
90029fc0:	6a60      	ldr	r0, [r4, #36]	; 0x24
90029fc2:	b1d8      	cbz	r0, 90029ffc <HAL_RCC_OscConfig+0x168>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
90029fc4:	4b5c      	ldr	r3, [pc, #368]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
90029fc6:	691a      	ldr	r2, [r3, #16]
90029fc8:	f002 0238 	and.w	r2, r2, #56	; 0x38
90029fcc:	2a18      	cmp	r2, #24
90029fce:	f000 81d0 	beq.w	9002a372 <HAL_RCC_OscConfig+0x4de>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
90029fd2:	681a      	ldr	r2, [r3, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
90029fd4:	2802      	cmp	r0, #2

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
90029fd6:	461d      	mov	r5, r3
        __HAL_RCC_PLL_DISABLE();
90029fd8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
90029fdc:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
90029fde:	f000 8163 	beq.w	9002a2a8 <HAL_RCC_OscConfig+0x414>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
90029fe2:	f7fe fbd3 	bl	9002878c <HAL_GetTick>
90029fe6:	4604      	mov	r4, r0

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
90029fe8:	e005      	b.n	90029ff6 <HAL_RCC_OscConfig+0x162>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
90029fea:	f7fe fbcf 	bl	9002878c <HAL_GetTick>
90029fee:	1b00      	subs	r0, r0, r4
90029ff0:	2802      	cmp	r0, #2
90029ff2:	f200 80e9 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
90029ff6:	682b      	ldr	r3, [r5, #0]
90029ff8:	019b      	lsls	r3, r3, #6
90029ffa:	d4f6      	bmi.n	90029fea <HAL_RCC_OscConfig+0x156>
      {
        return HAL_ERROR;
      }
    }
  }
  return HAL_OK;
90029ffc:	2000      	movs	r0, #0
}
90029ffe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9002a000:	4a4d      	ldr	r2, [pc, #308]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a002:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9002a004:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9002a006:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9002a00a:	2b08      	cmp	r3, #8
9002a00c:	d072      	beq.n	9002a0f4 <HAL_RCC_OscConfig+0x260>
9002a00e:	2b18      	cmp	r3, #24
9002a010:	d06c      	beq.n	9002a0ec <HAL_RCC_OscConfig+0x258>
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
9002a012:	69e3      	ldr	r3, [r4, #28]
9002a014:	2b00      	cmp	r3, #0
9002a016:	f000 8105 	beq.w	9002a224 <HAL_RCC_OscConfig+0x390>
        __HAL_RCC_CSI_ENABLE();
9002a01a:	4b47      	ldr	r3, [pc, #284]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a01c:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9002a01e:	461e      	mov	r6, r3
        __HAL_RCC_CSI_ENABLE();
9002a020:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9002a024:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9002a026:	f7fe fbb1 	bl	9002878c <HAL_GetTick>
9002a02a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9002a02c:	e005      	b.n	9002a03a <HAL_RCC_OscConfig+0x1a6>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
9002a02e:	f7fe fbad 	bl	9002878c <HAL_GetTick>
9002a032:	1b40      	subs	r0, r0, r5
9002a034:	2802      	cmp	r0, #2
9002a036:	f200 80c7 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9002a03a:	6833      	ldr	r3, [r6, #0]
9002a03c:	05db      	lsls	r3, r3, #23
9002a03e:	d5f6      	bpl.n	9002a02e <HAL_RCC_OscConfig+0x19a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9002a040:	f7fe fbaa 	bl	90028798 <HAL_GetREVID>
9002a044:	f241 0303 	movw	r3, #4099	; 0x1003
9002a048:	4298      	cmp	r0, r3
9002a04a:	f200 81f1 	bhi.w	9002a430 <HAL_RCC_OscConfig+0x59c>
9002a04e:	6a22      	ldr	r2, [r4, #32]
9002a050:	6873      	ldr	r3, [r6, #4]
9002a052:	2a20      	cmp	r2, #32
9002a054:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9002a058:	bf0c      	ite	eq
9002a05a:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9002a05e:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9002a062:	6073      	str	r3, [r6, #4]
9002a064:	6823      	ldr	r3, [r4, #0]
9002a066:	e774      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9002a068:	2b18      	cmp	r3, #24
9002a06a:	f000 810d 	beq.w	9002a288 <HAL_RCC_OscConfig+0x3f4>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
9002a06e:	68e2      	ldr	r2, [r4, #12]
9002a070:	2a00      	cmp	r2, #0
9002a072:	f000 80f5 	beq.w	9002a260 <HAL_RCC_OscConfig+0x3cc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9002a076:	4930      	ldr	r1, [pc, #192]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a078:	680b      	ldr	r3, [r1, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9002a07a:	460e      	mov	r6, r1
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9002a07c:	f023 0319 	bic.w	r3, r3, #25
9002a080:	4313      	orrs	r3, r2
9002a082:	600b      	str	r3, [r1, #0]
        tickstart = HAL_GetTick();
9002a084:	f7fe fb82 	bl	9002878c <HAL_GetTick>
9002a088:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9002a08a:	e005      	b.n	9002a098 <HAL_RCC_OscConfig+0x204>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
9002a08c:	f7fe fb7e 	bl	9002878c <HAL_GetTick>
9002a090:	1b40      	subs	r0, r0, r5
9002a092:	2802      	cmp	r0, #2
9002a094:	f200 8098 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9002a098:	6833      	ldr	r3, [r6, #0]
9002a09a:	075f      	lsls	r7, r3, #29
9002a09c:	d5f6      	bpl.n	9002a08c <HAL_RCC_OscConfig+0x1f8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9002a09e:	f7fe fb7b 	bl	90028798 <HAL_GetREVID>
9002a0a2:	f241 0303 	movw	r3, #4099	; 0x1003
9002a0a6:	4298      	cmp	r0, r3
9002a0a8:	f200 81cb 	bhi.w	9002a442 <HAL_RCC_OscConfig+0x5ae>
9002a0ac:	6922      	ldr	r2, [r4, #16]
9002a0ae:	6873      	ldr	r3, [r6, #4]
9002a0b0:	2a40      	cmp	r2, #64	; 0x40
9002a0b2:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9002a0b6:	bf0c      	ite	eq
9002a0b8:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9002a0bc:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9002a0c0:	6073      	str	r3, [r6, #4]
9002a0c2:	6823      	ldr	r3, [r4, #0]
9002a0c4:	e743      	b.n	90029f4e <HAL_RCC_OscConfig+0xba>
      __HAL_RCC_LSI_DISABLE();
9002a0c6:	4b1c      	ldr	r3, [pc, #112]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a0c8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9002a0ca:	461e      	mov	r6, r3
      __HAL_RCC_LSI_DISABLE();
9002a0cc:	f022 0201 	bic.w	r2, r2, #1
9002a0d0:	675a      	str	r2, [r3, #116]	; 0x74
      tickstart = HAL_GetTick();
9002a0d2:	f7fe fb5b 	bl	9002878c <HAL_GetTick>
9002a0d6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9002a0d8:	e004      	b.n	9002a0e4 <HAL_RCC_OscConfig+0x250>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
9002a0da:	f7fe fb57 	bl	9002878c <HAL_GetTick>
9002a0de:	1b40      	subs	r0, r0, r5
9002a0e0:	2802      	cmp	r0, #2
9002a0e2:	d871      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9002a0e4:	6f73      	ldr	r3, [r6, #116]	; 0x74
9002a0e6:	0799      	lsls	r1, r3, #30
9002a0e8:	d4f7      	bmi.n	9002a0da <HAL_RCC_OscConfig+0x246>
9002a0ea:	e74b      	b.n	90029f84 <HAL_RCC_OscConfig+0xf0>
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9002a0ec:	f002 0203 	and.w	r2, r2, #3
9002a0f0:	2a01      	cmp	r2, #1
9002a0f2:	d18e      	bne.n	9002a012 <HAL_RCC_OscConfig+0x17e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9002a0f4:	4b10      	ldr	r3, [pc, #64]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a0f6:	681b      	ldr	r3, [r3, #0]
9002a0f8:	05da      	lsls	r2, r3, #23
9002a0fa:	d552      	bpl.n	9002a1a2 <HAL_RCC_OscConfig+0x30e>
9002a0fc:	69e3      	ldr	r3, [r4, #28]
9002a0fe:	2b80      	cmp	r3, #128	; 0x80
9002a100:	d04f      	beq.n	9002a1a2 <HAL_RCC_OscConfig+0x30e>
        return HAL_ERROR;
9002a102:	2001      	movs	r0, #1
}
9002a104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9002a106:	f001 0103 	and.w	r1, r1, #3
9002a10a:	2902      	cmp	r1, #2
9002a10c:	f47f aed5 	bne.w	90029eba <HAL_RCC_OscConfig+0x26>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9002a110:	4a09      	ldr	r2, [pc, #36]	; (9002a138 <HAL_RCC_OscConfig+0x2a4>)
9002a112:	6812      	ldr	r2, [r2, #0]
9002a114:	0392      	lsls	r2, r2, #14
9002a116:	f57f aef6 	bpl.w	90029f06 <HAL_RCC_OscConfig+0x72>
9002a11a:	6862      	ldr	r2, [r4, #4]
9002a11c:	2a00      	cmp	r2, #0
9002a11e:	f47f aef2 	bne.w	90029f06 <HAL_RCC_OscConfig+0x72>
9002a122:	e7ee      	b.n	9002a102 <HAL_RCC_OscConfig+0x26e>
    PWR->CR1 |= PWR_CR1_DBP;
9002a124:	4b05      	ldr	r3, [pc, #20]	; (9002a13c <HAL_RCC_OscConfig+0x2a8>)
9002a126:	681a      	ldr	r2, [r3, #0]
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002a128:	461e      	mov	r6, r3
    PWR->CR1 |= PWR_CR1_DBP;
9002a12a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9002a12e:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
9002a130:	f7fe fb2c 	bl	9002878c <HAL_GetTick>
9002a134:	4605      	mov	r5, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002a136:	e008      	b.n	9002a14a <HAL_RCC_OscConfig+0x2b6>
9002a138:	58024400 	.word	0x58024400
9002a13c:	58024800 	.word	0x58024800
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
9002a140:	f7fe fb24 	bl	9002878c <HAL_GetTick>
9002a144:	1b40      	subs	r0, r0, r5
9002a146:	2864      	cmp	r0, #100	; 0x64
9002a148:	d83e      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002a14a:	6833      	ldr	r3, [r6, #0]
9002a14c:	05da      	lsls	r2, r3, #23
9002a14e:	d5f7      	bpl.n	9002a140 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a150:	68a3      	ldr	r3, [r4, #8]
9002a152:	2b01      	cmp	r3, #1
9002a154:	f000 817e 	beq.w	9002a454 <HAL_RCC_OscConfig+0x5c0>
9002a158:	2b00      	cmp	r3, #0
9002a15a:	f000 8149 	beq.w	9002a3f0 <HAL_RCC_OscConfig+0x55c>
9002a15e:	2b05      	cmp	r3, #5
9002a160:	4bb0      	ldr	r3, [pc, #704]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a162:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9002a164:	f000 8185 	beq.w	9002a472 <HAL_RCC_OscConfig+0x5de>
9002a168:	f022 0201 	bic.w	r2, r2, #1
9002a16c:	671a      	str	r2, [r3, #112]	; 0x70
9002a16e:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9002a170:	f022 0204 	bic.w	r2, r2, #4
9002a174:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9002a176:	f7fe fb09 	bl	9002878c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002a17a:	4eaa      	ldr	r6, [pc, #680]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
9002a17c:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9002a180:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002a182:	e004      	b.n	9002a18e <HAL_RCC_OscConfig+0x2fa>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
9002a184:	f7fe fb02 	bl	9002878c <HAL_GetTick>
9002a188:	1b40      	subs	r0, r0, r5
9002a18a:	42b8      	cmp	r0, r7
9002a18c:	d81c      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002a18e:	6f33      	ldr	r3, [r6, #112]	; 0x70
9002a190:	079b      	lsls	r3, r3, #30
9002a192:	d5f7      	bpl.n	9002a184 <HAL_RCC_OscConfig+0x2f0>
9002a194:	e714      	b.n	90029fc0 <HAL_RCC_OscConfig+0x12c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9002a196:	4aa3      	ldr	r2, [pc, #652]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a198:	6813      	ldr	r3, [r2, #0]
9002a19a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9002a19e:	6013      	str	r3, [r2, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9002a1a0:	e6a0      	b.n	90029ee4 <HAL_RCC_OscConfig+0x50>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9002a1a2:	f7fe faf9 	bl	90028798 <HAL_GetREVID>
9002a1a6:	f241 0303 	movw	r3, #4099	; 0x1003
9002a1aa:	4298      	cmp	r0, r3
9002a1ac:	d872      	bhi.n	9002a294 <HAL_RCC_OscConfig+0x400>
9002a1ae:	6a22      	ldr	r2, [r4, #32]
9002a1b0:	2a20      	cmp	r2, #32
9002a1b2:	f000 8155 	beq.w	9002a460 <HAL_RCC_OscConfig+0x5cc>
9002a1b6:	499b      	ldr	r1, [pc, #620]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a1b8:	684b      	ldr	r3, [r1, #4]
9002a1ba:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9002a1be:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9002a1c2:	604b      	str	r3, [r1, #4]
9002a1c4:	6823      	ldr	r3, [r4, #0]
9002a1c6:	e6c4      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
            return HAL_TIMEOUT;
9002a1c8:	2003      	movs	r0, #3
}
9002a1ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9002a1cc:	4b95      	ldr	r3, [pc, #596]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
9002a1ce:	f241 3788 	movw	r7, #5000	; 0x1388
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9002a1d2:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9002a1d4:	461e      	mov	r6, r3
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9002a1d6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9002a1da:	601a      	str	r2, [r3, #0]
9002a1dc:	681a      	ldr	r2, [r3, #0]
9002a1de:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9002a1e2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9002a1e4:	f7fe fad2 	bl	9002878c <HAL_GetTick>
9002a1e8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9002a1ea:	e004      	b.n	9002a1f6 <HAL_RCC_OscConfig+0x362>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
9002a1ec:	f7fe face 	bl	9002878c <HAL_GetTick>
9002a1f0:	1b40      	subs	r0, r0, r5
9002a1f2:	42b8      	cmp	r0, r7
9002a1f4:	d8e8      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9002a1f6:	6833      	ldr	r3, [r6, #0]
9002a1f8:	0398      	lsls	r0, r3, #14
9002a1fa:	d4f7      	bmi.n	9002a1ec <HAL_RCC_OscConfig+0x358>
9002a1fc:	e682      	b.n	90029f04 <HAL_RCC_OscConfig+0x70>
      __HAL_RCC_HSI48_DISABLE();
9002a1fe:	4b89      	ldr	r3, [pc, #548]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a200:	681a      	ldr	r2, [r3, #0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9002a202:	461e      	mov	r6, r3
      __HAL_RCC_HSI48_DISABLE();
9002a204:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9002a208:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
9002a20a:	f7fe fabf 	bl	9002878c <HAL_GetTick>
9002a20e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9002a210:	e004      	b.n	9002a21c <HAL_RCC_OscConfig+0x388>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
9002a212:	f7fe fabb 	bl	9002878c <HAL_GetTick>
9002a216:	1b40      	subs	r0, r0, r5
9002a218:	2802      	cmp	r0, #2
9002a21a:	d8d5      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9002a21c:	6833      	ldr	r3, [r6, #0]
9002a21e:	0498      	lsls	r0, r3, #18
9002a220:	d4f7      	bmi.n	9002a212 <HAL_RCC_OscConfig+0x37e>
9002a222:	e6c9      	b.n	90029fb8 <HAL_RCC_OscConfig+0x124>
        __HAL_RCC_CSI_DISABLE();
9002a224:	4b7f      	ldr	r3, [pc, #508]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a226:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9002a228:	461e      	mov	r6, r3
        __HAL_RCC_CSI_DISABLE();
9002a22a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
9002a22e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9002a230:	f7fe faac 	bl	9002878c <HAL_GetTick>
9002a234:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9002a236:	e004      	b.n	9002a242 <HAL_RCC_OscConfig+0x3ae>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
9002a238:	f7fe faa8 	bl	9002878c <HAL_GetTick>
9002a23c:	1b40      	subs	r0, r0, r5
9002a23e:	2802      	cmp	r0, #2
9002a240:	d8c2      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9002a242:	6833      	ldr	r3, [r6, #0]
9002a244:	05df      	lsls	r7, r3, #23
9002a246:	d4f7      	bmi.n	9002a238 <HAL_RCC_OscConfig+0x3a4>
9002a248:	6823      	ldr	r3, [r4, #0]
9002a24a:	e682      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9002a24c:	4a75      	ldr	r2, [pc, #468]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a24e:	6921      	ldr	r1, [r4, #16]
9002a250:	6853      	ldr	r3, [r2, #4]
9002a252:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9002a256:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9002a25a:	6053      	str	r3, [r2, #4]
9002a25c:	6823      	ldr	r3, [r4, #0]
9002a25e:	e676      	b.n	90029f4e <HAL_RCC_OscConfig+0xba>
        __HAL_RCC_HSI_DISABLE();
9002a260:	4b70      	ldr	r3, [pc, #448]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a262:	681a      	ldr	r2, [r3, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9002a264:	461e      	mov	r6, r3
        __HAL_RCC_HSI_DISABLE();
9002a266:	f022 0201 	bic.w	r2, r2, #1
9002a26a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9002a26c:	f7fe fa8e 	bl	9002878c <HAL_GetTick>
9002a270:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9002a272:	e004      	b.n	9002a27e <HAL_RCC_OscConfig+0x3ea>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
9002a274:	f7fe fa8a 	bl	9002878c <HAL_GetTick>
9002a278:	1b40      	subs	r0, r0, r5
9002a27a:	2802      	cmp	r0, #2
9002a27c:	d8a4      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9002a27e:	6833      	ldr	r3, [r6, #0]
9002a280:	0758      	lsls	r0, r3, #29
9002a282:	d4f7      	bmi.n	9002a274 <HAL_RCC_OscConfig+0x3e0>
9002a284:	6823      	ldr	r3, [r4, #0]
9002a286:	e662      	b.n	90029f4e <HAL_RCC_OscConfig+0xba>
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9002a288:	0792      	lsls	r2, r2, #30
9002a28a:	f47f aef0 	bne.w	9002a06e <HAL_RCC_OscConfig+0x1da>
9002a28e:	e643      	b.n	90029f18 <HAL_RCC_OscConfig+0x84>
    return HAL_ERROR;
9002a290:	2001      	movs	r0, #1
}
9002a292:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9002a294:	4a63      	ldr	r2, [pc, #396]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a296:	6a21      	ldr	r1, [r4, #32]
9002a298:	68d3      	ldr	r3, [r2, #12]
9002a29a:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9002a29e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9002a2a2:	60d3      	str	r3, [r2, #12]
9002a2a4:	6823      	ldr	r3, [r4, #0]
9002a2a6:	e654      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
        tickstart = HAL_GetTick();
9002a2a8:	f7fe fa70 	bl	9002878c <HAL_GetTick>
9002a2ac:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9002a2ae:	e004      	b.n	9002a2ba <HAL_RCC_OscConfig+0x426>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
9002a2b0:	f7fe fa6c 	bl	9002878c <HAL_GetTick>
9002a2b4:	1b80      	subs	r0, r0, r6
9002a2b6:	2802      	cmp	r0, #2
9002a2b8:	d886      	bhi.n	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9002a2ba:	682b      	ldr	r3, [r5, #0]
9002a2bc:	0199      	lsls	r1, r3, #6
9002a2be:	d4f7      	bmi.n	9002a2b0 <HAL_RCC_OscConfig+0x41c>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9002a2c0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9002a2c2:	4b59      	ldr	r3, [pc, #356]	; (9002a428 <HAL_RCC_OscConfig+0x594>)
9002a2c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9002a2c6:	4013      	ands	r3, r2
9002a2c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9002a2ca:	4958      	ldr	r1, [pc, #352]	; (9002a42c <HAL_RCC_OscConfig+0x598>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9002a2cc:	4303      	orrs	r3, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9002a2ce:	4e55      	ldr	r6, [pc, #340]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9002a2d0:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9002a2d4:	62ab      	str	r3, [r5, #40]	; 0x28
9002a2d6:	6b27      	ldr	r7, [r4, #48]	; 0x30
9002a2d8:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9002a2dc:	3f01      	subs	r7, #1
9002a2de:	1e50      	subs	r0, r2, #1
9002a2e0:	3b01      	subs	r3, #1
9002a2e2:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9002a2e4:	f3c7 0708 	ubfx	r7, r7, #0, #9
9002a2e8:	025b      	lsls	r3, r3, #9
9002a2ea:	0400      	lsls	r0, r0, #16
9002a2ec:	3a01      	subs	r2, #1
9002a2ee:	b29b      	uxth	r3, r3
9002a2f0:	f400 00fe 	and.w	r0, r0, #8323072	; 0x7f0000
9002a2f4:	0612      	lsls	r2, r2, #24
9002a2f6:	4303      	orrs	r3, r0
9002a2f8:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9002a2fc:	433b      	orrs	r3, r7
9002a2fe:	4313      	orrs	r3, r2
9002a300:	632b      	str	r3, [r5, #48]	; 0x30
         __HAL_RCC_PLLFRACN_DISABLE();
9002a302:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a304:	f023 0301 	bic.w	r3, r3, #1
9002a308:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9002a30a:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9002a30c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9002a30e:	4011      	ands	r1, r2
9002a310:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9002a314:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9002a316:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a318:	6c22      	ldr	r2, [r4, #64]	; 0x40
9002a31a:	f023 030c 	bic.w	r3, r3, #12
9002a31e:	4313      	orrs	r3, r2
9002a320:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9002a322:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a324:	6c62      	ldr	r2, [r4, #68]	; 0x44
9002a326:	f023 0302 	bic.w	r3, r3, #2
9002a32a:	4313      	orrs	r3, r2
9002a32c:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9002a32e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a330:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9002a334:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002a336:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a338:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9002a33c:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9002a33e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a340:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9002a344:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_ENABLE();
9002a346:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9002a348:	f043 0301 	orr.w	r3, r3, #1
9002a34c:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9002a34e:	682b      	ldr	r3, [r5, #0]
9002a350:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9002a354:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9002a356:	f7fe fa19 	bl	9002878c <HAL_GetTick>
9002a35a:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9002a35c:	e005      	b.n	9002a36a <HAL_RCC_OscConfig+0x4d6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
9002a35e:	f7fe fa15 	bl	9002878c <HAL_GetTick>
9002a362:	1b00      	subs	r0, r0, r4
9002a364:	2802      	cmp	r0, #2
9002a366:	f63f af2f 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9002a36a:	6833      	ldr	r3, [r6, #0]
9002a36c:	019a      	lsls	r2, r3, #6
9002a36e:	d5f6      	bpl.n	9002a35e <HAL_RCC_OscConfig+0x4ca>
9002a370:	e644      	b.n	90029ffc <HAL_RCC_OscConfig+0x168>
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9002a372:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9002a374:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9002a376:	6b1d      	ldr	r5, [r3, #48]	; 0x30
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9002a378:	f43f ae41 	beq.w	90029ffe <HAL_RCC_OscConfig+0x16a>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9002a37c:	f002 0303 	and.w	r3, r2, #3
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9002a380:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9002a382:	428b      	cmp	r3, r1
9002a384:	f47f aebd 	bne.w	9002a102 <HAL_RCC_OscConfig+0x26e>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9002a388:	f3c2 1205 	ubfx	r2, r2, #4, #6
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9002a38c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a38e:	429a      	cmp	r2, r3
9002a390:	f47f aeb7 	bne.w	9002a102 <HAL_RCC_OscConfig+0x26e>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9002a394:	6b23      	ldr	r3, [r4, #48]	; 0x30
9002a396:	f3c5 0208 	ubfx	r2, r5, #0, #9
9002a39a:	3b01      	subs	r3, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9002a39c:	429a      	cmp	r2, r3
9002a39e:	f47f aeb0 	bne.w	9002a102 <HAL_RCC_OscConfig+0x26e>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9002a3a2:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002a3a4:	f3c5 2246 	ubfx	r2, r5, #9, #7
9002a3a8:	3b01      	subs	r3, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9002a3aa:	429a      	cmp	r2, r3
9002a3ac:	f47f aea9 	bne.w	9002a102 <HAL_RCC_OscConfig+0x26e>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9002a3b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9002a3b2:	f3c5 4206 	ubfx	r2, r5, #16, #7
9002a3b6:	3b01      	subs	r3, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9002a3b8:	429a      	cmp	r2, r3
9002a3ba:	f47f aea2 	bne.w	9002a102 <HAL_RCC_OscConfig+0x26e>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9002a3be:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9002a3c0:	f3c5 6506 	ubfx	r5, r5, #24, #7
9002a3c4:	3801      	subs	r0, #1
  return HAL_OK;
9002a3c6:	1a28      	subs	r0, r5, r0
9002a3c8:	bf18      	it	ne
9002a3ca:	2001      	movne	r0, #1
}
9002a3cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9002a3ce:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9002a3d2:	601a      	str	r2, [r3, #0]
9002a3d4:	681a      	ldr	r2, [r3, #0]
9002a3d6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9002a3da:	601a      	str	r2, [r3, #0]
9002a3dc:	e582      	b.n	90029ee4 <HAL_RCC_OscConfig+0x50>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9002a3de:	4a11      	ldr	r2, [pc, #68]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
9002a3e0:	6853      	ldr	r3, [r2, #4]
9002a3e2:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9002a3e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9002a3ea:	6053      	str	r3, [r2, #4]
9002a3ec:	6823      	ldr	r3, [r4, #0]
9002a3ee:	e5ae      	b.n	90029f4e <HAL_RCC_OscConfig+0xba>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a3f0:	4b0c      	ldr	r3, [pc, #48]	; (9002a424 <HAL_RCC_OscConfig+0x590>)
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
9002a3f2:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a3f6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9002a3f8:	461e      	mov	r6, r3
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a3fa:	f022 0201 	bic.w	r2, r2, #1
9002a3fe:	671a      	str	r2, [r3, #112]	; 0x70
9002a400:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9002a402:	f022 0204 	bic.w	r2, r2, #4
9002a406:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9002a408:	f7fe f9c0 	bl	9002878c <HAL_GetTick>
9002a40c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9002a40e:	e005      	b.n	9002a41c <HAL_RCC_OscConfig+0x588>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
9002a410:	f7fe f9bc 	bl	9002878c <HAL_GetTick>
9002a414:	1b40      	subs	r0, r0, r5
9002a416:	42b8      	cmp	r0, r7
9002a418:	f63f aed6 	bhi.w	9002a1c8 <HAL_RCC_OscConfig+0x334>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9002a41c:	6f33      	ldr	r3, [r6, #112]	; 0x70
9002a41e:	0798      	lsls	r0, r3, #30
9002a420:	d4f6      	bmi.n	9002a410 <HAL_RCC_OscConfig+0x57c>
9002a422:	e5cd      	b.n	90029fc0 <HAL_RCC_OscConfig+0x12c>
9002a424:	58024400 	.word	0x58024400
9002a428:	fffffc0c 	.word	0xfffffc0c
9002a42c:	ffff0007 	.word	0xffff0007
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9002a430:	68f3      	ldr	r3, [r6, #12]
9002a432:	6a22      	ldr	r2, [r4, #32]
9002a434:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9002a438:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9002a43c:	60f3      	str	r3, [r6, #12]
9002a43e:	6823      	ldr	r3, [r4, #0]
9002a440:	e587      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9002a442:	6873      	ldr	r3, [r6, #4]
9002a444:	6922      	ldr	r2, [r4, #16]
9002a446:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9002a44a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9002a44e:	6073      	str	r3, [r6, #4]
9002a450:	6823      	ldr	r3, [r4, #0]
9002a452:	e57c      	b.n	90029f4e <HAL_RCC_OscConfig+0xba>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a454:	4a0b      	ldr	r2, [pc, #44]	; (9002a484 <HAL_RCC_OscConfig+0x5f0>)
9002a456:	6f13      	ldr	r3, [r2, #112]	; 0x70
9002a458:	f043 0301 	orr.w	r3, r3, #1
9002a45c:	6713      	str	r3, [r2, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9002a45e:	e68a      	b.n	9002a176 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9002a460:	4a08      	ldr	r2, [pc, #32]	; (9002a484 <HAL_RCC_OscConfig+0x5f0>)
9002a462:	6853      	ldr	r3, [r2, #4]
9002a464:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9002a468:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9002a46c:	6053      	str	r3, [r2, #4]
9002a46e:	6823      	ldr	r3, [r4, #0]
9002a470:	e56f      	b.n	90029f52 <HAL_RCC_OscConfig+0xbe>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9002a472:	f042 0204 	orr.w	r2, r2, #4
9002a476:	671a      	str	r2, [r3, #112]	; 0x70
9002a478:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9002a47a:	f042 0201 	orr.w	r2, r2, #1
9002a47e:	671a      	str	r2, [r3, #112]	; 0x70
9002a480:	e679      	b.n	9002a176 <HAL_RCC_OscConfig+0x2e2>
9002a482:	bf00      	nop
9002a484:	58024400 	.word	0x58024400

9002a488 <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
9002a488:	4a49      	ldr	r2, [pc, #292]	; (9002a5b0 <HAL_RCC_GetSysClockFreq+0x128>)
9002a48a:	6913      	ldr	r3, [r2, #16]
9002a48c:	f003 0338 	and.w	r3, r3, #56	; 0x38
9002a490:	2b10      	cmp	r3, #16
9002a492:	d004      	beq.n	9002a49e <HAL_RCC_GetSysClockFreq+0x16>
9002a494:	2b18      	cmp	r3, #24
9002a496:	d00d      	beq.n	9002a4b4 <HAL_RCC_GetSysClockFreq+0x2c>
9002a498:	b11b      	cbz	r3, 9002a4a2 <HAL_RCC_GetSysClockFreq+0x1a>
      }

    break;

  case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
    sysclockfreq = CSI_VALUE;
9002a49a:	4846      	ldr	r0, [pc, #280]	; (9002a5b4 <HAL_RCC_GetSysClockFreq+0x12c>)
9002a49c:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9002a49e:	4846      	ldr	r0, [pc, #280]	; (9002a5b8 <HAL_RCC_GetSysClockFreq+0x130>)
9002a4a0:	4770      	bx	lr
   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002a4a2:	6813      	ldr	r3, [r2, #0]
9002a4a4:	0699      	lsls	r1, r3, #26
9002a4a6:	d54c      	bpl.n	9002a542 <HAL_RCC_GetSysClockFreq+0xba>
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002a4a8:	6813      	ldr	r3, [r2, #0]
9002a4aa:	4844      	ldr	r0, [pc, #272]	; (9002a5bc <HAL_RCC_GetSysClockFreq+0x134>)
9002a4ac:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9002a4b0:	40d8      	lsrs	r0, r3
9002a4b2:	4770      	bx	lr
  case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002a4b4:	6a91      	ldr	r1, [r2, #40]	; 0x28
{
9002a4b6:	b430      	push	{r4, r5}
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
9002a4b8:	6a94      	ldr	r4, [r2, #40]	; 0x28
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
9002a4ba:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));

    if (pllm != 0U)
9002a4bc:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
9002a4c0:	f3c4 1005 	ubfx	r0, r4, #4, #6
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
9002a4c4:	6b55      	ldr	r5, [r2, #52]	; 0x34
    if (pllm != 0U)
9002a4c6:	d03a      	beq.n	9002a53e <HAL_RCC_GetSysClockFreq+0xb6>
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
9002a4c8:	f3c5 05cc 	ubfx	r5, r5, #3, #13
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
9002a4cc:	f003 0301 	and.w	r3, r3, #1
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002a4d0:	f001 0103 	and.w	r1, r1, #3
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
9002a4d4:	fb03 f305 	mul.w	r3, r3, r5
9002a4d8:	2901      	cmp	r1, #1
9002a4da:	ee07 3a90 	vmov	s15, r3
9002a4de:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    {
      switch (pllsource)
9002a4e2:	d002      	beq.n	9002a4ea <HAL_RCC_GetSysClockFreq+0x62>
9002a4e4:	2902      	cmp	r1, #2
9002a4e6:	d02e      	beq.n	9002a546 <HAL_RCC_GetSysClockFreq+0xbe>
9002a4e8:	b3a1      	cbz	r1, 9002a554 <HAL_RCC_GetSysClockFreq+0xcc>
      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
        break;

      default:
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a4ea:	ee07 0a90 	vmov	s15, r0
9002a4ee:	ed9f 5a34 	vldr	s10, [pc, #208]	; 9002a5c0 <HAL_RCC_GetSysClockFreq+0x138>
9002a4f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a4f6:	eec5 6a27 	vdiv.f32	s13, s10, s15
9002a4fa:	6b13      	ldr	r3, [r2, #48]	; 0x30
9002a4fc:	eddf 5a31 	vldr	s11, [pc, #196]	; 9002a5c4 <HAL_RCC_GetSysClockFreq+0x13c>
9002a500:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002a504:	ee07 3a90 	vmov	s15, r3
9002a508:	ee27 7a25 	vmul.f32	s14, s14, s11
9002a50c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a510:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9002a514:	ee37 7a87 	vadd.f32	s14, s15, s14
9002a518:	ee37 7a06 	vadd.f32	s14, s14, s12
9002a51c:	ee27 7a26 	vmul.f32	s14, s14, s13
        break;
      }
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
9002a520:	4b23      	ldr	r3, [pc, #140]	; (9002a5b0 <HAL_RCC_GetSysClockFreq+0x128>)
9002a522:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9002a524:	f3c3 2346 	ubfx	r3, r3, #9, #7
9002a528:	3301      	adds	r3, #1
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
9002a52a:	ee07 3a90 	vmov	s15, r3
9002a52e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002a532:	eec7 7a26 	vdiv.f32	s15, s14, s13
9002a536:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9002a53a:	ee17 0a90 	vmov	r0, s15
    sysclockfreq = CSI_VALUE;
    break;
  }

  return sysclockfreq;
}
9002a53e:	bc30      	pop	{r4, r5}
9002a540:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9002a542:	481e      	ldr	r0, [pc, #120]	; (9002a5bc <HAL_RCC_GetSysClockFreq+0x134>)
}
9002a544:	4770      	bx	lr
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a546:	ee07 0a90 	vmov	s15, r0
9002a54a:	ed9f 5a1f 	vldr	s10, [pc, #124]	; 9002a5c8 <HAL_RCC_GetSysClockFreq+0x140>
9002a54e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a552:	e7d0      	b.n	9002a4f6 <HAL_RCC_GetSysClockFreq+0x6e>
       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002a554:	6813      	ldr	r3, [r2, #0]
9002a556:	069b      	lsls	r3, r3, #26
9002a558:	d522      	bpl.n	9002a5a0 <HAL_RCC_GetSysClockFreq+0x118>
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002a55a:	6813      	ldr	r3, [r2, #0]
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a55c:	ee07 0a90 	vmov	s15, r0
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002a560:	4916      	ldr	r1, [pc, #88]	; (9002a5bc <HAL_RCC_GetSysClockFreq+0x134>)
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a562:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002a566:	f3c3 00c1 	ubfx	r0, r3, #3, #2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a56a:	eddf 6a16 	vldr	s13, [pc, #88]	; 9002a5c4 <HAL_RCC_GetSysClockFreq+0x13c>
9002a56e:	6b13      	ldr	r3, [r2, #48]	; 0x30
9002a570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002a574:	40c1      	lsrs	r1, r0
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a576:	ee27 7a26 	vmul.f32	s14, s14, s13
9002a57a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002a57e:	ee06 1a90 	vmov	s13, r1
9002a582:	eef8 5ae6 	vcvt.f32.s32	s11, s13
9002a586:	ee06 3a90 	vmov	s13, r3
9002a58a:	eeb8 6ae6 	vcvt.f32.s32	s12, s13
9002a58e:	eec5 6aa7 	vdiv.f32	s13, s11, s15
9002a592:	ee36 7a07 	vadd.f32	s14, s12, s14
9002a596:	ee37 7a05 	vadd.f32	s14, s14, s10
9002a59a:	ee26 7a87 	vmul.f32	s14, s13, s14
9002a59e:	e7bf      	b.n	9002a520 <HAL_RCC_GetSysClockFreq+0x98>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
9002a5a0:	ee07 0a90 	vmov	s15, r0
9002a5a4:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9002a5cc <HAL_RCC_GetSysClockFreq+0x144>
9002a5a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002a5ac:	e7a3      	b.n	9002a4f6 <HAL_RCC_GetSysClockFreq+0x6e>
9002a5ae:	bf00      	nop
9002a5b0:	58024400 	.word	0x58024400
9002a5b4:	003d0900 	.word	0x003d0900
9002a5b8:	017d7840 	.word	0x017d7840
9002a5bc:	03d09000 	.word	0x03d09000
9002a5c0:	4a742400 	.word	0x4a742400
9002a5c4:	39000000 	.word	0x39000000
9002a5c8:	4bbebc20 	.word	0x4bbebc20
9002a5cc:	4c742400 	.word	0x4c742400

9002a5d0 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
9002a5d0:	2800      	cmp	r0, #0
9002a5d2:	f000 810e 	beq.w	9002a7f2 <HAL_RCC_ClockConfig+0x222>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
9002a5d6:	4a8d      	ldr	r2, [pc, #564]	; (9002a80c <HAL_RCC_ClockConfig+0x23c>)
9002a5d8:	6813      	ldr	r3, [r2, #0]
9002a5da:	f003 030f 	and.w	r3, r3, #15
9002a5de:	428b      	cmp	r3, r1
{
9002a5e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a5e4:	4604      	mov	r4, r0
9002a5e6:	460d      	mov	r5, r1
  if(FLatency > __HAL_FLASH_GET_LATENCY())
9002a5e8:	d20c      	bcs.n	9002a604 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9002a5ea:	6813      	ldr	r3, [r2, #0]
9002a5ec:	f023 030f 	bic.w	r3, r3, #15
9002a5f0:	430b      	orrs	r3, r1
9002a5f2:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
9002a5f4:	6813      	ldr	r3, [r2, #0]
9002a5f6:	f003 030f 	and.w	r3, r3, #15
9002a5fa:	428b      	cmp	r3, r1
9002a5fc:	d002      	beq.n	9002a604 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9002a5fe:	2001      	movs	r0, #1
}
9002a600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9002a604:	6823      	ldr	r3, [r4, #0]
9002a606:	075f      	lsls	r7, r3, #29
9002a608:	d50b      	bpl.n	9002a622 <HAL_RCC_ClockConfig+0x52>
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9002a60a:	4981      	ldr	r1, [pc, #516]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a60c:	6920      	ldr	r0, [r4, #16]
9002a60e:	698a      	ldr	r2, [r1, #24]
9002a610:	f002 0270 	and.w	r2, r2, #112	; 0x70
9002a614:	4290      	cmp	r0, r2
9002a616:	d904      	bls.n	9002a622 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9002a618:	698a      	ldr	r2, [r1, #24]
9002a61a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9002a61e:	4302      	orrs	r2, r0
9002a620:	618a      	str	r2, [r1, #24]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9002a622:	071e      	lsls	r6, r3, #28
9002a624:	d50b      	bpl.n	9002a63e <HAL_RCC_ClockConfig+0x6e>
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9002a626:	497a      	ldr	r1, [pc, #488]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a628:	6960      	ldr	r0, [r4, #20]
9002a62a:	69ca      	ldr	r2, [r1, #28]
9002a62c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9002a630:	4290      	cmp	r0, r2
9002a632:	d904      	bls.n	9002a63e <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9002a634:	69ca      	ldr	r2, [r1, #28]
9002a636:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9002a63a:	4302      	orrs	r2, r0
9002a63c:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9002a63e:	06d8      	lsls	r0, r3, #27
9002a640:	d50b      	bpl.n	9002a65a <HAL_RCC_ClockConfig+0x8a>
    if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9002a642:	4973      	ldr	r1, [pc, #460]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a644:	69a0      	ldr	r0, [r4, #24]
9002a646:	69ca      	ldr	r2, [r1, #28]
9002a648:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9002a64c:	4290      	cmp	r0, r2
9002a64e:	d904      	bls.n	9002a65a <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9002a650:	69ca      	ldr	r2, [r1, #28]
9002a652:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9002a656:	4302      	orrs	r2, r0
9002a658:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9002a65a:	0699      	lsls	r1, r3, #26
9002a65c:	d50b      	bpl.n	9002a676 <HAL_RCC_ClockConfig+0xa6>
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9002a65e:	496c      	ldr	r1, [pc, #432]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a660:	69e0      	ldr	r0, [r4, #28]
9002a662:	6a0a      	ldr	r2, [r1, #32]
9002a664:	f002 0270 	and.w	r2, r2, #112	; 0x70
9002a668:	4290      	cmp	r0, r2
9002a66a:	d904      	bls.n	9002a676 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
9002a66c:	6a0a      	ldr	r2, [r1, #32]
9002a66e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9002a672:	4302      	orrs	r2, r0
9002a674:	620a      	str	r2, [r1, #32]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9002a676:	079a      	lsls	r2, r3, #30
9002a678:	f140 80ad 	bpl.w	9002a7d6 <HAL_RCC_ClockConfig+0x206>
    if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9002a67c:	4864      	ldr	r0, [pc, #400]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a67e:	68e1      	ldr	r1, [r4, #12]
9002a680:	6982      	ldr	r2, [r0, #24]
9002a682:	f002 020f 	and.w	r2, r2, #15
9002a686:	4291      	cmp	r1, r2
9002a688:	d904      	bls.n	9002a694 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9002a68a:	6982      	ldr	r2, [r0, #24]
9002a68c:	f022 020f 	bic.w	r2, r2, #15
9002a690:	430a      	orrs	r2, r1
9002a692:	6182      	str	r2, [r0, #24]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9002a694:	07d8      	lsls	r0, r3, #31
9002a696:	d531      	bpl.n	9002a6fc <HAL_RCC_ClockConfig+0x12c>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9002a698:	4a5d      	ldr	r2, [pc, #372]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a69a:	68a1      	ldr	r1, [r4, #8]
9002a69c:	6993      	ldr	r3, [r2, #24]
9002a69e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9002a6a2:	430b      	orrs	r3, r1
9002a6a4:	6193      	str	r3, [r2, #24]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9002a6a6:	6861      	ldr	r1, [r4, #4]
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9002a6a8:	6813      	ldr	r3, [r2, #0]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9002a6aa:	2902      	cmp	r1, #2
9002a6ac:	f000 80a3 	beq.w	9002a7f6 <HAL_RCC_ClockConfig+0x226>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9002a6b0:	2903      	cmp	r1, #3
9002a6b2:	f000 809a 	beq.w	9002a7ea <HAL_RCC_ClockConfig+0x21a>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9002a6b6:	2901      	cmp	r1, #1
9002a6b8:	f000 80a3 	beq.w	9002a802 <HAL_RCC_ClockConfig+0x232>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9002a6bc:	0758      	lsls	r0, r3, #29
9002a6be:	d59e      	bpl.n	9002a5fe <HAL_RCC_ClockConfig+0x2e>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9002a6c0:	4a53      	ldr	r2, [pc, #332]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
9002a6c2:	f241 3888 	movw	r8, #5000	; 0x1388
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9002a6c6:	6913      	ldr	r3, [r2, #16]
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9002a6c8:	4617      	mov	r7, r2
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9002a6ca:	f023 0307 	bic.w	r3, r3, #7
9002a6ce:	430b      	orrs	r3, r1
9002a6d0:	6113      	str	r3, [r2, #16]
      tickstart = HAL_GetTick();
9002a6d2:	f7fe f85b 	bl	9002878c <HAL_GetTick>
9002a6d6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9002a6d8:	e005      	b.n	9002a6e6 <HAL_RCC_ClockConfig+0x116>
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
9002a6da:	f7fe f857 	bl	9002878c <HAL_GetTick>
9002a6de:	1b80      	subs	r0, r0, r6
9002a6e0:	4540      	cmp	r0, r8
9002a6e2:	f200 808c 	bhi.w	9002a7fe <HAL_RCC_ClockConfig+0x22e>
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9002a6e6:	693b      	ldr	r3, [r7, #16]
9002a6e8:	6862      	ldr	r2, [r4, #4]
9002a6ea:	f003 0338 	and.w	r3, r3, #56	; 0x38
9002a6ee:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9002a6f2:	d1f2      	bne.n	9002a6da <HAL_RCC_ClockConfig+0x10a>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9002a6f4:	6823      	ldr	r3, [r4, #0]
9002a6f6:	0799      	lsls	r1, r3, #30
9002a6f8:	d506      	bpl.n	9002a708 <HAL_RCC_ClockConfig+0x138>
9002a6fa:	68e1      	ldr	r1, [r4, #12]
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9002a6fc:	4844      	ldr	r0, [pc, #272]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a6fe:	6982      	ldr	r2, [r0, #24]
9002a700:	f002 020f 	and.w	r2, r2, #15
9002a704:	428a      	cmp	r2, r1
9002a706:	d86a      	bhi.n	9002a7de <HAL_RCC_ClockConfig+0x20e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
9002a708:	4940      	ldr	r1, [pc, #256]	; (9002a80c <HAL_RCC_ClockConfig+0x23c>)
9002a70a:	680a      	ldr	r2, [r1, #0]
9002a70c:	f002 020f 	and.w	r2, r2, #15
9002a710:	42aa      	cmp	r2, r5
9002a712:	d90a      	bls.n	9002a72a <HAL_RCC_ClockConfig+0x15a>
    __HAL_FLASH_SET_LATENCY(FLatency);
9002a714:	680a      	ldr	r2, [r1, #0]
9002a716:	f022 020f 	bic.w	r2, r2, #15
9002a71a:	432a      	orrs	r2, r5
9002a71c:	600a      	str	r2, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
9002a71e:	680a      	ldr	r2, [r1, #0]
9002a720:	f002 020f 	and.w	r2, r2, #15
9002a724:	42aa      	cmp	r2, r5
9002a726:	f47f af6a 	bne.w	9002a5fe <HAL_RCC_ClockConfig+0x2e>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9002a72a:	075a      	lsls	r2, r3, #29
9002a72c:	d50b      	bpl.n	9002a746 <HAL_RCC_ClockConfig+0x176>
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9002a72e:	4938      	ldr	r1, [pc, #224]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a730:	6920      	ldr	r0, [r4, #16]
9002a732:	698a      	ldr	r2, [r1, #24]
9002a734:	f002 0270 	and.w	r2, r2, #112	; 0x70
9002a738:	4290      	cmp	r0, r2
9002a73a:	d204      	bcs.n	9002a746 <HAL_RCC_ClockConfig+0x176>
     MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9002a73c:	698a      	ldr	r2, [r1, #24]
9002a73e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9002a742:	4302      	orrs	r2, r0
9002a744:	618a      	str	r2, [r1, #24]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9002a746:	071f      	lsls	r7, r3, #28
9002a748:	d50b      	bpl.n	9002a762 <HAL_RCC_ClockConfig+0x192>
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9002a74a:	4931      	ldr	r1, [pc, #196]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a74c:	6960      	ldr	r0, [r4, #20]
9002a74e:	69ca      	ldr	r2, [r1, #28]
9002a750:	f002 0270 	and.w	r2, r2, #112	; 0x70
9002a754:	4290      	cmp	r0, r2
9002a756:	d204      	bcs.n	9002a762 <HAL_RCC_ClockConfig+0x192>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9002a758:	69ca      	ldr	r2, [r1, #28]
9002a75a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9002a75e:	4302      	orrs	r2, r0
9002a760:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9002a762:	06de      	lsls	r6, r3, #27
9002a764:	d50b      	bpl.n	9002a77e <HAL_RCC_ClockConfig+0x1ae>
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9002a766:	492a      	ldr	r1, [pc, #168]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a768:	69a0      	ldr	r0, [r4, #24]
9002a76a:	69ca      	ldr	r2, [r1, #28]
9002a76c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9002a770:	4290      	cmp	r0, r2
9002a772:	d204      	bcs.n	9002a77e <HAL_RCC_ClockConfig+0x1ae>
     MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9002a774:	69ca      	ldr	r2, [r1, #28]
9002a776:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9002a77a:	4302      	orrs	r2, r0
9002a77c:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9002a77e:	069d      	lsls	r5, r3, #26
9002a780:	d50b      	bpl.n	9002a79a <HAL_RCC_ClockConfig+0x1ca>
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9002a782:	4a23      	ldr	r2, [pc, #140]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a784:	69e1      	ldr	r1, [r4, #28]
9002a786:	6a13      	ldr	r3, [r2, #32]
9002a788:	f003 0370 	and.w	r3, r3, #112	; 0x70
9002a78c:	4299      	cmp	r1, r3
9002a78e:	d204      	bcs.n	9002a79a <HAL_RCC_ClockConfig+0x1ca>
     MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
9002a790:	6a13      	ldr	r3, [r2, #32]
9002a792:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9002a796:	430b      	orrs	r3, r1
9002a798:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002a79a:	f7ff fe75 	bl	9002a488 <HAL_RCC_GetSysClockFreq>
9002a79e:	4b1c      	ldr	r3, [pc, #112]	; (9002a810 <HAL_RCC_ClockConfig+0x240>)
9002a7a0:	4602      	mov	r2, r0
9002a7a2:	481c      	ldr	r0, [pc, #112]	; (9002a814 <HAL_RCC_ClockConfig+0x244>)
9002a7a4:	6999      	ldr	r1, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7a6:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002a7a8:	f3c1 2103 	ubfx	r1, r1, #8, #4
  halstatus = HAL_InitTick (uwTickPrio);
9002a7ac:	4d1a      	ldr	r5, [pc, #104]	; (9002a818 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7ae:	f003 030f 	and.w	r3, r3, #15
9002a7b2:	4c1a      	ldr	r4, [pc, #104]	; (9002a81c <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002a7b4:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7b6:	5cc3      	ldrb	r3, [r0, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002a7b8:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick (uwTickPrio);
9002a7bc:	6828      	ldr	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7be:	f003 031f 	and.w	r3, r3, #31
  SystemCoreClock = common_system_clock;
9002a7c2:	4d17      	ldr	r5, [pc, #92]	; (9002a820 <HAL_RCC_ClockConfig+0x250>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9002a7c4:	40ca      	lsrs	r2, r1
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7c6:	fa22 f303 	lsr.w	r3, r2, r3
  SystemCoreClock = common_system_clock;
9002a7ca:	602a      	str	r2, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a7cc:	6023      	str	r3, [r4, #0]
}
9002a7ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick (uwTickPrio);
9002a7d2:	f7fd bf79 	b.w	900286c8 <HAL_InitTick>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9002a7d6:	07da      	lsls	r2, r3, #31
9002a7d8:	f53f af5e 	bmi.w	9002a698 <HAL_RCC_ClockConfig+0xc8>
9002a7dc:	e794      	b.n	9002a708 <HAL_RCC_ClockConfig+0x138>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9002a7de:	6982      	ldr	r2, [r0, #24]
9002a7e0:	f022 020f 	bic.w	r2, r2, #15
9002a7e4:	4311      	orrs	r1, r2
9002a7e6:	6181      	str	r1, [r0, #24]
9002a7e8:	e78e      	b.n	9002a708 <HAL_RCC_ClockConfig+0x138>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9002a7ea:	019f      	lsls	r7, r3, #6
9002a7ec:	f53f af68 	bmi.w	9002a6c0 <HAL_RCC_ClockConfig+0xf0>
9002a7f0:	e705      	b.n	9002a5fe <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9002a7f2:	2001      	movs	r0, #1
}
9002a7f4:	4770      	bx	lr
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9002a7f6:	039b      	lsls	r3, r3, #14
9002a7f8:	f53f af62 	bmi.w	9002a6c0 <HAL_RCC_ClockConfig+0xf0>
9002a7fc:	e6ff      	b.n	9002a5fe <HAL_RCC_ClockConfig+0x2e>
            return HAL_TIMEOUT;
9002a7fe:	2003      	movs	r0, #3
9002a800:	e6fe      	b.n	9002a600 <HAL_RCC_ClockConfig+0x30>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9002a802:	05de      	lsls	r6, r3, #23
9002a804:	f53f af5c 	bmi.w	9002a6c0 <HAL_RCC_ClockConfig+0xf0>
9002a808:	e6f9      	b.n	9002a5fe <HAL_RCC_ClockConfig+0x2e>
9002a80a:	bf00      	nop
9002a80c:	52002000 	.word	0x52002000
9002a810:	58024400 	.word	0x58024400
9002a814:	900348cc 	.word	0x900348cc
9002a818:	2000003c 	.word	0x2000003c
9002a81c:	20000034 	.word	0x20000034
9002a820:	20000030 	.word	0x20000030

9002a824 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9002a824:	b538      	push	{r3, r4, r5, lr}
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9002a826:	f7ff fe2f 	bl	9002a488 <HAL_RCC_GetSysClockFreq>
9002a82a:	4b0b      	ldr	r3, [pc, #44]	; (9002a858 <HAL_RCC_GetHCLKFreq+0x34>)
9002a82c:	490b      	ldr	r1, [pc, #44]	; (9002a85c <HAL_RCC_GetHCLKFreq+0x38>)
9002a82e:	699a      	ldr	r2, [r3, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a830:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9002a832:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a836:	4c0a      	ldr	r4, [pc, #40]	; (9002a860 <HAL_RCC_GetHCLKFreq+0x3c>)
9002a838:	f003 030f 	and.w	r3, r3, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9002a83c:	4d09      	ldr	r5, [pc, #36]	; (9002a864 <HAL_RCC_GetHCLKFreq+0x40>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9002a83e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a840:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9002a842:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a846:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9002a84a:	fa20 f202 	lsr.w	r2, r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a84e:	fa22 f003 	lsr.w	r0, r2, r3
  SystemCoreClock = common_system_clock;
9002a852:	602a      	str	r2, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9002a854:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9002a856:	bd38      	pop	{r3, r4, r5, pc}
9002a858:	58024400 	.word	0x58024400
9002a85c:	900348cc 	.word	0x900348cc
9002a860:	20000034 	.word	0x20000034
9002a864:	20000030 	.word	0x20000030

9002a868 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9002a868:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9002a86a:	f7ff ffdb 	bl	9002a824 <HAL_RCC_GetHCLKFreq>
9002a86e:	4b05      	ldr	r3, [pc, #20]	; (9002a884 <HAL_RCC_GetPCLK1Freq+0x1c>)
9002a870:	4a05      	ldr	r2, [pc, #20]	; (9002a888 <HAL_RCC_GetPCLK1Freq+0x20>)
9002a872:	69db      	ldr	r3, [r3, #28]
9002a874:	f3c3 1302 	ubfx	r3, r3, #4, #3
9002a878:	5cd3      	ldrb	r3, [r2, r3]
9002a87a:	f003 031f 	and.w	r3, r3, #31
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9002a87e:	40d8      	lsrs	r0, r3
9002a880:	bd08      	pop	{r3, pc}
9002a882:	bf00      	nop
9002a884:	58024400 	.word	0x58024400
9002a888:	900348cc 	.word	0x900348cc

9002a88c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9002a88c:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2)>> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9002a88e:	f7ff ffc9 	bl	9002a824 <HAL_RCC_GetHCLKFreq>
9002a892:	4b05      	ldr	r3, [pc, #20]	; (9002a8a8 <HAL_RCC_GetPCLK2Freq+0x1c>)
9002a894:	4a05      	ldr	r2, [pc, #20]	; (9002a8ac <HAL_RCC_GetPCLK2Freq+0x20>)
9002a896:	69db      	ldr	r3, [r3, #28]
9002a898:	f3c3 2302 	ubfx	r3, r3, #8, #3
9002a89c:	5cd3      	ldrb	r3, [r2, r3]
9002a89e:	f003 031f 	and.w	r3, r3, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2)>> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9002a8a2:	40d8      	lsrs	r0, r3
9002a8a4:	bd08      	pop	{r3, pc}
9002a8a6:	bf00      	nop
9002a8a8:	58024400 	.word	0x58024400
9002a8ac:	900348cc 	.word	0x900348cc

9002a8b0 <RCCEx_PLL2_Config>:
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9002a8b0:	4a3b      	ldr	r2, [pc, #236]	; (9002a9a0 <RCCEx_PLL2_Config+0xf0>)
{
9002a8b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9002a8b4:	6a93      	ldr	r3, [r2, #40]	; 0x28
9002a8b6:	f003 0303 	and.w	r3, r3, #3
9002a8ba:	2b03      	cmp	r3, #3
9002a8bc:	d069      	beq.n	9002a992 <RCCEx_PLL2_Config+0xe2>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9002a8be:	6813      	ldr	r3, [r2, #0]
9002a8c0:	4606      	mov	r6, r0
9002a8c2:	460f      	mov	r7, r1

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9002a8c4:	4614      	mov	r4, r2
    __HAL_RCC_PLL2_DISABLE();
9002a8c6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9002a8ca:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
9002a8cc:	f7fd ff5e 	bl	9002878c <HAL_GetTick>
9002a8d0:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9002a8d2:	e004      	b.n	9002a8de <RCCEx_PLL2_Config+0x2e>
    {
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
9002a8d4:	f7fd ff5a 	bl	9002878c <HAL_GetTick>
9002a8d8:	1b43      	subs	r3, r0, r5
9002a8da:	2b02      	cmp	r3, #2
9002a8dc:	d857      	bhi.n	9002a98e <RCCEx_PLL2_Config+0xde>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9002a8de:	6823      	ldr	r3, [r4, #0]
9002a8e0:	011a      	lsls	r2, r3, #4
9002a8e2:	d4f7      	bmi.n	9002a8d4 <RCCEx_PLL2_Config+0x24>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9002a8e4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9002a8e6:	6832      	ldr	r2, [r6, #0]
9002a8e8:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9002a8ec:	492d      	ldr	r1, [pc, #180]	; (9002a9a4 <RCCEx_PLL2_Config+0xf4>)
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9002a8ee:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9002a8f2:	62a3      	str	r3, [r4, #40]	; 0x28
9002a8f4:	6875      	ldr	r5, [r6, #4]
9002a8f6:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9002a8fa:	3d01      	subs	r5, #1
9002a8fc:	1e50      	subs	r0, r2, #1
9002a8fe:	3b01      	subs	r3, #1
9002a900:	6932      	ldr	r2, [r6, #16]
9002a902:	f3c5 0508 	ubfx	r5, r5, #0, #9
9002a906:	025b      	lsls	r3, r3, #9
9002a908:	0400      	lsls	r0, r0, #16
9002a90a:	3a01      	subs	r2, #1
9002a90c:	b29b      	uxth	r3, r3
9002a90e:	f400 00fe 	and.w	r0, r0, #8323072	; 0x7f0000
9002a912:	0612      	lsls	r2, r2, #24
9002a914:	4303      	orrs	r3, r0
9002a916:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9002a91a:	432b      	orrs	r3, r5
9002a91c:	4313      	orrs	r3, r2
9002a91e:	63a3      	str	r3, [r4, #56]	; 0x38
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9002a920:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a922:	6972      	ldr	r2, [r6, #20]
9002a924:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9002a928:	4313      	orrs	r3, r2
9002a92a:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9002a92c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a92e:	69b2      	ldr	r2, [r6, #24]
9002a930:	f023 0320 	bic.w	r3, r3, #32
9002a934:	4313      	orrs	r3, r2
9002a936:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9002a938:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a93a:	f023 0310 	bic.w	r3, r3, #16
9002a93e:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9002a940:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9002a942:	69f3      	ldr	r3, [r6, #28]
9002a944:	4011      	ands	r1, r2
9002a946:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9002a94a:	63e1      	str	r1, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9002a94c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002a94e:	f043 0310 	orr.w	r3, r3, #16
9002a952:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9002a954:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
9002a956:	b1f7      	cbz	r7, 9002a996 <RCCEx_PLL2_Config+0xe6>
    }
    else if(Divider == DIVIDER_Q_UPDATE)
9002a958:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9002a95a:	bf0c      	ite	eq
9002a95c:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9002a960:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9002a964:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9002a966:	4b0e      	ldr	r3, [pc, #56]	; (9002a9a0 <RCCEx_PLL2_Config+0xf0>)
9002a968:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9002a96a:	461d      	mov	r5, r3
    __HAL_RCC_PLL2_ENABLE();
9002a96c:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
9002a970:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
9002a972:	f7fd ff0b 	bl	9002878c <HAL_GetTick>
9002a976:	4604      	mov	r4, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9002a978:	e004      	b.n	9002a984 <RCCEx_PLL2_Config+0xd4>
    {
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
9002a97a:	f7fd ff07 	bl	9002878c <HAL_GetTick>
9002a97e:	1b00      	subs	r0, r0, r4
9002a980:	2802      	cmp	r0, #2
9002a982:	d804      	bhi.n	9002a98e <RCCEx_PLL2_Config+0xde>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9002a984:	682b      	ldr	r3, [r5, #0]
9002a986:	011b      	lsls	r3, r3, #4
9002a988:	d5f7      	bpl.n	9002a97a <RCCEx_PLL2_Config+0xca>
    }

  }


  return status;
9002a98a:	2000      	movs	r0, #0
}
9002a98c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9002a98e:	2003      	movs	r0, #3
}
9002a990:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9002a992:	2001      	movs	r0, #1
}
9002a994:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9002a996:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9002a99a:	62e3      	str	r3, [r4, #44]	; 0x2c
9002a99c:	e7e3      	b.n	9002a966 <RCCEx_PLL2_Config+0xb6>
9002a99e:	bf00      	nop
9002a9a0:	58024400 	.word	0x58024400
9002a9a4:	ffff0007 	.word	0xffff0007

9002a9a8 <RCCEx_PLL3_Config>:
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9002a9a8:	4a3b      	ldr	r2, [pc, #236]	; (9002aa98 <RCCEx_PLL3_Config+0xf0>)
{
9002a9aa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9002a9ac:	6a93      	ldr	r3, [r2, #40]	; 0x28
9002a9ae:	f003 0303 	and.w	r3, r3, #3
9002a9b2:	2b03      	cmp	r3, #3
9002a9b4:	d069      	beq.n	9002aa8a <RCCEx_PLL3_Config+0xe2>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9002a9b6:	6813      	ldr	r3, [r2, #0]
9002a9b8:	4606      	mov	r6, r0
9002a9ba:	460f      	mov	r7, r1

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9002a9bc:	4614      	mov	r4, r2
    __HAL_RCC_PLL3_DISABLE();
9002a9be:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9002a9c2:	6013      	str	r3, [r2, #0]
    tickstart = HAL_GetTick();
9002a9c4:	f7fd fee2 	bl	9002878c <HAL_GetTick>
9002a9c8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9002a9ca:	e004      	b.n	9002a9d6 <RCCEx_PLL3_Config+0x2e>
    {
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
9002a9cc:	f7fd fede 	bl	9002878c <HAL_GetTick>
9002a9d0:	1b43      	subs	r3, r0, r5
9002a9d2:	2b02      	cmp	r3, #2
9002a9d4:	d857      	bhi.n	9002aa86 <RCCEx_PLL3_Config+0xde>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9002a9d6:	6823      	ldr	r3, [r4, #0]
9002a9d8:	009a      	lsls	r2, r3, #2
9002a9da:	d4f7      	bmi.n	9002a9cc <RCCEx_PLL3_Config+0x24>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9002a9dc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9002a9de:	6832      	ldr	r2, [r6, #0]
9002a9e0:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9002a9e4:	492d      	ldr	r1, [pc, #180]	; (9002aa9c <RCCEx_PLL3_Config+0xf4>)
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9002a9e6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9002a9ea:	62a3      	str	r3, [r4, #40]	; 0x28
9002a9ec:	6875      	ldr	r5, [r6, #4]
9002a9ee:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9002a9f2:	3d01      	subs	r5, #1
9002a9f4:	1e50      	subs	r0, r2, #1
9002a9f6:	3b01      	subs	r3, #1
9002a9f8:	6932      	ldr	r2, [r6, #16]
9002a9fa:	f3c5 0508 	ubfx	r5, r5, #0, #9
9002a9fe:	025b      	lsls	r3, r3, #9
9002aa00:	0400      	lsls	r0, r0, #16
9002aa02:	3a01      	subs	r2, #1
9002aa04:	b29b      	uxth	r3, r3
9002aa06:	f400 00fe 	and.w	r0, r0, #8323072	; 0x7f0000
9002aa0a:	0612      	lsls	r2, r2, #24
9002aa0c:	4303      	orrs	r3, r0
9002aa0e:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9002aa12:	432b      	orrs	r3, r5
9002aa14:	4313      	orrs	r3, r2
9002aa16:	6423      	str	r3, [r4, #64]	; 0x40
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9002aa18:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002aa1a:	6972      	ldr	r2, [r6, #20]
9002aa1c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9002aa20:	4313      	orrs	r3, r2
9002aa22:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9002aa24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002aa26:	69b2      	ldr	r2, [r6, #24]
9002aa28:	f423 7300 	bic.w	r3, r3, #512	; 0x200
9002aa2c:	4313      	orrs	r3, r2
9002aa2e:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9002aa30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002aa32:	f423 7380 	bic.w	r3, r3, #256	; 0x100
9002aa36:	62e3      	str	r3, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9002aa38:	6c62      	ldr	r2, [r4, #68]	; 0x44
9002aa3a:	69f3      	ldr	r3, [r6, #28]
9002aa3c:	4011      	ands	r1, r2
9002aa3e:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9002aa42:	6461      	str	r1, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9002aa44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002aa46:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9002aa4a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9002aa4c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
9002aa4e:	b1f7      	cbz	r7, 9002aa8e <RCCEx_PLL3_Config+0xe6>
    }
    else if(Divider == DIVIDER_Q_UPDATE)
9002aa50:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9002aa52:	bf0c      	ite	eq
9002aa54:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9002aa58:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9002aa5c:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9002aa5e:	4b0e      	ldr	r3, [pc, #56]	; (9002aa98 <RCCEx_PLL3_Config+0xf0>)
9002aa60:	681a      	ldr	r2, [r3, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9002aa62:	461d      	mov	r5, r3
    __HAL_RCC_PLL3_ENABLE();
9002aa64:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
9002aa68:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
9002aa6a:	f7fd fe8f 	bl	9002878c <HAL_GetTick>
9002aa6e:	4604      	mov	r4, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9002aa70:	e004      	b.n	9002aa7c <RCCEx_PLL3_Config+0xd4>
    {
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
9002aa72:	f7fd fe8b 	bl	9002878c <HAL_GetTick>
9002aa76:	1b00      	subs	r0, r0, r4
9002aa78:	2802      	cmp	r0, #2
9002aa7a:	d804      	bhi.n	9002aa86 <RCCEx_PLL3_Config+0xde>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9002aa7c:	682b      	ldr	r3, [r5, #0]
9002aa7e:	009b      	lsls	r3, r3, #2
9002aa80:	d5f7      	bpl.n	9002aa72 <RCCEx_PLL3_Config+0xca>
    }

  }


  return status;
9002aa82:	2000      	movs	r0, #0
}
9002aa84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9002aa86:	2003      	movs	r0, #3
}
9002aa88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9002aa8a:	2001      	movs	r0, #1
}
9002aa8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9002aa8e:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9002aa92:	62e3      	str	r3, [r4, #44]	; 0x2c
9002aa94:	e7e3      	b.n	9002aa5e <RCCEx_PLL3_Config+0xb6>
9002aa96:	bf00      	nop
9002aa98:	58024400 	.word	0x58024400
9002aa9c:	ffff0007 	.word	0xffff0007

9002aaa0 <HAL_RCCEx_PeriphCLKConfig>:
{
9002aaa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9002aaa4:	6803      	ldr	r3, [r0, #0]
{
9002aaa6:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9002aaa8:	f013 6600 	ands.w	r6, r3, #134217728	; 0x8000000
9002aaac:	d01c      	beq.n	9002aae8 <HAL_RCCEx_PeriphCLKConfig+0x48>
    switch(PeriphClkInit->SpdifrxClockSelection)
9002aaae:	6e42      	ldr	r2, [r0, #100]	; 0x64
9002aab0:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
9002aab4:	f000 84ba 	beq.w	9002b42c <HAL_RCCEx_PeriphCLKConfig+0x98c>
9002aab8:	d823      	bhi.n	9002ab02 <HAL_RCCEx_PeriphCLKConfig+0x62>
9002aaba:	2a00      	cmp	r2, #0
9002aabc:	f000 83dc 	beq.w	9002b278 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
9002aac0:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
9002aac4:	d120      	bne.n	9002ab08 <HAL_RCCEx_PeriphCLKConfig+0x68>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
9002aac6:	2102      	movs	r1, #2
9002aac8:	3004      	adds	r0, #4
9002aaca:	f7ff fef1 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002aace:	4606      	mov	r6, r0
    if(ret == HAL_OK)
9002aad0:	2e00      	cmp	r6, #0
9002aad2:	f040 849f 	bne.w	9002b414 <HAL_RCCEx_PeriphCLKConfig+0x974>
9002aad6:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002aad8:	6823      	ldr	r3, [r4, #0]
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9002aada:	48ab      	ldr	r0, [pc, #684]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002aadc:	2600      	movs	r6, #0
9002aade:	6d01      	ldr	r1, [r0, #80]	; 0x50
9002aae0:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9002aae4:	430a      	orrs	r2, r1
9002aae6:	6502      	str	r2, [r0, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9002aae8:	05dd      	lsls	r5, r3, #23
9002aaea:	d511      	bpl.n	9002ab10 <HAL_RCCEx_PeriphCLKConfig+0x70>
    switch(PeriphClkInit->Sai1ClockSelection)
9002aaec:	6d62      	ldr	r2, [r4, #84]	; 0x54
9002aaee:	2a04      	cmp	r2, #4
9002aaf0:	f200 851c 	bhi.w	9002b52c <HAL_RCCEx_PeriphCLKConfig+0xa8c>
9002aaf4:	e8df f012 	tbh	[pc, r2, lsl #1]
9002aaf8:	0476046f 	.word	0x0476046f
9002aafc:	02d40486 	.word	0x02d40486
9002ab00:	02d4      	.short	0x02d4
    switch(PeriphClkInit->SpdifrxClockSelection)
9002ab02:	f5b2 1f40 	cmp.w	r2, #3145728	; 0x300000
9002ab06:	d0e8      	beq.n	9002aada <HAL_RCCEx_PeriphCLKConfig+0x3a>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9002ab08:	05dd      	lsls	r5, r3, #23
    switch(PeriphClkInit->SpdifrxClockSelection)
9002ab0a:	f04f 0601 	mov.w	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9002ab0e:	d4ed      	bmi.n	9002aaec <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch(PeriphClkInit->Sai1ClockSelection)
9002ab10:	4635      	mov	r5, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9002ab12:	0598      	lsls	r0, r3, #22
9002ab14:	d51b      	bpl.n	9002ab4e <HAL_RCCEx_PeriphCLKConfig+0xae>
    switch(PeriphClkInit->Sai23ClockSelection)
9002ab16:	6da2      	ldr	r2, [r4, #88]	; 0x58
9002ab18:	2a80      	cmp	r2, #128	; 0x80
9002ab1a:	f000 8453 	beq.w	9002b3c4 <HAL_RCCEx_PeriphCLKConfig+0x924>
9002ab1e:	f200 80ec 	bhi.w	9002acfa <HAL_RCCEx_PeriphCLKConfig+0x25a>
9002ab22:	2a00      	cmp	r2, #0
9002ab24:	f000 83a2 	beq.w	9002b26c <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9002ab28:	2a40      	cmp	r2, #64	; 0x40
9002ab2a:	f040 80ed 	bne.w	9002ad08 <HAL_RCCEx_PeriphCLKConfig+0x268>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002ab2e:	2100      	movs	r1, #0
9002ab30:	1d20      	adds	r0, r4, #4
9002ab32:	f7ff febd 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002ab36:	6823      	ldr	r3, [r4, #0]
9002ab38:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ab3a:	2d00      	cmp	r5, #0
9002ab3c:	f040 8386 	bne.w	9002b24c <HAL_RCCEx_PeriphCLKConfig+0x7ac>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9002ab40:	4991      	ldr	r1, [pc, #580]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002ab42:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002ab44:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002ab46:	f422 72e0 	bic.w	r2, r2, #448	; 0x1c0
9002ab4a:	4302      	orrs	r2, r0
9002ab4c:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9002ab4e:	0559      	lsls	r1, r3, #21
9002ab50:	d51f      	bpl.n	9002ab92 <HAL_RCCEx_PeriphCLKConfig+0xf2>
    switch(PeriphClkInit->Sai4AClockSelection)
9002ab52:	f8d4 20a4 	ldr.w	r2, [r4, #164]	; 0xa4
9002ab56:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
9002ab5a:	f000 844a 	beq.w	9002b3f2 <HAL_RCCEx_PeriphCLKConfig+0x952>
9002ab5e:	f200 80d6 	bhi.w	9002ad0e <HAL_RCCEx_PeriphCLKConfig+0x26e>
9002ab62:	2a00      	cmp	r2, #0
9002ab64:	f000 837c 	beq.w	9002b260 <HAL_RCCEx_PeriphCLKConfig+0x7c0>
9002ab68:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
9002ab6c:	f040 80d7 	bne.w	9002ad1e <HAL_RCCEx_PeriphCLKConfig+0x27e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002ab70:	2100      	movs	r1, #0
9002ab72:	1d20      	adds	r0, r4, #4
9002ab74:	f7ff fe9c 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002ab78:	6823      	ldr	r3, [r4, #0]
9002ab7a:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ab7c:	2d00      	cmp	r5, #0
9002ab7e:	f040 8367 	bne.w	9002b250 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9002ab82:	4981      	ldr	r1, [pc, #516]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002ab84:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9002ab88:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002ab8a:	f422 0260 	bic.w	r2, r2, #14680064	; 0xe00000
9002ab8e:	4302      	orrs	r2, r0
9002ab90:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9002ab92:	051a      	lsls	r2, r3, #20
9002ab94:	d51f      	bpl.n	9002abd6 <HAL_RCCEx_PeriphCLKConfig+0x136>
    switch(PeriphClkInit->Sai4BClockSelection)
9002ab96:	f8d4 20a8 	ldr.w	r2, [r4, #168]	; 0xa8
9002ab9a:	f1b2 7f00 	cmp.w	r2, #33554432	; 0x2000000
9002ab9e:	f000 843c 	beq.w	9002b41a <HAL_RCCEx_PeriphCLKConfig+0x97a>
9002aba2:	f200 80bf 	bhi.w	9002ad24 <HAL_RCCEx_PeriphCLKConfig+0x284>
9002aba6:	2a00      	cmp	r2, #0
9002aba8:	f000 836c 	beq.w	9002b284 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
9002abac:	f1b2 7f80 	cmp.w	r2, #16777216	; 0x1000000
9002abb0:	f040 80c0 	bne.w	9002ad34 <HAL_RCCEx_PeriphCLKConfig+0x294>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002abb4:	2100      	movs	r1, #0
9002abb6:	1d20      	adds	r0, r4, #4
9002abb8:	f7ff fe7a 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002abbc:	6823      	ldr	r3, [r4, #0]
9002abbe:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002abc0:	2d00      	cmp	r5, #0
9002abc2:	f040 833f 	bne.w	9002b244 <HAL_RCCEx_PeriphCLKConfig+0x7a4>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9002abc6:	4970      	ldr	r1, [pc, #448]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002abc8:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9002abcc:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002abce:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
9002abd2:	4302      	orrs	r2, r0
9002abd4:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9002abd6:	019f      	lsls	r7, r3, #6
9002abd8:	d518      	bpl.n	9002ac0c <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch(PeriphClkInit->QspiClockSelection)
9002abda:	6ca2      	ldr	r2, [r4, #72]	; 0x48
9002abdc:	2a20      	cmp	r2, #32
9002abde:	f000 8392 	beq.w	9002b306 <HAL_RCCEx_PeriphCLKConfig+0x866>
9002abe2:	f200 80aa 	bhi.w	9002ad3a <HAL_RCCEx_PeriphCLKConfig+0x29a>
9002abe6:	b13a      	cbz	r2, 9002abf8 <HAL_RCCEx_PeriphCLKConfig+0x158>
9002abe8:	2a10      	cmp	r2, #16
9002abea:	f040 80a9 	bne.w	9002ad40 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002abee:	4966      	ldr	r1, [pc, #408]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002abf0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002abf2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002abf6:	62ca      	str	r2, [r1, #44]	; 0x2c
    if(ret == HAL_OK)
9002abf8:	2d00      	cmp	r5, #0
9002abfa:	f040 8366 	bne.w	9002b2ca <HAL_RCCEx_PeriphCLKConfig+0x82a>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9002abfe:	4962      	ldr	r1, [pc, #392]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002ac00:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9002ac02:	6cca      	ldr	r2, [r1, #76]	; 0x4c
9002ac04:	f022 0230 	bic.w	r2, r2, #48	; 0x30
9002ac08:	4302      	orrs	r2, r0
9002ac0a:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9002ac0c:	04d8      	lsls	r0, r3, #19
9002ac0e:	d51d      	bpl.n	9002ac4c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
    switch(PeriphClkInit->Spi123ClockSelection)
9002ac10:	6de2      	ldr	r2, [r4, #92]	; 0x5c
9002ac12:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
9002ac16:	f000 83cd 	beq.w	9002b3b4 <HAL_RCCEx_PeriphCLKConfig+0x914>
9002ac1a:	f200 8094 	bhi.w	9002ad46 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
9002ac1e:	2a00      	cmp	r2, #0
9002ac20:	f000 8318 	beq.w	9002b254 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
9002ac24:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
9002ac28:	f040 8095 	bne.w	9002ad56 <HAL_RCCEx_PeriphCLKConfig+0x2b6>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002ac2c:	2100      	movs	r1, #0
9002ac2e:	1d20      	adds	r0, r4, #4
9002ac30:	f7ff fe3e 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002ac34:	6823      	ldr	r3, [r4, #0]
9002ac36:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ac38:	2d00      	cmp	r5, #0
9002ac3a:	f040 8305 	bne.w	9002b248 <HAL_RCCEx_PeriphCLKConfig+0x7a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9002ac3e:	4952      	ldr	r1, [pc, #328]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002ac40:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9002ac42:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002ac44:	f422 42e0 	bic.w	r2, r2, #28672	; 0x7000
9002ac48:	4302      	orrs	r2, r0
9002ac4a:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9002ac4c:	0499      	lsls	r1, r3, #18
9002ac4e:	d51a      	bpl.n	9002ac86 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
    switch(PeriphClkInit->Spi45ClockSelection)
9002ac50:	6e22      	ldr	r2, [r4, #96]	; 0x60
9002ac52:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
9002ac56:	f000 8398 	beq.w	9002b38a <HAL_RCCEx_PeriphCLKConfig+0x8ea>
9002ac5a:	d87f      	bhi.n	9002ad5c <HAL_RCCEx_PeriphCLKConfig+0x2bc>
9002ac5c:	b14a      	cbz	r2, 9002ac72 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
9002ac5e:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
9002ac62:	f040 8083 	bne.w	9002ad6c <HAL_RCCEx_PeriphCLKConfig+0x2cc>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002ac66:	2101      	movs	r1, #1
9002ac68:	1d20      	adds	r0, r4, #4
9002ac6a:	f7ff fe21 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002ac6e:	6823      	ldr	r3, [r4, #0]
9002ac70:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ac72:	2d00      	cmp	r5, #0
9002ac74:	f040 832b 	bne.w	9002b2ce <HAL_RCCEx_PeriphCLKConfig+0x82e>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9002ac78:	4943      	ldr	r1, [pc, #268]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002ac7a:	6e20      	ldr	r0, [r4, #96]	; 0x60
9002ac7c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002ac7e:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
9002ac82:	4302      	orrs	r2, r0
9002ac84:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9002ac86:	045a      	lsls	r2, r3, #17
9002ac88:	d51b      	bpl.n	9002acc2 <HAL_RCCEx_PeriphCLKConfig+0x222>
    switch(PeriphClkInit->Spi6ClockSelection)
9002ac8a:	f8d4 20ac 	ldr.w	r2, [r4, #172]	; 0xac
9002ac8e:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
9002ac92:	f000 834a 	beq.w	9002b32a <HAL_RCCEx_PeriphCLKConfig+0x88a>
9002ac96:	d86c      	bhi.n	9002ad72 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
9002ac98:	b142      	cbz	r2, 9002acac <HAL_RCCEx_PeriphCLKConfig+0x20c>
9002ac9a:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
9002ac9e:	d170      	bne.n	9002ad82 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002aca0:	2101      	movs	r1, #1
9002aca2:	1d20      	adds	r0, r4, #4
9002aca4:	f7ff fe04 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002aca8:	6823      	ldr	r3, [r4, #0]
9002acaa:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002acac:	2d00      	cmp	r5, #0
9002acae:	f040 8302 	bne.w	9002b2b6 <HAL_RCCEx_PeriphCLKConfig+0x816>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9002acb2:	4935      	ldr	r1, [pc, #212]	; (9002ad88 <HAL_RCCEx_PeriphCLKConfig+0x2e8>)
9002acb4:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9002acb8:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002acba:	f022 42e0 	bic.w	r2, r2, #1879048192	; 0x70000000
9002acbe:	4302      	orrs	r2, r0
9002acc0:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9002acc2:	041f      	lsls	r7, r3, #16
9002acc4:	d50d      	bpl.n	9002ace2 <HAL_RCCEx_PeriphCLKConfig+0x242>
    switch(PeriphClkInit->FdcanClockSelection)
9002acc6:	6ee2      	ldr	r2, [r4, #108]	; 0x6c
9002acc8:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
9002accc:	f000 834b 	beq.w	9002b366 <HAL_RCCEx_PeriphCLKConfig+0x8c6>
9002acd0:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
9002acd4:	f000 81f0 	beq.w	9002b0b8 <HAL_RCCEx_PeriphCLKConfig+0x618>
9002acd8:	2a00      	cmp	r2, #0
9002acda:	f000 81f3 	beq.w	9002b0c4 <HAL_RCCEx_PeriphCLKConfig+0x624>
9002acde:	2601      	movs	r6, #1
9002ace0:	4635      	mov	r5, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9002ace2:	01d8      	lsls	r0, r3, #7
9002ace4:	d55c      	bpl.n	9002ada0 <HAL_RCCEx_PeriphCLKConfig+0x300>
    switch(PeriphClkInit->FmcClockSelection)
9002ace6:	6c62      	ldr	r2, [r4, #68]	; 0x44
9002ace8:	2a03      	cmp	r2, #3
9002acea:	f200 8425 	bhi.w	9002b538 <HAL_RCCEx_PeriphCLKConfig+0xa98>
9002acee:	e8df f012 	tbh	[pc, r2, lsl #1]
9002acf2:	0053      	.short	0x0053
9002acf4:	004d0313 	.word	0x004d0313
9002acf8:	0053      	.short	0x0053
    switch(PeriphClkInit->Sai23ClockSelection)
9002acfa:	2ac0      	cmp	r2, #192	; 0xc0
9002acfc:	f43f af1d 	beq.w	9002ab3a <HAL_RCCEx_PeriphCLKConfig+0x9a>
9002ad00:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9002ad04:	f43f af19 	beq.w	9002ab3a <HAL_RCCEx_PeriphCLKConfig+0x9a>
9002ad08:	2601      	movs	r6, #1
9002ad0a:	4635      	mov	r5, r6
9002ad0c:	e71f      	b.n	9002ab4e <HAL_RCCEx_PeriphCLKConfig+0xae>
    switch(PeriphClkInit->Sai4AClockSelection)
9002ad0e:	f5b2 0fc0 	cmp.w	r2, #6291456	; 0x600000
9002ad12:	f43f af33 	beq.w	9002ab7c <HAL_RCCEx_PeriphCLKConfig+0xdc>
9002ad16:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
9002ad1a:	f43f af2f 	beq.w	9002ab7c <HAL_RCCEx_PeriphCLKConfig+0xdc>
9002ad1e:	2601      	movs	r6, #1
9002ad20:	4635      	mov	r5, r6
9002ad22:	e736      	b.n	9002ab92 <HAL_RCCEx_PeriphCLKConfig+0xf2>
    switch(PeriphClkInit->Sai4BClockSelection)
9002ad24:	f1b2 7f40 	cmp.w	r2, #50331648	; 0x3000000
9002ad28:	f43f af4a 	beq.w	9002abc0 <HAL_RCCEx_PeriphCLKConfig+0x120>
9002ad2c:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
9002ad30:	f43f af46 	beq.w	9002abc0 <HAL_RCCEx_PeriphCLKConfig+0x120>
9002ad34:	2601      	movs	r6, #1
9002ad36:	4635      	mov	r5, r6
9002ad38:	e74d      	b.n	9002abd6 <HAL_RCCEx_PeriphCLKConfig+0x136>
    switch(PeriphClkInit->QspiClockSelection)
9002ad3a:	2a30      	cmp	r2, #48	; 0x30
9002ad3c:	f43f af5c 	beq.w	9002abf8 <HAL_RCCEx_PeriphCLKConfig+0x158>
9002ad40:	2601      	movs	r6, #1
9002ad42:	4635      	mov	r5, r6
9002ad44:	e762      	b.n	9002ac0c <HAL_RCCEx_PeriphCLKConfig+0x16c>
    switch(PeriphClkInit->Spi123ClockSelection)
9002ad46:	f5b2 5f40 	cmp.w	r2, #12288	; 0x3000
9002ad4a:	f43f af75 	beq.w	9002ac38 <HAL_RCCEx_PeriphCLKConfig+0x198>
9002ad4e:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
9002ad52:	f43f af71 	beq.w	9002ac38 <HAL_RCCEx_PeriphCLKConfig+0x198>
9002ad56:	2601      	movs	r6, #1
9002ad58:	4635      	mov	r5, r6
9002ad5a:	e777      	b.n	9002ac4c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
    switch(PeriphClkInit->Spi45ClockSelection)
9002ad5c:	f422 3180 	bic.w	r1, r2, #65536	; 0x10000
9002ad60:	f5b1 2f80 	cmp.w	r1, #262144	; 0x40000
9002ad64:	d085      	beq.n	9002ac72 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
9002ad66:	f5b2 3f40 	cmp.w	r2, #196608	; 0x30000
9002ad6a:	d082      	beq.n	9002ac72 <HAL_RCCEx_PeriphCLKConfig+0x1d2>
9002ad6c:	2601      	movs	r6, #1
9002ad6e:	4635      	mov	r5, r6
9002ad70:	e789      	b.n	9002ac86 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
    switch(PeriphClkInit->Spi6ClockSelection)
9002ad72:	f022 5180 	bic.w	r1, r2, #268435456	; 0x10000000
9002ad76:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
9002ad7a:	d097      	beq.n	9002acac <HAL_RCCEx_PeriphCLKConfig+0x20c>
9002ad7c:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
9002ad80:	d094      	beq.n	9002acac <HAL_RCCEx_PeriphCLKConfig+0x20c>
9002ad82:	2601      	movs	r6, #1
9002ad84:	4635      	mov	r5, r6
9002ad86:	e79c      	b.n	9002acc2 <HAL_RCCEx_PeriphCLKConfig+0x222>
9002ad88:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
9002ad8c:	2102      	movs	r1, #2
9002ad8e:	1d20      	adds	r0, r4, #4
9002ad90:	f7ff fd8e 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002ad94:	6823      	ldr	r3, [r4, #0]
9002ad96:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ad98:	2d00      	cmp	r5, #0
9002ad9a:	f000 828e 	beq.w	9002b2ba <HAL_RCCEx_PeriphCLKConfig+0x81a>
9002ad9e:	462e      	mov	r6, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9002ada0:	0259      	lsls	r1, r3, #9
9002ada2:	f100 8208 	bmi.w	9002b1b6 <HAL_RCCEx_PeriphCLKConfig+0x716>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9002ada6:	07df      	lsls	r7, r3, #31
9002ada8:	d539      	bpl.n	9002ae1e <HAL_RCCEx_PeriphCLKConfig+0x37e>
    switch(PeriphClkInit->Usart16ClockSelection)
9002adaa:	6fa2      	ldr	r2, [r4, #120]	; 0x78
9002adac:	2a28      	cmp	r2, #40	; 0x28
9002adae:	f200 8174 	bhi.w	9002b09a <HAL_RCCEx_PeriphCLKConfig+0x5fa>
9002adb2:	e8df f012 	tbh	[pc, r2, lsl #1]
9002adb6:	0030      	.short	0x0030
9002adb8:	01720172 	.word	0x01720172
9002adbc:	01720172 	.word	0x01720172
9002adc0:	01720172 	.word	0x01720172
9002adc4:	03580172 	.word	0x03580172
9002adc8:	01720172 	.word	0x01720172
9002adcc:	01720172 	.word	0x01720172
9002add0:	01720172 	.word	0x01720172
9002add4:	00290172 	.word	0x00290172
9002add8:	01720172 	.word	0x01720172
9002addc:	01720172 	.word	0x01720172
9002ade0:	01720172 	.word	0x01720172
9002ade4:	00300172 	.word	0x00300172
9002ade8:	01720172 	.word	0x01720172
9002adec:	01720172 	.word	0x01720172
9002adf0:	01720172 	.word	0x01720172
9002adf4:	00300172 	.word	0x00300172
9002adf8:	01720172 	.word	0x01720172
9002adfc:	01720172 	.word	0x01720172
9002ae00:	01720172 	.word	0x01720172
9002ae04:	00300172 	.word	0x00300172
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002ae08:	2101      	movs	r1, #1
9002ae0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002ae0e:	f7ff fdcb 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002ae12:	6823      	ldr	r3, [r4, #0]
9002ae14:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ae16:	2d00      	cmp	r5, #0
9002ae18:	f000 826b 	beq.w	9002b2f2 <HAL_RCCEx_PeriphCLKConfig+0x852>
9002ae1c:	462e      	mov	r6, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9002ae1e:	0798      	lsls	r0, r3, #30
9002ae20:	d516      	bpl.n	9002ae50 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
    switch(PeriphClkInit->Usart234578ClockSelection)
9002ae22:	6f62      	ldr	r2, [r4, #116]	; 0x74
9002ae24:	2a05      	cmp	r2, #5
9002ae26:	f200 8384 	bhi.w	9002b532 <HAL_RCCEx_PeriphCLKConfig+0xa92>
9002ae2a:	e8df f012 	tbh	[pc, r2, lsl #1]
9002ae2e:	000d      	.short	0x000d
9002ae30:	00060308 	.word	0x00060308
9002ae34:	000d000d 	.word	0x000d000d
9002ae38:	000d      	.short	0x000d
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002ae3a:	2101      	movs	r1, #1
9002ae3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002ae40:	f7ff fdb2 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002ae44:	6823      	ldr	r3, [r4, #0]
9002ae46:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ae48:	2d00      	cmp	r5, #0
9002ae4a:	f000 822c 	beq.w	9002b2a6 <HAL_RCCEx_PeriphCLKConfig+0x806>
9002ae4e:	462e      	mov	r6, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9002ae50:	0759      	lsls	r1, r3, #29
9002ae52:	d517      	bpl.n	9002ae84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
    switch(PeriphClkInit->Lpuart1ClockSelection)
9002ae54:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
9002ae58:	2a05      	cmp	r2, #5
9002ae5a:	f200 8370 	bhi.w	9002b53e <HAL_RCCEx_PeriphCLKConfig+0xa9e>
9002ae5e:	e8df f012 	tbh	[pc, r2, lsl #1]
9002ae62:	000d      	.short	0x000d
9002ae64:	000602f8 	.word	0x000602f8
9002ae68:	000d000d 	.word	0x000d000d
9002ae6c:	000d      	.short	0x000d
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002ae6e:	2101      	movs	r1, #1
9002ae70:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002ae74:	f7ff fd98 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002ae78:	6823      	ldr	r3, [r4, #0]
9002ae7a:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002ae7c:	2d00      	cmp	r5, #0
9002ae7e:	f000 8209 	beq.w	9002b294 <HAL_RCCEx_PeriphCLKConfig+0x7f4>
9002ae82:	462e      	mov	r6, r5
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9002ae84:	069a      	lsls	r2, r3, #26
9002ae86:	d51d      	bpl.n	9002aec4 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch(PeriphClkInit->Lptim1ClockSelection)
9002ae88:	f8d4 208c 	ldr.w	r2, [r4, #140]	; 0x8c
9002ae8c:	f1b2 5f00 	cmp.w	r2, #536870912	; 0x20000000
9002ae90:	f000 8271 	beq.w	9002b376 <HAL_RCCEx_PeriphCLKConfig+0x8d6>
9002ae94:	f200 8121 	bhi.w	9002b0da <HAL_RCCEx_PeriphCLKConfig+0x63a>
9002ae98:	b14a      	cbz	r2, 9002aeae <HAL_RCCEx_PeriphCLKConfig+0x40e>
9002ae9a:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
9002ae9e:	f040 8126 	bne.w	9002b0ee <HAL_RCCEx_PeriphCLKConfig+0x64e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002aea2:	2100      	movs	r1, #0
9002aea4:	1d20      	adds	r0, r4, #4
9002aea6:	f7ff fd03 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002aeaa:	6823      	ldr	r3, [r4, #0]
9002aeac:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002aeae:	2d00      	cmp	r5, #0
9002aeb0:	f040 8213 	bne.w	9002b2da <HAL_RCCEx_PeriphCLKConfig+0x83a>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9002aeb4:	49b9      	ldr	r1, [pc, #740]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002aeb6:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9002aeba:	6d4a      	ldr	r2, [r1, #84]	; 0x54
9002aebc:	f022 42e0 	bic.w	r2, r2, #1879048192	; 0x70000000
9002aec0:	4302      	orrs	r2, r0
9002aec2:	654a      	str	r2, [r1, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9002aec4:	065f      	lsls	r7, r3, #25
9002aec6:	d51d      	bpl.n	9002af04 <HAL_RCCEx_PeriphCLKConfig+0x464>
    switch(PeriphClkInit->Lptim2ClockSelection)
9002aec8:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
9002aecc:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
9002aed0:	f000 823f 	beq.w	9002b352 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
9002aed4:	f200 8129 	bhi.w	9002b12a <HAL_RCCEx_PeriphCLKConfig+0x68a>
9002aed8:	b14a      	cbz	r2, 9002aeee <HAL_RCCEx_PeriphCLKConfig+0x44e>
9002aeda:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
9002aede:	f040 812e 	bne.w	9002b13e <HAL_RCCEx_PeriphCLKConfig+0x69e>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002aee2:	2100      	movs	r1, #0
9002aee4:	1d20      	adds	r0, r4, #4
9002aee6:	f7ff fce3 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002aeea:	6823      	ldr	r3, [r4, #0]
9002aeec:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002aeee:	2d00      	cmp	r5, #0
9002aef0:	f040 81ef 	bne.w	9002b2d2 <HAL_RCCEx_PeriphCLKConfig+0x832>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9002aef4:	49a9      	ldr	r1, [pc, #676]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002aef6:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9002aefa:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002aefc:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
9002af00:	4302      	orrs	r2, r0
9002af02:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9002af04:	0618      	lsls	r0, r3, #24
9002af06:	d51d      	bpl.n	9002af44 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
    switch(PeriphClkInit->Lptim345ClockSelection)
9002af08:	f8d4 209c 	ldr.w	r2, [r4, #156]	; 0x9c
9002af0c:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
9002af10:	f000 8215 	beq.w	9002b33e <HAL_RCCEx_PeriphCLKConfig+0x89e>
9002af14:	f200 80fc 	bhi.w	9002b110 <HAL_RCCEx_PeriphCLKConfig+0x670>
9002af18:	b14a      	cbz	r2, 9002af2e <HAL_RCCEx_PeriphCLKConfig+0x48e>
9002af1a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
9002af1e:	f040 8101 	bne.w	9002b124 <HAL_RCCEx_PeriphCLKConfig+0x684>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002af22:	2100      	movs	r1, #0
9002af24:	1d20      	adds	r0, r4, #4
9002af26:	f7ff fcc3 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002af2a:	6823      	ldr	r3, [r4, #0]
9002af2c:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002af2e:	2d00      	cmp	r5, #0
9002af30:	f040 81d1 	bne.w	9002b2d6 <HAL_RCCEx_PeriphCLKConfig+0x836>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9002af34:	4999      	ldr	r1, [pc, #612]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002af36:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9002af3a:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002af3c:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
9002af40:	4302      	orrs	r2, r0
9002af42:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9002af44:	0719      	lsls	r1, r3, #28
9002af46:	d50b      	bpl.n	9002af60 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
9002af48:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9002af4c:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9002af50:	f000 8225 	beq.w	9002b39e <HAL_RCCEx_PeriphCLKConfig+0x8fe>
      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9002af54:	4891      	ldr	r0, [pc, #580]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002af56:	6d42      	ldr	r2, [r0, #84]	; 0x54
9002af58:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
9002af5c:	430a      	orrs	r2, r1
9002af5e:	6542      	str	r2, [r0, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9002af60:	06da      	lsls	r2, r3, #27
9002af62:	d50b      	bpl.n	9002af7c <HAL_RCCEx_PeriphCLKConfig+0x4dc>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
9002af64:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9002af68:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9002af6c:	f000 82b2 	beq.w	9002b4d4 <HAL_RCCEx_PeriphCLKConfig+0xa34>
      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9002af70:	488a      	ldr	r0, [pc, #552]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002af72:	6d82      	ldr	r2, [r0, #88]	; 0x58
9002af74:	f422 7240 	bic.w	r2, r2, #768	; 0x300
9002af78:	430a      	orrs	r2, r1
9002af7a:	6582      	str	r2, [r0, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9002af7c:	031f      	lsls	r7, r3, #12
9002af7e:	d50e      	bpl.n	9002af9e <HAL_RCCEx_PeriphCLKConfig+0x4fe>
    switch(PeriphClkInit->AdcClockSelection)
9002af80:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9002af84:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9002af88:	f000 80f2 	beq.w	9002b170 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
9002af8c:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9002af90:	f000 80f5 	beq.w	9002b17e <HAL_RCCEx_PeriphCLKConfig+0x6de>
9002af94:	2900      	cmp	r1, #0
9002af96:	f000 828b 	beq.w	9002b4b0 <HAL_RCCEx_PeriphCLKConfig+0xa10>
9002af9a:	2601      	movs	r6, #1
9002af9c:	4635      	mov	r5, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9002af9e:	0358      	lsls	r0, r3, #13
9002afa0:	d50f      	bpl.n	9002afc2 <HAL_RCCEx_PeriphCLKConfig+0x522>
    switch(PeriphClkInit->UsbClockSelection)
9002afa2:	f8d4 2084 	ldr.w	r2, [r4, #132]	; 0x84
9002afa6:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
9002afaa:	f000 80cb 	beq.w	9002b144 <HAL_RCCEx_PeriphCLKConfig+0x6a4>
9002afae:	f5b2 1f40 	cmp.w	r2, #3145728	; 0x300000
9002afb2:	f000 80ce 	beq.w	9002b152 <HAL_RCCEx_PeriphCLKConfig+0x6b2>
9002afb6:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
9002afba:	f000 8282 	beq.w	9002b4c2 <HAL_RCCEx_PeriphCLKConfig+0xa22>
9002afbe:	2601      	movs	r6, #1
9002afc0:	4635      	mov	r5, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9002afc2:	03d9      	lsls	r1, r3, #15
9002afc4:	d517      	bpl.n	9002aff6 <HAL_RCCEx_PeriphCLKConfig+0x556>
    switch(PeriphClkInit->SdmmcClockSelection)
9002afc6:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
9002afc8:	2a00      	cmp	r2, #0
9002afca:	f000 825f 	beq.w	9002b48c <HAL_RCCEx_PeriphCLKConfig+0x9ec>
9002afce:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
9002afd2:	f040 8132 	bne.w	9002b23a <HAL_RCCEx_PeriphCLKConfig+0x79a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
9002afd6:	2102      	movs	r1, #2
9002afd8:	1d20      	adds	r0, r4, #4
9002afda:	f7ff fc69 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002afde:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002afe0:	6823      	ldr	r3, [r4, #0]
9002afe2:	2d00      	cmp	r5, #0
9002afe4:	f040 818d 	bne.w	9002b302 <HAL_RCCEx_PeriphCLKConfig+0x862>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9002afe8:	496c      	ldr	r1, [pc, #432]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002afea:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9002afec:	6cca      	ldr	r2, [r1, #76]	; 0x4c
9002afee:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9002aff2:	4302      	orrs	r2, r0
9002aff4:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9002aff6:	009a      	lsls	r2, r3, #2
9002aff8:	f100 80d2 	bmi.w	9002b1a0 <HAL_RCCEx_PeriphCLKConfig+0x700>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9002affc:	039f      	lsls	r7, r3, #14
9002affe:	d43f      	bmi.n	9002b080 <HAL_RCCEx_PeriphCLKConfig+0x5e0>
9002b000:	1e30      	subs	r0, r6, #0
9002b002:	bf18      	it	ne
9002b004:	2001      	movne	r0, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9002b006:	02de      	lsls	r6, r3, #11
9002b008:	d506      	bpl.n	9002b018 <HAL_RCCEx_PeriphCLKConfig+0x578>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9002b00a:	4964      	ldr	r1, [pc, #400]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b00c:	6f25      	ldr	r5, [r4, #112]	; 0x70
9002b00e:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002b010:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
9002b014:	432a      	orrs	r2, r5
9002b016:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9002b018:	00dd      	lsls	r5, r3, #3
9002b01a:	d507      	bpl.n	9002b02c <HAL_RCCEx_PeriphCLKConfig+0x58c>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9002b01c:	495f      	ldr	r1, [pc, #380]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b01e:	f8d4 50b4 	ldr.w	r5, [r4, #180]	; 0xb4
9002b022:	690a      	ldr	r2, [r1, #16]
9002b024:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
9002b028:	432a      	orrs	r2, r5
9002b02a:	610a      	str	r2, [r1, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9002b02c:	0299      	lsls	r1, r3, #10
9002b02e:	d506      	bpl.n	9002b03e <HAL_RCCEx_PeriphCLKConfig+0x59e>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9002b030:	495a      	ldr	r1, [pc, #360]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b032:	6ea5      	ldr	r5, [r4, #104]	; 0x68
9002b034:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002b036:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
9002b03a:	432a      	orrs	r2, r5
9002b03c:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9002b03e:	005a      	lsls	r2, r3, #1
9002b040:	d509      	bpl.n	9002b056 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9002b042:	4a56      	ldr	r2, [pc, #344]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b044:	6911      	ldr	r1, [r2, #16]
9002b046:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9002b04a:	6111      	str	r1, [r2, #16]
9002b04c:	6911      	ldr	r1, [r2, #16]
9002b04e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9002b052:	4329      	orrs	r1, r5
9002b054:	6111      	str	r1, [r2, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9002b056:	2b00      	cmp	r3, #0
9002b058:	da06      	bge.n	9002b068 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9002b05a:	4950      	ldr	r1, [pc, #320]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b05c:	6d25      	ldr	r5, [r4, #80]	; 0x50
9002b05e:	6cca      	ldr	r2, [r1, #76]	; 0x4c
9002b060:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
9002b064:	432a      	orrs	r2, r5
9002b066:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9002b068:	021b      	lsls	r3, r3, #8
9002b06a:	d507      	bpl.n	9002b07c <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9002b06c:	4a4b      	ldr	r2, [pc, #300]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b06e:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9002b072:	6d53      	ldr	r3, [r2, #84]	; 0x54
9002b074:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9002b078:	430b      	orrs	r3, r1
9002b07a:	6553      	str	r3, [r2, #84]	; 0x54
}
9002b07c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch(PeriphClkInit->RngClockSelection)
9002b080:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
9002b082:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9002b086:	f000 820a 	beq.w	9002b49e <HAL_RCCEx_PeriphCLKConfig+0x9fe>
9002b08a:	d933      	bls.n	9002b0f4 <HAL_RCCEx_PeriphCLKConfig+0x654>
9002b08c:	f422 7180 	bic.w	r1, r2, #256	; 0x100
9002b090:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9002b094:	d030      	beq.n	9002b0f8 <HAL_RCCEx_PeriphCLKConfig+0x658>
9002b096:	2001      	movs	r0, #1
9002b098:	e7b5      	b.n	9002b006 <HAL_RCCEx_PeriphCLKConfig+0x566>
    switch(PeriphClkInit->Usart16ClockSelection)
9002b09a:	2601      	movs	r6, #1
9002b09c:	4635      	mov	r5, r6
9002b09e:	e6be      	b.n	9002ae1e <HAL_RCCEx_PeriphCLKConfig+0x37e>
    switch(PeriphClkInit->Sai1ClockSelection)
9002b0a0:	4635      	mov	r5, r6
    if(ret == HAL_OK)
9002b0a2:	2d00      	cmp	r5, #0
9002b0a4:	f040 80cc 	bne.w	9002b240 <HAL_RCCEx_PeriphCLKConfig+0x7a0>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9002b0a8:	493c      	ldr	r1, [pc, #240]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b0aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002b0ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002b0ae:	f022 0207 	bic.w	r2, r2, #7
9002b0b2:	4302      	orrs	r2, r0
9002b0b4:	650a      	str	r2, [r1, #80]	; 0x50
9002b0b6:	e52c      	b.n	9002ab12 <HAL_RCCEx_PeriphCLKConfig+0x72>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002b0b8:	2101      	movs	r1, #1
9002b0ba:	1d20      	adds	r0, r4, #4
9002b0bc:	f7ff fbf8 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b0c0:	6823      	ldr	r3, [r4, #0]
9002b0c2:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b0c4:	2d00      	cmp	r5, #0
9002b0c6:	f040 80e3 	bne.w	9002b290 <HAL_RCCEx_PeriphCLKConfig+0x7f0>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9002b0ca:	4934      	ldr	r1, [pc, #208]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b0cc:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
9002b0ce:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002b0d0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
9002b0d4:	4302      	orrs	r2, r0
9002b0d6:	650a      	str	r2, [r1, #80]	; 0x50
9002b0d8:	e603      	b.n	9002ace2 <HAL_RCCEx_PeriphCLKConfig+0x242>
    switch(PeriphClkInit->Lptim1ClockSelection)
9002b0da:	f022 5180 	bic.w	r1, r2, #268435456	; 0x10000000
9002b0de:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
9002b0e2:	f43f aee4 	beq.w	9002aeae <HAL_RCCEx_PeriphCLKConfig+0x40e>
9002b0e6:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
9002b0ea:	f43f aee0 	beq.w	9002aeae <HAL_RCCEx_PeriphCLKConfig+0x40e>
9002b0ee:	2601      	movs	r6, #1
9002b0f0:	4635      	mov	r5, r6
9002b0f2:	e6e7      	b.n	9002aec4 <HAL_RCCEx_PeriphCLKConfig+0x424>
    switch(PeriphClkInit->RngClockSelection)
9002b0f4:	2a00      	cmp	r2, #0
9002b0f6:	d1ce      	bne.n	9002b096 <HAL_RCCEx_PeriphCLKConfig+0x5f6>
    if(ret == HAL_OK)
9002b0f8:	2d00      	cmp	r5, #0
9002b0fa:	d1cc      	bne.n	9002b096 <HAL_RCCEx_PeriphCLKConfig+0x5f6>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9002b0fc:	4d27      	ldr	r5, [pc, #156]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b0fe:	1e30      	subs	r0, r6, #0
9002b100:	6d69      	ldr	r1, [r5, #84]	; 0x54
9002b102:	bf18      	it	ne
9002b104:	2001      	movne	r0, #1
9002b106:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9002b10a:	430a      	orrs	r2, r1
9002b10c:	656a      	str	r2, [r5, #84]	; 0x54
9002b10e:	e77a      	b.n	9002b006 <HAL_RCCEx_PeriphCLKConfig+0x566>
    switch(PeriphClkInit->Lptim345ClockSelection)
9002b110:	f422 5100 	bic.w	r1, r2, #8192	; 0x2000
9002b114:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
9002b118:	f43f af09 	beq.w	9002af2e <HAL_RCCEx_PeriphCLKConfig+0x48e>
9002b11c:	f5b2 4fc0 	cmp.w	r2, #24576	; 0x6000
9002b120:	f43f af05 	beq.w	9002af2e <HAL_RCCEx_PeriphCLKConfig+0x48e>
9002b124:	2601      	movs	r6, #1
9002b126:	4635      	mov	r5, r6
9002b128:	e70c      	b.n	9002af44 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
    switch(PeriphClkInit->Lptim2ClockSelection)
9002b12a:	f422 6180 	bic.w	r1, r2, #1024	; 0x400
9002b12e:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9002b132:	f43f aedc 	beq.w	9002aeee <HAL_RCCEx_PeriphCLKConfig+0x44e>
9002b136:	f5b2 6f40 	cmp.w	r2, #3072	; 0xc00
9002b13a:	f43f aed8 	beq.w	9002aeee <HAL_RCCEx_PeriphCLKConfig+0x44e>
9002b13e:	2601      	movs	r6, #1
9002b140:	4635      	mov	r5, r6
9002b142:	e6df      	b.n	9002af04 <HAL_RCCEx_PeriphCLKConfig+0x464>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002b144:	2101      	movs	r1, #1
9002b146:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b14a:	f7ff fc2d 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b14e:	6823      	ldr	r3, [r4, #0]
9002b150:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b152:	2d00      	cmp	r5, #0
9002b154:	f040 80c8 	bne.w	9002b2e8 <HAL_RCCEx_PeriphCLKConfig+0x848>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9002b158:	4910      	ldr	r1, [pc, #64]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b15a:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9002b15e:	6d4a      	ldr	r2, [r1, #84]	; 0x54
9002b160:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
9002b164:	4302      	orrs	r2, r0
9002b166:	654a      	str	r2, [r1, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9002b168:	03d9      	lsls	r1, r3, #15
9002b16a:	f57f af44 	bpl.w	9002aff6 <HAL_RCCEx_PeriphCLKConfig+0x556>
9002b16e:	e72a      	b.n	9002afc6 <HAL_RCCEx_PeriphCLKConfig+0x526>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9002b170:	2102      	movs	r1, #2
9002b172:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b176:	f7ff fc17 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b17a:	6823      	ldr	r3, [r4, #0]
9002b17c:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b17e:	2d00      	cmp	r5, #0
9002b180:	f040 80ad 	bne.w	9002b2de <HAL_RCCEx_PeriphCLKConfig+0x83e>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9002b184:	4905      	ldr	r1, [pc, #20]	; (9002b19c <HAL_RCCEx_PeriphCLKConfig+0x6fc>)
9002b186:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9002b18a:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002b18c:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
9002b190:	4302      	orrs	r2, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9002b192:	0358      	lsls	r0, r3, #13
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9002b194:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9002b196:	f57f af14 	bpl.w	9002afc2 <HAL_RCCEx_PeriphCLKConfig+0x522>
9002b19a:	e702      	b.n	9002afa2 <HAL_RCCEx_PeriphCLKConfig+0x502>
9002b19c:	58024400 	.word	0x58024400
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
9002b1a0:	2102      	movs	r1, #2
9002b1a2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b1a6:	f7ff fbff 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b1aa:	6823      	ldr	r3, [r4, #0]
9002b1ac:	2800      	cmp	r0, #0
9002b1ae:	f43f af25 	beq.w	9002affc <HAL_RCCEx_PeriphCLKConfig+0x55c>
      status=HAL_ERROR;
9002b1b2:	2601      	movs	r6, #1
9002b1b4:	e722      	b.n	9002affc <HAL_RCCEx_PeriphCLKConfig+0x55c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9002b1b6:	4bb3      	ldr	r3, [pc, #716]	; (9002b484 <HAL_RCCEx_PeriphCLKConfig+0x9e4>)
9002b1b8:	681a      	ldr	r2, [r3, #0]
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002b1ba:	4698      	mov	r8, r3
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9002b1bc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9002b1c0:	601a      	str	r2, [r3, #0]
    tickstart = HAL_GetTick();
9002b1c2:	f7fd fae3 	bl	9002878c <HAL_GetTick>
9002b1c6:	4607      	mov	r7, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002b1c8:	e005      	b.n	9002b1d6 <HAL_RCCEx_PeriphCLKConfig+0x736>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9002b1ca:	f7fd fadf 	bl	9002878c <HAL_GetTick>
9002b1ce:	1bc0      	subs	r0, r0, r7
9002b1d0:	2864      	cmp	r0, #100	; 0x64
9002b1d2:	f200 8152 	bhi.w	9002b47a <HAL_RCCEx_PeriphCLKConfig+0x9da>
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
9002b1d6:	f8d8 3000 	ldr.w	r3, [r8]
9002b1da:	05da      	lsls	r2, r3, #23
9002b1dc:	d5f5      	bpl.n	9002b1ca <HAL_RCCEx_PeriphCLKConfig+0x72a>
    if(ret == HAL_OK)
9002b1de:	2d00      	cmp	r5, #0
9002b1e0:	f040 81a1 	bne.w	9002b526 <HAL_RCCEx_PeriphCLKConfig+0xa86>
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9002b1e4:	4aa8      	ldr	r2, [pc, #672]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b1e6:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
9002b1ea:	6f11      	ldr	r1, [r2, #112]	; 0x70
9002b1ec:	4059      	eors	r1, r3
9002b1ee:	f411 7f40 	tst.w	r1, #768	; 0x300
9002b1f2:	d00b      	beq.n	9002b20c <HAL_RCCEx_PeriphCLKConfig+0x76c>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9002b1f4:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9002b1f6:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9002b1f8:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9002b1fc:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9002b200:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9002b202:	6f10      	ldr	r0, [r2, #112]	; 0x70
9002b204:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9002b208:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9002b20a:	6711      	str	r1, [r2, #112]	; 0x70
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9002b20c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9002b210:	f000 816b 	beq.w	9002b4ea <HAL_RCCEx_PeriphCLKConfig+0xa4a>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9002b214:	f403 7240 	and.w	r2, r3, #768	; 0x300
9002b218:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9002b21c:	f000 8179 	beq.w	9002b512 <HAL_RCCEx_PeriphCLKConfig+0xa72>
9002b220:	4999      	ldr	r1, [pc, #612]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b222:	690a      	ldr	r2, [r1, #16]
9002b224:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9002b228:	610a      	str	r2, [r1, #16]
9002b22a:	4a97      	ldr	r2, [pc, #604]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b22c:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002b230:	6f11      	ldr	r1, [r2, #112]	; 0x70
9002b232:	430b      	orrs	r3, r1
9002b234:	6713      	str	r3, [r2, #112]	; 0x70
9002b236:	6823      	ldr	r3, [r4, #0]
9002b238:	e5b5      	b.n	9002ada6 <HAL_RCCEx_PeriphCLKConfig+0x306>
    switch(PeriphClkInit->SdmmcClockSelection)
9002b23a:	2601      	movs	r6, #1
9002b23c:	4635      	mov	r5, r6
9002b23e:	e6da      	b.n	9002aff6 <HAL_RCCEx_PeriphCLKConfig+0x556>
9002b240:	462e      	mov	r6, r5
9002b242:	e466      	b.n	9002ab12 <HAL_RCCEx_PeriphCLKConfig+0x72>
9002b244:	462e      	mov	r6, r5
9002b246:	e4c6      	b.n	9002abd6 <HAL_RCCEx_PeriphCLKConfig+0x136>
9002b248:	462e      	mov	r6, r5
9002b24a:	e4ff      	b.n	9002ac4c <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9002b24c:	462e      	mov	r6, r5
9002b24e:	e47e      	b.n	9002ab4e <HAL_RCCEx_PeriphCLKConfig+0xae>
9002b250:	462e      	mov	r6, r5
9002b252:	e49e      	b.n	9002ab92 <HAL_RCCEx_PeriphCLKConfig+0xf2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b254:	498c      	ldr	r1, [pc, #560]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b256:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b258:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b25c:	62ca      	str	r2, [r1, #44]	; 0x2c
      break;
9002b25e:	e4eb      	b.n	9002ac38 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b260:	4989      	ldr	r1, [pc, #548]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b262:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b264:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b268:	62ca      	str	r2, [r1, #44]	; 0x2c
      break;
9002b26a:	e487      	b.n	9002ab7c <HAL_RCCEx_PeriphCLKConfig+0xdc>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b26c:	4986      	ldr	r1, [pc, #536]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b26e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b270:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b274:	62ca      	str	r2, [r1, #44]	; 0x2c
      break;
9002b276:	e460      	b.n	9002ab3a <HAL_RCCEx_PeriphCLKConfig+0x9a>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b278:	4883      	ldr	r0, [pc, #524]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b27a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9002b27c:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9002b280:	62c1      	str	r1, [r0, #44]	; 0x2c
    if(ret == HAL_OK)
9002b282:	e42a      	b.n	9002aada <HAL_RCCEx_PeriphCLKConfig+0x3a>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b284:	4980      	ldr	r1, [pc, #512]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b286:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b288:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b28c:	62ca      	str	r2, [r1, #44]	; 0x2c
      break;
9002b28e:	e497      	b.n	9002abc0 <HAL_RCCEx_PeriphCLKConfig+0x120>
9002b290:	462e      	mov	r6, r5
9002b292:	e526      	b.n	9002ace2 <HAL_RCCEx_PeriphCLKConfig+0x242>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9002b294:	497c      	ldr	r1, [pc, #496]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b296:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9002b29a:	6d8a      	ldr	r2, [r1, #88]	; 0x58
9002b29c:	f022 0207 	bic.w	r2, r2, #7
9002b2a0:	4302      	orrs	r2, r0
9002b2a2:	658a      	str	r2, [r1, #88]	; 0x58
9002b2a4:	e5ee      	b.n	9002ae84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9002b2a6:	4978      	ldr	r1, [pc, #480]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b2a8:	6f60      	ldr	r0, [r4, #116]	; 0x74
9002b2aa:	6d4a      	ldr	r2, [r1, #84]	; 0x54
9002b2ac:	f022 0207 	bic.w	r2, r2, #7
9002b2b0:	4302      	orrs	r2, r0
9002b2b2:	654a      	str	r2, [r1, #84]	; 0x54
9002b2b4:	e5cc      	b.n	9002ae50 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
9002b2b6:	462e      	mov	r6, r5
9002b2b8:	e503      	b.n	9002acc2 <HAL_RCCEx_PeriphCLKConfig+0x222>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9002b2ba:	4973      	ldr	r1, [pc, #460]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b2bc:	6c60      	ldr	r0, [r4, #68]	; 0x44
9002b2be:	6cca      	ldr	r2, [r1, #76]	; 0x4c
9002b2c0:	f022 0203 	bic.w	r2, r2, #3
9002b2c4:	4302      	orrs	r2, r0
9002b2c6:	64ca      	str	r2, [r1, #76]	; 0x4c
9002b2c8:	e56a      	b.n	9002ada0 <HAL_RCCEx_PeriphCLKConfig+0x300>
9002b2ca:	462e      	mov	r6, r5
9002b2cc:	e49e      	b.n	9002ac0c <HAL_RCCEx_PeriphCLKConfig+0x16c>
9002b2ce:	462e      	mov	r6, r5
9002b2d0:	e4d9      	b.n	9002ac86 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9002b2d2:	462e      	mov	r6, r5
9002b2d4:	e616      	b.n	9002af04 <HAL_RCCEx_PeriphCLKConfig+0x464>
9002b2d6:	462e      	mov	r6, r5
9002b2d8:	e634      	b.n	9002af44 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
9002b2da:	462e      	mov	r6, r5
9002b2dc:	e5f2      	b.n	9002aec4 <HAL_RCCEx_PeriphCLKConfig+0x424>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9002b2de:	0358      	lsls	r0, r3, #13
9002b2e0:	462e      	mov	r6, r5
9002b2e2:	f57f ae6e 	bpl.w	9002afc2 <HAL_RCCEx_PeriphCLKConfig+0x522>
9002b2e6:	e65c      	b.n	9002afa2 <HAL_RCCEx_PeriphCLKConfig+0x502>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9002b2e8:	03d9      	lsls	r1, r3, #15
9002b2ea:	462e      	mov	r6, r5
9002b2ec:	f57f ae83 	bpl.w	9002aff6 <HAL_RCCEx_PeriphCLKConfig+0x556>
9002b2f0:	e669      	b.n	9002afc6 <HAL_RCCEx_PeriphCLKConfig+0x526>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9002b2f2:	4965      	ldr	r1, [pc, #404]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b2f4:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9002b2f6:	6d4a      	ldr	r2, [r1, #84]	; 0x54
9002b2f8:	f022 0238 	bic.w	r2, r2, #56	; 0x38
9002b2fc:	4302      	orrs	r2, r0
9002b2fe:	654a      	str	r2, [r1, #84]	; 0x54
9002b300:	e58d      	b.n	9002ae1e <HAL_RCCEx_PeriphCLKConfig+0x37e>
9002b302:	462e      	mov	r6, r5
9002b304:	e677      	b.n	9002aff6 <HAL_RCCEx_PeriphCLKConfig+0x556>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
9002b306:	2102      	movs	r1, #2
9002b308:	1d20      	adds	r0, r4, #4
9002b30a:	f7ff fad1 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b30e:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b310:	6823      	ldr	r3, [r4, #0]
9002b312:	2d00      	cmp	r5, #0
9002b314:	d1d9      	bne.n	9002b2ca <HAL_RCCEx_PeriphCLKConfig+0x82a>
9002b316:	e472      	b.n	9002abfe <HAL_RCCEx_PeriphCLKConfig+0x15e>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b318:	495b      	ldr	r1, [pc, #364]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b31a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b31c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b320:	62ca      	str	r2, [r1, #44]	; 0x2c
    if(ret == HAL_OK)
9002b322:	2d00      	cmp	r5, #0
9002b324:	f47f ad3b 	bne.w	9002ad9e <HAL_RCCEx_PeriphCLKConfig+0x2fe>
9002b328:	e7c7      	b.n	9002b2ba <HAL_RCCEx_PeriphCLKConfig+0x81a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002b32a:	2101      	movs	r1, #1
9002b32c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b330:	f7ff fb3a 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b334:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b336:	6823      	ldr	r3, [r4, #0]
9002b338:	2d00      	cmp	r5, #0
9002b33a:	d1bc      	bne.n	9002b2b6 <HAL_RCCEx_PeriphCLKConfig+0x816>
9002b33c:	e4b9      	b.n	9002acb2 <HAL_RCCEx_PeriphCLKConfig+0x212>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9002b33e:	2102      	movs	r1, #2
9002b340:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b344:	f7ff fb30 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b348:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b34a:	6823      	ldr	r3, [r4, #0]
9002b34c:	2d00      	cmp	r5, #0
9002b34e:	d1c2      	bne.n	9002b2d6 <HAL_RCCEx_PeriphCLKConfig+0x836>
9002b350:	e5f0      	b.n	9002af34 <HAL_RCCEx_PeriphCLKConfig+0x494>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9002b352:	2102      	movs	r1, #2
9002b354:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b358:	f7ff fb26 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b35c:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b35e:	6823      	ldr	r3, [r4, #0]
9002b360:	2d00      	cmp	r5, #0
9002b362:	d1b6      	bne.n	9002b2d2 <HAL_RCCEx_PeriphCLKConfig+0x832>
9002b364:	e5c6      	b.n	9002aef4 <HAL_RCCEx_PeriphCLKConfig+0x454>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b366:	4948      	ldr	r1, [pc, #288]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
9002b368:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b36a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b36e:	62ca      	str	r2, [r1, #44]	; 0x2c
    if(ret == HAL_OK)
9002b370:	2d00      	cmp	r5, #0
9002b372:	d18d      	bne.n	9002b290 <HAL_RCCEx_PeriphCLKConfig+0x7f0>
9002b374:	e6a9      	b.n	9002b0ca <HAL_RCCEx_PeriphCLKConfig+0x62a>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9002b376:	2102      	movs	r1, #2
9002b378:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b37c:	f7ff fb14 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b380:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b382:	6823      	ldr	r3, [r4, #0]
9002b384:	2d00      	cmp	r5, #0
9002b386:	d1a8      	bne.n	9002b2da <HAL_RCCEx_PeriphCLKConfig+0x83a>
9002b388:	e594      	b.n	9002aeb4 <HAL_RCCEx_PeriphCLKConfig+0x414>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
9002b38a:	2101      	movs	r1, #1
9002b38c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b390:	f7ff fb0a 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b394:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b396:	6823      	ldr	r3, [r4, #0]
9002b398:	2d00      	cmp	r5, #0
9002b39a:	d198      	bne.n	9002b2ce <HAL_RCCEx_PeriphCLKConfig+0x82e>
9002b39c:	e46c      	b.n	9002ac78 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
9002b39e:	2102      	movs	r1, #2
9002b3a0:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b3a4:	f7ff fb00 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b3a8:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9002b3ac:	b100      	cbz	r0, 9002b3b0 <HAL_RCCEx_PeriphCLKConfig+0x910>
          status = HAL_ERROR;
9002b3ae:	2601      	movs	r6, #1
9002b3b0:	6823      	ldr	r3, [r4, #0]
9002b3b2:	e5cf      	b.n	9002af54 <HAL_RCCEx_PeriphCLKConfig+0x4b4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9002b3b4:	2100      	movs	r1, #0
9002b3b6:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b3ba:	f7ff faf5 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b3be:	6823      	ldr	r3, [r4, #0]
9002b3c0:	4605      	mov	r5, r0
      break;
9002b3c2:	e439      	b.n	9002ac38 <HAL_RCCEx_PeriphCLKConfig+0x198>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9002b3c4:	2100      	movs	r1, #0
9002b3c6:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b3ca:	f7ff faed 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b3ce:	6823      	ldr	r3, [r4, #0]
9002b3d0:	4605      	mov	r5, r0
      break;
9002b3d2:	f7ff bbb2 	b.w	9002ab3a <HAL_RCCEx_PeriphCLKConfig+0x9a>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b3d6:	492c      	ldr	r1, [pc, #176]	; (9002b488 <HAL_RCCEx_PeriphCLKConfig+0x9e8>)
      break;
9002b3d8:	4635      	mov	r5, r6
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b3da:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b3dc:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b3e0:	62ca      	str	r2, [r1, #44]	; 0x2c
      break;
9002b3e2:	e65e      	b.n	9002b0a2 <HAL_RCCEx_PeriphCLKConfig+0x602>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002b3e4:	2100      	movs	r1, #0
9002b3e6:	1d20      	adds	r0, r4, #4
9002b3e8:	f7ff fa62 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b3ec:	6823      	ldr	r3, [r4, #0]
9002b3ee:	4605      	mov	r5, r0
      break;
9002b3f0:	e657      	b.n	9002b0a2 <HAL_RCCEx_PeriphCLKConfig+0x602>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9002b3f2:	2100      	movs	r1, #0
9002b3f4:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b3f8:	f7ff fad6 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b3fc:	6823      	ldr	r3, [r4, #0]
9002b3fe:	4605      	mov	r5, r0
      break;
9002b400:	f7ff bbbc 	b.w	9002ab7c <HAL_RCCEx_PeriphCLKConfig+0xdc>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
9002b404:	2100      	movs	r1, #0
9002b406:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b40a:	f7ff facd 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b40e:	6823      	ldr	r3, [r4, #0]
9002b410:	4605      	mov	r5, r0
      break;
9002b412:	e646      	b.n	9002b0a2 <HAL_RCCEx_PeriphCLKConfig+0x602>
9002b414:	6823      	ldr	r3, [r4, #0]
9002b416:	f7ff bb67 	b.w	9002aae8 <HAL_RCCEx_PeriphCLKConfig+0x48>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9002b41a:	2100      	movs	r1, #0
9002b41c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b420:	f7ff fac2 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b424:	6823      	ldr	r3, [r4, #0]
9002b426:	4605      	mov	r5, r0
      break;
9002b428:	f7ff bbca 	b.w	9002abc0 <HAL_RCCEx_PeriphCLKConfig+0x120>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
9002b42c:	2102      	movs	r1, #2
9002b42e:	3024      	adds	r0, #36	; 0x24
9002b430:	f7ff faba 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b434:	4606      	mov	r6, r0
    if(ret == HAL_OK)
9002b436:	2e00      	cmp	r6, #0
9002b438:	f43f ab4d 	beq.w	9002aad6 <HAL_RCCEx_PeriphCLKConfig+0x36>
9002b43c:	e7ea      	b.n	9002b414 <HAL_RCCEx_PeriphCLKConfig+0x974>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002b43e:	2101      	movs	r1, #1
9002b440:	1d20      	adds	r0, r4, #4
9002b442:	f7ff fa35 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b446:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b448:	6823      	ldr	r3, [r4, #0]
9002b44a:	2d00      	cmp	r5, #0
9002b44c:	f47f acff 	bne.w	9002ae4e <HAL_RCCEx_PeriphCLKConfig+0x3ae>
9002b450:	e729      	b.n	9002b2a6 <HAL_RCCEx_PeriphCLKConfig+0x806>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002b452:	2101      	movs	r1, #1
9002b454:	1d20      	adds	r0, r4, #4
9002b456:	f7ff fa2b 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b45a:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b45c:	6823      	ldr	r3, [r4, #0]
9002b45e:	2d00      	cmp	r5, #0
9002b460:	f47f ad0f 	bne.w	9002ae82 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
9002b464:	e716      	b.n	9002b294 <HAL_RCCEx_PeriphCLKConfig+0x7f4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
9002b466:	2101      	movs	r1, #1
9002b468:	1d20      	adds	r0, r4, #4
9002b46a:	f7ff fa21 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b46e:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b470:	6823      	ldr	r3, [r4, #0]
9002b472:	2d00      	cmp	r5, #0
9002b474:	f47f acd2 	bne.w	9002ae1c <HAL_RCCEx_PeriphCLKConfig+0x37c>
9002b478:	e73b      	b.n	9002b2f2 <HAL_RCCEx_PeriphCLKConfig+0x852>
            ret = HAL_TIMEOUT;
9002b47a:	2603      	movs	r6, #3
9002b47c:	6823      	ldr	r3, [r4, #0]
9002b47e:	4635      	mov	r5, r6
9002b480:	e491      	b.n	9002ada6 <HAL_RCCEx_PeriphCLKConfig+0x306>
9002b482:	bf00      	nop
9002b484:	58024800 	.word	0x58024800
9002b488:	58024400 	.word	0x58024400
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b48c:	492d      	ldr	r1, [pc, #180]	; (9002b544 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
9002b48e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b490:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b494:	62ca      	str	r2, [r1, #44]	; 0x2c
    if(ret == HAL_OK)
9002b496:	2d00      	cmp	r5, #0
9002b498:	f47f af33 	bne.w	9002b302 <HAL_RCCEx_PeriphCLKConfig+0x862>
9002b49c:	e5a4      	b.n	9002afe8 <HAL_RCCEx_PeriphCLKConfig+0x548>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b49e:	4829      	ldr	r0, [pc, #164]	; (9002b544 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
9002b4a0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9002b4a2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9002b4a6:	62c1      	str	r1, [r0, #44]	; 0x2c
    if(ret == HAL_OK)
9002b4a8:	2d00      	cmp	r5, #0
9002b4aa:	f47f adf4 	bne.w	9002b096 <HAL_RCCEx_PeriphCLKConfig+0x5f6>
9002b4ae:	e625      	b.n	9002b0fc <HAL_RCCEx_PeriphCLKConfig+0x65c>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
9002b4b0:	1d20      	adds	r0, r4, #4
9002b4b2:	f7ff f9fd 	bl	9002a8b0 <RCCEx_PLL2_Config>
9002b4b6:	4605      	mov	r5, r0
    if(ret == HAL_OK)
9002b4b8:	6823      	ldr	r3, [r4, #0]
9002b4ba:	2d00      	cmp	r5, #0
9002b4bc:	f47f af0f 	bne.w	9002b2de <HAL_RCCEx_PeriphCLKConfig+0x83e>
9002b4c0:	e660      	b.n	9002b184 <HAL_RCCEx_PeriphCLKConfig+0x6e4>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9002b4c2:	4920      	ldr	r1, [pc, #128]	; (9002b544 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
9002b4c4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9002b4c6:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
9002b4ca:	62ca      	str	r2, [r1, #44]	; 0x2c
    if(ret == HAL_OK)
9002b4cc:	2d00      	cmp	r5, #0
9002b4ce:	f47f af0b 	bne.w	9002b2e8 <HAL_RCCEx_PeriphCLKConfig+0x848>
9002b4d2:	e641      	b.n	9002b158 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
9002b4d4:	2102      	movs	r1, #2
9002b4d6:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002b4da:	f7ff fa65 	bl	9002a9a8 <RCCEx_PLL3_Config>
9002b4de:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9002b4e2:	b100      	cbz	r0, 9002b4e6 <HAL_RCCEx_PeriphCLKConfig+0xa46>
        status = HAL_ERROR;
9002b4e4:	2601      	movs	r6, #1
9002b4e6:	6823      	ldr	r3, [r4, #0]
9002b4e8:	e542      	b.n	9002af70 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
        tickstart = HAL_GetTick();
9002b4ea:	f7fd f94f 	bl	9002878c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002b4ee:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9002b544 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9002b4f2:	f241 3988 	movw	r9, #5000	; 0x1388
        tickstart = HAL_GetTick();
9002b4f6:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002b4f8:	e004      	b.n	9002b504 <HAL_RCCEx_PeriphCLKConfig+0xa64>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9002b4fa:	f7fd f947 	bl	9002878c <HAL_GetTick>
9002b4fe:	1bc0      	subs	r0, r0, r7
9002b500:	4548      	cmp	r0, r9
9002b502:	d8ba      	bhi.n	9002b47a <HAL_RCCEx_PeriphCLKConfig+0x9da>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9002b504:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9002b508:	079b      	lsls	r3, r3, #30
9002b50a:	d5f6      	bpl.n	9002b4fa <HAL_RCCEx_PeriphCLKConfig+0xa5a>
9002b50c:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
9002b510:	e680      	b.n	9002b214 <HAL_RCCEx_PeriphCLKConfig+0x774>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9002b512:	480c      	ldr	r0, [pc, #48]	; (9002b544 <HAL_RCCEx_PeriphCLKConfig+0xaa4>)
9002b514:	4a0c      	ldr	r2, [pc, #48]	; (9002b548 <HAL_RCCEx_PeriphCLKConfig+0xaa8>)
9002b516:	6901      	ldr	r1, [r0, #16]
9002b518:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9002b51c:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9002b520:	430a      	orrs	r2, r1
9002b522:	6102      	str	r2, [r0, #16]
9002b524:	e681      	b.n	9002b22a <HAL_RCCEx_PeriphCLKConfig+0x78a>
9002b526:	6823      	ldr	r3, [r4, #0]
    if(ret == HAL_OK)
9002b528:	462e      	mov	r6, r5
9002b52a:	e43c      	b.n	9002ada6 <HAL_RCCEx_PeriphCLKConfig+0x306>
    switch(PeriphClkInit->Sai1ClockSelection)
9002b52c:	2601      	movs	r6, #1
9002b52e:	f7ff baef 	b.w	9002ab10 <HAL_RCCEx_PeriphCLKConfig+0x70>
    switch(PeriphClkInit->Usart234578ClockSelection)
9002b532:	2601      	movs	r6, #1
9002b534:	4635      	mov	r5, r6
9002b536:	e48b      	b.n	9002ae50 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
    switch(PeriphClkInit->FmcClockSelection)
9002b538:	2601      	movs	r6, #1
9002b53a:	4635      	mov	r5, r6
9002b53c:	e430      	b.n	9002ada0 <HAL_RCCEx_PeriphCLKConfig+0x300>
    switch(PeriphClkInit->Lpuart1ClockSelection)
9002b53e:	2601      	movs	r6, #1
9002b540:	4635      	mov	r5, r6
9002b542:	e49f      	b.n	9002ae84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
9002b544:	58024400 	.word	0x58024400
9002b548:	00ffffcf 	.word	0x00ffffcf

9002b54c <HAL_RCCEx_GetD3PCLK1Freq>:
{
9002b54c:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE)>> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9002b54e:	f7ff f969 	bl	9002a824 <HAL_RCC_GetHCLKFreq>
9002b552:	4b05      	ldr	r3, [pc, #20]	; (9002b568 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9002b554:	4a05      	ldr	r2, [pc, #20]	; (9002b56c <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9002b556:	6a1b      	ldr	r3, [r3, #32]
9002b558:	f3c3 1302 	ubfx	r3, r3, #4, #3
9002b55c:	5cd3      	ldrb	r3, [r2, r3]
9002b55e:	f003 031f 	and.w	r3, r3, #31
}
9002b562:	40d8      	lsrs	r0, r3
9002b564:	bd08      	pop	{r3, pc}
9002b566:	bf00      	nop
9002b568:	58024400 	.word	0x58024400
9002b56c:	900348cc 	.word	0x900348cc

9002b570 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b570:	4b51      	ldr	r3, [pc, #324]	; (9002b6b8 <HAL_RCCEx_GetPLL2ClockFreq+0x148>)
{
9002b572:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b574:	6a9c      	ldr	r4, [r3, #40]	; 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2)>> 12);
9002b576:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9002b578:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  if (pll2m != 0U)
9002b57a:	f415 3f7c 	tst.w	r5, #258048	; 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2)>> 12);
9002b57e:	f3c5 3105 	ubfx	r1, r5, #12, #6
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
9002b582:	6bde      	ldr	r6, [r3, #60]	; 0x3c
  if (pll2m != 0U)
9002b584:	d05e      	beq.n	9002b644 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
9002b586:	f3c6 06cc 	ubfx	r6, r6, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9002b58a:	f3c2 1200 	ubfx	r2, r2, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b58e:	f004 0403 	and.w	r4, r4, #3
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
9002b592:	fb02 f206 	mul.w	r2, r2, r6
    switch (pllsource)
9002b596:	2c01      	cmp	r4, #1
  fracn2 =(float_t)(uint32_t)(pll2fracen* ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2)>> 3));
9002b598:	ee07 2a90 	vmov	s15, r2
9002b59c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9002b5a0:	d003      	beq.n	9002b5aa <HAL_RCCEx_GetPLL2ClockFreq+0x3a>
9002b5a2:	2c02      	cmp	r4, #2
9002b5a4:	d079      	beq.n	9002b69a <HAL_RCCEx_GetPLL2ClockFreq+0x12a>
9002b5a6:	2c00      	cmp	r4, #0
9002b5a8:	d051      	beq.n	9002b64e <HAL_RCCEx_GetPLL2ClockFreq+0xde>
      pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b5aa:	ee07 1a90 	vmov	s15, r1
9002b5ae:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b5b2:	eddf 7a42 	vldr	s15, [pc, #264]	; 9002b6bc <HAL_RCCEx_GetPLL2ClockFreq+0x14c>
9002b5b6:	ee87 6aa6 	vdiv.f32	s12, s15, s13
9002b5ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002b5bc:	ed9f 5a40 	vldr	s10, [pc, #256]	; 9002b6c0 <HAL_RCCEx_GetPLL2ClockFreq+0x150>
9002b5c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002b5c4:	ee07 3a90 	vmov	s15, r3
9002b5c8:	ee27 7a05 	vmul.f32	s14, s14, s10
9002b5cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002b5d0:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9002b5d4:	ee77 7a87 	vadd.f32	s15, s15, s14
9002b5d8:	ee77 7aa5 	vadd.f32	s15, s15, s11
9002b5dc:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >>9)  + (float_t)1 )) ;
9002b5e0:	4a35      	ldr	r2, [pc, #212]	; (9002b6b8 <HAL_RCCEx_GetPLL2ClockFreq+0x148>)
9002b5e2:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9002b5e6:	6b93      	ldr	r3, [r2, #56]	; 0x38
9002b5e8:	f3c3 2346 	ubfx	r3, r3, #9, #7
9002b5ec:	ee06 3a90 	vmov	s13, r3
9002b5f0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
}
9002b5f4:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >>9)  + (float_t)1 )) ;
9002b5f6:	ee76 6a86 	vadd.f32	s13, s13, s12
9002b5fa:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9002b5fe:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9002b602:	ed80 7a00 	vstr	s14, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >>16) + (float_t)1 )) ;
9002b606:	6b93      	ldr	r3, [r2, #56]	; 0x38
9002b608:	f3c3 4306 	ubfx	r3, r3, #16, #7
9002b60c:	ee06 3a90 	vmov	s13, r3
9002b610:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9002b614:	ee76 6a86 	vadd.f32	s13, s13, s12
9002b618:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9002b61c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9002b620:	ed80 7a01 	vstr	s14, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco/((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >>24) + (float_t)1 )) ;
9002b624:	6b93      	ldr	r3, [r2, #56]	; 0x38
9002b626:	f3c3 6306 	ubfx	r3, r3, #24, #7
9002b62a:	ee07 3a10 	vmov	s14, r3
9002b62e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002b632:	ee37 7a06 	vadd.f32	s14, s14, s12
9002b636:	eec7 6a87 	vdiv.f32	s13, s15, s14
9002b63a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9002b63e:	edc0 6a02 	vstr	s13, [r0, #8]
}
9002b642:	4770      	bx	lr
9002b644:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
9002b646:	e9c0 1100 	strd	r1, r1, [r0]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
9002b64a:	6081      	str	r1, [r0, #8]
}
9002b64c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002b64e:	681a      	ldr	r2, [r3, #0]
9002b650:	0692      	lsls	r2, r2, #26
9002b652:	d529      	bpl.n	9002b6a8 <HAL_RCCEx_GetPLL2ClockFreq+0x138>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b654:	681c      	ldr	r4, [r3, #0]
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b656:	ee07 1a90 	vmov	s15, r1
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b65a:	4a1a      	ldr	r2, [pc, #104]	; (9002b6c4 <HAL_RCCEx_GetPLL2ClockFreq+0x154>)
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b65c:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b660:	f3c4 01c1 	ubfx	r1, r4, #3, #2
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b664:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b668:	eddf 7a15 	vldr	s15, [pc, #84]	; 9002b6c0 <HAL_RCCEx_GetPLL2ClockFreq+0x150>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b66c:	40ca      	lsrs	r2, r1
        pll2vco = ( (float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b66e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002b670:	ee27 7a27 	vmul.f32	s14, s14, s15
9002b674:	ee07 2a90 	vmov	s15, r2
9002b678:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002b67c:	eef8 5ae7 	vcvt.f32.s32	s11, s15
9002b680:	ee07 3a90 	vmov	s15, r3
9002b684:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9002b688:	eec5 7aa6 	vdiv.f32	s15, s11, s13
9002b68c:	ee36 7a07 	vadd.f32	s14, s12, s14
9002b690:	ee37 7a05 	vadd.f32	s14, s14, s10
9002b694:	ee67 7a87 	vmul.f32	s15, s15, s14
9002b698:	e7a2      	b.n	9002b5e0 <HAL_RCCEx_GetPLL2ClockFreq+0x70>
      pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b69a:	ee07 1a90 	vmov	s15, r1
9002b69e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b6a2:	eddf 7a09 	vldr	s15, [pc, #36]	; 9002b6c8 <HAL_RCCEx_GetPLL2ClockFreq+0x158>
9002b6a6:	e786      	b.n	9002b5b6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
        pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2/(float_t)0x2000) +(float_t)1 );
9002b6a8:	ee07 1a90 	vmov	s15, r1
9002b6ac:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b6b0:	eddf 7a06 	vldr	s15, [pc, #24]	; 9002b6cc <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
9002b6b4:	e77f      	b.n	9002b5b6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9002b6b6:	bf00      	nop
9002b6b8:	58024400 	.word	0x58024400
9002b6bc:	4a742400 	.word	0x4a742400
9002b6c0:	39000000 	.word	0x39000000
9002b6c4:	03d09000 	.word	0x03d09000
9002b6c8:	4bbebc20 	.word	0x4bbebc20
9002b6cc:	4c742400 	.word	0x4c742400

9002b6d0 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b6d0:	4b51      	ldr	r3, [pc, #324]	; (9002b818 <HAL_RCCEx_GetPLL3ClockFreq+0x148>)
{
9002b6d2:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b6d4:	6a9c      	ldr	r4, [r3, #40]	; 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3)>> 20)  ;
9002b6d6:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9002b6d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  if (pll3m != 0U)
9002b6da:	f015 7f7c 	tst.w	r5, #66060288	; 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3)>> 20)  ;
9002b6de:	f3c5 5105 	ubfx	r1, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
9002b6e2:	6c5e      	ldr	r6, [r3, #68]	; 0x44
  if (pll3m != 0U)
9002b6e4:	d05e      	beq.n	9002b7a4 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
9002b6e6:	f3c6 06cc 	ubfx	r6, r6, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9002b6ea:	f3c2 2200 	ubfx	r2, r2, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9002b6ee:	f004 0403 	and.w	r4, r4, #3
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
9002b6f2:	fb02 f206 	mul.w	r2, r2, r6
    switch (pllsource)
9002b6f6:	2c01      	cmp	r4, #1
  fracn3 = (float_t)(uint32_t)(pll3fracen* ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3)>> 3));
9002b6f8:	ee07 2a90 	vmov	s15, r2
9002b6fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    switch (pllsource)
9002b700:	d003      	beq.n	9002b70a <HAL_RCCEx_GetPLL3ClockFreq+0x3a>
9002b702:	2c02      	cmp	r4, #2
9002b704:	d079      	beq.n	9002b7fa <HAL_RCCEx_GetPLL3ClockFreq+0x12a>
9002b706:	2c00      	cmp	r4, #0
9002b708:	d051      	beq.n	9002b7ae <HAL_RCCEx_GetPLL3ClockFreq+0xde>
      pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b70a:	ee07 1a90 	vmov	s15, r1
9002b70e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b712:	eddf 7a42 	vldr	s15, [pc, #264]	; 9002b81c <HAL_RCCEx_GetPLL3ClockFreq+0x14c>
9002b716:	ee87 6aa6 	vdiv.f32	s12, s15, s13
9002b71a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9002b71c:	ed9f 5a40 	vldr	s10, [pc, #256]	; 9002b820 <HAL_RCCEx_GetPLL3ClockFreq+0x150>
9002b720:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002b724:	ee07 3a90 	vmov	s15, r3
9002b728:	ee27 7a05 	vmul.f32	s14, s14, s10
9002b72c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9002b730:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9002b734:	ee77 7a87 	vadd.f32	s15, s15, s14
9002b738:	ee77 7aa5 	vadd.f32	s15, s15, s11
9002b73c:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >>9)  + (float_t)1 )) ;
9002b740:	4a35      	ldr	r2, [pc, #212]	; (9002b818 <HAL_RCCEx_GetPLL3ClockFreq+0x148>)
9002b742:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9002b746:	6c13      	ldr	r3, [r2, #64]	; 0x40
9002b748:	f3c3 2346 	ubfx	r3, r3, #9, #7
9002b74c:	ee06 3a90 	vmov	s13, r3
9002b750:	eef8 6ae6 	vcvt.f32.s32	s13, s13
}
9002b754:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >>9)  + (float_t)1 )) ;
9002b756:	ee76 6a86 	vadd.f32	s13, s13, s12
9002b75a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9002b75e:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9002b762:	ed80 7a00 	vstr	s14, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >>16) + (float_t)1 )) ;
9002b766:	6c13      	ldr	r3, [r2, #64]	; 0x40
9002b768:	f3c3 4306 	ubfx	r3, r3, #16, #7
9002b76c:	ee06 3a90 	vmov	s13, r3
9002b770:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9002b774:	ee76 6a86 	vadd.f32	s13, s13, s12
9002b778:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9002b77c:	eebc 7ac7 	vcvt.u32.f32	s14, s14
9002b780:	ed80 7a01 	vstr	s14, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco/((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >>24) + (float_t)1 )) ;
9002b784:	6c13      	ldr	r3, [r2, #64]	; 0x40
9002b786:	f3c3 6306 	ubfx	r3, r3, #24, #7
9002b78a:	ee07 3a10 	vmov	s14, r3
9002b78e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9002b792:	ee37 7a06 	vadd.f32	s14, s14, s12
9002b796:	eec7 6a87 	vdiv.f32	s13, s15, s14
9002b79a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9002b79e:	edc0 6a02 	vstr	s13, [r0, #8]
}
9002b7a2:	4770      	bx	lr
9002b7a4:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
9002b7a6:	e9c0 1100 	strd	r1, r1, [r0]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
9002b7aa:	6081      	str	r1, [r0, #8]
}
9002b7ac:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002b7ae:	681a      	ldr	r2, [r3, #0]
9002b7b0:	0692      	lsls	r2, r2, #26
9002b7b2:	d529      	bpl.n	9002b808 <HAL_RCCEx_GetPLL3ClockFreq+0x138>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b7b4:	681c      	ldr	r4, [r3, #0]
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b7b6:	ee07 1a90 	vmov	s15, r1
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b7ba:	4a1a      	ldr	r2, [pc, #104]	; (9002b824 <HAL_RCCEx_GetPLL3ClockFreq+0x154>)
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b7bc:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b7c0:	f3c4 01c1 	ubfx	r1, r4, #3, #2
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b7c4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b7c8:	eddf 7a15 	vldr	s15, [pc, #84]	; 9002b820 <HAL_RCCEx_GetPLL3ClockFreq+0x150>
        hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
9002b7cc:	40ca      	lsrs	r2, r1
        pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b7ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9002b7d0:	ee27 7a27 	vmul.f32	s14, s14, s15
9002b7d4:	ee07 2a90 	vmov	s15, r2
9002b7d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002b7dc:	eef8 5ae7 	vcvt.f32.s32	s11, s15
9002b7e0:	ee07 3a90 	vmov	s15, r3
9002b7e4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
9002b7e8:	eec5 7aa6 	vdiv.f32	s15, s11, s13
9002b7ec:	ee36 7a07 	vadd.f32	s14, s12, s14
9002b7f0:	ee37 7a05 	vadd.f32	s14, s14, s10
9002b7f4:	ee67 7a87 	vmul.f32	s15, s15, s14
9002b7f8:	e7a2      	b.n	9002b740 <HAL_RCCEx_GetPLL3ClockFreq+0x70>
      pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b7fa:	ee07 1a90 	vmov	s15, r1
9002b7fe:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b802:	eddf 7a09 	vldr	s15, [pc, #36]	; 9002b828 <HAL_RCCEx_GetPLL3ClockFreq+0x158>
9002b806:	e786      	b.n	9002b716 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
        pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3/(float_t)0x2000) +(float_t)1 );
9002b808:	ee07 1a90 	vmov	s15, r1
9002b80c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9002b810:	eddf 7a06 	vldr	s15, [pc, #24]	; 9002b82c <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
9002b814:	e77f      	b.n	9002b716 <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9002b816:	bf00      	nop
9002b818:	58024400 	.word	0x58024400
9002b81c:	4a742400 	.word	0x4a742400
9002b820:	39000000 	.word	0x39000000
9002b824:	03d09000 	.word	0x03d09000
9002b828:	4bbebc20 	.word	0x4bbebc20
9002b82c:	4c742400 	.word	0x4c742400

9002b830 <HAL_RTC_GetTime>:

  /* Check the parameters */
  assert_param(IS_RTC_FORMAT(Format));

  /* Get subseconds structure field from the corresponding register*/
  sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
9002b830:	6803      	ldr	r3, [r0, #0]
{
9002b832:	b470      	push	{r4, r5, r6}
  sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
9002b834:	6a9c      	ldr	r4, [r3, #40]	; 0x28

  /* Get SecondFraction structure field from the corresponding register field*/
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
9002b836:	6918      	ldr	r0, [r3, #16]

  /* Get the TR register */
  tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
9002b838:	681b      	ldr	r3, [r3, #0]
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
9002b83a:	f3c0 000e 	ubfx	r0, r0, #0, #15
  sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
9002b83e:	604c      	str	r4, [r1, #4]

  /* Fill the structure fields with the read parameters */
  sTime->Hours      = (uint8_t)((tmpreg & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TR_HU_Pos);
  sTime->Minutes    = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
  sTime->Seconds    = (uint8_t)((tmpreg & (RTC_TR_ST  | RTC_TR_SU))  >> RTC_TR_SU_Pos);
  sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM))               >> RTC_TR_PM_Pos);
9002b840:	f3c3 5680 	ubfx	r6, r3, #22, #1
  sTime->Hours      = (uint8_t)((tmpreg & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TR_HU_Pos);
9002b844:	f3c3 4505 	ubfx	r5, r3, #16, #6
  sTime->Minutes    = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
9002b848:	f3c3 2406 	ubfx	r4, r3, #8, #7
  sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
9002b84c:	6088      	str	r0, [r1, #8]
  sTime->Seconds    = (uint8_t)((tmpreg & (RTC_TR_ST  | RTC_TR_SU))  >> RTC_TR_SU_Pos);
9002b84e:	f003 007f 	and.w	r0, r3, #127	; 0x7f
  sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM))               >> RTC_TR_PM_Pos);
9002b852:	70ce      	strb	r6, [r1, #3]
  sTime->Hours      = (uint8_t)((tmpreg & (RTC_TR_HT  | RTC_TR_HU))  >> RTC_TR_HU_Pos);
9002b854:	f3c3 4306 	ubfx	r3, r3, #16, #7
9002b858:	700d      	strb	r5, [r1, #0]
  sTime->Minutes    = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
9002b85a:	704c      	strb	r4, [r1, #1]
  sTime->Seconds    = (uint8_t)((tmpreg & (RTC_TR_ST  | RTC_TR_SU))  >> RTC_TR_SU_Pos);
9002b85c:	7088      	strb	r0, [r1, #2]

  /* Check the input parameters format */
  if(Format == RTC_FORMAT_BIN)
9002b85e:	b9ba      	cbnz	r2, 9002b890 <HAL_RTC_GetTime+0x60>
  * @retval Converted word
  */
uint8_t RTC_Bcd2ToByte(uint8_t Value)
{
  uint8_t tmp;
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b860:	0926      	lsrs	r6, r4, #4
  return (tmp + (Value & 0x0FU));
9002b862:	f003 030f 	and.w	r3, r3, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b866:	0902      	lsrs	r2, r0, #4
  return (tmp + (Value & 0x0FU));
9002b868:	f004 040f 	and.w	r4, r4, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b86c:	092d      	lsrs	r5, r5, #4
  return (tmp + (Value & 0x0FU));
9002b86e:	f000 000f 	and.w	r0, r0, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b872:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9002b876:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9002b87a:	eb02 0282 	add.w	r2, r2, r2, lsl #2
  return (tmp + (Value & 0x0FU));
9002b87e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002b882:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9002b886:	eb00 0042 	add.w	r0, r0, r2, lsl #1
    sTime->Hours   = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
9002b88a:	700b      	strb	r3, [r1, #0]
    sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
9002b88c:	704c      	strb	r4, [r1, #1]
    sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
9002b88e:	7088      	strb	r0, [r1, #2]
}
9002b890:	2000      	movs	r0, #0
9002b892:	bc70      	pop	{r4, r5, r6}
9002b894:	4770      	bx	lr
9002b896:	bf00      	nop

9002b898 <HAL_RTC_GetDate>:
  datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
9002b898:	6803      	ldr	r3, [r0, #0]
9002b89a:	685b      	ldr	r3, [r3, #4]
{
9002b89c:	b4f0      	push	{r4, r5, r6, r7}
  sDate->Date    = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
9002b89e:	f003 003f 	and.w	r0, r3, #63	; 0x3f
  sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU))            >> RTC_DR_WDU_Pos);
9002b8a2:	f3c3 3642 	ubfx	r6, r3, #13, #3
  sDate->Year    = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
9002b8a6:	f3c3 4407 	ubfx	r4, r3, #16, #8
  sDate->Month   = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
9002b8aa:	f3c3 2504 	ubfx	r5, r3, #8, #5
  sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU))            >> RTC_DR_WDU_Pos);
9002b8ae:	700e      	strb	r6, [r1, #0]
  sDate->Month   = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
9002b8b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
  sDate->Year    = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
9002b8b4:	70cc      	strb	r4, [r1, #3]
  sDate->Month   = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
9002b8b6:	704d      	strb	r5, [r1, #1]
  sDate->Date    = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
9002b8b8:	7088      	strb	r0, [r1, #2]
  if(Format == RTC_FORMAT_BIN)
9002b8ba:	b9ba      	cbnz	r2, 9002b8ec <HAL_RTC_GetDate+0x54>
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b8bc:	092d      	lsrs	r5, r5, #4
  return (tmp + (Value & 0x0FU));
9002b8be:	f000 060f 	and.w	r6, r0, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b8c2:	0922      	lsrs	r2, r4, #4
  return (tmp + (Value & 0x0FU));
9002b8c4:	f003 030f 	and.w	r3, r3, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b8c8:	00af      	lsls	r7, r5, #2
  return (tmp + (Value & 0x0FU));
9002b8ca:	f004 040f 	and.w	r4, r4, #15
  tmp = ((Value & 0xF0U) >> 4U) * 10U;
9002b8ce:	0900      	lsrs	r0, r0, #4
9002b8d0:	443d      	add	r5, r7
9002b8d2:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9002b8d6:	eb00 0080 	add.w	r0, r0, r0, lsl #2
  return (tmp + (Value & 0x0FU));
9002b8da:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002b8de:	eb04 0442 	add.w	r4, r4, r2, lsl #1
9002b8e2:	eb06 0040 	add.w	r0, r6, r0, lsl #1
    sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
9002b8e6:	704b      	strb	r3, [r1, #1]
    sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
9002b8e8:	70cc      	strb	r4, [r1, #3]
    sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
9002b8ea:	7088      	strb	r0, [r1, #2]
}
9002b8ec:	2000      	movs	r0, #0
9002b8ee:	bcf0      	pop	{r4, r5, r6, r7}
9002b8f0:	4770      	bx	lr
9002b8f2:	bf00      	nop

9002b8f4 <HAL_RTC_WaitForSynchro>:
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
9002b8f4:	6802      	ldr	r2, [r0, #0]
{
9002b8f6:	b538      	push	{r3, r4, r5, lr}
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
9002b8f8:	68d3      	ldr	r3, [r2, #12]
{
9002b8fa:	4604      	mov	r4, r0
  hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
9002b8fc:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
9002b900:	60d3      	str	r3, [r2, #12]
  tickstart = HAL_GetTick();
9002b902:	f7fc ff43 	bl	9002878c <HAL_GetTick>
9002b906:	4605      	mov	r5, r0
    while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
9002b908:	e005      	b.n	9002b916 <HAL_RTC_WaitForSynchro+0x22>
      if((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
9002b90a:	f7fc ff3f 	bl	9002878c <HAL_GetTick>
9002b90e:	1b43      	subs	r3, r0, r5
9002b910:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
9002b914:	d805      	bhi.n	9002b922 <HAL_RTC_WaitForSynchro+0x2e>
    while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
9002b916:	6823      	ldr	r3, [r4, #0]
9002b918:	68db      	ldr	r3, [r3, #12]
9002b91a:	069b      	lsls	r3, r3, #26
9002b91c:	d5f5      	bpl.n	9002b90a <HAL_RTC_WaitForSynchro+0x16>
  return HAL_OK;
9002b91e:	2000      	movs	r0, #0
}
9002b920:	bd38      	pop	{r3, r4, r5, pc}
        return HAL_TIMEOUT;
9002b922:	2003      	movs	r0, #3
}
9002b924:	bd38      	pop	{r3, r4, r5, pc}
9002b926:	bf00      	nop

9002b928 <RTC_EnterInitMode>:
{
9002b928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
9002b92a:	6803      	ldr	r3, [r0, #0]
9002b92c:	68de      	ldr	r6, [r3, #12]
9002b92e:	f016 0640 	ands.w	r6, r6, #64	; 0x40
9002b932:	d002      	beq.n	9002b93a <RTC_EnterInitMode+0x12>
  HAL_StatusTypeDef status = HAL_OK;
9002b934:	2600      	movs	r6, #0
}
9002b936:	4630      	mov	r0, r6
9002b938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
9002b93a:	f04f 32ff 	mov.w	r2, #4294967295
9002b93e:	4604      	mov	r4, r0
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b940:	2703      	movs	r7, #3
    hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
9002b942:	60da      	str	r2, [r3, #12]
    tickstart = HAL_GetTick();
9002b944:	f7fc ff22 	bl	9002878c <HAL_GetTick>
9002b948:	4605      	mov	r5, r0
    while ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
9002b94a:	6823      	ldr	r3, [r4, #0]
9002b94c:	68db      	ldr	r3, [r3, #12]
9002b94e:	065b      	lsls	r3, r3, #25
9002b950:	d4f1      	bmi.n	9002b936 <RTC_EnterInitMode+0xe>
      if((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
9002b952:	f7fc ff1b 	bl	9002878c <HAL_GetTick>
9002b956:	1b43      	subs	r3, r0, r5
9002b958:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
9002b95c:	d9f5      	bls.n	9002b94a <RTC_EnterInitMode+0x22>
        status = HAL_TIMEOUT;
9002b95e:	2603      	movs	r6, #3
        hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b960:	f884 7021 	strb.w	r7, [r4, #33]	; 0x21
9002b964:	e7f1      	b.n	9002b94a <RTC_EnterInitMode+0x22>
9002b966:	bf00      	nop

9002b968 <RTC_ExitInitMode>:
  CLEAR_BIT(RTC->ISR, RTC_ISR_INITF);
9002b968:	4b11      	ldr	r3, [pc, #68]	; (9002b9b0 <RTC_ExitInitMode+0x48>)
9002b96a:	68da      	ldr	r2, [r3, #12]
9002b96c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
{
9002b970:	b510      	push	{r4, lr}
  CLEAR_BIT(RTC->ISR, RTC_ISR_INITF);
9002b972:	60da      	str	r2, [r3, #12]
{
9002b974:	4604      	mov	r4, r0
  if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
9002b976:	689a      	ldr	r2, [r3, #8]
9002b978:	0692      	lsls	r2, r2, #26
9002b97a:	d403      	bmi.n	9002b984 <RTC_ExitInitMode+0x1c>
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
9002b97c:	f7ff ffba 	bl	9002b8f4 <HAL_RTC_WaitForSynchro>
9002b980:	b988      	cbnz	r0, 9002b9a6 <RTC_ExitInitMode+0x3e>
}
9002b982:	bd10      	pop	{r4, pc}
    CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
9002b984:	689a      	ldr	r2, [r3, #8]
9002b986:	f022 0220 	bic.w	r2, r2, #32
9002b98a:	609a      	str	r2, [r3, #8]
    if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
9002b98c:	f7ff ffb2 	bl	9002b8f4 <HAL_RTC_WaitForSynchro>
9002b990:	b118      	cbz	r0, 9002b99a <RTC_ExitInitMode+0x32>
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b992:	2303      	movs	r3, #3
      status = HAL_TIMEOUT;
9002b994:	4618      	mov	r0, r3
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b996:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
    SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
9002b99a:	4a05      	ldr	r2, [pc, #20]	; (9002b9b0 <RTC_ExitInitMode+0x48>)
9002b99c:	6893      	ldr	r3, [r2, #8]
9002b99e:	f043 0320 	orr.w	r3, r3, #32
9002b9a2:	6093      	str	r3, [r2, #8]
}
9002b9a4:	bd10      	pop	{r4, pc}
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b9a6:	2303      	movs	r3, #3
      status = HAL_TIMEOUT;
9002b9a8:	4618      	mov	r0, r3
      hrtc->State = HAL_RTC_STATE_TIMEOUT;
9002b9aa:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
}
9002b9ae:	bd10      	pop	{r4, pc}
9002b9b0:	58004000 	.word	0x58004000

9002b9b4 <HAL_RTC_Init>:
  if(hrtc != NULL)
9002b9b4:	2800      	cmp	r0, #0
9002b9b6:	d044      	beq.n	9002ba42 <HAL_RTC_Init+0x8e>
{
9002b9b8:	b570      	push	{r4, r5, r6, lr}
    if(hrtc->State == HAL_RTC_STATE_RESET)
9002b9ba:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
9002b9be:	4604      	mov	r4, r0
9002b9c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9002b9c4:	2b00      	cmp	r3, #0
9002b9c6:	d037      	beq.n	9002ba38 <HAL_RTC_Init+0x84>
    hrtc->State = HAL_RTC_STATE_BUSY;
9002b9c8:	2002      	movs	r0, #2
    __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002b9ca:	6823      	ldr	r3, [r4, #0]
9002b9cc:	21ca      	movs	r1, #202	; 0xca
9002b9ce:	2253      	movs	r2, #83	; 0x53
    hrtc->State = HAL_RTC_STATE_BUSY;
9002b9d0:	f884 0021 	strb.w	r0, [r4, #33]	; 0x21
    status = RTC_EnterInitMode(hrtc);
9002b9d4:	4620      	mov	r0, r4
    __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002b9d6:	6259      	str	r1, [r3, #36]	; 0x24
9002b9d8:	625a      	str	r2, [r3, #36]	; 0x24
    status = RTC_EnterInitMode(hrtc);
9002b9da:	f7ff ffa5 	bl	9002b928 <RTC_EnterInitMode>
    if (status == HAL_OK)
9002b9de:	b118      	cbz	r0, 9002b9e8 <HAL_RTC_Init+0x34>
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002b9e0:	6823      	ldr	r3, [r4, #0]
9002b9e2:	22ff      	movs	r2, #255	; 0xff
9002b9e4:	625a      	str	r2, [r3, #36]	; 0x24
}
9002b9e6:	bd70      	pop	{r4, r5, r6, pc}
      hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
9002b9e8:	6822      	ldr	r2, [r4, #0]
      status = RTC_ExitInitMode(hrtc);
9002b9ea:	4620      	mov	r0, r4
      hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
9002b9ec:	4916      	ldr	r1, [pc, #88]	; (9002ba48 <HAL_RTC_Init+0x94>)
9002b9ee:	6895      	ldr	r5, [r2, #8]
      hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
9002b9f0:	6863      	ldr	r3, [r4, #4]
      hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
9002b9f2:	4029      	ands	r1, r5
      hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
9002b9f4:	6925      	ldr	r5, [r4, #16]
9002b9f6:	432b      	orrs	r3, r5
9002b9f8:	69a5      	ldr	r5, [r4, #24]
      hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
9002b9fa:	6091      	str	r1, [r2, #8]
      hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
9002b9fc:	432b      	orrs	r3, r5
9002b9fe:	6891      	ldr	r1, [r2, #8]
      hrtc->Instance->PRER = (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos) | (hrtc->Init.SynchPrediv << RTC_PRER_PREDIV_S_Pos);
9002ba00:	68a5      	ldr	r5, [r4, #8]
      hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
9002ba02:	430b      	orrs	r3, r1
      hrtc->Instance->PRER = (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos) | (hrtc->Init.SynchPrediv << RTC_PRER_PREDIV_S_Pos);
9002ba04:	68e1      	ldr	r1, [r4, #12]
9002ba06:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
      hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity);
9002ba0a:	6093      	str	r3, [r2, #8]
      hrtc->Instance->PRER = (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos) | (hrtc->Init.SynchPrediv << RTC_PRER_PREDIV_S_Pos);
9002ba0c:	6111      	str	r1, [r2, #16]
      status = RTC_ExitInitMode(hrtc);
9002ba0e:	f7ff ffab 	bl	9002b968 <RTC_ExitInitMode>
      if(status == HAL_OK)
9002ba12:	2800      	cmp	r0, #0
9002ba14:	d1e4      	bne.n	9002b9e0 <HAL_RTC_Init+0x2c>
        hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
9002ba16:	6823      	ldr	r3, [r4, #0]
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002ba18:	26ff      	movs	r6, #255	; 0xff
        hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
9002ba1a:	6965      	ldr	r5, [r4, #20]
        hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
9002ba1c:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
        hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
9002ba1e:	69e2      	ldr	r2, [r4, #28]
        hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
9002ba20:	f021 0103 	bic.w	r1, r1, #3
        hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
9002ba24:	432a      	orrs	r2, r5
      hrtc->State = HAL_RTC_STATE_READY;
9002ba26:	2501      	movs	r5, #1
        hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
9002ba28:	64d9      	str	r1, [r3, #76]	; 0x4c
        hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
9002ba2a:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
9002ba2c:	430a      	orrs	r2, r1
9002ba2e:	64da      	str	r2, [r3, #76]	; 0x4c
    __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002ba30:	625e      	str	r6, [r3, #36]	; 0x24
      hrtc->State = HAL_RTC_STATE_READY;
9002ba32:	f884 5021 	strb.w	r5, [r4, #33]	; 0x21
}
9002ba36:	bd70      	pop	{r4, r5, r6, pc}
      hrtc->Lock = HAL_UNLOCKED;
9002ba38:	f880 2020 	strb.w	r2, [r0, #32]
      HAL_RTC_MspInit(hrtc);
9002ba3c:	f7fb fa90 	bl	90026f60 <HAL_RTC_MspInit>
9002ba40:	e7c2      	b.n	9002b9c8 <HAL_RTC_Init+0x14>
  HAL_StatusTypeDef status = HAL_ERROR;
9002ba42:	2001      	movs	r0, #1
}
9002ba44:	4770      	bx	lr
9002ba46:	bf00      	nop
9002ba48:	ff8fffbf 	.word	0xff8fffbf

9002ba4c <HAL_RTC_SetTime>:
{
9002ba4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __HAL_LOCK(hrtc);
9002ba4e:	f890 3020 	ldrb.w	r3, [r0, #32]
9002ba52:	2b01      	cmp	r3, #1
9002ba54:	d04b      	beq.n	9002baee <HAL_RTC_SetTime+0xa2>
9002ba56:	4617      	mov	r7, r2
9002ba58:	2201      	movs	r2, #1
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002ba5a:	6803      	ldr	r3, [r0, #0]
9002ba5c:	460d      	mov	r5, r1
  __HAL_LOCK(hrtc);
9002ba5e:	f880 2020 	strb.w	r2, [r0, #32]
  hrtc->State = HAL_RTC_STATE_BUSY;
9002ba62:	2602      	movs	r6, #2
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002ba64:	21ca      	movs	r1, #202	; 0xca
9002ba66:	2253      	movs	r2, #83	; 0x53
  hrtc->State = HAL_RTC_STATE_BUSY;
9002ba68:	f880 6021 	strb.w	r6, [r0, #33]	; 0x21
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002ba6c:	4604      	mov	r4, r0
9002ba6e:	6259      	str	r1, [r3, #36]	; 0x24
9002ba70:	625a      	str	r2, [r3, #36]	; 0x24
  status = RTC_EnterInitMode(hrtc);
9002ba72:	f7ff ff59 	bl	9002b928 <RTC_EnterInitMode>
  if (status == HAL_OK)
9002ba76:	b130      	cbz	r0, 9002ba86 <HAL_RTC_SetTime+0x3a>
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002ba78:	6823      	ldr	r3, [r4, #0]
9002ba7a:	22ff      	movs	r2, #255	; 0xff
9002ba7c:	625a      	str	r2, [r3, #36]	; 0x24
  __HAL_UNLOCK(hrtc);
9002ba7e:	2300      	movs	r3, #0
9002ba80:	f884 3020 	strb.w	r3, [r4, #32]
}
9002ba84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
9002ba86:	6826      	ldr	r6, [r4, #0]
    if(Format == RTC_FORMAT_BIN)
9002ba88:	bb9f      	cbnz	r7, 9002baf2 <HAL_RTC_SetTime+0xa6>
      if((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
9002ba8a:	68b3      	ldr	r3, [r6, #8]
9002ba8c:	f013 0c40 	ands.w	ip, r3, #64	; 0x40
9002ba90:	d056      	beq.n	9002bb40 <HAL_RTC_SetTime+0xf4>
9002ba92:	78eb      	ldrb	r3, [r5, #3]
9002ba94:	ea4f 5c83 	mov.w	ip, r3, lsl #22
      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002ba98:	782b      	ldrb	r3, [r5, #0]
  while (bcdlow >= 10U)
9002ba9a:	2b09      	cmp	r3, #9
9002ba9c:	d908      	bls.n	9002bab0 <HAL_RTC_SetTime+0x64>
  uint32_t bcdhigh = 0U;
9002ba9e:	2200      	movs	r2, #0
    bcdlow -= 10U;
9002baa0:	3b0a      	subs	r3, #10
    bcdhigh++;
9002baa2:	3201      	adds	r2, #1
    bcdlow -= 10U;
9002baa4:	b2db      	uxtb	r3, r3
  while (bcdlow >= 10U)
9002baa6:	2b09      	cmp	r3, #9
9002baa8:	d8fa      	bhi.n	9002baa0 <HAL_RTC_SetTime+0x54>
9002baaa:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9002baae:	b2db      	uxtb	r3, r3
                          ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
9002bab0:	7868      	ldrb	r0, [r5, #1]
      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002bab2:	0419      	lsls	r1, r3, #16
  while (bcdlow >= 10U)
9002bab4:	2809      	cmp	r0, #9
9002bab6:	d908      	bls.n	9002baca <HAL_RTC_SetTime+0x7e>
  uint32_t bcdhigh = 0U;
9002bab8:	2300      	movs	r3, #0
    bcdlow -= 10U;
9002baba:	380a      	subs	r0, #10
    bcdhigh++;
9002babc:	3301      	adds	r3, #1
    bcdlow -= 10U;
9002babe:	b2c0      	uxtb	r0, r0
  while (bcdlow >= 10U)
9002bac0:	2809      	cmp	r0, #9
9002bac2:	d8fa      	bhi.n	9002baba <HAL_RTC_SetTime+0x6e>
9002bac4:	ea40 1003 	orr.w	r0, r0, r3, lsl #4
9002bac8:	b2c0      	uxtb	r0, r0
                          ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos)  | \
9002baca:	78aa      	ldrb	r2, [r5, #2]
                          ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
9002bacc:	0200      	lsls	r0, r0, #8
  while (bcdlow >= 10U)
9002bace:	2a09      	cmp	r2, #9
9002bad0:	d908      	bls.n	9002bae4 <HAL_RTC_SetTime+0x98>
    bcdlow -= 10U;
9002bad2:	f1a2 030a 	sub.w	r3, r2, #10
    bcdhigh++;
9002bad6:	3701      	adds	r7, #1
    bcdlow -= 10U;
9002bad8:	b2da      	uxtb	r2, r3
  while (bcdlow >= 10U)
9002bada:	2a09      	cmp	r2, #9
9002badc:	d8f9      	bhi.n	9002bad2 <HAL_RTC_SetTime+0x86>
9002bade:	ea42 1307 	orr.w	r3, r2, r7, lsl #4
9002bae2:	b2da      	uxtb	r2, r3
      tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002bae4:	ea41 030c 	orr.w	r3, r1, ip
9002bae8:	4303      	orrs	r3, r0
9002baea:	4313      	orrs	r3, r2
9002baec:	e00f      	b.n	9002bb0e <HAL_RTC_SetTime+0xc2>
  __HAL_LOCK(hrtc);
9002baee:	2002      	movs	r0, #2
}
9002baf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      if((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
9002baf2:	68b2      	ldr	r2, [r6, #8]
9002baf4:	f012 0240 	ands.w	r2, r2, #64	; 0x40
9002baf8:	d025      	beq.n	9002bb46 <HAL_RTC_SetTime+0xfa>
9002bafa:	78eb      	ldrb	r3, [r5, #3]
9002bafc:	059a      	lsls	r2, r3, #22
                ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
9002bafe:	786b      	ldrb	r3, [r5, #1]
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002bb00:	7828      	ldrb	r0, [r5, #0]
                ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
9002bb02:	021b      	lsls	r3, r3, #8
                ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos)  | \
9002bb04:	78a9      	ldrb	r1, [r5, #2]
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002bb06:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
                ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
9002bb0a:	430b      	orrs	r3, r1
      tmpreg = (((uint32_t)(sTime->Hours)   << RTC_TR_HU_Pos)  | \
9002bb0c:	4313      	orrs	r3, r2
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
9002bb0e:	4a0f      	ldr	r2, [pc, #60]	; (9002bb4c <HAL_RTC_SetTime+0x100>)
    status = RTC_ExitInitMode(hrtc);
9002bb10:	4620      	mov	r0, r4
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
9002bb12:	401a      	ands	r2, r3
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
9002bb14:	e9d5 3103 	ldrd	r3, r1, [r5, #12]
    hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
9002bb18:	6032      	str	r2, [r6, #0]
    hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
9002bb1a:	68b2      	ldr	r2, [r6, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
9002bb1c:	430b      	orrs	r3, r1
    hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
9002bb1e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9002bb22:	60b2      	str	r2, [r6, #8]
    hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
9002bb24:	68b2      	ldr	r2, [r6, #8]
9002bb26:	4313      	orrs	r3, r2
9002bb28:	60b3      	str	r3, [r6, #8]
    status = RTC_ExitInitMode(hrtc);
9002bb2a:	f7ff ff1d 	bl	9002b968 <RTC_ExitInitMode>
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002bb2e:	6823      	ldr	r3, [r4, #0]
9002bb30:	22ff      	movs	r2, #255	; 0xff
9002bb32:	625a      	str	r2, [r3, #36]	; 0x24
  if (status == HAL_OK)
9002bb34:	2800      	cmp	r0, #0
9002bb36:	d1a2      	bne.n	9002ba7e <HAL_RTC_SetTime+0x32>
    hrtc->State = HAL_RTC_STATE_READY;
9002bb38:	2301      	movs	r3, #1
9002bb3a:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
9002bb3e:	e79e      	b.n	9002ba7e <HAL_RTC_SetTime+0x32>
        sTime->TimeFormat = 0x00U;
9002bb40:	f885 c003 	strb.w	ip, [r5, #3]
9002bb44:	e7a8      	b.n	9002ba98 <HAL_RTC_SetTime+0x4c>
        sTime->TimeFormat = 0x00U;
9002bb46:	70ea      	strb	r2, [r5, #3]
9002bb48:	e7d9      	b.n	9002bafe <HAL_RTC_SetTime+0xb2>
9002bb4a:	bf00      	nop
9002bb4c:	007f7f7f 	.word	0x007f7f7f

9002bb50 <HAL_RTC_SetDate>:
  __HAL_LOCK(hrtc);
9002bb50:	f890 3020 	ldrb.w	r3, [r0, #32]
9002bb54:	2b01      	cmp	r3, #1
9002bb56:	d06f      	beq.n	9002bc38 <HAL_RTC_SetDate+0xe8>
  hrtc->State = HAL_RTC_STATE_BUSY;
9002bb58:	2302      	movs	r3, #2
{
9002bb5a:	b570      	push	{r4, r5, r6, lr}
9002bb5c:	4606      	mov	r6, r0
  __HAL_LOCK(hrtc);
9002bb5e:	2001      	movs	r0, #1
  hrtc->State = HAL_RTC_STATE_BUSY;
9002bb60:	f886 3021 	strb.w	r3, [r6, #33]	; 0x21
  __HAL_LOCK(hrtc);
9002bb64:	f886 0020 	strb.w	r0, [r6, #32]
  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
9002bb68:	b1d2      	cbz	r2, 9002bba0 <HAL_RTC_SetDate+0x50>
                  (((uint32_t)sDate->Month)   << RTC_DR_MU_Pos) | \
9002bb6a:	784c      	ldrb	r4, [r1, #1]
    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
9002bb6c:	78c8      	ldrb	r0, [r1, #3]
                  (((uint32_t)sDate->Month)   << RTC_DR_MU_Pos) | \
9002bb6e:	0224      	lsls	r4, r4, #8
                  (((uint32_t)sDate->Date)    << RTC_DR_DU_Pos) | \
9002bb70:	788a      	ldrb	r2, [r1, #2]
                  (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
9002bb72:	780b      	ldrb	r3, [r1, #0]
    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
9002bb74:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
                  (((uint32_t)sDate->Month)   << RTC_DR_MU_Pos) | \
9002bb78:	4314      	orrs	r4, r2
    datetmpreg = ((((uint32_t)sDate->Year)    << RTC_DR_YU_Pos) | \
9002bb7a:	ea44 3443 	orr.w	r4, r4, r3, lsl #13
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002bb7e:	6833      	ldr	r3, [r6, #0]
9002bb80:	21ca      	movs	r1, #202	; 0xca
9002bb82:	2253      	movs	r2, #83	; 0x53
  status = RTC_EnterInitMode(hrtc);
9002bb84:	4630      	mov	r0, r6
  __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
9002bb86:	6259      	str	r1, [r3, #36]	; 0x24
9002bb88:	625a      	str	r2, [r3, #36]	; 0x24
  status = RTC_EnterInitMode(hrtc);
9002bb8a:	f7ff fecd 	bl	9002b928 <RTC_EnterInitMode>
  if (status == HAL_OK)
9002bb8e:	2800      	cmp	r0, #0
9002bb90:	d03b      	beq.n	9002bc0a <HAL_RTC_SetDate+0xba>
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002bb92:	6833      	ldr	r3, [r6, #0]
9002bb94:	22ff      	movs	r2, #255	; 0xff
9002bb96:	625a      	str	r2, [r3, #36]	; 0x24
  __HAL_UNLOCK(hrtc);
9002bb98:	2300      	movs	r3, #0
9002bb9a:	f886 3020 	strb.w	r3, [r6, #32]
}
9002bb9e:	bd70      	pop	{r4, r5, r6, pc}
  if((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
9002bba0:	784b      	ldrb	r3, [r1, #1]
9002bba2:	06d8      	lsls	r0, r3, #27
9002bba4:	d544      	bpl.n	9002bc30 <HAL_RTC_SetDate+0xe0>
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
9002bba6:	f023 0310 	bic.w	r3, r3, #16
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
9002bbaa:	78cc      	ldrb	r4, [r1, #3]
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
9002bbac:	330a      	adds	r3, #10
  while (bcdlow >= 10U)
9002bbae:	2c09      	cmp	r4, #9
    sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
9002bbb0:	b2db      	uxtb	r3, r3
9002bbb2:	704b      	strb	r3, [r1, #1]
  while (bcdlow >= 10U)
9002bbb4:	d942      	bls.n	9002bc3c <HAL_RTC_SetDate+0xec>
  uint32_t bcdhigh = 0U;
9002bbb6:	2000      	movs	r0, #0
    bcdlow -= 10U;
9002bbb8:	3c0a      	subs	r4, #10
    bcdhigh++;
9002bbba:	3001      	adds	r0, #1
    bcdlow -= 10U;
9002bbbc:	b2e4      	uxtb	r4, r4
  while (bcdlow >= 10U)
9002bbbe:	2c09      	cmp	r4, #9
9002bbc0:	d8fa      	bhi.n	9002bbb8 <HAL_RTC_SetDate+0x68>
9002bbc2:	ea44 1400 	orr.w	r4, r4, r0, lsl #4
9002bbc6:	b2e4      	uxtb	r4, r4
9002bbc8:	2b09      	cmp	r3, #9
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
9002bbca:	ea4f 4504 	mov.w	r5, r4, lsl #16
  while (bcdlow >= 10U)
9002bbce:	d908      	bls.n	9002bbe2 <HAL_RTC_SetDate+0x92>
  uint32_t bcdhigh = 0U;
9002bbd0:	2000      	movs	r0, #0
    bcdlow -= 10U;
9002bbd2:	3b0a      	subs	r3, #10
    bcdhigh++;
9002bbd4:	3001      	adds	r0, #1
    bcdlow -= 10U;
9002bbd6:	b2db      	uxtb	r3, r3
  while (bcdlow >= 10U)
9002bbd8:	2b09      	cmp	r3, #9
9002bbda:	d8fa      	bhi.n	9002bbd2 <HAL_RTC_SetDate+0x82>
9002bbdc:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
9002bbe0:	b2db      	uxtb	r3, r3
                  ((uint32_t)RTC_ByteToBcd2(sDate->Date)  << RTC_DR_DU_Pos) | \
9002bbe2:	7888      	ldrb	r0, [r1, #2]
                  ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
9002bbe4:	021b      	lsls	r3, r3, #8
  while (bcdlow >= 10U)
9002bbe6:	2809      	cmp	r0, #9
9002bbe8:	d908      	bls.n	9002bbfc <HAL_RTC_SetDate+0xac>
    bcdlow -= 10U;
9002bbea:	f1a0 040a 	sub.w	r4, r0, #10
    bcdhigh++;
9002bbee:	3201      	adds	r2, #1
    bcdlow -= 10U;
9002bbf0:	b2e0      	uxtb	r0, r4
  while (bcdlow >= 10U)
9002bbf2:	2809      	cmp	r0, #9
9002bbf4:	d8f9      	bhi.n	9002bbea <HAL_RTC_SetDate+0x9a>
9002bbf6:	ea40 1402 	orr.w	r4, r0, r2, lsl #4
9002bbfa:	b2e0      	uxtb	r0, r4
                  ((uint32_t)sDate->WeekDay               << RTC_DR_WDU_Pos));
9002bbfc:	780c      	ldrb	r4, [r1, #0]
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
9002bbfe:	ea45 3444 	orr.w	r4, r5, r4, lsl #13
9002bc02:	4323      	orrs	r3, r4
9002bc04:	ea43 0400 	orr.w	r4, r3, r0
9002bc08:	e7b9      	b.n	9002bb7e <HAL_RTC_SetDate+0x2e>
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
9002bc0a:	4b0d      	ldr	r3, [pc, #52]	; (9002bc40 <HAL_RTC_SetDate+0xf0>)
    status = RTC_ExitInitMode(hrtc);
9002bc0c:	4630      	mov	r0, r6
    hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
9002bc0e:	6832      	ldr	r2, [r6, #0]
9002bc10:	4023      	ands	r3, r4
9002bc12:	6053      	str	r3, [r2, #4]
    status = RTC_ExitInitMode(hrtc);
9002bc14:	f7ff fea8 	bl	9002b968 <RTC_ExitInitMode>
  __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
9002bc18:	6833      	ldr	r3, [r6, #0]
9002bc1a:	22ff      	movs	r2, #255	; 0xff
9002bc1c:	625a      	str	r2, [r3, #36]	; 0x24
  if (status == HAL_OK)
9002bc1e:	2800      	cmp	r0, #0
9002bc20:	d1ba      	bne.n	9002bb98 <HAL_RTC_SetDate+0x48>
    hrtc->State = HAL_RTC_STATE_READY;
9002bc22:	2301      	movs	r3, #1
9002bc24:	f886 3021 	strb.w	r3, [r6, #33]	; 0x21
  __HAL_UNLOCK(hrtc);
9002bc28:	2300      	movs	r3, #0
9002bc2a:	f886 3020 	strb.w	r3, [r6, #32]
}
9002bc2e:	bd70      	pop	{r4, r5, r6, pc}
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
9002bc30:	78cc      	ldrb	r4, [r1, #3]
  while (bcdlow >= 10U)
9002bc32:	2c09      	cmp	r4, #9
9002bc34:	d8bf      	bhi.n	9002bbb6 <HAL_RTC_SetDate+0x66>
9002bc36:	e7c7      	b.n	9002bbc8 <HAL_RTC_SetDate+0x78>
  __HAL_LOCK(hrtc);
9002bc38:	2002      	movs	r0, #2
}
9002bc3a:	4770      	bx	lr
    datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year)  << RTC_DR_YU_Pos) | \
9002bc3c:	0425      	lsls	r5, r4, #16
  while (bcdlow >= 10U)
9002bc3e:	e7c7      	b.n	9002bbd0 <HAL_RTC_SetDate+0x80>
9002bc40:	00ffff3f 	.word	0x00ffff3f

9002bc44 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
9002bc44:	b5f0      	push	{r4, r5, r6, r7, lr}
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9002bc46:	6883      	ldr	r3, [r0, #8]
{
9002bc48:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9002bc4a:	49ca      	ldr	r1, [pc, #808]	; (9002bf74 <UART_SetConfig+0x330>)
{
9002bc4c:	b087      	sub	sp, #28

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9002bc4e:	68e7      	ldr	r7, [r4, #12]
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;

  if (!(UART_INSTANCE_LOWPOWER(huart)))
9002bc50:	4dc9      	ldr	r5, [pc, #804]	; (9002bf78 <UART_SetConfig+0x334>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9002bc52:	e9d0 2604 	ldrd	r2, r6, [r0, #16]
9002bc56:	431a      	orrs	r2, r3
  if (UART_INSTANCE_LOWPOWER(huart))
9002bc58:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9002bc5a:	69c0      	ldr	r0, [r0, #28]
9002bc5c:	4332      	orrs	r2, r6
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9002bc5e:	681e      	ldr	r6, [r3, #0]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9002bc60:	42ab      	cmp	r3, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9002bc62:	ea01 0106 	and.w	r1, r1, r6
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9002bc66:	ea42 0200 	orr.w	r2, r2, r0
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9002bc6a:	69a6      	ldr	r6, [r4, #24]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9002bc6c:	ea42 0201 	orr.w	r2, r2, r1
9002bc70:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9002bc72:	685a      	ldr	r2, [r3, #4]
9002bc74:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
9002bc78:	ea42 0207 	orr.w	r2, r2, r7
9002bc7c:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9002bc7e:	f000 80e1 	beq.w	9002be44 <UART_SetConfig+0x200>
  {
    tmpreg |= huart->Init.OneBitSampling;
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002bc82:	689d      	ldr	r5, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9002bc84:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002bc86:	49bd      	ldr	r1, [pc, #756]	; (9002bf7c <UART_SetConfig+0x338>)
    tmpreg |= huart->Init.OneBitSampling;
9002bc88:	4332      	orrs	r2, r6
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
9002bc8a:	4ebd      	ldr	r6, [pc, #756]	; (9002bf80 <UART_SetConfig+0x33c>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002bc8c:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9002bc8e:	6a65      	ldr	r5, [r4, #36]	; 0x24
  UART_GETCLOCKSOURCE(huart, clocksource);
9002bc90:	42b3      	cmp	r3, r6
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002bc92:	ea42 0201 	orr.w	r2, r2, r1
9002bc96:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9002bc98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9002bc9a:	f022 020f 	bic.w	r2, r2, #15
9002bc9e:	ea42 0205 	orr.w	r2, r2, r5
9002bca2:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9002bca4:	d023      	beq.n	9002bcee <UART_SetConfig+0xaa>
9002bca6:	4ab7      	ldr	r2, [pc, #732]	; (9002bf84 <UART_SetConfig+0x340>)
9002bca8:	4293      	cmp	r3, r2
9002bcaa:	d075      	beq.n	9002bd98 <UART_SetConfig+0x154>
9002bcac:	4ab6      	ldr	r2, [pc, #728]	; (9002bf88 <UART_SetConfig+0x344>)
9002bcae:	4293      	cmp	r3, r2
9002bcb0:	f000 81bf 	beq.w	9002c032 <UART_SetConfig+0x3ee>
9002bcb4:	4ab5      	ldr	r2, [pc, #724]	; (9002bf8c <UART_SetConfig+0x348>)
9002bcb6:	4293      	cmp	r3, r2
9002bcb8:	f000 81ec 	beq.w	9002c094 <UART_SetConfig+0x450>
9002bcbc:	4ab4      	ldr	r2, [pc, #720]	; (9002bf90 <UART_SetConfig+0x34c>)
9002bcbe:	4293      	cmp	r3, r2
9002bcc0:	f000 81a7 	beq.w	9002c012 <UART_SetConfig+0x3ce>
9002bcc4:	4ab3      	ldr	r2, [pc, #716]	; (9002bf94 <UART_SetConfig+0x350>)
9002bcc6:	4293      	cmp	r3, r2
9002bcc8:	f000 81ee 	beq.w	9002c0a8 <UART_SetConfig+0x464>
9002bccc:	4ab2      	ldr	r2, [pc, #712]	; (9002bf98 <UART_SetConfig+0x354>)
9002bcce:	4293      	cmp	r3, r2
9002bcd0:	f000 823e 	beq.w	9002c150 <UART_SetConfig+0x50c>
9002bcd4:	4ab1      	ldr	r2, [pc, #708]	; (9002bf9c <UART_SetConfig+0x358>)
9002bcd6:	4293      	cmp	r3, r2
9002bcd8:	f000 8230 	beq.w	9002c13c <UART_SetConfig+0x4f8>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
        break;
      default:
        pclk = 0U;
        ret = HAL_ERROR;
9002bcdc:	2001      	movs	r0, #1
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;
9002bcde:	f04f 1201 	mov.w	r2, #65537	; 0x10001

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
9002bce2:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9002bce4:	66a2      	str	r2, [r4, #104]	; 0x68
  huart->TxISR = NULL;
9002bce6:	e9c4 331c 	strd	r3, r3, [r4, #112]	; 0x70

  return ret;
}
9002bcea:	b007      	add	sp, #28
9002bcec:	bdf0      	pop	{r4, r5, r6, r7, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9002bcee:	4bac      	ldr	r3, [pc, #688]	; (9002bfa0 <UART_SetConfig+0x35c>)
9002bcf0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002bcf2:	f003 0338 	and.w	r3, r3, #56	; 0x38
9002bcf6:	2b28      	cmp	r3, #40	; 0x28
9002bcf8:	d8f0      	bhi.n	9002bcdc <UART_SetConfig+0x98>
9002bcfa:	4aaa      	ldr	r2, [pc, #680]	; (9002bfa4 <UART_SetConfig+0x360>)
9002bcfc:	5cd3      	ldrb	r3, [r2, r3]
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9002bcfe:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9002bd02:	d054      	beq.n	9002bdae <UART_SetConfig+0x16a>
    switch (clocksource)
9002bd04:	2b20      	cmp	r3, #32
9002bd06:	f200 818e 	bhi.w	9002c026 <UART_SetConfig+0x3e2>
9002bd0a:	2b20      	cmp	r3, #32
9002bd0c:	d8e6      	bhi.n	9002bcdc <UART_SetConfig+0x98>
9002bd0e:	a201      	add	r2, pc, #4	; (adr r2, 9002bd14 <UART_SetConfig+0xd0>)
9002bd10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9002bd14:	9002bf6d 	.word	0x9002bf6d
9002bd18:	9002bf67 	.word	0x9002bf67
9002bd1c:	9002bcdd 	.word	0x9002bcdd
9002bd20:	9002bcdd 	.word	0x9002bcdd
9002bd24:	9002bf57 	.word	0x9002bf57
9002bd28:	9002bcdd 	.word	0x9002bcdd
9002bd2c:	9002bcdd 	.word	0x9002bcdd
9002bd30:	9002bcdd 	.word	0x9002bcdd
9002bd34:	9002bf49 	.word	0x9002bf49
9002bd38:	9002bcdd 	.word	0x9002bcdd
9002bd3c:	9002bcdd 	.word	0x9002bcdd
9002bd40:	9002bcdd 	.word	0x9002bcdd
9002bd44:	9002bcdd 	.word	0x9002bcdd
9002bd48:	9002bcdd 	.word	0x9002bcdd
9002bd4c:	9002bcdd 	.word	0x9002bcdd
9002bd50:	9002bcdd 	.word	0x9002bcdd
9002bd54:	9002bf33 	.word	0x9002bf33
9002bd58:	9002bcdd 	.word	0x9002bcdd
9002bd5c:	9002bcdd 	.word	0x9002bcdd
9002bd60:	9002bcdd 	.word	0x9002bcdd
9002bd64:	9002bcdd 	.word	0x9002bcdd
9002bd68:	9002bcdd 	.word	0x9002bcdd
9002bd6c:	9002bcdd 	.word	0x9002bcdd
9002bd70:	9002bcdd 	.word	0x9002bcdd
9002bd74:	9002bcdd 	.word	0x9002bcdd
9002bd78:	9002bcdd 	.word	0x9002bcdd
9002bd7c:	9002bcdd 	.word	0x9002bcdd
9002bd80:	9002bcdd 	.word	0x9002bcdd
9002bd84:	9002bcdd 	.word	0x9002bcdd
9002bd88:	9002bcdd 	.word	0x9002bcdd
9002bd8c:	9002bcdd 	.word	0x9002bcdd
9002bd90:	9002bcdd 	.word	0x9002bcdd
9002bd94:	9002bf05 	.word	0x9002bf05
  UART_GETCLOCKSOURCE(huart, clocksource);
9002bd98:	4b81      	ldr	r3, [pc, #516]	; (9002bfa0 <UART_SetConfig+0x35c>)
9002bd9a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002bd9c:	f003 0307 	and.w	r3, r3, #7
9002bda0:	2b05      	cmp	r3, #5
9002bda2:	d89b      	bhi.n	9002bcdc <UART_SetConfig+0x98>
9002bda4:	4a80      	ldr	r2, [pc, #512]	; (9002bfa8 <UART_SetConfig+0x364>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9002bda6:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9002bdaa:	5cd3      	ldrb	r3, [r2, r3]
9002bdac:	d1aa      	bne.n	9002bd04 <UART_SetConfig+0xc0>
    switch (clocksource)
9002bdae:	2b20      	cmp	r3, #32
9002bdb0:	f200 816d 	bhi.w	9002c08e <UART_SetConfig+0x44a>
9002bdb4:	2b20      	cmp	r3, #32
9002bdb6:	d891      	bhi.n	9002bcdc <UART_SetConfig+0x98>
9002bdb8:	a201      	add	r2, pc, #4	; (adr r2, 9002bdc0 <UART_SetConfig+0x17c>)
9002bdba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9002bdbe:	bf00      	nop
9002bdc0:	9002c133 	.word	0x9002c133
9002bdc4:	9002c123 	.word	0x9002c123
9002bdc8:	9002bcdd 	.word	0x9002bcdd
9002bdcc:	9002bcdd 	.word	0x9002bcdd
9002bdd0:	9002c129 	.word	0x9002c129
9002bdd4:	9002bcdd 	.word	0x9002bcdd
9002bdd8:	9002bcdd 	.word	0x9002bcdd
9002bddc:	9002bcdd 	.word	0x9002bcdd
9002bde0:	9002c111 	.word	0x9002c111
9002bde4:	9002bcdd 	.word	0x9002bcdd
9002bde8:	9002bcdd 	.word	0x9002bcdd
9002bdec:	9002bcdd 	.word	0x9002bcdd
9002bdf0:	9002bcdd 	.word	0x9002bcdd
9002bdf4:	9002bcdd 	.word	0x9002bcdd
9002bdf8:	9002bcdd 	.word	0x9002bcdd
9002bdfc:	9002bcdd 	.word	0x9002bcdd
9002be00:	9002c0fd 	.word	0x9002c0fd
9002be04:	9002bcdd 	.word	0x9002bcdd
9002be08:	9002bcdd 	.word	0x9002bcdd
9002be0c:	9002bcdd 	.word	0x9002bcdd
9002be10:	9002bcdd 	.word	0x9002bcdd
9002be14:	9002bcdd 	.word	0x9002bcdd
9002be18:	9002bcdd 	.word	0x9002bcdd
9002be1c:	9002bcdd 	.word	0x9002bcdd
9002be20:	9002bcdd 	.word	0x9002bcdd
9002be24:	9002bcdd 	.word	0x9002bcdd
9002be28:	9002bcdd 	.word	0x9002bcdd
9002be2c:	9002bcdd 	.word	0x9002bcdd
9002be30:	9002bcdd 	.word	0x9002bcdd
9002be34:	9002bcdd 	.word	0x9002bcdd
9002be38:	9002bcdd 	.word	0x9002bcdd
9002be3c:	9002bcdd 	.word	0x9002bcdd
9002be40:	9002c053 	.word	0x9002c053
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002be44:	6898      	ldr	r0, [r3, #8]
9002be46:	4a4d      	ldr	r2, [pc, #308]	; (9002bf7c <UART_SetConfig+0x338>)
  UART_GETCLOCKSOURCE(huart, clocksource);
9002be48:	4955      	ldr	r1, [pc, #340]	; (9002bfa0 <UART_SetConfig+0x35c>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9002be4a:	4002      	ands	r2, r0
9002be4c:	4332      	orrs	r2, r6
9002be4e:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9002be50:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9002be52:	6a60      	ldr	r0, [r4, #36]	; 0x24
9002be54:	f022 020f 	bic.w	r2, r2, #15
9002be58:	4302      	orrs	r2, r0
9002be5a:	62da      	str	r2, [r3, #44]	; 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9002be5c:	6d8b      	ldr	r3, [r1, #88]	; 0x58
9002be5e:	f003 0307 	and.w	r3, r3, #7
9002be62:	2b05      	cmp	r3, #5
9002be64:	f63f af3a 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002be68:	4a50      	ldr	r2, [pc, #320]	; (9002bfac <UART_SetConfig+0x368>)
9002be6a:	5cd3      	ldrb	r3, [r2, r3]
    switch (clocksource)
9002be6c:	2b20      	cmp	r3, #32
9002be6e:	f200 80ea 	bhi.w	9002c046 <UART_SetConfig+0x402>
9002be72:	2b01      	cmp	r3, #1
9002be74:	f67f af32 	bls.w	9002bcdc <UART_SetConfig+0x98>
9002be78:	3b02      	subs	r3, #2
9002be7a:	2b1e      	cmp	r3, #30
9002be7c:	f63f af2e 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002be80:	a201      	add	r2, pc, #4	; (adr r2, 9002be88 <UART_SetConfig+0x244>)
9002be82:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9002be86:	bf00      	nop
9002be88:	9002c0f1 	.word	0x9002c0f1
9002be8c:	9002bcdd 	.word	0x9002bcdd
9002be90:	9002c0e1 	.word	0x9002c0e1
9002be94:	9002bcdd 	.word	0x9002bcdd
9002be98:	9002bcdd 	.word	0x9002bcdd
9002be9c:	9002bcdd 	.word	0x9002bcdd
9002bea0:	9002c0d1 	.word	0x9002c0d1
9002bea4:	9002bcdd 	.word	0x9002bcdd
9002bea8:	9002bcdd 	.word	0x9002bcdd
9002beac:	9002bcdd 	.word	0x9002bcdd
9002beb0:	9002bcdd 	.word	0x9002bcdd
9002beb4:	9002bcdd 	.word	0x9002bcdd
9002beb8:	9002bcdd 	.word	0x9002bcdd
9002bebc:	9002bcdd 	.word	0x9002bcdd
9002bec0:	9002c0bd 	.word	0x9002c0bd
9002bec4:	9002bcdd 	.word	0x9002bcdd
9002bec8:	9002bcdd 	.word	0x9002bcdd
9002becc:	9002bcdd 	.word	0x9002bcdd
9002bed0:	9002bcdd 	.word	0x9002bcdd
9002bed4:	9002bcdd 	.word	0x9002bcdd
9002bed8:	9002bcdd 	.word	0x9002bcdd
9002bedc:	9002bcdd 	.word	0x9002bcdd
9002bee0:	9002bcdd 	.word	0x9002bcdd
9002bee4:	9002bcdd 	.word	0x9002bcdd
9002bee8:	9002bcdd 	.word	0x9002bcdd
9002beec:	9002bcdd 	.word	0x9002bcdd
9002bef0:	9002bcdd 	.word	0x9002bcdd
9002bef4:	9002bcdd 	.word	0x9002bcdd
9002bef8:	9002bcdd 	.word	0x9002bcdd
9002befc:	9002bcdd 	.word	0x9002bcdd
9002bf00:	9002bfbd 	.word	0x9002bfbd
        pclk = (uint32_t) CSI_VALUE;
9002bf04:	482a      	ldr	r0, [pc, #168]	; (9002bfb0 <UART_SetConfig+0x36c>)
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002bf06:	4b2b      	ldr	r3, [pc, #172]	; (9002bfb4 <UART_SetConfig+0x370>)
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9002bf08:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002bf0c:	6862      	ldr	r2, [r4, #4]
9002bf0e:	f833 3015 	ldrh.w	r3, [r3, r5, lsl #1]
9002bf12:	fbb0 f3f3 	udiv	r3, r0, r3
9002bf16:	eb03 0352 	add.w	r3, r3, r2, lsr #1
9002bf1a:	fbb3 f3f2 	udiv	r3, r3, r2
9002bf1e:	b29b      	uxth	r3, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9002bf20:	f1a3 0210 	sub.w	r2, r3, #16
9002bf24:	428a      	cmp	r2, r1
9002bf26:	f63f aed9 	bhi.w	9002bcdc <UART_SetConfig+0x98>
        huart->Instance->BRR = usartdiv;
9002bf2a:	6822      	ldr	r2, [r4, #0]
9002bf2c:	2000      	movs	r0, #0
9002bf2e:	60d3      	str	r3, [r2, #12]
9002bf30:	e6d5      	b.n	9002bcde <UART_SetConfig+0x9a>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002bf32:	4b1b      	ldr	r3, [pc, #108]	; (9002bfa0 <UART_SetConfig+0x35c>)
9002bf34:	681a      	ldr	r2, [r3, #0]
9002bf36:	0692      	lsls	r2, r2, #26
9002bf38:	f140 80fe 	bpl.w	9002c138 <UART_SetConfig+0x4f4>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9002bf3c:	681b      	ldr	r3, [r3, #0]
9002bf3e:	481e      	ldr	r0, [pc, #120]	; (9002bfb8 <UART_SetConfig+0x374>)
9002bf40:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9002bf44:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9002bf46:	e7de      	b.n	9002bf06 <UART_SetConfig+0x2c2>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9002bf48:	a803      	add	r0, sp, #12
9002bf4a:	f7ff fbc1 	bl	9002b6d0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9002bf4e:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9002bf50:	b938      	cbnz	r0, 9002bf62 <UART_SetConfig+0x31e>
          pclk = (uint32_t) HSI_VALUE;
9002bf52:	2000      	movs	r0, #0
9002bf54:	e6c3      	b.n	9002bcde <UART_SetConfig+0x9a>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9002bf56:	4668      	mov	r0, sp
9002bf58:	f7ff fb0a 	bl	9002b570 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9002bf5c:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9002bf5e:	2800      	cmp	r0, #0
9002bf60:	d0f7      	beq.n	9002bf52 <UART_SetConfig+0x30e>
9002bf62:	6a65      	ldr	r5, [r4, #36]	; 0x24
9002bf64:	e7cf      	b.n	9002bf06 <UART_SetConfig+0x2c2>
        pclk = HAL_RCC_GetPCLK2Freq();
9002bf66:	f7fe fc91 	bl	9002a88c <HAL_RCC_GetPCLK2Freq>
        break;
9002bf6a:	e7f1      	b.n	9002bf50 <UART_SetConfig+0x30c>
        pclk = HAL_RCC_GetPCLK1Freq();
9002bf6c:	f7fe fc7c 	bl	9002a868 <HAL_RCC_GetPCLK1Freq>
        break;
9002bf70:	e7ee      	b.n	9002bf50 <UART_SetConfig+0x30c>
9002bf72:	bf00      	nop
9002bf74:	cfff69f3 	.word	0xcfff69f3
9002bf78:	58000c00 	.word	0x58000c00
9002bf7c:	11fff4ff 	.word	0x11fff4ff
9002bf80:	40011000 	.word	0x40011000
9002bf84:	40004400 	.word	0x40004400
9002bf88:	40004800 	.word	0x40004800
9002bf8c:	40004c00 	.word	0x40004c00
9002bf90:	40005000 	.word	0x40005000
9002bf94:	40011400 	.word	0x40011400
9002bf98:	40007800 	.word	0x40007800
9002bf9c:	40007c00 	.word	0x40007c00
9002bfa0:	58024400 	.word	0x58024400
9002bfa4:	900348ec 	.word	0x900348ec
9002bfa8:	90034918 	.word	0x90034918
9002bfac:	90034920 	.word	0x90034920
9002bfb0:	003d0900 	.word	0x003d0900
9002bfb4:	90034928 	.word	0x90034928
9002bfb8:	03d09000 	.word	0x03d09000
        pclk = (uint32_t) CSI_VALUE;
9002bfbc:	486b      	ldr	r0, [pc, #428]	; (9002c16c <UART_SetConfig+0x528>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9002bfbe:	4b6c      	ldr	r3, [pc, #432]	; (9002c170 <UART_SetConfig+0x52c>)
9002bfc0:	6a62      	ldr	r2, [r4, #36]	; 0x24
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9002bfc2:	6865      	ldr	r5, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9002bfc4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9002bfc8:	eb05 0145 	add.w	r1, r5, r5, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9002bfcc:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9002bfd0:	4299      	cmp	r1, r3
9002bfd2:	f63f ae83 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002bfd6:	ebb3 3f05 	cmp.w	r3, r5, lsl #12
9002bfda:	f63f ae7f 	bhi.w	9002bcdc <UART_SetConfig+0x98>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002bfde:	2300      	movs	r3, #0
9002bfe0:	2100      	movs	r1, #0
9002bfe2:	f7f5 ff79 	bl	90021ed8 <__aeabi_uldivmod>
9002bfe6:	462a      	mov	r2, r5
9002bfe8:	ea4f 0c55 	mov.w	ip, r5, lsr #1
9002bfec:	2300      	movs	r3, #0
9002bfee:	020f      	lsls	r7, r1, #8
9002bff0:	0206      	lsls	r6, r0, #8
9002bff2:	ea47 6710 	orr.w	r7, r7, r0, lsr #24
9002bff6:	eb16 000c 	adds.w	r0, r6, ip
9002bffa:	f147 0100 	adc.w	r1, r7, #0
9002bffe:	f7f5 ff6b 	bl	90021ed8 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9002c002:	4a5c      	ldr	r2, [pc, #368]	; (9002c174 <UART_SetConfig+0x530>)
9002c004:	f5a0 7140 	sub.w	r1, r0, #768	; 0x300
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002c008:	4603      	mov	r3, r0
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9002c00a:	4291      	cmp	r1, r2
9002c00c:	f63f ae66 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c010:	e78b      	b.n	9002bf2a <UART_SetConfig+0x2e6>
  UART_GETCLOCKSOURCE(huart, clocksource);
9002c012:	4b59      	ldr	r3, [pc, #356]	; (9002c178 <UART_SetConfig+0x534>)
9002c014:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c016:	f003 0307 	and.w	r3, r3, #7
9002c01a:	2b05      	cmp	r3, #5
9002c01c:	f63f ae5e 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c020:	4a56      	ldr	r2, [pc, #344]	; (9002c17c <UART_SetConfig+0x538>)
9002c022:	5cd3      	ldrb	r3, [r2, r3]
9002c024:	e66b      	b.n	9002bcfe <UART_SetConfig+0xba>
    switch (clocksource)
9002c026:	2b40      	cmp	r3, #64	; 0x40
9002c028:	f47f ae58 	bne.w	9002bcdc <UART_SetConfig+0x98>
9002c02c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
9002c030:	e769      	b.n	9002bf06 <UART_SetConfig+0x2c2>
  UART_GETCLOCKSOURCE(huart, clocksource);
9002c032:	4b51      	ldr	r3, [pc, #324]	; (9002c178 <UART_SetConfig+0x534>)
9002c034:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c036:	f003 0307 	and.w	r3, r3, #7
9002c03a:	2b05      	cmp	r3, #5
9002c03c:	f63f ae4e 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c040:	4a4f      	ldr	r2, [pc, #316]	; (9002c180 <UART_SetConfig+0x53c>)
9002c042:	5cd3      	ldrb	r3, [r2, r3]
9002c044:	e65b      	b.n	9002bcfe <UART_SetConfig+0xba>
    switch (clocksource)
9002c046:	2b40      	cmp	r3, #64	; 0x40
9002c048:	f47f ae48 	bne.w	9002bcdc <UART_SetConfig+0x98>
9002c04c:	f44f 4000 	mov.w	r0, #32768	; 0x8000
9002c050:	e7b5      	b.n	9002bfbe <UART_SetConfig+0x37a>
        pclk = (uint32_t) CSI_VALUE;
9002c052:	4846      	ldr	r0, [pc, #280]	; (9002c16c <UART_SetConfig+0x528>)
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002c054:	4b46      	ldr	r3, [pc, #280]	; (9002c170 <UART_SetConfig+0x52c>)
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9002c056:	f64f 71ef 	movw	r1, #65519	; 0xffef
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9002c05a:	6862      	ldr	r2, [r4, #4]
9002c05c:	f833 5015 	ldrh.w	r5, [r3, r5, lsl #1]
9002c060:	0853      	lsrs	r3, r2, #1
9002c062:	fbb0 f0f5 	udiv	r0, r0, r5
9002c066:	eb03 0040 	add.w	r0, r3, r0, lsl #1
9002c06a:	fbb0 f0f2 	udiv	r0, r0, r2
9002c06e:	b282      	uxth	r2, r0
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9002c070:	f1a2 0310 	sub.w	r3, r2, #16
9002c074:	428b      	cmp	r3, r1
9002c076:	f63f ae31 	bhi.w	9002bcdc <UART_SetConfig+0x98>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9002c07a:	f020 030f 	bic.w	r3, r0, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9002c07e:	f3c2 0242 	ubfx	r2, r2, #1, #3
        huart->Instance->BRR = brrtemp;
9002c082:	6821      	ldr	r1, [r4, #0]
9002c084:	2000      	movs	r0, #0
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9002c086:	b29b      	uxth	r3, r3
        huart->Instance->BRR = brrtemp;
9002c088:	4313      	orrs	r3, r2
9002c08a:	60cb      	str	r3, [r1, #12]
9002c08c:	e627      	b.n	9002bcde <UART_SetConfig+0x9a>
    switch (clocksource)
9002c08e:	2b40      	cmp	r3, #64	; 0x40
9002c090:	d0e0      	beq.n	9002c054 <UART_SetConfig+0x410>
9002c092:	e623      	b.n	9002bcdc <UART_SetConfig+0x98>
  UART_GETCLOCKSOURCE(huart, clocksource);
9002c094:	4b38      	ldr	r3, [pc, #224]	; (9002c178 <UART_SetConfig+0x534>)
9002c096:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c098:	f003 0307 	and.w	r3, r3, #7
9002c09c:	2b05      	cmp	r3, #5
9002c09e:	f63f ae1d 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c0a2:	4a38      	ldr	r2, [pc, #224]	; (9002c184 <UART_SetConfig+0x540>)
9002c0a4:	5cd3      	ldrb	r3, [r2, r3]
9002c0a6:	e62a      	b.n	9002bcfe <UART_SetConfig+0xba>
9002c0a8:	4b33      	ldr	r3, [pc, #204]	; (9002c178 <UART_SetConfig+0x534>)
9002c0aa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c0ac:	f003 0338 	and.w	r3, r3, #56	; 0x38
9002c0b0:	2b28      	cmp	r3, #40	; 0x28
9002c0b2:	f63f ae13 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c0b6:	4a34      	ldr	r2, [pc, #208]	; (9002c188 <UART_SetConfig+0x544>)
9002c0b8:	5cd3      	ldrb	r3, [r2, r3]
9002c0ba:	e620      	b.n	9002bcfe <UART_SetConfig+0xba>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002c0bc:	4b2e      	ldr	r3, [pc, #184]	; (9002c178 <UART_SetConfig+0x534>)
9002c0be:	681a      	ldr	r2, [r3, #0]
9002c0c0:	0690      	lsls	r0, r2, #26
9002c0c2:	d54f      	bpl.n	9002c164 <UART_SetConfig+0x520>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9002c0c4:	681b      	ldr	r3, [r3, #0]
9002c0c6:	4831      	ldr	r0, [pc, #196]	; (9002c18c <UART_SetConfig+0x548>)
9002c0c8:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9002c0cc:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9002c0ce:	e776      	b.n	9002bfbe <UART_SetConfig+0x37a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9002c0d0:	a803      	add	r0, sp, #12
9002c0d2:	f7ff fafd 	bl	9002b6d0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9002c0d6:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9002c0d8:	2800      	cmp	r0, #0
9002c0da:	f43f af3a 	beq.w	9002bf52 <UART_SetConfig+0x30e>
9002c0de:	e76e      	b.n	9002bfbe <UART_SetConfig+0x37a>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9002c0e0:	4668      	mov	r0, sp
9002c0e2:	f7ff fa45 	bl	9002b570 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9002c0e6:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9002c0e8:	2800      	cmp	r0, #0
9002c0ea:	f43f af32 	beq.w	9002bf52 <UART_SetConfig+0x30e>
9002c0ee:	e766      	b.n	9002bfbe <UART_SetConfig+0x37a>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9002c0f0:	f7ff fa2c 	bl	9002b54c <HAL_RCCEx_GetD3PCLK1Freq>
    if (pclk != 0U)
9002c0f4:	2800      	cmp	r0, #0
9002c0f6:	f43f af2c 	beq.w	9002bf52 <UART_SetConfig+0x30e>
9002c0fa:	e760      	b.n	9002bfbe <UART_SetConfig+0x37a>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9002c0fc:	4b1e      	ldr	r3, [pc, #120]	; (9002c178 <UART_SetConfig+0x534>)
9002c0fe:	681a      	ldr	r2, [r3, #0]
9002c100:	0691      	lsls	r1, r2, #26
9002c102:	d531      	bpl.n	9002c168 <UART_SetConfig+0x524>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9002c104:	681b      	ldr	r3, [r3, #0]
9002c106:	4821      	ldr	r0, [pc, #132]	; (9002c18c <UART_SetConfig+0x548>)
9002c108:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9002c10c:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9002c10e:	e7a1      	b.n	9002c054 <UART_SetConfig+0x410>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9002c110:	a803      	add	r0, sp, #12
9002c112:	f7ff fadd 	bl	9002b6d0 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9002c116:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9002c118:	2800      	cmp	r0, #0
9002c11a:	f43f af1a 	beq.w	9002bf52 <UART_SetConfig+0x30e>
9002c11e:	6a65      	ldr	r5, [r4, #36]	; 0x24
9002c120:	e798      	b.n	9002c054 <UART_SetConfig+0x410>
        pclk = HAL_RCC_GetPCLK2Freq();
9002c122:	f7fe fbb3 	bl	9002a88c <HAL_RCC_GetPCLK2Freq>
        break;
9002c126:	e7f7      	b.n	9002c118 <UART_SetConfig+0x4d4>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9002c128:	4668      	mov	r0, sp
9002c12a:	f7ff fa21 	bl	9002b570 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9002c12e:	9801      	ldr	r0, [sp, #4]
        break;
9002c130:	e7f2      	b.n	9002c118 <UART_SetConfig+0x4d4>
        pclk = HAL_RCC_GetPCLK1Freq();
9002c132:	f7fe fb99 	bl	9002a868 <HAL_RCC_GetPCLK1Freq>
        break;
9002c136:	e7ef      	b.n	9002c118 <UART_SetConfig+0x4d4>
          pclk = (uint32_t) HSI_VALUE;
9002c138:	4814      	ldr	r0, [pc, #80]	; (9002c18c <UART_SetConfig+0x548>)
9002c13a:	e6e4      	b.n	9002bf06 <UART_SetConfig+0x2c2>
  UART_GETCLOCKSOURCE(huart, clocksource);
9002c13c:	4b0e      	ldr	r3, [pc, #56]	; (9002c178 <UART_SetConfig+0x534>)
9002c13e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c140:	f003 0307 	and.w	r3, r3, #7
9002c144:	2b05      	cmp	r3, #5
9002c146:	f63f adc9 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c14a:	4a11      	ldr	r2, [pc, #68]	; (9002c190 <UART_SetConfig+0x54c>)
9002c14c:	5cd3      	ldrb	r3, [r2, r3]
9002c14e:	e5d6      	b.n	9002bcfe <UART_SetConfig+0xba>
9002c150:	4b09      	ldr	r3, [pc, #36]	; (9002c178 <UART_SetConfig+0x534>)
9002c152:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002c154:	f003 0307 	and.w	r3, r3, #7
9002c158:	2b05      	cmp	r3, #5
9002c15a:	f63f adbf 	bhi.w	9002bcdc <UART_SetConfig+0x98>
9002c15e:	4a0d      	ldr	r2, [pc, #52]	; (9002c194 <UART_SetConfig+0x550>)
9002c160:	5cd3      	ldrb	r3, [r2, r3]
9002c162:	e5cc      	b.n	9002bcfe <UART_SetConfig+0xba>
          pclk = (uint32_t) HSI_VALUE;
9002c164:	4809      	ldr	r0, [pc, #36]	; (9002c18c <UART_SetConfig+0x548>)
9002c166:	e72a      	b.n	9002bfbe <UART_SetConfig+0x37a>
          pclk = (uint32_t) HSI_VALUE;
9002c168:	4808      	ldr	r0, [pc, #32]	; (9002c18c <UART_SetConfig+0x548>)
9002c16a:	e773      	b.n	9002c054 <UART_SetConfig+0x410>
9002c16c:	003d0900 	.word	0x003d0900
9002c170:	90034928 	.word	0x90034928
9002c174:	000ffcff 	.word	0x000ffcff
9002c178:	58024400 	.word	0x58024400
9002c17c:	90034918 	.word	0x90034918
9002c180:	90034918 	.word	0x90034918
9002c184:	90034918 	.word	0x90034918
9002c188:	900348ec 	.word	0x900348ec
9002c18c:	03d09000 	.word	0x03d09000
9002c190:	90034918 	.word	0x90034918
9002c194:	90034918 	.word	0x90034918

9002c198 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9002c198:	6a83      	ldr	r3, [r0, #40]	; 0x28
9002c19a:	07da      	lsls	r2, r3, #31
{
9002c19c:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9002c19e:	d506      	bpl.n	9002c1ae <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9002c1a0:	6801      	ldr	r1, [r0, #0]
9002c1a2:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9002c1a4:	684a      	ldr	r2, [r1, #4]
9002c1a6:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
9002c1aa:	4322      	orrs	r2, r4
9002c1ac:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9002c1ae:	079c      	lsls	r4, r3, #30
9002c1b0:	d506      	bpl.n	9002c1c0 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9002c1b2:	6801      	ldr	r1, [r0, #0]
9002c1b4:	6b04      	ldr	r4, [r0, #48]	; 0x30
9002c1b6:	684a      	ldr	r2, [r1, #4]
9002c1b8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9002c1bc:	4322      	orrs	r2, r4
9002c1be:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9002c1c0:	0759      	lsls	r1, r3, #29
9002c1c2:	d506      	bpl.n	9002c1d2 <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9002c1c4:	6801      	ldr	r1, [r0, #0]
9002c1c6:	6b44      	ldr	r4, [r0, #52]	; 0x34
9002c1c8:	684a      	ldr	r2, [r1, #4]
9002c1ca:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9002c1ce:	4322      	orrs	r2, r4
9002c1d0:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9002c1d2:	071a      	lsls	r2, r3, #28
9002c1d4:	d506      	bpl.n	9002c1e4 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9002c1d6:	6801      	ldr	r1, [r0, #0]
9002c1d8:	6b84      	ldr	r4, [r0, #56]	; 0x38
9002c1da:	684a      	ldr	r2, [r1, #4]
9002c1dc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
9002c1e0:	4322      	orrs	r2, r4
9002c1e2:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9002c1e4:	06dc      	lsls	r4, r3, #27
9002c1e6:	d506      	bpl.n	9002c1f6 <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9002c1e8:	6801      	ldr	r1, [r0, #0]
9002c1ea:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
9002c1ec:	688a      	ldr	r2, [r1, #8]
9002c1ee:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
9002c1f2:	4322      	orrs	r2, r4
9002c1f4:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9002c1f6:	0699      	lsls	r1, r3, #26
9002c1f8:	d506      	bpl.n	9002c208 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9002c1fa:	6801      	ldr	r1, [r0, #0]
9002c1fc:	6c04      	ldr	r4, [r0, #64]	; 0x40
9002c1fe:	688a      	ldr	r2, [r1, #8]
9002c200:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
9002c204:	4322      	orrs	r2, r4
9002c206:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9002c208:	065a      	lsls	r2, r3, #25
9002c20a:	d50a      	bpl.n	9002c222 <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9002c20c:	6801      	ldr	r1, [r0, #0]
9002c20e:	6c44      	ldr	r4, [r0, #68]	; 0x44
9002c210:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9002c212:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9002c216:	f422 1280 	bic.w	r2, r2, #1048576	; 0x100000
9002c21a:	ea42 0204 	orr.w	r2, r2, r4
9002c21e:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9002c220:	d00b      	beq.n	9002c23a <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9002c222:	061b      	lsls	r3, r3, #24
9002c224:	d506      	bpl.n	9002c234 <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9002c226:	6802      	ldr	r2, [r0, #0]
9002c228:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9002c22a:	6853      	ldr	r3, [r2, #4]
9002c22c:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
9002c230:	430b      	orrs	r3, r1
9002c232:	6053      	str	r3, [r2, #4]
  }
}
9002c234:	f85d 4b04 	ldr.w	r4, [sp], #4
9002c238:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9002c23a:	684a      	ldr	r2, [r1, #4]
9002c23c:	6c84      	ldr	r4, [r0, #72]	; 0x48
9002c23e:	f422 02c0 	bic.w	r2, r2, #6291456	; 0x600000
9002c242:	4322      	orrs	r2, r4
9002c244:	604a      	str	r2, [r1, #4]
9002c246:	e7ec      	b.n	9002c222 <UART_AdvFeatureConfig+0x8a>

9002c248 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
9002c248:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002c24c:	f8dd 8020 	ldr.w	r8, [sp, #32]
9002c250:	4681      	mov	r9, r0
9002c252:	460f      	mov	r7, r1
9002c254:	4616      	mov	r6, r2
9002c256:	469a      	mov	sl, r3
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9002c258:	6805      	ldr	r5, [r0, #0]
9002c25a:	e002      	b.n	9002c262 <UART_WaitOnFlagUntilTimeout+0x1a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
9002c25c:	f1b8 3fff 	cmp.w	r8, #4294967295
9002c260:	d10a      	bne.n	9002c278 <UART_WaitOnFlagUntilTimeout+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9002c262:	69ec      	ldr	r4, [r5, #28]
9002c264:	ea37 0304 	bics.w	r3, r7, r4
9002c268:	bf0c      	ite	eq
9002c26a:	2401      	moveq	r4, #1
9002c26c:	2400      	movne	r4, #0
9002c26e:	42b4      	cmp	r4, r6
9002c270:	d0f4      	beq.n	9002c25c <UART_WaitOnFlagUntilTimeout+0x14>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
9002c272:	2000      	movs	r0, #0
}
9002c274:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9002c278:	f7fc fa88 	bl	9002878c <HAL_GetTick>
9002c27c:	eba0 000a 	sub.w	r0, r0, sl
9002c280:	fab8 f288 	clz	r2, r8
9002c284:	4540      	cmp	r0, r8
9002c286:	ea4f 1252 	mov.w	r2, r2, lsr #5
9002c28a:	d820      	bhi.n	9002c2ce <UART_WaitOnFlagUntilTimeout+0x86>
9002c28c:	f1b8 0f00 	cmp.w	r8, #0
9002c290:	d01d      	beq.n	9002c2ce <UART_WaitOnFlagUntilTimeout+0x86>
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
9002c292:	f8d9 5000 	ldr.w	r5, [r9]
9002c296:	682b      	ldr	r3, [r5, #0]
9002c298:	0759      	lsls	r1, r3, #29
9002c29a:	d5e2      	bpl.n	9002c262 <UART_WaitOnFlagUntilTimeout+0x1a>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9002c29c:	69eb      	ldr	r3, [r5, #28]
9002c29e:	051b      	lsls	r3, r3, #20
9002c2a0:	d5df      	bpl.n	9002c262 <UART_WaitOnFlagUntilTimeout+0x1a>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9002c2a2:	f44f 6100 	mov.w	r1, #2048	; 0x800
          huart->gState = HAL_UART_STATE_READY;
9002c2a6:	2320      	movs	r3, #32
          return HAL_TIMEOUT;
9002c2a8:	2003      	movs	r0, #3
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9002c2aa:	6229      	str	r1, [r5, #32]
          CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9002c2ac:	6829      	ldr	r1, [r5, #0]
9002c2ae:	f421 71d0 	bic.w	r1, r1, #416	; 0x1a0
9002c2b2:	6029      	str	r1, [r5, #0]
          CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9002c2b4:	68a9      	ldr	r1, [r5, #8]
9002c2b6:	f021 0101 	bic.w	r1, r1, #1
9002c2ba:	60a9      	str	r1, [r5, #8]
          huart->gState = HAL_UART_STATE_READY;
9002c2bc:	f8c9 3084 	str.w	r3, [r9, #132]	; 0x84
          __HAL_UNLOCK(huart);
9002c2c0:	f889 2080 	strb.w	r2, [r9, #128]	; 0x80
          huart->RxState = HAL_UART_STATE_READY;
9002c2c4:	f8c9 3088 	str.w	r3, [r9, #136]	; 0x88
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9002c2c8:	f8c9 308c 	str.w	r3, [r9, #140]	; 0x8c
          return HAL_TIMEOUT;
9002c2cc:	e7d2      	b.n	9002c274 <UART_WaitOnFlagUntilTimeout+0x2c>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9002c2ce:	f8d9 3000 	ldr.w	r3, [r9]
        huart->gState = HAL_UART_STATE_READY;
9002c2d2:	2120      	movs	r1, #32
        __HAL_UNLOCK(huart);
9002c2d4:	2400      	movs	r4, #0
9002c2d6:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFNFIE));
9002c2d8:	681a      	ldr	r2, [r3, #0]
9002c2da:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
9002c2de:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9002c2e0:	689a      	ldr	r2, [r3, #8]
9002c2e2:	f022 0201 	bic.w	r2, r2, #1
9002c2e6:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
9002c2e8:	f8c9 1084 	str.w	r1, [r9, #132]	; 0x84
        __HAL_UNLOCK(huart);
9002c2ec:	f889 4080 	strb.w	r4, [r9, #128]	; 0x80
        huart->RxState = HAL_UART_STATE_READY;
9002c2f0:	f8c9 1088 	str.w	r1, [r9, #136]	; 0x88
        return HAL_TIMEOUT;
9002c2f4:	e7be      	b.n	9002c274 <UART_WaitOnFlagUntilTimeout+0x2c>
9002c2f6:	bf00      	nop

9002c2f8 <HAL_UART_Transmit>:
{
9002c2f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002c2fc:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
9002c2fe:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
{
9002c302:	b083      	sub	sp, #12
  if (huart->gState == HAL_UART_STATE_READY)
9002c304:	2b20      	cmp	r3, #32
9002c306:	d14c      	bne.n	9002c3a2 <HAL_UART_Transmit+0xaa>
    if ((pData == NULL) || (Size == 0U))
9002c308:	460d      	mov	r5, r1
9002c30a:	2900      	cmp	r1, #0
9002c30c:	d045      	beq.n	9002c39a <HAL_UART_Transmit+0xa2>
9002c30e:	fab2 f982 	clz	r9, r2
9002c312:	4617      	mov	r7, r2
9002c314:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002c318:	2a00      	cmp	r2, #0
9002c31a:	d03e      	beq.n	9002c39a <HAL_UART_Transmit+0xa2>
    __HAL_LOCK(huart);
9002c31c:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
9002c320:	4604      	mov	r4, r0
9002c322:	2b01      	cmp	r3, #1
9002c324:	d03d      	beq.n	9002c3a2 <HAL_UART_Transmit+0xaa>
9002c326:	2201      	movs	r2, #1
    huart->gState = HAL_UART_STATE_BUSY_TX;
9002c328:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
9002c32a:	f8c0 908c 	str.w	r9, [r0, #140]	; 0x8c
    __HAL_LOCK(huart);
9002c32e:	f880 2080 	strb.w	r2, [r0, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
9002c332:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
    tickstart = HAL_GetTick();
9002c336:	f7fc fa29 	bl	9002878c <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9002c33a:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
9002c33c:	4680      	mov	r8, r0
    huart->TxXferSize  = Size;
9002c33e:	f8a4 7054 	strh.w	r7, [r4, #84]	; 0x54
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9002c342:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    huart->TxXferCount = Size;
9002c346:	f8a4 7056 	strh.w	r7, [r4, #86]	; 0x56
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9002c34a:	d041      	beq.n	9002c3d0 <HAL_UART_Transmit+0xd8>
    while (huart->TxXferCount > 0U)
9002c34c:	f8b4 3056 	ldrh.w	r3, [r4, #86]	; 0x56
    __HAL_UNLOCK(huart);
9002c350:	2200      	movs	r2, #0
    while (huart->TxXferCount > 0U)
9002c352:	b29b      	uxth	r3, r3
    __HAL_UNLOCK(huart);
9002c354:	f884 2080 	strb.w	r2, [r4, #128]	; 0x80
    while (huart->TxXferCount > 0U)
9002c358:	b973      	cbnz	r3, 9002c378 <HAL_UART_Transmit+0x80>
9002c35a:	e02a      	b.n	9002c3b2 <HAL_UART_Transmit+0xba>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
9002c35c:	6823      	ldr	r3, [r4, #0]
9002c35e:	f815 2b01 	ldrb.w	r2, [r5], #1
9002c362:	629a      	str	r2, [r3, #40]	; 0x28
      huart->TxXferCount--;
9002c364:	f8b4 2056 	ldrh.w	r2, [r4, #86]	; 0x56
9002c368:	3a01      	subs	r2, #1
9002c36a:	b292      	uxth	r2, r2
9002c36c:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
    while (huart->TxXferCount > 0U)
9002c370:	f8b4 2056 	ldrh.w	r2, [r4, #86]	; 0x56
9002c374:	b292      	uxth	r2, r2
9002c376:	b1e2      	cbz	r2, 9002c3b2 <HAL_UART_Transmit+0xba>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
9002c378:	4643      	mov	r3, r8
9002c37a:	2200      	movs	r2, #0
9002c37c:	2180      	movs	r1, #128	; 0x80
9002c37e:	4620      	mov	r0, r4
9002c380:	9600      	str	r6, [sp, #0]
9002c382:	f7ff ff61 	bl	9002c248 <UART_WaitOnFlagUntilTimeout>
9002c386:	b980      	cbnz	r0, 9002c3aa <HAL_UART_Transmit+0xb2>
      if (pdata8bits == NULL)
9002c388:	2d00      	cmp	r5, #0
9002c38a:	d1e7      	bne.n	9002c35c <HAL_UART_Transmit+0x64>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
9002c38c:	f839 3b02 	ldrh.w	r3, [r9], #2
9002c390:	6822      	ldr	r2, [r4, #0]
9002c392:	f3c3 0308 	ubfx	r3, r3, #0, #9
9002c396:	6293      	str	r3, [r2, #40]	; 0x28
        pdata16bits++;
9002c398:	e7e4      	b.n	9002c364 <HAL_UART_Transmit+0x6c>
      return  HAL_ERROR;
9002c39a:	2001      	movs	r0, #1
}
9002c39c:	b003      	add	sp, #12
9002c39e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    return HAL_BUSY;
9002c3a2:	2002      	movs	r0, #2
}
9002c3a4:	b003      	add	sp, #12
9002c3a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
9002c3aa:	2003      	movs	r0, #3
}
9002c3ac:	b003      	add	sp, #12
9002c3ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
9002c3b2:	4643      	mov	r3, r8
9002c3b4:	2200      	movs	r2, #0
9002c3b6:	2140      	movs	r1, #64	; 0x40
9002c3b8:	4620      	mov	r0, r4
9002c3ba:	9600      	str	r6, [sp, #0]
9002c3bc:	f7ff ff44 	bl	9002c248 <UART_WaitOnFlagUntilTimeout>
9002c3c0:	2800      	cmp	r0, #0
9002c3c2:	d1f2      	bne.n	9002c3aa <HAL_UART_Transmit+0xb2>
    huart->gState = HAL_UART_STATE_READY;
9002c3c4:	2320      	movs	r3, #32
9002c3c6:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
}
9002c3ca:	b003      	add	sp, #12
9002c3cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
9002c3d0:	6923      	ldr	r3, [r4, #16]
9002c3d2:	2b00      	cmp	r3, #0
9002c3d4:	d1ba      	bne.n	9002c34c <HAL_UART_Transmit+0x54>
9002c3d6:	46a9      	mov	r9, r5
      pdata8bits  = NULL;
9002c3d8:	461d      	mov	r5, r3
9002c3da:	e7b7      	b.n	9002c34c <HAL_UART_Transmit+0x54>

9002c3dc <UART_CheckIdleState>:
{
9002c3dc:	b570      	push	{r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9002c3de:	2600      	movs	r6, #0
{
9002c3e0:	4604      	mov	r4, r0
9002c3e2:	b082      	sub	sp, #8
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9002c3e4:	f8c0 608c 	str.w	r6, [r0, #140]	; 0x8c
  tickstart = HAL_GetTick();
9002c3e8:	f7fc f9d0 	bl	9002878c <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9002c3ec:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
9002c3ee:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9002c3f0:	681a      	ldr	r2, [r3, #0]
9002c3f2:	0712      	lsls	r2, r2, #28
9002c3f4:	d40e      	bmi.n	9002c414 <UART_CheckIdleState+0x38>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9002c3f6:	681b      	ldr	r3, [r3, #0]
9002c3f8:	075b      	lsls	r3, r3, #29
9002c3fa:	d41a      	bmi.n	9002c432 <UART_CheckIdleState+0x56>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9002c3fc:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9002c3fe:	2220      	movs	r2, #32
  return HAL_OK;
9002c400:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9002c402:	f8c4 2084 	str.w	r2, [r4, #132]	; 0x84
  __HAL_UNLOCK(huart);
9002c406:	f884 3080 	strb.w	r3, [r4, #128]	; 0x80
  huart->RxState = HAL_UART_STATE_READY;
9002c40a:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9002c40e:	66e3      	str	r3, [r4, #108]	; 0x6c
}
9002c410:	b002      	add	sp, #8
9002c412:	bd70      	pop	{r4, r5, r6, pc}
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
9002c414:	f06f 407e 	mvn.w	r0, #4261412864	; 0xfe000000
9002c418:	4632      	mov	r2, r6
9002c41a:	462b      	mov	r3, r5
9002c41c:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
9002c420:	9000      	str	r0, [sp, #0]
9002c422:	4620      	mov	r0, r4
9002c424:	f7ff ff10 	bl	9002c248 <UART_WaitOnFlagUntilTimeout>
9002c428:	b978      	cbnz	r0, 9002c44a <UART_CheckIdleState+0x6e>
9002c42a:	6823      	ldr	r3, [r4, #0]
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9002c42c:	681b      	ldr	r3, [r3, #0]
9002c42e:	075b      	lsls	r3, r3, #29
9002c430:	d5e4      	bpl.n	9002c3fc <UART_CheckIdleState+0x20>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
9002c432:	f06f 407e 	mvn.w	r0, #4261412864	; 0xfe000000
9002c436:	462b      	mov	r3, r5
9002c438:	2200      	movs	r2, #0
9002c43a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
9002c43e:	9000      	str	r0, [sp, #0]
9002c440:	4620      	mov	r0, r4
9002c442:	f7ff ff01 	bl	9002c248 <UART_WaitOnFlagUntilTimeout>
9002c446:	2800      	cmp	r0, #0
9002c448:	d0d8      	beq.n	9002c3fc <UART_CheckIdleState+0x20>
      return HAL_TIMEOUT;
9002c44a:	2003      	movs	r0, #3
}
9002c44c:	b002      	add	sp, #8
9002c44e:	bd70      	pop	{r4, r5, r6, pc}

9002c450 <HAL_UART_Init>:
  if (huart == NULL)
9002c450:	b380      	cbz	r0, 9002c4b4 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9002c452:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
{
9002c456:	b510      	push	{r4, lr}
9002c458:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9002c45a:	b333      	cbz	r3, 9002c4aa <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9002c45c:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9002c45e:	2324      	movs	r3, #36	; 0x24
  if (UART_SetConfig(huart) == HAL_ERROR)
9002c460:	4620      	mov	r0, r4
  huart->gState = HAL_UART_STATE_BUSY;
9002c462:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
  __HAL_UART_DISABLE(huart);
9002c466:	6813      	ldr	r3, [r2, #0]
9002c468:	f023 0301 	bic.w	r3, r3, #1
9002c46c:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
9002c46e:	f7ff fbe9 	bl	9002bc44 <UART_SetConfig>
9002c472:	2801      	cmp	r0, #1
9002c474:	d017      	beq.n	9002c4a6 <HAL_UART_Init+0x56>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9002c476:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9002c478:	b98b      	cbnz	r3, 9002c49e <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9002c47a:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9002c47c:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9002c47e:	685a      	ldr	r2, [r3, #4]
9002c480:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
9002c484:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9002c486:	689a      	ldr	r2, [r3, #8]
9002c488:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
9002c48c:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9002c48e:	681a      	ldr	r2, [r3, #0]
9002c490:	f042 0201 	orr.w	r2, r2, #1
}
9002c494:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9002c498:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9002c49a:	f7ff bf9f 	b.w	9002c3dc <UART_CheckIdleState>
    UART_AdvFeatureConfig(huart);
9002c49e:	4620      	mov	r0, r4
9002c4a0:	f7ff fe7a 	bl	9002c198 <UART_AdvFeatureConfig>
9002c4a4:	e7e9      	b.n	9002c47a <HAL_UART_Init+0x2a>
}
9002c4a6:	2001      	movs	r0, #1
9002c4a8:	bd10      	pop	{r4, pc}
    huart->Lock = HAL_UNLOCKED;
9002c4aa:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
    HAL_UART_MspInit(huart);
9002c4ae:	f7fa ff1d 	bl	900272ec <HAL_UART_MspInit>
9002c4b2:	e7d3      	b.n	9002c45c <HAL_UART_Init+0xc>
}
9002c4b4:	2001      	movs	r0, #1
9002c4b6:	4770      	bx	lr

9002c4b8 <osKernelStart>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval status code that indicates the execution status of the function
* @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
*/
osStatus osKernelStart (void)
{
9002c4b8:	b508      	push	{r3, lr}
  vTaskStartScheduler();
9002c4ba:	f000 fed3 	bl	9002d264 <vTaskStartScheduler>
  
  return osOK;
}
9002c4be:	2000      	movs	r0, #0
9002c4c0:	bd08      	pop	{r3, pc}
9002c4c2:	bf00      	nop

9002c4c4 <osThreadCreate>:
* @param  argument      pointer that is passed to the thread function as start argument.
* @retval thread ID for reference by other functions or NULL in case of error.
* @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
*/
osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
{
9002c4c4:	b530      	push	{r4, r5, lr}

    handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
              thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
              thread_def->buffer, thread_def->controlblock);
#else
  if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
9002c4c6:	f9b0 4008 	ldrsh.w	r4, [r0, #8]
{
9002c4ca:	b085      	sub	sp, #20
9002c4cc:	4602      	mov	r2, r0
9002c4ce:	460b      	mov	r3, r1
  if (priority != osPriorityError) {
9002c4d0:	2c84      	cmp	r4, #132	; 0x84
  if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
9002c4d2:	ad03      	add	r5, sp, #12
9002c4d4:	6811      	ldr	r1, [r2, #0]
    fpriority += (priority - osPriorityIdle);
9002c4d6:	bf14      	ite	ne
9002c4d8:	3403      	addne	r4, #3
  unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
9002c4da:	2400      	moveq	r4, #0
  if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
9002c4dc:	8a12      	ldrh	r2, [r2, #16]
9002c4de:	6840      	ldr	r0, [r0, #4]
9002c4e0:	e9cd 4500 	strd	r4, r5, [sp]
9002c4e4:	f000 fdb4 	bl	9002d050 <xTaskCreate>
9002c4e8:	2801      	cmp	r0, #1
                   &handle) != pdPASS)  {
    return NULL;
  }     
#endif
  
  return handle;
9002c4ea:	bf0c      	ite	eq
9002c4ec:	9803      	ldreq	r0, [sp, #12]
    return NULL;
9002c4ee:	2000      	movne	r0, #0
}
9002c4f0:	b005      	add	sp, #20
9002c4f2:	bd30      	pop	{r4, r5, pc}

9002c4f4 <osThreadGetId>:
* @note   MUST REMAIN UNCHANGED: \b osThreadGetId shall be consistent in every CMSIS-RTOS.
*/
osThreadId osThreadGetId (void)
{
#if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
  return xTaskGetCurrentTaskHandle();
9002c4f4:	f001 b8ae 	b.w	9002d654 <xTaskGetCurrentTaskHandle>

9002c4f8 <osSignalWait>:
* @param  millisec  timeout value or 0 in case of no time-out.
* @retval  event flag information or error code.
* @note   MUST REMAIN UNCHANGED: \b osSignalWait shall be consistent in every CMSIS-RTOS.
*/
osEvent osSignalWait (int32_t signals, uint32_t millisec)
{
9002c4f8:	b530      	push	{r4, r5, lr}

#if( configUSE_TASK_NOTIFICATIONS == 1 )
	
  TickType_t ticks;

  ret.value.signals = 0;  
9002c4fa:	2300      	movs	r3, #0
{
9002c4fc:	b085      	sub	sp, #20
9002c4fe:	4604      	mov	r4, r0
  ret.value.signals = 0;  
9002c500:	9302      	str	r3, [sp, #8]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9002c502:	f3ef 8005 	mrs	r0, IPSR
    if (ticks == 0) {
      ticks = 1;
    }
  }  
  
  if (inHandlerMode())
9002c506:	b148      	cbz	r0, 9002c51c <osSignalWait+0x24>
  {
    ret.status = osErrorISR;  /*Not allowed in ISR*/
9002c508:	2382      	movs	r3, #130	; 0x82
9002c50a:	9301      	str	r3, [sp, #4]
  (void) millisec;
	
  ret.status =  osErrorOS;	/* Task Notification not supported */
#endif
  
  return ret;
9002c50c:	ab04      	add	r3, sp, #16
9002c50e:	e913 0007 	ldmdb	r3, {r0, r1, r2}
9002c512:	e884 0007 	stmia.w	r4, {r0, r1, r2}
}
9002c516:	4620      	mov	r0, r4
9002c518:	b005      	add	sp, #20
9002c51a:	bd30      	pop	{r4, r5, pc}
    if(xTaskNotifyWait( 0,(uint32_t) signals, (uint32_t *)&ret.value.signals, ticks) != pdTRUE)
9002c51c:	4613      	mov	r3, r2
9002c51e:	4615      	mov	r5, r2
9002c520:	aa02      	add	r2, sp, #8
9002c522:	f001 f9cb 	bl	9002d8bc <xTaskNotifyWait>
9002c526:	2801      	cmp	r0, #1
9002c528:	d005      	beq.n	9002c536 <osSignalWait+0x3e>
      if(ticks == 0)  ret.status = osOK;
9002c52a:	b90d      	cbnz	r5, 9002c530 <osSignalWait+0x38>
9002c52c:	9501      	str	r5, [sp, #4]
9002c52e:	e7ed      	b.n	9002c50c <osSignalWait+0x14>
      else  ret.status = osEventTimeout;
9002c530:	2340      	movs	r3, #64	; 0x40
9002c532:	9301      	str	r3, [sp, #4]
9002c534:	e7ea      	b.n	9002c50c <osSignalWait+0x14>
    else if(ret.value.signals < 0)
9002c536:	9b02      	ldr	r3, [sp, #8]
9002c538:	2b00      	cmp	r3, #0
      ret.status =  osErrorValue;     
9002c53a:	bfb4      	ite	lt
9002c53c:	2386      	movlt	r3, #134	; 0x86
    else  ret.status =  osEventSignal;
9002c53e:	2308      	movge	r3, #8
9002c540:	9301      	str	r3, [sp, #4]
9002c542:	e7e3      	b.n	9002c50c <osSignalWait+0x14>

9002c544 <osMutexRelease>:
* @param mutex_id      mutex ID obtained by \ref osMutexCreate.
* @retval  status code that indicates the execution status of the function.
* @note   MUST REMAIN UNCHANGED: \b osMutexRelease shall be consistent in every CMSIS-RTOS.
*/
osStatus osMutexRelease (osMutexId mutex_id)
{
9002c544:	b510      	push	{r4, lr}
  osStatus result = osOK;
  portBASE_TYPE taskWoken = pdFALSE;
9002c546:	2400      	movs	r4, #0
{
9002c548:	b082      	sub	sp, #8
  portBASE_TYPE taskWoken = pdFALSE;
9002c54a:	9401      	str	r4, [sp, #4]
9002c54c:	f3ef 8305 	mrs	r3, IPSR
  
  if (inHandlerMode()) {
9002c550:	b18b      	cbz	r3, 9002c576 <osMutexRelease+0x32>
    if (xSemaphoreGiveFromISR(mutex_id, &taskWoken) != pdTRUE) {
9002c552:	a901      	add	r1, sp, #4
9002c554:	f000 fab4 	bl	9002cac0 <xQueueGiveFromISR>
9002c558:	2801      	cmp	r0, #1
9002c55a:	d112      	bne.n	9002c582 <osMutexRelease+0x3e>
      return osErrorOS;
    }
    portEND_SWITCHING_ISR(taskWoken);
9002c55c:	9b01      	ldr	r3, [sp, #4]
9002c55e:	b19b      	cbz	r3, 9002c588 <osMutexRelease+0x44>
9002c560:	4b0b      	ldr	r3, [pc, #44]	; (9002c590 <osMutexRelease+0x4c>)
9002c562:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002c566:	601a      	str	r2, [r3, #0]
9002c568:	f3bf 8f4f 	dsb	sy
9002c56c:	f3bf 8f6f 	isb	sy
  osStatus result = osOK;
9002c570:	4620      	mov	r0, r4
  else if (xSemaphoreGive(mutex_id) != pdTRUE) 
  {
    result = osErrorOS;
  }
  return result;
}
9002c572:	b002      	add	sp, #8
9002c574:	bd10      	pop	{r4, pc}
  else if (xSemaphoreGive(mutex_id) != pdTRUE) 
9002c576:	461a      	mov	r2, r3
9002c578:	4619      	mov	r1, r3
9002c57a:	f000 f9d1 	bl	9002c920 <xQueueGenericSend>
9002c57e:	2801      	cmp	r0, #1
9002c580:	d002      	beq.n	9002c588 <osMutexRelease+0x44>
    result = osErrorOS;
9002c582:	20ff      	movs	r0, #255	; 0xff
}
9002c584:	b002      	add	sp, #8
9002c586:	bd10      	pop	{r4, pc}
  osStatus result = osOK;
9002c588:	2000      	movs	r0, #0
}
9002c58a:	b002      	add	sp, #8
9002c58c:	bd10      	pop	{r4, pc}
9002c58e:	bf00      	nop
9002c590:	e000ed04 	.word	0xe000ed04

9002c594 <osSemaphoreCreate>:
#endif    
  }
#else  // configSUPPORT_STATIC_ALLOCATION == 0  && configSUPPORT_DYNAMIC_ALLOCATION == 1
  osSemaphoreId sema;
 
  if (count == 1) {
9002c594:	2901      	cmp	r1, #1
{ 
9002c596:	4608      	mov	r0, r1
  if (count == 1) {
9002c598:	d001      	beq.n	9002c59e <osSemaphoreCreate+0xa>
    vSemaphoreCreateBinary(sema);
    return sema;
  }
  else {
#if (configUSE_COUNTING_SEMAPHORES == 1 )	
    return xSemaphoreCreateCounting(count, count);
9002c59a:	f000 b99f 	b.w	9002c8dc <xQueueCreateCountingSemaphore>
{ 
9002c59e:	b510      	push	{r4, lr}
    vSemaphoreCreateBinary(sema);
9002c5a0:	2203      	movs	r2, #3
9002c5a2:	2100      	movs	r1, #0
9002c5a4:	f000 f972 	bl	9002c88c <xQueueGenericCreate>
9002c5a8:	4604      	mov	r4, r0
9002c5aa:	b120      	cbz	r0, 9002c5b6 <osSemaphoreCreate+0x22>
9002c5ac:	2300      	movs	r3, #0
9002c5ae:	461a      	mov	r2, r3
9002c5b0:	4619      	mov	r1, r3
9002c5b2:	f000 f9b5 	bl	9002c920 <xQueueGenericSend>
#else
    return NULL;
#endif
  }
#endif
}
9002c5b6:	4620      	mov	r0, r4
9002c5b8:	bd10      	pop	{r4, pc}
9002c5ba:	bf00      	nop

9002c5bc <osSemaphoreWait>:
* @param  millisec      timeout value or 0 in case of no time-out.
* @retval  number of available tokens, or -1 in case of incorrect parameters.
* @note   MUST REMAIN UNCHANGED: \b osSemaphoreWait shall be consistent in every CMSIS-RTOS.
*/
int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec)
{
9002c5bc:	b510      	push	{r4, lr}
  TickType_t ticks;
  portBASE_TYPE taskWoken = pdFALSE;  
9002c5be:	2400      	movs	r4, #0
{
9002c5c0:	b082      	sub	sp, #8
  portBASE_TYPE taskWoken = pdFALSE;  
9002c5c2:	9401      	str	r4, [sp, #4]
  
  
  if (semaphore_id == NULL) {
9002c5c4:	b300      	cbz	r0, 9002c608 <osSemaphoreWait+0x4c>
9002c5c6:	f3ef 8305 	mrs	r3, IPSR
    if (ticks == 0) {
      ticks = 1;
    }
  }
  
  if (inHandlerMode()) {
9002c5ca:	b933      	cbnz	r3, 9002c5da <osSemaphoreWait+0x1e>
    if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
      return osErrorOS;
    }
	portEND_SWITCHING_ISR(taskWoken);
  }  
  else if (xSemaphoreTake(semaphore_id, ticks) != pdTRUE) {
9002c5cc:	f000 fad6 	bl	9002cb7c <xQueueSemaphoreTake>
9002c5d0:	2801      	cmp	r0, #1
9002c5d2:	d116      	bne.n	9002c602 <osSemaphoreWait+0x46>
    return osErrorOS;
  }
  
  return osOK;
9002c5d4:	2000      	movs	r0, #0
}
9002c5d6:	b002      	add	sp, #8
9002c5d8:	bd10      	pop	{r4, pc}
    if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
9002c5da:	aa01      	add	r2, sp, #4
9002c5dc:	4621      	mov	r1, r4
9002c5de:	f000 fbaf 	bl	9002cd40 <xQueueReceiveFromISR>
9002c5e2:	2801      	cmp	r0, #1
9002c5e4:	d10d      	bne.n	9002c602 <osSemaphoreWait+0x46>
	portEND_SWITCHING_ISR(taskWoken);
9002c5e6:	9b01      	ldr	r3, [sp, #4]
9002c5e8:	2b00      	cmp	r3, #0
9002c5ea:	d0f3      	beq.n	9002c5d4 <osSemaphoreWait+0x18>
9002c5ec:	4b08      	ldr	r3, [pc, #32]	; (9002c610 <osSemaphoreWait+0x54>)
9002c5ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002c5f2:	601a      	str	r2, [r3, #0]
9002c5f4:	f3bf 8f4f 	dsb	sy
9002c5f8:	f3bf 8f6f 	isb	sy
  return osOK;
9002c5fc:	4620      	mov	r0, r4
}
9002c5fe:	b002      	add	sp, #8
9002c600:	bd10      	pop	{r4, pc}
    return osErrorOS;
9002c602:	20ff      	movs	r0, #255	; 0xff
}
9002c604:	b002      	add	sp, #8
9002c606:	bd10      	pop	{r4, pc}
    return osErrorParameter;
9002c608:	2080      	movs	r0, #128	; 0x80
}
9002c60a:	b002      	add	sp, #8
9002c60c:	bd10      	pop	{r4, pc}
9002c60e:	bf00      	nop
9002c610:	e000ed04 	.word	0xe000ed04

9002c614 <osSemaphoreRelease>:
9002c614:	f7ff bf96 	b.w	9002c544 <osMutexRelease>

9002c618 <osSystickHandler>:
* @brief  Handles the tick increment
* @param  none.
* @retval none.
*/
void osSystickHandler(void)
{
9002c618:	b508      	push	{r3, lr}

#if (INCLUDE_xTaskGetSchedulerState  == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
9002c61a:	f001 f821 	bl	9002d660 <xTaskGetSchedulerState>
9002c61e:	2801      	cmp	r0, #1
9002c620:	d100      	bne.n	9002c624 <osSystickHandler+0xc>
#endif  /* INCLUDE_xTaskGetSchedulerState */  
    xPortSysTickHandler();
#if (INCLUDE_xTaskGetSchedulerState  == 1 )
  }
#endif  /* INCLUDE_xTaskGetSchedulerState */  
}
9002c622:	bd08      	pop	{r3, pc}
9002c624:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9002c628:	f001 ba74 	b.w	9002db14 <xPortSysTickHandler>

9002c62c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9002c62c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9002c630:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9002c634:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9002c636:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9002c638:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9002c63a:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9002c63c:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9002c640:	4770      	bx	lr
9002c642:	bf00      	nop

9002c644 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9002c644:	2300      	movs	r3, #0
9002c646:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9002c648:	4770      	bx	lr
9002c64a:	bf00      	nop

9002c64c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9002c64c:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9002c64e:	6802      	ldr	r2, [r0, #0]
{
9002c650:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9002c652:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9002c654:	3201      	adds	r2, #1
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9002c656:	e9c1 3401 	strd	r3, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9002c65a:	689c      	ldr	r4, [r3, #8]
9002c65c:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9002c65e:	6099      	str	r1, [r3, #8]
}
9002c660:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9002c664:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9002c666:	6002      	str	r2, [r0, #0]
}
9002c668:	4770      	bx	lr
9002c66a:	bf00      	nop

9002c66c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9002c66c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9002c66e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9002c670:	1c6b      	adds	r3, r5, #1
9002c672:	d010      	beq.n	9002c696 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9002c674:	f100 0308 	add.w	r3, r0, #8
9002c678:	461c      	mov	r4, r3
9002c67a:	685b      	ldr	r3, [r3, #4]
9002c67c:	681a      	ldr	r2, [r3, #0]
9002c67e:	42aa      	cmp	r2, r5
9002c680:	d9fa      	bls.n	9002c678 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9002c682:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9002c684:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9002c686:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9002c688:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9002c68a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9002c68c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9002c68e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9002c690:	6002      	str	r2, [r0, #0]
}
9002c692:	bc30      	pop	{r4, r5}
9002c694:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9002c696:	6904      	ldr	r4, [r0, #16]
9002c698:	6863      	ldr	r3, [r4, #4]
9002c69a:	e7f2      	b.n	9002c682 <vListInsert+0x16>

9002c69c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9002c69c:	6903      	ldr	r3, [r0, #16]
{
9002c69e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9002c6a0:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9002c6a2:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9002c6a6:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9002c6a8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9002c6ac:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9002c6ae:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9002c6b0:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9002c6b4:	bf08      	it	eq
9002c6b6:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9002c6b8:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9002c6ba:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9002c6bc:	3a01      	subs	r2, #1
9002c6be:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9002c6c0:	6818      	ldr	r0, [r3, #0]
}
9002c6c2:	4770      	bx	lr

9002c6c4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9002c6c4:	b570      	push	{r4, r5, r6, lr}
9002c6c6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9002c6c8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9002c6ca:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9002c6cc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9002c6ce:	b92a      	cbnz	r2, 9002c6dc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9002c6d0:	6805      	ldr	r5, [r0, #0]
9002c6d2:	b365      	cbz	r5, 9002c72e <prvCopyDataToQueue+0x6a>
9002c6d4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9002c6d6:	4610      	mov	r0, r2
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002c6d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9002c6da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9002c6dc:	b97d      	cbnz	r5, 9002c6fe <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9002c6de:	6840      	ldr	r0, [r0, #4]
9002c6e0:	f001 fc4a 	bl	9002df78 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9002c6e4:	6863      	ldr	r3, [r4, #4]
9002c6e6:	6c21      	ldr	r1, [r4, #64]	; 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c6e8:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9002c6ea:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c6ec:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9002c6ee:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c6f0:	d319      	bcc.n	9002c726 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9002c6f2:	6822      	ldr	r2, [r4, #0]
9002c6f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9002c6f6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9002c6f8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002c6fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
9002c6fc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9002c6fe:	68c0      	ldr	r0, [r0, #12]
9002c700:	f001 fc3a 	bl	9002df78 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9002c704:	6c22      	ldr	r2, [r4, #64]	; 0x40
9002c706:	68e3      	ldr	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c708:	6821      	ldr	r1, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9002c70a:	4250      	negs	r0, r2
9002c70c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c70e:	428b      	cmp	r3, r1
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9002c710:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9002c712:	d202      	bcs.n	9002c71a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9002c714:	68a3      	ldr	r3, [r4, #8]
9002c716:	4403      	add	r3, r0
9002c718:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9002c71a:	2d02      	cmp	r5, #2
9002c71c:	d00d      	beq.n	9002c73a <prvCopyDataToQueue+0x76>
9002c71e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9002c720:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002c722:	63a6      	str	r6, [r4, #56]	; 0x38
}
9002c724:	bd70      	pop	{r4, r5, r6, pc}
9002c726:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9002c728:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002c72a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9002c72c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9002c72e:	6880      	ldr	r0, [r0, #8]
9002c730:	3601      	adds	r6, #1
9002c732:	f000 fff5 	bl	9002d720 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9002c736:	60a5      	str	r5, [r4, #8]
9002c738:	e7ce      	b.n	9002c6d8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9002c73a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9002c73c:	f04f 0000 	mov.w	r0, #0
9002c740:	bf38      	it	cc
9002c742:	2601      	movcc	r6, #1
9002c744:	e7c8      	b.n	9002c6d8 <prvCopyDataToQueue+0x14>
9002c746:	bf00      	nop

9002c748 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
{
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9002c748:	6c02      	ldr	r2, [r0, #64]	; 0x40
9002c74a:	b172      	cbz	r2, 9002c76a <prvCopyDataFromQueue+0x22>
9002c74c:	460b      	mov	r3, r1
{
9002c74e:	b410      	push	{r4}
	{
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9002c750:	e9d0 4102 	ldrd	r4, r1, [r0, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9002c754:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9002c756:	42a1      	cmp	r1, r4
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9002c758:	60c1      	str	r1, [r0, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9002c75a:	d301      	bcc.n	9002c760 <prvCopyDataFromQueue+0x18>
		{
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9002c75c:	6801      	ldr	r1, [r0, #0]
9002c75e:	60c1      	str	r1, [r0, #12]
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9002c760:	4618      	mov	r0, r3
	}
}
9002c762:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9002c766:	f001 bc07 	b.w	9002df78 <memcpy>
9002c76a:	4770      	bx	lr

9002c76c <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( Queue_t * const pxQueue )
{
9002c76c:	b570      	push	{r4, r5, r6, lr}
9002c76e:	4604      	mov	r4, r0

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
9002c770:	f001 f960 	bl	9002da34 <vPortEnterCritical>
	{
		int8_t cTxLock = pxQueue->cTxLock;
9002c774:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
9002c778:	b26d      	sxtb	r5, r5

		/* See if data was added to the queue while it was locked. */
		while( cTxLock > queueLOCKED_UNMODIFIED )
9002c77a:	2d00      	cmp	r5, #0
9002c77c:	dd15      	ble.n	9002c7aa <prvUnlockQueue+0x3e>
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9002c77e:	f104 0624 	add.w	r6, r4, #36	; 0x24
9002c782:	e004      	b.n	9002c78e <prvUnlockQueue+0x22>
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--cTxLock;
9002c784:	1e6b      	subs	r3, r5, #1
		while( cTxLock > queueLOCKED_UNMODIFIED )
9002c786:	f013 0fff 	tst.w	r3, #255	; 0xff
9002c78a:	b25d      	sxtb	r5, r3
9002c78c:	d00d      	beq.n	9002c7aa <prvUnlockQueue+0x3e>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9002c78e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9002c790:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9002c792:	b153      	cbz	r3, 9002c7aa <prvUnlockQueue+0x3e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9002c794:	f000 feb4 	bl	9002d500 <xTaskRemoveFromEventList>
9002c798:	2800      	cmp	r0, #0
9002c79a:	d0f3      	beq.n	9002c784 <prvUnlockQueue+0x18>
						vTaskMissedYield();
9002c79c:	f000 ff54 	bl	9002d648 <vTaskMissedYield>
			--cTxLock;
9002c7a0:	1e6b      	subs	r3, r5, #1
		while( cTxLock > queueLOCKED_UNMODIFIED )
9002c7a2:	f013 0fff 	tst.w	r3, #255	; 0xff
9002c7a6:	b25d      	sxtb	r5, r3
9002c7a8:	d1f1      	bne.n	9002c78e <prvUnlockQueue+0x22>
		}

		pxQueue->cTxLock = queueUNLOCKED;
9002c7aa:	23ff      	movs	r3, #255	; 0xff
9002c7ac:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	}
	taskEXIT_CRITICAL();
9002c7b0:	f001 f966 	bl	9002da80 <vPortExitCritical>

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
9002c7b4:	f001 f93e 	bl	9002da34 <vPortEnterCritical>
	{
		int8_t cRxLock = pxQueue->cRxLock;
9002c7b8:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
9002c7bc:	b26d      	sxtb	r5, r5

		while( cRxLock > queueLOCKED_UNMODIFIED )
9002c7be:	2d00      	cmp	r5, #0
9002c7c0:	dd15      	ble.n	9002c7ee <prvUnlockQueue+0x82>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002c7c2:	f104 0610 	add.w	r6, r4, #16
9002c7c6:	e004      	b.n	9002c7d2 <prvUnlockQueue+0x66>
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				--cRxLock;
9002c7c8:	1e6b      	subs	r3, r5, #1
		while( cRxLock > queueLOCKED_UNMODIFIED )
9002c7ca:	f013 0fff 	tst.w	r3, #255	; 0xff
9002c7ce:	b25d      	sxtb	r5, r3
9002c7d0:	d00d      	beq.n	9002c7ee <prvUnlockQueue+0x82>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9002c7d2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002c7d4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9002c7d6:	b153      	cbz	r3, 9002c7ee <prvUnlockQueue+0x82>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002c7d8:	f000 fe92 	bl	9002d500 <xTaskRemoveFromEventList>
9002c7dc:	2800      	cmp	r0, #0
9002c7de:	d0f3      	beq.n	9002c7c8 <prvUnlockQueue+0x5c>
					vTaskMissedYield();
9002c7e0:	f000 ff32 	bl	9002d648 <vTaskMissedYield>
				--cRxLock;
9002c7e4:	1e6b      	subs	r3, r5, #1
		while( cRxLock > queueLOCKED_UNMODIFIED )
9002c7e6:	f013 0fff 	tst.w	r3, #255	; 0xff
9002c7ea:	b25d      	sxtb	r5, r3
9002c7ec:	d1f1      	bne.n	9002c7d2 <prvUnlockQueue+0x66>
			{
				break;
			}
		}

		pxQueue->cRxLock = queueUNLOCKED;
9002c7ee:	23ff      	movs	r3, #255	; 0xff
9002c7f0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
}
9002c7f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9002c7f8:	f001 b942 	b.w	9002da80 <vPortExitCritical>

9002c7fc <xQueueGenericReset>:
{
9002c7fc:	b538      	push	{r3, r4, r5, lr}
	configASSERT( pxQueue );
9002c7fe:	b1e0      	cbz	r0, 9002c83a <xQueueGenericReset+0x3e>
	taskENTER_CRITICAL();
9002c800:	4604      	mov	r4, r0
9002c802:	460d      	mov	r5, r1
9002c804:	f001 f916 	bl	9002da34 <vPortEnterCritical>
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9002c808:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c80a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9002c80c:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9002c80e:	21ff      	movs	r1, #255	; 0xff
		pxQueue->pcWriteTo = pxQueue->pcHead;
9002c810:	6062      	str	r2, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9002c812:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9002c816:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c81a:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	; 0x3c
9002c81e:	fb03 f300 	mul.w	r3, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c822:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c824:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c826:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c828:	60a3      	str	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c82a:	60e2      	str	r2, [r4, #12]
		if( xNewQueue == pdFALSE )
9002c82c:	b9fd      	cbnz	r5, 9002c86e <xQueueGenericReset+0x72>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9002c82e:	6923      	ldr	r3, [r4, #16]
9002c830:	b973      	cbnz	r3, 9002c850 <xQueueGenericReset+0x54>
	taskEXIT_CRITICAL();
9002c832:	f001 f925 	bl	9002da80 <vPortExitCritical>
}
9002c836:	2001      	movs	r0, #1
9002c838:	bd38      	pop	{r3, r4, r5, pc}

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9002c83a:	f04f 0350 	mov.w	r3, #80	; 0x50
9002c83e:	b672      	cpsid	i
9002c840:	f383 8811 	msr	BASEPRI, r3
9002c844:	f3bf 8f6f 	isb	sy
9002c848:	f3bf 8f4f 	dsb	sy
9002c84c:	b662      	cpsie	i
	configASSERT( pxQueue );
9002c84e:	e7fe      	b.n	9002c84e <xQueueGenericReset+0x52>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002c850:	f104 0010 	add.w	r0, r4, #16
9002c854:	f000 fe54 	bl	9002d500 <xTaskRemoveFromEventList>
9002c858:	2800      	cmp	r0, #0
9002c85a:	d0ea      	beq.n	9002c832 <xQueueGenericReset+0x36>
					queueYIELD_IF_USING_PREEMPTION();
9002c85c:	4b0a      	ldr	r3, [pc, #40]	; (9002c888 <xQueueGenericReset+0x8c>)
9002c85e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002c862:	601a      	str	r2, [r3, #0]
9002c864:	f3bf 8f4f 	dsb	sy
9002c868:	f3bf 8f6f 	isb	sy
9002c86c:	e7e1      	b.n	9002c832 <xQueueGenericReset+0x36>
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9002c86e:	f104 0010 	add.w	r0, r4, #16
9002c872:	f7ff fedb 	bl	9002c62c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9002c876:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002c87a:	f7ff fed7 	bl	9002c62c <vListInitialise>
	taskEXIT_CRITICAL();
9002c87e:	f001 f8ff 	bl	9002da80 <vPortExitCritical>
}
9002c882:	2001      	movs	r0, #1
9002c884:	bd38      	pop	{r3, r4, r5, pc}
9002c886:	bf00      	nop
9002c888:	e000ed04 	.word	0xe000ed04

9002c88c <xQueueGenericCreate>:
	{
9002c88c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9002c88e:	b950      	cbnz	r0, 9002c8a6 <xQueueGenericCreate+0x1a>
9002c890:	f04f 0350 	mov.w	r3, #80	; 0x50
9002c894:	b672      	cpsid	i
9002c896:	f383 8811 	msr	BASEPRI, r3
9002c89a:	f3bf 8f6f 	isb	sy
9002c89e:	f3bf 8f4f 	dsb	sy
9002c8a2:	b662      	cpsie	i
9002c8a4:	e7fe      	b.n	9002c8a4 <xQueueGenericCreate+0x18>
9002c8a6:	4606      	mov	r6, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002c8a8:	fb01 f000 	mul.w	r0, r1, r0
9002c8ac:	460d      	mov	r5, r1
9002c8ae:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9002c8b0:	3050      	adds	r0, #80	; 0x50
9002c8b2:	f001 fa2d 	bl	9002dd10 <pvPortMalloc>
		if( pxNewQueue != NULL )
9002c8b6:	4604      	mov	r4, r0
9002c8b8:	b150      	cbz	r0, 9002c8d0 <xQueueGenericCreate+0x44>
	if( uxItemSize == ( UBaseType_t ) 0 )
9002c8ba:	b95d      	cbnz	r5, 9002c8d4 <xQueueGenericCreate+0x48>
9002c8bc:	4603      	mov	r3, r0
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9002c8be:	2101      	movs	r1, #1
9002c8c0:	4620      	mov	r0, r4
9002c8c2:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9002c8c4:	63e6      	str	r6, [r4, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9002c8c6:	6425      	str	r5, [r4, #64]	; 0x40
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
9002c8c8:	f7ff ff98 	bl	9002c7fc <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
9002c8cc:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9002c8d0:	4620      	mov	r0, r4
9002c8d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9002c8d4:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9002c8d8:	e7f1      	b.n	9002c8be <xQueueGenericCreate+0x32>
9002c8da:	bf00      	nop

9002c8dc <xQueueCreateCountingSemaphore>:
		configASSERT( uxMaxCount != 0 );
9002c8dc:	b950      	cbnz	r0, 9002c8f4 <xQueueCreateCountingSemaphore+0x18>
9002c8de:	f04f 0350 	mov.w	r3, #80	; 0x50
9002c8e2:	b672      	cpsid	i
9002c8e4:	f383 8811 	msr	BASEPRI, r3
9002c8e8:	f3bf 8f6f 	isb	sy
9002c8ec:	f3bf 8f4f 	dsb	sy
9002c8f0:	b662      	cpsie	i
9002c8f2:	e7fe      	b.n	9002c8f2 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
9002c8f4:	4288      	cmp	r0, r1
	{
9002c8f6:	b510      	push	{r4, lr}
9002c8f8:	460c      	mov	r4, r1
		configASSERT( uxInitialCount <= uxMaxCount );
9002c8fa:	d20a      	bcs.n	9002c912 <xQueueCreateCountingSemaphore+0x36>
9002c8fc:	f04f 0350 	mov.w	r3, #80	; 0x50
9002c900:	b672      	cpsid	i
9002c902:	f383 8811 	msr	BASEPRI, r3
9002c906:	f3bf 8f6f 	isb	sy
9002c90a:	f3bf 8f4f 	dsb	sy
9002c90e:	b662      	cpsie	i
9002c910:	e7fe      	b.n	9002c910 <xQueueCreateCountingSemaphore+0x34>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
9002c912:	2202      	movs	r2, #2
9002c914:	2100      	movs	r1, #0
9002c916:	f7ff ffb9 	bl	9002c88c <xQueueGenericCreate>
		if( xHandle != NULL )
9002c91a:	b100      	cbz	r0, 9002c91e <xQueueCreateCountingSemaphore+0x42>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9002c91c:	6384      	str	r4, [r0, #56]	; 0x38
	}
9002c91e:	bd10      	pop	{r4, pc}

9002c920 <xQueueGenericSend>:
{
9002c920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002c924:	b084      	sub	sp, #16
9002c926:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9002c928:	2800      	cmp	r0, #0
9002c92a:	f000 8085 	beq.w	9002ca38 <xQueueGenericSend+0x118>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9002c92e:	460f      	mov	r7, r1
9002c930:	4604      	mov	r4, r0
9002c932:	461e      	mov	r6, r3
9002c934:	2900      	cmp	r1, #0
9002c936:	d06d      	beq.n	9002ca14 <xQueueGenericSend+0xf4>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9002c938:	2e02      	cmp	r6, #2
9002c93a:	d10d      	bne.n	9002c958 <xQueueGenericSend+0x38>
9002c93c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9002c93e:	2b01      	cmp	r3, #1
9002c940:	d00a      	beq.n	9002c958 <xQueueGenericSend+0x38>
9002c942:	f04f 0350 	mov.w	r3, #80	; 0x50
9002c946:	b672      	cpsid	i
9002c948:	f383 8811 	msr	BASEPRI, r3
9002c94c:	f3bf 8f6f 	isb	sy
9002c950:	f3bf 8f4f 	dsb	sy
9002c954:	b662      	cpsie	i
9002c956:	e7fe      	b.n	9002c956 <xQueueGenericSend+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9002c958:	f000 fe82 	bl	9002d660 <xTaskGetSchedulerState>
9002c95c:	2800      	cmp	r0, #0
9002c95e:	d076      	beq.n	9002ca4e <xQueueGenericSend+0x12e>
9002c960:	f1a6 0502 	sub.w	r5, r6, #2
{
9002c964:	f04f 0800 	mov.w	r8, #0
					portYIELD_WITHIN_API();
9002c968:	f8df a150 	ldr.w	sl, [pc, #336]	; 9002cabc <xQueueGenericSend+0x19c>
9002c96c:	fab5 f585 	clz	r5, r5
		prvLockQueue( pxQueue );
9002c970:	46c1      	mov	r9, r8
9002c972:	096d      	lsrs	r5, r5, #5
9002c974:	e008      	b.n	9002c988 <xQueueGenericSend+0x68>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9002c976:	f001 f883 	bl	9002da80 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
9002c97a:	4620      	mov	r0, r4
9002c97c:	f7ff fef6 	bl	9002c76c <prvUnlockQueue>
				( void ) xTaskResumeAll();
9002c980:	f000 fcb8 	bl	9002d2f4 <xTaskResumeAll>
{
9002c984:	f04f 0801 	mov.w	r8, #1
		taskENTER_CRITICAL();
9002c988:	f001 f854 	bl	9002da34 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9002c98c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9002c98e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9002c990:	429a      	cmp	r2, r3
9002c992:	d36a      	bcc.n	9002ca6a <xQueueGenericSend+0x14a>
9002c994:	2d00      	cmp	r5, #0
9002c996:	d168      	bne.n	9002ca6a <xQueueGenericSend+0x14a>
				if( xTicksToWait == ( TickType_t ) 0 )
9002c998:	9b01      	ldr	r3, [sp, #4]
9002c99a:	2b00      	cmp	r3, #0
9002c99c:	f000 8082 	beq.w	9002caa4 <xQueueGenericSend+0x184>
				else if( xEntryTimeSet == pdFALSE )
9002c9a0:	f1b8 0f00 	cmp.w	r8, #0
9002c9a4:	d044      	beq.n	9002ca30 <xQueueGenericSend+0x110>
		taskEXIT_CRITICAL();
9002c9a6:	f001 f86b 	bl	9002da80 <vPortExitCritical>
		vTaskSuspendAll();
9002c9aa:	f000 fc9b 	bl	9002d2e4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9002c9ae:	f001 f841 	bl	9002da34 <vPortEnterCritical>
9002c9b2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9002c9b6:	2bff      	cmp	r3, #255	; 0xff
9002c9b8:	d101      	bne.n	9002c9be <xQueueGenericSend+0x9e>
9002c9ba:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
9002c9be:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9002c9c2:	2bff      	cmp	r3, #255	; 0xff
9002c9c4:	d101      	bne.n	9002c9ca <xQueueGenericSend+0xaa>
9002c9c6:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
9002c9ca:	f001 f859 	bl	9002da80 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9002c9ce:	a901      	add	r1, sp, #4
9002c9d0:	a802      	add	r0, sp, #8
9002c9d2:	f000 fded 	bl	9002d5b0 <xTaskCheckForTimeOut>
9002c9d6:	2800      	cmp	r0, #0
9002c9d8:	d168      	bne.n	9002caac <xQueueGenericSend+0x18c>
	taskENTER_CRITICAL();
9002c9da:	f001 f82b 	bl	9002da34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9002c9de:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9002c9e0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9002c9e2:	429a      	cmp	r2, r3
9002c9e4:	d1c7      	bne.n	9002c976 <xQueueGenericSend+0x56>
	taskEXIT_CRITICAL();
9002c9e6:	f001 f84b 	bl	9002da80 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9002c9ea:	9901      	ldr	r1, [sp, #4]
9002c9ec:	f104 0010 	add.w	r0, r4, #16
9002c9f0:	f000 fd6a 	bl	9002d4c8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
9002c9f4:	4620      	mov	r0, r4
9002c9f6:	f7ff feb9 	bl	9002c76c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9002c9fa:	f000 fc7b 	bl	9002d2f4 <xTaskResumeAll>
9002c9fe:	2800      	cmp	r0, #0
9002ca00:	d1c0      	bne.n	9002c984 <xQueueGenericSend+0x64>
					portYIELD_WITHIN_API();
9002ca02:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9002ca06:	f8ca 3000 	str.w	r3, [sl]
9002ca0a:	f3bf 8f4f 	dsb	sy
9002ca0e:	f3bf 8f6f 	isb	sy
9002ca12:	e7b7      	b.n	9002c984 <xQueueGenericSend+0x64>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9002ca14:	6c03      	ldr	r3, [r0, #64]	; 0x40
9002ca16:	2b00      	cmp	r3, #0
9002ca18:	d08e      	beq.n	9002c938 <xQueueGenericSend+0x18>
9002ca1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9002ca1e:	b672      	cpsid	i
9002ca20:	f383 8811 	msr	BASEPRI, r3
9002ca24:	f3bf 8f6f 	isb	sy
9002ca28:	f3bf 8f4f 	dsb	sy
9002ca2c:	b662      	cpsie	i
9002ca2e:	e7fe      	b.n	9002ca2e <xQueueGenericSend+0x10e>
					vTaskInternalSetTimeOutState( &xTimeOut );
9002ca30:	a802      	add	r0, sp, #8
9002ca32:	f000 fdb1 	bl	9002d598 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9002ca36:	e7b6      	b.n	9002c9a6 <xQueueGenericSend+0x86>
9002ca38:	f04f 0350 	mov.w	r3, #80	; 0x50
9002ca3c:	b672      	cpsid	i
9002ca3e:	f383 8811 	msr	BASEPRI, r3
9002ca42:	f3bf 8f6f 	isb	sy
9002ca46:	f3bf 8f4f 	dsb	sy
9002ca4a:	b662      	cpsie	i
	configASSERT( pxQueue );
9002ca4c:	e7fe      	b.n	9002ca4c <xQueueGenericSend+0x12c>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9002ca4e:	9b01      	ldr	r3, [sp, #4]
9002ca50:	2b00      	cmp	r3, #0
9002ca52:	d085      	beq.n	9002c960 <xQueueGenericSend+0x40>
9002ca54:	f04f 0350 	mov.w	r3, #80	; 0x50
9002ca58:	b672      	cpsid	i
9002ca5a:	f383 8811 	msr	BASEPRI, r3
9002ca5e:	f3bf 8f6f 	isb	sy
9002ca62:	f3bf 8f4f 	dsb	sy
9002ca66:	b662      	cpsie	i
9002ca68:	e7fe      	b.n	9002ca68 <xQueueGenericSend+0x148>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9002ca6a:	4632      	mov	r2, r6
9002ca6c:	4639      	mov	r1, r7
9002ca6e:	4620      	mov	r0, r4
9002ca70:	f7ff fe28 	bl	9002c6c4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9002ca74:	6a63      	ldr	r3, [r4, #36]	; 0x24
9002ca76:	b973      	cbnz	r3, 9002ca96 <xQueueGenericSend+0x176>
					else if( xYieldRequired != pdFALSE )
9002ca78:	b138      	cbz	r0, 9002ca8a <xQueueGenericSend+0x16a>
						queueYIELD_IF_USING_PREEMPTION();
9002ca7a:	4b10      	ldr	r3, [pc, #64]	; (9002cabc <xQueueGenericSend+0x19c>)
9002ca7c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002ca80:	601a      	str	r2, [r3, #0]
9002ca82:	f3bf 8f4f 	dsb	sy
9002ca86:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9002ca8a:	f000 fff9 	bl	9002da80 <vPortExitCritical>
				return pdPASS;
9002ca8e:	2001      	movs	r0, #1
}
9002ca90:	b004      	add	sp, #16
9002ca92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9002ca96:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002ca9a:	f000 fd31 	bl	9002d500 <xTaskRemoveFromEventList>
9002ca9e:	2800      	cmp	r0, #0
9002caa0:	d0f3      	beq.n	9002ca8a <xQueueGenericSend+0x16a>
9002caa2:	e7ea      	b.n	9002ca7a <xQueueGenericSend+0x15a>
					taskEXIT_CRITICAL();
9002caa4:	f000 ffec 	bl	9002da80 <vPortExitCritical>
					return errQUEUE_FULL;
9002caa8:	4628      	mov	r0, r5
9002caaa:	e7f1      	b.n	9002ca90 <xQueueGenericSend+0x170>
			prvUnlockQueue( pxQueue );
9002caac:	4620      	mov	r0, r4
9002caae:	f7ff fe5d 	bl	9002c76c <prvUnlockQueue>
			( void ) xTaskResumeAll();
9002cab2:	f000 fc1f 	bl	9002d2f4 <xTaskResumeAll>
			return errQUEUE_FULL;
9002cab6:	2000      	movs	r0, #0
9002cab8:	e7ea      	b.n	9002ca90 <xQueueGenericSend+0x170>
9002caba:	bf00      	nop
9002cabc:	e000ed04 	.word	0xe000ed04

9002cac0 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9002cac0:	b380      	cbz	r0, 9002cb24 <xQueueGiveFromISR+0x64>
	configASSERT( pxQueue->uxItemSize == 0 );
9002cac2:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9002cac4:	b570      	push	{r4, r5, r6, lr}
9002cac6:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9002cac8:	b153      	cbz	r3, 9002cae0 <xQueueGiveFromISR+0x20>
9002caca:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cace:	b672      	cpsid	i
9002cad0:	f383 8811 	msr	BASEPRI, r3
9002cad4:	f3bf 8f6f 	isb	sy
9002cad8:	f3bf 8f4f 	dsb	sy
9002cadc:	b662      	cpsie	i
9002cade:	e7fe      	b.n	9002cade <xQueueGiveFromISR+0x1e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9002cae0:	6803      	ldr	r3, [r0, #0]
9002cae2:	460d      	mov	r5, r1
9002cae4:	b34b      	cbz	r3, 9002cb3a <xQueueGiveFromISR+0x7a>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9002cae6:	f001 f8b1 	bl	9002dc4c <vPortValidateInterruptPriority>

portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
{
uint32_t ulOriginalBASEPRI, ulNewBASEPRI;

	__asm volatile
9002caea:	f3ef 8611 	mrs	r6, BASEPRI
9002caee:	f04f 0350 	mov.w	r3, #80	; 0x50
9002caf2:	b672      	cpsid	i
9002caf4:	f383 8811 	msr	BASEPRI, r3
9002caf8:	f3bf 8f6f 	isb	sy
9002cafc:	f3bf 8f4f 	dsb	sy
9002cb00:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9002cb02:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9002cb04:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9002cb06:	429a      	cmp	r2, r3
9002cb08:	d925      	bls.n	9002cb56 <xQueueGiveFromISR+0x96>
			const int8_t cTxLock = pxQueue->cTxLock;
9002cb0a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002cb0e:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9002cb10:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9002cb12:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9002cb14:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9002cb16:	d022      	beq.n	9002cb5e <xQueueGiveFromISR+0x9e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9002cb18:	3301      	adds	r3, #1
			xReturn = pdPASS;
9002cb1a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9002cb1c:	b25b      	sxtb	r3, r3
9002cb1e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9002cb22:	e019      	b.n	9002cb58 <xQueueGiveFromISR+0x98>
	__asm volatile
9002cb24:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cb28:	b672      	cpsid	i
9002cb2a:	f383 8811 	msr	BASEPRI, r3
9002cb2e:	f3bf 8f6f 	isb	sy
9002cb32:	f3bf 8f4f 	dsb	sy
9002cb36:	b662      	cpsie	i
	configASSERT( pxQueue );
9002cb38:	e7fe      	b.n	9002cb38 <xQueueGiveFromISR+0x78>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9002cb3a:	6883      	ldr	r3, [r0, #8]
9002cb3c:	2b00      	cmp	r3, #0
9002cb3e:	d0d2      	beq.n	9002cae6 <xQueueGiveFromISR+0x26>
9002cb40:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cb44:	b672      	cpsid	i
9002cb46:	f383 8811 	msr	BASEPRI, r3
9002cb4a:	f3bf 8f6f 	isb	sy
9002cb4e:	f3bf 8f4f 	dsb	sy
9002cb52:	b662      	cpsie	i
9002cb54:	e7fe      	b.n	9002cb54 <xQueueGiveFromISR+0x94>
			xReturn = errQUEUE_FULL;
9002cb56:	2000      	movs	r0, #0
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9002cb58:	f386 8811 	msr	BASEPRI, r6
}
9002cb5c:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9002cb5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9002cb60:	b90b      	cbnz	r3, 9002cb66 <xQueueGiveFromISR+0xa6>
			xReturn = pdPASS;
9002cb62:	2001      	movs	r0, #1
9002cb64:	e7f8      	b.n	9002cb58 <xQueueGiveFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9002cb66:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002cb6a:	f000 fcc9 	bl	9002d500 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9002cb6e:	2d00      	cmp	r5, #0
9002cb70:	d0f7      	beq.n	9002cb62 <xQueueGiveFromISR+0xa2>
9002cb72:	2800      	cmp	r0, #0
9002cb74:	d0f5      	beq.n	9002cb62 <xQueueGiveFromISR+0xa2>
								*pxHigherPriorityTaskWoken = pdTRUE;
9002cb76:	2001      	movs	r0, #1
9002cb78:	6028      	str	r0, [r5, #0]
9002cb7a:	e7ed      	b.n	9002cb58 <xQueueGiveFromISR+0x98>

9002cb7c <xQueueSemaphoreTake>:
{
9002cb7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002cb80:	b084      	sub	sp, #16
9002cb82:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9002cb84:	b168      	cbz	r0, 9002cba2 <xQueueSemaphoreTake+0x26>
	configASSERT( pxQueue->uxItemSize == 0 );
9002cb86:	6c05      	ldr	r5, [r0, #64]	; 0x40
9002cb88:	4604      	mov	r4, r0
9002cb8a:	b1ad      	cbz	r5, 9002cbb8 <xQueueSemaphoreTake+0x3c>
	__asm volatile
9002cb8c:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cb90:	b672      	cpsid	i
9002cb92:	f383 8811 	msr	BASEPRI, r3
9002cb96:	f3bf 8f6f 	isb	sy
9002cb9a:	f3bf 8f4f 	dsb	sy
9002cb9e:	b662      	cpsie	i
9002cba0:	e7fe      	b.n	9002cba0 <xQueueSemaphoreTake+0x24>
9002cba2:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cba6:	b672      	cpsid	i
9002cba8:	f383 8811 	msr	BASEPRI, r3
9002cbac:	f3bf 8f6f 	isb	sy
9002cbb0:	f3bf 8f4f 	dsb	sy
9002cbb4:	b662      	cpsie	i
	configASSERT( ( pxQueue ) );
9002cbb6:	e7fe      	b.n	9002cbb6 <xQueueSemaphoreTake+0x3a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9002cbb8:	f000 fd52 	bl	9002d660 <xTaskGetSchedulerState>
9002cbbc:	4606      	mov	r6, r0
9002cbbe:	2800      	cmp	r0, #0
9002cbc0:	d074      	beq.n	9002ccac <xQueueSemaphoreTake+0x130>
9002cbc2:	462e      	mov	r6, r5
		taskENTER_CRITICAL();
9002cbc4:	f000 ff36 	bl	9002da34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9002cbc8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		prvLockQueue( pxQueue );
9002cbca:	2700      	movs	r7, #0
					portYIELD_WITHIN_API();
9002cbcc:	f8df 816c 	ldr.w	r8, [pc, #364]	; 9002cd3c <xQueueSemaphoreTake+0x1c0>
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9002cbd0:	bb7b      	cbnz	r3, 9002cc32 <xQueueSemaphoreTake+0xb6>
				if( xTicksToWait == ( TickType_t ) 0 )
9002cbd2:	9b01      	ldr	r3, [sp, #4]
9002cbd4:	2b00      	cmp	r3, #0
9002cbd6:	f000 80a3 	beq.w	9002cd20 <xQueueSemaphoreTake+0x1a4>
				else if( xEntryTimeSet == pdFALSE )
9002cbda:	2e00      	cmp	r6, #0
9002cbdc:	d062      	beq.n	9002cca4 <xQueueSemaphoreTake+0x128>
		taskEXIT_CRITICAL();
9002cbde:	f000 ff4f 	bl	9002da80 <vPortExitCritical>
		vTaskSuspendAll();
9002cbe2:	f000 fb7f 	bl	9002d2e4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9002cbe6:	f000 ff25 	bl	9002da34 <vPortEnterCritical>
9002cbea:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9002cbee:	2bff      	cmp	r3, #255	; 0xff
9002cbf0:	d101      	bne.n	9002cbf6 <xQueueSemaphoreTake+0x7a>
9002cbf2:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
9002cbf6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9002cbfa:	2bff      	cmp	r3, #255	; 0xff
9002cbfc:	d101      	bne.n	9002cc02 <xQueueSemaphoreTake+0x86>
9002cbfe:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002cc02:	f000 ff3d 	bl	9002da80 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9002cc06:	a901      	add	r1, sp, #4
9002cc08:	a802      	add	r0, sp, #8
9002cc0a:	f000 fcd1 	bl	9002d5b0 <xTaskCheckForTimeOut>
9002cc0e:	b9e0      	cbnz	r0, 9002cc4a <xQueueSemaphoreTake+0xce>
	taskENTER_CRITICAL();
9002cc10:	f000 ff10 	bl	9002da34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9002cc14:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9002cc16:	b323      	cbz	r3, 9002cc62 <xQueueSemaphoreTake+0xe6>
	taskEXIT_CRITICAL();
9002cc18:	f000 ff32 	bl	9002da80 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
9002cc1c:	4620      	mov	r0, r4
9002cc1e:	f7ff fda5 	bl	9002c76c <prvUnlockQueue>
				( void ) xTaskResumeAll();
9002cc22:	f000 fb67 	bl	9002d2f4 <xTaskResumeAll>
		taskENTER_CRITICAL();
9002cc26:	f000 ff05 	bl	9002da34 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9002cc2a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9002cc2c:	2601      	movs	r6, #1
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9002cc2e:	2b00      	cmp	r3, #0
9002cc30:	d0cf      	beq.n	9002cbd2 <xQueueSemaphoreTake+0x56>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9002cc32:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9002cc34:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9002cc36:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9002cc38:	2a00      	cmp	r2, #0
9002cc3a:	d064      	beq.n	9002cd06 <xQueueSemaphoreTake+0x18a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9002cc3c:	6923      	ldr	r3, [r4, #16]
9002cc3e:	2b00      	cmp	r3, #0
9002cc40:	d152      	bne.n	9002cce8 <xQueueSemaphoreTake+0x16c>
				return pdPASS;
9002cc42:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
9002cc44:	f000 ff1c 	bl	9002da80 <vPortExitCritical>
				return pdPASS;
9002cc48:	e028      	b.n	9002cc9c <xQueueSemaphoreTake+0x120>
			prvUnlockQueue( pxQueue );
9002cc4a:	4620      	mov	r0, r4
9002cc4c:	f7ff fd8e 	bl	9002c76c <prvUnlockQueue>
			( void ) xTaskResumeAll();
9002cc50:	f000 fb50 	bl	9002d2f4 <xTaskResumeAll>
	taskENTER_CRITICAL();
9002cc54:	f000 feee 	bl	9002da34 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9002cc58:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9002cc5a:	b1e3      	cbz	r3, 9002cc96 <xQueueSemaphoreTake+0x11a>
	taskEXIT_CRITICAL();
9002cc5c:	f000 ff10 	bl	9002da80 <vPortExitCritical>
	return xReturn;
9002cc60:	e7e1      	b.n	9002cc26 <xQueueSemaphoreTake+0xaa>
	taskEXIT_CRITICAL();
9002cc62:	f000 ff0d 	bl	9002da80 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9002cc66:	6823      	ldr	r3, [r4, #0]
9002cc68:	2b00      	cmp	r3, #0
9002cc6a:	d050      	beq.n	9002cd0e <xQueueSemaphoreTake+0x192>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9002cc6c:	9901      	ldr	r1, [sp, #4]
9002cc6e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9002cc72:	f000 fc29 	bl	9002d4c8 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
9002cc76:	4620      	mov	r0, r4
9002cc78:	f7ff fd78 	bl	9002c76c <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
9002cc7c:	f000 fb3a 	bl	9002d2f4 <xTaskResumeAll>
9002cc80:	2800      	cmp	r0, #0
9002cc82:	d1d0      	bne.n	9002cc26 <xQueueSemaphoreTake+0xaa>
					portYIELD_WITHIN_API();
9002cc84:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9002cc88:	f8c8 3000 	str.w	r3, [r8]
9002cc8c:	f3bf 8f4f 	dsb	sy
9002cc90:	f3bf 8f6f 	isb	sy
9002cc94:	e7c7      	b.n	9002cc26 <xQueueSemaphoreTake+0xaa>
	taskEXIT_CRITICAL();
9002cc96:	f000 fef3 	bl	9002da80 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9002cc9a:	b9b5      	cbnz	r5, 9002ccca <xQueueSemaphoreTake+0x14e>
}
9002cc9c:	4628      	mov	r0, r5
9002cc9e:	b004      	add	sp, #16
9002cca0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					vTaskInternalSetTimeOutState( &xTimeOut );
9002cca4:	a802      	add	r0, sp, #8
9002cca6:	f000 fc77 	bl	9002d598 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9002ccaa:	e798      	b.n	9002cbde <xQueueSemaphoreTake+0x62>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9002ccac:	9b01      	ldr	r3, [sp, #4]
9002ccae:	b153      	cbz	r3, 9002ccc6 <xQueueSemaphoreTake+0x14a>
9002ccb0:	f04f 0350 	mov.w	r3, #80	; 0x50
9002ccb4:	b672      	cpsid	i
9002ccb6:	f383 8811 	msr	BASEPRI, r3
9002ccba:	f3bf 8f6f 	isb	sy
9002ccbe:	f3bf 8f4f 	dsb	sy
9002ccc2:	b662      	cpsie	i
9002ccc4:	e7fe      	b.n	9002ccc4 <xQueueSemaphoreTake+0x148>
9002ccc6:	4605      	mov	r5, r0
9002ccc8:	e77c      	b.n	9002cbc4 <xQueueSemaphoreTake+0x48>
						taskENTER_CRITICAL();
9002ccca:	f000 feb3 	bl	9002da34 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9002ccce:	6a61      	ldr	r1, [r4, #36]	; 0x24
9002ccd0:	b119      	cbz	r1, 9002ccda <xQueueSemaphoreTake+0x15e>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9002ccd2:	6b23      	ldr	r3, [r4, #48]	; 0x30
9002ccd4:	6819      	ldr	r1, [r3, #0]
9002ccd6:	f1c1 0107 	rsb	r1, r1, #7
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9002ccda:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9002ccdc:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9002ccde:	f000 fd7f 	bl	9002d7e0 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9002cce2:	f000 fecd 	bl	9002da80 <vPortExitCritical>
9002cce6:	e7d9      	b.n	9002cc9c <xQueueSemaphoreTake+0x120>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002cce8:	f104 0010 	add.w	r0, r4, #16
9002ccec:	f000 fc08 	bl	9002d500 <xTaskRemoveFromEventList>
9002ccf0:	2800      	cmp	r0, #0
9002ccf2:	d0a6      	beq.n	9002cc42 <xQueueSemaphoreTake+0xc6>
						queueYIELD_IF_USING_PREEMPTION();
9002ccf4:	4b11      	ldr	r3, [pc, #68]	; (9002cd3c <xQueueSemaphoreTake+0x1c0>)
9002ccf6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002ccfa:	601a      	str	r2, [r3, #0]
9002ccfc:	f3bf 8f4f 	dsb	sy
9002cd00:	f3bf 8f6f 	isb	sy
9002cd04:	e79d      	b.n	9002cc42 <xQueueSemaphoreTake+0xc6>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9002cd06:	f000 fdcd 	bl	9002d8a4 <pvTaskIncrementMutexHeldCount>
9002cd0a:	60a0      	str	r0, [r4, #8]
9002cd0c:	e796      	b.n	9002cc3c <xQueueSemaphoreTake+0xc0>
						taskENTER_CRITICAL();
9002cd0e:	f000 fe91 	bl	9002da34 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9002cd12:	68a0      	ldr	r0, [r4, #8]
9002cd14:	f000 fcb4 	bl	9002d680 <xTaskPriorityInherit>
9002cd18:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
9002cd1a:	f000 feb1 	bl	9002da80 <vPortExitCritical>
9002cd1e:	e7a5      	b.n	9002cc6c <xQueueSemaphoreTake+0xf0>
						configASSERT( xInheritanceOccurred == pdFALSE );
9002cd20:	2d00      	cmp	r5, #0
9002cd22:	d0de      	beq.n	9002cce2 <xQueueSemaphoreTake+0x166>
9002cd24:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cd28:	b672      	cpsid	i
9002cd2a:	f383 8811 	msr	BASEPRI, r3
9002cd2e:	f3bf 8f6f 	isb	sy
9002cd32:	f3bf 8f4f 	dsb	sy
9002cd36:	b662      	cpsie	i
9002cd38:	e7fe      	b.n	9002cd38 <xQueueSemaphoreTake+0x1bc>
9002cd3a:	bf00      	nop
9002cd3c:	e000ed04 	.word	0xe000ed04

9002cd40 <xQueueReceiveFromISR>:
{
9002cd40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9002cd44:	b330      	cbz	r0, 9002cd94 <xQueueReceiveFromISR+0x54>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9002cd46:	4689      	mov	r9, r1
9002cd48:	4605      	mov	r5, r0
9002cd4a:	4690      	mov	r8, r2
9002cd4c:	b1a1      	cbz	r1, 9002cd78 <xQueueReceiveFromISR+0x38>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9002cd4e:	f000 ff7d 	bl	9002dc4c <vPortValidateInterruptPriority>
	__asm volatile
9002cd52:	f3ef 8711 	mrs	r7, BASEPRI
9002cd56:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cd5a:	b672      	cpsid	i
9002cd5c:	f383 8811 	msr	BASEPRI, r3
9002cd60:	f3bf 8f6f 	isb	sy
9002cd64:	f3bf 8f4f 	dsb	sy
9002cd68:	b662      	cpsie	i
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9002cd6a:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9002cd6c:	b9ec      	cbnz	r4, 9002cdaa <xQueueReceiveFromISR+0x6a>
			xReturn = pdFAIL;
9002cd6e:	4620      	mov	r0, r4
	__asm volatile
9002cd70:	f387 8811 	msr	BASEPRI, r7
}
9002cd74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9002cd78:	6c03      	ldr	r3, [r0, #64]	; 0x40
9002cd7a:	2b00      	cmp	r3, #0
9002cd7c:	d0e7      	beq.n	9002cd4e <xQueueReceiveFromISR+0xe>
	__asm volatile
9002cd7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cd82:	b672      	cpsid	i
9002cd84:	f383 8811 	msr	BASEPRI, r3
9002cd88:	f3bf 8f6f 	isb	sy
9002cd8c:	f3bf 8f4f 	dsb	sy
9002cd90:	b662      	cpsie	i
9002cd92:	e7fe      	b.n	9002cd92 <xQueueReceiveFromISR+0x52>
9002cd94:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cd98:	b672      	cpsid	i
9002cd9a:	f383 8811 	msr	BASEPRI, r3
9002cd9e:	f3bf 8f6f 	isb	sy
9002cda2:	f3bf 8f4f 	dsb	sy
9002cda6:	b662      	cpsie	i
	configASSERT( pxQueue );
9002cda8:	e7fe      	b.n	9002cda8 <xQueueReceiveFromISR+0x68>
			const int8_t cRxLock = pxQueue->cRxLock;
9002cdaa:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
9002cdae:	4649      	mov	r1, r9
9002cdb0:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9002cdb2:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
9002cdb4:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
9002cdb6:	f7ff fcc7 	bl	9002c748 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9002cdba:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9002cdbc:	1c73      	adds	r3, r6, #1
9002cdbe:	d008      	beq.n	9002cdd2 <xQueueReceiveFromISR+0x92>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9002cdc0:	1c72      	adds	r2, r6, #1
			xReturn = pdPASS;
9002cdc2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9002cdc4:	b252      	sxtb	r2, r2
9002cdc6:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
	__asm volatile
9002cdca:	f387 8811 	msr	BASEPRI, r7
}
9002cdce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9002cdd2:	692b      	ldr	r3, [r5, #16]
9002cdd4:	b90b      	cbnz	r3, 9002cdda <xQueueReceiveFromISR+0x9a>
			xReturn = pdPASS;
9002cdd6:	2001      	movs	r0, #1
9002cdd8:	e7ca      	b.n	9002cd70 <xQueueReceiveFromISR+0x30>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9002cdda:	f105 0010 	add.w	r0, r5, #16
9002cdde:	f000 fb8f 	bl	9002d500 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9002cde2:	f1b8 0f00 	cmp.w	r8, #0
9002cde6:	d0f6      	beq.n	9002cdd6 <xQueueReceiveFromISR+0x96>
9002cde8:	2800      	cmp	r0, #0
9002cdea:	d0f4      	beq.n	9002cdd6 <xQueueReceiveFromISR+0x96>
							*pxHigherPriorityTaskWoken = pdTRUE;
9002cdec:	2001      	movs	r0, #1
9002cdee:	f8c8 0000 	str.w	r0, [r8]
9002cdf2:	e7bd      	b.n	9002cd70 <xQueueReceiveFromISR+0x30>

9002cdf4 <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
9002cdf4:	b580      	push	{r7, lr}
9002cdf6:	4c16      	ldr	r4, [pc, #88]	; (9002ce50 <prvIdleTask+0x5c>)
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
			{
				taskYIELD();
9002cdf8:	f04f 5a80 	mov.w	sl, #268435456	; 0x10000000
9002cdfc:	4f15      	ldr	r7, [pc, #84]	; (9002ce54 <prvIdleTask+0x60>)
9002cdfe:	4e16      	ldr	r6, [pc, #88]	; (9002ce58 <prvIdleTask+0x64>)
9002ce00:	f8df 8058 	ldr.w	r8, [pc, #88]	; 9002ce5c <prvIdleTask+0x68>
9002ce04:	f8df 9058 	ldr.w	r9, [pc, #88]	; 9002ce60 <prvIdleTask+0x6c>
9002ce08:	e014      	b.n	9002ce34 <prvIdleTask+0x40>

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
		{
			taskENTER_CRITICAL();
9002ce0a:	f000 fe13 	bl	9002da34 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002ce0e:	68fb      	ldr	r3, [r7, #12]
9002ce10:	68dd      	ldr	r5, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002ce12:	1d28      	adds	r0, r5, #4
9002ce14:	f7ff fc42 	bl	9002c69c <uxListRemove>
				--uxCurrentNumberOfTasks;
9002ce18:	6833      	ldr	r3, [r6, #0]
9002ce1a:	3b01      	subs	r3, #1
9002ce1c:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
9002ce1e:	6823      	ldr	r3, [r4, #0]
9002ce20:	3b01      	subs	r3, #1
9002ce22:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9002ce24:	f000 fe2c 	bl	9002da80 <vPortExitCritical>

		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( portUSING_MPU_WRAPPERS == 0 ) )
		{
			/* The task can only have been allocated dynamically - free both
			the stack and TCB. */
			vPortFree( pxTCB->pxStack );
9002ce28:	6b28      	ldr	r0, [r5, #48]	; 0x30
9002ce2a:	f001 f815 	bl	9002de58 <vPortFree>
			vPortFree( pxTCB );
9002ce2e:	4628      	mov	r0, r5
9002ce30:	f001 f812 	bl	9002de58 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9002ce34:	6823      	ldr	r3, [r4, #0]
9002ce36:	2b00      	cmp	r3, #0
9002ce38:	d1e7      	bne.n	9002ce0a <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9002ce3a:	f8d8 3000 	ldr.w	r3, [r8]
9002ce3e:	2b01      	cmp	r3, #1
9002ce40:	d9f8      	bls.n	9002ce34 <prvIdleTask+0x40>
				taskYIELD();
9002ce42:	f8c9 a000 	str.w	sl, [r9]
9002ce46:	f3bf 8f4f 	dsb	sy
9002ce4a:	f3bf 8f6f 	isb	sy
9002ce4e:	e7f1      	b.n	9002ce34 <prvIdleTask+0x40>
9002ce50:	20000fbc 	.word	0x20000fbc
9002ce54:	20001030 	.word	0x20001030
9002ce58:	20000fb8 	.word	0x20000fb8
9002ce5c:	20000f2c 	.word	0x20000f2c
9002ce60:	e000ed04 	.word	0xe000ed04

9002ce64 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
9002ce64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9002ce66:	4b1b      	ldr	r3, [pc, #108]	; (9002ced4 <prvAddCurrentTaskToDelayedList+0x70>)
{
9002ce68:	4604      	mov	r4, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002ce6a:	4e1b      	ldr	r6, [pc, #108]	; (9002ced8 <prvAddCurrentTaskToDelayedList+0x74>)
{
9002ce6c:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
9002ce6e:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002ce70:	6830      	ldr	r0, [r6, #0]
9002ce72:	3004      	adds	r0, #4
9002ce74:	f7ff fc12 	bl	9002c69c <uxListRemove>
9002ce78:	b940      	cbnz	r0, 9002ce8c <prvAddCurrentTaskToDelayedList+0x28>
	{
		/* The current task must be in a ready list, so there is no need to
		check, and the port reset macro can be called directly. */
		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentTCB cannot change as it is the calling task.  pxCurrentTCB->uxPriority and uxTopReadyPriority cannot change as called with scheduler suspended or in a critical section. */
9002ce7a:	6833      	ldr	r3, [r6, #0]
9002ce7c:	2201      	movs	r2, #1
9002ce7e:	4917      	ldr	r1, [pc, #92]	; (9002cedc <prvAddCurrentTaskToDelayedList+0x78>)
9002ce80:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
9002ce82:	680b      	ldr	r3, [r1, #0]
9002ce84:	4082      	lsls	r2, r0
9002ce86:	ea23 0302 	bic.w	r3, r3, r2
9002ce8a:	600b      	str	r3, [r1, #0]
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9002ce8c:	1c62      	adds	r2, r4, #1
9002ce8e:	d101      	bne.n	9002ce94 <prvAddCurrentTaskToDelayedList+0x30>
9002ce90:	07fb      	lsls	r3, r7, #31
9002ce92:	d417      	bmi.n	9002cec4 <prvAddCurrentTaskToDelayedList+0x60>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9002ce94:	192c      	adds	r4, r5, r4

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9002ce96:	6833      	ldr	r3, [r6, #0]
9002ce98:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9002ce9a:	d307      	bcc.n	9002ceac <prvAddCurrentTaskToDelayedList+0x48>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9002ce9c:	4b10      	ldr	r3, [pc, #64]	; (9002cee0 <prvAddCurrentTaskToDelayedList+0x7c>)
9002ce9e:	6818      	ldr	r0, [r3, #0]
9002cea0:	6831      	ldr	r1, [r6, #0]

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
9002cea2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9002cea6:	3104      	adds	r1, #4
9002cea8:	f7ff bbe0 	b.w	9002c66c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9002ceac:	4b0d      	ldr	r3, [pc, #52]	; (9002cee4 <prvAddCurrentTaskToDelayedList+0x80>)
9002ceae:	6818      	ldr	r0, [r3, #0]
9002ceb0:	6831      	ldr	r1, [r6, #0]
9002ceb2:	3104      	adds	r1, #4
9002ceb4:	f7ff fbda 	bl	9002c66c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9002ceb8:	4b0b      	ldr	r3, [pc, #44]	; (9002cee8 <prvAddCurrentTaskToDelayedList+0x84>)
9002ceba:	681a      	ldr	r2, [r3, #0]
9002cebc:	42a2      	cmp	r2, r4
9002cebe:	d900      	bls.n	9002cec2 <prvAddCurrentTaskToDelayedList+0x5e>
					xNextTaskUnblockTime = xTimeToWake;
9002cec0:	601c      	str	r4, [r3, #0]
}
9002cec2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9002cec4:	6831      	ldr	r1, [r6, #0]
9002cec6:	4809      	ldr	r0, [pc, #36]	; (9002ceec <prvAddCurrentTaskToDelayedList+0x88>)
9002cec8:	3104      	adds	r1, #4
}
9002ceca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9002cece:	f7ff bbbd 	b.w	9002c64c <vListInsertEnd>
9002ced2:	bf00      	nop
9002ced4:	20001044 	.word	0x20001044
9002ced8:	20000f20 	.word	0x20000f20
9002cedc:	20000fc8 	.word	0x20000fc8
9002cee0:	20000f28 	.word	0x20000f28
9002cee4:	20000f24 	.word	0x20000f24
9002cee8:	20000ff8 	.word	0x20000ff8
9002ceec:	2000101c 	.word	0x2000101c

9002cef0 <prvResetNextTaskUnblockTime.part.0>:
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002cef0:	4a03      	ldr	r2, [pc, #12]	; (9002cf00 <prvResetNextTaskUnblockTime.part.0+0x10>)
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9002cef2:	4b04      	ldr	r3, [pc, #16]	; (9002cf04 <prvResetNextTaskUnblockTime.part.0+0x14>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002cef4:	6812      	ldr	r2, [r2, #0]
9002cef6:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9002cef8:	68d2      	ldr	r2, [r2, #12]
9002cefa:	6852      	ldr	r2, [r2, #4]
9002cefc:	601a      	str	r2, [r3, #0]
}
9002cefe:	4770      	bx	lr
9002cf00:	20000f24 	.word	0x20000f24
9002cf04:	20000ff8 	.word	0x20000ff8

9002cf08 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9002cf08:	4b48      	ldr	r3, [pc, #288]	; (9002d02c <xTaskIncrementTick.part.0+0x124>)
BaseType_t xTaskIncrementTick( void )
9002cf0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9002cf0e:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9002cf10:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9002cf12:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9002cf14:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9002cf16:	2e00      	cmp	r6, #0
9002cf18:	d047      	beq.n	9002cfaa <xTaskIncrementTick.part.0+0xa2>
9002cf1a:	4d45      	ldr	r5, [pc, #276]	; (9002d030 <xTaskIncrementTick.part.0+0x128>)
		if( xConstTickCount >= xNextTaskUnblockTime )
9002cf1c:	682b      	ldr	r3, [r5, #0]
9002cf1e:	429e      	cmp	r6, r3
9002cf20:	d352      	bcc.n	9002cfc8 <xTaskIncrementTick.part.0+0xc0>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002cf22:	f8df 9114 	ldr.w	r9, [pc, #276]	; 9002d038 <xTaskIncrementTick.part.0+0x130>
9002cf26:	f8d9 3000 	ldr.w	r3, [r9]
9002cf2a:	681c      	ldr	r4, [r3, #0]
9002cf2c:	2c00      	cmp	r4, #0
9002cf2e:	d076      	beq.n	9002d01e <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9002cf30:	2400      	movs	r4, #0
9002cf32:	4f40      	ldr	r7, [pc, #256]	; (9002d034 <xTaskIncrementTick.part.0+0x12c>)
9002cf34:	f8df 8110 	ldr.w	r8, [pc, #272]	; 9002d048 <xTaskIncrementTick.part.0+0x140>
					prvAddTaskToReadyList( pxTCB );
9002cf38:	f8df a110 	ldr.w	sl, [pc, #272]	; 9002d04c <xTaskIncrementTick.part.0+0x144>
9002cf3c:	e027      	b.n	9002cf8e <xTaskIncrementTick.part.0+0x86>
9002cf3e:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002cf40:	f7ff fbac 	bl	9002c69c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9002cf44:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9002cf48:	f10b 0018 	add.w	r0, fp, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9002cf4c:	9901      	ldr	r1, [sp, #4]
9002cf4e:	b112      	cbz	r2, 9002cf56 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9002cf50:	f7ff fba4 	bl	9002c69c <uxListRemove>
9002cf54:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9002cf56:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
9002cf5a:	2201      	movs	r2, #1
9002cf5c:	f8da 3000 	ldr.w	r3, [sl]
9002cf60:	4082      	lsls	r2, r0
9002cf62:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002cf66:	431a      	orrs	r2, r3
9002cf68:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9002cf6c:	f8ca 2000 	str.w	r2, [sl]
9002cf70:	f7ff fb6c 	bl	9002c64c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9002cf74:	f8d8 2000 	ldr.w	r2, [r8]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002cf78:	f8d9 0000 	ldr.w	r0, [r9]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9002cf7c:	f8db 102c 	ldr.w	r1, [fp, #44]	; 0x2c
9002cf80:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002cf82:	6803      	ldr	r3, [r0, #0]
							xSwitchRequired = pdTRUE;
9002cf84:	4291      	cmp	r1, r2
9002cf86:	bf28      	it	cs
9002cf88:	2401      	movcs	r4, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002cf8a:	2b00      	cmp	r3, #0
9002cf8c:	d04a      	beq.n	9002d024 <xTaskIncrementTick.part.0+0x11c>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002cf8e:	f8d9 3000 	ldr.w	r3, [r9]
9002cf92:	68db      	ldr	r3, [r3, #12]
9002cf94:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9002cf98:	f8db 2004 	ldr.w	r2, [fp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002cf9c:	f10b 0104 	add.w	r1, fp, #4
					if( xConstTickCount < xItemValue )
9002cfa0:	4296      	cmp	r6, r2
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002cfa2:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9002cfa4:	d2cb      	bcs.n	9002cf3e <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9002cfa6:	602a      	str	r2, [r5, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9002cfa8:	e012      	b.n	9002cfd0 <xTaskIncrementTick.part.0+0xc8>
			taskSWITCH_DELAYED_LISTS();
9002cfaa:	4b23      	ldr	r3, [pc, #140]	; (9002d038 <xTaskIncrementTick.part.0+0x130>)
9002cfac:	681a      	ldr	r2, [r3, #0]
9002cfae:	6812      	ldr	r2, [r2, #0]
9002cfb0:	b30a      	cbz	r2, 9002cff6 <xTaskIncrementTick.part.0+0xee>
	__asm volatile
9002cfb2:	f04f 0350 	mov.w	r3, #80	; 0x50
9002cfb6:	b672      	cpsid	i
9002cfb8:	f383 8811 	msr	BASEPRI, r3
9002cfbc:	f3bf 8f6f 	isb	sy
9002cfc0:	f3bf 8f4f 	dsb	sy
9002cfc4:	b662      	cpsie	i
9002cfc6:	e7fe      	b.n	9002cfc6 <xTaskIncrementTick.part.0+0xbe>
BaseType_t xSwitchRequired = pdFALSE;
9002cfc8:	2400      	movs	r4, #0
9002cfca:	4f1a      	ldr	r7, [pc, #104]	; (9002d034 <xTaskIncrementTick.part.0+0x12c>)
9002cfcc:	f8df 8078 	ldr.w	r8, [pc, #120]	; 9002d048 <xTaskIncrementTick.part.0+0x140>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9002cfd0:	f8d8 3000 	ldr.w	r3, [r8]
			if( xYieldPending != pdFALSE )
9002cfd4:	4919      	ldr	r1, [pc, #100]	; (9002d03c <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9002cfd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002cfd8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9002cfdc:	009b      	lsls	r3, r3, #2
9002cfde:	58fa      	ldr	r2, [r7, r3]
			if( xYieldPending != pdFALSE )
9002cfe0:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9002cfe2:	2a02      	cmp	r2, #2
9002cfe4:	bf28      	it	cs
9002cfe6:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
9002cfe8:	2b00      	cmp	r3, #0
}
9002cfea:	bf0c      	ite	eq
9002cfec:	4620      	moveq	r0, r4
9002cfee:	2001      	movne	r0, #1
9002cff0:	b003      	add	sp, #12
9002cff2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9002cff6:	4a12      	ldr	r2, [pc, #72]	; (9002d040 <xTaskIncrementTick.part.0+0x138>)
9002cff8:	6818      	ldr	r0, [r3, #0]
9002cffa:	4912      	ldr	r1, [pc, #72]	; (9002d044 <xTaskIncrementTick.part.0+0x13c>)
9002cffc:	6814      	ldr	r4, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
9002cffe:	4d0c      	ldr	r5, [pc, #48]	; (9002d030 <xTaskIncrementTick.part.0+0x128>)
			taskSWITCH_DELAYED_LISTS();
9002d000:	601c      	str	r4, [r3, #0]
9002d002:	6010      	str	r0, [r2, #0]
9002d004:	680a      	ldr	r2, [r1, #0]
9002d006:	3201      	adds	r2, #1
9002d008:	600a      	str	r2, [r1, #0]
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002d00a:	681b      	ldr	r3, [r3, #0]
9002d00c:	681b      	ldr	r3, [r3, #0]
9002d00e:	b91b      	cbnz	r3, 9002d018 <xTaskIncrementTick.part.0+0x110>
		xNextTaskUnblockTime = portMAX_DELAY;
9002d010:	f04f 33ff 	mov.w	r3, #4294967295
9002d014:	602b      	str	r3, [r5, #0]
9002d016:	e781      	b.n	9002cf1c <xTaskIncrementTick.part.0+0x14>
9002d018:	f7ff ff6a 	bl	9002cef0 <prvResetNextTaskUnblockTime.part.0>
9002d01c:	e77e      	b.n	9002cf1c <xTaskIncrementTick.part.0+0x14>
9002d01e:	4f05      	ldr	r7, [pc, #20]	; (9002d034 <xTaskIncrementTick.part.0+0x12c>)
9002d020:	f8df 8024 	ldr.w	r8, [pc, #36]	; 9002d048 <xTaskIncrementTick.part.0+0x140>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d024:	f04f 33ff 	mov.w	r3, #4294967295
9002d028:	602b      	str	r3, [r5, #0]
					break;
9002d02a:	e7d1      	b.n	9002cfd0 <xTaskIncrementTick.part.0+0xc8>
9002d02c:	20001044 	.word	0x20001044
9002d030:	20000ff8 	.word	0x20000ff8
9002d034:	20000f2c 	.word	0x20000f2c
9002d038:	20000f24 	.word	0x20000f24
9002d03c:	20001048 	.word	0x20001048
9002d040:	20000f28 	.word	0x20000f28
9002d044:	20000ffc 	.word	0x20000ffc
9002d048:	20000f20 	.word	0x20000f20
9002d04c:	20000fc8 	.word	0x20000fc8

9002d050 <xTaskCreate>:
	{
9002d050:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9002d054:	0096      	lsls	r6, r2, #2
	{
9002d056:	4680      	mov	r8, r0
9002d058:	460d      	mov	r5, r1
9002d05a:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9002d05c:	4630      	mov	r0, r6
9002d05e:	f000 fe57 	bl	9002dd10 <pvPortMalloc>
			if( pxStack != NULL )
9002d062:	2800      	cmp	r0, #0
9002d064:	f000 8087 	beq.w	9002d176 <xTaskCreate+0x126>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9002d068:	4607      	mov	r7, r0
9002d06a:	205c      	movs	r0, #92	; 0x5c
9002d06c:	f000 fe50 	bl	9002dd10 <pvPortMalloc>
				if( pxNewTCB != NULL )
9002d070:	4604      	mov	r4, r0
9002d072:	2800      	cmp	r0, #0
9002d074:	f000 808a 	beq.w	9002d18c <xTaskCreate+0x13c>
					pxNewTCB->pxStack = pxStack;
9002d078:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9002d07a:	4632      	mov	r2, r6
9002d07c:	4638      	mov	r0, r7
9002d07e:	21a5      	movs	r1, #165	; 0xa5
9002d080:	f000 ffa2 	bl	9002dfc8 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9002d084:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9002d088:	2d00      	cmp	r5, #0
9002d08a:	f000 8088 	beq.w	9002d19e <xTaskCreate+0x14e>
9002d08e:	1e6f      	subs	r7, r5, #1
9002d090:	f104 0333 	add.w	r3, r4, #51	; 0x33
9002d094:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9002d096:	f817 2f01 	ldrb.w	r2, [r7, #1]!
9002d09a:	f803 2f01 	strb.w	r2, [r3, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
9002d09e:	783a      	ldrb	r2, [r7, #0]
9002d0a0:	b10a      	cbz	r2, 9002d0a6 <xTaskCreate+0x56>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
9002d0a2:	42af      	cmp	r7, r5
9002d0a4:	d1f7      	bne.n	9002d096 <xTaskCreate+0x46>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9002d0a6:	2300      	movs	r3, #0
9002d0a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9002d0ac:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9002d0ae:	f04f 0b00 	mov.w	fp, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9002d0b2:	1d27      	adds	r7, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9002d0b4:	3e04      	subs	r6, #4
9002d0b6:	2d06      	cmp	r5, #6
		pxNewTCB->uxMutexesHeld = 0;
9002d0b8:	f8c4 b050 	str.w	fp, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9002d0bc:	4638      	mov	r0, r7
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9002d0be:	4456      	add	r6, sl
9002d0c0:	bf28      	it	cs
9002d0c2:	2506      	movcs	r5, #6
	pxNewTCB->uxPriority = uxPriority;
9002d0c4:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9002d0c6:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d0c8:	f1c5 0507 	rsb	r5, r5, #7
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9002d0cc:	f7ff faba 	bl	9002c644 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9002d0d0:	f104 0018 	add.w	r0, r4, #24
9002d0d4:	f7ff fab6 	bl	9002c644 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9002d0d8:	f8c4 b054 	str.w	fp, [r4, #84]	; 0x54
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9002d0dc:	464a      	mov	r2, r9
9002d0de:	f026 0007 	bic.w	r0, r6, #7
9002d0e2:	4641      	mov	r1, r8
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9002d0e4:	f884 b058 	strb.w	fp, [r4, #88]	; 0x58
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d0e8:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9002d0ea:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9002d0ec:	6264      	str	r4, [r4, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9002d0ee:	f000 fc73 	bl	9002d9d8 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9002d0f2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9002d0f4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9002d0f6:	b103      	cbz	r3, 9002d0fa <xTaskCreate+0xaa>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9002d0f8:	601c      	str	r4, [r3, #0]
	taskENTER_CRITICAL();
9002d0fa:	f000 fc9b 	bl	9002da34 <vPortEnterCritical>
		uxCurrentNumberOfTasks++;
9002d0fe:	4a45      	ldr	r2, [pc, #276]	; (9002d214 <xTaskCreate+0x1c4>)
		if( pxCurrentTCB == NULL )
9002d100:	4e45      	ldr	r6, [pc, #276]	; (9002d218 <xTaskCreate+0x1c8>)
		uxCurrentNumberOfTasks++;
9002d102:	6813      	ldr	r3, [r2, #0]
9002d104:	3301      	adds	r3, #1
9002d106:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9002d108:	6833      	ldr	r3, [r6, #0]
9002d10a:	2b00      	cmp	r3, #0
9002d10c:	d04a      	beq.n	9002d1a4 <xTaskCreate+0x154>
			if( xSchedulerRunning == pdFALSE )
9002d10e:	f8df 8144 	ldr.w	r8, [pc, #324]	; 9002d254 <xTaskCreate+0x204>
9002d112:	f8d8 3000 	ldr.w	r3, [r8]
9002d116:	b393      	cbz	r3, 9002d17e <xTaskCreate+0x12e>
9002d118:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
		uxTaskNumber++;
9002d11a:	f8df e13c 	ldr.w	lr, [pc, #316]	; 9002d258 <xTaskCreate+0x208>
		prvAddTaskToReadyList( pxNewTCB );
9002d11e:	2501      	movs	r5, #1
9002d120:	f8df c138 	ldr.w	ip, [pc, #312]	; 9002d25c <xTaskCreate+0x20c>
9002d124:	4639      	mov	r1, r7
		uxTaskNumber++;
9002d126:	f8de 3000 	ldr.w	r3, [lr]
		prvAddTaskToReadyList( pxNewTCB );
9002d12a:	fa05 f200 	lsl.w	r2, r5, r0
9002d12e:	f8dc 7000 	ldr.w	r7, [ip]
9002d132:	eb00 0080 	add.w	r0, r0, r0, lsl #2
		uxTaskNumber++;
9002d136:	442b      	add	r3, r5
		prvAddTaskToReadyList( pxNewTCB );
9002d138:	433a      	orrs	r2, r7
9002d13a:	4f38      	ldr	r7, [pc, #224]	; (9002d21c <xTaskCreate+0x1cc>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9002d13c:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9002d13e:	eb07 0080 	add.w	r0, r7, r0, lsl #2
		uxTaskNumber++;
9002d142:	f8ce 3000 	str.w	r3, [lr]
		prvAddTaskToReadyList( pxNewTCB );
9002d146:	f8cc 2000 	str.w	r2, [ip]
9002d14a:	f7ff fa7f 	bl	9002c64c <vListInsertEnd>
	taskEXIT_CRITICAL();
9002d14e:	f000 fc97 	bl	9002da80 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
9002d152:	f8d8 3000 	ldr.w	r3, [r8]
9002d156:	b1fb      	cbz	r3, 9002d198 <xTaskCreate+0x148>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9002d158:	6832      	ldr	r2, [r6, #0]
9002d15a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9002d15c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9002d15e:	429a      	cmp	r2, r3
9002d160:	d21a      	bcs.n	9002d198 <xTaskCreate+0x148>
			taskYIELD_IF_USING_PREEMPTION();
9002d162:	4b2f      	ldr	r3, [pc, #188]	; (9002d220 <xTaskCreate+0x1d0>)
9002d164:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002d168:	601a      	str	r2, [r3, #0]
9002d16a:	f3bf 8f4f 	dsb	sy
9002d16e:	f3bf 8f6f 	isb	sy
			xReturn = pdPASS;
9002d172:	4628      	mov	r0, r5
9002d174:	e001      	b.n	9002d17a <xTaskCreate+0x12a>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9002d176:	f04f 30ff 	mov.w	r0, #4294967295
	}
9002d17a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9002d17e:	6833      	ldr	r3, [r6, #0]
9002d180:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d182:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002d184:	4283      	cmp	r3, r0
9002d186:	d8c8      	bhi.n	9002d11a <xTaskCreate+0xca>
					pxCurrentTCB = pxNewTCB;
9002d188:	6034      	str	r4, [r6, #0]
9002d18a:	e7c6      	b.n	9002d11a <xTaskCreate+0xca>
					vPortFree( pxStack );
9002d18c:	4638      	mov	r0, r7
9002d18e:	f000 fe63 	bl	9002de58 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9002d192:	f04f 30ff 	mov.w	r0, #4294967295
9002d196:	e7f0      	b.n	9002d17a <xTaskCreate+0x12a>
			xReturn = pdPASS;
9002d198:	4628      	mov	r0, r5
	}
9002d19a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9002d19e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9002d1a2:	e783      	b.n	9002d0ac <xTaskCreate+0x5c>
			pxCurrentTCB = pxNewTCB;
9002d1a4:	6034      	str	r4, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9002d1a6:	6813      	ldr	r3, [r2, #0]
9002d1a8:	2b01      	cmp	r3, #1
9002d1aa:	d003      	beq.n	9002d1b4 <xTaskCreate+0x164>
9002d1ac:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d1ae:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 9002d254 <xTaskCreate+0x204>
9002d1b2:	e7b2      	b.n	9002d11a <xTaskCreate+0xca>
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9002d1b4:	4819      	ldr	r0, [pc, #100]	; (9002d21c <xTaskCreate+0x1cc>)
9002d1b6:	f7ff fa39 	bl	9002c62c <vListInitialise>
9002d1ba:	481a      	ldr	r0, [pc, #104]	; (9002d224 <xTaskCreate+0x1d4>)
9002d1bc:	f7ff fa36 	bl	9002c62c <vListInitialise>
9002d1c0:	4819      	ldr	r0, [pc, #100]	; (9002d228 <xTaskCreate+0x1d8>)
9002d1c2:	f7ff fa33 	bl	9002c62c <vListInitialise>
9002d1c6:	4819      	ldr	r0, [pc, #100]	; (9002d22c <xTaskCreate+0x1dc>)
9002d1c8:	f7ff fa30 	bl	9002c62c <vListInitialise>
9002d1cc:	4818      	ldr	r0, [pc, #96]	; (9002d230 <xTaskCreate+0x1e0>)
9002d1ce:	f7ff fa2d 	bl	9002c62c <vListInitialise>
	vListInitialise( &xDelayedTaskList1 );
9002d1d2:	f8df 808c 	ldr.w	r8, [pc, #140]	; 9002d260 <xTaskCreate+0x210>
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9002d1d6:	4817      	ldr	r0, [pc, #92]	; (9002d234 <xTaskCreate+0x1e4>)
9002d1d8:	f7ff fa28 	bl	9002c62c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9002d1dc:	4d16      	ldr	r5, [pc, #88]	; (9002d238 <xTaskCreate+0x1e8>)
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9002d1de:	4817      	ldr	r0, [pc, #92]	; (9002d23c <xTaskCreate+0x1ec>)
9002d1e0:	f7ff fa24 	bl	9002c62c <vListInitialise>
	vListInitialise( &xDelayedTaskList1 );
9002d1e4:	4640      	mov	r0, r8
9002d1e6:	f7ff fa21 	bl	9002c62c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9002d1ea:	4628      	mov	r0, r5
9002d1ec:	f7ff fa1e 	bl	9002c62c <vListInitialise>
	vListInitialise( &xPendingReadyList );
9002d1f0:	4813      	ldr	r0, [pc, #76]	; (9002d240 <xTaskCreate+0x1f0>)
9002d1f2:	f7ff fa1b 	bl	9002c62c <vListInitialise>
		vListInitialise( &xTasksWaitingTermination );
9002d1f6:	4813      	ldr	r0, [pc, #76]	; (9002d244 <xTaskCreate+0x1f4>)
9002d1f8:	f7ff fa18 	bl	9002c62c <vListInitialise>
		vListInitialise( &xSuspendedTaskList );
9002d1fc:	4812      	ldr	r0, [pc, #72]	; (9002d248 <xTaskCreate+0x1f8>)
9002d1fe:	f7ff fa15 	bl	9002c62c <vListInitialise>
	pxDelayedTaskList = &xDelayedTaskList1;
9002d202:	4a12      	ldr	r2, [pc, #72]	; (9002d24c <xTaskCreate+0x1fc>)
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9002d204:	4b12      	ldr	r3, [pc, #72]	; (9002d250 <xTaskCreate+0x200>)
	pxDelayedTaskList = &xDelayedTaskList1;
9002d206:	f8c2 8000 	str.w	r8, [r2]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9002d20a:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d20c:	f8df 8044 	ldr.w	r8, [pc, #68]	; 9002d254 <xTaskCreate+0x204>
9002d210:	601d      	str	r5, [r3, #0]
}
9002d212:	e782      	b.n	9002d11a <xTaskCreate+0xca>
9002d214:	20000fb8 	.word	0x20000fb8
9002d218:	20000f20 	.word	0x20000f20
9002d21c:	20000f2c 	.word	0x20000f2c
9002d220:	e000ed04 	.word	0xe000ed04
9002d224:	20000f40 	.word	0x20000f40
9002d228:	20000f54 	.word	0x20000f54
9002d22c:	20000f68 	.word	0x20000f68
9002d230:	20000f7c 	.word	0x20000f7c
9002d234:	20000f90 	.word	0x20000f90
9002d238:	20000fe0 	.word	0x20000fe0
9002d23c:	20000fa4 	.word	0x20000fa4
9002d240:	20001004 	.word	0x20001004
9002d244:	20001030 	.word	0x20001030
9002d248:	2000101c 	.word	0x2000101c
9002d24c:	20000f24 	.word	0x20000f24
9002d250:	20000f28 	.word	0x20000f28
9002d254:	20001018 	.word	0x20001018
9002d258:	20000fc4 	.word	0x20000fc4
9002d25c:	20000fc8 	.word	0x20000fc8
9002d260:	20000fcc 	.word	0x20000fcc

9002d264 <vTaskStartScheduler>:
{
9002d264:	b530      	push	{r4, r5, lr}
		xReturn = xTaskCreate(	prvIdleTask,
9002d266:	4b19      	ldr	r3, [pc, #100]	; (9002d2cc <vTaskStartScheduler+0x68>)
{
9002d268:	b083      	sub	sp, #12
		xReturn = xTaskCreate(	prvIdleTask,
9002d26a:	2400      	movs	r4, #0
9002d26c:	2280      	movs	r2, #128	; 0x80
9002d26e:	9301      	str	r3, [sp, #4]
9002d270:	4917      	ldr	r1, [pc, #92]	; (9002d2d0 <vTaskStartScheduler+0x6c>)
9002d272:	4623      	mov	r3, r4
9002d274:	4817      	ldr	r0, [pc, #92]	; (9002d2d4 <vTaskStartScheduler+0x70>)
9002d276:	9400      	str	r4, [sp, #0]
9002d278:	f7ff feea 	bl	9002d050 <xTaskCreate>
	if( xReturn == pdPASS )
9002d27c:	2801      	cmp	r0, #1
9002d27e:	d003      	beq.n	9002d288 <vTaskStartScheduler+0x24>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9002d280:	3001      	adds	r0, #1
9002d282:	d018      	beq.n	9002d2b6 <vTaskStartScheduler+0x52>
}
9002d284:	b003      	add	sp, #12
9002d286:	bd30      	pop	{r4, r5, pc}
9002d288:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d28c:	b672      	cpsid	i
9002d28e:	f383 8811 	msr	BASEPRI, r3
9002d292:	f3bf 8f6f 	isb	sy
9002d296:	f3bf 8f4f 	dsb	sy
9002d29a:	b662      	cpsie	i
		xNextTaskUnblockTime = portMAX_DELAY;
9002d29c:	490e      	ldr	r1, [pc, #56]	; (9002d2d8 <vTaskStartScheduler+0x74>)
9002d29e:	f04f 35ff 	mov.w	r5, #4294967295
		xSchedulerRunning = pdTRUE;
9002d2a2:	4a0e      	ldr	r2, [pc, #56]	; (9002d2dc <vTaskStartScheduler+0x78>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9002d2a4:	4b0e      	ldr	r3, [pc, #56]	; (9002d2e0 <vTaskStartScheduler+0x7c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9002d2a6:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
9002d2a8:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9002d2aa:	601c      	str	r4, [r3, #0]
}
9002d2ac:	b003      	add	sp, #12
9002d2ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
9002d2b2:	f000 bc65 	b.w	9002db80 <xPortStartScheduler>
9002d2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d2ba:	b672      	cpsid	i
9002d2bc:	f383 8811 	msr	BASEPRI, r3
9002d2c0:	f3bf 8f6f 	isb	sy
9002d2c4:	f3bf 8f4f 	dsb	sy
9002d2c8:	b662      	cpsie	i
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9002d2ca:	e7fe      	b.n	9002d2ca <vTaskStartScheduler+0x66>
9002d2cc:	20000ff4 	.word	0x20000ff4
9002d2d0:	90034940 	.word	0x90034940
9002d2d4:	9002cdf5 	.word	0x9002cdf5
9002d2d8:	20000ff8 	.word	0x20000ff8
9002d2dc:	20001018 	.word	0x20001018
9002d2e0:	20001044 	.word	0x20001044

9002d2e4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9002d2e4:	4a02      	ldr	r2, [pc, #8]	; (9002d2f0 <vTaskSuspendAll+0xc>)
9002d2e6:	6813      	ldr	r3, [r2, #0]
9002d2e8:	3301      	adds	r3, #1
9002d2ea:	6013      	str	r3, [r2, #0]
}
9002d2ec:	4770      	bx	lr
9002d2ee:	bf00      	nop
9002d2f0:	20000fc0 	.word	0x20000fc0

9002d2f4 <xTaskResumeAll>:
{
9002d2f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	configASSERT( uxSchedulerSuspended );
9002d2f8:	4d42      	ldr	r5, [pc, #264]	; (9002d404 <xTaskResumeAll+0x110>)
{
9002d2fa:	b083      	sub	sp, #12
	configASSERT( uxSchedulerSuspended );
9002d2fc:	682b      	ldr	r3, [r5, #0]
9002d2fe:	b953      	cbnz	r3, 9002d316 <xTaskResumeAll+0x22>
9002d300:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d304:	b672      	cpsid	i
9002d306:	f383 8811 	msr	BASEPRI, r3
9002d30a:	f3bf 8f6f 	isb	sy
9002d30e:	f3bf 8f4f 	dsb	sy
9002d312:	b662      	cpsie	i
9002d314:	e7fe      	b.n	9002d314 <xTaskResumeAll+0x20>
	taskENTER_CRITICAL();
9002d316:	f000 fb8d 	bl	9002da34 <vPortEnterCritical>
		--uxSchedulerSuspended;
9002d31a:	682b      	ldr	r3, [r5, #0]
9002d31c:	3b01      	subs	r3, #1
9002d31e:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9002d320:	682b      	ldr	r3, [r5, #0]
9002d322:	2b00      	cmp	r3, #0
9002d324:	d141      	bne.n	9002d3aa <xTaskResumeAll+0xb6>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9002d326:	4b38      	ldr	r3, [pc, #224]	; (9002d408 <xTaskResumeAll+0x114>)
9002d328:	681b      	ldr	r3, [r3, #0]
9002d32a:	2b00      	cmp	r3, #0
9002d32c:	d03d      	beq.n	9002d3aa <xTaskResumeAll+0xb6>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9002d32e:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 9002d420 <xTaskResumeAll+0x12c>
9002d332:	f8da 3000 	ldr.w	r3, [sl]
9002d336:	2b00      	cmp	r3, #0
9002d338:	d03e      	beq.n	9002d3b8 <xTaskResumeAll+0xc4>
9002d33a:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 9002d424 <xTaskResumeAll+0x130>
					prvAddTaskToReadyList( pxTCB );
9002d33e:	2701      	movs	r7, #1
9002d340:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 9002d428 <xTaskResumeAll+0x134>
9002d344:	f8df b0e4 	ldr.w	fp, [pc, #228]	; 9002d42c <xTaskResumeAll+0x138>
9002d348:	4e30      	ldr	r6, [pc, #192]	; (9002d40c <xTaskResumeAll+0x118>)
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d34a:	f8da 300c 	ldr.w	r3, [sl, #12]
9002d34e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002d350:	1d21      	adds	r1, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9002d352:	f104 0018 	add.w	r0, r4, #24
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002d356:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9002d358:	f7ff f9a0 	bl	9002c69c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9002d35c:	9901      	ldr	r1, [sp, #4]
9002d35e:	4608      	mov	r0, r1
9002d360:	f7ff f99c 	bl	9002c69c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9002d364:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d366:	f8d8 2000 	ldr.w	r2, [r8]
9002d36a:	fa07 f300 	lsl.w	r3, r7, r0
9002d36e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002d372:	9901      	ldr	r1, [sp, #4]
9002d374:	4313      	orrs	r3, r2
9002d376:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9002d37a:	f8c8 3000 	str.w	r3, [r8]
9002d37e:	f7ff f965 	bl	9002c64c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9002d382:	f8db 3000 	ldr.w	r3, [fp]
9002d386:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9002d388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002d38a:	429a      	cmp	r2, r3
9002d38c:	d300      	bcc.n	9002d390 <xTaskResumeAll+0x9c>
						xYieldPending = pdTRUE;
9002d38e:	6037      	str	r7, [r6, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9002d390:	f8da 3000 	ldr.w	r3, [sl]
9002d394:	2b00      	cmp	r3, #0
9002d396:	d1d8      	bne.n	9002d34a <xTaskResumeAll+0x56>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9002d398:	4b1d      	ldr	r3, [pc, #116]	; (9002d410 <xTaskResumeAll+0x11c>)
9002d39a:	681b      	ldr	r3, [r3, #0]
9002d39c:	681b      	ldr	r3, [r3, #0]
9002d39e:	bb03      	cbnz	r3, 9002d3e2 <xTaskResumeAll+0xee>
		xNextTaskUnblockTime = portMAX_DELAY;
9002d3a0:	4b1c      	ldr	r3, [pc, #112]	; (9002d414 <xTaskResumeAll+0x120>)
9002d3a2:	f04f 32ff 	mov.w	r2, #4294967295
9002d3a6:	601a      	str	r2, [r3, #0]
9002d3a8:	e007      	b.n	9002d3ba <xTaskResumeAll+0xc6>
BaseType_t xAlreadyYielded = pdFALSE;
9002d3aa:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9002d3ac:	f000 fb68 	bl	9002da80 <vPortExitCritical>
}
9002d3b0:	4620      	mov	r0, r4
9002d3b2:	b003      	add	sp, #12
9002d3b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002d3b8:	4e14      	ldr	r6, [pc, #80]	; (9002d40c <xTaskResumeAll+0x118>)
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9002d3ba:	4f17      	ldr	r7, [pc, #92]	; (9002d418 <xTaskResumeAll+0x124>)
9002d3bc:	683c      	ldr	r4, [r7, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9002d3be:	b1a4      	cbz	r4, 9002d3ea <xTaskResumeAll+0xf6>
								xYieldPending = pdTRUE;
9002d3c0:	f04f 0801 	mov.w	r8, #1
9002d3c4:	e006      	b.n	9002d3d4 <xTaskResumeAll+0xe0>
9002d3c6:	f7ff fd9f 	bl	9002cf08 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9002d3ca:	b108      	cbz	r0, 9002d3d0 <xTaskResumeAll+0xdc>
								xYieldPending = pdTRUE;
9002d3cc:	f8c6 8000 	str.w	r8, [r6]
						} while( xPendedCounts > ( TickType_t ) 0U );
9002d3d0:	3c01      	subs	r4, #1
9002d3d2:	d009      	beq.n	9002d3e8 <xTaskResumeAll+0xf4>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9002d3d4:	682b      	ldr	r3, [r5, #0]
9002d3d6:	2b00      	cmp	r3, #0
9002d3d8:	d0f5      	beq.n	9002d3c6 <xTaskResumeAll+0xd2>
		++xPendedTicks;
9002d3da:	683b      	ldr	r3, [r7, #0]
9002d3dc:	3301      	adds	r3, #1
9002d3de:	603b      	str	r3, [r7, #0]
	return xSwitchRequired;
9002d3e0:	e7f6      	b.n	9002d3d0 <xTaskResumeAll+0xdc>
9002d3e2:	f7ff fd85 	bl	9002cef0 <prvResetNextTaskUnblockTime.part.0>
9002d3e6:	e7e8      	b.n	9002d3ba <xTaskResumeAll+0xc6>
						xPendedTicks = 0;
9002d3e8:	603c      	str	r4, [r7, #0]
				if( xYieldPending != pdFALSE )
9002d3ea:	6833      	ldr	r3, [r6, #0]
9002d3ec:	2b00      	cmp	r3, #0
9002d3ee:	d0dc      	beq.n	9002d3aa <xTaskResumeAll+0xb6>
					taskYIELD_IF_USING_PREEMPTION();
9002d3f0:	4b0a      	ldr	r3, [pc, #40]	; (9002d41c <xTaskResumeAll+0x128>)
9002d3f2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002d3f6:	601a      	str	r2, [r3, #0]
9002d3f8:	f3bf 8f4f 	dsb	sy
9002d3fc:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9002d400:	2401      	movs	r4, #1
9002d402:	e7d3      	b.n	9002d3ac <xTaskResumeAll+0xb8>
9002d404:	20000fc0 	.word	0x20000fc0
9002d408:	20000fb8 	.word	0x20000fb8
9002d40c:	20001048 	.word	0x20001048
9002d410:	20000f24 	.word	0x20000f24
9002d414:	20000ff8 	.word	0x20000ff8
9002d418:	20001000 	.word	0x20001000
9002d41c:	e000ed04 	.word	0xe000ed04
9002d420:	20001004 	.word	0x20001004
9002d424:	20000fc8 	.word	0x20000fc8
9002d428:	20000f2c 	.word	0x20000f2c
9002d42c:	20000f20 	.word	0x20000f20

9002d430 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9002d430:	4b05      	ldr	r3, [pc, #20]	; (9002d448 <xTaskIncrementTick+0x18>)
9002d432:	681b      	ldr	r3, [r3, #0]
9002d434:	b90b      	cbnz	r3, 9002d43a <xTaskIncrementTick+0xa>
9002d436:	f7ff bd67 	b.w	9002cf08 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9002d43a:	4a04      	ldr	r2, [pc, #16]	; (9002d44c <xTaskIncrementTick+0x1c>)
}
9002d43c:	2000      	movs	r0, #0
		++xPendedTicks;
9002d43e:	6813      	ldr	r3, [r2, #0]
9002d440:	3301      	adds	r3, #1
9002d442:	6013      	str	r3, [r2, #0]
}
9002d444:	4770      	bx	lr
9002d446:	bf00      	nop
9002d448:	20000fc0 	.word	0x20000fc0
9002d44c:	20001000 	.word	0x20001000

9002d450 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9002d450:	4b18      	ldr	r3, [pc, #96]	; (9002d4b4 <vTaskSwitchContext+0x64>)
9002d452:	681b      	ldr	r3, [r3, #0]
9002d454:	b11b      	cbz	r3, 9002d45e <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9002d456:	4b18      	ldr	r3, [pc, #96]	; (9002d4b8 <vTaskSwitchContext+0x68>)
9002d458:	2201      	movs	r2, #1
9002d45a:	601a      	str	r2, [r3, #0]
9002d45c:	4770      	bx	lr
		xYieldPending = pdFALSE;
9002d45e:	4916      	ldr	r1, [pc, #88]	; (9002d4b8 <vTaskSwitchContext+0x68>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d460:	4a16      	ldr	r2, [pc, #88]	; (9002d4bc <vTaskSwitchContext+0x6c>)
		xYieldPending = pdFALSE;
9002d462:	600b      	str	r3, [r1, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d464:	6813      	ldr	r3, [r2, #0]
		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
9002d466:	fab3 f383 	clz	r3, r3
9002d46a:	b2db      	uxtb	r3, r3
9002d46c:	4a14      	ldr	r2, [pc, #80]	; (9002d4c0 <vTaskSwitchContext+0x70>)
9002d46e:	f1c3 031f 	rsb	r3, r3, #31
9002d472:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9002d476:	0099      	lsls	r1, r3, #2
9002d478:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9002d47c:	5850      	ldr	r0, [r2, r1]
9002d47e:	b950      	cbnz	r0, 9002d496 <vTaskSwitchContext+0x46>
	__asm volatile
9002d480:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d484:	b672      	cpsid	i
9002d486:	f383 8811 	msr	BASEPRI, r3
9002d48a:	f3bf 8f6f 	isb	sy
9002d48e:	f3bf 8f4f 	dsb	sy
9002d492:	b662      	cpsie	i
9002d494:	e7fe      	b.n	9002d494 <vTaskSwitchContext+0x44>
9002d496:	6858      	ldr	r0, [r3, #4]
9002d498:	3108      	adds	r1, #8
9002d49a:	4411      	add	r1, r2
9002d49c:	6842      	ldr	r2, [r0, #4]
9002d49e:	428a      	cmp	r2, r1
9002d4a0:	605a      	str	r2, [r3, #4]
9002d4a2:	d003      	beq.n	9002d4ac <vTaskSwitchContext+0x5c>
9002d4a4:	68d2      	ldr	r2, [r2, #12]
9002d4a6:	4b07      	ldr	r3, [pc, #28]	; (9002d4c4 <vTaskSwitchContext+0x74>)
9002d4a8:	601a      	str	r2, [r3, #0]
}
9002d4aa:	4770      	bx	lr
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d4ac:	6852      	ldr	r2, [r2, #4]
9002d4ae:	605a      	str	r2, [r3, #4]
9002d4b0:	e7f8      	b.n	9002d4a4 <vTaskSwitchContext+0x54>
9002d4b2:	bf00      	nop
9002d4b4:	20000fc0 	.word	0x20000fc0
9002d4b8:	20001048 	.word	0x20001048
9002d4bc:	20000fc8 	.word	0x20000fc8
9002d4c0:	20000f2c 	.word	0x20000f2c
9002d4c4:	20000f20 	.word	0x20000f20

9002d4c8 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9002d4c8:	b160      	cbz	r0, 9002d4e4 <vTaskPlaceOnEventList+0x1c>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9002d4ca:	4b0c      	ldr	r3, [pc, #48]	; (9002d4fc <vTaskPlaceOnEventList+0x34>)
{
9002d4cc:	b510      	push	{r4, lr}
9002d4ce:	460c      	mov	r4, r1
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9002d4d0:	6819      	ldr	r1, [r3, #0]
9002d4d2:	3118      	adds	r1, #24
9002d4d4:	f7ff f8ca 	bl	9002c66c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9002d4d8:	4620      	mov	r0, r4
9002d4da:	2101      	movs	r1, #1
}
9002d4dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9002d4e0:	f7ff bcc0 	b.w	9002ce64 <prvAddCurrentTaskToDelayedList>
9002d4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d4e8:	b672      	cpsid	i
9002d4ea:	f383 8811 	msr	BASEPRI, r3
9002d4ee:	f3bf 8f6f 	isb	sy
9002d4f2:	f3bf 8f4f 	dsb	sy
9002d4f6:	b662      	cpsie	i
	configASSERT( pxEventList );
9002d4f8:	e7fe      	b.n	9002d4f8 <vTaskPlaceOnEventList+0x30>
9002d4fa:	bf00      	nop
9002d4fc:	20000f20 	.word	0x20000f20

9002d500 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d500:	68c3      	ldr	r3, [r0, #12]
{
9002d502:	b570      	push	{r4, r5, r6, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9002d504:	68dc      	ldr	r4, [r3, #12]
{
9002d506:	b082      	sub	sp, #8
	configASSERT( pxUnblockedTCB );
9002d508:	b364      	cbz	r4, 9002d564 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9002d50a:	f104 0118 	add.w	r1, r4, #24
9002d50e:	4608      	mov	r0, r1
9002d510:	9101      	str	r1, [sp, #4]
9002d512:	f7ff f8c3 	bl	9002c69c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9002d516:	4b1a      	ldr	r3, [pc, #104]	; (9002d580 <xTaskRemoveFromEventList+0x80>)
9002d518:	9901      	ldr	r1, [sp, #4]
9002d51a:	681b      	ldr	r3, [r3, #0]
9002d51c:	b16b      	cbz	r3, 9002d53a <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9002d51e:	4819      	ldr	r0, [pc, #100]	; (9002d584 <xTaskRemoveFromEventList+0x84>)
9002d520:	f7ff f894 	bl	9002c64c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9002d524:	4b18      	ldr	r3, [pc, #96]	; (9002d588 <xTaskRemoveFromEventList+0x88>)
9002d526:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9002d528:	681b      	ldr	r3, [r3, #0]
9002d52a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002d52c:	429a      	cmp	r2, r3
9002d52e:	d924      	bls.n	9002d57a <xTaskRemoveFromEventList+0x7a>
		xYieldPending = pdTRUE;
9002d530:	2001      	movs	r0, #1
9002d532:	4b16      	ldr	r3, [pc, #88]	; (9002d58c <xTaskRemoveFromEventList+0x8c>)
9002d534:	6018      	str	r0, [r3, #0]
}
9002d536:	b002      	add	sp, #8
9002d538:	bd70      	pop	{r4, r5, r6, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9002d53a:	1d21      	adds	r1, r4, #4
		prvAddTaskToReadyList( pxUnblockedTCB );
9002d53c:	4d14      	ldr	r5, [pc, #80]	; (9002d590 <xTaskRemoveFromEventList+0x90>)
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9002d53e:	4608      	mov	r0, r1
9002d540:	9101      	str	r1, [sp, #4]
9002d542:	f7ff f8ab 	bl	9002c69c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9002d546:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9002d548:	2301      	movs	r3, #1
9002d54a:	682e      	ldr	r6, [r5, #0]
9002d54c:	eb02 0082 	add.w	r0, r2, r2, lsl #2
9002d550:	9901      	ldr	r1, [sp, #4]
9002d552:	4093      	lsls	r3, r2
9002d554:	4a0f      	ldr	r2, [pc, #60]	; (9002d594 <xTaskRemoveFromEventList+0x94>)
9002d556:	4333      	orrs	r3, r6
9002d558:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9002d55c:	602b      	str	r3, [r5, #0]
9002d55e:	f7ff f875 	bl	9002c64c <vListInsertEnd>
9002d562:	e7df      	b.n	9002d524 <xTaskRemoveFromEventList+0x24>
9002d564:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d568:	b672      	cpsid	i
9002d56a:	f383 8811 	msr	BASEPRI, r3
9002d56e:	f3bf 8f6f 	isb	sy
9002d572:	f3bf 8f4f 	dsb	sy
9002d576:	b662      	cpsie	i
	configASSERT( pxUnblockedTCB );
9002d578:	e7fe      	b.n	9002d578 <xTaskRemoveFromEventList+0x78>
		xReturn = pdFALSE;
9002d57a:	2000      	movs	r0, #0
}
9002d57c:	b002      	add	sp, #8
9002d57e:	bd70      	pop	{r4, r5, r6, pc}
9002d580:	20000fc0 	.word	0x20000fc0
9002d584:	20001004 	.word	0x20001004
9002d588:	20000f20 	.word	0x20000f20
9002d58c:	20001048 	.word	0x20001048
9002d590:	20000fc8 	.word	0x20000fc8
9002d594:	20000f2c 	.word	0x20000f2c

9002d598 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9002d598:	4a03      	ldr	r2, [pc, #12]	; (9002d5a8 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9002d59a:	4b04      	ldr	r3, [pc, #16]	; (9002d5ac <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9002d59c:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9002d59e:	681b      	ldr	r3, [r3, #0]
9002d5a0:	e9c0 2300 	strd	r2, r3, [r0]
}
9002d5a4:	4770      	bx	lr
9002d5a6:	bf00      	nop
9002d5a8:	20000ffc 	.word	0x20000ffc
9002d5ac:	20001044 	.word	0x20001044

9002d5b0 <xTaskCheckForTimeOut>:
{
9002d5b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9002d5b2:	b318      	cbz	r0, 9002d5fc <xTaskCheckForTimeOut+0x4c>
	configASSERT( pxTicksToWait );
9002d5b4:	460d      	mov	r5, r1
9002d5b6:	b1b1      	cbz	r1, 9002d5e6 <xTaskCheckForTimeOut+0x36>
9002d5b8:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9002d5ba:	f000 fa3b 	bl	9002da34 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9002d5be:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9002d5c0:	f8df c080 	ldr.w	ip, [pc, #128]	; 9002d644 <xTaskCheckForTimeOut+0x94>
			if( *pxTicksToWait == portMAX_DELAY )
9002d5c4:	1c5a      	adds	r2, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9002d5c6:	f8dc 1000 	ldr.w	r1, [ip]
			if( *pxTicksToWait == portMAX_DELAY )
9002d5ca:	d02f      	beq.n	9002d62c <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9002d5cc:	4e1c      	ldr	r6, [pc, #112]	; (9002d640 <xTaskCheckForTimeOut+0x90>)
9002d5ce:	e9d4 0200 	ldrd	r0, r2, [r4]
9002d5d2:	6837      	ldr	r7, [r6, #0]
9002d5d4:	42b8      	cmp	r0, r7
9002d5d6:	d01c      	beq.n	9002d612 <xTaskCheckForTimeOut+0x62>
9002d5d8:	428a      	cmp	r2, r1
9002d5da:	d81a      	bhi.n	9002d612 <xTaskCheckForTimeOut+0x62>
			xReturn = pdTRUE;
9002d5dc:	2601      	movs	r6, #1
	taskEXIT_CRITICAL();
9002d5de:	f000 fa4f 	bl	9002da80 <vPortExitCritical>
}
9002d5e2:	4630      	mov	r0, r6
9002d5e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002d5e6:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d5ea:	b672      	cpsid	i
9002d5ec:	f383 8811 	msr	BASEPRI, r3
9002d5f0:	f3bf 8f6f 	isb	sy
9002d5f4:	f3bf 8f4f 	dsb	sy
9002d5f8:	b662      	cpsie	i
	configASSERT( pxTicksToWait );
9002d5fa:	e7fe      	b.n	9002d5fa <xTaskCheckForTimeOut+0x4a>
9002d5fc:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d600:	b672      	cpsid	i
9002d602:	f383 8811 	msr	BASEPRI, r3
9002d606:	f3bf 8f6f 	isb	sy
9002d60a:	f3bf 8f4f 	dsb	sy
9002d60e:	b662      	cpsie	i
	configASSERT( pxTimeOut );
9002d610:	e7fe      	b.n	9002d610 <xTaskCheckForTimeOut+0x60>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9002d612:	1a8f      	subs	r7, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9002d614:	42bb      	cmp	r3, r7
9002d616:	d90e      	bls.n	9002d636 <xTaskCheckForTimeOut+0x86>
			*pxTicksToWait -= xElapsedTime;
9002d618:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9002d61a:	6837      	ldr	r7, [r6, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9002d61c:	f8dc 1000 	ldr.w	r1, [ip]
			xReturn = pdFALSE;
9002d620:	2600      	movs	r6, #0
			*pxTicksToWait -= xElapsedTime;
9002d622:	4413      	add	r3, r2
9002d624:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9002d626:	e9c4 7100 	strd	r7, r1, [r4]
			xReturn = pdFALSE;
9002d62a:	e7d8      	b.n	9002d5de <xTaskCheckForTimeOut+0x2e>
				xReturn = pdFALSE;
9002d62c:	2600      	movs	r6, #0
	taskEXIT_CRITICAL();
9002d62e:	f000 fa27 	bl	9002da80 <vPortExitCritical>
}
9002d632:	4630      	mov	r0, r6
9002d634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			*pxTicksToWait = 0;
9002d636:	2300      	movs	r3, #0
			xReturn = pdTRUE;
9002d638:	2601      	movs	r6, #1
			*pxTicksToWait = 0;
9002d63a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9002d63c:	e7cf      	b.n	9002d5de <xTaskCheckForTimeOut+0x2e>
9002d63e:	bf00      	nop
9002d640:	20000ffc 	.word	0x20000ffc
9002d644:	20001044 	.word	0x20001044

9002d648 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9002d648:	4b01      	ldr	r3, [pc, #4]	; (9002d650 <vTaskMissedYield+0x8>)
9002d64a:	2201      	movs	r2, #1
9002d64c:	601a      	str	r2, [r3, #0]
}
9002d64e:	4770      	bx	lr
9002d650:	20001048 	.word	0x20001048

9002d654 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9002d654:	4b01      	ldr	r3, [pc, #4]	; (9002d65c <xTaskGetCurrentTaskHandle+0x8>)
9002d656:	6818      	ldr	r0, [r3, #0]
	}
9002d658:	4770      	bx	lr
9002d65a:	bf00      	nop
9002d65c:	20000f20 	.word	0x20000f20

9002d660 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9002d660:	4b05      	ldr	r3, [pc, #20]	; (9002d678 <xTaskGetSchedulerState+0x18>)
9002d662:	681b      	ldr	r3, [r3, #0]
9002d664:	b133      	cbz	r3, 9002d674 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9002d666:	4b05      	ldr	r3, [pc, #20]	; (9002d67c <xTaskGetSchedulerState+0x1c>)
9002d668:	681b      	ldr	r3, [r3, #0]
9002d66a:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
9002d66c:	bf0c      	ite	eq
9002d66e:	2002      	moveq	r0, #2
9002d670:	2000      	movne	r0, #0
9002d672:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9002d674:	2001      	movs	r0, #1
	}
9002d676:	4770      	bx	lr
9002d678:	20001018 	.word	0x20001018
9002d67c:	20000fc0 	.word	0x20000fc0

9002d680 <xTaskPriorityInherit>:
	{
9002d680:	b5f0      	push	{r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9002d682:	4604      	mov	r4, r0
	{
9002d684:	b083      	sub	sp, #12
		if( pxMutexHolder != NULL )
9002d686:	b1c8      	cbz	r0, 9002d6bc <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9002d688:	4d22      	ldr	r5, [pc, #136]	; (9002d714 <xTaskPriorityInherit+0x94>)
9002d68a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9002d68c:	682a      	ldr	r2, [r5, #0]
9002d68e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9002d690:	4293      	cmp	r3, r2
9002d692:	d215      	bcs.n	9002d6c0 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9002d694:	6982      	ldr	r2, [r0, #24]
9002d696:	2a00      	cmp	r2, #0
9002d698:	db04      	blt.n	9002d6a4 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d69a:	682a      	ldr	r2, [r5, #0]
9002d69c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9002d69e:	f1c2 0207 	rsb	r2, r2, #7
9002d6a2:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9002d6a4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9002d6a8:	4e1b      	ldr	r6, [pc, #108]	; (9002d718 <xTaskPriorityInherit+0x98>)
9002d6aa:	6962      	ldr	r2, [r4, #20]
9002d6ac:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9002d6b0:	429a      	cmp	r2, r3
9002d6b2:	d00e      	beq.n	9002d6d2 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9002d6b4:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9002d6b6:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9002d6b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002d6ba:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
9002d6bc:	b003      	add	sp, #12
9002d6be:	bdf0      	pop	{r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9002d6c0:	682b      	ldr	r3, [r5, #0]
9002d6c2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9002d6c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002d6c6:	4298      	cmp	r0, r3
9002d6c8:	bf2c      	ite	cs
9002d6ca:	2000      	movcs	r0, #0
9002d6cc:	2001      	movcc	r0, #1
	}
9002d6ce:	b003      	add	sp, #12
9002d6d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002d6d2:	1d21      	adds	r1, r4, #4
9002d6d4:	4608      	mov	r0, r1
9002d6d6:	9101      	str	r1, [sp, #4]
9002d6d8:	f7fe ffe0 	bl	9002c69c <uxListRemove>
9002d6dc:	9901      	ldr	r1, [sp, #4]
						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
9002d6de:	4a0f      	ldr	r2, [pc, #60]	; (9002d71c <xTaskPriorityInherit+0x9c>)
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002d6e0:	b930      	cbnz	r0, 9002d6f0 <xTaskPriorityInherit+0x70>
						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
9002d6e2:	2001      	movs	r0, #1
9002d6e4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
9002d6e6:	6813      	ldr	r3, [r2, #0]
9002d6e8:	40b8      	lsls	r0, r7
9002d6ea:	ea23 0300 	bic.w	r3, r3, r0
9002d6ee:	6013      	str	r3, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9002d6f0:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9002d6f2:	2501      	movs	r5, #1
9002d6f4:	6817      	ldr	r7, [r2, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9002d6f6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9002d6f8:	fa05 f300 	lsl.w	r3, r5, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9002d6fc:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9002d6fe:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002d702:	433b      	orrs	r3, r7
9002d704:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9002d708:	6013      	str	r3, [r2, #0]
9002d70a:	f7fe ff9f 	bl	9002c64c <vListInsertEnd>
				xReturn = pdTRUE;
9002d70e:	4628      	mov	r0, r5
9002d710:	e7d4      	b.n	9002d6bc <xTaskPriorityInherit+0x3c>
9002d712:	bf00      	nop
9002d714:	20000f20 	.word	0x20000f20
9002d718:	20000f2c 	.word	0x20000f2c
9002d71c:	20000fc8 	.word	0x20000fc8

9002d720 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9002d720:	b1e8      	cbz	r0, 9002d75e <xTaskPriorityDisinherit+0x3e>
			configASSERT( pxTCB == pxCurrentTCB );
9002d722:	4b2c      	ldr	r3, [pc, #176]	; (9002d7d4 <xTaskPriorityDisinherit+0xb4>)
9002d724:	681b      	ldr	r3, [r3, #0]
9002d726:	4283      	cmp	r3, r0
	{
9002d728:	b5f0      	push	{r4, r5, r6, r7, lr}
9002d72a:	4604      	mov	r4, r0
9002d72c:	b083      	sub	sp, #12
			configASSERT( pxTCB == pxCurrentTCB );
9002d72e:	d00a      	beq.n	9002d746 <xTaskPriorityDisinherit+0x26>
9002d730:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d734:	b672      	cpsid	i
9002d736:	f383 8811 	msr	BASEPRI, r3
9002d73a:	f3bf 8f6f 	isb	sy
9002d73e:	f3bf 8f4f 	dsb	sy
9002d742:	b662      	cpsie	i
9002d744:	e7fe      	b.n	9002d744 <xTaskPriorityDisinherit+0x24>
			configASSERT( pxTCB->uxMutexesHeld );
9002d746:	6d1b      	ldr	r3, [r3, #80]	; 0x50
9002d748:	b15b      	cbz	r3, 9002d762 <xTaskPriorityDisinherit+0x42>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9002d74a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9002d74c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9002d74e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9002d750:	6503      	str	r3, [r0, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9002d752:	4291      	cmp	r1, r2
9002d754:	d000      	beq.n	9002d758 <xTaskPriorityDisinherit+0x38>
9002d756:	b17b      	cbz	r3, 9002d778 <xTaskPriorityDisinherit+0x58>
	BaseType_t xReturn = pdFALSE;
9002d758:	2000      	movs	r0, #0
	}
9002d75a:	b003      	add	sp, #12
9002d75c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	BaseType_t xReturn = pdFALSE;
9002d75e:	2000      	movs	r0, #0
	}
9002d760:	4770      	bx	lr
9002d762:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d766:	b672      	cpsid	i
9002d768:	f383 8811 	msr	BASEPRI, r3
9002d76c:	f3bf 8f6f 	isb	sy
9002d770:	f3bf 8f4f 	dsb	sy
9002d774:	b662      	cpsie	i
			configASSERT( pxTCB->uxMutexesHeld );
9002d776:	e7fe      	b.n	9002d776 <xTaskPriorityDisinherit+0x56>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002d778:	1d01      	adds	r1, r0, #4
9002d77a:	4608      	mov	r0, r1
9002d77c:	9101      	str	r1, [sp, #4]
9002d77e:	f7fe ff8d 	bl	9002c69c <uxListRemove>
9002d782:	9901      	ldr	r1, [sp, #4]
9002d784:	b1b0      	cbz	r0, 9002d7b4 <xTaskPriorityDisinherit+0x94>
9002d786:	4814      	ldr	r0, [pc, #80]	; (9002d7d8 <xTaskPriorityDisinherit+0xb8>)
9002d788:	4a14      	ldr	r2, [pc, #80]	; (9002d7dc <xTaskPriorityDisinherit+0xbc>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9002d78a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9002d78c:	2501      	movs	r5, #1
9002d78e:	f8d2 c000 	ldr.w	ip, [r2]
9002d792:	fa05 f603 	lsl.w	r6, r5, r3
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d796:	f1c3 0707 	rsb	r7, r3, #7
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9002d79a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxTCB );
9002d79c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9002d7a0:	ea46 060c 	orr.w	r6, r6, ip
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d7a4:	61a7      	str	r7, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9002d7a6:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9002d7aa:	6016      	str	r6, [r2, #0]
9002d7ac:	f7fe ff4e 	bl	9002c64c <vListInsertEnd>
					xReturn = pdTRUE;
9002d7b0:	4628      	mov	r0, r5
		return xReturn;
9002d7b2:	e7d2      	b.n	9002d75a <xTaskPriorityDisinherit+0x3a>
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
9002d7b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002d7b6:	4808      	ldr	r0, [pc, #32]	; (9002d7d8 <xTaskPriorityDisinherit+0xb8>)
9002d7b8:	eb06 0386 	add.w	r3, r6, r6, lsl #2
9002d7bc:	4a07      	ldr	r2, [pc, #28]	; (9002d7dc <xTaskPriorityDisinherit+0xbc>)
9002d7be:	009b      	lsls	r3, r3, #2
9002d7c0:	58c3      	ldr	r3, [r0, r3]
9002d7c2:	2b00      	cmp	r3, #0
9002d7c4:	d1e1      	bne.n	9002d78a <xTaskPriorityDisinherit+0x6a>
9002d7c6:	2501      	movs	r5, #1
9002d7c8:	6813      	ldr	r3, [r2, #0]
9002d7ca:	40b5      	lsls	r5, r6
9002d7cc:	ea23 0305 	bic.w	r3, r3, r5
9002d7d0:	6013      	str	r3, [r2, #0]
9002d7d2:	e7da      	b.n	9002d78a <xTaskPriorityDisinherit+0x6a>
9002d7d4:	20000f20 	.word	0x20000f20
9002d7d8:	20000f2c 	.word	0x20000f2c
9002d7dc:	20000fc8 	.word	0x20000fc8

9002d7e0 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9002d7e0:	b1d8      	cbz	r0, 9002d81a <vTaskPriorityDisinheritAfterTimeout+0x3a>
			configASSERT( pxTCB->uxMutexesHeld );
9002d7e2:	460b      	mov	r3, r1
9002d7e4:	6d01      	ldr	r1, [r0, #80]	; 0x50
	{
9002d7e6:	b530      	push	{r4, r5, lr}
9002d7e8:	4604      	mov	r4, r0
9002d7ea:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9002d7ec:	b151      	cbz	r1, 9002d804 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9002d7ee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9002d7f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9002d7f2:	4283      	cmp	r3, r0
9002d7f4:	bf38      	it	cc
9002d7f6:	4603      	movcc	r3, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9002d7f8:	429a      	cmp	r2, r3
9002d7fa:	d001      	beq.n	9002d800 <vTaskPriorityDisinheritAfterTimeout+0x20>
9002d7fc:	2901      	cmp	r1, #1
9002d7fe:	d00d      	beq.n	9002d81c <vTaskPriorityDisinheritAfterTimeout+0x3c>
	}
9002d800:	b003      	add	sp, #12
9002d802:	bd30      	pop	{r4, r5, pc}
9002d804:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d808:	b672      	cpsid	i
9002d80a:	f383 8811 	msr	BASEPRI, r3
9002d80e:	f3bf 8f6f 	isb	sy
9002d812:	f3bf 8f4f 	dsb	sy
9002d816:	b662      	cpsie	i
			configASSERT( pxTCB->uxMutexesHeld );
9002d818:	e7fe      	b.n	9002d818 <vTaskPriorityDisinheritAfterTimeout+0x38>
9002d81a:	4770      	bx	lr
					configASSERT( pxTCB != pxCurrentTCB );
9002d81c:	491e      	ldr	r1, [pc, #120]	; (9002d898 <vTaskPriorityDisinheritAfterTimeout+0xb8>)
9002d81e:	6809      	ldr	r1, [r1, #0]
9002d820:	42a1      	cmp	r1, r4
9002d822:	d025      	beq.n	9002d870 <vTaskPriorityDisinheritAfterTimeout+0x90>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9002d824:	69a1      	ldr	r1, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9002d826:	62e3      	str	r3, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9002d828:	2900      	cmp	r1, #0
9002d82a:	db02      	blt.n	9002d832 <vTaskPriorityDisinheritAfterTimeout+0x52>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9002d82c:	f1c3 0307 	rsb	r3, r3, #7
9002d830:	61a3      	str	r3, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9002d832:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9002d836:	4d19      	ldr	r5, [pc, #100]	; (9002d89c <vTaskPriorityDisinheritAfterTimeout+0xbc>)
9002d838:	6961      	ldr	r1, [r4, #20]
9002d83a:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9002d83e:	4299      	cmp	r1, r3
9002d840:	d1de      	bne.n	9002d800 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9002d842:	1d21      	adds	r1, r4, #4
9002d844:	4608      	mov	r0, r1
9002d846:	9101      	str	r1, [sp, #4]
9002d848:	f7fe ff28 	bl	9002c69c <uxListRemove>
9002d84c:	9901      	ldr	r1, [sp, #4]
9002d84e:	b1d0      	cbz	r0, 9002d886 <vTaskPriorityDisinheritAfterTimeout+0xa6>
9002d850:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d852:	2301      	movs	r3, #1
9002d854:	4a12      	ldr	r2, [pc, #72]	; (9002d8a0 <vTaskPriorityDisinheritAfterTimeout+0xc0>)
9002d856:	4083      	lsls	r3, r0
						prvAddTaskToReadyList( pxTCB );
9002d858:	6814      	ldr	r4, [r2, #0]
9002d85a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9002d85e:	4323      	orrs	r3, r4
9002d860:	eb05 0080 	add.w	r0, r5, r0, lsl #2
9002d864:	6013      	str	r3, [r2, #0]
	}
9002d866:	b003      	add	sp, #12
9002d868:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9002d86c:	f7fe beee 	b.w	9002c64c <vListInsertEnd>
9002d870:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d874:	b672      	cpsid	i
9002d876:	f383 8811 	msr	BASEPRI, r3
9002d87a:	f3bf 8f6f 	isb	sy
9002d87e:	f3bf 8f4f 	dsb	sy
9002d882:	b662      	cpsie	i
					configASSERT( pxTCB != pxCurrentTCB );
9002d884:	e7fe      	b.n	9002d884 <vTaskPriorityDisinheritAfterTimeout+0xa4>
							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
9002d886:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9002d888:	2301      	movs	r3, #1
9002d88a:	4a05      	ldr	r2, [pc, #20]	; (9002d8a0 <vTaskPriorityDisinheritAfterTimeout+0xc0>)
9002d88c:	4083      	lsls	r3, r0
9002d88e:	6814      	ldr	r4, [r2, #0]
9002d890:	ea24 0403 	bic.w	r4, r4, r3
9002d894:	6014      	str	r4, [r2, #0]
9002d896:	e7df      	b.n	9002d858 <vTaskPriorityDisinheritAfterTimeout+0x78>
9002d898:	20000f20 	.word	0x20000f20
9002d89c:	20000f2c 	.word	0x20000f2c
9002d8a0:	20000fc8 	.word	0x20000fc8

9002d8a4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9002d8a4:	4b04      	ldr	r3, [pc, #16]	; (9002d8b8 <pvTaskIncrementMutexHeldCount+0x14>)
9002d8a6:	681a      	ldr	r2, [r3, #0]
9002d8a8:	b11a      	cbz	r2, 9002d8b2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9002d8aa:	6819      	ldr	r1, [r3, #0]
9002d8ac:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9002d8ae:	3201      	adds	r2, #1
9002d8b0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9002d8b2:	6818      	ldr	r0, [r3, #0]
	}
9002d8b4:	4770      	bx	lr
9002d8b6:	bf00      	nop
9002d8b8:	20000f20 	.word	0x20000f20

9002d8bc <xTaskNotifyWait>:
	{
9002d8bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
9002d8c0:	4c22      	ldr	r4, [pc, #136]	; (9002d94c <xTaskNotifyWait+0x90>)
	{
9002d8c2:	b083      	sub	sp, #12
9002d8c4:	460e      	mov	r6, r1
9002d8c6:	4680      	mov	r8, r0
9002d8c8:	4615      	mov	r5, r2
9002d8ca:	4699      	mov	r9, r3
		taskENTER_CRITICAL();
9002d8cc:	f000 f8b2 	bl	9002da34 <vPortEnterCritical>
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
9002d8d0:	6821      	ldr	r1, [r4, #0]
9002d8d2:	f891 1058 	ldrb.w	r1, [r1, #88]	; 0x58
9002d8d6:	2902      	cmp	r1, #2
9002d8d8:	d00b      	beq.n	9002d8f2 <xTaskNotifyWait+0x36>
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
9002d8da:	6823      	ldr	r3, [r4, #0]
				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
9002d8dc:	2101      	movs	r1, #1
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
9002d8de:	6d5f      	ldr	r7, [r3, #84]	; 0x54
9002d8e0:	ea27 0708 	bic.w	r7, r7, r8
9002d8e4:	655f      	str	r7, [r3, #84]	; 0x54
				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
9002d8e6:	6823      	ldr	r3, [r4, #0]
9002d8e8:	f883 1058 	strb.w	r1, [r3, #88]	; 0x58
				if( xTicksToWait > ( TickType_t ) 0 )
9002d8ec:	f1b9 0f00 	cmp.w	r9, #0
9002d8f0:	d118      	bne.n	9002d924 <xTaskNotifyWait+0x68>
		taskEXIT_CRITICAL();
9002d8f2:	f000 f8c5 	bl	9002da80 <vPortExitCritical>
		taskENTER_CRITICAL();
9002d8f6:	f000 f89d 	bl	9002da34 <vPortEnterCritical>
			if( pulNotificationValue != NULL )
9002d8fa:	b115      	cbz	r5, 9002d902 <xTaskNotifyWait+0x46>
				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
9002d8fc:	6823      	ldr	r3, [r4, #0]
9002d8fe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9002d900:	602b      	str	r3, [r5, #0]
			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
9002d902:	6823      	ldr	r3, [r4, #0]
9002d904:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
9002d908:	2b02      	cmp	r3, #2
9002d90a:	d017      	beq.n	9002d93c <xTaskNotifyWait+0x80>
				xReturn = pdFALSE;
9002d90c:	2000      	movs	r0, #0
			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9002d90e:	6823      	ldr	r3, [r4, #0]
9002d910:	2200      	movs	r2, #0
9002d912:	9001      	str	r0, [sp, #4]
9002d914:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
		taskEXIT_CRITICAL();
9002d918:	f000 f8b2 	bl	9002da80 <vPortExitCritical>
	}
9002d91c:	9801      	ldr	r0, [sp, #4]
9002d91e:	b003      	add	sp, #12
9002d920:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
9002d924:	4648      	mov	r0, r9
9002d926:	f7ff fa9d 	bl	9002ce64 <prvAddCurrentTaskToDelayedList>
					portYIELD_WITHIN_API();
9002d92a:	4b09      	ldr	r3, [pc, #36]	; (9002d950 <xTaskNotifyWait+0x94>)
9002d92c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002d930:	601a      	str	r2, [r3, #0]
9002d932:	f3bf 8f4f 	dsb	sy
9002d936:	f3bf 8f6f 	isb	sy
9002d93a:	e7da      	b.n	9002d8f2 <xTaskNotifyWait+0x36>
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
9002d93c:	6823      	ldr	r3, [r4, #0]
				xReturn = pdTRUE;
9002d93e:	2001      	movs	r0, #1
				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
9002d940:	6d59      	ldr	r1, [r3, #84]	; 0x54
9002d942:	ea21 0606 	bic.w	r6, r1, r6
9002d946:	655e      	str	r6, [r3, #84]	; 0x54
				xReturn = pdTRUE;
9002d948:	e7e1      	b.n	9002d90e <xTaskNotifyWait+0x52>
9002d94a:	bf00      	nop
9002d94c:	20000f20 	.word	0x20000f20
9002d950:	e000ed04 	.word	0xe000ed04

9002d954 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9002d954:	4808      	ldr	r0, [pc, #32]	; (9002d978 <prvPortStartFirstTask+0x24>)
9002d956:	6800      	ldr	r0, [r0, #0]
9002d958:	6800      	ldr	r0, [r0, #0]
9002d95a:	f380 8808 	msr	MSP, r0
9002d95e:	f04f 0000 	mov.w	r0, #0
9002d962:	f380 8814 	msr	CONTROL, r0
9002d966:	b662      	cpsie	i
9002d968:	b661      	cpsie	f
9002d96a:	f3bf 8f4f 	dsb	sy
9002d96e:	f3bf 8f6f 	isb	sy
9002d972:	df00      	svc	0
9002d974:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9002d976:	0000      	.short	0x0000
9002d978:	e000ed08 	.word	0xe000ed08

9002d97c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9002d97c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9002d98c <vPortEnableVFP+0x10>
9002d980:	6801      	ldr	r1, [r0, #0]
9002d982:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9002d986:	6001      	str	r1, [r0, #0]
9002d988:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9002d98a:	0000      	.short	0x0000
9002d98c:	e000ed88 	.word	0xe000ed88

9002d990 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9002d990:	4b10      	ldr	r3, [pc, #64]	; (9002d9d4 <prvTaskExitError+0x44>)
{
9002d992:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9002d994:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9002d996:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9002d998:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9002d99a:	3301      	adds	r3, #1
9002d99c:	d00a      	beq.n	9002d9b4 <prvTaskExitError+0x24>
9002d99e:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d9a2:	b672      	cpsid	i
9002d9a4:	f383 8811 	msr	BASEPRI, r3
9002d9a8:	f3bf 8f6f 	isb	sy
9002d9ac:	f3bf 8f4f 	dsb	sy
9002d9b0:	b662      	cpsie	i
9002d9b2:	e7fe      	b.n	9002d9b2 <prvTaskExitError+0x22>
9002d9b4:	f04f 0350 	mov.w	r3, #80	; 0x50
9002d9b8:	b672      	cpsid	i
9002d9ba:	f383 8811 	msr	BASEPRI, r3
9002d9be:	f3bf 8f6f 	isb	sy
9002d9c2:	f3bf 8f4f 	dsb	sy
9002d9c6:	b662      	cpsie	i
	while( ulDummy == 0 )
9002d9c8:	9b01      	ldr	r3, [sp, #4]
9002d9ca:	2b00      	cmp	r3, #0
9002d9cc:	d0fc      	beq.n	9002d9c8 <prvTaskExitError+0x38>
}
9002d9ce:	b002      	add	sp, #8
9002d9d0:	4770      	bx	lr
9002d9d2:	bf00      	nop
9002d9d4:	20000040 	.word	0x20000040

9002d9d8 <pxPortInitialiseStack>:
{
9002d9d8:	b470      	push	{r4, r5, r6}
9002d9da:	4603      	mov	r3, r0
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9002d9dc:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9002d9e0:	4d08      	ldr	r5, [pc, #32]	; (9002da04 <pxPortInitialiseStack+0x2c>)
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9002d9e2:	f06f 0402 	mvn.w	r4, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9002d9e6:	f021 0101 	bic.w	r1, r1, #1
}
9002d9ea:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9002d9ec:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9002d9ee:	f843 6c04 	str.w	r6, [r3, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9002d9f2:	f843 5c0c 	str.w	r5, [r3, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9002d9f6:	f843 4c24 	str.w	r4, [r3, #-36]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9002d9fa:	f843 2c20 	str.w	r2, [r3, #-32]
}
9002d9fe:	bc70      	pop	{r4, r5, r6}
9002da00:	4770      	bx	lr
9002da02:	bf00      	nop
9002da04:	9002d991 	.word	0x9002d991
	...

9002da10 <SVC_Handler>:
	__asm volatile (
9002da10:	4b07      	ldr	r3, [pc, #28]	; (9002da30 <pxCurrentTCBConst2>)
9002da12:	6819      	ldr	r1, [r3, #0]
9002da14:	6808      	ldr	r0, [r1, #0]
9002da16:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002da1a:	f380 8809 	msr	PSP, r0
9002da1e:	f3bf 8f6f 	isb	sy
9002da22:	f04f 0000 	mov.w	r0, #0
9002da26:	f380 8811 	msr	BASEPRI, r0
9002da2a:	4770      	bx	lr
9002da2c:	f3af 8000 	nop.w

9002da30 <pxCurrentTCBConst2>:
9002da30:	20000f20 	.word	0x20000f20

9002da34 <vPortEnterCritical>:
9002da34:	f04f 0350 	mov.w	r3, #80	; 0x50
9002da38:	b672      	cpsid	i
9002da3a:	f383 8811 	msr	BASEPRI, r3
9002da3e:	f3bf 8f6f 	isb	sy
9002da42:	f3bf 8f4f 	dsb	sy
9002da46:	b662      	cpsie	i
	uxCriticalNesting++;
9002da48:	4a0b      	ldr	r2, [pc, #44]	; (9002da78 <vPortEnterCritical+0x44>)
9002da4a:	6813      	ldr	r3, [r2, #0]
9002da4c:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9002da4e:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9002da50:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9002da52:	d000      	beq.n	9002da56 <vPortEnterCritical+0x22>
}
9002da54:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9002da56:	4b09      	ldr	r3, [pc, #36]	; (9002da7c <vPortEnterCritical+0x48>)
9002da58:	681b      	ldr	r3, [r3, #0]
9002da5a:	f013 0fff 	tst.w	r3, #255	; 0xff
9002da5e:	d0f9      	beq.n	9002da54 <vPortEnterCritical+0x20>
9002da60:	f04f 0350 	mov.w	r3, #80	; 0x50
9002da64:	b672      	cpsid	i
9002da66:	f383 8811 	msr	BASEPRI, r3
9002da6a:	f3bf 8f6f 	isb	sy
9002da6e:	f3bf 8f4f 	dsb	sy
9002da72:	b662      	cpsie	i
9002da74:	e7fe      	b.n	9002da74 <vPortEnterCritical+0x40>
9002da76:	bf00      	nop
9002da78:	20000040 	.word	0x20000040
9002da7c:	e000ed04 	.word	0xe000ed04

9002da80 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9002da80:	4a09      	ldr	r2, [pc, #36]	; (9002daa8 <vPortExitCritical+0x28>)
9002da82:	6813      	ldr	r3, [r2, #0]
9002da84:	b953      	cbnz	r3, 9002da9c <vPortExitCritical+0x1c>
9002da86:	f04f 0350 	mov.w	r3, #80	; 0x50
9002da8a:	b672      	cpsid	i
9002da8c:	f383 8811 	msr	BASEPRI, r3
9002da90:	f3bf 8f6f 	isb	sy
9002da94:	f3bf 8f4f 	dsb	sy
9002da98:	b662      	cpsie	i
9002da9a:	e7fe      	b.n	9002da9a <vPortExitCritical+0x1a>
	uxCriticalNesting--;
9002da9c:	3b01      	subs	r3, #1
9002da9e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9002daa0:	b90b      	cbnz	r3, 9002daa6 <vPortExitCritical+0x26>
	__asm volatile
9002daa2:	f383 8811 	msr	BASEPRI, r3
}
9002daa6:	4770      	bx	lr
9002daa8:	20000040 	.word	0x20000040
9002daac:	00000000 	.word	0x00000000

9002dab0 <PendSV_Handler>:
	__asm volatile
9002dab0:	f3ef 8009 	mrs	r0, PSP
9002dab4:	f3bf 8f6f 	isb	sy
9002dab8:	4b15      	ldr	r3, [pc, #84]	; (9002db10 <pxCurrentTCBConst>)
9002daba:	681a      	ldr	r2, [r3, #0]
9002dabc:	f01e 0f10 	tst.w	lr, #16
9002dac0:	bf08      	it	eq
9002dac2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9002dac6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002daca:	6010      	str	r0, [r2, #0]
9002dacc:	e92d 0009 	stmdb	sp!, {r0, r3}
9002dad0:	f04f 0050 	mov.w	r0, #80	; 0x50
9002dad4:	b672      	cpsid	i
9002dad6:	f380 8811 	msr	BASEPRI, r0
9002dada:	f3bf 8f4f 	dsb	sy
9002dade:	f3bf 8f6f 	isb	sy
9002dae2:	b662      	cpsie	i
9002dae4:	f7ff fcb4 	bl	9002d450 <vTaskSwitchContext>
9002dae8:	f04f 0000 	mov.w	r0, #0
9002daec:	f380 8811 	msr	BASEPRI, r0
9002daf0:	bc09      	pop	{r0, r3}
9002daf2:	6819      	ldr	r1, [r3, #0]
9002daf4:	6808      	ldr	r0, [r1, #0]
9002daf6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002dafa:	f01e 0f10 	tst.w	lr, #16
9002dafe:	bf08      	it	eq
9002db00:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9002db04:	f380 8809 	msr	PSP, r0
9002db08:	f3bf 8f6f 	isb	sy
9002db0c:	4770      	bx	lr
9002db0e:	bf00      	nop

9002db10 <pxCurrentTCBConst>:
9002db10:	20000f20 	.word	0x20000f20

9002db14 <xPortSysTickHandler>:
{
9002db14:	b508      	push	{r3, lr}
	__asm volatile
9002db16:	f04f 0350 	mov.w	r3, #80	; 0x50
9002db1a:	b672      	cpsid	i
9002db1c:	f383 8811 	msr	BASEPRI, r3
9002db20:	f3bf 8f6f 	isb	sy
9002db24:	f3bf 8f4f 	dsb	sy
9002db28:	b662      	cpsie	i
		if( xTaskIncrementTick() != pdFALSE )
9002db2a:	f7ff fc81 	bl	9002d430 <xTaskIncrementTick>
9002db2e:	b118      	cbz	r0, 9002db38 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9002db30:	4b03      	ldr	r3, [pc, #12]	; (9002db40 <xPortSysTickHandler+0x2c>)
9002db32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9002db36:	601a      	str	r2, [r3, #0]
	__asm volatile
9002db38:	2300      	movs	r3, #0
9002db3a:	f383 8811 	msr	BASEPRI, r3
}
9002db3e:	bd08      	pop	{r3, pc}
9002db40:	e000ed04 	.word	0xe000ed04

9002db44 <vPortSetupTimerInterrupt>:
{
9002db44:	b410      	push	{r4}
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9002db46:	2300      	movs	r3, #0
9002db48:	4a08      	ldr	r2, [pc, #32]	; (9002db6c <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9002db4a:	4c09      	ldr	r4, [pc, #36]	; (9002db70 <vPortSetupTimerInterrupt+0x2c>)
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9002db4c:	2107      	movs	r1, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9002db4e:	4809      	ldr	r0, [pc, #36]	; (9002db74 <vPortSetupTimerInterrupt+0x30>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9002db50:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9002db52:	6023      	str	r3, [r4, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9002db54:	4c08      	ldr	r4, [pc, #32]	; (9002db78 <vPortSetupTimerInterrupt+0x34>)
9002db56:	6803      	ldr	r3, [r0, #0]
9002db58:	4808      	ldr	r0, [pc, #32]	; (9002db7c <vPortSetupTimerInterrupt+0x38>)
9002db5a:	fba4 4303 	umull	r4, r3, r4, r3
}
9002db5e:	f85d 4b04 	ldr.w	r4, [sp], #4
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9002db62:	099b      	lsrs	r3, r3, #6
9002db64:	3b01      	subs	r3, #1
9002db66:	6003      	str	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9002db68:	6011      	str	r1, [r2, #0]
}
9002db6a:	4770      	bx	lr
9002db6c:	e000e010 	.word	0xe000e010
9002db70:	e000e018 	.word	0xe000e018
9002db74:	20000030 	.word	0x20000030
9002db78:	10624dd3 	.word	0x10624dd3
9002db7c:	e000e014 	.word	0xe000e014

9002db80 <xPortStartScheduler>:
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9002db80:	4b2c      	ldr	r3, [pc, #176]	; (9002dc34 <xPortStartScheduler+0xb4>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9002db82:	482d      	ldr	r0, [pc, #180]	; (9002dc38 <xPortStartScheduler+0xb8>)
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9002db84:	492d      	ldr	r1, [pc, #180]	; (9002dc3c <xPortStartScheduler+0xbc>)
{
9002db86:	b530      	push	{r4, r5, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9002db88:	781a      	ldrb	r2, [r3, #0]
{
9002db8a:	b083      	sub	sp, #12
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9002db8c:	25ff      	movs	r5, #255	; 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9002db8e:	2407      	movs	r4, #7
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9002db90:	b2d2      	uxtb	r2, r2
9002db92:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9002db94:	701d      	strb	r5, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9002db96:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9002db98:	600c      	str	r4, [r1, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9002db9a:	b2db      	uxtb	r3, r3
9002db9c:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9002dba0:	f89d 3003 	ldrb.w	r3, [sp, #3]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9002dba4:	f89d 2003 	ldrb.w	r2, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9002dba8:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9002dbac:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9002dbae:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9002dbb0:	d50f      	bpl.n	9002dbd2 <xPortStartScheduler+0x52>
9002dbb2:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9002dbb4:	f89d 3003 	ldrb.w	r3, [sp, #3]
9002dbb8:	4610      	mov	r0, r2
9002dbba:	3a01      	subs	r2, #1
9002dbbc:	005b      	lsls	r3, r3, #1
9002dbbe:	b2db      	uxtb	r3, r3
9002dbc0:	f88d 3003 	strb.w	r3, [sp, #3]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9002dbc4:	f89d 3003 	ldrb.w	r3, [sp, #3]
9002dbc8:	061b      	lsls	r3, r3, #24
9002dbca:	d4f3      	bmi.n	9002dbb4 <xPortStartScheduler+0x34>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9002dbcc:	2803      	cmp	r0, #3
9002dbce:	d00b      	beq.n	9002dbe8 <xPortStartScheduler+0x68>
9002dbd0:	6008      	str	r0, [r1, #0]
	__asm volatile
9002dbd2:	f04f 0350 	mov.w	r3, #80	; 0x50
9002dbd6:	b672      	cpsid	i
9002dbd8:	f383 8811 	msr	BASEPRI, r3
9002dbdc:	f3bf 8f6f 	isb	sy
9002dbe0:	f3bf 8f4f 	dsb	sy
9002dbe4:	b662      	cpsie	i
9002dbe6:	e7fe      	b.n	9002dbe6 <xPortStartScheduler+0x66>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9002dbe8:	9a01      	ldr	r2, [sp, #4]
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9002dbea:	f44f 7540 	mov.w	r5, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9002dbee:	4811      	ldr	r0, [pc, #68]	; (9002dc34 <xPortStartScheduler+0xb4>)
	uxCriticalNesting = 0;
9002dbf0:	2400      	movs	r4, #0
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9002dbf2:	4b13      	ldr	r3, [pc, #76]	; (9002dc40 <xPortStartScheduler+0xc0>)
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9002dbf4:	b2d2      	uxtb	r2, r2
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9002dbf6:	600d      	str	r5, [r1, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9002dbf8:	7002      	strb	r2, [r0, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9002dbfa:	681a      	ldr	r2, [r3, #0]
9002dbfc:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
9002dc00:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9002dc02:	681a      	ldr	r2, [r3, #0]
9002dc04:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
9002dc08:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
9002dc0a:	f7ff ff9b 	bl	9002db44 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9002dc0e:	4b0d      	ldr	r3, [pc, #52]	; (9002dc44 <xPortStartScheduler+0xc4>)
9002dc10:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
9002dc12:	f7ff feb3 	bl	9002d97c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9002dc16:	4a0c      	ldr	r2, [pc, #48]	; (9002dc48 <xPortStartScheduler+0xc8>)
9002dc18:	6813      	ldr	r3, [r2, #0]
9002dc1a:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9002dc1e:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
9002dc20:	f7ff fe98 	bl	9002d954 <prvPortStartFirstTask>
	vTaskSwitchContext();
9002dc24:	f7ff fc14 	bl	9002d450 <vTaskSwitchContext>
	prvTaskExitError();
9002dc28:	f7ff feb2 	bl	9002d990 <prvTaskExitError>
}
9002dc2c:	4620      	mov	r0, r4
9002dc2e:	b003      	add	sp, #12
9002dc30:	bd30      	pop	{r4, r5, pc}
9002dc32:	bf00      	nop
9002dc34:	e000e400 	.word	0xe000e400
9002dc38:	2000104c 	.word	0x2000104c
9002dc3c:	20001050 	.word	0x20001050
9002dc40:	e000ed20 	.word	0xe000ed20
9002dc44:	20000040 	.word	0x20000040
9002dc48:	e000ef34 	.word	0xe000ef34

9002dc4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9002dc4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9002dc50:	2b0f      	cmp	r3, #15
9002dc52:	d910      	bls.n	9002dc76 <vPortValidateInterruptPriority+0x2a>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9002dc54:	4912      	ldr	r1, [pc, #72]	; (9002dca0 <vPortValidateInterruptPriority+0x54>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9002dc56:	4a13      	ldr	r2, [pc, #76]	; (9002dca4 <vPortValidateInterruptPriority+0x58>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9002dc58:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9002dc5a:	7812      	ldrb	r2, [r2, #0]
9002dc5c:	429a      	cmp	r2, r3
9002dc5e:	d90a      	bls.n	9002dc76 <vPortValidateInterruptPriority+0x2a>
9002dc60:	f04f 0350 	mov.w	r3, #80	; 0x50
9002dc64:	b672      	cpsid	i
9002dc66:	f383 8811 	msr	BASEPRI, r3
9002dc6a:	f3bf 8f6f 	isb	sy
9002dc6e:	f3bf 8f4f 	dsb	sy
9002dc72:	b662      	cpsie	i
9002dc74:	e7fe      	b.n	9002dc74 <vPortValidateInterruptPriority+0x28>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9002dc76:	4b0c      	ldr	r3, [pc, #48]	; (9002dca8 <vPortValidateInterruptPriority+0x5c>)
9002dc78:	4a0c      	ldr	r2, [pc, #48]	; (9002dcac <vPortValidateInterruptPriority+0x60>)
9002dc7a:	681b      	ldr	r3, [r3, #0]
9002dc7c:	6812      	ldr	r2, [r2, #0]
9002dc7e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9002dc82:	4293      	cmp	r3, r2
9002dc84:	d90a      	bls.n	9002dc9c <vPortValidateInterruptPriority+0x50>
9002dc86:	f04f 0350 	mov.w	r3, #80	; 0x50
9002dc8a:	b672      	cpsid	i
9002dc8c:	f383 8811 	msr	BASEPRI, r3
9002dc90:	f3bf 8f6f 	isb	sy
9002dc94:	f3bf 8f4f 	dsb	sy
9002dc98:	b662      	cpsie	i
9002dc9a:	e7fe      	b.n	9002dc9a <vPortValidateInterruptPriority+0x4e>
	}
9002dc9c:	4770      	bx	lr
9002dc9e:	bf00      	nop
9002dca0:	e000e3f0 	.word	0xe000e3f0
9002dca4:	2000104c 	.word	0x2000104c
9002dca8:	e000ed0c 	.word	0xe000ed0c
9002dcac:	20001050 	.word	0x20001050

9002dcb0 <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9002dcb0:	4b15      	ldr	r3, [pc, #84]	; (9002dd08 <prvInsertBlockIntoFreeList+0x58>)
{
9002dcb2:	b410      	push	{r4}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9002dcb4:	461a      	mov	r2, r3
9002dcb6:	681b      	ldr	r3, [r3, #0]
9002dcb8:	4283      	cmp	r3, r0
9002dcba:	d3fb      	bcc.n	9002dcb4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9002dcbc:	6851      	ldr	r1, [r2, #4]
9002dcbe:	1854      	adds	r4, r2, r1
9002dcc0:	42a0      	cmp	r0, r4
9002dcc2:	d00a      	beq.n	9002dcda <prvInsertBlockIntoFreeList+0x2a>
9002dcc4:	6841      	ldr	r1, [r0, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9002dcc6:	1844      	adds	r4, r0, r1
9002dcc8:	42a3      	cmp	r3, r4
9002dcca:	d00d      	beq.n	9002dce8 <prvInsertBlockIntoFreeList+0x38>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9002dccc:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9002dcce:	6003      	str	r3, [r0, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9002dcd0:	f85d 4b04 	ldr.w	r4, [sp], #4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9002dcd4:	bf18      	it	ne
9002dcd6:	6010      	strne	r0, [r2, #0]
}
9002dcd8:	4770      	bx	lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9002dcda:	6844      	ldr	r4, [r0, #4]
9002dcdc:	4610      	mov	r0, r2
9002dcde:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9002dce0:	1844      	adds	r4, r0, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9002dce2:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9002dce4:	42a3      	cmp	r3, r4
9002dce6:	d1f1      	bne.n	9002dccc <prvInsertBlockIntoFreeList+0x1c>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9002dce8:	4c08      	ldr	r4, [pc, #32]	; (9002dd0c <prvInsertBlockIntoFreeList+0x5c>)
9002dcea:	6824      	ldr	r4, [r4, #0]
9002dcec:	42a3      	cmp	r3, r4
9002dcee:	d0ed      	beq.n	9002dccc <prvInsertBlockIntoFreeList+0x1c>
	if( pxIterator != pxBlockToInsert )
9002dcf0:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9002dcf2:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9002dcf6:	4421      	add	r1, r4
}
9002dcf8:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9002dcfc:	e9c0 3100 	strd	r3, r1, [r0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9002dd00:	bf18      	it	ne
9002dd02:	6010      	strne	r0, [r2, #0]
}
9002dd04:	4770      	bx	lr
9002dd06:	bf00      	nop
9002dd08:	2000386c 	.word	0x2000386c
9002dd0c:	20001054 	.word	0x20001054

9002dd10 <pvPortMalloc>:
{
9002dd10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002dd14:	4604      	mov	r4, r0
	vTaskSuspendAll();
9002dd16:	f7ff fae5 	bl	9002d2e4 <vTaskSuspendAll>
		if( pxEnd == NULL )
9002dd1a:	4948      	ldr	r1, [pc, #288]	; (9002de3c <pvPortMalloc+0x12c>)
9002dd1c:	680b      	ldr	r3, [r1, #0]
9002dd1e:	2b00      	cmp	r3, #0
9002dd20:	d03e      	beq.n	9002dda0 <pvPortMalloc+0x90>
9002dd22:	4b47      	ldr	r3, [pc, #284]	; (9002de40 <pvPortMalloc+0x130>)
9002dd24:	681e      	ldr	r6, [r3, #0]
			if( xWantedSize > 0 )
9002dd26:	4234      	tst	r4, r6
9002dd28:	d134      	bne.n	9002dd94 <pvPortMalloc+0x84>
9002dd2a:	2c00      	cmp	r4, #0
9002dd2c:	d032      	beq.n	9002dd94 <pvPortMalloc+0x84>
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9002dd2e:	0760      	lsls	r0, r4, #29
				xWantedSize += xHeapStructSize;
9002dd30:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9002dd34:	d002      	beq.n	9002dd3c <pvPortMalloc+0x2c>
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9002dd36:	f023 0307 	bic.w	r3, r3, #7
9002dd3a:	3308      	adds	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9002dd3c:	b353      	cbz	r3, 9002dd94 <pvPortMalloc+0x84>
9002dd3e:	f8df 8114 	ldr.w	r8, [pc, #276]	; 9002de54 <pvPortMalloc+0x144>
9002dd42:	f8d8 5000 	ldr.w	r5, [r8]
9002dd46:	429d      	cmp	r5, r3
9002dd48:	d324      	bcc.n	9002dd94 <pvPortMalloc+0x84>
				pxBlock = xStart.pxNextFreeBlock;
9002dd4a:	4a3e      	ldr	r2, [pc, #248]	; (9002de44 <pvPortMalloc+0x134>)
9002dd4c:	6814      	ldr	r4, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9002dd4e:	e003      	b.n	9002dd58 <pvPortMalloc+0x48>
9002dd50:	6827      	ldr	r7, [r4, #0]
9002dd52:	b127      	cbz	r7, 9002dd5e <pvPortMalloc+0x4e>
9002dd54:	4622      	mov	r2, r4
9002dd56:	463c      	mov	r4, r7
9002dd58:	6860      	ldr	r0, [r4, #4]
9002dd5a:	4298      	cmp	r0, r3
9002dd5c:	d3f8      	bcc.n	9002dd50 <pvPortMalloc+0x40>
				if( pxBlock != pxEnd )
9002dd5e:	6809      	ldr	r1, [r1, #0]
9002dd60:	42a1      	cmp	r1, r4
9002dd62:	d017      	beq.n	9002dd94 <pvPortMalloc+0x84>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9002dd64:	eba0 0c03 	sub.w	ip, r0, r3
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9002dd68:	6817      	ldr	r7, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9002dd6a:	6821      	ldr	r1, [r4, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9002dd6c:	f1bc 0f10 	cmp.w	ip, #16
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9002dd70:	f107 0708 	add.w	r7, r7, #8
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9002dd74:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9002dd76:	d93b      	bls.n	9002ddf0 <pvPortMalloc+0xe0>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9002dd78:	18e0      	adds	r0, r4, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9002dd7a:	0742      	lsls	r2, r0, #29
9002dd7c:	d032      	beq.n	9002dde4 <pvPortMalloc+0xd4>
9002dd7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9002dd82:	b672      	cpsid	i
9002dd84:	f383 8811 	msr	BASEPRI, r3
9002dd88:	f3bf 8f6f 	isb	sy
9002dd8c:	f3bf 8f4f 	dsb	sy
9002dd90:	b662      	cpsie	i
9002dd92:	e7fe      	b.n	9002dd92 <pvPortMalloc+0x82>
	( void ) xTaskResumeAll();
9002dd94:	2700      	movs	r7, #0
9002dd96:	f7ff faad 	bl	9002d2f4 <xTaskResumeAll>
}
9002dd9a:	4638      	mov	r0, r7
9002dd9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	uxAddress = ( size_t ) ucHeap;
9002dda0:	4b29      	ldr	r3, [pc, #164]	; (9002de48 <pvPortMalloc+0x138>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9002dda2:	075d      	lsls	r5, r3, #29
9002dda4:	d044      	beq.n	9002de30 <pvPortMalloc+0x120>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9002dda6:	1dda      	adds	r2, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9002dda8:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
9002ddac:	f022 0207 	bic.w	r2, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9002ddb0:	4610      	mov	r0, r2
	uxAddress -= xHeapStructSize;
9002ddb2:	3b08      	subs	r3, #8
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9002ddb4:	4e25      	ldr	r6, [pc, #148]	; (9002de4c <pvPortMalloc+0x13c>)
	xStart.xBlockSize = ( size_t ) 0;
9002ddb6:	2500      	movs	r5, #0
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9002ddb8:	f8df c098 	ldr.w	ip, [pc, #152]	; 9002de54 <pvPortMalloc+0x144>
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9002ddbc:	f023 0307 	bic.w	r3, r3, #7
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9002ddc0:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9002ddc4:	1a9a      	subs	r2, r3, r2
	pxEnd = ( void * ) uxAddress;
9002ddc6:	600b      	str	r3, [r1, #0]
	pxEnd->pxNextFreeBlock = NULL;
9002ddc8:	e9c3 5500 	strd	r5, r5, [r3]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9002ddcc:	6032      	str	r2, [r6, #0]
}
9002ddce:	463e      	mov	r6, r7
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9002ddd0:	f8cc 2000 	str.w	r2, [ip]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9002ddd4:	e9c0 3200 	strd	r3, r2, [r0]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9002ddd8:	4b1a      	ldr	r3, [pc, #104]	; (9002de44 <pvPortMalloc+0x134>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9002ddda:	4a19      	ldr	r2, [pc, #100]	; (9002de40 <pvPortMalloc+0x130>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9002dddc:	e9c3 0500 	strd	r0, r5, [r3]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9002dde0:	6017      	str	r7, [r2, #0]
}
9002dde2:	e7a0      	b.n	9002dd26 <pvPortMalloc+0x16>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9002dde4:	f8c0 c004 	str.w	ip, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
9002dde8:	6063      	str	r3, [r4, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
9002ddea:	f7ff ff61 	bl	9002dcb0 <prvInsertBlockIntoFreeList>
9002ddee:	6860      	ldr	r0, [r4, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9002ddf0:	4a16      	ldr	r2, [pc, #88]	; (9002de4c <pvPortMalloc+0x13c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9002ddf2:	1a2d      	subs	r5, r5, r0
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9002ddf4:	4306      	orrs	r6, r0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9002ddf6:	6811      	ldr	r1, [r2, #0]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9002ddf8:	6066      	str	r6, [r4, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9002ddfa:	428d      	cmp	r5, r1
					pxBlock->pxNextFreeBlock = NULL;
9002ddfc:	f04f 0100 	mov.w	r1, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9002de00:	f8c8 5000 	str.w	r5, [r8]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9002de04:	bf38      	it	cc
9002de06:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9002de08:	4a11      	ldr	r2, [pc, #68]	; (9002de50 <pvPortMalloc+0x140>)
					pxBlock->pxNextFreeBlock = NULL;
9002de0a:	6021      	str	r1, [r4, #0]
					xNumberOfSuccessfulAllocations++;
9002de0c:	6813      	ldr	r3, [r2, #0]
9002de0e:	3301      	adds	r3, #1
9002de10:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9002de12:	f7ff fa6f 	bl	9002d2f4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9002de16:	077b      	lsls	r3, r7, #29
9002de18:	d0bf      	beq.n	9002dd9a <pvPortMalloc+0x8a>
9002de1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9002de1e:	b672      	cpsid	i
9002de20:	f383 8811 	msr	BASEPRI, r3
9002de24:	f3bf 8f6f 	isb	sy
9002de28:	f3bf 8f4f 	dsb	sy
9002de2c:	b662      	cpsie	i
9002de2e:	e7fe      	b.n	9002de2e <pvPortMalloc+0x11e>
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9002de30:	461a      	mov	r2, r3
9002de32:	f503 5320 	add.w	r3, r3, #10240	; 0x2800
9002de36:	4610      	mov	r0, r2
9002de38:	e7bb      	b.n	9002ddb2 <pvPortMalloc+0xa2>
9002de3a:	bf00      	nop
9002de3c:	20001054 	.word	0x20001054
9002de40:	20003858 	.word	0x20003858
9002de44:	2000386c 	.word	0x2000386c
9002de48:	20001058 	.word	0x20001058
9002de4c:	20003860 	.word	0x20003860
9002de50:	20003864 	.word	0x20003864
9002de54:	2000385c 	.word	0x2000385c

9002de58 <vPortFree>:
	if( pv != NULL )
9002de58:	b300      	cbz	r0, 9002de9c <vPortFree+0x44>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9002de5a:	4a1d      	ldr	r2, [pc, #116]	; (9002ded0 <vPortFree+0x78>)
9002de5c:	f850 3c04 	ldr.w	r3, [r0, #-4]
9002de60:	6812      	ldr	r2, [r2, #0]
9002de62:	4213      	tst	r3, r2
{
9002de64:	b510      	push	{r4, lr}
9002de66:	4604      	mov	r4, r0
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9002de68:	d00d      	beq.n	9002de86 <vPortFree+0x2e>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9002de6a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9002de6e:	b1b1      	cbz	r1, 9002de9e <vPortFree+0x46>
9002de70:	f04f 0350 	mov.w	r3, #80	; 0x50
9002de74:	b672      	cpsid	i
9002de76:	f383 8811 	msr	BASEPRI, r3
9002de7a:	f3bf 8f6f 	isb	sy
9002de7e:	f3bf 8f4f 	dsb	sy
9002de82:	b662      	cpsie	i
9002de84:	e7fe      	b.n	9002de84 <vPortFree+0x2c>
9002de86:	f04f 0350 	mov.w	r3, #80	; 0x50
9002de8a:	b672      	cpsid	i
9002de8c:	f383 8811 	msr	BASEPRI, r3
9002de90:	f3bf 8f6f 	isb	sy
9002de94:	f3bf 8f4f 	dsb	sy
9002de98:	b662      	cpsie	i
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9002de9a:	e7fe      	b.n	9002de9a <vPortFree+0x42>
9002de9c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9002de9e:	ea23 0302 	bic.w	r3, r3, r2
9002dea2:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
9002dea6:	f7ff fa1d 	bl	9002d2e4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9002deaa:	4a0a      	ldr	r2, [pc, #40]	; (9002ded4 <vPortFree+0x7c>)
9002deac:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
9002deb0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9002deb4:	6811      	ldr	r1, [r2, #0]
9002deb6:	440b      	add	r3, r1
9002deb8:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
9002deba:	f7ff fef9 	bl	9002dcb0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
9002debe:	4a06      	ldr	r2, [pc, #24]	; (9002ded8 <vPortFree+0x80>)
9002dec0:	6813      	ldr	r3, [r2, #0]
9002dec2:	3301      	adds	r3, #1
}
9002dec4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
9002dec8:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
9002deca:	f7ff ba13 	b.w	9002d2f4 <xTaskResumeAll>
9002dece:	bf00      	nop
9002ded0:	20003858 	.word	0x20003858
9002ded4:	2000385c 	.word	0x2000385c
9002ded8:	20003868 	.word	0x20003868

9002dedc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
9002dedc:	f8df d034 	ldr.w	sp, [pc, #52]	; 9002df14 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
9002dee0:	2100      	movs	r1, #0
  b  LoopCopyDataInit
9002dee2:	e003      	b.n	9002deec <LoopCopyDataInit>

9002dee4 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
9002dee4:	4b0c      	ldr	r3, [pc, #48]	; (9002df18 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9002dee6:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9002dee8:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9002deea:	3104      	adds	r1, #4

9002deec <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
9002deec:	480b      	ldr	r0, [pc, #44]	; (9002df1c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
9002deee:	4b0c      	ldr	r3, [pc, #48]	; (9002df20 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
9002def0:	1842      	adds	r2, r0, r1
  cmp  r2, r3
9002def2:	429a      	cmp	r2, r3
  bcc  CopyDataInit
9002def4:	d3f6      	bcc.n	9002dee4 <CopyDataInit>
  ldr  r2, =_sbss
9002def6:	4a0b      	ldr	r2, [pc, #44]	; (9002df24 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9002def8:	e002      	b.n	9002df00 <LoopFillZerobss>

9002defa <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9002defa:	2300      	movs	r3, #0
  str  r3, [r2], #4
9002defc:	f842 3b04 	str.w	r3, [r2], #4

9002df00 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
9002df00:	4b09      	ldr	r3, [pc, #36]	; (9002df28 <LoopFillZerobss+0x28>)
  cmp  r2, r3
9002df02:	429a      	cmp	r2, r3
  bcc  FillZerobss
9002df04:	d3f9      	bcc.n	9002defa <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
9002df06:	f7fa f939 	bl	9002817c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
9002df0a:	f000 f811 	bl	9002df30 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
9002df0e:	f7f8 f8cf 	bl	900260b0 <main>
  bx  lr    
9002df12:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
9002df14:	2001fff0 	.word	0x2001fff0
  ldr  r3, =_sidata
9002df18:	90035690 	.word	0x90035690
  ldr  r0, =_sdata
9002df1c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
9002df20:	200000ac 	.word	0x200000ac
  ldr  r2, =_sbss
9002df24:	200000ac 	.word	0x200000ac
  ldr  r3, = _ebss
9002df28:	20003a50 	.word	0x20003a50

9002df2c <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
9002df2c:	e7fe      	b.n	9002df2c <ADC3_IRQHandler>
	...

9002df30 <__libc_init_array>:
9002df30:	b570      	push	{r4, r5, r6, lr}
9002df32:	4d0d      	ldr	r5, [pc, #52]	; (9002df68 <__libc_init_array+0x38>)
9002df34:	4c0d      	ldr	r4, [pc, #52]	; (9002df6c <__libc_init_array+0x3c>)
9002df36:	1b64      	subs	r4, r4, r5
9002df38:	10a4      	asrs	r4, r4, #2
9002df3a:	2600      	movs	r6, #0
9002df3c:	42a6      	cmp	r6, r4
9002df3e:	d109      	bne.n	9002df54 <__libc_init_array+0x24>
9002df40:	4d0b      	ldr	r5, [pc, #44]	; (9002df70 <__libc_init_array+0x40>)
9002df42:	4c0c      	ldr	r4, [pc, #48]	; (9002df74 <__libc_init_array+0x44>)
9002df44:	f001 fd82 	bl	9002fa4c <_init>
9002df48:	1b64      	subs	r4, r4, r5
9002df4a:	10a4      	asrs	r4, r4, #2
9002df4c:	2600      	movs	r6, #0
9002df4e:	42a6      	cmp	r6, r4
9002df50:	d105      	bne.n	9002df5e <__libc_init_array+0x2e>
9002df52:	bd70      	pop	{r4, r5, r6, pc}
9002df54:	f855 3b04 	ldr.w	r3, [r5], #4
9002df58:	4798      	blx	r3
9002df5a:	3601      	adds	r6, #1
9002df5c:	e7ee      	b.n	9002df3c <__libc_init_array+0xc>
9002df5e:	f855 3b04 	ldr.w	r3, [r5], #4
9002df62:	4798      	blx	r3
9002df64:	3601      	adds	r6, #1
9002df66:	e7f2      	b.n	9002df4e <__libc_init_array+0x1e>
9002df68:	90035688 	.word	0x90035688
9002df6c:	90035688 	.word	0x90035688
9002df70:	90035688 	.word	0x90035688
9002df74:	9003568c 	.word	0x9003568c

9002df78 <memcpy>:
9002df78:	440a      	add	r2, r1
9002df7a:	4291      	cmp	r1, r2
9002df7c:	f100 33ff 	add.w	r3, r0, #4294967295
9002df80:	d100      	bne.n	9002df84 <memcpy+0xc>
9002df82:	4770      	bx	lr
9002df84:	b510      	push	{r4, lr}
9002df86:	f811 4b01 	ldrb.w	r4, [r1], #1
9002df8a:	f803 4f01 	strb.w	r4, [r3, #1]!
9002df8e:	4291      	cmp	r1, r2
9002df90:	d1f9      	bne.n	9002df86 <memcpy+0xe>
9002df92:	bd10      	pop	{r4, pc}

9002df94 <memmove>:
9002df94:	4288      	cmp	r0, r1
9002df96:	b510      	push	{r4, lr}
9002df98:	eb01 0402 	add.w	r4, r1, r2
9002df9c:	d902      	bls.n	9002dfa4 <memmove+0x10>
9002df9e:	4284      	cmp	r4, r0
9002dfa0:	4623      	mov	r3, r4
9002dfa2:	d807      	bhi.n	9002dfb4 <memmove+0x20>
9002dfa4:	1e43      	subs	r3, r0, #1
9002dfa6:	42a1      	cmp	r1, r4
9002dfa8:	d008      	beq.n	9002dfbc <memmove+0x28>
9002dfaa:	f811 2b01 	ldrb.w	r2, [r1], #1
9002dfae:	f803 2f01 	strb.w	r2, [r3, #1]!
9002dfb2:	e7f8      	b.n	9002dfa6 <memmove+0x12>
9002dfb4:	4402      	add	r2, r0
9002dfb6:	4601      	mov	r1, r0
9002dfb8:	428a      	cmp	r2, r1
9002dfba:	d100      	bne.n	9002dfbe <memmove+0x2a>
9002dfbc:	bd10      	pop	{r4, pc}
9002dfbe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
9002dfc2:	f802 4d01 	strb.w	r4, [r2, #-1]!
9002dfc6:	e7f7      	b.n	9002dfb8 <memmove+0x24>

9002dfc8 <memset>:
9002dfc8:	4402      	add	r2, r0
9002dfca:	4603      	mov	r3, r0
9002dfcc:	4293      	cmp	r3, r2
9002dfce:	d100      	bne.n	9002dfd2 <memset+0xa>
9002dfd0:	4770      	bx	lr
9002dfd2:	f803 1b01 	strb.w	r1, [r3], #1
9002dfd6:	e7f9      	b.n	9002dfcc <memset+0x4>

9002dfd8 <srand>:
9002dfd8:	b538      	push	{r3, r4, r5, lr}
9002dfda:	4b10      	ldr	r3, [pc, #64]	; (9002e01c <srand+0x44>)
9002dfdc:	681d      	ldr	r5, [r3, #0]
9002dfde:	6bab      	ldr	r3, [r5, #56]	; 0x38
9002dfe0:	4604      	mov	r4, r0
9002dfe2:	b9b3      	cbnz	r3, 9002e012 <srand+0x3a>
9002dfe4:	2018      	movs	r0, #24
9002dfe6:	f000 f895 	bl	9002e114 <malloc>
9002dfea:	4602      	mov	r2, r0
9002dfec:	63a8      	str	r0, [r5, #56]	; 0x38
9002dfee:	b920      	cbnz	r0, 9002dffa <srand+0x22>
9002dff0:	4b0b      	ldr	r3, [pc, #44]	; (9002e020 <srand+0x48>)
9002dff2:	480c      	ldr	r0, [pc, #48]	; (9002e024 <srand+0x4c>)
9002dff4:	2142      	movs	r1, #66	; 0x42
9002dff6:	f000 f85d 	bl	9002e0b4 <__assert_func>
9002dffa:	490b      	ldr	r1, [pc, #44]	; (9002e028 <srand+0x50>)
9002dffc:	4b0b      	ldr	r3, [pc, #44]	; (9002e02c <srand+0x54>)
9002dffe:	e9c0 1300 	strd	r1, r3, [r0]
9002e002:	4b0b      	ldr	r3, [pc, #44]	; (9002e030 <srand+0x58>)
9002e004:	6083      	str	r3, [r0, #8]
9002e006:	230b      	movs	r3, #11
9002e008:	8183      	strh	r3, [r0, #12]
9002e00a:	2100      	movs	r1, #0
9002e00c:	2001      	movs	r0, #1
9002e00e:	e9c2 0104 	strd	r0, r1, [r2, #16]
9002e012:	6bab      	ldr	r3, [r5, #56]	; 0x38
9002e014:	2200      	movs	r2, #0
9002e016:	611c      	str	r4, [r3, #16]
9002e018:	615a      	str	r2, [r3, #20]
9002e01a:	bd38      	pop	{r3, r4, r5, pc}
9002e01c:	20000044 	.word	0x20000044
9002e020:	90035188 	.word	0x90035188
9002e024:	9003519f 	.word	0x9003519f
9002e028:	abcd330e 	.word	0xabcd330e
9002e02c:	e66d1234 	.word	0xe66d1234
9002e030:	0005deec 	.word	0x0005deec

9002e034 <rand>:
9002e034:	4b17      	ldr	r3, [pc, #92]	; (9002e094 <rand+0x60>)
9002e036:	b510      	push	{r4, lr}
9002e038:	681c      	ldr	r4, [r3, #0]
9002e03a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9002e03c:	b9b3      	cbnz	r3, 9002e06c <rand+0x38>
9002e03e:	2018      	movs	r0, #24
9002e040:	f000 f868 	bl	9002e114 <malloc>
9002e044:	63a0      	str	r0, [r4, #56]	; 0x38
9002e046:	b928      	cbnz	r0, 9002e054 <rand+0x20>
9002e048:	4602      	mov	r2, r0
9002e04a:	4b13      	ldr	r3, [pc, #76]	; (9002e098 <rand+0x64>)
9002e04c:	4813      	ldr	r0, [pc, #76]	; (9002e09c <rand+0x68>)
9002e04e:	214e      	movs	r1, #78	; 0x4e
9002e050:	f000 f830 	bl	9002e0b4 <__assert_func>
9002e054:	4a12      	ldr	r2, [pc, #72]	; (9002e0a0 <rand+0x6c>)
9002e056:	4b13      	ldr	r3, [pc, #76]	; (9002e0a4 <rand+0x70>)
9002e058:	e9c0 2300 	strd	r2, r3, [r0]
9002e05c:	4b12      	ldr	r3, [pc, #72]	; (9002e0a8 <rand+0x74>)
9002e05e:	6083      	str	r3, [r0, #8]
9002e060:	230b      	movs	r3, #11
9002e062:	8183      	strh	r3, [r0, #12]
9002e064:	2201      	movs	r2, #1
9002e066:	2300      	movs	r3, #0
9002e068:	e9c0 2304 	strd	r2, r3, [r0, #16]
9002e06c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
9002e06e:	480f      	ldr	r0, [pc, #60]	; (9002e0ac <rand+0x78>)
9002e070:	690a      	ldr	r2, [r1, #16]
9002e072:	694b      	ldr	r3, [r1, #20]
9002e074:	4c0e      	ldr	r4, [pc, #56]	; (9002e0b0 <rand+0x7c>)
9002e076:	4350      	muls	r0, r2
9002e078:	fb04 0003 	mla	r0, r4, r3, r0
9002e07c:	fba2 3404 	umull	r3, r4, r2, r4
9002e080:	1c5a      	adds	r2, r3, #1
9002e082:	4404      	add	r4, r0
9002e084:	f144 0000 	adc.w	r0, r4, #0
9002e088:	e9c1 2004 	strd	r2, r0, [r1, #16]
9002e08c:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
9002e090:	bd10      	pop	{r4, pc}
9002e092:	bf00      	nop
9002e094:	20000044 	.word	0x20000044
9002e098:	90035188 	.word	0x90035188
9002e09c:	9003519f 	.word	0x9003519f
9002e0a0:	abcd330e 	.word	0xabcd330e
9002e0a4:	e66d1234 	.word	0xe66d1234
9002e0a8:	0005deec 	.word	0x0005deec
9002e0ac:	5851f42d 	.word	0x5851f42d
9002e0b0:	4c957f2d 	.word	0x4c957f2d

9002e0b4 <__assert_func>:
9002e0b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002e0b6:	4614      	mov	r4, r2
9002e0b8:	461a      	mov	r2, r3
9002e0ba:	4b09      	ldr	r3, [pc, #36]	; (9002e0e0 <__assert_func+0x2c>)
9002e0bc:	681b      	ldr	r3, [r3, #0]
9002e0be:	4605      	mov	r5, r0
9002e0c0:	68d8      	ldr	r0, [r3, #12]
9002e0c2:	b14c      	cbz	r4, 9002e0d8 <__assert_func+0x24>
9002e0c4:	4b07      	ldr	r3, [pc, #28]	; (9002e0e4 <__assert_func+0x30>)
9002e0c6:	9100      	str	r1, [sp, #0]
9002e0c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
9002e0cc:	4906      	ldr	r1, [pc, #24]	; (9002e0e8 <__assert_func+0x34>)
9002e0ce:	462b      	mov	r3, r5
9002e0d0:	f000 f80e 	bl	9002e0f0 <fiprintf>
9002e0d4:	f000 fc8e 	bl	9002e9f4 <abort>
9002e0d8:	4b04      	ldr	r3, [pc, #16]	; (9002e0ec <__assert_func+0x38>)
9002e0da:	461c      	mov	r4, r3
9002e0dc:	e7f3      	b.n	9002e0c6 <__assert_func+0x12>
9002e0de:	bf00      	nop
9002e0e0:	20000044 	.word	0x20000044
9002e0e4:	900351fe 	.word	0x900351fe
9002e0e8:	9003520b 	.word	0x9003520b
9002e0ec:	9003505a 	.word	0x9003505a

9002e0f0 <fiprintf>:
9002e0f0:	b40e      	push	{r1, r2, r3}
9002e0f2:	b503      	push	{r0, r1, lr}
9002e0f4:	4601      	mov	r1, r0
9002e0f6:	ab03      	add	r3, sp, #12
9002e0f8:	4805      	ldr	r0, [pc, #20]	; (9002e110 <fiprintf+0x20>)
9002e0fa:	f853 2b04 	ldr.w	r2, [r3], #4
9002e0fe:	6800      	ldr	r0, [r0, #0]
9002e100:	9301      	str	r3, [sp, #4]
9002e102:	f000 f8e3 	bl	9002e2cc <_vfiprintf_r>
9002e106:	b002      	add	sp, #8
9002e108:	f85d eb04 	ldr.w	lr, [sp], #4
9002e10c:	b003      	add	sp, #12
9002e10e:	4770      	bx	lr
9002e110:	20000044 	.word	0x20000044

9002e114 <malloc>:
9002e114:	4b02      	ldr	r3, [pc, #8]	; (9002e120 <malloc+0xc>)
9002e116:	4601      	mov	r1, r0
9002e118:	6818      	ldr	r0, [r3, #0]
9002e11a:	f000 b853 	b.w	9002e1c4 <_malloc_r>
9002e11e:	bf00      	nop
9002e120:	20000044 	.word	0x20000044

9002e124 <_free_r>:
9002e124:	b537      	push	{r0, r1, r2, r4, r5, lr}
9002e126:	2900      	cmp	r1, #0
9002e128:	d048      	beq.n	9002e1bc <_free_r+0x98>
9002e12a:	f851 3c04 	ldr.w	r3, [r1, #-4]
9002e12e:	9001      	str	r0, [sp, #4]
9002e130:	2b00      	cmp	r3, #0
9002e132:	f1a1 0404 	sub.w	r4, r1, #4
9002e136:	bfb8      	it	lt
9002e138:	18e4      	addlt	r4, r4, r3
9002e13a:	f000 fe81 	bl	9002ee40 <__malloc_lock>
9002e13e:	4a20      	ldr	r2, [pc, #128]	; (9002e1c0 <_free_r+0x9c>)
9002e140:	9801      	ldr	r0, [sp, #4]
9002e142:	6813      	ldr	r3, [r2, #0]
9002e144:	4615      	mov	r5, r2
9002e146:	b933      	cbnz	r3, 9002e156 <_free_r+0x32>
9002e148:	6063      	str	r3, [r4, #4]
9002e14a:	6014      	str	r4, [r2, #0]
9002e14c:	b003      	add	sp, #12
9002e14e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
9002e152:	f000 be7b 	b.w	9002ee4c <__malloc_unlock>
9002e156:	42a3      	cmp	r3, r4
9002e158:	d90b      	bls.n	9002e172 <_free_r+0x4e>
9002e15a:	6821      	ldr	r1, [r4, #0]
9002e15c:	1862      	adds	r2, r4, r1
9002e15e:	4293      	cmp	r3, r2
9002e160:	bf04      	itt	eq
9002e162:	681a      	ldreq	r2, [r3, #0]
9002e164:	685b      	ldreq	r3, [r3, #4]
9002e166:	6063      	str	r3, [r4, #4]
9002e168:	bf04      	itt	eq
9002e16a:	1852      	addeq	r2, r2, r1
9002e16c:	6022      	streq	r2, [r4, #0]
9002e16e:	602c      	str	r4, [r5, #0]
9002e170:	e7ec      	b.n	9002e14c <_free_r+0x28>
9002e172:	461a      	mov	r2, r3
9002e174:	685b      	ldr	r3, [r3, #4]
9002e176:	b10b      	cbz	r3, 9002e17c <_free_r+0x58>
9002e178:	42a3      	cmp	r3, r4
9002e17a:	d9fa      	bls.n	9002e172 <_free_r+0x4e>
9002e17c:	6811      	ldr	r1, [r2, #0]
9002e17e:	1855      	adds	r5, r2, r1
9002e180:	42a5      	cmp	r5, r4
9002e182:	d10b      	bne.n	9002e19c <_free_r+0x78>
9002e184:	6824      	ldr	r4, [r4, #0]
9002e186:	4421      	add	r1, r4
9002e188:	1854      	adds	r4, r2, r1
9002e18a:	42a3      	cmp	r3, r4
9002e18c:	6011      	str	r1, [r2, #0]
9002e18e:	d1dd      	bne.n	9002e14c <_free_r+0x28>
9002e190:	681c      	ldr	r4, [r3, #0]
9002e192:	685b      	ldr	r3, [r3, #4]
9002e194:	6053      	str	r3, [r2, #4]
9002e196:	4421      	add	r1, r4
9002e198:	6011      	str	r1, [r2, #0]
9002e19a:	e7d7      	b.n	9002e14c <_free_r+0x28>
9002e19c:	d902      	bls.n	9002e1a4 <_free_r+0x80>
9002e19e:	230c      	movs	r3, #12
9002e1a0:	6003      	str	r3, [r0, #0]
9002e1a2:	e7d3      	b.n	9002e14c <_free_r+0x28>
9002e1a4:	6825      	ldr	r5, [r4, #0]
9002e1a6:	1961      	adds	r1, r4, r5
9002e1a8:	428b      	cmp	r3, r1
9002e1aa:	bf04      	itt	eq
9002e1ac:	6819      	ldreq	r1, [r3, #0]
9002e1ae:	685b      	ldreq	r3, [r3, #4]
9002e1b0:	6063      	str	r3, [r4, #4]
9002e1b2:	bf04      	itt	eq
9002e1b4:	1949      	addeq	r1, r1, r5
9002e1b6:	6021      	streq	r1, [r4, #0]
9002e1b8:	6054      	str	r4, [r2, #4]
9002e1ba:	e7c7      	b.n	9002e14c <_free_r+0x28>
9002e1bc:	b003      	add	sp, #12
9002e1be:	bd30      	pop	{r4, r5, pc}
9002e1c0:	20003874 	.word	0x20003874

9002e1c4 <_malloc_r>:
9002e1c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002e1c6:	1ccd      	adds	r5, r1, #3
9002e1c8:	f025 0503 	bic.w	r5, r5, #3
9002e1cc:	3508      	adds	r5, #8
9002e1ce:	2d0c      	cmp	r5, #12
9002e1d0:	bf38      	it	cc
9002e1d2:	250c      	movcc	r5, #12
9002e1d4:	2d00      	cmp	r5, #0
9002e1d6:	4606      	mov	r6, r0
9002e1d8:	db01      	blt.n	9002e1de <_malloc_r+0x1a>
9002e1da:	42a9      	cmp	r1, r5
9002e1dc:	d903      	bls.n	9002e1e6 <_malloc_r+0x22>
9002e1de:	230c      	movs	r3, #12
9002e1e0:	6033      	str	r3, [r6, #0]
9002e1e2:	2000      	movs	r0, #0
9002e1e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002e1e6:	f000 fe2b 	bl	9002ee40 <__malloc_lock>
9002e1ea:	4921      	ldr	r1, [pc, #132]	; (9002e270 <_malloc_r+0xac>)
9002e1ec:	680a      	ldr	r2, [r1, #0]
9002e1ee:	4614      	mov	r4, r2
9002e1f0:	b99c      	cbnz	r4, 9002e21a <_malloc_r+0x56>
9002e1f2:	4f20      	ldr	r7, [pc, #128]	; (9002e274 <_malloc_r+0xb0>)
9002e1f4:	683b      	ldr	r3, [r7, #0]
9002e1f6:	b923      	cbnz	r3, 9002e202 <_malloc_r+0x3e>
9002e1f8:	4621      	mov	r1, r4
9002e1fa:	4630      	mov	r0, r6
9002e1fc:	f000 fb2a 	bl	9002e854 <_sbrk_r>
9002e200:	6038      	str	r0, [r7, #0]
9002e202:	4629      	mov	r1, r5
9002e204:	4630      	mov	r0, r6
9002e206:	f000 fb25 	bl	9002e854 <_sbrk_r>
9002e20a:	1c43      	adds	r3, r0, #1
9002e20c:	d123      	bne.n	9002e256 <_malloc_r+0x92>
9002e20e:	230c      	movs	r3, #12
9002e210:	6033      	str	r3, [r6, #0]
9002e212:	4630      	mov	r0, r6
9002e214:	f000 fe1a 	bl	9002ee4c <__malloc_unlock>
9002e218:	e7e3      	b.n	9002e1e2 <_malloc_r+0x1e>
9002e21a:	6823      	ldr	r3, [r4, #0]
9002e21c:	1b5b      	subs	r3, r3, r5
9002e21e:	d417      	bmi.n	9002e250 <_malloc_r+0x8c>
9002e220:	2b0b      	cmp	r3, #11
9002e222:	d903      	bls.n	9002e22c <_malloc_r+0x68>
9002e224:	6023      	str	r3, [r4, #0]
9002e226:	441c      	add	r4, r3
9002e228:	6025      	str	r5, [r4, #0]
9002e22a:	e004      	b.n	9002e236 <_malloc_r+0x72>
9002e22c:	6863      	ldr	r3, [r4, #4]
9002e22e:	42a2      	cmp	r2, r4
9002e230:	bf0c      	ite	eq
9002e232:	600b      	streq	r3, [r1, #0]
9002e234:	6053      	strne	r3, [r2, #4]
9002e236:	4630      	mov	r0, r6
9002e238:	f000 fe08 	bl	9002ee4c <__malloc_unlock>
9002e23c:	f104 000b 	add.w	r0, r4, #11
9002e240:	1d23      	adds	r3, r4, #4
9002e242:	f020 0007 	bic.w	r0, r0, #7
9002e246:	1ac2      	subs	r2, r0, r3
9002e248:	d0cc      	beq.n	9002e1e4 <_malloc_r+0x20>
9002e24a:	1a1b      	subs	r3, r3, r0
9002e24c:	50a3      	str	r3, [r4, r2]
9002e24e:	e7c9      	b.n	9002e1e4 <_malloc_r+0x20>
9002e250:	4622      	mov	r2, r4
9002e252:	6864      	ldr	r4, [r4, #4]
9002e254:	e7cc      	b.n	9002e1f0 <_malloc_r+0x2c>
9002e256:	1cc4      	adds	r4, r0, #3
9002e258:	f024 0403 	bic.w	r4, r4, #3
9002e25c:	42a0      	cmp	r0, r4
9002e25e:	d0e3      	beq.n	9002e228 <_malloc_r+0x64>
9002e260:	1a21      	subs	r1, r4, r0
9002e262:	4630      	mov	r0, r6
9002e264:	f000 faf6 	bl	9002e854 <_sbrk_r>
9002e268:	3001      	adds	r0, #1
9002e26a:	d1dd      	bne.n	9002e228 <_malloc_r+0x64>
9002e26c:	e7cf      	b.n	9002e20e <_malloc_r+0x4a>
9002e26e:	bf00      	nop
9002e270:	20003874 	.word	0x20003874
9002e274:	20003878 	.word	0x20003878

9002e278 <__sfputc_r>:
9002e278:	6893      	ldr	r3, [r2, #8]
9002e27a:	3b01      	subs	r3, #1
9002e27c:	2b00      	cmp	r3, #0
9002e27e:	b410      	push	{r4}
9002e280:	6093      	str	r3, [r2, #8]
9002e282:	da08      	bge.n	9002e296 <__sfputc_r+0x1e>
9002e284:	6994      	ldr	r4, [r2, #24]
9002e286:	42a3      	cmp	r3, r4
9002e288:	db01      	blt.n	9002e28e <__sfputc_r+0x16>
9002e28a:	290a      	cmp	r1, #10
9002e28c:	d103      	bne.n	9002e296 <__sfputc_r+0x1e>
9002e28e:	f85d 4b04 	ldr.w	r4, [sp], #4
9002e292:	f000 baef 	b.w	9002e874 <__swbuf_r>
9002e296:	6813      	ldr	r3, [r2, #0]
9002e298:	1c58      	adds	r0, r3, #1
9002e29a:	6010      	str	r0, [r2, #0]
9002e29c:	7019      	strb	r1, [r3, #0]
9002e29e:	4608      	mov	r0, r1
9002e2a0:	f85d 4b04 	ldr.w	r4, [sp], #4
9002e2a4:	4770      	bx	lr

9002e2a6 <__sfputs_r>:
9002e2a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002e2a8:	4606      	mov	r6, r0
9002e2aa:	460f      	mov	r7, r1
9002e2ac:	4614      	mov	r4, r2
9002e2ae:	18d5      	adds	r5, r2, r3
9002e2b0:	42ac      	cmp	r4, r5
9002e2b2:	d101      	bne.n	9002e2b8 <__sfputs_r+0x12>
9002e2b4:	2000      	movs	r0, #0
9002e2b6:	e007      	b.n	9002e2c8 <__sfputs_r+0x22>
9002e2b8:	f814 1b01 	ldrb.w	r1, [r4], #1
9002e2bc:	463a      	mov	r2, r7
9002e2be:	4630      	mov	r0, r6
9002e2c0:	f7ff ffda 	bl	9002e278 <__sfputc_r>
9002e2c4:	1c43      	adds	r3, r0, #1
9002e2c6:	d1f3      	bne.n	9002e2b0 <__sfputs_r+0xa>
9002e2c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

9002e2cc <_vfiprintf_r>:
9002e2cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002e2d0:	460d      	mov	r5, r1
9002e2d2:	b09d      	sub	sp, #116	; 0x74
9002e2d4:	4614      	mov	r4, r2
9002e2d6:	4698      	mov	r8, r3
9002e2d8:	4606      	mov	r6, r0
9002e2da:	b118      	cbz	r0, 9002e2e4 <_vfiprintf_r+0x18>
9002e2dc:	6983      	ldr	r3, [r0, #24]
9002e2de:	b90b      	cbnz	r3, 9002e2e4 <_vfiprintf_r+0x18>
9002e2e0:	f000 fcaa 	bl	9002ec38 <__sinit>
9002e2e4:	4b89      	ldr	r3, [pc, #548]	; (9002e50c <_vfiprintf_r+0x240>)
9002e2e6:	429d      	cmp	r5, r3
9002e2e8:	d11b      	bne.n	9002e322 <_vfiprintf_r+0x56>
9002e2ea:	6875      	ldr	r5, [r6, #4]
9002e2ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002e2ee:	07d9      	lsls	r1, r3, #31
9002e2f0:	d405      	bmi.n	9002e2fe <_vfiprintf_r+0x32>
9002e2f2:	89ab      	ldrh	r3, [r5, #12]
9002e2f4:	059a      	lsls	r2, r3, #22
9002e2f6:	d402      	bmi.n	9002e2fe <_vfiprintf_r+0x32>
9002e2f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002e2fa:	f000 fd3b 	bl	9002ed74 <__retarget_lock_acquire_recursive>
9002e2fe:	89ab      	ldrh	r3, [r5, #12]
9002e300:	071b      	lsls	r3, r3, #28
9002e302:	d501      	bpl.n	9002e308 <_vfiprintf_r+0x3c>
9002e304:	692b      	ldr	r3, [r5, #16]
9002e306:	b9eb      	cbnz	r3, 9002e344 <_vfiprintf_r+0x78>
9002e308:	4629      	mov	r1, r5
9002e30a:	4630      	mov	r0, r6
9002e30c:	f000 fb04 	bl	9002e918 <__swsetup_r>
9002e310:	b1c0      	cbz	r0, 9002e344 <_vfiprintf_r+0x78>
9002e312:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002e314:	07dc      	lsls	r4, r3, #31
9002e316:	d50e      	bpl.n	9002e336 <_vfiprintf_r+0x6a>
9002e318:	f04f 30ff 	mov.w	r0, #4294967295
9002e31c:	b01d      	add	sp, #116	; 0x74
9002e31e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002e322:	4b7b      	ldr	r3, [pc, #492]	; (9002e510 <_vfiprintf_r+0x244>)
9002e324:	429d      	cmp	r5, r3
9002e326:	d101      	bne.n	9002e32c <_vfiprintf_r+0x60>
9002e328:	68b5      	ldr	r5, [r6, #8]
9002e32a:	e7df      	b.n	9002e2ec <_vfiprintf_r+0x20>
9002e32c:	4b79      	ldr	r3, [pc, #484]	; (9002e514 <_vfiprintf_r+0x248>)
9002e32e:	429d      	cmp	r5, r3
9002e330:	bf08      	it	eq
9002e332:	68f5      	ldreq	r5, [r6, #12]
9002e334:	e7da      	b.n	9002e2ec <_vfiprintf_r+0x20>
9002e336:	89ab      	ldrh	r3, [r5, #12]
9002e338:	0598      	lsls	r0, r3, #22
9002e33a:	d4ed      	bmi.n	9002e318 <_vfiprintf_r+0x4c>
9002e33c:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002e33e:	f000 fd1a 	bl	9002ed76 <__retarget_lock_release_recursive>
9002e342:	e7e9      	b.n	9002e318 <_vfiprintf_r+0x4c>
9002e344:	2300      	movs	r3, #0
9002e346:	9309      	str	r3, [sp, #36]	; 0x24
9002e348:	2320      	movs	r3, #32
9002e34a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
9002e34e:	f8cd 800c 	str.w	r8, [sp, #12]
9002e352:	2330      	movs	r3, #48	; 0x30
9002e354:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 9002e518 <_vfiprintf_r+0x24c>
9002e358:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
9002e35c:	f04f 0901 	mov.w	r9, #1
9002e360:	4623      	mov	r3, r4
9002e362:	469a      	mov	sl, r3
9002e364:	f813 2b01 	ldrb.w	r2, [r3], #1
9002e368:	b10a      	cbz	r2, 9002e36e <_vfiprintf_r+0xa2>
9002e36a:	2a25      	cmp	r2, #37	; 0x25
9002e36c:	d1f9      	bne.n	9002e362 <_vfiprintf_r+0x96>
9002e36e:	ebba 0b04 	subs.w	fp, sl, r4
9002e372:	d00b      	beq.n	9002e38c <_vfiprintf_r+0xc0>
9002e374:	465b      	mov	r3, fp
9002e376:	4622      	mov	r2, r4
9002e378:	4629      	mov	r1, r5
9002e37a:	4630      	mov	r0, r6
9002e37c:	f7ff ff93 	bl	9002e2a6 <__sfputs_r>
9002e380:	3001      	adds	r0, #1
9002e382:	f000 80aa 	beq.w	9002e4da <_vfiprintf_r+0x20e>
9002e386:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002e388:	445a      	add	r2, fp
9002e38a:	9209      	str	r2, [sp, #36]	; 0x24
9002e38c:	f89a 3000 	ldrb.w	r3, [sl]
9002e390:	2b00      	cmp	r3, #0
9002e392:	f000 80a2 	beq.w	9002e4da <_vfiprintf_r+0x20e>
9002e396:	2300      	movs	r3, #0
9002e398:	f04f 32ff 	mov.w	r2, #4294967295
9002e39c:	e9cd 2305 	strd	r2, r3, [sp, #20]
9002e3a0:	f10a 0a01 	add.w	sl, sl, #1
9002e3a4:	9304      	str	r3, [sp, #16]
9002e3a6:	9307      	str	r3, [sp, #28]
9002e3a8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
9002e3ac:	931a      	str	r3, [sp, #104]	; 0x68
9002e3ae:	4654      	mov	r4, sl
9002e3b0:	2205      	movs	r2, #5
9002e3b2:	f814 1b01 	ldrb.w	r1, [r4], #1
9002e3b6:	4858      	ldr	r0, [pc, #352]	; (9002e518 <_vfiprintf_r+0x24c>)
9002e3b8:	f7f3 fb32 	bl	90021a20 <memchr>
9002e3bc:	9a04      	ldr	r2, [sp, #16]
9002e3be:	b9d8      	cbnz	r0, 9002e3f8 <_vfiprintf_r+0x12c>
9002e3c0:	06d1      	lsls	r1, r2, #27
9002e3c2:	bf44      	itt	mi
9002e3c4:	2320      	movmi	r3, #32
9002e3c6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002e3ca:	0713      	lsls	r3, r2, #28
9002e3cc:	bf44      	itt	mi
9002e3ce:	232b      	movmi	r3, #43	; 0x2b
9002e3d0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
9002e3d4:	f89a 3000 	ldrb.w	r3, [sl]
9002e3d8:	2b2a      	cmp	r3, #42	; 0x2a
9002e3da:	d015      	beq.n	9002e408 <_vfiprintf_r+0x13c>
9002e3dc:	9a07      	ldr	r2, [sp, #28]
9002e3de:	4654      	mov	r4, sl
9002e3e0:	2000      	movs	r0, #0
9002e3e2:	f04f 0c0a 	mov.w	ip, #10
9002e3e6:	4621      	mov	r1, r4
9002e3e8:	f811 3b01 	ldrb.w	r3, [r1], #1
9002e3ec:	3b30      	subs	r3, #48	; 0x30
9002e3ee:	2b09      	cmp	r3, #9
9002e3f0:	d94e      	bls.n	9002e490 <_vfiprintf_r+0x1c4>
9002e3f2:	b1b0      	cbz	r0, 9002e422 <_vfiprintf_r+0x156>
9002e3f4:	9207      	str	r2, [sp, #28]
9002e3f6:	e014      	b.n	9002e422 <_vfiprintf_r+0x156>
9002e3f8:	eba0 0308 	sub.w	r3, r0, r8
9002e3fc:	fa09 f303 	lsl.w	r3, r9, r3
9002e400:	4313      	orrs	r3, r2
9002e402:	9304      	str	r3, [sp, #16]
9002e404:	46a2      	mov	sl, r4
9002e406:	e7d2      	b.n	9002e3ae <_vfiprintf_r+0xe2>
9002e408:	9b03      	ldr	r3, [sp, #12]
9002e40a:	1d19      	adds	r1, r3, #4
9002e40c:	681b      	ldr	r3, [r3, #0]
9002e40e:	9103      	str	r1, [sp, #12]
9002e410:	2b00      	cmp	r3, #0
9002e412:	bfbb      	ittet	lt
9002e414:	425b      	neglt	r3, r3
9002e416:	f042 0202 	orrlt.w	r2, r2, #2
9002e41a:	9307      	strge	r3, [sp, #28]
9002e41c:	9307      	strlt	r3, [sp, #28]
9002e41e:	bfb8      	it	lt
9002e420:	9204      	strlt	r2, [sp, #16]
9002e422:	7823      	ldrb	r3, [r4, #0]
9002e424:	2b2e      	cmp	r3, #46	; 0x2e
9002e426:	d10c      	bne.n	9002e442 <_vfiprintf_r+0x176>
9002e428:	7863      	ldrb	r3, [r4, #1]
9002e42a:	2b2a      	cmp	r3, #42	; 0x2a
9002e42c:	d135      	bne.n	9002e49a <_vfiprintf_r+0x1ce>
9002e42e:	9b03      	ldr	r3, [sp, #12]
9002e430:	1d1a      	adds	r2, r3, #4
9002e432:	681b      	ldr	r3, [r3, #0]
9002e434:	9203      	str	r2, [sp, #12]
9002e436:	2b00      	cmp	r3, #0
9002e438:	bfb8      	it	lt
9002e43a:	f04f 33ff 	movlt.w	r3, #4294967295
9002e43e:	3402      	adds	r4, #2
9002e440:	9305      	str	r3, [sp, #20]
9002e442:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 9002e528 <_vfiprintf_r+0x25c>
9002e446:	7821      	ldrb	r1, [r4, #0]
9002e448:	2203      	movs	r2, #3
9002e44a:	4650      	mov	r0, sl
9002e44c:	f7f3 fae8 	bl	90021a20 <memchr>
9002e450:	b140      	cbz	r0, 9002e464 <_vfiprintf_r+0x198>
9002e452:	2340      	movs	r3, #64	; 0x40
9002e454:	eba0 000a 	sub.w	r0, r0, sl
9002e458:	fa03 f000 	lsl.w	r0, r3, r0
9002e45c:	9b04      	ldr	r3, [sp, #16]
9002e45e:	4303      	orrs	r3, r0
9002e460:	3401      	adds	r4, #1
9002e462:	9304      	str	r3, [sp, #16]
9002e464:	f814 1b01 	ldrb.w	r1, [r4], #1
9002e468:	482c      	ldr	r0, [pc, #176]	; (9002e51c <_vfiprintf_r+0x250>)
9002e46a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
9002e46e:	2206      	movs	r2, #6
9002e470:	f7f3 fad6 	bl	90021a20 <memchr>
9002e474:	2800      	cmp	r0, #0
9002e476:	d03f      	beq.n	9002e4f8 <_vfiprintf_r+0x22c>
9002e478:	4b29      	ldr	r3, [pc, #164]	; (9002e520 <_vfiprintf_r+0x254>)
9002e47a:	bb1b      	cbnz	r3, 9002e4c4 <_vfiprintf_r+0x1f8>
9002e47c:	9b03      	ldr	r3, [sp, #12]
9002e47e:	3307      	adds	r3, #7
9002e480:	f023 0307 	bic.w	r3, r3, #7
9002e484:	3308      	adds	r3, #8
9002e486:	9303      	str	r3, [sp, #12]
9002e488:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002e48a:	443b      	add	r3, r7
9002e48c:	9309      	str	r3, [sp, #36]	; 0x24
9002e48e:	e767      	b.n	9002e360 <_vfiprintf_r+0x94>
9002e490:	fb0c 3202 	mla	r2, ip, r2, r3
9002e494:	460c      	mov	r4, r1
9002e496:	2001      	movs	r0, #1
9002e498:	e7a5      	b.n	9002e3e6 <_vfiprintf_r+0x11a>
9002e49a:	2300      	movs	r3, #0
9002e49c:	3401      	adds	r4, #1
9002e49e:	9305      	str	r3, [sp, #20]
9002e4a0:	4619      	mov	r1, r3
9002e4a2:	f04f 0c0a 	mov.w	ip, #10
9002e4a6:	4620      	mov	r0, r4
9002e4a8:	f810 2b01 	ldrb.w	r2, [r0], #1
9002e4ac:	3a30      	subs	r2, #48	; 0x30
9002e4ae:	2a09      	cmp	r2, #9
9002e4b0:	d903      	bls.n	9002e4ba <_vfiprintf_r+0x1ee>
9002e4b2:	2b00      	cmp	r3, #0
9002e4b4:	d0c5      	beq.n	9002e442 <_vfiprintf_r+0x176>
9002e4b6:	9105      	str	r1, [sp, #20]
9002e4b8:	e7c3      	b.n	9002e442 <_vfiprintf_r+0x176>
9002e4ba:	fb0c 2101 	mla	r1, ip, r1, r2
9002e4be:	4604      	mov	r4, r0
9002e4c0:	2301      	movs	r3, #1
9002e4c2:	e7f0      	b.n	9002e4a6 <_vfiprintf_r+0x1da>
9002e4c4:	ab03      	add	r3, sp, #12
9002e4c6:	9300      	str	r3, [sp, #0]
9002e4c8:	462a      	mov	r2, r5
9002e4ca:	4b16      	ldr	r3, [pc, #88]	; (9002e524 <_vfiprintf_r+0x258>)
9002e4cc:	a904      	add	r1, sp, #16
9002e4ce:	4630      	mov	r0, r6
9002e4d0:	f3af 8000 	nop.w
9002e4d4:	4607      	mov	r7, r0
9002e4d6:	1c78      	adds	r0, r7, #1
9002e4d8:	d1d6      	bne.n	9002e488 <_vfiprintf_r+0x1bc>
9002e4da:	6e6b      	ldr	r3, [r5, #100]	; 0x64
9002e4dc:	07d9      	lsls	r1, r3, #31
9002e4de:	d405      	bmi.n	9002e4ec <_vfiprintf_r+0x220>
9002e4e0:	89ab      	ldrh	r3, [r5, #12]
9002e4e2:	059a      	lsls	r2, r3, #22
9002e4e4:	d402      	bmi.n	9002e4ec <_vfiprintf_r+0x220>
9002e4e6:	6da8      	ldr	r0, [r5, #88]	; 0x58
9002e4e8:	f000 fc45 	bl	9002ed76 <__retarget_lock_release_recursive>
9002e4ec:	89ab      	ldrh	r3, [r5, #12]
9002e4ee:	065b      	lsls	r3, r3, #25
9002e4f0:	f53f af12 	bmi.w	9002e318 <_vfiprintf_r+0x4c>
9002e4f4:	9809      	ldr	r0, [sp, #36]	; 0x24
9002e4f6:	e711      	b.n	9002e31c <_vfiprintf_r+0x50>
9002e4f8:	ab03      	add	r3, sp, #12
9002e4fa:	9300      	str	r3, [sp, #0]
9002e4fc:	462a      	mov	r2, r5
9002e4fe:	4b09      	ldr	r3, [pc, #36]	; (9002e524 <_vfiprintf_r+0x258>)
9002e500:	a904      	add	r1, sp, #16
9002e502:	4630      	mov	r0, r6
9002e504:	f000 f880 	bl	9002e608 <_printf_i>
9002e508:	e7e4      	b.n	9002e4d4 <_vfiprintf_r+0x208>
9002e50a:	bf00      	nop
9002e50c:	90035290 	.word	0x90035290
9002e510:	900352b0 	.word	0x900352b0
9002e514:	90035270 	.word	0x90035270
9002e518:	9003523a 	.word	0x9003523a
9002e51c:	90035244 	.word	0x90035244
9002e520:	00000000 	.word	0x00000000
9002e524:	9002e2a7 	.word	0x9002e2a7
9002e528:	90035240 	.word	0x90035240

9002e52c <_printf_common>:
9002e52c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002e530:	4616      	mov	r6, r2
9002e532:	4699      	mov	r9, r3
9002e534:	688a      	ldr	r2, [r1, #8]
9002e536:	690b      	ldr	r3, [r1, #16]
9002e538:	f8dd 8020 	ldr.w	r8, [sp, #32]
9002e53c:	4293      	cmp	r3, r2
9002e53e:	bfb8      	it	lt
9002e540:	4613      	movlt	r3, r2
9002e542:	6033      	str	r3, [r6, #0]
9002e544:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
9002e548:	4607      	mov	r7, r0
9002e54a:	460c      	mov	r4, r1
9002e54c:	b10a      	cbz	r2, 9002e552 <_printf_common+0x26>
9002e54e:	3301      	adds	r3, #1
9002e550:	6033      	str	r3, [r6, #0]
9002e552:	6823      	ldr	r3, [r4, #0]
9002e554:	0699      	lsls	r1, r3, #26
9002e556:	bf42      	ittt	mi
9002e558:	6833      	ldrmi	r3, [r6, #0]
9002e55a:	3302      	addmi	r3, #2
9002e55c:	6033      	strmi	r3, [r6, #0]
9002e55e:	6825      	ldr	r5, [r4, #0]
9002e560:	f015 0506 	ands.w	r5, r5, #6
9002e564:	d106      	bne.n	9002e574 <_printf_common+0x48>
9002e566:	f104 0a19 	add.w	sl, r4, #25
9002e56a:	68e3      	ldr	r3, [r4, #12]
9002e56c:	6832      	ldr	r2, [r6, #0]
9002e56e:	1a9b      	subs	r3, r3, r2
9002e570:	42ab      	cmp	r3, r5
9002e572:	dc26      	bgt.n	9002e5c2 <_printf_common+0x96>
9002e574:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
9002e578:	1e13      	subs	r3, r2, #0
9002e57a:	6822      	ldr	r2, [r4, #0]
9002e57c:	bf18      	it	ne
9002e57e:	2301      	movne	r3, #1
9002e580:	0692      	lsls	r2, r2, #26
9002e582:	d42b      	bmi.n	9002e5dc <_printf_common+0xb0>
9002e584:	f104 0243 	add.w	r2, r4, #67	; 0x43
9002e588:	4649      	mov	r1, r9
9002e58a:	4638      	mov	r0, r7
9002e58c:	47c0      	blx	r8
9002e58e:	3001      	adds	r0, #1
9002e590:	d01e      	beq.n	9002e5d0 <_printf_common+0xa4>
9002e592:	6823      	ldr	r3, [r4, #0]
9002e594:	68e5      	ldr	r5, [r4, #12]
9002e596:	6832      	ldr	r2, [r6, #0]
9002e598:	f003 0306 	and.w	r3, r3, #6
9002e59c:	2b04      	cmp	r3, #4
9002e59e:	bf08      	it	eq
9002e5a0:	1aad      	subeq	r5, r5, r2
9002e5a2:	68a3      	ldr	r3, [r4, #8]
9002e5a4:	6922      	ldr	r2, [r4, #16]
9002e5a6:	bf0c      	ite	eq
9002e5a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002e5ac:	2500      	movne	r5, #0
9002e5ae:	4293      	cmp	r3, r2
9002e5b0:	bfc4      	itt	gt
9002e5b2:	1a9b      	subgt	r3, r3, r2
9002e5b4:	18ed      	addgt	r5, r5, r3
9002e5b6:	2600      	movs	r6, #0
9002e5b8:	341a      	adds	r4, #26
9002e5ba:	42b5      	cmp	r5, r6
9002e5bc:	d11a      	bne.n	9002e5f4 <_printf_common+0xc8>
9002e5be:	2000      	movs	r0, #0
9002e5c0:	e008      	b.n	9002e5d4 <_printf_common+0xa8>
9002e5c2:	2301      	movs	r3, #1
9002e5c4:	4652      	mov	r2, sl
9002e5c6:	4649      	mov	r1, r9
9002e5c8:	4638      	mov	r0, r7
9002e5ca:	47c0      	blx	r8
9002e5cc:	3001      	adds	r0, #1
9002e5ce:	d103      	bne.n	9002e5d8 <_printf_common+0xac>
9002e5d0:	f04f 30ff 	mov.w	r0, #4294967295
9002e5d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002e5d8:	3501      	adds	r5, #1
9002e5da:	e7c6      	b.n	9002e56a <_printf_common+0x3e>
9002e5dc:	18e1      	adds	r1, r4, r3
9002e5de:	1c5a      	adds	r2, r3, #1
9002e5e0:	2030      	movs	r0, #48	; 0x30
9002e5e2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
9002e5e6:	4422      	add	r2, r4
9002e5e8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
9002e5ec:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
9002e5f0:	3302      	adds	r3, #2
9002e5f2:	e7c7      	b.n	9002e584 <_printf_common+0x58>
9002e5f4:	2301      	movs	r3, #1
9002e5f6:	4622      	mov	r2, r4
9002e5f8:	4649      	mov	r1, r9
9002e5fa:	4638      	mov	r0, r7
9002e5fc:	47c0      	blx	r8
9002e5fe:	3001      	adds	r0, #1
9002e600:	d0e6      	beq.n	9002e5d0 <_printf_common+0xa4>
9002e602:	3601      	adds	r6, #1
9002e604:	e7d9      	b.n	9002e5ba <_printf_common+0x8e>
	...

9002e608 <_printf_i>:
9002e608:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002e60c:	460c      	mov	r4, r1
9002e60e:	4691      	mov	r9, r2
9002e610:	7e27      	ldrb	r7, [r4, #24]
9002e612:	990c      	ldr	r1, [sp, #48]	; 0x30
9002e614:	2f78      	cmp	r7, #120	; 0x78
9002e616:	4680      	mov	r8, r0
9002e618:	469a      	mov	sl, r3
9002e61a:	f104 0243 	add.w	r2, r4, #67	; 0x43
9002e61e:	d807      	bhi.n	9002e630 <_printf_i+0x28>
9002e620:	2f62      	cmp	r7, #98	; 0x62
9002e622:	d80a      	bhi.n	9002e63a <_printf_i+0x32>
9002e624:	2f00      	cmp	r7, #0
9002e626:	f000 80d8 	beq.w	9002e7da <_printf_i+0x1d2>
9002e62a:	2f58      	cmp	r7, #88	; 0x58
9002e62c:	f000 80a3 	beq.w	9002e776 <_printf_i+0x16e>
9002e630:	f104 0642 	add.w	r6, r4, #66	; 0x42
9002e634:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
9002e638:	e03a      	b.n	9002e6b0 <_printf_i+0xa8>
9002e63a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
9002e63e:	2b15      	cmp	r3, #21
9002e640:	d8f6      	bhi.n	9002e630 <_printf_i+0x28>
9002e642:	a001      	add	r0, pc, #4	; (adr r0, 9002e648 <_printf_i+0x40>)
9002e644:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
9002e648:	9002e6a1 	.word	0x9002e6a1
9002e64c:	9002e6b5 	.word	0x9002e6b5
9002e650:	9002e631 	.word	0x9002e631
9002e654:	9002e631 	.word	0x9002e631
9002e658:	9002e631 	.word	0x9002e631
9002e65c:	9002e631 	.word	0x9002e631
9002e660:	9002e6b5 	.word	0x9002e6b5
9002e664:	9002e631 	.word	0x9002e631
9002e668:	9002e631 	.word	0x9002e631
9002e66c:	9002e631 	.word	0x9002e631
9002e670:	9002e631 	.word	0x9002e631
9002e674:	9002e7c1 	.word	0x9002e7c1
9002e678:	9002e6e5 	.word	0x9002e6e5
9002e67c:	9002e7a3 	.word	0x9002e7a3
9002e680:	9002e631 	.word	0x9002e631
9002e684:	9002e631 	.word	0x9002e631
9002e688:	9002e7e3 	.word	0x9002e7e3
9002e68c:	9002e631 	.word	0x9002e631
9002e690:	9002e6e5 	.word	0x9002e6e5
9002e694:	9002e631 	.word	0x9002e631
9002e698:	9002e631 	.word	0x9002e631
9002e69c:	9002e7ab 	.word	0x9002e7ab
9002e6a0:	680b      	ldr	r3, [r1, #0]
9002e6a2:	1d1a      	adds	r2, r3, #4
9002e6a4:	681b      	ldr	r3, [r3, #0]
9002e6a6:	600a      	str	r2, [r1, #0]
9002e6a8:	f104 0642 	add.w	r6, r4, #66	; 0x42
9002e6ac:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9002e6b0:	2301      	movs	r3, #1
9002e6b2:	e0a3      	b.n	9002e7fc <_printf_i+0x1f4>
9002e6b4:	6825      	ldr	r5, [r4, #0]
9002e6b6:	6808      	ldr	r0, [r1, #0]
9002e6b8:	062e      	lsls	r6, r5, #24
9002e6ba:	f100 0304 	add.w	r3, r0, #4
9002e6be:	d50a      	bpl.n	9002e6d6 <_printf_i+0xce>
9002e6c0:	6805      	ldr	r5, [r0, #0]
9002e6c2:	600b      	str	r3, [r1, #0]
9002e6c4:	2d00      	cmp	r5, #0
9002e6c6:	da03      	bge.n	9002e6d0 <_printf_i+0xc8>
9002e6c8:	232d      	movs	r3, #45	; 0x2d
9002e6ca:	426d      	negs	r5, r5
9002e6cc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002e6d0:	485e      	ldr	r0, [pc, #376]	; (9002e84c <_printf_i+0x244>)
9002e6d2:	230a      	movs	r3, #10
9002e6d4:	e019      	b.n	9002e70a <_printf_i+0x102>
9002e6d6:	f015 0f40 	tst.w	r5, #64	; 0x40
9002e6da:	6805      	ldr	r5, [r0, #0]
9002e6dc:	600b      	str	r3, [r1, #0]
9002e6de:	bf18      	it	ne
9002e6e0:	b22d      	sxthne	r5, r5
9002e6e2:	e7ef      	b.n	9002e6c4 <_printf_i+0xbc>
9002e6e4:	680b      	ldr	r3, [r1, #0]
9002e6e6:	6825      	ldr	r5, [r4, #0]
9002e6e8:	1d18      	adds	r0, r3, #4
9002e6ea:	6008      	str	r0, [r1, #0]
9002e6ec:	0628      	lsls	r0, r5, #24
9002e6ee:	d501      	bpl.n	9002e6f4 <_printf_i+0xec>
9002e6f0:	681d      	ldr	r5, [r3, #0]
9002e6f2:	e002      	b.n	9002e6fa <_printf_i+0xf2>
9002e6f4:	0669      	lsls	r1, r5, #25
9002e6f6:	d5fb      	bpl.n	9002e6f0 <_printf_i+0xe8>
9002e6f8:	881d      	ldrh	r5, [r3, #0]
9002e6fa:	4854      	ldr	r0, [pc, #336]	; (9002e84c <_printf_i+0x244>)
9002e6fc:	2f6f      	cmp	r7, #111	; 0x6f
9002e6fe:	bf0c      	ite	eq
9002e700:	2308      	moveq	r3, #8
9002e702:	230a      	movne	r3, #10
9002e704:	2100      	movs	r1, #0
9002e706:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
9002e70a:	6866      	ldr	r6, [r4, #4]
9002e70c:	60a6      	str	r6, [r4, #8]
9002e70e:	2e00      	cmp	r6, #0
9002e710:	bfa2      	ittt	ge
9002e712:	6821      	ldrge	r1, [r4, #0]
9002e714:	f021 0104 	bicge.w	r1, r1, #4
9002e718:	6021      	strge	r1, [r4, #0]
9002e71a:	b90d      	cbnz	r5, 9002e720 <_printf_i+0x118>
9002e71c:	2e00      	cmp	r6, #0
9002e71e:	d04d      	beq.n	9002e7bc <_printf_i+0x1b4>
9002e720:	4616      	mov	r6, r2
9002e722:	fbb5 f1f3 	udiv	r1, r5, r3
9002e726:	fb03 5711 	mls	r7, r3, r1, r5
9002e72a:	5dc7      	ldrb	r7, [r0, r7]
9002e72c:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002e730:	462f      	mov	r7, r5
9002e732:	42bb      	cmp	r3, r7
9002e734:	460d      	mov	r5, r1
9002e736:	d9f4      	bls.n	9002e722 <_printf_i+0x11a>
9002e738:	2b08      	cmp	r3, #8
9002e73a:	d10b      	bne.n	9002e754 <_printf_i+0x14c>
9002e73c:	6823      	ldr	r3, [r4, #0]
9002e73e:	07df      	lsls	r7, r3, #31
9002e740:	d508      	bpl.n	9002e754 <_printf_i+0x14c>
9002e742:	6923      	ldr	r3, [r4, #16]
9002e744:	6861      	ldr	r1, [r4, #4]
9002e746:	4299      	cmp	r1, r3
9002e748:	bfde      	ittt	le
9002e74a:	2330      	movle	r3, #48	; 0x30
9002e74c:	f806 3c01 	strble.w	r3, [r6, #-1]
9002e750:	f106 36ff 	addle.w	r6, r6, #4294967295
9002e754:	1b92      	subs	r2, r2, r6
9002e756:	6122      	str	r2, [r4, #16]
9002e758:	f8cd a000 	str.w	sl, [sp]
9002e75c:	464b      	mov	r3, r9
9002e75e:	aa03      	add	r2, sp, #12
9002e760:	4621      	mov	r1, r4
9002e762:	4640      	mov	r0, r8
9002e764:	f7ff fee2 	bl	9002e52c <_printf_common>
9002e768:	3001      	adds	r0, #1
9002e76a:	d14c      	bne.n	9002e806 <_printf_i+0x1fe>
9002e76c:	f04f 30ff 	mov.w	r0, #4294967295
9002e770:	b004      	add	sp, #16
9002e772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002e776:	4835      	ldr	r0, [pc, #212]	; (9002e84c <_printf_i+0x244>)
9002e778:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
9002e77c:	6823      	ldr	r3, [r4, #0]
9002e77e:	680e      	ldr	r6, [r1, #0]
9002e780:	061f      	lsls	r7, r3, #24
9002e782:	f856 5b04 	ldr.w	r5, [r6], #4
9002e786:	600e      	str	r6, [r1, #0]
9002e788:	d514      	bpl.n	9002e7b4 <_printf_i+0x1ac>
9002e78a:	07d9      	lsls	r1, r3, #31
9002e78c:	bf44      	itt	mi
9002e78e:	f043 0320 	orrmi.w	r3, r3, #32
9002e792:	6023      	strmi	r3, [r4, #0]
9002e794:	b91d      	cbnz	r5, 9002e79e <_printf_i+0x196>
9002e796:	6823      	ldr	r3, [r4, #0]
9002e798:	f023 0320 	bic.w	r3, r3, #32
9002e79c:	6023      	str	r3, [r4, #0]
9002e79e:	2310      	movs	r3, #16
9002e7a0:	e7b0      	b.n	9002e704 <_printf_i+0xfc>
9002e7a2:	6823      	ldr	r3, [r4, #0]
9002e7a4:	f043 0320 	orr.w	r3, r3, #32
9002e7a8:	6023      	str	r3, [r4, #0]
9002e7aa:	2378      	movs	r3, #120	; 0x78
9002e7ac:	4828      	ldr	r0, [pc, #160]	; (9002e850 <_printf_i+0x248>)
9002e7ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9002e7b2:	e7e3      	b.n	9002e77c <_printf_i+0x174>
9002e7b4:	065e      	lsls	r6, r3, #25
9002e7b6:	bf48      	it	mi
9002e7b8:	b2ad      	uxthmi	r5, r5
9002e7ba:	e7e6      	b.n	9002e78a <_printf_i+0x182>
9002e7bc:	4616      	mov	r6, r2
9002e7be:	e7bb      	b.n	9002e738 <_printf_i+0x130>
9002e7c0:	680b      	ldr	r3, [r1, #0]
9002e7c2:	6826      	ldr	r6, [r4, #0]
9002e7c4:	6960      	ldr	r0, [r4, #20]
9002e7c6:	1d1d      	adds	r5, r3, #4
9002e7c8:	600d      	str	r5, [r1, #0]
9002e7ca:	0635      	lsls	r5, r6, #24
9002e7cc:	681b      	ldr	r3, [r3, #0]
9002e7ce:	d501      	bpl.n	9002e7d4 <_printf_i+0x1cc>
9002e7d0:	6018      	str	r0, [r3, #0]
9002e7d2:	e002      	b.n	9002e7da <_printf_i+0x1d2>
9002e7d4:	0671      	lsls	r1, r6, #25
9002e7d6:	d5fb      	bpl.n	9002e7d0 <_printf_i+0x1c8>
9002e7d8:	8018      	strh	r0, [r3, #0]
9002e7da:	2300      	movs	r3, #0
9002e7dc:	6123      	str	r3, [r4, #16]
9002e7de:	4616      	mov	r6, r2
9002e7e0:	e7ba      	b.n	9002e758 <_printf_i+0x150>
9002e7e2:	680b      	ldr	r3, [r1, #0]
9002e7e4:	1d1a      	adds	r2, r3, #4
9002e7e6:	600a      	str	r2, [r1, #0]
9002e7e8:	681e      	ldr	r6, [r3, #0]
9002e7ea:	6862      	ldr	r2, [r4, #4]
9002e7ec:	2100      	movs	r1, #0
9002e7ee:	4630      	mov	r0, r6
9002e7f0:	f7f3 f916 	bl	90021a20 <memchr>
9002e7f4:	b108      	cbz	r0, 9002e7fa <_printf_i+0x1f2>
9002e7f6:	1b80      	subs	r0, r0, r6
9002e7f8:	6060      	str	r0, [r4, #4]
9002e7fa:	6863      	ldr	r3, [r4, #4]
9002e7fc:	6123      	str	r3, [r4, #16]
9002e7fe:	2300      	movs	r3, #0
9002e800:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002e804:	e7a8      	b.n	9002e758 <_printf_i+0x150>
9002e806:	6923      	ldr	r3, [r4, #16]
9002e808:	4632      	mov	r2, r6
9002e80a:	4649      	mov	r1, r9
9002e80c:	4640      	mov	r0, r8
9002e80e:	47d0      	blx	sl
9002e810:	3001      	adds	r0, #1
9002e812:	d0ab      	beq.n	9002e76c <_printf_i+0x164>
9002e814:	6823      	ldr	r3, [r4, #0]
9002e816:	079b      	lsls	r3, r3, #30
9002e818:	d413      	bmi.n	9002e842 <_printf_i+0x23a>
9002e81a:	68e0      	ldr	r0, [r4, #12]
9002e81c:	9b03      	ldr	r3, [sp, #12]
9002e81e:	4298      	cmp	r0, r3
9002e820:	bfb8      	it	lt
9002e822:	4618      	movlt	r0, r3
9002e824:	e7a4      	b.n	9002e770 <_printf_i+0x168>
9002e826:	2301      	movs	r3, #1
9002e828:	4632      	mov	r2, r6
9002e82a:	4649      	mov	r1, r9
9002e82c:	4640      	mov	r0, r8
9002e82e:	47d0      	blx	sl
9002e830:	3001      	adds	r0, #1
9002e832:	d09b      	beq.n	9002e76c <_printf_i+0x164>
9002e834:	3501      	adds	r5, #1
9002e836:	68e3      	ldr	r3, [r4, #12]
9002e838:	9903      	ldr	r1, [sp, #12]
9002e83a:	1a5b      	subs	r3, r3, r1
9002e83c:	42ab      	cmp	r3, r5
9002e83e:	dcf2      	bgt.n	9002e826 <_printf_i+0x21e>
9002e840:	e7eb      	b.n	9002e81a <_printf_i+0x212>
9002e842:	2500      	movs	r5, #0
9002e844:	f104 0619 	add.w	r6, r4, #25
9002e848:	e7f5      	b.n	9002e836 <_printf_i+0x22e>
9002e84a:	bf00      	nop
9002e84c:	9003524b 	.word	0x9003524b
9002e850:	9003525c 	.word	0x9003525c

9002e854 <_sbrk_r>:
9002e854:	b538      	push	{r3, r4, r5, lr}
9002e856:	4d06      	ldr	r5, [pc, #24]	; (9002e870 <_sbrk_r+0x1c>)
9002e858:	2300      	movs	r3, #0
9002e85a:	4604      	mov	r4, r0
9002e85c:	4608      	mov	r0, r1
9002e85e:	602b      	str	r3, [r5, #0]
9002e860:	f001 f8dc 	bl	9002fa1c <_sbrk>
9002e864:	1c43      	adds	r3, r0, #1
9002e866:	d102      	bne.n	9002e86e <_sbrk_r+0x1a>
9002e868:	682b      	ldr	r3, [r5, #0]
9002e86a:	b103      	cbz	r3, 9002e86e <_sbrk_r+0x1a>
9002e86c:	6023      	str	r3, [r4, #0]
9002e86e:	bd38      	pop	{r3, r4, r5, pc}
9002e870:	20003a4c 	.word	0x20003a4c

9002e874 <__swbuf_r>:
9002e874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002e876:	460e      	mov	r6, r1
9002e878:	4614      	mov	r4, r2
9002e87a:	4605      	mov	r5, r0
9002e87c:	b118      	cbz	r0, 9002e886 <__swbuf_r+0x12>
9002e87e:	6983      	ldr	r3, [r0, #24]
9002e880:	b90b      	cbnz	r3, 9002e886 <__swbuf_r+0x12>
9002e882:	f000 f9d9 	bl	9002ec38 <__sinit>
9002e886:	4b21      	ldr	r3, [pc, #132]	; (9002e90c <__swbuf_r+0x98>)
9002e888:	429c      	cmp	r4, r3
9002e88a:	d12b      	bne.n	9002e8e4 <__swbuf_r+0x70>
9002e88c:	686c      	ldr	r4, [r5, #4]
9002e88e:	69a3      	ldr	r3, [r4, #24]
9002e890:	60a3      	str	r3, [r4, #8]
9002e892:	89a3      	ldrh	r3, [r4, #12]
9002e894:	071a      	lsls	r2, r3, #28
9002e896:	d52f      	bpl.n	9002e8f8 <__swbuf_r+0x84>
9002e898:	6923      	ldr	r3, [r4, #16]
9002e89a:	b36b      	cbz	r3, 9002e8f8 <__swbuf_r+0x84>
9002e89c:	6923      	ldr	r3, [r4, #16]
9002e89e:	6820      	ldr	r0, [r4, #0]
9002e8a0:	1ac0      	subs	r0, r0, r3
9002e8a2:	6963      	ldr	r3, [r4, #20]
9002e8a4:	b2f6      	uxtb	r6, r6
9002e8a6:	4283      	cmp	r3, r0
9002e8a8:	4637      	mov	r7, r6
9002e8aa:	dc04      	bgt.n	9002e8b6 <__swbuf_r+0x42>
9002e8ac:	4621      	mov	r1, r4
9002e8ae:	4628      	mov	r0, r5
9002e8b0:	f000 f92e 	bl	9002eb10 <_fflush_r>
9002e8b4:	bb30      	cbnz	r0, 9002e904 <__swbuf_r+0x90>
9002e8b6:	68a3      	ldr	r3, [r4, #8]
9002e8b8:	3b01      	subs	r3, #1
9002e8ba:	60a3      	str	r3, [r4, #8]
9002e8bc:	6823      	ldr	r3, [r4, #0]
9002e8be:	1c5a      	adds	r2, r3, #1
9002e8c0:	6022      	str	r2, [r4, #0]
9002e8c2:	701e      	strb	r6, [r3, #0]
9002e8c4:	6963      	ldr	r3, [r4, #20]
9002e8c6:	3001      	adds	r0, #1
9002e8c8:	4283      	cmp	r3, r0
9002e8ca:	d004      	beq.n	9002e8d6 <__swbuf_r+0x62>
9002e8cc:	89a3      	ldrh	r3, [r4, #12]
9002e8ce:	07db      	lsls	r3, r3, #31
9002e8d0:	d506      	bpl.n	9002e8e0 <__swbuf_r+0x6c>
9002e8d2:	2e0a      	cmp	r6, #10
9002e8d4:	d104      	bne.n	9002e8e0 <__swbuf_r+0x6c>
9002e8d6:	4621      	mov	r1, r4
9002e8d8:	4628      	mov	r0, r5
9002e8da:	f000 f919 	bl	9002eb10 <_fflush_r>
9002e8de:	b988      	cbnz	r0, 9002e904 <__swbuf_r+0x90>
9002e8e0:	4638      	mov	r0, r7
9002e8e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002e8e4:	4b0a      	ldr	r3, [pc, #40]	; (9002e910 <__swbuf_r+0x9c>)
9002e8e6:	429c      	cmp	r4, r3
9002e8e8:	d101      	bne.n	9002e8ee <__swbuf_r+0x7a>
9002e8ea:	68ac      	ldr	r4, [r5, #8]
9002e8ec:	e7cf      	b.n	9002e88e <__swbuf_r+0x1a>
9002e8ee:	4b09      	ldr	r3, [pc, #36]	; (9002e914 <__swbuf_r+0xa0>)
9002e8f0:	429c      	cmp	r4, r3
9002e8f2:	bf08      	it	eq
9002e8f4:	68ec      	ldreq	r4, [r5, #12]
9002e8f6:	e7ca      	b.n	9002e88e <__swbuf_r+0x1a>
9002e8f8:	4621      	mov	r1, r4
9002e8fa:	4628      	mov	r0, r5
9002e8fc:	f000 f80c 	bl	9002e918 <__swsetup_r>
9002e900:	2800      	cmp	r0, #0
9002e902:	d0cb      	beq.n	9002e89c <__swbuf_r+0x28>
9002e904:	f04f 37ff 	mov.w	r7, #4294967295
9002e908:	e7ea      	b.n	9002e8e0 <__swbuf_r+0x6c>
9002e90a:	bf00      	nop
9002e90c:	90035290 	.word	0x90035290
9002e910:	900352b0 	.word	0x900352b0
9002e914:	90035270 	.word	0x90035270

9002e918 <__swsetup_r>:
9002e918:	4b32      	ldr	r3, [pc, #200]	; (9002e9e4 <__swsetup_r+0xcc>)
9002e91a:	b570      	push	{r4, r5, r6, lr}
9002e91c:	681d      	ldr	r5, [r3, #0]
9002e91e:	4606      	mov	r6, r0
9002e920:	460c      	mov	r4, r1
9002e922:	b125      	cbz	r5, 9002e92e <__swsetup_r+0x16>
9002e924:	69ab      	ldr	r3, [r5, #24]
9002e926:	b913      	cbnz	r3, 9002e92e <__swsetup_r+0x16>
9002e928:	4628      	mov	r0, r5
9002e92a:	f000 f985 	bl	9002ec38 <__sinit>
9002e92e:	4b2e      	ldr	r3, [pc, #184]	; (9002e9e8 <__swsetup_r+0xd0>)
9002e930:	429c      	cmp	r4, r3
9002e932:	d10f      	bne.n	9002e954 <__swsetup_r+0x3c>
9002e934:	686c      	ldr	r4, [r5, #4]
9002e936:	89a3      	ldrh	r3, [r4, #12]
9002e938:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002e93c:	0719      	lsls	r1, r3, #28
9002e93e:	d42c      	bmi.n	9002e99a <__swsetup_r+0x82>
9002e940:	06dd      	lsls	r5, r3, #27
9002e942:	d411      	bmi.n	9002e968 <__swsetup_r+0x50>
9002e944:	2309      	movs	r3, #9
9002e946:	6033      	str	r3, [r6, #0]
9002e948:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002e94c:	81a3      	strh	r3, [r4, #12]
9002e94e:	f04f 30ff 	mov.w	r0, #4294967295
9002e952:	e03e      	b.n	9002e9d2 <__swsetup_r+0xba>
9002e954:	4b25      	ldr	r3, [pc, #148]	; (9002e9ec <__swsetup_r+0xd4>)
9002e956:	429c      	cmp	r4, r3
9002e958:	d101      	bne.n	9002e95e <__swsetup_r+0x46>
9002e95a:	68ac      	ldr	r4, [r5, #8]
9002e95c:	e7eb      	b.n	9002e936 <__swsetup_r+0x1e>
9002e95e:	4b24      	ldr	r3, [pc, #144]	; (9002e9f0 <__swsetup_r+0xd8>)
9002e960:	429c      	cmp	r4, r3
9002e962:	bf08      	it	eq
9002e964:	68ec      	ldreq	r4, [r5, #12]
9002e966:	e7e6      	b.n	9002e936 <__swsetup_r+0x1e>
9002e968:	0758      	lsls	r0, r3, #29
9002e96a:	d512      	bpl.n	9002e992 <__swsetup_r+0x7a>
9002e96c:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002e96e:	b141      	cbz	r1, 9002e982 <__swsetup_r+0x6a>
9002e970:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002e974:	4299      	cmp	r1, r3
9002e976:	d002      	beq.n	9002e97e <__swsetup_r+0x66>
9002e978:	4630      	mov	r0, r6
9002e97a:	f7ff fbd3 	bl	9002e124 <_free_r>
9002e97e:	2300      	movs	r3, #0
9002e980:	6363      	str	r3, [r4, #52]	; 0x34
9002e982:	89a3      	ldrh	r3, [r4, #12]
9002e984:	f023 0324 	bic.w	r3, r3, #36	; 0x24
9002e988:	81a3      	strh	r3, [r4, #12]
9002e98a:	2300      	movs	r3, #0
9002e98c:	6063      	str	r3, [r4, #4]
9002e98e:	6923      	ldr	r3, [r4, #16]
9002e990:	6023      	str	r3, [r4, #0]
9002e992:	89a3      	ldrh	r3, [r4, #12]
9002e994:	f043 0308 	orr.w	r3, r3, #8
9002e998:	81a3      	strh	r3, [r4, #12]
9002e99a:	6923      	ldr	r3, [r4, #16]
9002e99c:	b94b      	cbnz	r3, 9002e9b2 <__swsetup_r+0x9a>
9002e99e:	89a3      	ldrh	r3, [r4, #12]
9002e9a0:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002e9a4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
9002e9a8:	d003      	beq.n	9002e9b2 <__swsetup_r+0x9a>
9002e9aa:	4621      	mov	r1, r4
9002e9ac:	4630      	mov	r0, r6
9002e9ae:	f000 fa07 	bl	9002edc0 <__smakebuf_r>
9002e9b2:	89a0      	ldrh	r0, [r4, #12]
9002e9b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002e9b8:	f010 0301 	ands.w	r3, r0, #1
9002e9bc:	d00a      	beq.n	9002e9d4 <__swsetup_r+0xbc>
9002e9be:	2300      	movs	r3, #0
9002e9c0:	60a3      	str	r3, [r4, #8]
9002e9c2:	6963      	ldr	r3, [r4, #20]
9002e9c4:	425b      	negs	r3, r3
9002e9c6:	61a3      	str	r3, [r4, #24]
9002e9c8:	6923      	ldr	r3, [r4, #16]
9002e9ca:	b943      	cbnz	r3, 9002e9de <__swsetup_r+0xc6>
9002e9cc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002e9d0:	d1ba      	bne.n	9002e948 <__swsetup_r+0x30>
9002e9d2:	bd70      	pop	{r4, r5, r6, pc}
9002e9d4:	0781      	lsls	r1, r0, #30
9002e9d6:	bf58      	it	pl
9002e9d8:	6963      	ldrpl	r3, [r4, #20]
9002e9da:	60a3      	str	r3, [r4, #8]
9002e9dc:	e7f4      	b.n	9002e9c8 <__swsetup_r+0xb0>
9002e9de:	2000      	movs	r0, #0
9002e9e0:	e7f7      	b.n	9002e9d2 <__swsetup_r+0xba>
9002e9e2:	bf00      	nop
9002e9e4:	20000044 	.word	0x20000044
9002e9e8:	90035290 	.word	0x90035290
9002e9ec:	900352b0 	.word	0x900352b0
9002e9f0:	90035270 	.word	0x90035270

9002e9f4 <abort>:
9002e9f4:	b508      	push	{r3, lr}
9002e9f6:	2006      	movs	r0, #6
9002e9f8:	f000 fa56 	bl	9002eea8 <raise>
9002e9fc:	2001      	movs	r0, #1
9002e9fe:	f001 f823 	bl	9002fa48 <_exit>
	...

9002ea04 <__sflush_r>:
9002ea04:	898a      	ldrh	r2, [r1, #12]
9002ea06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002ea0a:	4605      	mov	r5, r0
9002ea0c:	0710      	lsls	r0, r2, #28
9002ea0e:	460c      	mov	r4, r1
9002ea10:	d458      	bmi.n	9002eac4 <__sflush_r+0xc0>
9002ea12:	684b      	ldr	r3, [r1, #4]
9002ea14:	2b00      	cmp	r3, #0
9002ea16:	dc05      	bgt.n	9002ea24 <__sflush_r+0x20>
9002ea18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
9002ea1a:	2b00      	cmp	r3, #0
9002ea1c:	dc02      	bgt.n	9002ea24 <__sflush_r+0x20>
9002ea1e:	2000      	movs	r0, #0
9002ea20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002ea24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002ea26:	2e00      	cmp	r6, #0
9002ea28:	d0f9      	beq.n	9002ea1e <__sflush_r+0x1a>
9002ea2a:	2300      	movs	r3, #0
9002ea2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
9002ea30:	682f      	ldr	r7, [r5, #0]
9002ea32:	602b      	str	r3, [r5, #0]
9002ea34:	d032      	beq.n	9002ea9c <__sflush_r+0x98>
9002ea36:	6d60      	ldr	r0, [r4, #84]	; 0x54
9002ea38:	89a3      	ldrh	r3, [r4, #12]
9002ea3a:	075a      	lsls	r2, r3, #29
9002ea3c:	d505      	bpl.n	9002ea4a <__sflush_r+0x46>
9002ea3e:	6863      	ldr	r3, [r4, #4]
9002ea40:	1ac0      	subs	r0, r0, r3
9002ea42:	6b63      	ldr	r3, [r4, #52]	; 0x34
9002ea44:	b10b      	cbz	r3, 9002ea4a <__sflush_r+0x46>
9002ea46:	6c23      	ldr	r3, [r4, #64]	; 0x40
9002ea48:	1ac0      	subs	r0, r0, r3
9002ea4a:	2300      	movs	r3, #0
9002ea4c:	4602      	mov	r2, r0
9002ea4e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9002ea50:	6a21      	ldr	r1, [r4, #32]
9002ea52:	4628      	mov	r0, r5
9002ea54:	47b0      	blx	r6
9002ea56:	1c43      	adds	r3, r0, #1
9002ea58:	89a3      	ldrh	r3, [r4, #12]
9002ea5a:	d106      	bne.n	9002ea6a <__sflush_r+0x66>
9002ea5c:	6829      	ldr	r1, [r5, #0]
9002ea5e:	291d      	cmp	r1, #29
9002ea60:	d82c      	bhi.n	9002eabc <__sflush_r+0xb8>
9002ea62:	4a2a      	ldr	r2, [pc, #168]	; (9002eb0c <__sflush_r+0x108>)
9002ea64:	40ca      	lsrs	r2, r1
9002ea66:	07d6      	lsls	r6, r2, #31
9002ea68:	d528      	bpl.n	9002eabc <__sflush_r+0xb8>
9002ea6a:	2200      	movs	r2, #0
9002ea6c:	6062      	str	r2, [r4, #4]
9002ea6e:	04d9      	lsls	r1, r3, #19
9002ea70:	6922      	ldr	r2, [r4, #16]
9002ea72:	6022      	str	r2, [r4, #0]
9002ea74:	d504      	bpl.n	9002ea80 <__sflush_r+0x7c>
9002ea76:	1c42      	adds	r2, r0, #1
9002ea78:	d101      	bne.n	9002ea7e <__sflush_r+0x7a>
9002ea7a:	682b      	ldr	r3, [r5, #0]
9002ea7c:	b903      	cbnz	r3, 9002ea80 <__sflush_r+0x7c>
9002ea7e:	6560      	str	r0, [r4, #84]	; 0x54
9002ea80:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002ea82:	602f      	str	r7, [r5, #0]
9002ea84:	2900      	cmp	r1, #0
9002ea86:	d0ca      	beq.n	9002ea1e <__sflush_r+0x1a>
9002ea88:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002ea8c:	4299      	cmp	r1, r3
9002ea8e:	d002      	beq.n	9002ea96 <__sflush_r+0x92>
9002ea90:	4628      	mov	r0, r5
9002ea92:	f7ff fb47 	bl	9002e124 <_free_r>
9002ea96:	2000      	movs	r0, #0
9002ea98:	6360      	str	r0, [r4, #52]	; 0x34
9002ea9a:	e7c1      	b.n	9002ea20 <__sflush_r+0x1c>
9002ea9c:	6a21      	ldr	r1, [r4, #32]
9002ea9e:	2301      	movs	r3, #1
9002eaa0:	4628      	mov	r0, r5
9002eaa2:	47b0      	blx	r6
9002eaa4:	1c41      	adds	r1, r0, #1
9002eaa6:	d1c7      	bne.n	9002ea38 <__sflush_r+0x34>
9002eaa8:	682b      	ldr	r3, [r5, #0]
9002eaaa:	2b00      	cmp	r3, #0
9002eaac:	d0c4      	beq.n	9002ea38 <__sflush_r+0x34>
9002eaae:	2b1d      	cmp	r3, #29
9002eab0:	d001      	beq.n	9002eab6 <__sflush_r+0xb2>
9002eab2:	2b16      	cmp	r3, #22
9002eab4:	d101      	bne.n	9002eaba <__sflush_r+0xb6>
9002eab6:	602f      	str	r7, [r5, #0]
9002eab8:	e7b1      	b.n	9002ea1e <__sflush_r+0x1a>
9002eaba:	89a3      	ldrh	r3, [r4, #12]
9002eabc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002eac0:	81a3      	strh	r3, [r4, #12]
9002eac2:	e7ad      	b.n	9002ea20 <__sflush_r+0x1c>
9002eac4:	690f      	ldr	r7, [r1, #16]
9002eac6:	2f00      	cmp	r7, #0
9002eac8:	d0a9      	beq.n	9002ea1e <__sflush_r+0x1a>
9002eaca:	0793      	lsls	r3, r2, #30
9002eacc:	680e      	ldr	r6, [r1, #0]
9002eace:	bf08      	it	eq
9002ead0:	694b      	ldreq	r3, [r1, #20]
9002ead2:	600f      	str	r7, [r1, #0]
9002ead4:	bf18      	it	ne
9002ead6:	2300      	movne	r3, #0
9002ead8:	eba6 0807 	sub.w	r8, r6, r7
9002eadc:	608b      	str	r3, [r1, #8]
9002eade:	f1b8 0f00 	cmp.w	r8, #0
9002eae2:	dd9c      	ble.n	9002ea1e <__sflush_r+0x1a>
9002eae4:	6a21      	ldr	r1, [r4, #32]
9002eae6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
9002eae8:	4643      	mov	r3, r8
9002eaea:	463a      	mov	r2, r7
9002eaec:	4628      	mov	r0, r5
9002eaee:	47b0      	blx	r6
9002eaf0:	2800      	cmp	r0, #0
9002eaf2:	dc06      	bgt.n	9002eb02 <__sflush_r+0xfe>
9002eaf4:	89a3      	ldrh	r3, [r4, #12]
9002eaf6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
9002eafa:	81a3      	strh	r3, [r4, #12]
9002eafc:	f04f 30ff 	mov.w	r0, #4294967295
9002eb00:	e78e      	b.n	9002ea20 <__sflush_r+0x1c>
9002eb02:	4407      	add	r7, r0
9002eb04:	eba8 0800 	sub.w	r8, r8, r0
9002eb08:	e7e9      	b.n	9002eade <__sflush_r+0xda>
9002eb0a:	bf00      	nop
9002eb0c:	20400001 	.word	0x20400001

9002eb10 <_fflush_r>:
9002eb10:	b538      	push	{r3, r4, r5, lr}
9002eb12:	690b      	ldr	r3, [r1, #16]
9002eb14:	4605      	mov	r5, r0
9002eb16:	460c      	mov	r4, r1
9002eb18:	b913      	cbnz	r3, 9002eb20 <_fflush_r+0x10>
9002eb1a:	2500      	movs	r5, #0
9002eb1c:	4628      	mov	r0, r5
9002eb1e:	bd38      	pop	{r3, r4, r5, pc}
9002eb20:	b118      	cbz	r0, 9002eb2a <_fflush_r+0x1a>
9002eb22:	6983      	ldr	r3, [r0, #24]
9002eb24:	b90b      	cbnz	r3, 9002eb2a <_fflush_r+0x1a>
9002eb26:	f000 f887 	bl	9002ec38 <__sinit>
9002eb2a:	4b14      	ldr	r3, [pc, #80]	; (9002eb7c <_fflush_r+0x6c>)
9002eb2c:	429c      	cmp	r4, r3
9002eb2e:	d11b      	bne.n	9002eb68 <_fflush_r+0x58>
9002eb30:	686c      	ldr	r4, [r5, #4]
9002eb32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002eb36:	2b00      	cmp	r3, #0
9002eb38:	d0ef      	beq.n	9002eb1a <_fflush_r+0xa>
9002eb3a:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002eb3c:	07d0      	lsls	r0, r2, #31
9002eb3e:	d404      	bmi.n	9002eb4a <_fflush_r+0x3a>
9002eb40:	0599      	lsls	r1, r3, #22
9002eb42:	d402      	bmi.n	9002eb4a <_fflush_r+0x3a>
9002eb44:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002eb46:	f000 f915 	bl	9002ed74 <__retarget_lock_acquire_recursive>
9002eb4a:	4628      	mov	r0, r5
9002eb4c:	4621      	mov	r1, r4
9002eb4e:	f7ff ff59 	bl	9002ea04 <__sflush_r>
9002eb52:	6e63      	ldr	r3, [r4, #100]	; 0x64
9002eb54:	07da      	lsls	r2, r3, #31
9002eb56:	4605      	mov	r5, r0
9002eb58:	d4e0      	bmi.n	9002eb1c <_fflush_r+0xc>
9002eb5a:	89a3      	ldrh	r3, [r4, #12]
9002eb5c:	059b      	lsls	r3, r3, #22
9002eb5e:	d4dd      	bmi.n	9002eb1c <_fflush_r+0xc>
9002eb60:	6da0      	ldr	r0, [r4, #88]	; 0x58
9002eb62:	f000 f908 	bl	9002ed76 <__retarget_lock_release_recursive>
9002eb66:	e7d9      	b.n	9002eb1c <_fflush_r+0xc>
9002eb68:	4b05      	ldr	r3, [pc, #20]	; (9002eb80 <_fflush_r+0x70>)
9002eb6a:	429c      	cmp	r4, r3
9002eb6c:	d101      	bne.n	9002eb72 <_fflush_r+0x62>
9002eb6e:	68ac      	ldr	r4, [r5, #8]
9002eb70:	e7df      	b.n	9002eb32 <_fflush_r+0x22>
9002eb72:	4b04      	ldr	r3, [pc, #16]	; (9002eb84 <_fflush_r+0x74>)
9002eb74:	429c      	cmp	r4, r3
9002eb76:	bf08      	it	eq
9002eb78:	68ec      	ldreq	r4, [r5, #12]
9002eb7a:	e7da      	b.n	9002eb32 <_fflush_r+0x22>
9002eb7c:	90035290 	.word	0x90035290
9002eb80:	900352b0 	.word	0x900352b0
9002eb84:	90035270 	.word	0x90035270

9002eb88 <std>:
9002eb88:	2300      	movs	r3, #0
9002eb8a:	b510      	push	{r4, lr}
9002eb8c:	4604      	mov	r4, r0
9002eb8e:	e9c0 3300 	strd	r3, r3, [r0]
9002eb92:	e9c0 3304 	strd	r3, r3, [r0, #16]
9002eb96:	6083      	str	r3, [r0, #8]
9002eb98:	8181      	strh	r1, [r0, #12]
9002eb9a:	6643      	str	r3, [r0, #100]	; 0x64
9002eb9c:	81c2      	strh	r2, [r0, #14]
9002eb9e:	6183      	str	r3, [r0, #24]
9002eba0:	4619      	mov	r1, r3
9002eba2:	2208      	movs	r2, #8
9002eba4:	305c      	adds	r0, #92	; 0x5c
9002eba6:	f7ff fa0f 	bl	9002dfc8 <memset>
9002ebaa:	4b05      	ldr	r3, [pc, #20]	; (9002ebc0 <std+0x38>)
9002ebac:	6263      	str	r3, [r4, #36]	; 0x24
9002ebae:	4b05      	ldr	r3, [pc, #20]	; (9002ebc4 <std+0x3c>)
9002ebb0:	62a3      	str	r3, [r4, #40]	; 0x28
9002ebb2:	4b05      	ldr	r3, [pc, #20]	; (9002ebc8 <std+0x40>)
9002ebb4:	62e3      	str	r3, [r4, #44]	; 0x2c
9002ebb6:	4b05      	ldr	r3, [pc, #20]	; (9002ebcc <std+0x44>)
9002ebb8:	6224      	str	r4, [r4, #32]
9002ebba:	6323      	str	r3, [r4, #48]	; 0x30
9002ebbc:	bd10      	pop	{r4, pc}
9002ebbe:	bf00      	nop
9002ebc0:	9002eee1 	.word	0x9002eee1
9002ebc4:	9002ef03 	.word	0x9002ef03
9002ebc8:	9002ef3b 	.word	0x9002ef3b
9002ebcc:	9002ef5f 	.word	0x9002ef5f

9002ebd0 <_cleanup_r>:
9002ebd0:	4901      	ldr	r1, [pc, #4]	; (9002ebd8 <_cleanup_r+0x8>)
9002ebd2:	f000 b8af 	b.w	9002ed34 <_fwalk_reent>
9002ebd6:	bf00      	nop
9002ebd8:	9002eb11 	.word	0x9002eb11

9002ebdc <__sfmoreglue>:
9002ebdc:	b570      	push	{r4, r5, r6, lr}
9002ebde:	1e4a      	subs	r2, r1, #1
9002ebe0:	2568      	movs	r5, #104	; 0x68
9002ebe2:	4355      	muls	r5, r2
9002ebe4:	460e      	mov	r6, r1
9002ebe6:	f105 0174 	add.w	r1, r5, #116	; 0x74
9002ebea:	f7ff faeb 	bl	9002e1c4 <_malloc_r>
9002ebee:	4604      	mov	r4, r0
9002ebf0:	b140      	cbz	r0, 9002ec04 <__sfmoreglue+0x28>
9002ebf2:	2100      	movs	r1, #0
9002ebf4:	e9c0 1600 	strd	r1, r6, [r0]
9002ebf8:	300c      	adds	r0, #12
9002ebfa:	60a0      	str	r0, [r4, #8]
9002ebfc:	f105 0268 	add.w	r2, r5, #104	; 0x68
9002ec00:	f7ff f9e2 	bl	9002dfc8 <memset>
9002ec04:	4620      	mov	r0, r4
9002ec06:	bd70      	pop	{r4, r5, r6, pc}

9002ec08 <__sfp_lock_acquire>:
9002ec08:	4801      	ldr	r0, [pc, #4]	; (9002ec10 <__sfp_lock_acquire+0x8>)
9002ec0a:	f000 b8b3 	b.w	9002ed74 <__retarget_lock_acquire_recursive>
9002ec0e:	bf00      	nop
9002ec10:	20003a48 	.word	0x20003a48

9002ec14 <__sfp_lock_release>:
9002ec14:	4801      	ldr	r0, [pc, #4]	; (9002ec1c <__sfp_lock_release+0x8>)
9002ec16:	f000 b8ae 	b.w	9002ed76 <__retarget_lock_release_recursive>
9002ec1a:	bf00      	nop
9002ec1c:	20003a48 	.word	0x20003a48

9002ec20 <__sinit_lock_acquire>:
9002ec20:	4801      	ldr	r0, [pc, #4]	; (9002ec28 <__sinit_lock_acquire+0x8>)
9002ec22:	f000 b8a7 	b.w	9002ed74 <__retarget_lock_acquire_recursive>
9002ec26:	bf00      	nop
9002ec28:	20003a43 	.word	0x20003a43

9002ec2c <__sinit_lock_release>:
9002ec2c:	4801      	ldr	r0, [pc, #4]	; (9002ec34 <__sinit_lock_release+0x8>)
9002ec2e:	f000 b8a2 	b.w	9002ed76 <__retarget_lock_release_recursive>
9002ec32:	bf00      	nop
9002ec34:	20003a43 	.word	0x20003a43

9002ec38 <__sinit>:
9002ec38:	b510      	push	{r4, lr}
9002ec3a:	4604      	mov	r4, r0
9002ec3c:	f7ff fff0 	bl	9002ec20 <__sinit_lock_acquire>
9002ec40:	69a3      	ldr	r3, [r4, #24]
9002ec42:	b11b      	cbz	r3, 9002ec4c <__sinit+0x14>
9002ec44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002ec48:	f7ff bff0 	b.w	9002ec2c <__sinit_lock_release>
9002ec4c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
9002ec50:	6523      	str	r3, [r4, #80]	; 0x50
9002ec52:	4b13      	ldr	r3, [pc, #76]	; (9002eca0 <__sinit+0x68>)
9002ec54:	4a13      	ldr	r2, [pc, #76]	; (9002eca4 <__sinit+0x6c>)
9002ec56:	681b      	ldr	r3, [r3, #0]
9002ec58:	62a2      	str	r2, [r4, #40]	; 0x28
9002ec5a:	42a3      	cmp	r3, r4
9002ec5c:	bf04      	itt	eq
9002ec5e:	2301      	moveq	r3, #1
9002ec60:	61a3      	streq	r3, [r4, #24]
9002ec62:	4620      	mov	r0, r4
9002ec64:	f000 f820 	bl	9002eca8 <__sfp>
9002ec68:	6060      	str	r0, [r4, #4]
9002ec6a:	4620      	mov	r0, r4
9002ec6c:	f000 f81c 	bl	9002eca8 <__sfp>
9002ec70:	60a0      	str	r0, [r4, #8]
9002ec72:	4620      	mov	r0, r4
9002ec74:	f000 f818 	bl	9002eca8 <__sfp>
9002ec78:	2200      	movs	r2, #0
9002ec7a:	60e0      	str	r0, [r4, #12]
9002ec7c:	2104      	movs	r1, #4
9002ec7e:	6860      	ldr	r0, [r4, #4]
9002ec80:	f7ff ff82 	bl	9002eb88 <std>
9002ec84:	68a0      	ldr	r0, [r4, #8]
9002ec86:	2201      	movs	r2, #1
9002ec88:	2109      	movs	r1, #9
9002ec8a:	f7ff ff7d 	bl	9002eb88 <std>
9002ec8e:	68e0      	ldr	r0, [r4, #12]
9002ec90:	2202      	movs	r2, #2
9002ec92:	2112      	movs	r1, #18
9002ec94:	f7ff ff78 	bl	9002eb88 <std>
9002ec98:	2301      	movs	r3, #1
9002ec9a:	61a3      	str	r3, [r4, #24]
9002ec9c:	e7d2      	b.n	9002ec44 <__sinit+0xc>
9002ec9e:	bf00      	nop
9002eca0:	90035184 	.word	0x90035184
9002eca4:	9002ebd1 	.word	0x9002ebd1

9002eca8 <__sfp>:
9002eca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002ecaa:	4607      	mov	r7, r0
9002ecac:	f7ff ffac 	bl	9002ec08 <__sfp_lock_acquire>
9002ecb0:	4b1e      	ldr	r3, [pc, #120]	; (9002ed2c <__sfp+0x84>)
9002ecb2:	681e      	ldr	r6, [r3, #0]
9002ecb4:	69b3      	ldr	r3, [r6, #24]
9002ecb6:	b913      	cbnz	r3, 9002ecbe <__sfp+0x16>
9002ecb8:	4630      	mov	r0, r6
9002ecba:	f7ff ffbd 	bl	9002ec38 <__sinit>
9002ecbe:	3648      	adds	r6, #72	; 0x48
9002ecc0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
9002ecc4:	3b01      	subs	r3, #1
9002ecc6:	d503      	bpl.n	9002ecd0 <__sfp+0x28>
9002ecc8:	6833      	ldr	r3, [r6, #0]
9002ecca:	b30b      	cbz	r3, 9002ed10 <__sfp+0x68>
9002eccc:	6836      	ldr	r6, [r6, #0]
9002ecce:	e7f7      	b.n	9002ecc0 <__sfp+0x18>
9002ecd0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
9002ecd4:	b9d5      	cbnz	r5, 9002ed0c <__sfp+0x64>
9002ecd6:	4b16      	ldr	r3, [pc, #88]	; (9002ed30 <__sfp+0x88>)
9002ecd8:	60e3      	str	r3, [r4, #12]
9002ecda:	f104 0058 	add.w	r0, r4, #88	; 0x58
9002ecde:	6665      	str	r5, [r4, #100]	; 0x64
9002ece0:	f000 f847 	bl	9002ed72 <__retarget_lock_init_recursive>
9002ece4:	f7ff ff96 	bl	9002ec14 <__sfp_lock_release>
9002ece8:	e9c4 5501 	strd	r5, r5, [r4, #4]
9002ecec:	e9c4 5504 	strd	r5, r5, [r4, #16]
9002ecf0:	6025      	str	r5, [r4, #0]
9002ecf2:	61a5      	str	r5, [r4, #24]
9002ecf4:	2208      	movs	r2, #8
9002ecf6:	4629      	mov	r1, r5
9002ecf8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
9002ecfc:	f7ff f964 	bl	9002dfc8 <memset>
9002ed00:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
9002ed04:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
9002ed08:	4620      	mov	r0, r4
9002ed0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002ed0c:	3468      	adds	r4, #104	; 0x68
9002ed0e:	e7d9      	b.n	9002ecc4 <__sfp+0x1c>
9002ed10:	2104      	movs	r1, #4
9002ed12:	4638      	mov	r0, r7
9002ed14:	f7ff ff62 	bl	9002ebdc <__sfmoreglue>
9002ed18:	4604      	mov	r4, r0
9002ed1a:	6030      	str	r0, [r6, #0]
9002ed1c:	2800      	cmp	r0, #0
9002ed1e:	d1d5      	bne.n	9002eccc <__sfp+0x24>
9002ed20:	f7ff ff78 	bl	9002ec14 <__sfp_lock_release>
9002ed24:	230c      	movs	r3, #12
9002ed26:	603b      	str	r3, [r7, #0]
9002ed28:	e7ee      	b.n	9002ed08 <__sfp+0x60>
9002ed2a:	bf00      	nop
9002ed2c:	90035184 	.word	0x90035184
9002ed30:	ffff0001 	.word	0xffff0001

9002ed34 <_fwalk_reent>:
9002ed34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002ed38:	4606      	mov	r6, r0
9002ed3a:	4688      	mov	r8, r1
9002ed3c:	f100 0448 	add.w	r4, r0, #72	; 0x48
9002ed40:	2700      	movs	r7, #0
9002ed42:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
9002ed46:	f1b9 0901 	subs.w	r9, r9, #1
9002ed4a:	d505      	bpl.n	9002ed58 <_fwalk_reent+0x24>
9002ed4c:	6824      	ldr	r4, [r4, #0]
9002ed4e:	2c00      	cmp	r4, #0
9002ed50:	d1f7      	bne.n	9002ed42 <_fwalk_reent+0xe>
9002ed52:	4638      	mov	r0, r7
9002ed54:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002ed58:	89ab      	ldrh	r3, [r5, #12]
9002ed5a:	2b01      	cmp	r3, #1
9002ed5c:	d907      	bls.n	9002ed6e <_fwalk_reent+0x3a>
9002ed5e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
9002ed62:	3301      	adds	r3, #1
9002ed64:	d003      	beq.n	9002ed6e <_fwalk_reent+0x3a>
9002ed66:	4629      	mov	r1, r5
9002ed68:	4630      	mov	r0, r6
9002ed6a:	47c0      	blx	r8
9002ed6c:	4307      	orrs	r7, r0
9002ed6e:	3568      	adds	r5, #104	; 0x68
9002ed70:	e7e9      	b.n	9002ed46 <_fwalk_reent+0x12>

9002ed72 <__retarget_lock_init_recursive>:
9002ed72:	4770      	bx	lr

9002ed74 <__retarget_lock_acquire_recursive>:
9002ed74:	4770      	bx	lr

9002ed76 <__retarget_lock_release_recursive>:
9002ed76:	4770      	bx	lr

9002ed78 <__swhatbuf_r>:
9002ed78:	b570      	push	{r4, r5, r6, lr}
9002ed7a:	460e      	mov	r6, r1
9002ed7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ed80:	2900      	cmp	r1, #0
9002ed82:	b096      	sub	sp, #88	; 0x58
9002ed84:	4614      	mov	r4, r2
9002ed86:	461d      	mov	r5, r3
9002ed88:	da07      	bge.n	9002ed9a <__swhatbuf_r+0x22>
9002ed8a:	2300      	movs	r3, #0
9002ed8c:	602b      	str	r3, [r5, #0]
9002ed8e:	89b3      	ldrh	r3, [r6, #12]
9002ed90:	061a      	lsls	r2, r3, #24
9002ed92:	d410      	bmi.n	9002edb6 <__swhatbuf_r+0x3e>
9002ed94:	f44f 6380 	mov.w	r3, #1024	; 0x400
9002ed98:	e00e      	b.n	9002edb8 <__swhatbuf_r+0x40>
9002ed9a:	466a      	mov	r2, sp
9002ed9c:	f000 f906 	bl	9002efac <_fstat_r>
9002eda0:	2800      	cmp	r0, #0
9002eda2:	dbf2      	blt.n	9002ed8a <__swhatbuf_r+0x12>
9002eda4:	9a01      	ldr	r2, [sp, #4]
9002eda6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
9002edaa:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
9002edae:	425a      	negs	r2, r3
9002edb0:	415a      	adcs	r2, r3
9002edb2:	602a      	str	r2, [r5, #0]
9002edb4:	e7ee      	b.n	9002ed94 <__swhatbuf_r+0x1c>
9002edb6:	2340      	movs	r3, #64	; 0x40
9002edb8:	2000      	movs	r0, #0
9002edba:	6023      	str	r3, [r4, #0]
9002edbc:	b016      	add	sp, #88	; 0x58
9002edbe:	bd70      	pop	{r4, r5, r6, pc}

9002edc0 <__smakebuf_r>:
9002edc0:	898b      	ldrh	r3, [r1, #12]
9002edc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
9002edc4:	079d      	lsls	r5, r3, #30
9002edc6:	4606      	mov	r6, r0
9002edc8:	460c      	mov	r4, r1
9002edca:	d507      	bpl.n	9002eddc <__smakebuf_r+0x1c>
9002edcc:	f104 0347 	add.w	r3, r4, #71	; 0x47
9002edd0:	6023      	str	r3, [r4, #0]
9002edd2:	6123      	str	r3, [r4, #16]
9002edd4:	2301      	movs	r3, #1
9002edd6:	6163      	str	r3, [r4, #20]
9002edd8:	b002      	add	sp, #8
9002edda:	bd70      	pop	{r4, r5, r6, pc}
9002eddc:	ab01      	add	r3, sp, #4
9002edde:	466a      	mov	r2, sp
9002ede0:	f7ff ffca 	bl	9002ed78 <__swhatbuf_r>
9002ede4:	9900      	ldr	r1, [sp, #0]
9002ede6:	4605      	mov	r5, r0
9002ede8:	4630      	mov	r0, r6
9002edea:	f7ff f9eb 	bl	9002e1c4 <_malloc_r>
9002edee:	b948      	cbnz	r0, 9002ee04 <__smakebuf_r+0x44>
9002edf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002edf4:	059a      	lsls	r2, r3, #22
9002edf6:	d4ef      	bmi.n	9002edd8 <__smakebuf_r+0x18>
9002edf8:	f023 0303 	bic.w	r3, r3, #3
9002edfc:	f043 0302 	orr.w	r3, r3, #2
9002ee00:	81a3      	strh	r3, [r4, #12]
9002ee02:	e7e3      	b.n	9002edcc <__smakebuf_r+0xc>
9002ee04:	4b0d      	ldr	r3, [pc, #52]	; (9002ee3c <__smakebuf_r+0x7c>)
9002ee06:	62b3      	str	r3, [r6, #40]	; 0x28
9002ee08:	89a3      	ldrh	r3, [r4, #12]
9002ee0a:	6020      	str	r0, [r4, #0]
9002ee0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9002ee10:	81a3      	strh	r3, [r4, #12]
9002ee12:	9b00      	ldr	r3, [sp, #0]
9002ee14:	6163      	str	r3, [r4, #20]
9002ee16:	9b01      	ldr	r3, [sp, #4]
9002ee18:	6120      	str	r0, [r4, #16]
9002ee1a:	b15b      	cbz	r3, 9002ee34 <__smakebuf_r+0x74>
9002ee1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002ee20:	4630      	mov	r0, r6
9002ee22:	f000 f8d5 	bl	9002efd0 <_isatty_r>
9002ee26:	b128      	cbz	r0, 9002ee34 <__smakebuf_r+0x74>
9002ee28:	89a3      	ldrh	r3, [r4, #12]
9002ee2a:	f023 0303 	bic.w	r3, r3, #3
9002ee2e:	f043 0301 	orr.w	r3, r3, #1
9002ee32:	81a3      	strh	r3, [r4, #12]
9002ee34:	89a0      	ldrh	r0, [r4, #12]
9002ee36:	4305      	orrs	r5, r0
9002ee38:	81a5      	strh	r5, [r4, #12]
9002ee3a:	e7cd      	b.n	9002edd8 <__smakebuf_r+0x18>
9002ee3c:	9002ebd1 	.word	0x9002ebd1

9002ee40 <__malloc_lock>:
9002ee40:	4801      	ldr	r0, [pc, #4]	; (9002ee48 <__malloc_lock+0x8>)
9002ee42:	f7ff bf97 	b.w	9002ed74 <__retarget_lock_acquire_recursive>
9002ee46:	bf00      	nop
9002ee48:	20003a44 	.word	0x20003a44

9002ee4c <__malloc_unlock>:
9002ee4c:	4801      	ldr	r0, [pc, #4]	; (9002ee54 <__malloc_unlock+0x8>)
9002ee4e:	f7ff bf92 	b.w	9002ed76 <__retarget_lock_release_recursive>
9002ee52:	bf00      	nop
9002ee54:	20003a44 	.word	0x20003a44

9002ee58 <_raise_r>:
9002ee58:	291f      	cmp	r1, #31
9002ee5a:	b538      	push	{r3, r4, r5, lr}
9002ee5c:	4604      	mov	r4, r0
9002ee5e:	460d      	mov	r5, r1
9002ee60:	d904      	bls.n	9002ee6c <_raise_r+0x14>
9002ee62:	2316      	movs	r3, #22
9002ee64:	6003      	str	r3, [r0, #0]
9002ee66:	f04f 30ff 	mov.w	r0, #4294967295
9002ee6a:	bd38      	pop	{r3, r4, r5, pc}
9002ee6c:	6c42      	ldr	r2, [r0, #68]	; 0x44
9002ee6e:	b112      	cbz	r2, 9002ee76 <_raise_r+0x1e>
9002ee70:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
9002ee74:	b94b      	cbnz	r3, 9002ee8a <_raise_r+0x32>
9002ee76:	4620      	mov	r0, r4
9002ee78:	f000 f830 	bl	9002eedc <_getpid_r>
9002ee7c:	462a      	mov	r2, r5
9002ee7e:	4601      	mov	r1, r0
9002ee80:	4620      	mov	r0, r4
9002ee82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
9002ee86:	f000 b817 	b.w	9002eeb8 <_kill_r>
9002ee8a:	2b01      	cmp	r3, #1
9002ee8c:	d00a      	beq.n	9002eea4 <_raise_r+0x4c>
9002ee8e:	1c59      	adds	r1, r3, #1
9002ee90:	d103      	bne.n	9002ee9a <_raise_r+0x42>
9002ee92:	2316      	movs	r3, #22
9002ee94:	6003      	str	r3, [r0, #0]
9002ee96:	2001      	movs	r0, #1
9002ee98:	e7e7      	b.n	9002ee6a <_raise_r+0x12>
9002ee9a:	2400      	movs	r4, #0
9002ee9c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002eea0:	4628      	mov	r0, r5
9002eea2:	4798      	blx	r3
9002eea4:	2000      	movs	r0, #0
9002eea6:	e7e0      	b.n	9002ee6a <_raise_r+0x12>

9002eea8 <raise>:
9002eea8:	4b02      	ldr	r3, [pc, #8]	; (9002eeb4 <raise+0xc>)
9002eeaa:	4601      	mov	r1, r0
9002eeac:	6818      	ldr	r0, [r3, #0]
9002eeae:	f7ff bfd3 	b.w	9002ee58 <_raise_r>
9002eeb2:	bf00      	nop
9002eeb4:	20000044 	.word	0x20000044

9002eeb8 <_kill_r>:
9002eeb8:	b538      	push	{r3, r4, r5, lr}
9002eeba:	4d07      	ldr	r5, [pc, #28]	; (9002eed8 <_kill_r+0x20>)
9002eebc:	2300      	movs	r3, #0
9002eebe:	4604      	mov	r4, r0
9002eec0:	4608      	mov	r0, r1
9002eec2:	4611      	mov	r1, r2
9002eec4:	602b      	str	r3, [r5, #0]
9002eec6:	f000 fd91 	bl	9002f9ec <_kill>
9002eeca:	1c43      	adds	r3, r0, #1
9002eecc:	d102      	bne.n	9002eed4 <_kill_r+0x1c>
9002eece:	682b      	ldr	r3, [r5, #0]
9002eed0:	b103      	cbz	r3, 9002eed4 <_kill_r+0x1c>
9002eed2:	6023      	str	r3, [r4, #0]
9002eed4:	bd38      	pop	{r3, r4, r5, pc}
9002eed6:	bf00      	nop
9002eed8:	20003a4c 	.word	0x20003a4c

9002eedc <_getpid_r>:
9002eedc:	f000 bd76 	b.w	9002f9cc <_getpid>

9002eee0 <__sread>:
9002eee0:	b510      	push	{r4, lr}
9002eee2:	460c      	mov	r4, r1
9002eee4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002eee8:	f000 f894 	bl	9002f014 <_read_r>
9002eeec:	2800      	cmp	r0, #0
9002eeee:	bfab      	itete	ge
9002eef0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
9002eef2:	89a3      	ldrhlt	r3, [r4, #12]
9002eef4:	181b      	addge	r3, r3, r0
9002eef6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002eefa:	bfac      	ite	ge
9002eefc:	6563      	strge	r3, [r4, #84]	; 0x54
9002eefe:	81a3      	strhlt	r3, [r4, #12]
9002ef00:	bd10      	pop	{r4, pc}

9002ef02 <__swrite>:
9002ef02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002ef06:	461f      	mov	r7, r3
9002ef08:	898b      	ldrh	r3, [r1, #12]
9002ef0a:	05db      	lsls	r3, r3, #23
9002ef0c:	4605      	mov	r5, r0
9002ef0e:	460c      	mov	r4, r1
9002ef10:	4616      	mov	r6, r2
9002ef12:	d505      	bpl.n	9002ef20 <__swrite+0x1e>
9002ef14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ef18:	2302      	movs	r3, #2
9002ef1a:	2200      	movs	r2, #0
9002ef1c:	f000 f868 	bl	9002eff0 <_lseek_r>
9002ef20:	89a3      	ldrh	r3, [r4, #12]
9002ef22:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002ef26:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002ef2a:	81a3      	strh	r3, [r4, #12]
9002ef2c:	4632      	mov	r2, r6
9002ef2e:	463b      	mov	r3, r7
9002ef30:	4628      	mov	r0, r5
9002ef32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
9002ef36:	f000 b817 	b.w	9002ef68 <_write_r>

9002ef3a <__sseek>:
9002ef3a:	b510      	push	{r4, lr}
9002ef3c:	460c      	mov	r4, r1
9002ef3e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ef42:	f000 f855 	bl	9002eff0 <_lseek_r>
9002ef46:	1c43      	adds	r3, r0, #1
9002ef48:	89a3      	ldrh	r3, [r4, #12]
9002ef4a:	bf15      	itete	ne
9002ef4c:	6560      	strne	r0, [r4, #84]	; 0x54
9002ef4e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
9002ef52:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
9002ef56:	81a3      	strheq	r3, [r4, #12]
9002ef58:	bf18      	it	ne
9002ef5a:	81a3      	strhne	r3, [r4, #12]
9002ef5c:	bd10      	pop	{r4, pc}

9002ef5e <__sclose>:
9002ef5e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002ef62:	f000 b813 	b.w	9002ef8c <_close_r>
	...

9002ef68 <_write_r>:
9002ef68:	b538      	push	{r3, r4, r5, lr}
9002ef6a:	4d07      	ldr	r5, [pc, #28]	; (9002ef88 <_write_r+0x20>)
9002ef6c:	4604      	mov	r4, r0
9002ef6e:	4608      	mov	r0, r1
9002ef70:	4611      	mov	r1, r2
9002ef72:	2200      	movs	r2, #0
9002ef74:	602a      	str	r2, [r5, #0]
9002ef76:	461a      	mov	r2, r3
9002ef78:	f000 fd5e 	bl	9002fa38 <_write>
9002ef7c:	1c43      	adds	r3, r0, #1
9002ef7e:	d102      	bne.n	9002ef86 <_write_r+0x1e>
9002ef80:	682b      	ldr	r3, [r5, #0]
9002ef82:	b103      	cbz	r3, 9002ef86 <_write_r+0x1e>
9002ef84:	6023      	str	r3, [r4, #0]
9002ef86:	bd38      	pop	{r3, r4, r5, pc}
9002ef88:	20003a4c 	.word	0x20003a4c

9002ef8c <_close_r>:
9002ef8c:	b538      	push	{r3, r4, r5, lr}
9002ef8e:	4d06      	ldr	r5, [pc, #24]	; (9002efa8 <_close_r+0x1c>)
9002ef90:	2300      	movs	r3, #0
9002ef92:	4604      	mov	r4, r0
9002ef94:	4608      	mov	r0, r1
9002ef96:	602b      	str	r3, [r5, #0]
9002ef98:	f000 fd08 	bl	9002f9ac <_close>
9002ef9c:	1c43      	adds	r3, r0, #1
9002ef9e:	d102      	bne.n	9002efa6 <_close_r+0x1a>
9002efa0:	682b      	ldr	r3, [r5, #0]
9002efa2:	b103      	cbz	r3, 9002efa6 <_close_r+0x1a>
9002efa4:	6023      	str	r3, [r4, #0]
9002efa6:	bd38      	pop	{r3, r4, r5, pc}
9002efa8:	20003a4c 	.word	0x20003a4c

9002efac <_fstat_r>:
9002efac:	b538      	push	{r3, r4, r5, lr}
9002efae:	4d07      	ldr	r5, [pc, #28]	; (9002efcc <_fstat_r+0x20>)
9002efb0:	2300      	movs	r3, #0
9002efb2:	4604      	mov	r4, r0
9002efb4:	4608      	mov	r0, r1
9002efb6:	4611      	mov	r1, r2
9002efb8:	602b      	str	r3, [r5, #0]
9002efba:	f000 fcff 	bl	9002f9bc <_fstat>
9002efbe:	1c43      	adds	r3, r0, #1
9002efc0:	d102      	bne.n	9002efc8 <_fstat_r+0x1c>
9002efc2:	682b      	ldr	r3, [r5, #0]
9002efc4:	b103      	cbz	r3, 9002efc8 <_fstat_r+0x1c>
9002efc6:	6023      	str	r3, [r4, #0]
9002efc8:	bd38      	pop	{r3, r4, r5, pc}
9002efca:	bf00      	nop
9002efcc:	20003a4c 	.word	0x20003a4c

9002efd0 <_isatty_r>:
9002efd0:	b538      	push	{r3, r4, r5, lr}
9002efd2:	4d06      	ldr	r5, [pc, #24]	; (9002efec <_isatty_r+0x1c>)
9002efd4:	2300      	movs	r3, #0
9002efd6:	4604      	mov	r4, r0
9002efd8:	4608      	mov	r0, r1
9002efda:	602b      	str	r3, [r5, #0]
9002efdc:	f000 fcfe 	bl	9002f9dc <_isatty>
9002efe0:	1c43      	adds	r3, r0, #1
9002efe2:	d102      	bne.n	9002efea <_isatty_r+0x1a>
9002efe4:	682b      	ldr	r3, [r5, #0]
9002efe6:	b103      	cbz	r3, 9002efea <_isatty_r+0x1a>
9002efe8:	6023      	str	r3, [r4, #0]
9002efea:	bd38      	pop	{r3, r4, r5, pc}
9002efec:	20003a4c 	.word	0x20003a4c

9002eff0 <_lseek_r>:
9002eff0:	b538      	push	{r3, r4, r5, lr}
9002eff2:	4d07      	ldr	r5, [pc, #28]	; (9002f010 <_lseek_r+0x20>)
9002eff4:	4604      	mov	r4, r0
9002eff6:	4608      	mov	r0, r1
9002eff8:	4611      	mov	r1, r2
9002effa:	2200      	movs	r2, #0
9002effc:	602a      	str	r2, [r5, #0]
9002effe:	461a      	mov	r2, r3
9002f000:	f000 fcfc 	bl	9002f9fc <_lseek>
9002f004:	1c43      	adds	r3, r0, #1
9002f006:	d102      	bne.n	9002f00e <_lseek_r+0x1e>
9002f008:	682b      	ldr	r3, [r5, #0]
9002f00a:	b103      	cbz	r3, 9002f00e <_lseek_r+0x1e>
9002f00c:	6023      	str	r3, [r4, #0]
9002f00e:	bd38      	pop	{r3, r4, r5, pc}
9002f010:	20003a4c 	.word	0x20003a4c

9002f014 <_read_r>:
9002f014:	b538      	push	{r3, r4, r5, lr}
9002f016:	4d07      	ldr	r5, [pc, #28]	; (9002f034 <_read_r+0x20>)
9002f018:	4604      	mov	r4, r0
9002f01a:	4608      	mov	r0, r1
9002f01c:	4611      	mov	r1, r2
9002f01e:	2200      	movs	r2, #0
9002f020:	602a      	str	r2, [r5, #0]
9002f022:	461a      	mov	r2, r3
9002f024:	f000 fcf2 	bl	9002fa0c <_read>
9002f028:	1c43      	adds	r3, r0, #1
9002f02a:	d102      	bne.n	9002f032 <_read_r+0x1e>
9002f02c:	682b      	ldr	r3, [r5, #0]
9002f02e:	b103      	cbz	r3, 9002f032 <_read_r+0x1e>
9002f030:	6023      	str	r3, [r4, #0]
9002f032:	bd38      	pop	{r3, r4, r5, pc}
9002f034:	20003a4c 	.word	0x20003a4c

9002f038 <sinf_poly>:
9002f038:	07cb      	lsls	r3, r1, #31
9002f03a:	d412      	bmi.n	9002f062 <sinf_poly+0x2a>
9002f03c:	ee21 6b00 	vmul.f64	d6, d1, d0
9002f040:	ed90 5b1a 	vldr	d5, [r0, #104]	; 0x68
9002f044:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
9002f048:	eea5 7b01 	vfma.f64	d7, d5, d1
9002f04c:	ed90 5b16 	vldr	d5, [r0, #88]	; 0x58
9002f050:	ee21 1b06 	vmul.f64	d1, d1, d6
9002f054:	eea5 0b06 	vfma.f64	d0, d5, d6
9002f058:	eea7 0b01 	vfma.f64	d0, d7, d1
9002f05c:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002f060:	4770      	bx	lr
9002f062:	ed90 5b14 	vldr	d5, [r0, #80]	; 0x50
9002f066:	ee21 6b01 	vmul.f64	d6, d1, d1
9002f06a:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
9002f06e:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
9002f072:	eea1 7b05 	vfma.f64	d7, d1, d5
9002f076:	ed90 5b0e 	vldr	d5, [r0, #56]	; 0x38
9002f07a:	eea1 0b05 	vfma.f64	d0, d1, d5
9002f07e:	ed90 5b10 	vldr	d5, [r0, #64]	; 0x40
9002f082:	ee21 1b06 	vmul.f64	d1, d1, d6
9002f086:	eea6 0b05 	vfma.f64	d0, d6, d5
9002f08a:	e7e5      	b.n	9002f058 <sinf_poly+0x20>
9002f08c:	0000      	movs	r0, r0
	...

9002f090 <cosf>:
9002f090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002f092:	ee10 4a10 	vmov	r4, s0
9002f096:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002f09a:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
9002f09e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002f0a2:	d20c      	bcs.n	9002f0be <cosf+0x2e>
9002f0a4:	ee26 1b06 	vmul.f64	d1, d6, d6
9002f0a8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
9002f0ac:	d378      	bcc.n	9002f1a0 <cosf+0x110>
9002f0ae:	eeb0 0b46 	vmov.f64	d0, d6
9002f0b2:	483f      	ldr	r0, [pc, #252]	; (9002f1b0 <cosf+0x120>)
9002f0b4:	2101      	movs	r1, #1
9002f0b6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
9002f0ba:	f7ff bfbd 	b.w	9002f038 <sinf_poly>
9002f0be:	f240 422e 	movw	r2, #1070	; 0x42e
9002f0c2:	4293      	cmp	r3, r2
9002f0c4:	d826      	bhi.n	9002f114 <cosf+0x84>
9002f0c6:	4b3a      	ldr	r3, [pc, #232]	; (9002f1b0 <cosf+0x120>)
9002f0c8:	ed93 7b08 	vldr	d7, [r3, #32]
9002f0cc:	ee26 7b07 	vmul.f64	d7, d6, d7
9002f0d0:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002f0d4:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002f0d8:	ee17 1a90 	vmov	r1, s15
9002f0dc:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
9002f0e0:	1609      	asrs	r1, r1, #24
9002f0e2:	ee07 1a90 	vmov	s15, r1
9002f0e6:	f001 0203 	and.w	r2, r1, #3
9002f0ea:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002f0ee:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002f0f2:	ed92 0b00 	vldr	d0, [r2]
9002f0f6:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
9002f0fa:	f011 0f02 	tst.w	r1, #2
9002f0fe:	eea5 6b47 	vfms.f64	d6, d5, d7
9002f102:	f081 0101 	eor.w	r1, r1, #1
9002f106:	bf08      	it	eq
9002f108:	4618      	moveq	r0, r3
9002f10a:	ee26 1b06 	vmul.f64	d1, d6, d6
9002f10e:	ee20 0b06 	vmul.f64	d0, d0, d6
9002f112:	e7d0      	b.n	9002f0b6 <cosf+0x26>
9002f114:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
9002f118:	d23e      	bcs.n	9002f198 <cosf+0x108>
9002f11a:	4b26      	ldr	r3, [pc, #152]	; (9002f1b4 <cosf+0x124>)
9002f11c:	f3c4 6283 	ubfx	r2, r4, #26, #4
9002f120:	eb03 0082 	add.w	r0, r3, r2, lsl #2
9002f124:	f3c4 0116 	ubfx	r1, r4, #0, #23
9002f128:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002f12c:	6a06      	ldr	r6, [r0, #32]
9002f12e:	6900      	ldr	r0, [r0, #16]
9002f130:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
9002f134:	40a9      	lsls	r1, r5
9002f136:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002f13a:	fba1 6706 	umull	r6, r7, r1, r6
9002f13e:	fb05 f301 	mul.w	r3, r5, r1
9002f142:	463a      	mov	r2, r7
9002f144:	fbe0 2301 	umlal	r2, r3, r0, r1
9002f148:	1c11      	adds	r1, r2, #0
9002f14a:	f143 5600 	adc.w	r6, r3, #536870912	; 0x20000000
9002f14e:	2000      	movs	r0, #0
9002f150:	1a10      	subs	r0, r2, r0
9002f152:	f006 4140 	and.w	r1, r6, #3221225472	; 0xc0000000
9002f156:	eb63 0101 	sbc.w	r1, r3, r1
9002f15a:	f7f2 fe3f 	bl	90021ddc <__aeabi_l2d>
9002f15e:	0fb5      	lsrs	r5, r6, #30
9002f160:	4b13      	ldr	r3, [pc, #76]	; (9002f1b0 <cosf+0x120>)
9002f162:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
9002f166:	ed9f 0b10 	vldr	d0, [pc, #64]	; 9002f1a8 <cosf+0x118>
9002f16a:	ec41 0b17 	vmov	d7, r0, r1
9002f16e:	f004 0203 	and.w	r2, r4, #3
9002f172:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002f176:	ee27 0b00 	vmul.f64	d0, d7, d0
9002f17a:	ed92 7b00 	vldr	d7, [r2]
9002f17e:	ee20 1b00 	vmul.f64	d1, d0, d0
9002f182:	f014 0f02 	tst.w	r4, #2
9002f186:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002f18a:	f085 0101 	eor.w	r1, r5, #1
9002f18e:	bf08      	it	eq
9002f190:	4618      	moveq	r0, r3
9002f192:	ee27 0b00 	vmul.f64	d0, d7, d0
9002f196:	e78e      	b.n	9002f0b6 <cosf+0x26>
9002f198:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
9002f19c:	f000 b844 	b.w	9002f228 <__math_invalidf>
9002f1a0:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
9002f1a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002f1a6:	bf00      	nop
9002f1a8:	54442d18 	.word	0x54442d18
9002f1ac:	3c1921fb 	.word	0x3c1921fb
9002f1b0:	900355a0 	.word	0x900355a0
9002f1b4:	90035540 	.word	0x90035540

9002f1b8 <with_errnof>:
9002f1b8:	b513      	push	{r0, r1, r4, lr}
9002f1ba:	4604      	mov	r4, r0
9002f1bc:	ed8d 0a01 	vstr	s0, [sp, #4]
9002f1c0:	f000 fbee 	bl	9002f9a0 <__errno>
9002f1c4:	ed9d 0a01 	vldr	s0, [sp, #4]
9002f1c8:	6004      	str	r4, [r0, #0]
9002f1ca:	b002      	add	sp, #8
9002f1cc:	bd10      	pop	{r4, pc}

9002f1ce <xflowf>:
9002f1ce:	b130      	cbz	r0, 9002f1de <xflowf+0x10>
9002f1d0:	eef1 7a40 	vneg.f32	s15, s0
9002f1d4:	ee27 0a80 	vmul.f32	s0, s15, s0
9002f1d8:	2022      	movs	r0, #34	; 0x22
9002f1da:	f7ff bfed 	b.w	9002f1b8 <with_errnof>
9002f1de:	eef0 7a40 	vmov.f32	s15, s0
9002f1e2:	e7f7      	b.n	9002f1d4 <xflowf+0x6>

9002f1e4 <__math_uflowf>:
9002f1e4:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9002f1ec <__math_uflowf+0x8>
9002f1e8:	f7ff bff1 	b.w	9002f1ce <xflowf>
9002f1ec:	10000000 	.word	0x10000000

9002f1f0 <__math_may_uflowf>:
9002f1f0:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9002f1f8 <__math_may_uflowf+0x8>
9002f1f4:	f7ff bfeb 	b.w	9002f1ce <xflowf>
9002f1f8:	1a200000 	.word	0x1a200000

9002f1fc <__math_oflowf>:
9002f1fc:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9002f204 <__math_oflowf+0x8>
9002f200:	f7ff bfe5 	b.w	9002f1ce <xflowf>
9002f204:	70000000 	.word	0x70000000

9002f208 <__math_divzerof>:
9002f208:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
9002f20c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
9002f210:	2800      	cmp	r0, #0
9002f212:	fe40 7a27 	vseleq.f32	s15, s0, s15
9002f216:	ed9f 0a03 	vldr	s0, [pc, #12]	; 9002f224 <__math_divzerof+0x1c>
9002f21a:	2022      	movs	r0, #34	; 0x22
9002f21c:	ee87 0a80 	vdiv.f32	s0, s15, s0
9002f220:	f7ff bfca 	b.w	9002f1b8 <with_errnof>
9002f224:	00000000 	.word	0x00000000

9002f228 <__math_invalidf>:
9002f228:	eef0 7a40 	vmov.f32	s15, s0
9002f22c:	ee30 7a40 	vsub.f32	s14, s0, s0
9002f230:	eef4 7a67 	vcmp.f32	s15, s15
9002f234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f238:	ee87 0a07 	vdiv.f32	s0, s14, s14
9002f23c:	d602      	bvs.n	9002f244 <__math_invalidf+0x1c>
9002f23e:	2021      	movs	r0, #33	; 0x21
9002f240:	f7ff bfba 	b.w	9002f1b8 <with_errnof>
9002f244:	4770      	bx	lr

9002f246 <fabsf>:
9002f246:	ee10 3a10 	vmov	r3, s0
9002f24a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
9002f24e:	ee00 3a10 	vmov	s0, r3
9002f252:	4770      	bx	lr

9002f254 <checkint>:
9002f254:	f3c0 53c7 	ubfx	r3, r0, #23, #8
9002f258:	2b7e      	cmp	r3, #126	; 0x7e
9002f25a:	dd10      	ble.n	9002f27e <checkint+0x2a>
9002f25c:	2b96      	cmp	r3, #150	; 0x96
9002f25e:	dc0c      	bgt.n	9002f27a <checkint+0x26>
9002f260:	2201      	movs	r2, #1
9002f262:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
9002f266:	fa02 f303 	lsl.w	r3, r2, r3
9002f26a:	1e5a      	subs	r2, r3, #1
9002f26c:	4202      	tst	r2, r0
9002f26e:	d106      	bne.n	9002f27e <checkint+0x2a>
9002f270:	4203      	tst	r3, r0
9002f272:	bf0c      	ite	eq
9002f274:	2002      	moveq	r0, #2
9002f276:	2001      	movne	r0, #1
9002f278:	4770      	bx	lr
9002f27a:	2002      	movs	r0, #2
9002f27c:	4770      	bx	lr
9002f27e:	2000      	movs	r0, #0
9002f280:	4770      	bx	lr
9002f282:	0000      	movs	r0, r0
9002f284:	0000      	movs	r0, r0
	...

9002f288 <powf>:
9002f288:	b5f0      	push	{r4, r5, r6, r7, lr}
9002f28a:	ee10 1a10 	vmov	r1, s0
9002f28e:	ee10 6a90 	vmov	r6, s1
9002f292:	f5a1 0300 	sub.w	r3, r1, #8388608	; 0x800000
9002f296:	0072      	lsls	r2, r6, #1
9002f298:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
9002f29c:	b085      	sub	sp, #20
9002f29e:	f102 30ff 	add.w	r0, r2, #4294967295
9002f2a2:	f06f 7380 	mvn.w	r3, #16777216	; 0x1000000
9002f2a6:	d256      	bcs.n	9002f356 <powf+0xce>
9002f2a8:	4298      	cmp	r0, r3
9002f2aa:	d256      	bcs.n	9002f35a <powf+0xd2>
9002f2ac:	2000      	movs	r0, #0
9002f2ae:	f101 4240 	add.w	r2, r1, #3221225472	; 0xc0000000
9002f2b2:	4ea3      	ldr	r6, [pc, #652]	; (9002f540 <powf+0x2b8>)
9002f2b4:	eebf 6b00 	vmov.f64	d6, #240	; 0xbf800000 -1.0
9002f2b8:	f502 024d 	add.w	r2, r2, #13434880	; 0xcd0000
9002f2bc:	f3c2 47c3 	ubfx	r7, r2, #19, #4
9002f2c0:	0dd2      	lsrs	r2, r2, #23
9002f2c2:	eb06 1707 	add.w	r7, r6, r7, lsl #4
9002f2c6:	05d2      	lsls	r2, r2, #23
9002f2c8:	1a8b      	subs	r3, r1, r2
9002f2ca:	ed97 5b00 	vldr	d5, [r7]
9002f2ce:	ee07 3a90 	vmov	s15, r3
9002f2d2:	15d2      	asrs	r2, r2, #23
9002f2d4:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
9002f2d8:	eea5 6b07 	vfma.f64	d6, d5, d7
9002f2dc:	ed97 5b02 	vldr	d5, [r7, #8]
9002f2e0:	ee26 2b06 	vmul.f64	d2, d6, d6
9002f2e4:	ee22 1b02 	vmul.f64	d1, d2, d2
9002f2e8:	ee07 2a90 	vmov	s15, r2
9002f2ec:	ed96 4b40 	vldr	d4, [r6, #256]	; 0x100
9002f2f0:	eeb8 7be7 	vcvt.f64.s32	d7, s15
9002f2f4:	ee37 7b05 	vadd.f64	d7, d7, d5
9002f2f8:	ed96 5b42 	vldr	d5, [r6, #264]	; 0x108
9002f2fc:	ed96 3b44 	vldr	d3, [r6, #272]	; 0x110
9002f300:	eea6 5b04 	vfma.f64	d5, d6, d4
9002f304:	ed96 4b46 	vldr	d4, [r6, #280]	; 0x118
9002f308:	eea6 4b03 	vfma.f64	d4, d6, d3
9002f30c:	ed96 3b48 	vldr	d3, [r6, #288]	; 0x120
9002f310:	eeb7 0ae0 	vcvt.f64.f32	d0, s1
9002f314:	eea6 7b03 	vfma.f64	d7, d6, d3
9002f318:	eea2 7b04 	vfma.f64	d7, d2, d4
9002f31c:	eea5 7b01 	vfma.f64	d7, d5, d1
9002f320:	ee20 0b07 	vmul.f64	d0, d0, d7
9002f324:	ee10 1a90 	vmov	r1, s1
9002f328:	2300      	movs	r3, #0
9002f32a:	2700      	movs	r7, #0
9002f32c:	f3c1 32cf 	ubfx	r2, r1, #15, #16
9002f330:	f248 06be 	movw	r6, #32958	; 0x80be
9002f334:	429f      	cmp	r7, r3
9002f336:	bf08      	it	eq
9002f338:	4296      	cmpeq	r6, r2
9002f33a:	f080 80b1 	bcs.w	9002f4a0 <powf+0x218>
9002f33e:	ed9f 7b78 	vldr	d7, [pc, #480]	; 9002f520 <powf+0x298>
9002f342:	eeb4 0bc7 	vcmpe.f64	d0, d7
9002f346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f34a:	dd79      	ble.n	9002f440 <powf+0x1b8>
9002f34c:	b005      	add	sp, #20
9002f34e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f352:	f7ff bf53 	b.w	9002f1fc <__math_oflowf>
9002f356:	4298      	cmp	r0, r3
9002f358:	d32d      	bcc.n	9002f3b6 <powf+0x12e>
9002f35a:	b952      	cbnz	r2, 9002f372 <powf+0xea>
9002f35c:	f481 0380 	eor.w	r3, r1, #4194304	; 0x400000
9002f360:	005b      	lsls	r3, r3, #1
9002f362:	f513 0f00 	cmn.w	r3, #8388608	; 0x800000
9002f366:	f240 80cd 	bls.w	9002f504 <powf+0x27c>
9002f36a:	ee30 0a20 	vadd.f32	s0, s0, s1
9002f36e:	b005      	add	sp, #20
9002f370:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002f372:	f1b1 5f7e 	cmp.w	r1, #1065353216	; 0x3f800000
9002f376:	d105      	bne.n	9002f384 <powf+0xfc>
9002f378:	f486 0680 	eor.w	r6, r6, #4194304	; 0x400000
9002f37c:	0076      	lsls	r6, r6, #1
9002f37e:	f516 0f00 	cmn.w	r6, #8388608	; 0x800000
9002f382:	e7f0      	b.n	9002f366 <powf+0xde>
9002f384:	004b      	lsls	r3, r1, #1
9002f386:	f1b3 4f7f 	cmp.w	r3, #4278190080	; 0xff000000
9002f38a:	d8ee      	bhi.n	9002f36a <powf+0xe2>
9002f38c:	f1b2 4f7f 	cmp.w	r2, #4278190080	; 0xff000000
9002f390:	d1eb      	bne.n	9002f36a <powf+0xe2>
9002f392:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
9002f396:	f000 80b5 	beq.w	9002f504 <powf+0x27c>
9002f39a:	f1b3 4ffe 	cmp.w	r3, #2130706432	; 0x7f000000
9002f39e:	ea6f 0606 	mvn.w	r6, r6
9002f3a2:	bf34      	ite	cc
9002f3a4:	2300      	movcc	r3, #0
9002f3a6:	2301      	movcs	r3, #1
9002f3a8:	0ff6      	lsrs	r6, r6, #31
9002f3aa:	42b3      	cmp	r3, r6
9002f3ac:	f040 80ad 	bne.w	9002f50a <powf+0x282>
9002f3b0:	ee20 0aa0 	vmul.f32	s0, s1, s1
9002f3b4:	e7db      	b.n	9002f36e <powf+0xe6>
9002f3b6:	004f      	lsls	r7, r1, #1
9002f3b8:	1e7a      	subs	r2, r7, #1
9002f3ba:	429a      	cmp	r2, r3
9002f3bc:	d31c      	bcc.n	9002f3f8 <powf+0x170>
9002f3be:	2900      	cmp	r1, #0
9002f3c0:	ee20 0a00 	vmul.f32	s0, s0, s0
9002f3c4:	da0f      	bge.n	9002f3e6 <powf+0x15e>
9002f3c6:	ee10 0a90 	vmov	r0, s1
9002f3ca:	f7ff ff43 	bl	9002f254 <checkint>
9002f3ce:	2801      	cmp	r0, #1
9002f3d0:	d109      	bne.n	9002f3e6 <powf+0x15e>
9002f3d2:	eeb1 0a40 	vneg.f32	s0, s0
9002f3d6:	b947      	cbnz	r7, 9002f3ea <powf+0x162>
9002f3d8:	2e00      	cmp	r6, #0
9002f3da:	dac8      	bge.n	9002f36e <powf+0xe6>
9002f3dc:	b005      	add	sp, #20
9002f3de:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f3e2:	f7ff bf11 	b.w	9002f208 <__math_divzerof>
9002f3e6:	2000      	movs	r0, #0
9002f3e8:	e7f5      	b.n	9002f3d6 <powf+0x14e>
9002f3ea:	2e00      	cmp	r6, #0
9002f3ec:	dabf      	bge.n	9002f36e <powf+0xe6>
9002f3ee:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9002f3f2:	ee87 0a80 	vdiv.f32	s0, s15, s0
9002f3f6:	e7ba      	b.n	9002f36e <powf+0xe6>
9002f3f8:	2900      	cmp	r1, #0
9002f3fa:	da1f      	bge.n	9002f43c <powf+0x1b4>
9002f3fc:	ee10 0a90 	vmov	r0, s1
9002f400:	f7ff ff28 	bl	9002f254 <checkint>
9002f404:	b920      	cbnz	r0, 9002f410 <powf+0x188>
9002f406:	b005      	add	sp, #20
9002f408:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f40c:	f7ff bf0c 	b.w	9002f228 <__math_invalidf>
9002f410:	2801      	cmp	r0, #1
9002f412:	bf14      	ite	ne
9002f414:	2000      	movne	r0, #0
9002f416:	f44f 3080 	moveq.w	r0, #65536	; 0x10000
9002f41a:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9002f41e:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9002f422:	f4bf af44 	bcs.w	9002f2ae <powf+0x26>
9002f426:	eddf 7a47 	vldr	s15, [pc, #284]	; 9002f544 <powf+0x2bc>
9002f42a:	ee20 0a27 	vmul.f32	s0, s0, s15
9002f42e:	ee10 3a10 	vmov	r3, s0
9002f432:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
9002f436:	f1a3 6138 	sub.w	r1, r3, #192937984	; 0xb800000
9002f43a:	e738      	b.n	9002f2ae <powf+0x26>
9002f43c:	2000      	movs	r0, #0
9002f43e:	e7ee      	b.n	9002f41e <powf+0x196>
9002f440:	ed9f 7b39 	vldr	d7, [pc, #228]	; 9002f528 <powf+0x2a0>
9002f444:	eeb4 0bc7 	vcmpe.f64	d0, d7
9002f448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f44c:	dd10      	ble.n	9002f470 <powf+0x1e8>
9002f44e:	f04f 534c 	mov.w	r3, #855638016	; 0x33000000
9002f452:	2800      	cmp	r0, #0
9002f454:	d15c      	bne.n	9002f510 <powf+0x288>
9002f456:	9302      	str	r3, [sp, #8]
9002f458:	eddd 7a02 	vldr	s15, [sp, #8]
9002f45c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002f460:	ee77 7a87 	vadd.f32	s15, s15, s14
9002f464:	eef4 7a47 	vcmp.f32	s15, s14
9002f468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f46c:	f47f af6e 	bne.w	9002f34c <powf+0xc4>
9002f470:	ed9f 7b2f 	vldr	d7, [pc, #188]	; 9002f530 <powf+0x2a8>
9002f474:	eeb4 0bc7 	vcmpe.f64	d0, d7
9002f478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f47c:	d804      	bhi.n	9002f488 <powf+0x200>
9002f47e:	b005      	add	sp, #20
9002f480:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f484:	f7ff beae 	b.w	9002f1e4 <__math_uflowf>
9002f488:	ed9f 7b2b 	vldr	d7, [pc, #172]	; 9002f538 <powf+0x2b0>
9002f48c:	eeb4 0bc7 	vcmpe.f64	d0, d7
9002f490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f494:	d504      	bpl.n	9002f4a0 <powf+0x218>
9002f496:	b005      	add	sp, #20
9002f498:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f49c:	f7ff bea8 	b.w	9002f1f0 <__math_may_uflowf>
9002f4a0:	4b29      	ldr	r3, [pc, #164]	; (9002f548 <powf+0x2c0>)
9002f4a2:	ed93 7b40 	vldr	d7, [r3, #256]	; 0x100
9002f4a6:	ee30 6b07 	vadd.f64	d6, d0, d7
9002f4aa:	ed8d 6b00 	vstr	d6, [sp]
9002f4ae:	ee36 7b47 	vsub.f64	d7, d6, d7
9002f4b2:	ee30 7b47 	vsub.f64	d7, d0, d7
9002f4b6:	e9dd 6700 	ldrd	r6, r7, [sp]
9002f4ba:	eeb7 0b00 	vmov.f64	d0, #112	; 0x3f800000  1.0
9002f4be:	f006 011f 	and.w	r1, r6, #31
9002f4c2:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
9002f4c6:	e9d1 ce00 	ldrd	ip, lr, [r1]
9002f4ca:	ed93 5b42 	vldr	d5, [r3, #264]	; 0x108
9002f4ce:	ed93 6b44 	vldr	d6, [r3, #272]	; 0x110
9002f4d2:	ed93 4b46 	vldr	d4, [r3, #280]	; 0x118
9002f4d6:	eea7 6b05 	vfma.f64	d6, d7, d5
9002f4da:	ee27 5b07 	vmul.f64	d5, d7, d7
9002f4de:	1836      	adds	r6, r6, r0
9002f4e0:	2300      	movs	r3, #0
9002f4e2:	eb13 040c 	adds.w	r4, r3, ip
9002f4e6:	ea4f 31c6 	mov.w	r1, r6, lsl #15
9002f4ea:	eb41 050e 	adc.w	r5, r1, lr
9002f4ee:	eea7 0b04 	vfma.f64	d0, d7, d4
9002f4f2:	ec45 4b17 	vmov	d7, r4, r5
9002f4f6:	eea6 0b05 	vfma.f64	d0, d6, d5
9002f4fa:	ee20 0b07 	vmul.f64	d0, d0, d7
9002f4fe:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002f502:	e734      	b.n	9002f36e <powf+0xe6>
9002f504:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
9002f508:	e731      	b.n	9002f36e <powf+0xe6>
9002f50a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 9002f54c <powf+0x2c4>
9002f50e:	e72e      	b.n	9002f36e <powf+0xe6>
9002f510:	9303      	str	r3, [sp, #12]
9002f512:	eddd 7a03 	vldr	s15, [sp, #12]
9002f516:	eebf 7a00 	vmov.f32	s14, #240	; 0xbf800000 -1.0
9002f51a:	ee77 7a67 	vsub.f32	s15, s14, s15
9002f51e:	e7a1      	b.n	9002f464 <powf+0x1dc>
9002f520:	ffd1d571 	.word	0xffd1d571
9002f524:	405fffff 	.word	0x405fffff
9002f528:	ffa3aae2 	.word	0xffa3aae2
9002f52c:	405fffff 	.word	0x405fffff
9002f530:	00000000 	.word	0x00000000
9002f534:	c062c000 	.word	0xc062c000
9002f538:	00000000 	.word	0x00000000
9002f53c:	c062a000 	.word	0xc062a000
9002f540:	90035418 	.word	0x90035418
9002f544:	4b000000 	.word	0x4b000000
9002f548:	900352d0 	.word	0x900352d0
9002f54c:	00000000 	.word	0x00000000

9002f550 <sinf_poly>:
9002f550:	07cb      	lsls	r3, r1, #31
9002f552:	d412      	bmi.n	9002f57a <sinf_poly+0x2a>
9002f554:	ee21 6b00 	vmul.f64	d6, d1, d0
9002f558:	ed90 5b1a 	vldr	d5, [r0, #104]	; 0x68
9002f55c:	ed90 7b18 	vldr	d7, [r0, #96]	; 0x60
9002f560:	eea5 7b01 	vfma.f64	d7, d5, d1
9002f564:	ed90 5b16 	vldr	d5, [r0, #88]	; 0x58
9002f568:	ee21 1b06 	vmul.f64	d1, d1, d6
9002f56c:	eea5 0b06 	vfma.f64	d0, d5, d6
9002f570:	eea7 0b01 	vfma.f64	d0, d7, d1
9002f574:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002f578:	4770      	bx	lr
9002f57a:	ed90 5b14 	vldr	d5, [r0, #80]	; 0x50
9002f57e:	ee21 6b01 	vmul.f64	d6, d1, d1
9002f582:	ed90 7b12 	vldr	d7, [r0, #72]	; 0x48
9002f586:	ed90 0b0c 	vldr	d0, [r0, #48]	; 0x30
9002f58a:	eea1 7b05 	vfma.f64	d7, d1, d5
9002f58e:	ed90 5b0e 	vldr	d5, [r0, #56]	; 0x38
9002f592:	eea1 0b05 	vfma.f64	d0, d1, d5
9002f596:	ed90 5b10 	vldr	d5, [r0, #64]	; 0x40
9002f59a:	ee21 1b06 	vmul.f64	d1, d1, d6
9002f59e:	eea6 0b05 	vfma.f64	d0, d6, d5
9002f5a2:	e7e5      	b.n	9002f570 <sinf_poly+0x20>
9002f5a4:	0000      	movs	r0, r0
	...

9002f5a8 <sinf>:
9002f5a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002f5aa:	ee10 4a10 	vmov	r4, s0
9002f5ae:	f3c4 530a 	ubfx	r3, r4, #20, #11
9002f5b2:	f5b3 7f7d 	cmp.w	r3, #1012	; 0x3f4
9002f5b6:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
9002f5ba:	eef0 7a40 	vmov.f32	s15, s0
9002f5be:	ea4f 5214 	mov.w	r2, r4, lsr #20
9002f5c2:	d218      	bcs.n	9002f5f6 <sinf+0x4e>
9002f5c4:	ee26 1b06 	vmul.f64	d1, d6, d6
9002f5c8:	f5b3 7f66 	cmp.w	r3, #920	; 0x398
9002f5cc:	d20a      	bcs.n	9002f5e4 <sinf+0x3c>
9002f5ce:	f412 6fff 	tst.w	r2, #2040	; 0x7f8
9002f5d2:	d103      	bne.n	9002f5dc <sinf+0x34>
9002f5d4:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
9002f5d8:	ed8d 1a01 	vstr	s2, [sp, #4]
9002f5dc:	eeb0 0a67 	vmov.f32	s0, s15
9002f5e0:	b003      	add	sp, #12
9002f5e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002f5e4:	483e      	ldr	r0, [pc, #248]	; (9002f6e0 <sinf+0x138>)
9002f5e6:	eeb0 0b46 	vmov.f64	d0, d6
9002f5ea:	2100      	movs	r1, #0
9002f5ec:	b003      	add	sp, #12
9002f5ee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f5f2:	f7ff bfad 	b.w	9002f550 <sinf_poly>
9002f5f6:	f240 422e 	movw	r2, #1070	; 0x42e
9002f5fa:	4293      	cmp	r3, r2
9002f5fc:	d824      	bhi.n	9002f648 <sinf+0xa0>
9002f5fe:	4b38      	ldr	r3, [pc, #224]	; (9002f6e0 <sinf+0x138>)
9002f600:	ed93 7b08 	vldr	d7, [r3, #32]
9002f604:	ee26 7b07 	vmul.f64	d7, d6, d7
9002f608:	eefd 7bc7 	vcvt.s32.f64	s15, d7
9002f60c:	f103 0070 	add.w	r0, r3, #112	; 0x70
9002f610:	ee17 1a90 	vmov	r1, s15
9002f614:	f501 0100 	add.w	r1, r1, #8388608	; 0x800000
9002f618:	1609      	asrs	r1, r1, #24
9002f61a:	ee07 1a90 	vmov	s15, r1
9002f61e:	f001 0203 	and.w	r2, r1, #3
9002f622:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002f626:	eeb8 5be7 	vcvt.f64.s32	d5, s15
9002f62a:	ed92 0b00 	vldr	d0, [r2]
9002f62e:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
9002f632:	f011 0f02 	tst.w	r1, #2
9002f636:	eea5 6b47 	vfms.f64	d6, d5, d7
9002f63a:	bf08      	it	eq
9002f63c:	4618      	moveq	r0, r3
9002f63e:	ee26 1b06 	vmul.f64	d1, d6, d6
9002f642:	ee20 0b06 	vmul.f64	d0, d0, d6
9002f646:	e7d1      	b.n	9002f5ec <sinf+0x44>
9002f648:	f5b3 6fff 	cmp.w	r3, #2040	; 0x7f8
9002f64c:	d23d      	bcs.n	9002f6ca <sinf+0x122>
9002f64e:	4b25      	ldr	r3, [pc, #148]	; (9002f6e4 <sinf+0x13c>)
9002f650:	f3c4 6283 	ubfx	r2, r4, #26, #4
9002f654:	eb03 0082 	add.w	r0, r3, r2, lsl #2
9002f658:	f3c4 0116 	ubfx	r1, r4, #0, #23
9002f65c:	6a06      	ldr	r6, [r0, #32]
9002f65e:	6900      	ldr	r0, [r0, #16]
9002f660:	f3c4 55c2 	ubfx	r5, r4, #23, #3
9002f664:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
9002f668:	40a9      	lsls	r1, r5
9002f66a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9002f66e:	fba1 6706 	umull	r6, r7, r1, r6
9002f672:	fb05 f301 	mul.w	r3, r5, r1
9002f676:	463a      	mov	r2, r7
9002f678:	fbe0 2301 	umlal	r2, r3, r0, r1
9002f67c:	1c11      	adds	r1, r2, #0
9002f67e:	f143 5600 	adc.w	r6, r3, #536870912	; 0x20000000
9002f682:	2000      	movs	r0, #0
9002f684:	1a10      	subs	r0, r2, r0
9002f686:	f006 4140 	and.w	r1, r6, #3221225472	; 0xc0000000
9002f68a:	eb63 0101 	sbc.w	r1, r3, r1
9002f68e:	f7f2 fba5 	bl	90021ddc <__aeabi_l2d>
9002f692:	0fb5      	lsrs	r5, r6, #30
9002f694:	4a12      	ldr	r2, [pc, #72]	; (9002f6e0 <sinf+0x138>)
9002f696:	eb05 73d4 	add.w	r3, r5, r4, lsr #31
9002f69a:	ed9f 0b0f 	vldr	d0, [pc, #60]	; 9002f6d8 <sinf+0x130>
9002f69e:	ec41 0b17 	vmov	d7, r0, r1
9002f6a2:	f003 0103 	and.w	r1, r3, #3
9002f6a6:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
9002f6aa:	ee27 0b00 	vmul.f64	d0, d7, d0
9002f6ae:	ed91 7b00 	vldr	d7, [r1]
9002f6b2:	ee20 1b00 	vmul.f64	d1, d0, d0
9002f6b6:	f013 0f02 	tst.w	r3, #2
9002f6ba:	f102 0070 	add.w	r0, r2, #112	; 0x70
9002f6be:	4629      	mov	r1, r5
9002f6c0:	bf08      	it	eq
9002f6c2:	4610      	moveq	r0, r2
9002f6c4:	ee27 0b00 	vmul.f64	d0, d7, d0
9002f6c8:	e790      	b.n	9002f5ec <sinf+0x44>
9002f6ca:	b003      	add	sp, #12
9002f6cc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9002f6d0:	f7ff bdaa 	b.w	9002f228 <__math_invalidf>
9002f6d4:	f3af 8000 	nop.w
9002f6d8:	54442d18 	.word	0x54442d18
9002f6dc:	3c1921fb 	.word	0x3c1921fb
9002f6e0:	900355a0 	.word	0x900355a0
9002f6e4:	90035540 	.word	0x90035540

9002f6e8 <acosf>:
9002f6e8:	b508      	push	{r3, lr}
9002f6ea:	ed2d 8b02 	vpush	{d8}
9002f6ee:	eeb0 8a40 	vmov.f32	s16, s0
9002f6f2:	f000 f851 	bl	9002f798 <__ieee754_acosf>
9002f6f6:	4b13      	ldr	r3, [pc, #76]	; (9002f744 <acosf+0x5c>)
9002f6f8:	f993 3000 	ldrsb.w	r3, [r3]
9002f6fc:	3301      	adds	r3, #1
9002f6fe:	eef0 8a40 	vmov.f32	s17, s0
9002f702:	d01a      	beq.n	9002f73a <acosf+0x52>
9002f704:	eeb4 8a48 	vcmp.f32	s16, s16
9002f708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f70c:	d615      	bvs.n	9002f73a <acosf+0x52>
9002f70e:	eeb0 0a48 	vmov.f32	s0, s16
9002f712:	f7ff fd98 	bl	9002f246 <fabsf>
9002f716:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9002f71a:	eeb4 0ae7 	vcmpe.f32	s0, s15
9002f71e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f722:	dd0a      	ble.n	9002f73a <acosf+0x52>
9002f724:	f000 f93c 	bl	9002f9a0 <__errno>
9002f728:	ecbd 8b02 	vpop	{d8}
9002f72c:	2321      	movs	r3, #33	; 0x21
9002f72e:	6003      	str	r3, [r0, #0]
9002f730:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
9002f734:	4804      	ldr	r0, [pc, #16]	; (9002f748 <acosf+0x60>)
9002f736:	f000 b92d 	b.w	9002f994 <nanf>
9002f73a:	eeb0 0a68 	vmov.f32	s0, s17
9002f73e:	ecbd 8b02 	vpop	{d8}
9002f742:	bd08      	pop	{r3, pc}
9002f744:	200000a8 	.word	0x200000a8
9002f748:	9003505a 	.word	0x9003505a

9002f74c <sqrtf>:
9002f74c:	b508      	push	{r3, lr}
9002f74e:	ed2d 8b02 	vpush	{d8}
9002f752:	eeb0 8a40 	vmov.f32	s16, s0
9002f756:	f000 f919 	bl	9002f98c <__ieee754_sqrtf>
9002f75a:	4b0d      	ldr	r3, [pc, #52]	; (9002f790 <sqrtf+0x44>)
9002f75c:	f993 3000 	ldrsb.w	r3, [r3]
9002f760:	3301      	adds	r3, #1
9002f762:	d011      	beq.n	9002f788 <sqrtf+0x3c>
9002f764:	eeb4 8a48 	vcmp.f32	s16, s16
9002f768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f76c:	d60c      	bvs.n	9002f788 <sqrtf+0x3c>
9002f76e:	eddf 8a09 	vldr	s17, [pc, #36]	; 9002f794 <sqrtf+0x48>
9002f772:	eeb4 8ae8 	vcmpe.f32	s16, s17
9002f776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9002f77a:	d505      	bpl.n	9002f788 <sqrtf+0x3c>
9002f77c:	f000 f910 	bl	9002f9a0 <__errno>
9002f780:	ee88 0aa8 	vdiv.f32	s0, s17, s17
9002f784:	2321      	movs	r3, #33	; 0x21
9002f786:	6003      	str	r3, [r0, #0]
9002f788:	ecbd 8b02 	vpop	{d8}
9002f78c:	bd08      	pop	{r3, pc}
9002f78e:	bf00      	nop
9002f790:	200000a8 	.word	0x200000a8
9002f794:	00000000 	.word	0x00000000

9002f798 <__ieee754_acosf>:
9002f798:	b508      	push	{r3, lr}
9002f79a:	ee10 3a10 	vmov	r3, s0
9002f79e:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
9002f7a2:	f1b2 5f7e 	cmp.w	r2, #1065353216	; 0x3f800000
9002f7a6:	ed2d 8b0c 	vpush	{d8-d13}
9002f7aa:	d109      	bne.n	9002f7c0 <__ieee754_acosf+0x28>
9002f7ac:	ed9f 0a66 	vldr	s0, [pc, #408]	; 9002f948 <__ieee754_acosf+0x1b0>
9002f7b0:	ed9f 8a66 	vldr	s16, [pc, #408]	; 9002f94c <__ieee754_acosf+0x1b4>
9002f7b4:	2b00      	cmp	r3, #0
9002f7b6:	fe30 0a08 	vselgt.f32	s0, s0, s16
9002f7ba:	ecbd 8b0c 	vpop	{d8-d13}
9002f7be:	bd08      	pop	{r3, pc}
9002f7c0:	dd04      	ble.n	9002f7cc <__ieee754_acosf+0x34>
9002f7c2:	ee30 8a40 	vsub.f32	s16, s0, s0
9002f7c6:	ee88 0a08 	vdiv.f32	s0, s16, s16
9002f7ca:	e7f6      	b.n	9002f7ba <__ieee754_acosf+0x22>
9002f7cc:	f1b2 5f7c 	cmp.w	r2, #1056964608	; 0x3f000000
9002f7d0:	da3e      	bge.n	9002f850 <__ieee754_acosf+0xb8>
9002f7d2:	f1b2 5f0c 	cmp.w	r2, #587202560	; 0x23000000
9002f7d6:	f340 80b3 	ble.w	9002f940 <__ieee754_acosf+0x1a8>
9002f7da:	ee60 7a00 	vmul.f32	s15, s0, s0
9002f7de:	eddf 6a5c 	vldr	s13, [pc, #368]	; 9002f950 <__ieee754_acosf+0x1b8>
9002f7e2:	ed9f 7a5c 	vldr	s14, [pc, #368]	; 9002f954 <__ieee754_acosf+0x1bc>
9002f7e6:	ed9f 6a5c 	vldr	s12, [pc, #368]	; 9002f958 <__ieee754_acosf+0x1c0>
9002f7ea:	ed9f 8a5c 	vldr	s16, [pc, #368]	; 9002f95c <__ieee754_acosf+0x1c4>
9002f7ee:	eea7 7aa6 	vfma.f32	s14, s15, s13
9002f7f2:	eddf 6a5b 	vldr	s13, [pc, #364]	; 9002f960 <__ieee754_acosf+0x1c8>
9002f7f6:	eee7 6a27 	vfma.f32	s13, s14, s15
9002f7fa:	ed9f 7a5a 	vldr	s14, [pc, #360]	; 9002f964 <__ieee754_acosf+0x1cc>
9002f7fe:	eea6 7aa7 	vfma.f32	s14, s13, s15
9002f802:	eddf 6a59 	vldr	s13, [pc, #356]	; 9002f968 <__ieee754_acosf+0x1d0>
9002f806:	eee7 6a27 	vfma.f32	s13, s14, s15
9002f80a:	ed9f 7a58 	vldr	s14, [pc, #352]	; 9002f96c <__ieee754_acosf+0x1d4>
9002f80e:	eea6 7aa7 	vfma.f32	s14, s13, s15
9002f812:	eddf 6a57 	vldr	s13, [pc, #348]	; 9002f970 <__ieee754_acosf+0x1d8>
9002f816:	eea7 6aa6 	vfma.f32	s12, s15, s13
9002f81a:	eddf 6a56 	vldr	s13, [pc, #344]	; 9002f974 <__ieee754_acosf+0x1dc>
9002f81e:	eee6 6a27 	vfma.f32	s13, s12, s15
9002f822:	ed9f 6a55 	vldr	s12, [pc, #340]	; 9002f978 <__ieee754_acosf+0x1e0>
9002f826:	eea6 6aa7 	vfma.f32	s12, s13, s15
9002f82a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9002f82e:	eee6 6a27 	vfma.f32	s13, s12, s15
9002f832:	ee27 7a27 	vmul.f32	s14, s14, s15
9002f836:	eef0 7a66 	vmov.f32	s15, s13
9002f83a:	eec7 6a27 	vdiv.f32	s13, s14, s15
9002f83e:	eddf 7a4f 	vldr	s15, [pc, #316]	; 9002f97c <__ieee754_acosf+0x1e4>
9002f842:	eea0 8a66 	vfms.f32	s16, s0, s13
9002f846:	ee30 0a48 	vsub.f32	s0, s0, s16
9002f84a:	ee37 0ac0 	vsub.f32	s0, s15, s0
9002f84e:	e7b4      	b.n	9002f7ba <__ieee754_acosf+0x22>
9002f850:	2b00      	cmp	r3, #0
9002f852:	eddf da3f 	vldr	s27, [pc, #252]	; 9002f950 <__ieee754_acosf+0x1b8>
9002f856:	eddf ca3f 	vldr	s25, [pc, #252]	; 9002f954 <__ieee754_acosf+0x1bc>
9002f85a:	ed9f ca41 	vldr	s24, [pc, #260]	; 9002f960 <__ieee754_acosf+0x1c8>
9002f85e:	eddf ba41 	vldr	s23, [pc, #260]	; 9002f964 <__ieee754_acosf+0x1cc>
9002f862:	ed9f ba41 	vldr	s22, [pc, #260]	; 9002f968 <__ieee754_acosf+0x1d0>
9002f866:	eddf 8a41 	vldr	s17, [pc, #260]	; 9002f96c <__ieee754_acosf+0x1d4>
9002f86a:	ed9f da41 	vldr	s26, [pc, #260]	; 9002f970 <__ieee754_acosf+0x1d8>
9002f86e:	eddf aa3a 	vldr	s21, [pc, #232]	; 9002f958 <__ieee754_acosf+0x1c0>
9002f872:	ed9f aa40 	vldr	s20, [pc, #256]	; 9002f974 <__ieee754_acosf+0x1dc>
9002f876:	eddf 9a40 	vldr	s19, [pc, #256]	; 9002f978 <__ieee754_acosf+0x1e0>
9002f87a:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
9002f87e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
9002f882:	da28      	bge.n	9002f8d6 <__ieee754_acosf+0x13e>
9002f884:	ee30 0a09 	vadd.f32	s0, s0, s18
9002f888:	ee20 0a27 	vmul.f32	s0, s0, s15
9002f88c:	eee0 ca2d 	vfma.f32	s25, s0, s27
9002f890:	eee0 aa0d 	vfma.f32	s21, s0, s26
9002f894:	eeac ca80 	vfma.f32	s24, s25, s0
9002f898:	eeaa aa80 	vfma.f32	s20, s21, s0
9002f89c:	eeec ba00 	vfma.f32	s23, s24, s0
9002f8a0:	eeea 9a00 	vfma.f32	s19, s20, s0
9002f8a4:	eeab ba80 	vfma.f32	s22, s23, s0
9002f8a8:	eea9 9a80 	vfma.f32	s18, s19, s0
9002f8ac:	eeeb 8a00 	vfma.f32	s17, s22, s0
9002f8b0:	ee68 8a80 	vmul.f32	s17, s17, s0
9002f8b4:	f000 f86a 	bl	9002f98c <__ieee754_sqrtf>
9002f8b8:	ee88 7a89 	vdiv.f32	s14, s17, s18
9002f8bc:	eddf 7a30 	vldr	s15, [pc, #192]	; 9002f980 <__ieee754_acosf+0x1e8>
9002f8c0:	eee0 7a07 	vfma.f32	s15, s0, s14
9002f8c4:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
9002f8c8:	ee77 7a80 	vadd.f32	s15, s15, s0
9002f8cc:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 9002f984 <__ieee754_acosf+0x1ec>
9002f8d0:	eea7 0ac7 	vfms.f32	s0, s15, s14
9002f8d4:	e771      	b.n	9002f7ba <__ieee754_acosf+0x22>
9002f8d6:	ee39 8a40 	vsub.f32	s16, s18, s0
9002f8da:	ee28 8a27 	vmul.f32	s16, s16, s15
9002f8de:	eeb0 0a48 	vmov.f32	s0, s16
9002f8e2:	f000 f853 	bl	9002f98c <__ieee754_sqrtf>
9002f8e6:	eee8 ca2d 	vfma.f32	s25, s16, s27
9002f8ea:	eee8 aa0d 	vfma.f32	s21, s16, s26
9002f8ee:	eeac ca88 	vfma.f32	s24, s25, s16
9002f8f2:	eeaa aa88 	vfma.f32	s20, s21, s16
9002f8f6:	eeec ba08 	vfma.f32	s23, s24, s16
9002f8fa:	ee10 3a10 	vmov	r3, s0
9002f8fe:	eeab ba88 	vfma.f32	s22, s23, s16
9002f902:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
9002f906:	f023 030f 	bic.w	r3, r3, #15
9002f90a:	eeea 9a08 	vfma.f32	s19, s20, s16
9002f90e:	ee07 3a90 	vmov	s15, r3
9002f912:	eeeb 8a08 	vfma.f32	s17, s22, s16
9002f916:	eeb0 6a48 	vmov.f32	s12, s16
9002f91a:	eea7 6ae7 	vfms.f32	s12, s15, s15
9002f91e:	eea9 9a88 	vfma.f32	s18, s19, s16
9002f922:	ee70 6a27 	vadd.f32	s13, s0, s15
9002f926:	ee68 8a88 	vmul.f32	s17, s17, s16
9002f92a:	ee86 7a26 	vdiv.f32	s14, s12, s13
9002f92e:	eec8 6a89 	vdiv.f32	s13, s17, s18
9002f932:	eea0 7a26 	vfma.f32	s14, s0, s13
9002f936:	ee37 0a87 	vadd.f32	s0, s15, s14
9002f93a:	ee30 0a00 	vadd.f32	s0, s0, s0
9002f93e:	e73c      	b.n	9002f7ba <__ieee754_acosf+0x22>
9002f940:	ed9f 0a11 	vldr	s0, [pc, #68]	; 9002f988 <__ieee754_acosf+0x1f0>
9002f944:	e739      	b.n	9002f7ba <__ieee754_acosf+0x22>
9002f946:	bf00      	nop
9002f948:	00000000 	.word	0x00000000
9002f94c:	40490fdb 	.word	0x40490fdb
9002f950:	3811ef08 	.word	0x3811ef08
9002f954:	3a4f7f04 	.word	0x3a4f7f04
9002f958:	bf303361 	.word	0xbf303361
9002f95c:	33a22168 	.word	0x33a22168
9002f960:	bd241146 	.word	0xbd241146
9002f964:	3e4e0aa8 	.word	0x3e4e0aa8
9002f968:	bea6b090 	.word	0xbea6b090
9002f96c:	3e2aaaab 	.word	0x3e2aaaab
9002f970:	3d9dc62e 	.word	0x3d9dc62e
9002f974:	4001572d 	.word	0x4001572d
9002f978:	c019d139 	.word	0xc019d139
9002f97c:	3fc90fda 	.word	0x3fc90fda
9002f980:	b3a22168 	.word	0xb3a22168
9002f984:	40490fda 	.word	0x40490fda
9002f988:	3fc90fdb 	.word	0x3fc90fdb

9002f98c <__ieee754_sqrtf>:
9002f98c:	eeb1 0ac0 	vsqrt.f32	s0, s0
9002f990:	4770      	bx	lr
	...

9002f994 <nanf>:
9002f994:	ed9f 0a01 	vldr	s0, [pc, #4]	; 9002f99c <nanf+0x8>
9002f998:	4770      	bx	lr
9002f99a:	bf00      	nop
9002f99c:	7fc00000 	.word	0x7fc00000

9002f9a0 <__errno>:
9002f9a0:	4b01      	ldr	r3, [pc, #4]	; (9002f9a8 <__errno+0x8>)
9002f9a2:	6818      	ldr	r0, [r3, #0]
9002f9a4:	4770      	bx	lr
9002f9a6:	bf00      	nop
9002f9a8:	20000044 	.word	0x20000044

9002f9ac <_close>:
9002f9ac:	4b02      	ldr	r3, [pc, #8]	; (9002f9b8 <_close+0xc>)
9002f9ae:	2258      	movs	r2, #88	; 0x58
9002f9b0:	601a      	str	r2, [r3, #0]
9002f9b2:	f04f 30ff 	mov.w	r0, #4294967295
9002f9b6:	4770      	bx	lr
9002f9b8:	20003a4c 	.word	0x20003a4c

9002f9bc <_fstat>:
9002f9bc:	4b02      	ldr	r3, [pc, #8]	; (9002f9c8 <_fstat+0xc>)
9002f9be:	2258      	movs	r2, #88	; 0x58
9002f9c0:	601a      	str	r2, [r3, #0]
9002f9c2:	f04f 30ff 	mov.w	r0, #4294967295
9002f9c6:	4770      	bx	lr
9002f9c8:	20003a4c 	.word	0x20003a4c

9002f9cc <_getpid>:
9002f9cc:	4b02      	ldr	r3, [pc, #8]	; (9002f9d8 <_getpid+0xc>)
9002f9ce:	2258      	movs	r2, #88	; 0x58
9002f9d0:	601a      	str	r2, [r3, #0]
9002f9d2:	f04f 30ff 	mov.w	r0, #4294967295
9002f9d6:	4770      	bx	lr
9002f9d8:	20003a4c 	.word	0x20003a4c

9002f9dc <_isatty>:
9002f9dc:	4b02      	ldr	r3, [pc, #8]	; (9002f9e8 <_isatty+0xc>)
9002f9de:	2258      	movs	r2, #88	; 0x58
9002f9e0:	601a      	str	r2, [r3, #0]
9002f9e2:	2000      	movs	r0, #0
9002f9e4:	4770      	bx	lr
9002f9e6:	bf00      	nop
9002f9e8:	20003a4c 	.word	0x20003a4c

9002f9ec <_kill>:
9002f9ec:	4b02      	ldr	r3, [pc, #8]	; (9002f9f8 <_kill+0xc>)
9002f9ee:	2258      	movs	r2, #88	; 0x58
9002f9f0:	601a      	str	r2, [r3, #0]
9002f9f2:	f04f 30ff 	mov.w	r0, #4294967295
9002f9f6:	4770      	bx	lr
9002f9f8:	20003a4c 	.word	0x20003a4c

9002f9fc <_lseek>:
9002f9fc:	4b02      	ldr	r3, [pc, #8]	; (9002fa08 <_lseek+0xc>)
9002f9fe:	2258      	movs	r2, #88	; 0x58
9002fa00:	601a      	str	r2, [r3, #0]
9002fa02:	f04f 30ff 	mov.w	r0, #4294967295
9002fa06:	4770      	bx	lr
9002fa08:	20003a4c 	.word	0x20003a4c

9002fa0c <_read>:
9002fa0c:	4b02      	ldr	r3, [pc, #8]	; (9002fa18 <_read+0xc>)
9002fa0e:	2258      	movs	r2, #88	; 0x58
9002fa10:	601a      	str	r2, [r3, #0]
9002fa12:	f04f 30ff 	mov.w	r0, #4294967295
9002fa16:	4770      	bx	lr
9002fa18:	20003a4c 	.word	0x20003a4c

9002fa1c <_sbrk>:
9002fa1c:	4b04      	ldr	r3, [pc, #16]	; (9002fa30 <_sbrk+0x14>)
9002fa1e:	6819      	ldr	r1, [r3, #0]
9002fa20:	4602      	mov	r2, r0
9002fa22:	b909      	cbnz	r1, 9002fa28 <_sbrk+0xc>
9002fa24:	4903      	ldr	r1, [pc, #12]	; (9002fa34 <_sbrk+0x18>)
9002fa26:	6019      	str	r1, [r3, #0]
9002fa28:	6818      	ldr	r0, [r3, #0]
9002fa2a:	4402      	add	r2, r0
9002fa2c:	601a      	str	r2, [r3, #0]
9002fa2e:	4770      	bx	lr
9002fa30:	2000387c 	.word	0x2000387c
9002fa34:	20003a50 	.word	0x20003a50

9002fa38 <_write>:
9002fa38:	4b02      	ldr	r3, [pc, #8]	; (9002fa44 <_write+0xc>)
9002fa3a:	2258      	movs	r2, #88	; 0x58
9002fa3c:	601a      	str	r2, [r3, #0]
9002fa3e:	f04f 30ff 	mov.w	r0, #4294967295
9002fa42:	4770      	bx	lr
9002fa44:	20003a4c 	.word	0x20003a4c

9002fa48 <_exit>:
9002fa48:	e7fe      	b.n	9002fa48 <_exit>
	...

9002fa4c <_init>:
9002fa4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002fa4e:	bf00      	nop
9002fa50:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002fa52:	bc08      	pop	{r3}
9002fa54:	469e      	mov	lr, r3
9002fa56:	4770      	bx	lr

9002fa58 <_fini>:
9002fa58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002fa5a:	bf00      	nop
9002fa5c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002fa5e:	bc08      	pop	{r3}
9002fa60:	469e      	mov	lr, r3
9002fa62:	4770      	bx	lr
